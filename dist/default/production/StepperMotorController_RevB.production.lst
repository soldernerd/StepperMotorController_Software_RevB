

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 02 15:33:17 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   256                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   257                           	dabs	1,0x600,512,_msd_buffer
   258                           	dabs	1,0xD00,48,_BDT
   259                           	dabs	1,0xD40,31,_msd_cbw
   260                           	dabs	1,0xD80,13,_msd_csw
   261                           	dabs	1,0xD38,8,_CtrlTrfData
   262                           	dabs	1,0xD30,8,_SetupPkt
   263  0000                     
   264                           ; Version 2.00
   265                           ; Generated 27/05/2018 GMT
   266                           ; 
   267                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   268                           ; All rights reserved.
   269                           ; 
   270                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   271                           ; 
   272                           ; Redistribution and use in source and binary forms, with or without modification, are
   273                           ; permitted provided that the following conditions are met:
   274                           ; 
   275                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   276                           ;        conditions and the following disclaimer.
   277                           ; 
   278                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   279                           ;        of conditions and the following disclaimer in the documentation and/or other
   280                           ;        materials provided with the distribution.
   281                           ; 
   282                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   283                           ;        software without specific prior written permission.
   284                           ; 
   285                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   286                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   287                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   288                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   289                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   290                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   291                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   292                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   293                           ; 
   294                           ; 
   295                           ; Code-generator required, PIC18F47J53 Definitions
   296                           ; 
   297                           ; SFR Addresses
   298  0000                     
   299                           	psect	idataBANK2
   300  014C86                     __pidataBANK2:
   301                           	opt stack 0
   302                           
   303                           ;initializer for _LUN
   304  014C86  C6                 	db	low _ExternalFlash_MediaInitialize
   305  014C87  56                 	db	high _ExternalFlash_MediaInitialize
   306  014C88  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   307  014C89  F2                 	db	low _ExternalFlash_CapacityRead
   308  014C8A  57                 	db	high _ExternalFlash_CapacityRead
   309  014C8B  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   310  014C8C  6E                 	db	low _ExternalFlash_SectorSizeRead
   311  014C8D  58                 	db	high _ExternalFlash_SectorSizeRead
   312  014C8E  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   313  014C8F  AE                 	db	low _ExternalFlash_MediaDetect
   314  014C90  58                 	db	high _ExternalFlash_MediaDetect
   315  014C91  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   316  014C92  1C                 	db	low _ExternalFlash_SectorRead
   317  014C93  52                 	db	high _ExternalFlash_SectorRead
   318  014C94  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   319  014C95  F4                 	db	low _ExternalFlash_WriteProtectStateGet
   320  014C96  58                 	db	high _ExternalFlash_WriteProtectStateGet
   321  014C97  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   322  014C98  E8                 	db	low _ExternalFlash_SectorWrite
   323  014C99  51                 	db	high _ExternalFlash_SectorWrite
   324  014C9A  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   325  014C9B  00                 	db	0
   326  014C9C  00                 	db	0
   327  014C9D  00                 	db	0
   328  014C9E  00                 	db	0
   329  014C9F  00                 	db	0
   330  014CA0  00                 	db	0
   331  014CA1  00                 	db	0
   332  014CA2  00                 	db	0
   333                           
   334                           ;initializer for i2c_display_init@F6951
   335  014CA3  3A                 	db	58
   336  014CA4  1E                 	db	30
   337  014CA5  39                 	db	57
   338  014CA6  0C                 	db	12
   339  014CA7  74                 	db	116
   340  014CA8  5C                 	db	92
   341  014CA9  6D                 	db	109
   342  014CAA  0C                 	db	12
   343  014CAB  01                 	db	1
   344                           
   345                           ;initializer for __i2c_display_send_init_sequence@F6948
   346  014CAC  3A                 	db	58
   347  014CAD  1E                 	db	30
   348  014CAE  39                 	db	57
   349  014CAF  0C                 	db	12
   350  014CB0  74                 	db	116
   351  014CB1  5C                 	db	92
   352  014CB2  6D                 	db	109
   353  014CB3  0C                 	db	12
   354  014CB4  01                 	db	1
   355                           
   356                           ;initializer for _tx_buf
   357  014CB5  01                 	db	1
   358  014CB6  02                 	db	2
   359  014CB7  03                 	db	3
   360  014CB8  04                 	db	4
   361  014CB9  05                 	db	5
   362  014CBA  06                 	db	6
   363  014CBB  07                 	db	7
   364  014CBC  08                 	db	8
   365                           
   366                           ;initializer for _configFile_used_name
   367  014CBD  55                 	db	85
   368  014CBE  53                 	db	83
   369  014CBF  45                 	db	69
   370  014CC0  44                 	db	68
   371  014CC1  43                 	db	67
   372  014CC2  4F                 	db	79
   373  014CC3  4E                 	db	78
   374  014CC4  46                 	db	70
   375                           
   376                           ;initializer for _configFile_name
   377  014CC5  43                 	db	67
   378  014CC6  4F                 	db	79
   379  014CC7  4E                 	db	78
   380  014CC8  46                 	db	70
   381  014CC9  49                 	db	73
   382  014CCA  47                 	db	71
   383  014CCB  20                 	db	32
   384  014CCC  20                 	db	32
   385                           
   386                           ;initializer for _configFile_used_extention
   387  014CCD  54                 	db	84
   388  014CCE  58                 	db	88
   389  014CCF  54                 	db	84
   390                           
   391                           ;initializer for _configFile_extention
   392  014CD0  54                 	db	84
   393  014CD1  58                 	db	88
   394  014CD2  54                 	db	84
   395                           
   396                           	psect	idataBANK4
   397  014AF6                     __pidataBANK4:
   398                           	opt stack 0
   399                           
   400                           ;initializer for _dc_startup
   401  014AF6  2A                 	db	42
   402  014AF7  20                 	db	32
   403  014AF8  20                 	db	32
   404  014AF9  53                 	db	83
   405  014AFA  74                 	db	116
   406  014AFB  65                 	db	101
   407  014AFC  70                 	db	112
   408  014AFD  70                 	db	112
   409  014AFE  65                 	db	101
   410  014AFF  72                 	db	114
   411  014B00  20                 	db	32
   412  014B01  4D                 	db	77
   413  014B02  6F                 	db	111
   414  014B03  74                 	db	116
   415  014B04  6F                 	db	111
   416  014B05  72                 	db	114
   417  014B06  20                 	db	32
   418  014B07  20                 	db	32
   419  014B08  20                 	db	32
   420  014B09  2A                 	db	42
   421  014B0A  2A                 	db	42
   422  014B0B  20                 	db	32
   423  014B0C  20                 	db	32
   424  014B0D  20                 	db	32
   425  014B0E  20                 	db	32
   426  014B0F  43                 	db	67
   427  014B10  6F                 	db	111
   428  014B11  6E                 	db	110
   429  014B12  74                 	db	116
   430  014B13  72                 	db	114
   431  014B14  6F                 	db	111
   432  014B15  6C                 	db	108
   433  014B16  6C                 	db	108
   434  014B17  65                 	db	101
   435  014B18  72                 	db	114
   436  014B19  20                 	db	32
   437  014B1A  20                 	db	32
   438  014B1B  20                 	db	32
   439  014B1C  20                 	db	32
   440  014B1D  2A                 	db	42
   441  014B1E  2A                 	db	42
   442  014B1F  20                 	db	32
   443  014B20  20                 	db	32
   444  014B21  20                 	db	32
   445  014B22  20                 	db	32
   446  014B23  76                 	db	118
   447  014B24  20                 	db	32
   448  014B25  20                 	db	32
   449  014B26  20                 	db	32
   450  014B27  20                 	db	32
   451  014B28  20                 	db	32
   452  014B29  20                 	db	32
   453  014B2A  20                 	db	32
   454  014B2B  20                 	db	32
   455  014B2C  20                 	db	32
   456  014B2D  20                 	db	32
   457  014B2E  20                 	db	32
   458  014B2F  20                 	db	32
   459  014B30  20                 	db	32
   460  014B31  2A                 	db	42
   461  014B32  2A                 	db	42
   462  014B33  20                 	db	32
   463  014B34  20                 	db	32
   464  014B35  73                 	db	115
   465  014B36  6F                 	db	111
   466  014B37  6C                 	db	108
   467  014B38  64                 	db	100
   468  014B39  65                 	db	101
   469  014B3A  72                 	db	114
   470  014B3B  6E                 	db	110
   471  014B3C  65                 	db	101
   472  014B3D  72                 	db	114
   473  014B3E  64                 	db	100
   474  014B3F  2E                 	db	46
   475  014B40  63                 	db	99
   476  014B41  6F                 	db	111
   477  014B42  6D                 	db	109
   478  014B43  20                 	db	32
   479  014B44  20                 	db	32
   480  014B45  2A                 	db	42
   481                           
   482                           	psect	mediumconst
   483  009092                     __pmediumconst:
   484                           	opt stack 0
   485  009092  00                 	db	0
   486  009093                     _motor_speed_lookup:
   487                           	opt stack 0
   488  009093  0008               	dw	8
   489  009095  000C               	dw	12
   490  009097  0010               	dw	16
   491  009099  0013               	dw	19
   492  00909B  0016               	dw	22
   493  00909D  0019               	dw	25
   494  00909F  001C               	dw	28
   495  0090A1  001E               	dw	30
   496  0090A3  0021               	dw	33
   497  0090A5  0023               	dw	35
   498  0090A7  0026               	dw	38
   499  0090A9  0028               	dw	40
   500  0090AB  002A               	dw	42
   501  0090AD  002C               	dw	44
   502  0090AF  002E               	dw	46
   503  0090B1  0030               	dw	48
   504  0090B3  0032               	dw	50
   505  0090B5  0034               	dw	52
   506  0090B7  0036               	dw	54
   507  0090B9  0038               	dw	56
   508  0090BB  003A               	dw	58
   509  0090BD  003C               	dw	60
   510  0090BF  003D               	dw	61
   511  0090C1  003F               	dw	63
   512  0090C3  0041               	dw	65
   513  0090C5  0043               	dw	67
   514  0090C7  0045               	dw	69
   515  0090C9  0046               	dw	70
   516  0090CB  0048               	dw	72
   517  0090CD  0049               	dw	73
   518  0090CF  004B               	dw	75
   519  0090D1  004D               	dw	77
   520  0090D3  004E               	dw	78
   521  0090D5  0050               	dw	80
   522  0090D7  0051               	dw	81
   523  0090D9  0053               	dw	83
   524  0090DB  0054               	dw	84
   525  0090DD  0056               	dw	86
   526  0090DF  0057               	dw	87
   527  0090E1  0059               	dw	89
   528  0090E3  005A               	dw	90
   529  0090E5  005C               	dw	92
   530  0090E7  005D               	dw	93
   531  0090E9  005F               	dw	95
   532  0090EB  0060               	dw	96
   533  0090ED  0062               	dw	98
   534  0090EF  0063               	dw	99
   535  0090F1  0064               	dw	100
   536  0090F3  0066               	dw	102
   537  0090F5  0067               	dw	103
   538  0090F7  0069               	dw	105
   539  0090F9  006A               	dw	106
   540  0090FB  006C               	dw	108
   541  0090FD  006D               	dw	109
   542  0090FF  006E               	dw	110
   543  009101  0070               	dw	112
   544  009103  0071               	dw	113
   545  009105  0072               	dw	114
   546  009107  0073               	dw	115
   547  009109  0074               	dw	116
   548  00910B  0076               	dw	118
   549  00910D  0078               	dw	120
   550  00910F  0079               	dw	121
   551  009111  007A               	dw	122
   552  009113  007B               	dw	123
   553  009115  007D               	dw	125
   554  009117  007E               	dw	126
   555  009119  007F               	dw	127
   556  00911B  0082               	dw	130
   557  00911D  0085               	dw	133
   558  00911F  0087               	dw	135
   559  009121  008A               	dw	138
   560  009123  008C               	dw	140
   561  009125  008F               	dw	143
   562  009127  0091               	dw	145
   563  009129  0092               	dw	146
   564  00912B  0094               	dw	148
   565  00912D  0098               	dw	152
   566  00912F  009A               	dw	154
   567  009131  009C               	dw	156
   568  009133  009E               	dw	158
   569  009135  00A1               	dw	161
   570  009137  00A3               	dw	163
   571  009139  00A5               	dw	165
   572  00913B  00A7               	dw	167
   573  00913D  00AA               	dw	170
   574  00913F  00AC               	dw	172
   575  009141  00AF               	dw	175
   576  009143  00B2               	dw	178
   577  009145  00B4               	dw	180
   578  009147  00B7               	dw	183
   579  009149  00B8               	dw	184
   580  00914B  00BA               	dw	186
   581  00914D  00BC               	dw	188
   582  00914F  00BE               	dw	190
   583  009151  00C0               	dw	192
   584  009153  00C3               	dw	195
   585  009155  00C4               	dw	196
   586  009157  00C6               	dw	198
   587  009159  00C8               	dw	200
   588  00915B  00CA               	dw	202
   589  00915D  00CC               	dw	204
   590  00915F  00CE               	dw	206
   591  009161  00D0               	dw	208
   592  009163  00D2               	dw	210
   593  009165  00D4               	dw	212
   594  009167  00D6               	dw	214
   595  009169  00D8               	dw	216
   596  00916B  00D9               	dw	217
   597  00916D  00DB               	dw	219
   598  00916F  00DD               	dw	221
   599  009171  00DF               	dw	223
   600  009173  00E1               	dw	225
   601  009175  00E2               	dw	226
   602  009177  00E5               	dw	229
   603  009179  00E7               	dw	231
   604  00917B  00E8               	dw	232
   605  00917D  00EA               	dw	234
   606  00917F  00EC               	dw	236
   607  009181  00EE               	dw	238
   608  009183  00EF               	dw	239
   609  009185  00F2               	dw	242
   610  009187  00F3               	dw	243
   611  009189  00F5               	dw	245
   612  00918B  00F7               	dw	247
   613  00918D  00F8               	dw	248
   614  00918F  00FB               	dw	251
   615  009191  00FD               	dw	253
   616  009193  0100               	dw	256
   617  009195  0103               	dw	259
   618  009197  0104               	dw	260
   619  009199  0107               	dw	263
   620  00919B  010A               	dw	266
   621  00919D  010C               	dw	268
   622  00919F  010F               	dw	271
   623  0091A1  0112               	dw	274
   624  0091A3  0114               	dw	276
   625  0091A5  0117               	dw	279
   626  0091A7  0119               	dw	281
   627  0091A9  011C               	dw	284
   628  0091AB  011E               	dw	286
   629  0091AD  0121               	dw	289
   630  0091AF  0123               	dw	291
   631  0091B1  0125               	dw	293
   632  0091B3  0129               	dw	297
   633  0091B5  012B               	dw	299
   634  0091B7  012C               	dw	300
   635  0091B9  012E               	dw	302
   636  0091BB  0132               	dw	306
   637  0091BD  0134               	dw	308
   638  0091BF  0136               	dw	310
   639  0091C1  0138               	dw	312
   640  0091C3  013B               	dw	315
   641  0091C5  013D               	dw	317
   642  0091C7  013F               	dw	319
   643  0091C9  0143               	dw	323
   644  0091CB  0146               	dw	326
   645  0091CD  0148               	dw	328
   646  0091CF  014A               	dw	330
   647  0091D1  014C               	dw	332
   648  0091D3  014F               	dw	335
   649  0091D5  0151               	dw	337
   650  0091D7  0154               	dw	340
   651  0091D9  0156               	dw	342
   652  0091DB  0159               	dw	345
   653  0091DD  015B               	dw	347
   654  0091DF  015E               	dw	350
   655  0091E1  0160               	dw	352
   656  0091E3  0163               	dw	355
   657  0091E5  0166               	dw	358
   658  0091E7  0169               	dw	361
   659  0091E9  016B               	dw	363
   660  0091EB  016E               	dw	366
   661  0091ED  0171               	dw	369
   662  0091EF  0174               	dw	372
   663  0091F1  0177               	dw	375
   664  0091F3  017A               	dw	378
   665  0091F5  017D               	dw	381
   666  0091F7  0180               	dw	384
   667  0091F9  0183               	dw	387
   668  0091FB  0187               	dw	391
   669  0091FD  018A               	dw	394
   670  0091FF  018D               	dw	397
   671  009201  0191               	dw	401
   672  009203  0194               	dw	404
   673  009205  0198               	dw	408
   674  009207  019B               	dw	411
   675  009209  019F               	dw	415
   676  00920B  01A3               	dw	419
   677  00920D  01A6               	dw	422
   678  00920F  01AA               	dw	426
   679  009211  01AE               	dw	430
   680  009213  01B2               	dw	434
   681  009215  01B6               	dw	438
   682  009217  01BA               	dw	442
   683  009219  01BE               	dw	446
   684  00921B  01C3               	dw	451
   685  00921D  01C7               	dw	455
   686  00921F  01CC               	dw	460
   687  009221  01D0               	dw	464
   688  009223  01D5               	dw	469
   689  009225  01D9               	dw	473
   690  009227  01DE               	dw	478
   691  009229  01E3               	dw	483
   692  00922B  01E8               	dw	488
   693  00922D  01ED               	dw	493
   694  00922F  01F3               	dw	499
   695  009231  01F8               	dw	504
   696  009233  01FE               	dw	510
   697  009235  0203               	dw	515
   698  009237  0209               	dw	521
   699  009239  020F               	dw	527
   700  00923B  0215               	dw	533
   701  00923D  021B               	dw	539
   702  00923F  0221               	dw	545
   703  009241  0227               	dw	551
   704  009243  022E               	dw	558
   705  009245  0235               	dw	565
   706  009247  023C               	dw	572
   707  009249  0243               	dw	579
   708  00924B  024A               	dw	586
   709  00924D  0251               	dw	593
   710  00924F  0259               	dw	601
   711  009251  0261               	dw	609
   712  009253  0269               	dw	617
   713  009255  0271               	dw	625
   714  009257  0279               	dw	633
   715  009259  0282               	dw	642
   716  00925B  028B               	dw	651
   717  00925D  0294               	dw	660
   718  00925F  029E               	dw	670
   719  009261  02A7               	dw	679
   720  009263  02B1               	dw	689
   721  009265  02BC               	dw	700
   722  009267  02C6               	dw	710
   723  009269  02D1               	dw	721
   724  00926B  02DC               	dw	732
   725  00926D  02DC               	dw	732
   726  00926F  02DF               	dw	735
   727  009271  02E2               	dw	738
   728  009273  02E5               	dw	741
   729  009275  02E8               	dw	744
   730  009277  02EB               	dw	747
   731  009279  02EE               	dw	750
   732  00927B  02F1               	dw	753
   733  00927D  02F4               	dw	756
   734  00927F  02F7               	dw	759
   735  009281  02FA               	dw	762
   736  009283  02FD               	dw	765
   737  009285  0300               	dw	768
   738  009287  0304               	dw	772
   739  009289  0307               	dw	775
   740  00928B  030A               	dw	778
   741  00928D  030D               	dw	781
   742  00928F  0311               	dw	785
   743  009291  0314               	dw	788
   744  009293  0317               	dw	791
   745  009295  031A               	dw	794
   746  009297  031E               	dw	798
   747  009299  0321               	dw	801
   748  00929B  0325               	dw	805
   749  00929D  0328               	dw	808
   750  00929F  032C               	dw	812
   751  0092A1  032F               	dw	815
   752  0092A3  0333               	dw	819
   753  0092A5  0336               	dw	822
   754  0092A7  033A               	dw	826
   755  0092A9  033E               	dw	830
   756  0092AB  0341               	dw	833
   757  0092AD  0345               	dw	837
   758  0092AF  0349               	dw	841
   759  0092B1  034D               	dw	845
   760  0092B3  0350               	dw	848
   761  0092B5  0354               	dw	852
   762  0092B7  0358               	dw	856
   763  0092B9  035C               	dw	860
   764  0092BB  0360               	dw	864
   765  0092BD  0364               	dw	868
   766  0092BF  0368               	dw	872
   767  0092C1  036C               	dw	876
   768  0092C3  0370               	dw	880
   769  0092C5  0374               	dw	884
   770  0092C7  0379               	dw	889
   771  0092C9  037D               	dw	893
   772  0092CB  0381               	dw	897
   773  0092CD  0385               	dw	901
   774  0092CF  038A               	dw	906
   775  0092D1  038E               	dw	910
   776  0092D3  0393               	dw	915
   777  0092D5  0397               	dw	919
   778  0092D7  039C               	dw	924
   779  0092D9  03A0               	dw	928
   780  0092DB  03A5               	dw	933
   781  0092DD  03AA               	dw	938
   782  0092DF  03AE               	dw	942
   783  0092E1  03B3               	dw	947
   784  0092E3  03B8               	dw	952
   785  0092E5  03BD               	dw	957
   786  0092E7  03C2               	dw	962
   787  0092E9  03C6               	dw	966
   788  0092EB  03CC               	dw	972
   789  0092ED  03D1               	dw	977
   790  0092EF  03D6               	dw	982
   791  0092F1  03DB               	dw	987
   792  0092F3  03E0               	dw	992
   793  0092F5  03E5               	dw	997
   794  0092F7  03EB               	dw	1003
   795  0092F9  03F0               	dw	1008
   796  0092FB  03F6               	dw	1014
   797  0092FD  03FB               	dw	1019
   798  0092FF  0401               	dw	1025
   799  009301  0406               	dw	1030
   800  009303  040C               	dw	1036
   801  009305  0412               	dw	1042
   802  009307  0417               	dw	1047
   803  009309  041D               	dw	1053
   804  00930B  0423               	dw	1059
   805  00930D  0429               	dw	1065
   806  00930F  042F               	dw	1071
   807  009311  0436               	dw	1078
   808  009313  043C               	dw	1084
   809  009315  0442               	dw	1090
   810  009317  0448               	dw	1096
   811  009319  044F               	dw	1103
   812  00931B  0455               	dw	1109
   813  00931D  045C               	dw	1116
   814  00931F  0463               	dw	1123
   815  009321  046A               	dw	1130
   816  009323  0470               	dw	1136
   817  009325  0477               	dw	1143
   818  009327  047E               	dw	1150
   819  009329  0485               	dw	1157
   820  00932B  048D               	dw	1165
   821  00932D  0494               	dw	1172
   822  00932F  049B               	dw	1179
   823  009331  04A3               	dw	1187
   824  009333  04AA               	dw	1194
   825  009335  04B2               	dw	1202
   826  009337  04BA               	dw	1210
   827  009339  04C2               	dw	1218
   828  00933B  04C9               	dw	1225
   829  00933D  04D2               	dw	1234
   830  00933F  04DA               	dw	1242
   831  009341  04E2               	dw	1250
   832  009343  04EA               	dw	1258
   833  009345  04F3               	dw	1267
   834  009347  04FC               	dw	1276
   835  009349  0504               	dw	1284
   836  00934B  050D               	dw	1293
   837  00934D  0516               	dw	1302
   838  00934F  051F               	dw	1311
   839  009351  0528               	dw	1320
   840  009353  0532               	dw	1330
   841  009355  053B               	dw	1339
   842  009357  0545               	dw	1349
   843  009359  054F               	dw	1359
   844  00935B  0559               	dw	1369
   845  00935D  0563               	dw	1379
   846  00935F  056D               	dw	1389
   847  009361  0577               	dw	1399
   848  009363  0582               	dw	1410
   849  009365  058C               	dw	1420
   850  009367  0597               	dw	1431
   851  009369  05A2               	dw	1442
   852  00936B  05AD               	dw	1453
   853  00936D  05B9               	dw	1465
   854  00936F  05C4               	dw	1476
   855  009371  05D0               	dw	1488
   856  009373  05DC               	dw	1500
   857  009375  05E8               	dw	1512
   858  009377  05F4               	dw	1524
   859  009379  0601               	dw	1537
   860  00937B  060E               	dw	1550
   861  00937D  061A               	dw	1562
   862  00937F  0628               	dw	1576
   863  009381  0635               	dw	1589
   864  009383  0643               	dw	1603
   865  009385  0650               	dw	1616
   866  009387  065E               	dw	1630
   867  009389  066D               	dw	1645
   868  00938B  067B               	dw	1659
   869  00938D  068A               	dw	1674
   870  00938F  0699               	dw	1689
   871  009391  06A9               	dw	1705
   872  009393  06B8               	dw	1720
   873  009395  06C8               	dw	1736
   874  009397  06D8               	dw	1752
   875  009399  06E9               	dw	1769
   876  00939B  06FA               	dw	1786
   877  00939D  070B               	dw	1803
   878  00939F  071C               	dw	1820
   879  0093A1  072E               	dw	1838
   880  0093A3  0740               	dw	1856
   881  0093A5  0753               	dw	1875
   882  0093A7  0766               	dw	1894
   883  0093A9  0779               	dw	1913
   884  0093AB  078D               	dw	1933
   885  0093AD  07A1               	dw	1953
   886  0093AF  07B6               	dw	1974
   887  0093B1  07CB               	dw	1995
   888  0093B3  07E0               	dw	2016
   889  0093B5  07F6               	dw	2038
   890  0093B7  080C               	dw	2060
   891  0093B9  0823               	dw	2083
   892  0093BB  083B               	dw	2107
   893  0093BD  0853               	dw	2131
   894  0093BF  086B               	dw	2155
   895  0093C1  0884               	dw	2180
   896  0093C3  089E               	dw	2206
   897  0093C5  08B8               	dw	2232
   898  0093C7  08D3               	dw	2259
   899  0093C9  08EF               	dw	2287
   900  0093CB  090B               	dw	2315
   901  0093CD  0928               	dw	2344
   902  0093CF  0945               	dw	2373
   903  0093D1  0964               	dw	2404
   904  0093D3  0983               	dw	2435
   905  0093D5  09A3               	dw	2467
   906  0093D7  09C4               	dw	2500
   907  0093D9  09E6               	dw	2534
   908  0093DB  0A08               	dw	2568
   909  0093DD  0A2C               	dw	2604
   910  0093DF  0A51               	dw	2641
   911  0093E1  0A77               	dw	2679
   912  0093E3  0A9D               	dw	2717
   913  0093E5  0AC5               	dw	2757
   914  0093E7  0AEF               	dw	2799
   915  0093E9  0B19               	dw	2841
   916  0093EB  0B45               	dw	2885
   917  0093ED  0B72               	dw	2930
   918  0093EF  0B72               	dw	2930
   919  0093F1  0B7D               	dw	2941
   920  0093F3  0B89               	dw	2953
   921  0093F5  0B94               	dw	2964
   922  0093F7  0BA0               	dw	2976
   923  0093F9  0BAC               	dw	2988
   924  0093FB  0BB8               	dw	3000
   925  0093FD  0BC4               	dw	3012
   926  0093FF  0BD0               	dw	3024
   927  009401  0BDC               	dw	3036
   928  009403  0BE9               	dw	3049
   929  009405  0BF5               	dw	3061
   930  009407  0C02               	dw	3074
   931  009409  0C0E               	dw	3086
   932  00940B  0C1B               	dw	3099
   933  00940D  0C28               	dw	3112
   934  00940F  0C35               	dw	3125
   935  009411  0C42               	dw	3138
   936  009413  0C4F               	dw	3151
   937  009415  0C5D               	dw	3165
   938  009417  0C6A               	dw	3178
   939  009419  0C77               	dw	3191
   940  00941B  0C85               	dw	3205
   941  00941D  0C93               	dw	3219
   942  00941F  0CA1               	dw	3233
   943  009421  0CAF               	dw	3247
   944  009423  0CBD               	dw	3261
   945  009425  0CCB               	dw	3275
   946  009427  0CD9               	dw	3289
   947  009429  0CE8               	dw	3304
   948  00942B  0CF7               	dw	3319
   949  00942D  0D05               	dw	3333
   950  00942F  0D14               	dw	3348
   951  009431  0D23               	dw	3363
   952  009433  0D32               	dw	3378
   953  009435  0D42               	dw	3394
   954  009437  0D51               	dw	3409
   955  009439  0D61               	dw	3425
   956  00943B  0D70               	dw	3440
   957  00943D  0D80               	dw	3456
   958  00943F  0D90               	dw	3472
   959  009441  0DA0               	dw	3488
   960  009443  0DB1               	dw	3505
   961  009445  0DC1               	dw	3521
   962  009447  0DD2               	dw	3538
   963  009449  0DE3               	dw	3555
   964  00944B  0DF3               	dw	3571
   965  00944D  0E05               	dw	3589
   966  00944F  0E16               	dw	3606
   967  009451  0E27               	dw	3623
   968  009453  0E39               	dw	3641
   969  009455  0E4B               	dw	3659
   970  009457  0E5C               	dw	3676
   971  009459  0E6F               	dw	3695
   972  00945B  0E81               	dw	3713
   973  00945D  0E93               	dw	3731
   974  00945F  0EA6               	dw	3750
   975  009461                     __end_of_motor_speed_lookup:
   976                           	opt stack 0
   977  009461                     _motor_steps_lookup:
   978                           	opt stack 0
   979  009461  0001               	dw	1
   980  009463  0002               	dw	2
   981  009465  0003               	dw	3
   982  009467  0004               	dw	4
   983  009469  0005               	dw	5
   984  00946B  0006               	dw	6
   985  00946D  0007               	dw	7
   986  00946F  0008               	dw	8
   987  009471  0009               	dw	9
   988  009473  000A               	dw	10
   989  009475  000B               	dw	11
   990  009477  000C               	dw	12
   991  009479  000D               	dw	13
   992  00947B  000E               	dw	14
   993  00947D  000F               	dw	15
   994  00947F  0010               	dw	16
   995  009481  0011               	dw	17
   996  009483  0012               	dw	18
   997  009485  0013               	dw	19
   998  009487  0014               	dw	20
   999  009489  0015               	dw	21
  1000  00948B  0016               	dw	22
  1001  00948D  0017               	dw	23
  1002  00948F  0018               	dw	24
  1003  009491  0019               	dw	25
  1004  009493  001A               	dw	26
  1005  009495  001B               	dw	27
  1006  009497  001C               	dw	28
  1007  009499  001D               	dw	29
  1008  00949B  001E               	dw	30
  1009  00949D  001F               	dw	31
  1010  00949F  0020               	dw	32
  1011  0094A1  0021               	dw	33
  1012  0094A3  0022               	dw	34
  1013  0094A5  0023               	dw	35
  1014  0094A7  0024               	dw	36
  1015  0094A9  0025               	dw	37
  1016  0094AB  0026               	dw	38
  1017  0094AD  0027               	dw	39
  1018  0094AF  0028               	dw	40
  1019  0094B1  0029               	dw	41
  1020  0094B3  002A               	dw	42
  1021  0094B5  002B               	dw	43
  1022  0094B7  002C               	dw	44
  1023  0094B9  002D               	dw	45
  1024  0094BB  002E               	dw	46
  1025  0094BD  002F               	dw	47
  1026  0094BF  0030               	dw	48
  1027  0094C1  0031               	dw	49
  1028  0094C3  0032               	dw	50
  1029  0094C5  0033               	dw	51
  1030  0094C7  0034               	dw	52
  1031  0094C9  0035               	dw	53
  1032  0094CB  0036               	dw	54
  1033  0094CD  0037               	dw	55
  1034  0094CF  0038               	dw	56
  1035  0094D1  0039               	dw	57
  1036  0094D3  003A               	dw	58
  1037  0094D5  003B               	dw	59
  1038  0094D7  003C               	dw	60
  1039  0094D9  003D               	dw	61
  1040  0094DB  003E               	dw	62
  1041  0094DD  003F               	dw	63
  1042  0094DF  0040               	dw	64
  1043  0094E1  0041               	dw	65
  1044  0094E3  0042               	dw	66
  1045  0094E5  0043               	dw	67
  1046  0094E7  0045               	dw	69
  1047  0094E9  0047               	dw	71
  1048  0094EB  0049               	dw	73
  1049  0094ED  004B               	dw	75
  1050  0094EF  004D               	dw	77
  1051  0094F1  004F               	dw	79
  1052  0094F3  0051               	dw	81
  1053  0094F5  0053               	dw	83
  1054  0094F7  0055               	dw	85
  1055  0094F9  0057               	dw	87
  1056  0094FB  0059               	dw	89
  1057  0094FD  005B               	dw	91
  1058  0094FF  005D               	dw	93
  1059  009501  005F               	dw	95
  1060  009503  0061               	dw	97
  1061  009505  0063               	dw	99
  1062  009507  0065               	dw	101
  1063  009509  0067               	dw	103
  1064  00950B  0069               	dw	105
  1065  00950D  006B               	dw	107
  1066  00950F  006E               	dw	110
  1067  009511  0070               	dw	112
  1068  009513  0073               	dw	115
  1069  009515  0075               	dw	117
  1070  009517  0077               	dw	119
  1071  009519  0079               	dw	121
  1072  00951B  007B               	dw	123
  1073  00951D  007D               	dw	125
  1074  00951F  007F               	dw	127
  1075  009521  0081               	dw	129
  1076  009523  0083               	dw	131
  1077  009525  0085               	dw	133
  1078  009527  0087               	dw	135
  1079  009529  0089               	dw	137
  1080  00952B  008B               	dw	139
  1081  00952D  008D               	dw	141
  1082  00952F  008F               	dw	143
  1083  009531  0091               	dw	145
  1084  009533  0093               	dw	147
  1085  009535  0095               	dw	149
  1086  009537  0097               	dw	151
  1087  009539  0099               	dw	153
  1088  00953B  009B               	dw	155
  1089  00953D  009D               	dw	157
  1090  00953F  009F               	dw	159
  1091  009541  00A1               	dw	161
  1092  009543  00A3               	dw	163
  1093  009545  00A5               	dw	165
  1094  009547  00A7               	dw	167
  1095  009549  00A9               	dw	169
  1096  00954B  00AB               	dw	171
  1097  00954D  00AD               	dw	173
  1098  00954F  00AF               	dw	175
  1099  009551  00B1               	dw	177
  1100  009553  00B3               	dw	179
  1101  009555  00B5               	dw	181
  1102  009557  00B7               	dw	183
  1103  009559  00B9               	dw	185
  1104  00955B  00BB               	dw	187
  1105  00955D  00BD               	dw	189
  1106  00955F  00C0               	dw	192
  1107  009561  00C3               	dw	195
  1108  009563  00C6               	dw	198
  1109  009565  00C9               	dw	201
  1110  009567  00CC               	dw	204
  1111  009569  00CF               	dw	207
  1112  00956B  00D2               	dw	210
  1113  00956D  00D5               	dw	213
  1114  00956F  00D8               	dw	216
  1115  009571  00DB               	dw	219
  1116  009573  00DE               	dw	222
  1117  009575  00E1               	dw	225
  1118  009577  00E4               	dw	228
  1119  009579  00E7               	dw	231
  1120  00957B  00EA               	dw	234
  1121  00957D  00ED               	dw	237
  1122  00957F  00F0               	dw	240
  1123  009581  00F3               	dw	243
  1124  009583  00F6               	dw	246
  1125  009585  00F9               	dw	249
  1126  009587  00FC               	dw	252
  1127  009589  00FF               	dw	255
  1128  00958B  0102               	dw	258
  1129  00958D  0105               	dw	261
  1130  00958F  0108               	dw	264
  1131  009591  010B               	dw	267
  1132  009593  010E               	dw	270
  1133  009595  0111               	dw	273
  1134  009597  0114               	dw	276
  1135  009599  0117               	dw	279
  1136  00959B  011A               	dw	282
  1137  00959D  011D               	dw	285
  1138  00959F  0120               	dw	288
  1139  0095A1  0123               	dw	291
  1140  0095A3  0126               	dw	294
  1141  0095A5  012A               	dw	298
  1142  0095A7  012D               	dw	301
  1143  0095A9  0130               	dw	304
  1144  0095AB  0133               	dw	307
  1145  0095AD  0137               	dw	311
  1146  0095AF  013A               	dw	314
  1147  0095B1  013E               	dw	318
  1148  0095B3  0142               	dw	322
  1149  0095B5  0145               	dw	325
  1150  0095B7  0149               	dw	329
  1151  0095B9  014D               	dw	333
  1152  0095BB  0151               	dw	337
  1153  0095BD  0155               	dw	341
  1154  0095BF  0159               	dw	345
  1155  0095C1  015D               	dw	349
  1156  0095C3  0161               	dw	353
  1157  0095C5  0166               	dw	358
  1158  0095C7  016A               	dw	362
  1159  0095C9  016E               	dw	366
  1160  0095CB  0173               	dw	371
  1161  0095CD  0178               	dw	376
  1162  0095CF  017D               	dw	381
  1163  0095D1  0182               	dw	386
  1164  0095D3  0187               	dw	391
  1165  0095D5  018C               	dw	396
  1166  0095D7  0191               	dw	401
  1167  0095D9  0196               	dw	406
  1168  0095DB  019C               	dw	412
  1169  0095DD  01A1               	dw	417
  1170  0095DF  01A7               	dw	423
  1171  0095E1  01AD               	dw	429
  1172  0095E3  01B3               	dw	435
  1173  0095E5  01B9               	dw	441
  1174  0095E7  01BF               	dw	447
  1175  0095E9  01C6               	dw	454
  1176  0095EB  01CC               	dw	460
  1177  0095ED  01D3               	dw	467
  1178  0095EF  01DA               	dw	474
  1179  0095F1  01E1               	dw	481
  1180  0095F3  01E8               	dw	488
  1181  0095F5  01F0               	dw	496
  1182  0095F7  01F7               	dw	503
  1183  0095F9  01FF               	dw	511
  1184  0095FB  0207               	dw	519
  1185  0095FD  020F               	dw	527
  1186  0095FF  0218               	dw	536
  1187  009601  0221               	dw	545
  1188  009603  022A               	dw	554
  1189  009605  0233               	dw	563
  1190  009607  023D               	dw	573
  1191  009609  0247               	dw	583
  1192  00960B  0251               	dw	593
  1193  00960D  025C               	dw	604
  1194  00960F  0267               	dw	615
  1195  009611  0272               	dw	626
  1196  009613  027E               	dw	638
  1197  009615  028A               	dw	650
  1198  009617  0297               	dw	663
  1199  009619  02A4               	dw	676
  1200  00961B  02B2               	dw	690
  1201  00961D  02C0               	dw	704
  1202  00961F  02CF               	dw	719
  1203  009621  02DF               	dw	735
  1204  009623  02EF               	dw	751
  1205  009625  02FF               	dw	767
  1206  009627  0311               	dw	785
  1207  009629  0323               	dw	803
  1208  00962B  0336               	dw	822
  1209  00962D  0349               	dw	841
  1210  00962F  035E               	dw	862
  1211  009631  0373               	dw	883
  1212  009633  0389               	dw	905
  1213  009635  03A1               	dw	929
  1214  009637  03B9               	dw	953
  1215  009639  03D3               	dw	979
  1216  00963B  03DD               	dw	989
  1217  00963D  03E4               	dw	996
  1218  00963F  03EA               	dw	1002
  1219  009641  03F1               	dw	1009
  1220  009643  03F8               	dw	1016
  1221  009645  03FF               	dw	1023
  1222  009647  0406               	dw	1030
  1223  009649  040D               	dw	1037
  1224  00964B  0415               	dw	1045
  1225  00964D  041C               	dw	1052
  1226  00964F  0424               	dw	1060
  1227  009651  042B               	dw	1067
  1228  009653  0433               	dw	1075
  1229  009655  043B               	dw	1083
  1230  009657  0442               	dw	1090
  1231  009659  044A               	dw	1098
  1232  00965B  0452               	dw	1106
  1233  00965D  045A               	dw	1114
  1234  00965F  0463               	dw	1123
  1235  009661  046B               	dw	1131
  1236  009663  0474               	dw	1140
  1237  009665  047C               	dw	1148
  1238  009667  0485               	dw	1157
  1239  009669  048E               	dw	1166
  1240  00966B  0496               	dw	1174
  1241  00966D  049F               	dw	1183
  1242  00966F  04A9               	dw	1193
  1243  009671  04B2               	dw	1202
  1244  009673  04BB               	dw	1211
  1245  009675  04C5               	dw	1221
  1246  009677  04CE               	dw	1230
  1247  009679  04D8               	dw	1240
  1248  00967B  04E2               	dw	1250
  1249  00967D  04EC               	dw	1260
  1250  00967F  04F6               	dw	1270
  1251  009681  0500               	dw	1280
  1252  009683  050B               	dw	1291
  1253  009685  0515               	dw	1301
  1254  009687  0520               	dw	1312
  1255  009689  052B               	dw	1323
  1256  00968B  0536               	dw	1334
  1257  00968D  0541               	dw	1345
  1258  00968F  054C               	dw	1356
  1259  009691  0558               	dw	1368
  1260  009693  0564               	dw	1380
  1261  009695  056F               	dw	1391
  1262  009697  057B               	dw	1403
  1263  009699  0587               	dw	1415
  1264  00969B  0594               	dw	1428
  1265  00969D  05A0               	dw	1440
  1266  00969F  05AD               	dw	1453
  1267  0096A1  05BA               	dw	1466
  1268  0096A3  05C7               	dw	1479
  1269  0096A5  05D4               	dw	1492
  1270  0096A7  05E2               	dw	1506
  1271  0096A9  05EF               	dw	1519
  1272  0096AB  05FD               	dw	1533
  1273  0096AD  060B               	dw	1547
  1274  0096AF  0619               	dw	1561
  1275  0096B1  0628               	dw	1576
  1276  0096B3  0637               	dw	1591
  1277  0096B5  0646               	dw	1606
  1278  0096B7  0655               	dw	1621
  1279  0096B9  0664               	dw	1636
  1280  0096BB  0674               	dw	1652
  1281  0096BD  0684               	dw	1668
  1282  0096BF  0694               	dw	1684
  1283  0096C1  06A4               	dw	1700
  1284  0096C3  06B5               	dw	1717
  1285  0096C5  06C6               	dw	1734
  1286  0096C7  06D7               	dw	1751
  1287  0096C9  06E9               	dw	1769
  1288  0096CB  06FA               	dw	1786
  1289  0096CD  070C               	dw	1804
  1290  0096CF  071F               	dw	1823
  1291  0096D1  0731               	dw	1841
  1292  0096D3  0744               	dw	1860
  1293  0096D5  0758               	dw	1880
  1294  0096D7  076B               	dw	1899
  1295  0096D9  077F               	dw	1919
  1296  0096DB  0793               	dw	1939
  1297  0096DD  07A8               	dw	1960
  1298  0096DF  07BD               	dw	1981
  1299  0096E1  07D2               	dw	2002
  1300  0096E3  07E8               	dw	2024
  1301  0096E5  07FE               	dw	2046
  1302  0096E7  0815               	dw	2069
  1303  0096E9  082C               	dw	2092
  1304  0096EB  0843               	dw	2115
  1305  0096ED  085B               	dw	2139
  1306  0096EF  0873               	dw	2163
  1307  0096F1  088B               	dw	2187
  1308  0096F3  08A5               	dw	2213
  1309  0096F5  08BE               	dw	2238
  1310  0096F7  08D8               	dw	2264
  1311  0096F9  08F2               	dw	2290
  1312  0096FB  090D               	dw	2317
  1313  0096FD  0929               	dw	2345
  1314  0096FF  0945               	dw	2373
  1315  009701  0961               	dw	2401
  1316  009703  097E               	dw	2430
  1317  009705  099C               	dw	2460
  1318  009707  09BA               	dw	2490
  1319  009709  09D9               	dw	2521
  1320  00970B  09F9               	dw	2553
  1321  00970D  0A19               	dw	2585
  1322  00970F  0A39               	dw	2617
  1323  009711  0A5B               	dw	2651
  1324  009713  0A7D               	dw	2685
  1325  009715  0A9F               	dw	2719
  1326  009717  0AC3               	dw	2755
  1327  009719  0AE7               	dw	2791
  1328  00971B  0B0C               	dw	2828
  1329  00971D  0B31               	dw	2865
  1330  00971F  0B58               	dw	2904
  1331  009721  0B7F               	dw	2943
  1332  009723  0BA7               	dw	2983
  1333  009725  0BD0               	dw	3024
  1334  009727  0BFA               	dw	3066
  1335  009729  0C25               	dw	3109
  1336  00972B  0C51               	dw	3153
  1337  00972D  0C7E               	dw	3198
  1338  00972F  0CAB               	dw	3243
  1339  009731  0CDA               	dw	3290
  1340  009733  0D0A               	dw	3338
  1341  009735  0D3B               	dw	3387
  1342  009737  0D6D               	dw	3437
  1343  009739  0DA0               	dw	3488
  1344  00973B  0DD4               	dw	3540
  1345  00973D  0E0A               	dw	3594
  1346  00973F  0E41               	dw	3649
  1347  009741  0E79               	dw	3705
  1348  009743  0EB3               	dw	3763
  1349  009745  0EEE               	dw	3822
  1350  009747  0F2A               	dw	3882
  1351  009749  0F68               	dw	3944
  1352  00974B  0FA8               	dw	4008
  1353  00974D  0FE9               	dw	4073
  1354  00974F  102C               	dw	4140
  1355  009751  1070               	dw	4208
  1356  009753  10B6               	dw	4278
  1357  009755  10FE               	dw	4350
  1358  009757  1148               	dw	4424
  1359  009759  1194               	dw	4500
  1360  00975B  11E2               	dw	4578
  1361  00975D  1232               	dw	4658
  1362  00975F  1285               	dw	4741
  1363  009761  12D9               	dw	4825
  1364  009763  1330               	dw	4912
  1365  009765  1389               	dw	5001
  1366  009767  13E5               	dw	5093
  1367  009769  1444               	dw	5188
  1368  00976B  14A5               	dw	5285
  1369  00976D  1509               	dw	5385
  1370  00976F  1570               	dw	5488
  1371  009771  15DA               	dw	5594
  1372  009773  1647               	dw	5703
  1373  009775  16B8               	dw	5816
  1374  009777  172B               	dw	5931
  1375  009779  17A3               	dw	6051
  1376  00977B  181E               	dw	6174
  1377  00977D  189D               	dw	6301
  1378  00977F  1921               	dw	6433
  1379  009781  19A8               	dw	6568
  1380  009783  1A34               	dw	6708
  1381  009785  1AC4               	dw	6852
  1382  009787  1B5A               	dw	7002
  1383  009789  1BF4               	dw	7156
  1384  00978B  1C94               	dw	7316
  1385  00978D  1D39               	dw	7481
  1386  00978F  1DE4               	dw	7652
  1387  009791  1E95               	dw	7829
  1388  009793  1F4C               	dw	8012
  1389  009795  200A               	dw	8202
  1390  009797  20CE               	dw	8398
  1391  009799  219A               	dw	8602
  1392  00979B  226E               	dw	8814
  1393  00979D  234A               	dw	9034
  1394  00979F  242E               	dw	9262
  1395  0097A1  251B               	dw	9499
  1396  0097A3  2612               	dw	9746
  1397  0097A5  2712               	dw	10002
  1398  0097A7  281D               	dw	10269
  1399  0097A9  2932               	dw	10546
  1400  0097AB  2A53               	dw	10835
  1401  0097AD  2B81               	dw	11137
  1402  0097AF  2CBB               	dw	11451
  1403  0097B1  2E03               	dw	11779
  1404  0097B3  2F5A               	dw	12122
  1405  0097B5  30C0               	dw	12480
  1406  0097B7  3236               	dw	12854
  1407  0097B9  33BD               	dw	13245
  1408  0097BB  3557               	dw	13655
  1409  0097BD  35F5               	dw	13813
  1410  0097BF  3661               	dw	13921
  1411  0097C1  36CD               	dw	14029
  1412  0097C3  373B               	dw	14139
  1413  0097C5  37AA               	dw	14250
  1414  0097C7  381B               	dw	14363
  1415  0097C9  388C               	dw	14476
  1416  0097CB  3900               	dw	14592
  1417  0097CD  3974               	dw	14708
  1418  0097CF  39EA               	dw	14826
  1419  0097D1  3A62               	dw	14946
  1420  0097D3  3ADB               	dw	15067
  1421  0097D5  3B55               	dw	15189
  1422  0097D7  3BD1               	dw	15313
  1423  0097D9  3C4E               	dw	15438
  1424  0097DB  3CCD               	dw	15565
  1425  0097DD  3D4E               	dw	15694
  1426  0097DF  3DD0               	dw	15824
  1427  0097E1  3E54               	dw	15956
  1428  0097E3  3EDA               	dw	16090
  1429  0097E5  3F61               	dw	16225
  1430  0097E7  3FEA               	dw	16362
  1431  0097E9  4074               	dw	16500
  1432  0097EB  4101               	dw	16641
  1433  0097ED  418F               	dw	16783
  1434  0097EF  421F               	dw	16927
  1435  0097F1  42B1               	dw	17073
  1436  0097F3  4345               	dw	17221
  1437  0097F5  43DB               	dw	17371
  1438  0097F7  4473               	dw	17523
  1439  0097F9  450D               	dw	17677
  1440  0097FB  45A9               	dw	17833
  1441  0097FD  4647               	dw	17991
  1442  0097FF  46E7               	dw	18151
  1443  009801  4789               	dw	18313
  1444  009803  482E               	dw	18478
  1445  009805  48D5               	dw	18645
  1446  009807  497E               	dw	18814
  1447  009809  4A29               	dw	18985
  1448  00980B  4AD7               	dw	19159
  1449  00980D  4B87               	dw	19335
  1450  00980F  4C3A               	dw	19514
  1451  009811  4CEF               	dw	19695
  1452  009813  4DA6               	dw	19878
  1453  009815  4E61               	dw	20065
  1454  009817  4F1E               	dw	20254
  1455  009819  4FDD               	dw	20445
  1456  00981B  50A0               	dw	20640
  1457  00981D  5165               	dw	20837
  1458  00981F  522D               	dw	21037
  1459  009821  52F8               	dw	21240
  1460  009823  53C6               	dw	21446
  1461  009825  5497               	dw	21655
  1462  009827  556B               	dw	21867
  1463  009829  5642               	dw	22082
  1464  00982B  571C               	dw	22300
  1465  00982D  57FA               	dw	22522
  1466  00982F                     __end_of_motor_steps_lookup:
  1467                           	opt stack 0
  1468  00982F                     _motor_postscaler_lookup:
  1469                           	opt stack 0
  1470  00982F  0C                 	db	12
  1471  009830  07                 	db	7
  1472  009831  05                 	db	5
  1473  009832  04                 	db	4
  1474  009833  04                 	db	4
  1475  009834  03                 	db	3
  1476  009835  03                 	db	3
  1477  009836  03                 	db	3
  1478  009837  02                 	db	2
  1479  009838  02                 	db	2
  1480  009839  02                 	db	2
  1481  00983A  02                 	db	2
  1482  00983B  02                 	db	2
  1483  00983C  02                 	db	2
  1484  00983D  01                 	db	1
  1485  00983E  01                 	db	1
  1486  00983F  01                 	db	1
  1487  009840  01                 	db	1
  1488  009841  01                 	db	1
  1489  009842  01                 	db	1
  1490  009843  01                 	db	1
  1491  009844  01                 	db	1
  1492  009845  01                 	db	1
  1493  009846  01                 	db	1
  1494  009847  01                 	db	1
  1495  009848  01                 	db	1
  1496  009849  01                 	db	1
  1497  00984A  01                 	db	1
  1498  00984B  01                 	db	1
  1499  00984C  01                 	db	1
  1500  00984D  01                 	db	1
  1501  00984E  01                 	db	1
  1502  00984F  01                 	db	1
  1503  009850  01                 	db	1
  1504  009851  01                 	db	1
  1505  009852  01                 	db	1
  1506  009853  01                 	db	1
  1507  009854  01                 	db	1
  1508  009855  01                 	db	1
  1509  009856  01                 	db	1
  1510  009857  01                 	db	1
  1511  009858  01                 	db	1
  1512  009859  01                 	db	1
  1513  00985A  01                 	db	1
  1514  00985B  01                 	db	1
  1515  00985C  01                 	db	1
  1516  00985D  01                 	db	1
  1517  00985E  01                 	db	1
  1518  00985F  01                 	db	1
  1519  009860  01                 	db	1
  1520  009861  01                 	db	1
  1521  009862  01                 	db	1
  1522  009863  01                 	db	1
  1523  009864  01                 	db	1
  1524  009865  01                 	db	1
  1525  009866  01                 	db	1
  1526  009867  01                 	db	1
  1527  009868  01                 	db	1
  1528  009869  01                 	db	1
  1529  00986A  01                 	db	1
  1530  00986B  01                 	db	1
  1531  00986C  01                 	db	1
  1532  00986D  01                 	db	1
  1533  00986E  01                 	db	1
  1534  00986F  01                 	db	1
  1535  009870  01                 	db	1
  1536  009871  01                 	db	1
  1537  009872  01                 	db	1
  1538  009873  01                 	db	1
  1539  009874  01                 	db	1
  1540  009875  01                 	db	1
  1541  009876  01                 	db	1
  1542  009877  01                 	db	1
  1543  009878  01                 	db	1
  1544  009879  01                 	db	1
  1545  00987A  01                 	db	1
  1546  00987B  01                 	db	1
  1547  00987C  01                 	db	1
  1548  00987D  01                 	db	1
  1549  00987E  01                 	db	1
  1550  00987F  01                 	db	1
  1551  009880  01                 	db	1
  1552  009881  01                 	db	1
  1553  009882  01                 	db	1
  1554  009883  01                 	db	1
  1555  009884  01                 	db	1
  1556  009885  01                 	db	1
  1557  009886  01                 	db	1
  1558  009887  01                 	db	1
  1559  009888  01                 	db	1
  1560  009889  01                 	db	1
  1561  00988A  00                 	db	0
  1562  00988B  00                 	db	0
  1563  00988C  00                 	db	0
  1564  00988D  00                 	db	0
  1565  00988E  00                 	db	0
  1566  00988F  00                 	db	0
  1567  009890  00                 	db	0
  1568  009891  00                 	db	0
  1569  009892  00                 	db	0
  1570  009893  00                 	db	0
  1571  009894  00                 	db	0
  1572  009895  00                 	db	0
  1573  009896  00                 	db	0
  1574  009897  00                 	db	0
  1575  009898  00                 	db	0
  1576  009899  00                 	db	0
  1577  00989A  00                 	db	0
  1578  00989B  00                 	db	0
  1579  00989C  00                 	db	0
  1580  00989D  00                 	db	0
  1581  00989E  00                 	db	0
  1582  00989F  00                 	db	0
  1583  0098A0  00                 	db	0
  1584  0098A1  00                 	db	0
  1585  0098A2  00                 	db	0
  1586  0098A3  00                 	db	0
  1587  0098A4  00                 	db	0
  1588  0098A5  00                 	db	0
  1589  0098A6  00                 	db	0
  1590  0098A7  00                 	db	0
  1591  0098A8  00                 	db	0
  1592  0098A9  00                 	db	0
  1593  0098AA  00                 	db	0
  1594  0098AB  00                 	db	0
  1595  0098AC  00                 	db	0
  1596  0098AD  00                 	db	0
  1597  0098AE  00                 	db	0
  1598  0098AF  00                 	db	0
  1599  0098B0  00                 	db	0
  1600  0098B1  00                 	db	0
  1601  0098B2  00                 	db	0
  1602  0098B3  00                 	db	0
  1603  0098B4  00                 	db	0
  1604  0098B5  00                 	db	0
  1605  0098B6  00                 	db	0
  1606  0098B7  00                 	db	0
  1607  0098B8  00                 	db	0
  1608  0098B9  00                 	db	0
  1609  0098BA  00                 	db	0
  1610  0098BB  00                 	db	0
  1611  0098BC  00                 	db	0
  1612  0098BD  00                 	db	0
  1613  0098BE  00                 	db	0
  1614  0098BF  00                 	db	0
  1615  0098C0  00                 	db	0
  1616  0098C1  00                 	db	0
  1617  0098C2  00                 	db	0
  1618  0098C3  00                 	db	0
  1619  0098C4  00                 	db	0
  1620  0098C5  00                 	db	0
  1621  0098C6  00                 	db	0
  1622  0098C7  00                 	db	0
  1623  0098C8  00                 	db	0
  1624  0098C9  00                 	db	0
  1625  0098CA  00                 	db	0
  1626  0098CB  00                 	db	0
  1627  0098CC  00                 	db	0
  1628  0098CD  00                 	db	0
  1629  0098CE  00                 	db	0
  1630  0098CF  00                 	db	0
  1631  0098D0  00                 	db	0
  1632  0098D1  00                 	db	0
  1633  0098D2  00                 	db	0
  1634  0098D3  00                 	db	0
  1635  0098D4  00                 	db	0
  1636  0098D5  00                 	db	0
  1637  0098D6  00                 	db	0
  1638  0098D7  00                 	db	0
  1639  0098D8  00                 	db	0
  1640  0098D9  00                 	db	0
  1641  0098DA  00                 	db	0
  1642  0098DB  00                 	db	0
  1643  0098DC  00                 	db	0
  1644  0098DD  00                 	db	0
  1645  0098DE  00                 	db	0
  1646  0098DF  00                 	db	0
  1647  0098E0  00                 	db	0
  1648  0098E1  00                 	db	0
  1649  0098E2  00                 	db	0
  1650  0098E3  00                 	db	0
  1651  0098E4  00                 	db	0
  1652  0098E5  00                 	db	0
  1653  0098E6  00                 	db	0
  1654  0098E7  00                 	db	0
  1655  0098E8  00                 	db	0
  1656  0098E9  00                 	db	0
  1657  0098EA  00                 	db	0
  1658  0098EB  00                 	db	0
  1659  0098EC  00                 	db	0
  1660  0098ED  00                 	db	0
  1661  0098EE  00                 	db	0
  1662  0098EF  00                 	db	0
  1663  0098F0  00                 	db	0
  1664  0098F1  00                 	db	0
  1665  0098F2  00                 	db	0
  1666  0098F3  00                 	db	0
  1667  0098F4  00                 	db	0
  1668  0098F5  00                 	db	0
  1669  0098F6  00                 	db	0
  1670  0098F7  00                 	db	0
  1671  0098F8  00                 	db	0
  1672  0098F9  00                 	db	0
  1673  0098FA  00                 	db	0
  1674  0098FB  00                 	db	0
  1675  0098FC  00                 	db	0
  1676  0098FD  00                 	db	0
  1677  0098FE  00                 	db	0
  1678  0098FF  00                 	db	0
  1679  009900  00                 	db	0
  1680  009901  00                 	db	0
  1681  009902  00                 	db	0
  1682  009903  00                 	db	0
  1683  009904  00                 	db	0
  1684  009905  00                 	db	0
  1685  009906  00                 	db	0
  1686  009907  00                 	db	0
  1687  009908  00                 	db	0
  1688  009909  00                 	db	0
  1689  00990A  00                 	db	0
  1690  00990B  00                 	db	0
  1691  00990C  00                 	db	0
  1692  00990D  00                 	db	0
  1693  00990E  00                 	db	0
  1694  00990F  00                 	db	0
  1695  009910  00                 	db	0
  1696  009911  00                 	db	0
  1697  009912  00                 	db	0
  1698  009913  00                 	db	0
  1699  009914  00                 	db	0
  1700  009915  00                 	db	0
  1701  009916  00                 	db	0
  1702  009917  00                 	db	0
  1703  009918  00                 	db	0
  1704  009919  00                 	db	0
  1705  00991A  00                 	db	0
  1706  00991B  00                 	db	0
  1707  00991C  00                 	db	0
  1708  00991D  00                 	db	0
  1709  00991E  00                 	db	0
  1710  00991F  00                 	db	0
  1711  009920  00                 	db	0
  1712  009921  00                 	db	0
  1713  009922  00                 	db	0
  1714  009923  00                 	db	0
  1715  009924  00                 	db	0
  1716  009925  00                 	db	0
  1717  009926  00                 	db	0
  1718  009927  00                 	db	0
  1719  009928  00                 	db	0
  1720  009929  00                 	db	0
  1721  00992A  00                 	db	0
  1722  00992B  00                 	db	0
  1723  00992C  00                 	db	0
  1724  00992D  00                 	db	0
  1725  00992E  00                 	db	0
  1726  00992F  00                 	db	0
  1727  009930  00                 	db	0
  1728  009931  00                 	db	0
  1729  009932  00                 	db	0
  1730  009933  00                 	db	0
  1731  009934  00                 	db	0
  1732  009935  00                 	db	0
  1733  009936  00                 	db	0
  1734  009937  00                 	db	0
  1735  009938  00                 	db	0
  1736  009939  00                 	db	0
  1737  00993A  00                 	db	0
  1738  00993B  00                 	db	0
  1739  00993C  00                 	db	0
  1740  00993D  00                 	db	0
  1741  00993E  00                 	db	0
  1742  00993F  00                 	db	0
  1743  009940  00                 	db	0
  1744  009941  00                 	db	0
  1745  009942  00                 	db	0
  1746  009943  00                 	db	0
  1747  009944  00                 	db	0
  1748  009945  00                 	db	0
  1749  009946  00                 	db	0
  1750  009947  00                 	db	0
  1751  009948  00                 	db	0
  1752  009949  00                 	db	0
  1753  00994A  00                 	db	0
  1754  00994B  00                 	db	0
  1755  00994C  00                 	db	0
  1756  00994D  00                 	db	0
  1757  00994E  00                 	db	0
  1758  00994F  00                 	db	0
  1759  009950  00                 	db	0
  1760  009951  00                 	db	0
  1761  009952  00                 	db	0
  1762  009953  00                 	db	0
  1763  009954  00                 	db	0
  1764  009955  00                 	db	0
  1765  009956  00                 	db	0
  1766  009957  00                 	db	0
  1767  009958  00                 	db	0
  1768  009959  00                 	db	0
  1769  00995A  00                 	db	0
  1770  00995B  00                 	db	0
  1771  00995C  00                 	db	0
  1772  00995D  00                 	db	0
  1773  00995E  00                 	db	0
  1774  00995F  00                 	db	0
  1775  009960  00                 	db	0
  1776  009961  00                 	db	0
  1777  009962  00                 	db	0
  1778  009963  00                 	db	0
  1779  009964  00                 	db	0
  1780  009965  00                 	db	0
  1781  009966  00                 	db	0
  1782  009967  00                 	db	0
  1783  009968  00                 	db	0
  1784  009969  00                 	db	0
  1785  00996A  00                 	db	0
  1786  00996B  00                 	db	0
  1787  00996C  00                 	db	0
  1788  00996D  00                 	db	0
  1789  00996E  00                 	db	0
  1790  00996F  00                 	db	0
  1791  009970  00                 	db	0
  1792  009971  00                 	db	0
  1793  009972  00                 	db	0
  1794  009973  00                 	db	0
  1795  009974  00                 	db	0
  1796  009975  00                 	db	0
  1797  009976  00                 	db	0
  1798  009977  00                 	db	0
  1799  009978  00                 	db	0
  1800  009979  00                 	db	0
  1801  00997A  00                 	db	0
  1802  00997B  00                 	db	0
  1803  00997C  00                 	db	0
  1804  00997D  00                 	db	0
  1805  00997E  00                 	db	0
  1806  00997F  00                 	db	0
  1807  009980  00                 	db	0
  1808  009981  00                 	db	0
  1809  009982  00                 	db	0
  1810  009983  00                 	db	0
  1811  009984  00                 	db	0
  1812  009985  00                 	db	0
  1813  009986  00                 	db	0
  1814  009987  00                 	db	0
  1815  009988  00                 	db	0
  1816  009989  00                 	db	0
  1817  00998A  00                 	db	0
  1818  00998B  00                 	db	0
  1819  00998C  00                 	db	0
  1820  00998D  00                 	db	0
  1821  00998E  00                 	db	0
  1822  00998F  00                 	db	0
  1823  009990  00                 	db	0
  1824  009991  00                 	db	0
  1825  009992  00                 	db	0
  1826  009993  00                 	db	0
  1827  009994  00                 	db	0
  1828  009995  00                 	db	0
  1829  009996  00                 	db	0
  1830  009997  00                 	db	0
  1831  009998  00                 	db	0
  1832  009999  00                 	db	0
  1833  00999A  00                 	db	0
  1834  00999B  00                 	db	0
  1835  00999C  00                 	db	0
  1836  00999D  00                 	db	0
  1837  00999E  00                 	db	0
  1838  00999F  00                 	db	0
  1839  0099A0  00                 	db	0
  1840  0099A1  00                 	db	0
  1841  0099A2  00                 	db	0
  1842  0099A3  00                 	db	0
  1843  0099A4  00                 	db	0
  1844  0099A5  00                 	db	0
  1845  0099A6  00                 	db	0
  1846  0099A7  00                 	db	0
  1847  0099A8  00                 	db	0
  1848  0099A9  00                 	db	0
  1849  0099AA  00                 	db	0
  1850  0099AB  00                 	db	0
  1851  0099AC  00                 	db	0
  1852  0099AD  00                 	db	0
  1853  0099AE  00                 	db	0
  1854  0099AF  00                 	db	0
  1855  0099B0  00                 	db	0
  1856  0099B1  00                 	db	0
  1857  0099B2  00                 	db	0
  1858  0099B3  00                 	db	0
  1859  0099B4  00                 	db	0
  1860  0099B5  00                 	db	0
  1861  0099B6  00                 	db	0
  1862  0099B7  00                 	db	0
  1863  0099B8  00                 	db	0
  1864  0099B9  00                 	db	0
  1865  0099BA  00                 	db	0
  1866  0099BB  00                 	db	0
  1867  0099BC  00                 	db	0
  1868  0099BD  00                 	db	0
  1869  0099BE  00                 	db	0
  1870  0099BF  00                 	db	0
  1871  0099C0  00                 	db	0
  1872  0099C1  00                 	db	0
  1873  0099C2  00                 	db	0
  1874  0099C3  00                 	db	0
  1875  0099C4  00                 	db	0
  1876  0099C5  00                 	db	0
  1877  0099C6  00                 	db	0
  1878  0099C7  00                 	db	0
  1879  0099C8  00                 	db	0
  1880  0099C9  00                 	db	0
  1881  0099CA  00                 	db	0
  1882  0099CB  00                 	db	0
  1883  0099CC  00                 	db	0
  1884  0099CD  00                 	db	0
  1885  0099CE  00                 	db	0
  1886  0099CF  00                 	db	0
  1887  0099D0  00                 	db	0
  1888  0099D1  00                 	db	0
  1889  0099D2  00                 	db	0
  1890  0099D3  00                 	db	0
  1891  0099D4  00                 	db	0
  1892  0099D5  00                 	db	0
  1893  0099D6  00                 	db	0
  1894  0099D7  00                 	db	0
  1895  0099D8  00                 	db	0
  1896  0099D9  00                 	db	0
  1897  0099DA  00                 	db	0
  1898  0099DB  00                 	db	0
  1899  0099DC  00                 	db	0
  1900  0099DD  00                 	db	0
  1901  0099DE  00                 	db	0
  1902  0099DF  00                 	db	0
  1903  0099E0  00                 	db	0
  1904  0099E1  00                 	db	0
  1905  0099E2  00                 	db	0
  1906  0099E3  00                 	db	0
  1907  0099E4  00                 	db	0
  1908  0099E5  00                 	db	0
  1909  0099E6  00                 	db	0
  1910  0099E7  00                 	db	0
  1911  0099E8  00                 	db	0
  1912  0099E9  00                 	db	0
  1913  0099EA  00                 	db	0
  1914  0099EB  00                 	db	0
  1915  0099EC  00                 	db	0
  1916  0099ED  00                 	db	0
  1917  0099EE  00                 	db	0
  1918  0099EF  00                 	db	0
  1919  0099F0  00                 	db	0
  1920  0099F1  00                 	db	0
  1921  0099F2  00                 	db	0
  1922  0099F3  00                 	db	0
  1923  0099F4  00                 	db	0
  1924  0099F5  00                 	db	0
  1925  0099F6  00                 	db	0
  1926  0099F7  00                 	db	0
  1927  0099F8  00                 	db	0
  1928  0099F9  00                 	db	0
  1929  0099FA  00                 	db	0
  1930  0099FB  00                 	db	0
  1931  0099FC  00                 	db	0
  1932  0099FD  00                 	db	0
  1933  0099FE  00                 	db	0
  1934  0099FF  00                 	db	0
  1935  009A00  00                 	db	0
  1936  009A01  00                 	db	0
  1937  009A02  00                 	db	0
  1938  009A03  00                 	db	0
  1939  009A04  00                 	db	0
  1940  009A05  00                 	db	0
  1941  009A06  00                 	db	0
  1942  009A07  00                 	db	0
  1943  009A08  00                 	db	0
  1944  009A09  00                 	db	0
  1945  009A0A  00                 	db	0
  1946  009A0B  00                 	db	0
  1947  009A0C  00                 	db	0
  1948  009A0D  00                 	db	0
  1949  009A0E  00                 	db	0
  1950  009A0F  00                 	db	0
  1951  009A10  00                 	db	0
  1952  009A11  00                 	db	0
  1953  009A12  00                 	db	0
  1954  009A13  00                 	db	0
  1955  009A14  00                 	db	0
  1956  009A15  00                 	db	0
  1957  009A16                     __end_of_motor_postscaler_lookup:
  1958                           	opt stack 0
  1959  009A16                     _motor_period_lookup:
  1960                           	opt stack 0
  1961  009A16  EC                 	db	236
  1962  009A17  F2                 	db	242
  1963  009A18  F6                 	db	246
  1964  009A19  F4                 	db	244
  1965  009A1A  D2                 	db	210
  1966  009A1B  E8                 	db	232
  1967  009A1C  D2                 	db	210
  1968  009A1D  C0                 	db	192
  1969  009A1E  EC                 	db	236
  1970  009A1F  DC                 	db	220
  1971  009A20  CF                 	db	207
  1972  009A21  C3                 	db	195
  1973  009A22  B9                 	db	185
  1974  009A23  B0                 	db	176
  1975  009A24  FC                 	db	252
  1976  009A25  F2                 	db	242
  1977  009A26  E8                 	db	232
  1978  009A27  DF                 	db	223
  1979  009A28  D7                 	db	215
  1980  009A29  D0                 	db	208
  1981  009A2A  CA                 	db	202
  1982  009A2B  C3                 	db	195
  1983  009A2C  BE                 	db	190
  1984  009A2D  B8                 	db	184
  1985  009A2E  B3                 	db	179
  1986  009A2F  AF                 	db	175
  1987  009A30  AA                 	db	170
  1988  009A31  A6                 	db	166
  1989  009A32  A2                 	db	162
  1990  009A33  9F                 	db	159
  1991  009A34  9B                 	db	155
  1992  009A35  98                 	db	152
  1993  009A36  95                 	db	149
  1994  009A37  92                 	db	146
  1995  009A38  8F                 	db	143
  1996  009A39  8C                 	db	140
  1997  009A3A  8A                 	db	138
  1998  009A3B  87                 	db	135
  1999  009A3C  85                 	db	133
  2000  009A3D  83                 	db	131
  2001  009A3E  81                 	db	129
  2002  009A3F  7F                 	db	127
  2003  009A40  7D                 	db	125
  2004  009A41  7B                 	db	123
  2005  009A42  79                 	db	121
  2006  009A43  77                 	db	119
  2007  009A44  75                 	db	117
  2008  009A45  74                 	db	116
  2009  009A46  72                 	db	114
  2010  009A47  71                 	db	113
  2011  009A48  6F                 	db	111
  2012  009A49  6E                 	db	110
  2013  009A4A  6C                 	db	108
  2014  009A4B  6B                 	db	107
  2015  009A4C  6A                 	db	106
  2016  009A4D  68                 	db	104
  2017  009A4E  67                 	db	103
  2018  009A4F  66                 	db	102
  2019  009A50  65                 	db	101
  2020  009A51  64                 	db	100
  2021  009A52  62                 	db	98
  2022  009A53  61                 	db	97
  2023  009A54  60                 	db	96
  2024  009A55  5F                 	db	95
  2025  009A56  5E                 	db	94
  2026  009A57  5D                 	db	93
  2027  009A58  5C                 	db	92
  2028  009A59  5B                 	db	91
  2029  009A5A  59                 	db	89
  2030  009A5B  57                 	db	87
  2031  009A5C  56                 	db	86
  2032  009A5D  54                 	db	84
  2033  009A5E  53                 	db	83
  2034  009A5F  51                 	db	81
  2035  009A60  50                 	db	80
  2036  009A61  4F                 	db	79
  2037  009A62  4E                 	db	78
  2038  009A63  4C                 	db	76
  2039  009A64  4B                 	db	75
  2040  009A65  4A                 	db	74
  2041  009A66  49                 	db	73
  2042  009A67  48                 	db	72
  2043  009A68  47                 	db	71
  2044  009A69  46                 	db	70
  2045  009A6A  45                 	db	69
  2046  009A6B  44                 	db	68
  2047  009A6C  43                 	db	67
  2048  009A6D  42                 	db	66
  2049  009A6E  41                 	db	65
  2050  009A6F  40                 	db	64
  2051  009A70  3F                 	db	63
  2052  009A71  FE                 	db	254
  2053  009A72  FB                 	db	251
  2054  009A73  F8                 	db	248
  2055  009A74  F6                 	db	246
  2056  009A75  F3                 	db	243
  2057  009A76  F0                 	db	240
  2058  009A77  EE                 	db	238
  2059  009A78  EC                 	db	236
  2060  009A79  E9                 	db	233
  2061  009A7A  E7                 	db	231
  2062  009A7B  E5                 	db	229
  2063  009A7C  E3                 	db	227
  2064  009A7D  E0                 	db	224
  2065  009A7E  DE                 	db	222
  2066  009A7F  DC                 	db	220
  2067  009A80  DA                 	db	218
  2068  009A81  D8                 	db	216
  2069  009A82  D7                 	db	215
  2070  009A83  D5                 	db	213
  2071  009A84  D3                 	db	211
  2072  009A85  D1                 	db	209
  2073  009A86  CF                 	db	207
  2074  009A87  CE                 	db	206
  2075  009A88  CC                 	db	204
  2076  009A89  CA                 	db	202
  2077  009A8A  C9                 	db	201
  2078  009A8B  C7                 	db	199
  2079  009A8C  C6                 	db	198
  2080  009A8D  C4                 	db	196
  2081  009A8E  C3                 	db	195
  2082  009A8F  C1                 	db	193
  2083  009A90  C0                 	db	192
  2084  009A91  BE                 	db	190
  2085  009A92  BD                 	db	189
  2086  009A93  BC                 	db	188
  2087  009A94  BA                 	db	186
  2088  009A95  B8                 	db	184
  2089  009A96  B6                 	db	182
  2090  009A97  B4                 	db	180
  2091  009A98  B3                 	db	179
  2092  009A99  B1                 	db	177
  2093  009A9A  AF                 	db	175
  2094  009A9B  AE                 	db	174
  2095  009A9C  AC                 	db	172
  2096  009A9D  AA                 	db	170
  2097  009A9E  A9                 	db	169
  2098  009A9F  A7                 	db	167
  2099  009AA0  A6                 	db	166
  2100  009AA1  A4                 	db	164
  2101  009AA2  A3                 	db	163
  2102  009AA3  A1                 	db	161
  2103  009AA4  A0                 	db	160
  2104  009AA5  9F                 	db	159
  2105  009AA6  9D                 	db	157
  2106  009AA7  9C                 	db	156
  2107  009AA8  9B                 	db	155
  2108  009AA9  9A                 	db	154
  2109  009AAA  98                 	db	152
  2110  009AAB  97                 	db	151
  2111  009AAC  96                 	db	150
  2112  009AAD  95                 	db	149
  2113  009AAE  94                 	db	148
  2114  009AAF  93                 	db	147
  2115  009AB0  92                 	db	146
  2116  009AB1  90                 	db	144
  2117  009AB2  8F                 	db	143
  2118  009AB3  8E                 	db	142
  2119  009AB4  8D                 	db	141
  2120  009AB5  8C                 	db	140
  2121  009AB6  8B                 	db	139
  2122  009AB7  8A                 	db	138
  2123  009AB8  89                 	db	137
  2124  009AB9  88                 	db	136
  2125  009ABA  87                 	db	135
  2126  009ABB  86                 	db	134
  2127  009ABC  85                 	db	133
  2128  009ABD  84                 	db	132
  2129  009ABE  83                 	db	131
  2130  009ABF  82                 	db	130
  2131  009AC0  81                 	db	129
  2132  009AC1  80                 	db	128
  2133  009AC2  7F                 	db	127
  2134  009AC3  7E                 	db	126
  2135  009AC4  7D                 	db	125
  2136  009AC5  7C                 	db	124
  2137  009AC6  7B                 	db	123
  2138  009AC7  7A                 	db	122
  2139  009AC8  79                 	db	121
  2140  009AC9  78                 	db	120
  2141  009ACA  77                 	db	119
  2142  009ACB  76                 	db	118
  2143  009ACC  75                 	db	117
  2144  009ACD  74                 	db	116
  2145  009ACE  73                 	db	115
  2146  009ACF  72                 	db	114
  2147  009AD0  71                 	db	113
  2148  009AD1  70                 	db	112
  2149  009AD2  6F                 	db	111
  2150  009AD3  6E                 	db	110
  2151  009AD4  6D                 	db	109
  2152  009AD5  6C                 	db	108
  2153  009AD6  6B                 	db	107
  2154  009AD7  6A                 	db	106
  2155  009AD8  69                 	db	105
  2156  009AD9  68                 	db	104
  2157  009ADA  67                 	db	103
  2158  009ADB  66                 	db	102
  2159  009ADC  65                 	db	101
  2160  009ADD  64                 	db	100
  2161  009ADE  63                 	db	99
  2162  009ADF  62                 	db	98
  2163  009AE0  61                 	db	97
  2164  009AE1  60                 	db	96
  2165  009AE2  5F                 	db	95
  2166  009AE3  5E                 	db	94
  2167  009AE4  5D                 	db	93
  2168  009AE5  5C                 	db	92
  2169  009AE6  5B                 	db	91
  2170  009AE7  5A                 	db	90
  2171  009AE8  59                 	db	89
  2172  009AE9  58                 	db	88
  2173  009AEA  57                 	db	87
  2174  009AEB  56                 	db	86
  2175  009AEC  55                 	db	85
  2176  009AED  54                 	db	84
  2177  009AEE  53                 	db	83
  2178  009AEF  52                 	db	82
  2179  009AF0  51                 	db	81
  2180  009AF1  50                 	db	80
  2181  009AF2  4F                 	db	79
  2182  009AF3  4E                 	db	78
  2183  009AF4  4D                 	db	77
  2184  009AF5  4C                 	db	76
  2185  009AF6  4B                 	db	75
  2186  009AF7  4A                 	db	74
  2187  009AF8  49                 	db	73
  2188  009AF9  48                 	db	72
  2189  009AFA  47                 	db	71
  2190  009AFB  46                 	db	70
  2191  009AFC  45                 	db	69
  2192  009AFD  44                 	db	68
  2193  009AFE  43                 	db	67
  2194  009AFF  42                 	db	66
  2195  009B00  41                 	db	65
  2196  009B01  40                 	db	64
  2197  009B02  3F                 	db	63
  2198  009B03  FF                 	db	255
  2199  009B04  FE                 	db	254
  2200  009B05  FD                 	db	253
  2201  009B06  FC                 	db	252
  2202  009B07  FB                 	db	251
  2203  009B08  FA                 	db	250
  2204  009B09  F9                 	db	249
  2205  009B0A  F8                 	db	248
  2206  009B0B  F7                 	db	247
  2207  009B0C  F6                 	db	246
  2208  009B0D  F5                 	db	245
  2209  009B0E  F4                 	db	244
  2210  009B0F  F3                 	db	243
  2211  009B10  F2                 	db	242
  2212  009B11  F1                 	db	241
  2213  009B12  F0                 	db	240
  2214  009B13  EF                 	db	239
  2215  009B14  EE                 	db	238
  2216  009B15  ED                 	db	237
  2217  009B16  EC                 	db	236
  2218  009B17  EB                 	db	235
  2219  009B18  EA                 	db	234
  2220  009B19  E9                 	db	233
  2221  009B1A  E8                 	db	232
  2222  009B1B  E7                 	db	231
  2223  009B1C  E6                 	db	230
  2224  009B1D  E5                 	db	229
  2225  009B1E  E4                 	db	228
  2226  009B1F  E3                 	db	227
  2227  009B20  E2                 	db	226
  2228  009B21  E1                 	db	225
  2229  009B22  E0                 	db	224
  2230  009B23  DF                 	db	223
  2231  009B24  DE                 	db	222
  2232  009B25  DD                 	db	221
  2233  009B26  DC                 	db	220
  2234  009B27  DB                 	db	219
  2235  009B28  DA                 	db	218
  2236  009B29  D9                 	db	217
  2237  009B2A  D8                 	db	216
  2238  009B2B  D7                 	db	215
  2239  009B2C  D6                 	db	214
  2240  009B2D  D5                 	db	213
  2241  009B2E  D4                 	db	212
  2242  009B2F  D3                 	db	211
  2243  009B30  D2                 	db	210
  2244  009B31  D1                 	db	209
  2245  009B32  D0                 	db	208
  2246  009B33  CF                 	db	207
  2247  009B34  CE                 	db	206
  2248  009B35  CD                 	db	205
  2249  009B36  CC                 	db	204
  2250  009B37  CB                 	db	203
  2251  009B38  CA                 	db	202
  2252  009B39  C9                 	db	201
  2253  009B3A  C8                 	db	200
  2254  009B3B  C7                 	db	199
  2255  009B3C  C6                 	db	198
  2256  009B3D  C5                 	db	197
  2257  009B3E  C4                 	db	196
  2258  009B3F  C3                 	db	195
  2259  009B40  C2                 	db	194
  2260  009B41  C1                 	db	193
  2261  009B42  C0                 	db	192
  2262  009B43  BF                 	db	191
  2263  009B44  BE                 	db	190
  2264  009B45  BD                 	db	189
  2265  009B46  BC                 	db	188
  2266  009B47  BB                 	db	187
  2267  009B48  BA                 	db	186
  2268  009B49  B9                 	db	185
  2269  009B4A  B8                 	db	184
  2270  009B4B  B7                 	db	183
  2271  009B4C  B6                 	db	182
  2272  009B4D  B5                 	db	181
  2273  009B4E  B4                 	db	180
  2274  009B4F  B3                 	db	179
  2275  009B50  B2                 	db	178
  2276  009B51  B1                 	db	177
  2277  009B52  B0                 	db	176
  2278  009B53  AF                 	db	175
  2279  009B54  AE                 	db	174
  2280  009B55  AD                 	db	173
  2281  009B56  AC                 	db	172
  2282  009B57  AB                 	db	171
  2283  009B58  AA                 	db	170
  2284  009B59  A9                 	db	169
  2285  009B5A  A8                 	db	168
  2286  009B5B  A7                 	db	167
  2287  009B5C  A6                 	db	166
  2288  009B5D  A5                 	db	165
  2289  009B5E  A4                 	db	164
  2290  009B5F  A3                 	db	163
  2291  009B60  A2                 	db	162
  2292  009B61  A1                 	db	161
  2293  009B62  A0                 	db	160
  2294  009B63  9F                 	db	159
  2295  009B64  9E                 	db	158
  2296  009B65  9D                 	db	157
  2297  009B66  9C                 	db	156
  2298  009B67  9B                 	db	155
  2299  009B68  9A                 	db	154
  2300  009B69  99                 	db	153
  2301  009B6A  98                 	db	152
  2302  009B6B  97                 	db	151
  2303  009B6C  96                 	db	150
  2304  009B6D  95                 	db	149
  2305  009B6E  94                 	db	148
  2306  009B6F  93                 	db	147
  2307  009B70  92                 	db	146
  2308  009B71  91                 	db	145
  2309  009B72  90                 	db	144
  2310  009B73  8F                 	db	143
  2311  009B74  8E                 	db	142
  2312  009B75  8D                 	db	141
  2313  009B76  8C                 	db	140
  2314  009B77  8B                 	db	139
  2315  009B78  8A                 	db	138
  2316  009B79  89                 	db	137
  2317  009B7A  88                 	db	136
  2318  009B7B  87                 	db	135
  2319  009B7C  86                 	db	134
  2320  009B7D  85                 	db	133
  2321  009B7E  84                 	db	132
  2322  009B7F  83                 	db	131
  2323  009B80  82                 	db	130
  2324  009B81  81                 	db	129
  2325  009B82  80                 	db	128
  2326  009B83  7F                 	db	127
  2327  009B84  7E                 	db	126
  2328  009B85  7D                 	db	125
  2329  009B86  7C                 	db	124
  2330  009B87  7B                 	db	123
  2331  009B88  7A                 	db	122
  2332  009B89  79                 	db	121
  2333  009B8A  78                 	db	120
  2334  009B8B  77                 	db	119
  2335  009B8C  76                 	db	118
  2336  009B8D  75                 	db	117
  2337  009B8E  74                 	db	116
  2338  009B8F  73                 	db	115
  2339  009B90  72                 	db	114
  2340  009B91  71                 	db	113
  2341  009B92  70                 	db	112
  2342  009B93  6F                 	db	111
  2343  009B94  6E                 	db	110
  2344  009B95  6D                 	db	109
  2345  009B96  6C                 	db	108
  2346  009B97  6B                 	db	107
  2347  009B98  6A                 	db	106
  2348  009B99  69                 	db	105
  2349  009B9A  68                 	db	104
  2350  009B9B  67                 	db	103
  2351  009B9C  66                 	db	102
  2352  009B9D  65                 	db	101
  2353  009B9E  64                 	db	100
  2354  009B9F  63                 	db	99
  2355  009BA0  62                 	db	98
  2356  009BA1  61                 	db	97
  2357  009BA2  60                 	db	96
  2358  009BA3  5F                 	db	95
  2359  009BA4  5E                 	db	94
  2360  009BA5  5D                 	db	93
  2361  009BA6  5C                 	db	92
  2362  009BA7  5B                 	db	91
  2363  009BA8  5A                 	db	90
  2364  009BA9  59                 	db	89
  2365  009BAA  58                 	db	88
  2366  009BAB  57                 	db	87
  2367  009BAC  56                 	db	86
  2368  009BAD  55                 	db	85
  2369  009BAE  54                 	db	84
  2370  009BAF  53                 	db	83
  2371  009BB0  52                 	db	82
  2372  009BB1  51                 	db	81
  2373  009BB2  50                 	db	80
  2374  009BB3  4F                 	db	79
  2375  009BB4  4E                 	db	78
  2376  009BB5  4D                 	db	77
  2377  009BB6  4C                 	db	76
  2378  009BB7  4B                 	db	75
  2379  009BB8  4A                 	db	74
  2380  009BB9  49                 	db	73
  2381  009BBA  48                 	db	72
  2382  009BBB  47                 	db	71
  2383  009BBC  46                 	db	70
  2384  009BBD  45                 	db	69
  2385  009BBE  44                 	db	68
  2386  009BBF  43                 	db	67
  2387  009BC0  42                 	db	66
  2388  009BC1  41                 	db	65
  2389  009BC2  40                 	db	64
  2390  009BC3  3F                 	db	63
  2391  009BC4  FF                 	db	255
  2392  009BC5  FE                 	db	254
  2393  009BC6  FD                 	db	253
  2394  009BC7  FC                 	db	252
  2395  009BC8  FB                 	db	251
  2396  009BC9  FA                 	db	250
  2397  009BCA  F9                 	db	249
  2398  009BCB  F8                 	db	248
  2399  009BCC  F7                 	db	247
  2400  009BCD  F6                 	db	246
  2401  009BCE  F5                 	db	245
  2402  009BCF  F4                 	db	244
  2403  009BD0  F3                 	db	243
  2404  009BD1  F2                 	db	242
  2405  009BD2  F1                 	db	241
  2406  009BD3  F0                 	db	240
  2407  009BD4  EF                 	db	239
  2408  009BD5  EE                 	db	238
  2409  009BD6  ED                 	db	237
  2410  009BD7  EC                 	db	236
  2411  009BD8  EB                 	db	235
  2412  009BD9  EA                 	db	234
  2413  009BDA  E9                 	db	233
  2414  009BDB  E8                 	db	232
  2415  009BDC  E7                 	db	231
  2416  009BDD  E6                 	db	230
  2417  009BDE  E5                 	db	229
  2418  009BDF  E4                 	db	228
  2419  009BE0  E3                 	db	227
  2420  009BE1  E2                 	db	226
  2421  009BE2  E1                 	db	225
  2422  009BE3  E0                 	db	224
  2423  009BE4  DF                 	db	223
  2424  009BE5  DE                 	db	222
  2425  009BE6  DD                 	db	221
  2426  009BE7  DC                 	db	220
  2427  009BE8  DB                 	db	219
  2428  009BE9  DA                 	db	218
  2429  009BEA  D9                 	db	217
  2430  009BEB  D8                 	db	216
  2431  009BEC  D7                 	db	215
  2432  009BED  D6                 	db	214
  2433  009BEE  D5                 	db	213
  2434  009BEF  D4                 	db	212
  2435  009BF0  D3                 	db	211
  2436  009BF1  D2                 	db	210
  2437  009BF2  D1                 	db	209
  2438  009BF3  D0                 	db	208
  2439  009BF4  CF                 	db	207
  2440  009BF5  CE                 	db	206
  2441  009BF6  CD                 	db	205
  2442  009BF7  CC                 	db	204
  2443  009BF8  CB                 	db	203
  2444  009BF9  CA                 	db	202
  2445  009BFA  C9                 	db	201
  2446  009BFB  C8                 	db	200
  2447  009BFC  C7                 	db	199
  2448  009BFD                     __end_of_motor_period_lookup:
  2449                           	opt stack 0
  2450  009BFD                     _motor_prescaler_lookup:
  2451                           	opt stack 0
  2452  009BFD  02                 	db	2
  2453  009BFE  02                 	db	2
  2454  009BFF  02                 	db	2
  2455  009C00  02                 	db	2
  2456  009C01  02                 	db	2
  2457  009C02  02                 	db	2
  2458  009C03  02                 	db	2
  2459  009C04  02                 	db	2
  2460  009C05  02                 	db	2
  2461  009C06  02                 	db	2
  2462  009C07  02                 	db	2
  2463  009C08  02                 	db	2
  2464  009C09  02                 	db	2
  2465  009C0A  02                 	db	2
  2466  009C0B  02                 	db	2
  2467  009C0C  02                 	db	2
  2468  009C0D  02                 	db	2
  2469  009C0E  02                 	db	2
  2470  009C0F  02                 	db	2
  2471  009C10  02                 	db	2
  2472  009C11  02                 	db	2
  2473  009C12  02                 	db	2
  2474  009C13  02                 	db	2
  2475  009C14  02                 	db	2
  2476  009C15  02                 	db	2
  2477  009C16  02                 	db	2
  2478  009C17  02                 	db	2
  2479  009C18  02                 	db	2
  2480  009C19  02                 	db	2
  2481  009C1A  02                 	db	2
  2482  009C1B  02                 	db	2
  2483  009C1C  02                 	db	2
  2484  009C1D  02                 	db	2
  2485  009C1E  02                 	db	2
  2486  009C1F  02                 	db	2
  2487  009C20  02                 	db	2
  2488  009C21  02                 	db	2
  2489  009C22  02                 	db	2
  2490  009C23  02                 	db	2
  2491  009C24  02                 	db	2
  2492  009C25  02                 	db	2
  2493  009C26  02                 	db	2
  2494  009C27  02                 	db	2
  2495  009C28  02                 	db	2
  2496  009C29  02                 	db	2
  2497  009C2A  02                 	db	2
  2498  009C2B  02                 	db	2
  2499  009C2C  02                 	db	2
  2500  009C2D  02                 	db	2
  2501  009C2E  02                 	db	2
  2502  009C2F  02                 	db	2
  2503  009C30  02                 	db	2
  2504  009C31  02                 	db	2
  2505  009C32  02                 	db	2
  2506  009C33  02                 	db	2
  2507  009C34  02                 	db	2
  2508  009C35  02                 	db	2
  2509  009C36  02                 	db	2
  2510  009C37  02                 	db	2
  2511  009C38  02                 	db	2
  2512  009C39  02                 	db	2
  2513  009C3A  02                 	db	2
  2514  009C3B  02                 	db	2
  2515  009C3C  02                 	db	2
  2516  009C3D  02                 	db	2
  2517  009C3E  02                 	db	2
  2518  009C3F  02                 	db	2
  2519  009C40  02                 	db	2
  2520  009C41  02                 	db	2
  2521  009C42  02                 	db	2
  2522  009C43  02                 	db	2
  2523  009C44  02                 	db	2
  2524  009C45  02                 	db	2
  2525  009C46  02                 	db	2
  2526  009C47  02                 	db	2
  2527  009C48  02                 	db	2
  2528  009C49  02                 	db	2
  2529  009C4A  02                 	db	2
  2530  009C4B  02                 	db	2
  2531  009C4C  02                 	db	2
  2532  009C4D  02                 	db	2
  2533  009C4E  02                 	db	2
  2534  009C4F  02                 	db	2
  2535  009C50  02                 	db	2
  2536  009C51  02                 	db	2
  2537  009C52  02                 	db	2
  2538  009C53  02                 	db	2
  2539  009C54  02                 	db	2
  2540  009C55  02                 	db	2
  2541  009C56  02                 	db	2
  2542  009C57  02                 	db	2
  2543  009C58  02                 	db	2
  2544  009C59  02                 	db	2
  2545  009C5A  02                 	db	2
  2546  009C5B  02                 	db	2
  2547  009C5C  02                 	db	2
  2548  009C5D  02                 	db	2
  2549  009C5E  02                 	db	2
  2550  009C5F  02                 	db	2
  2551  009C60  02                 	db	2
  2552  009C61  02                 	db	2
  2553  009C62  02                 	db	2
  2554  009C63  02                 	db	2
  2555  009C64  02                 	db	2
  2556  009C65  02                 	db	2
  2557  009C66  02                 	db	2
  2558  009C67  02                 	db	2
  2559  009C68  02                 	db	2
  2560  009C69  02                 	db	2
  2561  009C6A  02                 	db	2
  2562  009C6B  02                 	db	2
  2563  009C6C  02                 	db	2
  2564  009C6D  02                 	db	2
  2565  009C6E  02                 	db	2
  2566  009C6F  02                 	db	2
  2567  009C70  02                 	db	2
  2568  009C71  02                 	db	2
  2569  009C72  02                 	db	2
  2570  009C73  02                 	db	2
  2571  009C74  02                 	db	2
  2572  009C75  02                 	db	2
  2573  009C76  02                 	db	2
  2574  009C77  02                 	db	2
  2575  009C78  02                 	db	2
  2576  009C79  02                 	db	2
  2577  009C7A  02                 	db	2
  2578  009C7B  02                 	db	2
  2579  009C7C  02                 	db	2
  2580  009C7D  02                 	db	2
  2581  009C7E  02                 	db	2
  2582  009C7F  02                 	db	2
  2583  009C80  02                 	db	2
  2584  009C81  02                 	db	2
  2585  009C82  02                 	db	2
  2586  009C83  02                 	db	2
  2587  009C84  02                 	db	2
  2588  009C85  02                 	db	2
  2589  009C86  02                 	db	2
  2590  009C87  02                 	db	2
  2591  009C88  02                 	db	2
  2592  009C89  02                 	db	2
  2593  009C8A  02                 	db	2
  2594  009C8B  02                 	db	2
  2595  009C8C  02                 	db	2
  2596  009C8D  02                 	db	2
  2597  009C8E  02                 	db	2
  2598  009C8F  02                 	db	2
  2599  009C90  02                 	db	2
  2600  009C91  02                 	db	2
  2601  009C92  02                 	db	2
  2602  009C93  02                 	db	2
  2603  009C94  02                 	db	2
  2604  009C95  02                 	db	2
  2605  009C96  02                 	db	2
  2606  009C97  02                 	db	2
  2607  009C98  02                 	db	2
  2608  009C99  02                 	db	2
  2609  009C9A  02                 	db	2
  2610  009C9B  02                 	db	2
  2611  009C9C  02                 	db	2
  2612  009C9D  02                 	db	2
  2613  009C9E  02                 	db	2
  2614  009C9F  02                 	db	2
  2615  009CA0  02                 	db	2
  2616  009CA1  02                 	db	2
  2617  009CA2  02                 	db	2
  2618  009CA3  02                 	db	2
  2619  009CA4  02                 	db	2
  2620  009CA5  02                 	db	2
  2621  009CA6  02                 	db	2
  2622  009CA7  02                 	db	2
  2623  009CA8  02                 	db	2
  2624  009CA9  02                 	db	2
  2625  009CAA  02                 	db	2
  2626  009CAB  02                 	db	2
  2627  009CAC  02                 	db	2
  2628  009CAD  02                 	db	2
  2629  009CAE  02                 	db	2
  2630  009CAF  02                 	db	2
  2631  009CB0  02                 	db	2
  2632  009CB1  02                 	db	2
  2633  009CB2  02                 	db	2
  2634  009CB3  02                 	db	2
  2635  009CB4  02                 	db	2
  2636  009CB5  02                 	db	2
  2637  009CB6  02                 	db	2
  2638  009CB7  02                 	db	2
  2639  009CB8  02                 	db	2
  2640  009CB9  02                 	db	2
  2641  009CBA  02                 	db	2
  2642  009CBB  02                 	db	2
  2643  009CBC  02                 	db	2
  2644  009CBD  02                 	db	2
  2645  009CBE  02                 	db	2
  2646  009CBF  02                 	db	2
  2647  009CC0  02                 	db	2
  2648  009CC1  02                 	db	2
  2649  009CC2  02                 	db	2
  2650  009CC3  02                 	db	2
  2651  009CC4  02                 	db	2
  2652  009CC5  02                 	db	2
  2653  009CC6  02                 	db	2
  2654  009CC7  02                 	db	2
  2655  009CC8  02                 	db	2
  2656  009CC9  02                 	db	2
  2657  009CCA  02                 	db	2
  2658  009CCB  02                 	db	2
  2659  009CCC  02                 	db	2
  2660  009CCD  02                 	db	2
  2661  009CCE  02                 	db	2
  2662  009CCF  02                 	db	2
  2663  009CD0  02                 	db	2
  2664  009CD1  02                 	db	2
  2665  009CD2  02                 	db	2
  2666  009CD3  02                 	db	2
  2667  009CD4  02                 	db	2
  2668  009CD5  02                 	db	2
  2669  009CD6  02                 	db	2
  2670  009CD7  02                 	db	2
  2671  009CD8  02                 	db	2
  2672  009CD9  02                 	db	2
  2673  009CDA  02                 	db	2
  2674  009CDB  02                 	db	2
  2675  009CDC  02                 	db	2
  2676  009CDD  02                 	db	2
  2677  009CDE  02                 	db	2
  2678  009CDF  02                 	db	2
  2679  009CE0  02                 	db	2
  2680  009CE1  02                 	db	2
  2681  009CE2  02                 	db	2
  2682  009CE3  02                 	db	2
  2683  009CE4  02                 	db	2
  2684  009CE5  02                 	db	2
  2685  009CE6  02                 	db	2
  2686  009CE7  02                 	db	2
  2687  009CE8  02                 	db	2
  2688  009CE9  02                 	db	2
  2689  009CEA  01                 	db	1
  2690  009CEB  01                 	db	1
  2691  009CEC  01                 	db	1
  2692  009CED  01                 	db	1
  2693  009CEE  01                 	db	1
  2694  009CEF  01                 	db	1
  2695  009CF0  01                 	db	1
  2696  009CF1  01                 	db	1
  2697  009CF2  01                 	db	1
  2698  009CF3  01                 	db	1
  2699  009CF4  01                 	db	1
  2700  009CF5  01                 	db	1
  2701  009CF6  01                 	db	1
  2702  009CF7  01                 	db	1
  2703  009CF8  01                 	db	1
  2704  009CF9  01                 	db	1
  2705  009CFA  01                 	db	1
  2706  009CFB  01                 	db	1
  2707  009CFC  01                 	db	1
  2708  009CFD  01                 	db	1
  2709  009CFE  01                 	db	1
  2710  009CFF  01                 	db	1
  2711  009D00  01                 	db	1
  2712  009D01  01                 	db	1
  2713  009D02  01                 	db	1
  2714  009D03  01                 	db	1
  2715  009D04  01                 	db	1
  2716  009D05  01                 	db	1
  2717  009D06  01                 	db	1
  2718  009D07  01                 	db	1
  2719  009D08  01                 	db	1
  2720  009D09  01                 	db	1
  2721  009D0A  01                 	db	1
  2722  009D0B  01                 	db	1
  2723  009D0C  01                 	db	1
  2724  009D0D  01                 	db	1
  2725  009D0E  01                 	db	1
  2726  009D0F  01                 	db	1
  2727  009D10  01                 	db	1
  2728  009D11  01                 	db	1
  2729  009D12  01                 	db	1
  2730  009D13  01                 	db	1
  2731  009D14  01                 	db	1
  2732  009D15  01                 	db	1
  2733  009D16  01                 	db	1
  2734  009D17  01                 	db	1
  2735  009D18  01                 	db	1
  2736  009D19  01                 	db	1
  2737  009D1A  01                 	db	1
  2738  009D1B  01                 	db	1
  2739  009D1C  01                 	db	1
  2740  009D1D  01                 	db	1
  2741  009D1E  01                 	db	1
  2742  009D1F  01                 	db	1
  2743  009D20  01                 	db	1
  2744  009D21  01                 	db	1
  2745  009D22  01                 	db	1
  2746  009D23  01                 	db	1
  2747  009D24  01                 	db	1
  2748  009D25  01                 	db	1
  2749  009D26  01                 	db	1
  2750  009D27  01                 	db	1
  2751  009D28  01                 	db	1
  2752  009D29  01                 	db	1
  2753  009D2A  01                 	db	1
  2754  009D2B  01                 	db	1
  2755  009D2C  01                 	db	1
  2756  009D2D  01                 	db	1
  2757  009D2E  01                 	db	1
  2758  009D2F  01                 	db	1
  2759  009D30  01                 	db	1
  2760  009D31  01                 	db	1
  2761  009D32  01                 	db	1
  2762  009D33  01                 	db	1
  2763  009D34  01                 	db	1
  2764  009D35  01                 	db	1
  2765  009D36  01                 	db	1
  2766  009D37  01                 	db	1
  2767  009D38  01                 	db	1
  2768  009D39  01                 	db	1
  2769  009D3A  01                 	db	1
  2770  009D3B  01                 	db	1
  2771  009D3C  01                 	db	1
  2772  009D3D  01                 	db	1
  2773  009D3E  01                 	db	1
  2774  009D3F  01                 	db	1
  2775  009D40  01                 	db	1
  2776  009D41  01                 	db	1
  2777  009D42  01                 	db	1
  2778  009D43  01                 	db	1
  2779  009D44  01                 	db	1
  2780  009D45  01                 	db	1
  2781  009D46  01                 	db	1
  2782  009D47  01                 	db	1
  2783  009D48  01                 	db	1
  2784  009D49  01                 	db	1
  2785  009D4A  01                 	db	1
  2786  009D4B  01                 	db	1
  2787  009D4C  01                 	db	1
  2788  009D4D  01                 	db	1
  2789  009D4E  01                 	db	1
  2790  009D4F  01                 	db	1
  2791  009D50  01                 	db	1
  2792  009D51  01                 	db	1
  2793  009D52  01                 	db	1
  2794  009D53  01                 	db	1
  2795  009D54  01                 	db	1
  2796  009D55  01                 	db	1
  2797  009D56  01                 	db	1
  2798  009D57  01                 	db	1
  2799  009D58  01                 	db	1
  2800  009D59  01                 	db	1
  2801  009D5A  01                 	db	1
  2802  009D5B  01                 	db	1
  2803  009D5C  01                 	db	1
  2804  009D5D  01                 	db	1
  2805  009D5E  01                 	db	1
  2806  009D5F  01                 	db	1
  2807  009D60  01                 	db	1
  2808  009D61  01                 	db	1
  2809  009D62  01                 	db	1
  2810  009D63  01                 	db	1
  2811  009D64  01                 	db	1
  2812  009D65  01                 	db	1
  2813  009D66  01                 	db	1
  2814  009D67  01                 	db	1
  2815  009D68  01                 	db	1
  2816  009D69  01                 	db	1
  2817  009D6A  01                 	db	1
  2818  009D6B  01                 	db	1
  2819  009D6C  01                 	db	1
  2820  009D6D  01                 	db	1
  2821  009D6E  01                 	db	1
  2822  009D6F  01                 	db	1
  2823  009D70  01                 	db	1
  2824  009D71  01                 	db	1
  2825  009D72  01                 	db	1
  2826  009D73  01                 	db	1
  2827  009D74  01                 	db	1
  2828  009D75  01                 	db	1
  2829  009D76  01                 	db	1
  2830  009D77  01                 	db	1
  2831  009D78  01                 	db	1
  2832  009D79  01                 	db	1
  2833  009D7A  01                 	db	1
  2834  009D7B  01                 	db	1
  2835  009D7C  01                 	db	1
  2836  009D7D  01                 	db	1
  2837  009D7E  01                 	db	1
  2838  009D7F  01                 	db	1
  2839  009D80  01                 	db	1
  2840  009D81  01                 	db	1
  2841  009D82  01                 	db	1
  2842  009D83  01                 	db	1
  2843  009D84  01                 	db	1
  2844  009D85  01                 	db	1
  2845  009D86  01                 	db	1
  2846  009D87  01                 	db	1
  2847  009D88  01                 	db	1
  2848  009D89  01                 	db	1
  2849  009D8A  01                 	db	1
  2850  009D8B  01                 	db	1
  2851  009D8C  01                 	db	1
  2852  009D8D  01                 	db	1
  2853  009D8E  01                 	db	1
  2854  009D8F  01                 	db	1
  2855  009D90  01                 	db	1
  2856  009D91  01                 	db	1
  2857  009D92  01                 	db	1
  2858  009D93  01                 	db	1
  2859  009D94  01                 	db	1
  2860  009D95  01                 	db	1
  2861  009D96  01                 	db	1
  2862  009D97  01                 	db	1
  2863  009D98  01                 	db	1
  2864  009D99  01                 	db	1
  2865  009D9A  01                 	db	1
  2866  009D9B  01                 	db	1
  2867  009D9C  01                 	db	1
  2868  009D9D  01                 	db	1
  2869  009D9E  01                 	db	1
  2870  009D9F  01                 	db	1
  2871  009DA0  01                 	db	1
  2872  009DA1  01                 	db	1
  2873  009DA2  01                 	db	1
  2874  009DA3  01                 	db	1
  2875  009DA4  01                 	db	1
  2876  009DA5  01                 	db	1
  2877  009DA6  01                 	db	1
  2878  009DA7  01                 	db	1
  2879  009DA8  01                 	db	1
  2880  009DA9  01                 	db	1
  2881  009DAA  01                 	db	1
  2882  009DAB  00                 	db	0
  2883  009DAC  00                 	db	0
  2884  009DAD  00                 	db	0
  2885  009DAE  00                 	db	0
  2886  009DAF  00                 	db	0
  2887  009DB0  00                 	db	0
  2888  009DB1  00                 	db	0
  2889  009DB2  00                 	db	0
  2890  009DB3  00                 	db	0
  2891  009DB4  00                 	db	0
  2892  009DB5  00                 	db	0
  2893  009DB6  00                 	db	0
  2894  009DB7  00                 	db	0
  2895  009DB8  00                 	db	0
  2896  009DB9  00                 	db	0
  2897  009DBA  00                 	db	0
  2898  009DBB  00                 	db	0
  2899  009DBC  00                 	db	0
  2900  009DBD  00                 	db	0
  2901  009DBE  00                 	db	0
  2902  009DBF  00                 	db	0
  2903  009DC0  00                 	db	0
  2904  009DC1  00                 	db	0
  2905  009DC2  00                 	db	0
  2906  009DC3  00                 	db	0
  2907  009DC4  00                 	db	0
  2908  009DC5  00                 	db	0
  2909  009DC6  00                 	db	0
  2910  009DC7  00                 	db	0
  2911  009DC8  00                 	db	0
  2912  009DC9  00                 	db	0
  2913  009DCA  00                 	db	0
  2914  009DCB  00                 	db	0
  2915  009DCC  00                 	db	0
  2916  009DCD  00                 	db	0
  2917  009DCE  00                 	db	0
  2918  009DCF  00                 	db	0
  2919  009DD0  00                 	db	0
  2920  009DD1  00                 	db	0
  2921  009DD2  00                 	db	0
  2922  009DD3  00                 	db	0
  2923  009DD4  00                 	db	0
  2924  009DD5  00                 	db	0
  2925  009DD6  00                 	db	0
  2926  009DD7  00                 	db	0
  2927  009DD8  00                 	db	0
  2928  009DD9  00                 	db	0
  2929  009DDA  00                 	db	0
  2930  009DDB  00                 	db	0
  2931  009DDC  00                 	db	0
  2932  009DDD  00                 	db	0
  2933  009DDE  00                 	db	0
  2934  009DDF  00                 	db	0
  2935  009DE0  00                 	db	0
  2936  009DE1  00                 	db	0
  2937  009DE2  00                 	db	0
  2938  009DE3  00                 	db	0
  2939  009DE4                     __end_of_motor_prescaler_lookup:
  2940                           	opt stack 0
  2941  009DE4                     _USB_SD_Ptr:
  2942                           	opt stack 0
  2943  009DE4  E5                 	db	low _sd000
  2944  009DE5  A2                 	db	high _sd000
  2945  009DE6  FE                 	db	low _sd001
  2946  009DE7  A0                 	db	high _sd001
  2947  009DE8  32                 	db	low _sd002
  2948  009DE9  A1                 	db	high _sd002
  2949  009DEA  A1                 	db	low _sd003
  2950  009DEB  A1                 	db	high _sd003
  2951  009DEC                     __end_of_USB_SD_Ptr:
  2952                           	opt stack 0
  2953  009DEC                     _USB_CD_Ptr:
  2954                           	opt stack 0
  2955  009DEC  BE                 	db	low _configDescriptor1
  2956  009DED  A0                 	db	high _configDescriptor1
  2957  009DEE                     __end_of_USB_CD_Ptr:
  2958                           	opt stack 0
  2959  009DEE                     _dc_manual:
  2960                           	opt stack 0
  2961  009DEE  4D                 	db	77
  2962  009DEF  61                 	db	97
  2963  009DF0  6E                 	db	110
  2964  009DF1  75                 	db	117
  2965  009DF2  61                 	db	97
  2966  009DF3  6C                 	db	108
  2967  009DF4  20                 	db	32
  2968  009DF5  4D                 	db	77
  2969  009DF6  6F                 	db	111
  2970  009DF7  64                 	db	100
  2971  009DF8  65                 	db	101
  2972  009DF9  20                 	db	32
  2973  009DFA  20                 	db	32
  2974  009DFB  20                 	db	32
  2975  009DFC  20                 	db	32
  2976  009DFD  20                 	db	32
  2977  009DFE  20                 	db	32
  2978  009DFF  20                 	db	32
  2979  009E00  20                 	db	32
  2980  009E01  20                 	db	32
  2981  009E02  43                 	db	67
  2982  009E03  75                 	db	117
  2983  009E04  72                 	db	114
  2984  009E05  72                 	db	114
  2985  009E06  65                 	db	101
  2986  009E07  6E                 	db	110
  2987  009E08  74                 	db	116
  2988  009E09  20                 	db	32
  2989  009E0A  70                 	db	112
  2990  009E0B  6F                 	db	111
  2991  009E0C  73                 	db	115
  2992  009E0D  3A                 	db	58
  2993  009E0E  20                 	db	32
  2994  009E0F  20                 	db	32
  2995  009E10  20                 	db	32
  2996  009E11  20                 	db	32
  2997  009E12  20                 	db	32
  2998  009E13  20                 	db	32
  2999  009E14  20                 	db	32
  3000  009E15  01                 	db	1
  3001  009E16  54                 	db	84
  3002  009E17  75                 	db	117
  3003  009E18  72                 	db	114
  3004  009E19  6E                 	db	110
  3005  009E1A  20                 	db	32
  3006  009E1B  43                 	db	67
  3007  009E1C  43                 	db	67
  3008  009E1D  57                 	db	87
  3009  009E1E  20                 	db	32
  3010  009E1F  00                 	db	0
  3011  009E20  20                 	db	32
  3012  009E21  53                 	db	83
  3013  009E22  70                 	db	112
  3014  009E23  65                 	db	101
  3015  009E24  65                 	db	101
  3016  009E25  64                 	db	100
  3017  009E26  20                 	db	32
  3018  009E27  20                 	db	32
  3019  009E28  20                 	db	32
  3020  009E29  20                 	db	32
  3021  009E2A  53                 	db	83
  3022  009E2B  74                 	db	116
  3023  009E2C  61                 	db	97
  3024  009E2D  72                 	db	114
  3025  009E2E  74                 	db	116
  3026  009E2F  20                 	db	32
  3027  009E30  20                 	db	32
  3028  009E31  20                 	db	32
  3029  009E32  20                 	db	32
  3030  009E33  00                 	db	0
  3031  009E34  20                 	db	32
  3032  009E35  20                 	db	32
  3033  009E36  20                 	db	32
  3034  009E37  20                 	db	32
  3035  009E38  20                 	db	32
  3036  009E39  20                 	db	32
  3037  009E3A  20                 	db	32
  3038  009E3B  20                 	db	32
  3039  009E3C  20                 	db	32
  3040  009E3D  20                 	db	32
  3041  009E3E                     __end_of_dc_manual:
  3042                           	opt stack 0
  3043  009E3E                     _dc_zero:
  3044                           	opt stack 0
  3045  009E3E  52                 	db	82
  3046  009E3F  65                 	db	101
  3047  009E40  74                 	db	116
  3048  009E41  75                 	db	117
  3049  009E42  72                 	db	114
  3050  009E43  6E                 	db	110
  3051  009E44  20                 	db	32
  3052  009E45  74                 	db	116
  3053  009E46  6F                 	db	111
  3054  009E47  20                 	db	32
  3055  009E48  5A                 	db	90
  3056  009E49  65                 	db	101
  3057  009E4A  72                 	db	114
  3058  009E4B  6F                 	db	111
  3059  009E4C  3F                 	db	63
  3060  009E4D  20                 	db	32
  3061  009E4E  20                 	db	32
  3062  009E4F  20                 	db	32
  3063  009E50  20                 	db	32
  3064  009E51  20                 	db	32
  3065  009E52  43                 	db	67
  3066  009E53  75                 	db	117
  3067  009E54  72                 	db	114
  3068  009E55  72                 	db	114
  3069  009E56  65                 	db	101
  3070  009E57  6E                 	db	110
  3071  009E58  74                 	db	116
  3072  009E59  20                 	db	32
  3073  009E5A  70                 	db	112
  3074  009E5B  6F                 	db	111
  3075  009E5C  73                 	db	115
  3076  009E5D  3A                 	db	58
  3077  009E5E  20                 	db	32
  3078  009E5F  20                 	db	32
  3079  009E60  20                 	db	32
  3080  009E61  20                 	db	32
  3081  009E62  20                 	db	32
  3082  009E63  20                 	db	32
  3083  009E64  20                 	db	32
  3084  009E65  20                 	db	32
  3085  009E66  20                 	db	32
  3086  009E67  20                 	db	32
  3087  009E68  20                 	db	32
  3088  009E69  20                 	db	32
  3089  009E6A  20                 	db	32
  3090  009E6B  20                 	db	32
  3091  009E6C  20                 	db	32
  3092  009E6D  20                 	db	32
  3093  009E6E  20                 	db	32
  3094  009E6F  20                 	db	32
  3095  009E70  20                 	db	32
  3096  009E71  20                 	db	32
  3097  009E72  20                 	db	32
  3098  009E73  20                 	db	32
  3099  009E74  20                 	db	32
  3100  009E75  20                 	db	32
  3101  009E76  20                 	db	32
  3102  009E77  20                 	db	32
  3103  009E78  20                 	db	32
  3104  009E79  20                 	db	32
  3105  009E7A  20                 	db	32
  3106  009E7B  59                 	db	89
  3107  009E7C  65                 	db	101
  3108  009E7D  73                 	db	115
  3109  009E7E  20                 	db	32
  3110  009E7F  20                 	db	32
  3111  009E80  20                 	db	32
  3112  009E81  20                 	db	32
  3113  009E82  20                 	db	32
  3114  009E83  20                 	db	32
  3115  009E84  20                 	db	32
  3116  009E85  20                 	db	32
  3117  009E86  20                 	db	32
  3118  009E87  20                 	db	32
  3119  009E88  20                 	db	32
  3120  009E89  20                 	db	32
  3121  009E8A  4E                 	db	78
  3122  009E8B  6F                 	db	111
  3123  009E8C  20                 	db	32
  3124  009E8D  20                 	db	32
  3125  009E8E                     __end_of_dc_zero:
  3126                           	opt stack 0
  3127  009E8E                     _dc_arc2:
  3128                           	opt stack 0
  3129  009E8E  41                 	db	65
  3130  009E8F  72                 	db	114
  3131  009E90  63                 	db	99
  3132  009E91  3A                 	db	58
  3133  009E92  20                 	db	32
  3134  009E93  53                 	db	83
  3135  009E94  69                 	db	105
  3136  009E95  7A                 	db	122
  3137  009E96  65                 	db	101
  3138  009E97  3D                 	db	61
  3139  009E98  20                 	db	32
  3140  009E99  20                 	db	32
  3141  009E9A  20                 	db	32
  3142  009E9B  20                 	db	32
  3143  009E9C  20                 	db	32
  3144  009E9D  20                 	db	32
  3145  009E9E  20                 	db	32
  3146  009E9F  20                 	db	32
  3147  009EA0  20                 	db	32
  3148  009EA1  20                 	db	32
  3149  009EA2  43                 	db	67
  3150  009EA3  75                 	db	117
  3151  009EA4  72                 	db	114
  3152  009EA5  72                 	db	114
  3153  009EA6  65                 	db	101
  3154  009EA7  6E                 	db	110
  3155  009EA8  74                 	db	116
  3156  009EA9  20                 	db	32
  3157  009EAA  70                 	db	112
  3158  009EAB  6F                 	db	111
  3159  009EAC  73                 	db	115
  3160  009EAD  3A                 	db	58
  3161  009EAE  20                 	db	32
  3162  009EAF  20                 	db	32
  3163  009EB0  20                 	db	32
  3164  009EB1  20                 	db	32
  3165  009EB2  20                 	db	32
  3166  009EB3  20                 	db	32
  3167  009EB4  20                 	db	32
  3168  009EB5  01                 	db	1
  3169  009EB6  54                 	db	84
  3170  009EB7  75                 	db	117
  3171  009EB8  72                 	db	114
  3172  009EB9  6E                 	db	110
  3173  009EBA  20                 	db	32
  3174  009EBB  43                 	db	67
  3175  009EBC  43                 	db	67
  3176  009EBD  57                 	db	87
  3177  009EBE  20                 	db	32
  3178  009EBF  00                 	db	0
  3179  009EC0  20                 	db	32
  3180  009EC1  53                 	db	83
  3181  009EC2  70                 	db	112
  3182  009EC3  65                 	db	101
  3183  009EC4  65                 	db	101
  3184  009EC5  64                 	db	100
  3185  009EC6  20                 	db	32
  3186  009EC7  20                 	db	32
  3187  009EC8  20                 	db	32
  3188  009EC9  20                 	db	32
  3189  009ECA  53                 	db	83
  3190  009ECB  74                 	db	116
  3191  009ECC  61                 	db	97
  3192  009ECD  72                 	db	114
  3193  009ECE  74                 	db	116
  3194  009ECF  20                 	db	32
  3195  009ED0  20                 	db	32
  3196  009ED1  20                 	db	32
  3197  009ED2  20                 	db	32
  3198  009ED3  00                 	db	0
  3199  009ED4  20                 	db	32
  3200  009ED5  20                 	db	32
  3201  009ED6  20                 	db	32
  3202  009ED7  20                 	db	32
  3203  009ED8  20                 	db	32
  3204  009ED9  20                 	db	32
  3205  009EDA  20                 	db	32
  3206  009EDB  20                 	db	32
  3207  009EDC  20                 	db	32
  3208  009EDD  20                 	db	32
  3209  009EDE                     __end_of_dc_arc2:
  3210                           	opt stack 0
  3211  009EDE                     _dc_arc1:
  3212                           	opt stack 0
  3213  009EDE  41                 	db	65
  3214  009EDF  72                 	db	114
  3215  009EE0  63                 	db	99
  3216  009EE1  3A                 	db	58
  3217  009EE2  20                 	db	32
  3218  009EE3  53                 	db	83
  3219  009EE4  65                 	db	101
  3220  009EE5  74                 	db	116
  3221  009EE6  20                 	db	32
  3222  009EE7  61                 	db	97
  3223  009EE8  72                 	db	114
  3224  009EE9  63                 	db	99
  3225  009EEA  20                 	db	32
  3226  009EEB  73                 	db	115
  3227  009EEC  69                 	db	105
  3228  009EED  7A                 	db	122
  3229  009EEE  65                 	db	101
  3230  009EEF  20                 	db	32
  3231  009EF0  20                 	db	32
  3232  009EF1  20                 	db	32
  3233  009EF2  41                 	db	65
  3234  009EF3  72                 	db	114
  3235  009EF4  63                 	db	99
  3236  009EF5  20                 	db	32
  3237  009EF6  73                 	db	115
  3238  009EF7  69                 	db	105
  3239  009EF8  7A                 	db	122
  3240  009EF9  65                 	db	101
  3241  009EFA  3A                 	db	58
  3242  009EFB  20                 	db	32
  3243  009EFC  20                 	db	32
  3244  009EFD  20                 	db	32
  3245  009EFE  20                 	db	32
  3246  009EFF  20                 	db	32
  3247  009F00  20                 	db	32
  3248  009F01  20                 	db	32
  3249  009F02  20                 	db	32
  3250  009F03  20                 	db	32
  3251  009F04  20                 	db	32
  3252  009F05  20                 	db	32
  3253  009F06  53                 	db	83
  3254  009F07  74                 	db	116
  3255  009F08  65                 	db	101
  3256  009F09  70                 	db	112
  3257  009F0A  20                 	db	32
  3258  009F0B  73                 	db	115
  3259  009F0C  69                 	db	105
  3260  009F0D  7A                 	db	122
  3261  009F0E  65                 	db	101
  3262  009F0F  20                 	db	32
  3263  009F10  00                 	db	0
  3264  009F11  20                 	db	32
  3265  009F12  20                 	db	32
  3266  009F13  43                 	db	67
  3267  009F14  6F                 	db	111
  3268  009F15  6E                 	db	110
  3269  009F16  66                 	db	102
  3270  009F17  69                 	db	105
  3271  009F18  72                 	db	114
  3272  009F19  6D                 	db	109
  3273  009F1A  20                 	db	32
  3274  009F1B  20                 	db	32
  3275  009F1C  20                 	db	32
  3276  009F1D  20                 	db	32
  3277  009F1E  20                 	db	32
  3278  009F1F  20                 	db	32
  3279  009F20  20                 	db	32
  3280  009F21  20                 	db	32
  3281  009F22  20                 	db	32
  3282  009F23  20                 	db	32
  3283  009F24  00                 	db	0
  3284  009F25  20                 	db	32
  3285  009F26  20                 	db	32
  3286  009F27  43                 	db	67
  3287  009F28  61                 	db	97
  3288  009F29  6E                 	db	110
  3289  009F2A  63                 	db	99
  3290  009F2B  65                 	db	101
  3291  009F2C  6C                 	db	108
  3292  009F2D  20                 	db	32
  3293  009F2E                     __end_of_dc_arc1:
  3294                           	opt stack 0
  3295  009F2E                     _dc_divide2:
  3296                           	opt stack 0
  3297  009F2E  44                 	db	68
  3298  009F2F  69                 	db	105
  3299  009F30  76                 	db	118
  3300  009F31  69                 	db	105
  3301  009F32  64                 	db	100
  3302  009F33  65                 	db	101
  3303  009F34  3A                 	db	58
  3304  009F35  20                 	db	32
  3305  009F36  20                 	db	32
  3306  009F37  20                 	db	32
  3307  009F38  20                 	db	32
  3308  009F39  20                 	db	32
  3309  009F3A  20                 	db	32
  3310  009F3B  20                 	db	32
  3311  009F3C  20                 	db	32
  3312  009F3D  20                 	db	32
  3313  009F3E  20                 	db	32
  3314  009F3F  20                 	db	32
  3315  009F40  20                 	db	32
  3316  009F41  20                 	db	32
  3317  009F42  50                 	db	80
  3318  009F43  6F                 	db	111
  3319  009F44  73                 	db	115
  3320  009F45  3A                 	db	58
  3321  009F46  20                 	db	32
  3322  009F47  20                 	db	32
  3323  009F48  20                 	db	32
  3324  009F49  20                 	db	32
  3325  009F4A  20                 	db	32
  3326  009F4B  20                 	db	32
  3327  009F4C  20                 	db	32
  3328  009F4D  20                 	db	32
  3329  009F4E  20                 	db	32
  3330  009F4F  20                 	db	32
  3331  009F50  20                 	db	32
  3332  009F51  20                 	db	32
  3333  009F52  20                 	db	32
  3334  009F53  20                 	db	32
  3335  009F54  20                 	db	32
  3336  009F55  20                 	db	32
  3337  009F56  4A                 	db	74
  3338  009F57  75                 	db	117
  3339  009F58  6D                 	db	109
  3340  009F59  70                 	db	112
  3341  009F5A  20                 	db	32
  3342  009F5B  73                 	db	115
  3343  009F5C  69                 	db	105
  3344  009F5D  7A                 	db	122
  3345  009F5E  65                 	db	101
  3346  009F5F  3A                 	db	58
  3347  009F60  20                 	db	32
  3348  009F61  20                 	db	32
  3349  009F62  20                 	db	32
  3350  009F63  20                 	db	32
  3351  009F64  20                 	db	32
  3352  009F65  20                 	db	32
  3353  009F66  20                 	db	32
  3354  009F67  20                 	db	32
  3355  009F68  20                 	db	32
  3356  009F69  20                 	db	32
  3357  009F6A  50                 	db	80
  3358  009F6B  72                 	db	114
  3359  009F6C  65                 	db	101
  3360  009F6D  73                 	db	115
  3361  009F6E  73                 	db	115
  3362  009F6F  54                 	db	84
  3363  009F70  6F                 	db	111
  3364  009F71  4A                 	db	74
  3365  009F72  75                 	db	117
  3366  009F73  6D                 	db	109
  3367  009F74  70                 	db	112
  3368  009F75  20                 	db	32
  3369  009F76  00                 	db	0
  3370  009F77  20                 	db	32
  3371  009F78  43                 	db	67
  3372  009F79  61                 	db	97
  3373  009F7A  6E                 	db	110
  3374  009F7B  63                 	db	99
  3375  009F7C  65                 	db	101
  3376  009F7D  6C                 	db	108
  3377  009F7E                     __end_of_dc_divide2:
  3378                           	opt stack 0
  3379  009F7E                     _dc_divide1:
  3380                           	opt stack 0
  3381  009F7E  44                 	db	68
  3382  009F7F  69                 	db	105
  3383  009F80  76                 	db	118
  3384  009F81  69                 	db	105
  3385  009F82  64                 	db	100
  3386  009F83  65                 	db	101
  3387  009F84  3A                 	db	58
  3388  009F85  20                 	db	32
  3389  009F86  53                 	db	83
  3390  009F87  65                 	db	101
  3391  009F88  74                 	db	116
  3392  009F89  20                 	db	32
  3393  009F8A  64                 	db	100
  3394  009F8B  69                 	db	105
  3395  009F8C  76                 	db	118
  3396  009F8D  69                 	db	105
  3397  009F8E  73                 	db	115
  3398  009F8F  69                 	db	105
  3399  009F90  6F                 	db	111
  3400  009F91  6E                 	db	110
  3401  009F92  20                 	db	32
  3402  009F93  20                 	db	32
  3403  009F94  20                 	db	32
  3404  009F95  20                 	db	32
  3405  009F96  20                 	db	32
  3406  009F97  20                 	db	32
  3407  009F98  20                 	db	32
  3408  009F99  20                 	db	32
  3409  009F9A  20                 	db	32
  3410  009F9B  20                 	db	32
  3411  009F9C  20                 	db	32
  3412  009F9D  20                 	db	32
  3413  009F9E  20                 	db	32
  3414  009F9F  20                 	db	32
  3415  009FA0  20                 	db	32
  3416  009FA1  20                 	db	32
  3417  009FA2  20                 	db	32
  3418  009FA3  20                 	db	32
  3419  009FA4  20                 	db	32
  3420  009FA5  20                 	db	32
  3421  009FA6  20                 	db	32
  3422  009FA7  20                 	db	32
  3423  009FA8  20                 	db	32
  3424  009FA9  2F                 	db	47
  3425  009FAA  73                 	db	115
  3426  009FAB  74                 	db	116
  3427  009FAC  65                 	db	101
  3428  009FAD  70                 	db	112
  3429  009FAE  20                 	db	32
  3430  009FAF  20                 	db	32
  3431  009FB0  00                 	db	0
  3432  009FB1  20                 	db	32
  3433  009FB2  20                 	db	32
  3434  009FB3  43                 	db	67
  3435  009FB4  6F                 	db	111
  3436  009FB5  6E                 	db	110
  3437  009FB6  66                 	db	102
  3438  009FB7  69                 	db	105
  3439  009FB8  72                 	db	114
  3440  009FB9  6D                 	db	109
  3441  009FBA  31                 	db	49
  3442  009FBB  32                 	db	50
  3443  009FBC  33                 	db	51
  3444  009FBD  34                 	db	52
  3445  009FBE  20                 	db	32
  3446  009FBF  20                 	db	32
  3447  009FC0  20                 	db	32
  3448  009FC1  20                 	db	32
  3449  009FC2  20                 	db	32
  3450  009FC3  20                 	db	32
  3451  009FC4  00                 	db	0
  3452  009FC5  20                 	db	32
  3453  009FC6  20                 	db	32
  3454  009FC7  43                 	db	67
  3455  009FC8  61                 	db	97
  3456  009FC9  6E                 	db	110
  3457  009FCA  63                 	db	99
  3458  009FCB  65                 	db	101
  3459  009FCC  6C                 	db	108
  3460  009FCD  20                 	db	32
  3461  009FCE                     __end_of_dc_divide1:
  3462                           	opt stack 0
  3463  009FCE                     _dc_setup2:
  3464                           	opt stack 0
  3465  009FCE  53                 	db	83
  3466  009FCF  65                 	db	101
  3467  009FD0  74                 	db	116
  3468  009FD1  75                 	db	117
  3469  009FD2  70                 	db	112
  3470  009FD3  3A                 	db	58
  3471  009FD4  20                 	db	32
  3472  009FD5  53                 	db	83
  3473  009FD6  65                 	db	101
  3474  009FD7  74                 	db	116
  3475  009FD8  20                 	db	32
  3476  009FD9  64                 	db	100
  3477  009FDA  69                 	db	105
  3478  009FDB  72                 	db	114
  3479  009FDC  65                 	db	101
  3480  009FDD  63                 	db	99
  3481  009FDE  74                 	db	116
  3482  009FDF  69                 	db	105
  3483  009FE0  6F                 	db	111
  3484  009FE1  6E                 	db	110
  3485  009FE2  20                 	db	32
  3486  009FE3  20                 	db	32
  3487  009FE4  20                 	db	32
  3488  009FE5  20                 	db	32
  3489  009FE6  20                 	db	32
  3490  009FE7  20                 	db	32
  3491  009FE8  20                 	db	32
  3492  009FE9  20                 	db	32
  3493  009FEA  20                 	db	32
  3494  009FEB  20                 	db	32
  3495  009FEC  20                 	db	32
  3496  009FED  20                 	db	32
  3497  009FEE  20                 	db	32
  3498  009FEF  20                 	db	32
  3499  009FF0  20                 	db	32
  3500  009FF1  20                 	db	32
  3501  009FF2  20                 	db	32
  3502  009FF3  20                 	db	32
  3503  009FF4  20                 	db	32
  3504  009FF5  20                 	db	32
  3505  009FF6  20                 	db	32
  3506  009FF7  43                 	db	67
  3507  009FF8  6F                 	db	111
  3508  009FF9  75                 	db	117
  3509  009FFA  6E                 	db	110
  3510  009FFB  74                 	db	116
  3511  009FFC  65                 	db	101
  3512  009FFD  72                 	db	114
  3513  009FFE  43                 	db	67
  3514  009FFF  6C                 	db	108
  3515  00A000  6F                 	db	111
  3516  00A001  63                 	db	99
  3517  00A002  6B                 	db	107
  3518  00A003  77                 	db	119
  3519  00A004  69                 	db	105
  3520  00A005  73                 	db	115
  3521  00A006  65                 	db	101
  3522  00A007  20                 	db	32
  3523  00A008  20                 	db	32
  3524  00A009  20                 	db	32
  3525  00A00A  20                 	db	32
  3526  00A00B  43                 	db	67
  3527  00A00C  6C                 	db	108
  3528  00A00D  6F                 	db	111
  3529  00A00E  63                 	db	99
  3530  00A00F  6B                 	db	107
  3531  00A010  77                 	db	119
  3532  00A011  69                 	db	105
  3533  00A012  73                 	db	115
  3534  00A013  65                 	db	101
  3535  00A014  20                 	db	32
  3536  00A015  20                 	db	32
  3537  00A016  20                 	db	32
  3538  00A017  20                 	db	32
  3539  00A018  20                 	db	32
  3540  00A019  20                 	db	32
  3541  00A01A  20                 	db	32
  3542  00A01B  20                 	db	32
  3543  00A01C  20                 	db	32
  3544  00A01D  20                 	db	32
  3545  00A01E                     __end_of_dc_setup2:
  3546                           	opt stack 0
  3547  00A01E                     _dc_setup1:
  3548                           	opt stack 0
  3549  00A01E  53                 	db	83
  3550  00A01F  65                 	db	101
  3551  00A020  74                 	db	116
  3552  00A021  75                 	db	117
  3553  00A022  70                 	db	112
  3554  00A023  3A                 	db	58
  3555  00A024  20                 	db	32
  3556  00A025  53                 	db	83
  3557  00A026  65                 	db	101
  3558  00A027  74                 	db	116
  3559  00A028  20                 	db	32
  3560  00A029  7A                 	db	122
  3561  00A02A  65                 	db	101
  3562  00A02B  72                 	db	114
  3563  00A02C  6F                 	db	111
  3564  00A02D  20                 	db	32
  3565  00A02E  70                 	db	112
  3566  00A02F  6F                 	db	111
  3567  00A030  73                 	db	115
  3568  00A031  2E                 	db	46
  3569  00A032  20                 	db	32
  3570  00A033  20                 	db	32
  3571  00A034  20                 	db	32
  3572  00A035  20                 	db	32
  3573  00A036  20                 	db	32
  3574  00A037  20                 	db	32
  3575  00A038  20                 	db	32
  3576  00A039  20                 	db	32
  3577  00A03A  20                 	db	32
  3578  00A03B  20                 	db	32
  3579  00A03C  20                 	db	32
  3580  00A03D  20                 	db	32
  3581  00A03E  20                 	db	32
  3582  00A03F  20                 	db	32
  3583  00A040  20                 	db	32
  3584  00A041  20                 	db	32
  3585  00A042  20                 	db	32
  3586  00A043  20                 	db	32
  3587  00A044  20                 	db	32
  3588  00A045  20                 	db	32
  3589  00A046  53                 	db	83
  3590  00A047  74                 	db	116
  3591  00A048  65                 	db	101
  3592  00A049  70                 	db	112
  3593  00A04A  20                 	db	32
  3594  00A04B  73                 	db	115
  3595  00A04C  69                 	db	105
  3596  00A04D  7A                 	db	122
  3597  00A04E  65                 	db	101
  3598  00A04F  20                 	db	32
  3599  00A050  00                 	db	0
  3600  00A051  20                 	db	32
  3601  00A052  20                 	db	32
  3602  00A053  43                 	db	67
  3603  00A054  6F                 	db	111
  3604  00A055  6E                 	db	110
  3605  00A056  66                 	db	102
  3606  00A057  69                 	db	105
  3607  00A058  72                 	db	114
  3608  00A059  6D                 	db	109
  3609  00A05A  20                 	db	32
  3610  00A05B  78                 	db	120
  3611  00A05C  2E                 	db	46
  3612  00A05D  78                 	db	120
  3613  00A05E  78                 	db	120
  3614  00A05F  01                 	db	1
  3615  00A060  20                 	db	32
  3616  00A061  20                 	db	32
  3617  00A062  20                 	db	32
  3618  00A063  20                 	db	32
  3619  00A064  00                 	db	0
  3620  00A065  20                 	db	32
  3621  00A066  20                 	db	32
  3622  00A067  43                 	db	67
  3623  00A068  61                 	db	97
  3624  00A069  6E                 	db	110
  3625  00A06A  63                 	db	99
  3626  00A06B  65                 	db	101
  3627  00A06C  6C                 	db	108
  3628  00A06D  20                 	db	32
  3629  00A06E                     __end_of_dc_setup1:
  3630                           	opt stack 0
  3631  00A06E                     _dc_main:
  3632                           	opt stack 0
  3633  00A06E  4D                 	db	77
  3634  00A06F  61                 	db	97
  3635  00A070  69                 	db	105
  3636  00A071  6E                 	db	110
  3637  00A072  20                 	db	32
  3638  00A073  4D                 	db	77
  3639  00A074  65                 	db	101
  3640  00A075  6E                 	db	110
  3641  00A076  75                 	db	117
  3642  00A077  3A                 	db	58
  3643  00A078  20                 	db	32
  3644  00A079  20                 	db	32
  3645  00A07A  20                 	db	32
  3646  00A07B  20                 	db	32
  3647  00A07C  20                 	db	32
  3648  00A07D  20                 	db	32
  3649  00A07E  20                 	db	32
  3650  00A07F  20                 	db	32
  3651  00A080  20                 	db	32
  3652  00A081  20                 	db	32
  3653  00A082  20                 	db	32
  3654  00A083  53                 	db	83
  3655  00A084  65                 	db	101
  3656  00A085  74                 	db	116
  3657  00A086  75                 	db	117
  3658  00A087  70                 	db	112
  3659  00A088  20                 	db	32
  3660  00A089  20                 	db	32
  3661  00A08A  20                 	db	32
  3662  00A08B  20                 	db	32
  3663  00A08C  44                 	db	68
  3664  00A08D  69                 	db	105
  3665  00A08E  76                 	db	118
  3666  00A08F  69                 	db	105
  3667  00A090  64                 	db	100
  3668  00A091  65                 	db	101
  3669  00A092  20                 	db	32
  3670  00A093  20                 	db	32
  3671  00A094  20                 	db	32
  3672  00A095  20                 	db	32
  3673  00A096  20                 	db	32
  3674  00A097  41                 	db	65
  3675  00A098  72                 	db	114
  3676  00A099  63                 	db	99
  3677  00A09A  20                 	db	32
  3678  00A09B  20                 	db	32
  3679  00A09C  20                 	db	32
  3680  00A09D  20                 	db	32
  3681  00A09E  20                 	db	32
  3682  00A09F  20                 	db	32
  3683  00A0A0  4D                 	db	77
  3684  00A0A1  61                 	db	97
  3685  00A0A2  6E                 	db	110
  3686  00A0A3  75                 	db	117
  3687  00A0A4  61                 	db	97
  3688  00A0A5  6C                 	db	108
  3689  00A0A6  20                 	db	32
  3690  00A0A7  20                 	db	32
  3691  00A0A8  20                 	db	32
  3692  00A0A9  20                 	db	32
  3693  00A0AA  20                 	db	32
  3694  00A0AB  47                 	db	71
  3695  00A0AC  6F                 	db	111
  3696  00A0AD  32                 	db	50
  3697  00A0AE  5A                 	db	90
  3698  00A0AF  65                 	db	101
  3699  00A0B0  72                 	db	114
  3700  00A0B1  6F                 	db	111
  3701  00A0B2  20                 	db	32
  3702  00A0B3  20                 	db	32
  3703  00A0B4  20                 	db	32
  3704  00A0B5  20                 	db	32
  3705  00A0B6  20                 	db	32
  3706  00A0B7  20                 	db	32
  3707  00A0B8  20                 	db	32
  3708  00A0B9  20                 	db	32
  3709  00A0BA  20                 	db	32
  3710  00A0BB  20                 	db	32
  3711  00A0BC  20                 	db	32
  3712  00A0BD  20                 	db	32
  3713  00A0BE                     __end_of_dc_main:
  3714                           	opt stack 0
  3715  00A0BE                     _configDescriptor1:
  3716                           	opt stack 0
  3717  00A0BE  09                 	db	9
  3718  00A0BF  02                 	db	2
  3719  00A0C0  40                 	db	64
  3720  00A0C1  00                 	db	0
  3721  00A0C2  02                 	db	2
  3722  00A0C3  01                 	db	1
  3723  00A0C4  00                 	db	0
  3724  00A0C5  C0                 	db	192
  3725  00A0C6  32                 	db	50
  3726  00A0C7  09                 	db	9
  3727  00A0C8  04                 	db	4
  3728  00A0C9  00                 	db	0
  3729  00A0CA  00                 	db	0
  3730  00A0CB  02                 	db	2
  3731  00A0CC  03                 	db	3
  3732  00A0CD  00                 	db	0
  3733  00A0CE  00                 	db	0
  3734  00A0CF  00                 	db	0
  3735  00A0D0  09                 	db	9
  3736  00A0D1  21                 	db	33
  3737  00A0D2  11                 	db	17
  3738  00A0D3  01                 	db	1
  3739  00A0D4  00                 	db	0
  3740  00A0D5  01                 	db	1
  3741  00A0D6  22                 	db	34
  3742  00A0D7  1D                 	db	29
  3743  00A0D8  00                 	db	0
  3744  00A0D9  07                 	db	7
  3745  00A0DA  05                 	db	5
  3746  00A0DB  81                 	db	129
  3747  00A0DC  03                 	db	3
  3748  00A0DD  40                 	db	64
  3749  00A0DE  00                 	db	0
  3750  00A0DF  01                 	db	1
  3751  00A0E0  07                 	db	7
  3752  00A0E1  05                 	db	5
  3753  00A0E2  01                 	db	1
  3754  00A0E3  03                 	db	3
  3755  00A0E4  40                 	db	64
  3756  00A0E5  00                 	db	0
  3757  00A0E6  01                 	db	1
  3758  00A0E7  09                 	db	9
  3759  00A0E8  04                 	db	4
  3760  00A0E9  01                 	db	1
  3761  00A0EA  00                 	db	0
  3762  00A0EB  02                 	db	2
  3763  00A0EC  08                 	db	8
  3764  00A0ED  06                 	db	6
  3765  00A0EE  50                 	db	80
  3766  00A0EF  00                 	db	0
  3767  00A0F0  07                 	db	7
  3768  00A0F1  05                 	db	5
  3769  00A0F2  82                 	db	130
  3770  00A0F3  02                 	db	2
  3771  00A0F4  40                 	db	64
  3772  00A0F5  00                 	db	0
  3773  00A0F6  01                 	db	1
  3774  00A0F7  07                 	db	7
  3775  00A0F8  05                 	db	5
  3776  00A0F9  02                 	db	2
  3777  00A0FA  02                 	db	2
  3778  00A0FB  40                 	db	64
  3779  00A0FC  00                 	db	0
  3780  00A0FD  01                 	db	1
  3781  00A0FE                     __end_of_configDescriptor1:
  3782                           	opt stack 0
  3783  00A0FE                     _sd001:
  3784                           	opt stack 0
  3785  00A0FE  34                 	db	52
  3786  00A0FF  03                 	db	3
  3787  00A100  0053               	dw	83
  3788  00A102  006F               	dw	111
  3789  00A104  006C               	dw	108
  3790  00A106  0064               	dw	100
  3791  00A108  0065               	dw	101
  3792  00A10A  0072               	dw	114
  3793  00A10C  006E               	dw	110
  3794  00A10E  0065               	dw	101
  3795  00A110  0072               	dw	114
  3796  00A112  0064               	dw	100
  3797  00A114  002E               	dw	46
  3798  00A116  0063               	dw	99
  3799  00A118  006F               	dw	111
  3800  00A11A  006D               	dw	109
  3801  00A11C  0020               	dw	32
  3802  00A11E  0020               	dw	32
  3803  00A120  0020               	dw	32
  3804  00A122  0020               	dw	32
  3805  00A124  0020               	dw	32
  3806  00A126  0020               	dw	32
  3807  00A128  0020               	dw	32
  3808  00A12A  0020               	dw	32
  3809  00A12C  0020               	dw	32
  3810  00A12E  0020               	dw	32
  3811  00A130  0020               	dw	32
  3812  00A132                     __end_of_sd001:
  3813                           	opt stack 0
  3814  00A132                     _sd002:
  3815                           	opt stack 0
  3816  00A132  2E                 	db	46
  3817  00A133  03                 	db	3
  3818  00A134  0053               	dw	83
  3819  00A136  0074               	dw	116
  3820  00A138  0065               	dw	101
  3821  00A13A  0070               	dw	112
  3822  00A13C  0070               	dw	112
  3823  00A13E  0065               	dw	101
  3824  00A140  0072               	dw	114
  3825  00A142  004D               	dw	77
  3826  00A144  006F               	dw	111
  3827  00A146  0074               	dw	116
  3828  00A148  006F               	dw	111
  3829  00A14A  0072               	dw	114
  3830  00A14C  0043               	dw	67
  3831  00A14E  006F               	dw	111
  3832  00A150  006E               	dw	110
  3833  00A152  0074               	dw	116
  3834  00A154  0072               	dw	114
  3835  00A156  006F               	dw	111
  3836  00A158  006C               	dw	108
  3837  00A15A  006C               	dw	108
  3838  00A15C  0065               	dw	101
  3839  00A15E  0072               	dw	114
  3840  00A160                     __end_of_sd002:
  3841                           	opt stack 0
  3842  00A160                     _inq_resp:
  3843                           	opt stack 0
  3844  00A160  00                 	db	0
  3845  00A161  80                 	db	128
  3846  00A162  04                 	db	4
  3847  00A163  02                 	db	2
  3848  00A164  20                 	db	32
  3849  00A165  00                 	db	0
  3850  00A166  00                 	db	0
  3851  00A167  00                 	db	0
  3852  00A168  4D                 	db	77
  3853  00A169  69                 	db	105
  3854  00A16A  63                 	db	99
  3855  00A16B  72                 	db	114
  3856  00A16C  6F                 	db	111
  3857  00A16D  63                 	db	99
  3858  00A16E  68                 	db	104
  3859  00A16F  70                 	db	112
  3860  00A170  4D                 	db	77
  3861  00A171  61                 	db	97
  3862  00A172  73                 	db	115
  3863  00A173  73                 	db	115
  3864  00A174  20                 	db	32
  3865  00A175  53                 	db	83
  3866  00A176  74                 	db	116
  3867  00A177  6F                 	db	111
  3868  00A178  72                 	db	114
  3869  00A179  61                 	db	97
  3870  00A17A  67                 	db	103
  3871  00A17B  65                 	db	101
  3872  00A17C  20                 	db	32
  3873  00A17D  20                 	db	32
  3874  00A17E  20                 	db	32
  3875  00A17F  20                 	db	32
  3876  00A180  30                 	db	48
  3877  00A181  30                 	db	48
  3878  00A182  30                 	db	48
  3879  00A183  31                 	db	49
  3880  00A184                     __end_of_inq_resp:
  3881                           	opt stack 0
  3882  00A184                     _hid_rpt01:
  3883                           	opt stack 0
  3884  00A184  06                 	db	6
  3885  00A185  00                 	db	0
  3886  00A186  FF                 	db	255
  3887  00A187  09                 	db	9
  3888  00A188  01                 	db	1
  3889  00A189  A1                 	db	161
  3890  00A18A  01                 	db	1
  3891  00A18B  19                 	db	25
  3892  00A18C  01                 	db	1
  3893  00A18D  29                 	db	41
  3894  00A18E  40                 	db	64
  3895  00A18F  15                 	db	21
  3896  00A190  00                 	db	0
  3897  00A191  26                 	db	38
  3898  00A192  FF                 	db	255
  3899  00A193  00                 	db	0
  3900  00A194  75                 	db	117
  3901  00A195  08                 	db	8
  3902  00A196  95                 	db	149
  3903  00A197  40                 	db	64
  3904  00A198  81                 	db	129
  3905  00A199  00                 	db	0
  3906  00A19A  19                 	db	25
  3907  00A19B  01                 	db	1
  3908  00A19C  29                 	db	41
  3909  00A19D  40                 	db	64
  3910  00A19E  91                 	db	145
  3911  00A19F  00                 	db	0
  3912  00A1A0  C0                 	db	192
  3913  00A1A1                     __end_of_hid_rpt01:
  3914                           	opt stack 0
  3915  00A1A1                     _sd003:
  3916                           	opt stack 0
  3917  00A1A1  1A                 	db	26
  3918  00A1A2  03                 	db	3
  3919  00A1A3  0031               	dw	49
  3920  00A1A5  0032               	dw	50
  3921  00A1A7  0033               	dw	51
  3922  00A1A9  0034               	dw	52
  3923  00A1AB  0035               	dw	53
  3924  00A1AD  0036               	dw	54
  3925  00A1AF  0037               	dw	55
  3926  00A1B1  0038               	dw	56
  3927  00A1B3  0039               	dw	57
  3928  00A1B5  0030               	dw	48
  3929  00A1B7  0039               	dw	57
  3930  00A1B9  0039               	dw	57
  3931  00A1BB                     __end_of_sd003:
  3932                           	opt stack 0
  3933  00A1BB                     _overshoot_cost_in_steps_string:
  3934                           	opt stack 0
  3935  00A1BB  4F                 	db	79
  3936  00A1BC  56                 	db	86
  3937  00A1BD  45                 	db	69
  3938  00A1BE  52                 	db	82
  3939  00A1BF  53                 	db	83
  3940  00A1C0  48                 	db	72
  3941  00A1C1  4F                 	db	79
  3942  00A1C2  4F                 	db	79
  3943  00A1C3  54                 	db	84
  3944  00A1C4  5F                 	db	95
  3945  00A1C5  43                 	db	67
  3946  00A1C6  4F                 	db	79
  3947  00A1C7  53                 	db	83
  3948  00A1C8  54                 	db	84
  3949  00A1C9  5F                 	db	95
  3950  00A1CA  49                 	db	73
  3951  00A1CB  4E                 	db	78
  3952  00A1CC  5F                 	db	95
  3953  00A1CD  53                 	db	83
  3954  00A1CE  54                 	db	84
  3955  00A1CF  45                 	db	69
  3956  00A1D0  50                 	db	80
  3957  00A1D1  53                 	db	83
  3958  00A1D2  00                 	db	0
  3959  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3960                           	opt stack 0
  3961  00A1D3                     _maximum_speed_manual_string:
  3962                           	opt stack 0
  3963  00A1D3  4D                 	db	77
  3964  00A1D4  41                 	db	65
  3965  00A1D5  58                 	db	88
  3966  00A1D6  49                 	db	73
  3967  00A1D7  4D                 	db	77
  3968  00A1D8  55                 	db	85
  3969  00A1D9  4D                 	db	77
  3970  00A1DA  5F                 	db	95
  3971  00A1DB  53                 	db	83
  3972  00A1DC  50                 	db	80
  3973  00A1DD  45                 	db	69
  3974  00A1DE  45                 	db	69
  3975  00A1DF  44                 	db	68
  3976  00A1E0  5F                 	db	95
  3977  00A1E1  4D                 	db	77
  3978  00A1E2  41                 	db	65
  3979  00A1E3  4E                 	db	78
  3980  00A1E4  55                 	db	85
  3981  00A1E5  41                 	db	65
  3982  00A1E6  4C                 	db	76
  3983  00A1E7  00                 	db	0
  3984  00A1E8                     __end_of_maximum_speed_manual_string:
  3985                           	opt stack 0
  3986  00A1E8                     _initial_speed_manual_string:
  3987                           	opt stack 0
  3988  00A1E8  49                 	db	73
  3989  00A1E9  4E                 	db	78
  3990  00A1EA  49                 	db	73
  3991  00A1EB  54                 	db	84
  3992  00A1EC  49                 	db	73
  3993  00A1ED  41                 	db	65
  3994  00A1EE  4C                 	db	76
  3995  00A1EF  5F                 	db	95
  3996  00A1F0  53                 	db	83
  3997  00A1F1  50                 	db	80
  3998  00A1F2  45                 	db	69
  3999  00A1F3  45                 	db	69
  4000  00A1F4  44                 	db	68
  4001  00A1F5  5F                 	db	95
  4002  00A1F6  4D                 	db	77
  4003  00A1F7  41                 	db	65
  4004  00A1F8  4E                 	db	78
  4005  00A1F9  55                 	db	85
  4006  00A1FA  41                 	db	65
  4007  00A1FB  4C                 	db	76
  4008  00A1FC  00                 	db	0
  4009  00A1FD                     __end_of_initial_speed_manual_string:
  4010                           	opt stack 0
  4011  00A1FD                     _full_circle_in_steps_string:
  4012                           	opt stack 0
  4013  00A1FD  46                 	db	70
  4014  00A1FE  55                 	db	85
  4015  00A1FF  4C                 	db	76
  4016  00A200  4C                 	db	76
  4017  00A201  5F                 	db	95
  4018  00A202  43                 	db	67
  4019  00A203  49                 	db	73
  4020  00A204  52                 	db	82
  4021  00A205  43                 	db	67
  4022  00A206  4C                 	db	76
  4023  00A207  45                 	db	69
  4024  00A208  5F                 	db	95
  4025  00A209  49                 	db	73
  4026  00A20A  4E                 	db	78
  4027  00A20B  5F                 	db	95
  4028  00A20C  53                 	db	83
  4029  00A20D  54                 	db	84
  4030  00A20E  45                 	db	69
  4031  00A20F  50                 	db	80
  4032  00A210  53                 	db	83
  4033  00A211  00                 	db	0
  4034  00A212                     __end_of_full_circle_in_steps_string:
  4035                           	opt stack 0
  4036  00A212                     _overshoot_in_steps_string:
  4037                           	opt stack 0
  4038  00A212  4F                 	db	79
  4039  00A213  56                 	db	86
  4040  00A214  45                 	db	69
  4041  00A215  52                 	db	82
  4042  00A216  53                 	db	83
  4043  00A217  48                 	db	72
  4044  00A218  4F                 	db	79
  4045  00A219  4F                 	db	79
  4046  00A21A  54                 	db	84
  4047  00A21B  5F                 	db	95
  4048  00A21C  49                 	db	73
  4049  00A21D  4E                 	db	78
  4050  00A21E  5F                 	db	95
  4051  00A21F  53                 	db	83
  4052  00A220  54                 	db	84
  4053  00A221  45                 	db	69
  4054  00A222  50                 	db	80
  4055  00A223  53                 	db	83
  4056  00A224  00                 	db	0
  4057  00A225                     __end_of_overshoot_in_steps_string:
  4058                           	opt stack 0
  4059  00A225                     _maximum_speed_arc_string:
  4060                           	opt stack 0
  4061  00A225  4D                 	db	77
  4062  00A226  41                 	db	65
  4063  00A227  58                 	db	88
  4064  00A228  49                 	db	73
  4065  00A229  4D                 	db	77
  4066  00A22A  55                 	db	85
  4067  00A22B  4D                 	db	77
  4068  00A22C  5F                 	db	95
  4069  00A22D  53                 	db	83
  4070  00A22E  50                 	db	80
  4071  00A22F  45                 	db	69
  4072  00A230  45                 	db	69
  4073  00A231  44                 	db	68
  4074  00A232  5F                 	db	95
  4075  00A233  41                 	db	65
  4076  00A234  52                 	db	82
  4077  00A235  43                 	db	67
  4078  00A236  00                 	db	0
  4079  00A237                     __end_of_maximum_speed_arc_string:
  4080                           	opt stack 0
  4081  00A237                     _initial_speed_arc_string:
  4082                           	opt stack 0
  4083  00A237  49                 	db	73
  4084  00A238  4E                 	db	78
  4085  00A239  49                 	db	73
  4086  00A23A  54                 	db	84
  4087  00A23B  49                 	db	73
  4088  00A23C  41                 	db	65
  4089  00A23D  4C                 	db	76
  4090  00A23E  5F                 	db	95
  4091  00A23F  53                 	db	83
  4092  00A240  50                 	db	80
  4093  00A241  45                 	db	69
  4094  00A242  45                 	db	69
  4095  00A243  44                 	db	68
  4096  00A244  5F                 	db	95
  4097  00A245  41                 	db	65
  4098  00A246  52                 	db	82
  4099  00A247  43                 	db	67
  4100  00A248  00                 	db	0
  4101  00A249                     __end_of_initial_speed_arc_string:
  4102                           	opt stack 0
  4103  00A249                     _inverse_direction_string:
  4104                           	opt stack 0
  4105  00A249  49                 	db	73
  4106  00A24A  4E                 	db	78
  4107  00A24B  56                 	db	86
  4108  00A24C  45                 	db	69
  4109  00A24D  52                 	db	82
  4110  00A24E  53                 	db	83
  4111  00A24F  45                 	db	69
  4112  00A250  5F                 	db	95
  4113  00A251  44                 	db	68
  4114  00A252  49                 	db	73
  4115  00A253  52                 	db	82
  4116  00A254  45                 	db	69
  4117  00A255  43                 	db	67
  4118  00A256  54                 	db	84
  4119  00A257  49                 	db	73
  4120  00A258  4F                 	db	79
  4121  00A259  4E                 	db	78
  4122  00A25A  00                 	db	0
  4123  00A25B                     __end_of_inverse_direction_string:
  4124                           	opt stack 0
  4125  00A25B                     _device_dsc:
  4126                           	opt stack 0
  4127  00A25B  12                 	db	18
  4128  00A25C  01                 	db	1
  4129  00A25D  0200               	dw	512
  4130  00A25F  00                 	db	0
  4131  00A260  00                 	db	0
  4132  00A261  00                 	db	0
  4133  00A262  08                 	db	8
  4134  00A263  04D8               	dw	1240
  4135  00A265  EDCF               	dw	60879
  4136  00A267  0100               	dw	256
  4137  00A269  01                 	db	1
  4138  00A26A  02                 	db	2
  4139  00A26B  00                 	db	0
  4140  00A26C  01                 	db	1
  4141  00A26D                     __end_of_device_dsc:
  4142                           	opt stack 0
  4143  00A26D                     _use_ccw_limit_string:
  4144                           	opt stack 0
  4145  00A26D  55                 	db	85
  4146  00A26E  53                 	db	83
  4147  00A26F  45                 	db	69
  4148  00A270  5F                 	db	95
  4149  00A271  43                 	db	67
  4150  00A272  43                 	db	67
  4151  00A273  57                 	db	87
  4152  00A274  5F                 	db	95
  4153  00A275  4C                 	db	76
  4154  00A276  49                 	db	73
  4155  00A277  4D                 	db	77
  4156  00A278  49                 	db	73
  4157  00A279  54                 	db	84
  4158  00A27A  00                 	db	0
  4159  00A27B                     __end_of_use_ccw_limit_string:
  4160                           	opt stack 0
  4161  00A27B                     _beep_duration_string:
  4162                           	opt stack 0
  4163  00A27B  42                 	db	66
  4164  00A27C  45                 	db	69
  4165  00A27D  45                 	db	69
  4166  00A27E  50                 	db	80
  4167  00A27F  5F                 	db	95
  4168  00A280  44                 	db	68
  4169  00A281  55                 	db	85
  4170  00A282  52                 	db	82
  4171  00A283  41                 	db	65
  4172  00A284  54                 	db	84
  4173  00A285  49                 	db	73
  4174  00A286  4F                 	db	79
  4175  00A287  4E                 	db	78
  4176  00A288  00                 	db	0
  4177  00A289                     __end_of_beep_duration_string:
  4178                           	opt stack 0
  4179  00A289                     _maximum_speed_string:
  4180                           	opt stack 0
  4181  00A289  4D                 	db	77
  4182  00A28A  41                 	db	65
  4183  00A28B  58                 	db	88
  4184  00A28C  49                 	db	73
  4185  00A28D  4D                 	db	77
  4186  00A28E  55                 	db	85
  4187  00A28F  4D                 	db	77
  4188  00A290  5F                 	db	95
  4189  00A291  53                 	db	83
  4190  00A292  50                 	db	80
  4191  00A293  45                 	db	69
  4192  00A294  45                 	db	69
  4193  00A295  44                 	db	68
  4194  00A296  00                 	db	0
  4195  00A297                     __end_of_maximum_speed_string:
  4196                           	opt stack 0
  4197  00A297                     _minimum_speed_string:
  4198                           	opt stack 0
  4199  00A297  4D                 	db	77
  4200  00A298  49                 	db	73
  4201  00A299  4E                 	db	78
  4202  00A29A  49                 	db	73
  4203  00A29B  4D                 	db	77
  4204  00A29C  55                 	db	85
  4205  00A29D  4D                 	db	77
  4206  00A29E  5F                 	db	95
  4207  00A29F  53                 	db	83
  4208  00A2A0  50                 	db	80
  4209  00A2A1  45                 	db	69
  4210  00A2A2  45                 	db	69
  4211  00A2A3  44                 	db	68
  4212  00A2A4  00                 	db	0
  4213  00A2A5                     __end_of_minimum_speed_string:
  4214                           	opt stack 0
  4215  00A2A5                     _use_cw_limit_string:
  4216                           	opt stack 0
  4217  00A2A5  55                 	db	85
  4218  00A2A6  53                 	db	83
  4219  00A2A7  45                 	db	69
  4220  00A2A8  5F                 	db	95
  4221  00A2A9  43                 	db	67
  4222  00A2AA  57                 	db	87
  4223  00A2AB  5F                 	db	95
  4224  00A2AC  4C                 	db	76
  4225  00A2AD  49                 	db	73
  4226  00A2AE  4D                 	db	77
  4227  00A2AF  49                 	db	73
  4228  00A2B0  54                 	db	84
  4229  00A2B1  00                 	db	0
  4230  00A2B2                     __end_of_use_cw_limit_string:
  4231                           	opt stack 0
  4232  00A2B2                     _ccw_limit_string:
  4233                           	opt stack 0
  4234  00A2B2  43                 	db	67
  4235  00A2B3  43                 	db	67
  4236  00A2B4  57                 	db	87
  4237  00A2B5  5F                 	db	95
  4238  00A2B6  4C                 	db	76
  4239  00A2B7  49                 	db	73
  4240  00A2B8  4D                 	db	77
  4241  00A2B9  49                 	db	73
  4242  00A2BA  54                 	db	84
  4243  00A2BB  00                 	db	0
  4244  00A2BC                     __end_of_ccw_limit_string:
  4245                           	opt stack 0
  4246  00A2BC                     _cw_limit_string:
  4247                           	opt stack 0
  4248  00A2BC  43                 	db	67
  4249  00A2BD  57                 	db	87
  4250  00A2BE  5F                 	db	95
  4251  00A2BF  4C                 	db	76
  4252  00A2C0  49                 	db	73
  4253  00A2C1  4D                 	db	77
  4254  00A2C2  49                 	db	73
  4255  00A2C3  54                 	db	84
  4256  00A2C4  00                 	db	0
  4257  00A2C5                     __end_of_cw_limit_string:
  4258                           	opt stack 0
  4259  00A2C5                     _bit_pattern_ae:
  4260                           	opt stack 0
  4261  00A2C5  0A                 	db	10
  4262  00A2C6  00                 	db	0
  4263  00A2C7  0E                 	db	14
  4264  00A2C8  01                 	db	1
  4265  00A2C9  0F                 	db	15
  4266  00A2CA  11                 	db	17
  4267  00A2CB  0F                 	db	15
  4268  00A2CC  00                 	db	0
  4269  00A2CD                     __end_of_bit_pattern_ae:
  4270                           	opt stack 0
  4271  00A2CD                     _bit_pattern_degree:
  4272                           	opt stack 0
  4273  00A2CD  18                 	db	24
  4274  00A2CE  18                 	db	24
  4275  00A2CF  00                 	db	0
  4276  00A2D0  00                 	db	0
  4277  00A2D1  00                 	db	0
  4278  00A2D2  00                 	db	0
  4279  00A2D3  00                 	db	0
  4280  00A2D4  00                 	db	0
  4281  00A2D5                     __end_of_bit_pattern_degree:
  4282                           	opt stack 0
  4283  00A2D5                     _bit_pattern_verticalbar:
  4284                           	opt stack 0
  4285  00A2D5  04                 	db	4
  4286  00A2D6  04                 	db	4
  4287  00A2D7  04                 	db	4
  4288  00A2D8  04                 	db	4
  4289  00A2D9  04                 	db	4
  4290  00A2DA  04                 	db	4
  4291  00A2DB  04                 	db	4
  4292  00A2DC  04                 	db	4
  4293  00A2DD                     __end_of_bit_pattern_verticalbar:
  4294                           	opt stack 0
  4295  00A2DD                     _flash_command_pagesize_528:
  4296                           	opt stack 0
  4297  00A2DD  3D                 	db	61
  4298  00A2DE  2A                 	db	42
  4299  00A2DF  80                 	db	128
  4300  00A2E0  A7                 	db	167
  4301  00A2E1                     __end_of_flash_command_pagesize_528:
  4302                           	opt stack 0
  4303  00A2E1                     _flash_command_pagesize_512:
  4304                           	opt stack 0
  4305  00A2E1  3D                 	db	61
  4306  00A2E2  2A                 	db	42
  4307  00A2E3  80                 	db	128
  4308  00A2E4  A6                 	db	166
  4309  00A2E5                     __end_of_flash_command_pagesize_512:
  4310                           	opt stack 0
  4311  00A2E5                     _sd000:
  4312                           	opt stack 0
  4313  00A2E5  04                 	db	4
  4314  00A2E6  03                 	db	3
  4315  00A2E7  0409               	dw	1033
  4316  00A2E9                     __end_of_sd000:
  4317                           	opt stack 0
  4318  0000                     _RPINR22	set	3837
  4319  0000                     _RPOR23	set	3799
  4320  0000                     _RPOR21	set	3797
  4321  0000                     _RPINR21	set	3836
  4322  0000                     _RPOR4	set	3780
  4323  0000                     _PPSCONbits	set	3775
  4324  0000                     _CCPTMRS0bits	set	3922
  4325  0000                     _ANCON0bits	set	3912
  4326  0000                     _ANCON1bits	set	3913
  4327  0000                     _UEP0bits	set	3878
  4328  0000                     _UIEbits	set	3894
  4329  0000                     _UADDR	set	3896
  4330  0000                     _UIE	set	3894
  4331  0000                     _UEIE	set	3895
  4332  0000                     _UCFG	set	3897
  4333  0000                     _UEP1	set	3879
  4334  0000                     _UEP0	set	3878
  4335  0000                     _ADRESL	set	4035
  4336  0000                     _ADRESH	set	4036
  4337  0000                     _ADCON1bits	set	4033
  4338  0000                     _ADCON0bits	set	4034
  4339  0000                     _PORTA	set	3968
  4340  0000                     _PORTE	set	3972
  4341  0000                     _TMR2	set	4044
  4342  0000                     _PIE1bits	set	3997
  4343  0000                     _CCPR1L	set	4027
  4344  0000                     _PR2	set	4043
  4345  0000                     _T2CONbits	set	4042
  4346  0000                     _CCP1CONbits	set	4026
  4347  0000                     _RXADDRL	set	3945
  4348  0000                     _RXADDRH	set	3944
  4349  0000                     _DMABCL	set	3943
  4350  0000                     _DMABCH	set	3942
  4351  0000                     _TXADDRL	set	3947
  4352  0000                     _TXADDRH	set	3946
  4353  0000                     _DMACON2bits	set	3974
  4354  0000                     _DMACON1bits	set	3976
  4355  0000                     _SSP2CON1bits	set	3954
  4356  0000                     _SSP2STATbits	set	3955
  4357  0000                     _PORTDbits	set	3971
  4358  0000                     _PORTEbits	set	3972
  4359  0000                     _SSP1BUF	set	4041
  4360  0000                     _SSP1CON2bits	set	4037
  4361  0000                     _SSP1CON1bits	set	4038
  4362  0000                     _SSP1ADD	set	4040
  4363  0000                     _SSP1STATbits	set	4039
  4364  0000                     _PORTAbits	set	3968
  4365  0000                     _T0CONbits	set	4053
  4366  0000                     _TRISEbits	set	3990
  4367  0000                     _EECON2	set	4007
  4368  0000                     _LATBbits	set	3978
  4369  0000                     _LATAbits	set	3977
  4370  0000                     _TRISAbits	set	3986
  4371  0000                     _LATCbits	set	3979
  4372  0000                     _TRISCbits	set	3988
  4373  0000                     _TRISBbits	set	3987
  4374  0000                     _LATDbits	set	3980
  4375  0000                     _TRISDbits	set	3989
  4376  0000                     _TMR0L	set	4054
  4377  0000                     _TMR0H	set	4055
  4378  0000                     _PIR1bits	set	3998
  4379  0000                     _OSCCON	set	4051
  4380  0000                     _OSCTUNEbits	set	3995
  4381  0000                     _INTCONbits	set	4082
  4382  0000                     _IPR2bits	set	4002
  4383  0000                     _RCONbits	set	4048
  4384  0000                     _UCON	set	3941
  4385  0000                     _USTAT	set	3940
  4386  0000                     _PIR2bits	set	4001
  4387  0000                     _UIRbits	set	3938
  4388  0000                     _UCONbits	set	3941
  4389  0000                     _UIR	set	3938
  4390  0000                     _UEIR	set	3939
  4391  0000                     _PIE2bits	set	4000
  4392  00A2E9                     
  4393                           ; BSR set to: 1
  4394  00A2E9  68                 	db	104	;'h'
  4395  00A2EA  65                 	db	101	;'e'
  4396  00A2EB  6C                 	db	108	;'l'
  4397  00A2EC  6C                 	db	108	;'l'
  4398  00A2ED  6F                 	db	111	;'o'
  4399  00A2EE  20                 	db	32
  4400  00A2EF  77                 	db	119	;'w'
  4401  00A2F0  6F                 	db	111	;'o'
  4402  00A2F1  72                 	db	114	;'r'
  4403  00A2F2  6C                 	db	108	;'l'
  4404  00A2F3  64                 	db	100	;'d'
  4405  00A2F4  21                 	db	33
  4406  00A2F5  00                 	db	0
  4407  00A2F6                     
  4408                           ; BSR set to: 1
  4409  00A2F6  53                 	db	83	;'S'
  4410  00A2F7  74                 	db	116	;'t'
  4411  00A2F8  65                 	db	101	;'e'
  4412  00A2F9  70                 	db	112	;'p'
  4413  00A2FA  70                 	db	112	;'p'
  4414  00A2FB  65                 	db	101	;'e'
  4415  00A2FC  72                 	db	114	;'r'
  4416  00A2FD  43                 	db	67	;'C'
  4417  00A2FE  74                 	db	116	;'t'
  4418  00A2FF  72                 	db	114	;'r'
  4419  00A300  6C                 	db	108	;'l'
  4420  00A301  00                 	db	0
  4421  00A302                     
  4422                           ; BSR set to: 1
  4423  00A302  46                 	db	70	;'F'
  4424  00A303  49                 	db	73	;'I'
  4425  00A304  4C                 	db	76	;'L'
  4426  00A305  45                 	db	69	;'E'
  4427  00A306  20                 	db	32
  4428  00A307  20                 	db	32
  4429  00A308  20                 	db	32
  4430  00A309  20                 	db	32
  4431  00A30A  00                 	db	0
  4432  00A30B                     STR_7:
  4433                           
  4434                           ; BSR set to: 1
  4435  00A30B  4D                 	db	77	;'M'
  4436  00A30C  53                 	db	83	;'S'
  4437  00A30D  44                 	db	68	;'D'
  4438  00A30E  4F                 	db	79	;'O'
  4439  00A30F  53                 	db	83	;'S'
  4440  00A310  35                 	db	53	;'5'
  4441  00A311  2E                 	db	46
  4442  00A312  30                 	db	48	;'0'
  4443  00A313  00                 	db	0
  4444  00A314                     STR_1:
  4445                           
  4446                           ; BSR set to: 1
  4447  00A314  20                 	db	32
  4448  00A315  20                 	db	32
  4449  00A316  20                 	db	32
  4450  00A317  20                 	db	32
  4451  00A318  20                 	db	32
  4452  00A319  20                 	db	32
  4453  00A31A  20                 	db	32
  4454  00A31B  20                 	db	32
  4455  00A31C  00                 	db	0
  4456  00A31D                     STR_2:
  4457                           
  4458                           ; BSR set to: 1
  4459  00A31D  43                 	db	67	;'C'
  4460  00A31E  61                 	db	97	;'a'
  4461  00A31F  6E                 	db	110	;'n'
  4462  00A320  63                 	db	99	;'c'
  4463  00A321  65                 	db	101	;'e'
  4464  00A322  6C                 	db	108	;'l'
  4465  00A323  00                 	db	0
  4466  00A324                     STR_6:
  4467                           
  4468                           ; BSR set to: 1
  4469  00A324  53                 	db	83	;'S'
  4470  00A325  74                 	db	116	;'t'
  4471  00A326  6F                 	db	111	;'o'
  4472  00A327  70                 	db	112	;'p'
  4473  00A328  20                 	db	32
  4474  00A329  00                 	db	0
  4475  00A32A                     
  4476                           ; BSR set to: 1
  4477  00A32A  54                 	db	84	;'T'
  4478  00A32B  58                 	db	88	;'X'
  4479  00A32C  54                 	db	84	;'T'
  4480  00A32D  00                 	db	0
  4481  0000                     
  4482                           ; #config settings
  4483  00A32E  00                 	db	0	; dummy byte at the end
  4484  0000                     
  4485                           	psect	cinit
  4486  013576                     __pcinit:
  4487                           	opt stack 0
  4488  013576                     start_initialization:
  4489                           	opt stack 0
  4490  013576                     __initialization:
  4491                           	opt stack 0
  4492                           
  4493                           ; Initialize objects allocated to BANK4 (80 bytes)
  4494                           ; load TBLPTR registers with __pidataBANK4
  4495  013576  0EF6               	movlw	low __pidataBANK4
  4496  013578  6EF6               	movwf	tblptrl,c
  4497  01357A  0E4A               	movlw	high __pidataBANK4
  4498  01357C  6EF7               	movwf	tblptrh,c
  4499  01357E  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4500  013580  6EF8               	movwf	tblptru,c
  4501  013582  EE04  F000         	lfsr	0,__pdataBANK4
  4502  013586  EE10 F050          	lfsr	1,80
  4503  01358A                     copy_data0:
  4504  01358A  0009               	tblrd		*+
  4505  01358C  CFF5 FFEE          	movff	tablat,postinc0
  4506  013590  50E5               	movf	postdec1,w,c
  4507  013592  50E1               	movf	fsr1l,w,c
  4508  013594  E1FA               	bnz	copy_data0
  4509                           
  4510                           ; Initialize objects allocated to BANK2 (77 bytes)
  4511                           ; load TBLPTR registers with __pidataBANK2
  4512  013596  0E86               	movlw	low __pidataBANK2
  4513  013598  6EF6               	movwf	tblptrl,c
  4514  01359A  0E4C               	movlw	high __pidataBANK2
  4515  01359C  6EF7               	movwf	tblptrh,c
  4516  01359E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4517  0135A0  6EF8               	movwf	tblptru,c
  4518  0135A2  EE02  F089         	lfsr	0,__pdataBANK2
  4519  0135A6  EE10 F04D          	lfsr	1,77
  4520  0135AA                     copy_data1:
  4521  0135AA  0009               	tblrd		*+
  4522  0135AC  CFF5 FFEE          	movff	tablat,postinc0
  4523  0135B0  50E5               	movf	postdec1,w,c
  4524  0135B2  50E1               	movf	fsr1l,w,c
  4525  0135B4  E1FA               	bnz	copy_data1
  4526                           
  4527                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4528  0135B6  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4529  0135BA  EE14 F000          	lfsr	1,1024
  4530  0135BE                     clear_0:
  4531  0135BE  6AEE               	clrf	postinc0,c
  4532  0135C0  50E5               	movf	postdec1,w,c
  4533  0135C2  50E1               	movf	fsr1l,w,c
  4534  0135C4  E1FC               	bnz	clear_0
  4535  0135C6  50E2               	movf	fsr1h,w,c
  4536  0135C8  E1FA               	bnz	clear_0
  4537                           
  4538                           ; Clear objects allocated to BANK3 (192 bytes)
  4539  0135CA  EE03  F000         	lfsr	0,__pbssBANK3
  4540  0135CE  0EC0               	movlw	192
  4541  0135D0                     clear_1:
  4542  0135D0  6AEE               	clrf	postinc0,c
  4543  0135D2  06E8               	decf	wreg,f,c
  4544  0135D4  E1FD               	bnz	clear_1
  4545                           
  4546                           ; Clear objects allocated to BANK2 (137 bytes)
  4547  0135D6  EE02  F000         	lfsr	0,__pbssBANK2
  4548  0135DA  0E89               	movlw	137
  4549  0135DC                     clear_2:
  4550  0135DC  6AEE               	clrf	postinc0,c
  4551  0135DE  06E8               	decf	wreg,f,c
  4552  0135E0  E1FD               	bnz	clear_2
  4553                           
  4554                           ; Clear objects allocated to BANK1 (195 bytes)
  4555  0135E2  EE01  F000         	lfsr	0,__pbssBANK1
  4556  0135E6  0EC3               	movlw	195
  4557  0135E8                     clear_3:
  4558  0135E8  6AEE               	clrf	postinc0,c
  4559  0135EA  06E8               	decf	wreg,f,c
  4560  0135EC  E1FD               	bnz	clear_3
  4561                           
  4562                           ; Clear objects allocated to BANK0 (2 bytes)
  4563  0135EE  0100               	movlb	0
  4564  0135F0  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4565  0135F2  6BFE               	clrf	__pbssBANK0& (0+255),b
  4566                           
  4567                           ; Clear objects allocated to COMRAM (13 bytes)
  4568  0135F4  EE00  F052         	lfsr	0,__pbssCOMRAM
  4569  0135F8  0E0D               	movlw	13
  4570  0135FA                     clear_4:
  4571  0135FA  6AEE               	clrf	postinc0,c
  4572  0135FC  06E8               	decf	wreg,f,c
  4573  0135FE  E1FD               	bnz	clear_4
  4574  013600                     end_of_initialization:
  4575                           	opt stack 0
  4576  013600                     __end_of__initialization:
  4577                           	opt stack 0
  4578  013600  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4579  013602  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4580  013604  0100               	movlb	0
  4581  013606  EF25  F09A         	goto	_main	;jump to C main() function
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           postinc0	equ	0xFEE
  4587                           wreg	equ	0xFE8
  4588                           postdec1	equ	0xFE5
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           
  4592                           	psect	bssCOMRAM
  4593  000052                     __pbssCOMRAM:
  4594                           	opt stack 0
  4595  000052                     _inPipes:
  4596                           	opt stack 0
  4597  000052                     	ds	6
  4598  000058                     _motor_current_stepcount:
  4599                           	opt stack 0
  4600  000058                     	ds	4
  4601  00005C                     _pBDTEntryEP0OutNext:
  4602                           	opt stack 0
  4603  00005C                     	ds	2
  4604  00005E                     _USBDeviceState:
  4605                           	opt stack 0
  4606  00005E                     	ds	1
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           postinc0	equ	0xFEE
  4612                           wreg	equ	0xFE8
  4613                           postdec1	equ	0xFE5
  4614                           fsr1h	equ	0xFE2
  4615                           fsr1l	equ	0xFE1
  4616                           
  4617                           	psect	bssBANK0
  4618  0000FE                     __pbssBANK0:
  4619                           	opt stack 0
  4620  0000FE                     _motor_current_speed:
  4621                           	opt stack 0
  4622  0000FE                     	ds	2
  4623                           tblptru	equ	0xFF8
  4624                           tblptrh	equ	0xFF7
  4625                           tblptrl	equ	0xFF6
  4626                           tablat	equ	0xFF5
  4627                           postinc0	equ	0xFEE
  4628                           wreg	equ	0xFE8
  4629                           postdec1	equ	0xFE5
  4630                           fsr1h	equ	0xFE2
  4631                           fsr1l	equ	0xFE1
  4632                           
  4633                           	psect	bssBANK1
  4634  000100                     __pbssBANK1:
  4635                           	opt stack 0
  4636  000100                     _gblSenseData:
  4637                           	opt stack 0
  4638  000100                     	ds	18
  4639  000112                     _outPipes:
  4640                           	opt stack 0
  4641  000112                     	ds	9
  4642  00011B                     _pBDTEntryIn:
  4643                           	opt stack 0
  4644  00011B                     	ds	6
  4645  000121                     _pBDTEntryOut:
  4646                           	opt stack 0
  4647  000121                     	ds	6
  4648  000127                     _motor_final_stepcount:
  4649                           	opt stack 0
  4650  000127                     	ds	4
  4651  00012B                     _LBA:
  4652                           	opt stack 0
  4653  00012B                     	ds	4
  4654  00012F                     _USB1msTickCount:
  4655                           	opt stack 0
  4656  00012F                     	ds	4
  4657  000133                     _config_external:
  4658                           	opt stack 0
  4659  000133                     	ds	3
  4660  000136                     _config_internal:
  4661                           	opt stack 0
  4662  000136                     	ds	3
  4663  000139                     _ep_data_out:
  4664                           	opt stack 0
  4665  000139                     	ds	3
  4666  00013C                     _ep_data_in:
  4667                           	opt stack 0
  4668  00013C                     	ds	3
  4669  00013F                     _motor_maximum_speed:
  4670                           	opt stack 0
  4671  00013F                     	ds	2
  4672  000141                     _USBInHandle:
  4673                           	opt stack 0
  4674  000141                     	ds	2
  4675  000143                     _USBOutHandle:
  4676                           	opt stack 0
  4677  000143                     	ds	2
  4678  000145                     _TransferLength:
  4679                           	opt stack 0
  4680  000145                     	ds	2
  4681  000147                     _gblMediaPresent:
  4682                           	opt stack 0
  4683  000147                     	ds	2
  4684  000149                     _USBMSDInHandle:
  4685                           	opt stack 0
  4686  000149                     	ds	2
  4687  00014B                     _USBMSDOutHandle:
  4688                           	opt stack 0
  4689  00014B                     	ds	2
  4690  00014D                     _ptrNextData:
  4691                           	opt stack 0
  4692  00014D                     	ds	2
  4693  00014F                     _pDst:
  4694                           	opt stack 0
  4695  00014F                     	ds	2
  4696  000151                     _pBDTEntryEP0OutCurrent:
  4697                           	opt stack 0
  4698  000151                     	ds	2
  4699  000153                     _enc2:
  4700                           	opt stack 0
  4701  000153                     	ds	1
  4702  000154                     _enc1:
  4703                           	opt stack 0
  4704  000154                     	ds	1
  4705  000155                     _motor_direction:
  4706                           	opt stack 0
  4707  000155                     	ds	1
  4708  000156                     _motor_mode:
  4709                           	opt stack 0
  4710  000156                     	ds	1
  4711  000157                     _motor_cue_write_index:
  4712                           	opt stack 0
  4713  000157                     	ds	1
  4714  000158                     _motor_cue_read_index:
  4715                           	opt stack 0
  4716  000158                     	ds	1
  4717  000159                     _active_configuration:
  4718                           	opt stack 0
  4719  000159                     	ds	1
  4720  00015A                     _power_state:
  4721                           	opt stack 0
  4722  00015A                     	ds	1
  4723  00015B                     _MSDCBWValid:
  4724                           	opt stack 0
  4725  00015B                     	ds	1
  4726  00015C                     _MSDHostNoData:
  4727                           	opt stack 0
  4728  00015C                     	ds	1
  4729  00015D                     _SoftDetach:
  4730                           	opt stack 0
  4731  00015D                     	ds	1
  4732  00015E                     _gblCBWLength:
  4733                           	opt stack 0
  4734  00015E                     	ds	1
  4735  00015F                     _MSDRetryAttempt:
  4736                           	opt stack 0
  4737  00015F                     	ds	1
  4738  000160                     _MSDWriteState:
  4739                           	opt stack 0
  4740  000160                     	ds	1
  4741  000161                     _MSDReadState:
  4742                           	opt stack 0
  4743  000161                     	ds	1
  4744  000162                     _MSDCommandState:
  4745                           	opt stack 0
  4746  000162                     	ds	1
  4747  000163                     _MSD_State:
  4748                           	opt stack 0
  4749  000163                     	ds	1
  4750  000164                     _USBTicksSinceSuspendEnd:
  4751                           	opt stack 0
  4752  000164                     	ds	1
  4753  000165                     _USBDeferOUTDataStagePackets:
  4754                           	opt stack 0
  4755  000165                     	ds	1
  4756  000166                     _USBDeferINDataStagePackets:
  4757                           	opt stack 0
  4758  000166                     	ds	1
  4759  000167                     _USBStatusStageEnabledFlag2:
  4760                           	opt stack 0
  4761  000167                     	ds	1
  4762  000168                     _USBStatusStageEnabledFlag1:
  4763                           	opt stack 0
  4764  000168                     	ds	1
  4765  000169                     _USBDeferStatusStagePacket:
  4766                           	opt stack 0
  4767  000169                     	ds	1
  4768  00016A                     _USBStatusStageTimeoutCounter:
  4769                           	opt stack 0
  4770  00016A                     	ds	1
  4771  00016B                     _BothEP0OutUOWNsSet:
  4772                           	opt stack 0
  4773  00016B                     	ds	1
  4774  00016C                     _endpoint_number:
  4775                           	opt stack 0
  4776  00016C                     	ds	1
  4777  00016D                     _USBBusIsSuspended:
  4778                           	opt stack 0
  4779  00016D                     	ds	1
  4780  00016E                     _RemoteWakeup:
  4781                           	opt stack 0
  4782  00016E                     	ds	1
  4783  00016F                     _controlTransferState:
  4784                           	opt stack 0
  4785  00016F                     	ds	1
  4786  000170                     _shortPacketStatus:
  4787                           	opt stack 0
  4788  000170                     	ds	1
  4789  000171                     _os:
  4790                           	opt stack 0
  4791  000171                     	ds	48
  4792  0001A1                     _config:
  4793                           	opt stack 0
  4794  0001A1                     	ds	28
  4795  0001BD                     _USBAlternateInterface:
  4796                           	opt stack 0
  4797  0001BD                     	ds	2
  4798  0001BF                     _active_protocol:
  4799                           	opt stack 0
  4800  0001BF                     	ds	1
  4801  0001C0                     _idle_rate:
  4802                           	opt stack 0
  4803  0001C0                     	ds	1
  4804  0001C1                     _USTATcopy:
  4805                           	opt stack 0
  4806  0001C1                     	ds	1
  4807  0001C2                     _USBActiveConfiguration:
  4808                           	opt stack 0
  4809  0001C2                     	ds	1
  4810                           tblptru	equ	0xFF8
  4811                           tblptrh	equ	0xFF7
  4812                           tblptrl	equ	0xFF6
  4813                           tablat	equ	0xFF5
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           postdec1	equ	0xFE5
  4817                           fsr1h	equ	0xFE2
  4818                           fsr1l	equ	0xFE1
  4819                           
  4820                           	psect	bssBANK2
  4821  000200                     __pbssBANK2:
  4822                           	opt stack 0
  4823  000200                     _gblCBW:
  4824                           	opt stack 0
  4825  000200                     	ds	31
  4826  00021F                     _params:
  4827                           	opt stack 0
  4828  00021F                     	ds	7
  4829  000226                     _motor_next_speed_check:
  4830                           	opt stack 0
  4831  000226                     	ds	4
  4832  00022A                     _gblBLKLen:
  4833                           	opt stack 0
  4834  00022A                     	ds	4
  4835  00022E                     _gblNumBLKS:
  4836                           	opt stack 0
  4837  00022E                     	ds	4
  4838  000232                     _MSBBufferIndex:
  4839                           	opt stack 0
  4840  000232                     	ds	2
  4841  000234                     _display_content:
  4842                           	opt stack 0
  4843  000234                     	ds	80
  4844  000284                     _mediaInformation:
  4845                           	opt stack 0
  4846  000284                     	ds	5
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           
  4857                           	psect	dataBANK2
  4858  000289                     __pdataBANK2:
  4859                           	opt stack 0
  4860  000289                     _LUN:
  4861                           	opt stack 0
  4862  000289                     	ds	29
  4863  0002A6                     i2c_display_init@F6951:
  4864                           	opt stack 0
  4865  0002A6                     	ds	9
  4866  0002AF                     __i2c_display_send_init_sequence@F6948:
  4867                           	opt stack 0
  4868  0002AF                     	ds	9
  4869  0002B8                     	ds	8
  4870  0002C0                     _configFile_used_name:
  4871                           	opt stack 0
  4872  0002C0                     	ds	8
  4873  0002C8                     _configFile_name:
  4874                           	opt stack 0
  4875  0002C8                     	ds	8
  4876  0002D0                     _configFile_used_extention:
  4877                           	opt stack 0
  4878  0002D0                     	ds	3
  4879  0002D3                     _configFile_extention:
  4880                           	opt stack 0
  4881  0002D3                     	ds	3
  4882                           tblptru	equ	0xFF8
  4883                           tblptrh	equ	0xFF7
  4884                           tblptrl	equ	0xFF6
  4885                           tablat	equ	0xFF5
  4886                           postinc0	equ	0xFEE
  4887                           wreg	equ	0xFE8
  4888                           postdec1	equ	0xFE5
  4889                           fsr1h	equ	0xFE2
  4890                           fsr1l	equ	0xFE1
  4891                           
  4892                           	psect	bssBANK3
  4893  000300                     __pbssBANK3:
  4894                           	opt stack 0
  4895  000300                     _motor_command_cue:
  4896                           	opt stack 0
  4897  000300                     	ds	64
  4898  000340                     _ToSendDataBuffer:
  4899                           	opt stack 0
  4900  000340                     	ds	64
  4901  000380                     _ReceivedDataBuffer:
  4902                           	opt stack 0
  4903  000380                     	ds	64
  4904                           tblptru	equ	0xFF8
  4905                           tblptrh	equ	0xFF7
  4906                           tblptrl	equ	0xFF6
  4907                           tablat	equ	0xFF5
  4908                           postinc0	equ	0xFEE
  4909                           wreg	equ	0xFE8
  4910                           postdec1	equ	0xFE5
  4911                           fsr1h	equ	0xFE2
  4912                           fsr1l	equ	0xFE1
  4913                           
  4914                           	psect	dataBANK4
  4915  000400                     __pdataBANK4:
  4916                           	opt stack 0
  4917  000400                     _dc_startup:
  4918                           	opt stack 0
  4919  000400                     	ds	80
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postdec1	equ	0xFE5
  4927                           fsr1h	equ	0xFE2
  4928                           fsr1l	equ	0xFE1
  4929                           
  4930                           	psect	bssBIGRAMll
  4931  000800                     __pbssBIGRAMll:
  4932                           	opt stack 0
  4933  000800                     _ConfigFile_buffer:
  4934                           	opt stack 0
  4935  000800                     	ds	512
  4936  000A00                     _buffer:
  4937                           	opt stack 0
  4938  000A00                     	ds	512
  4939                           tblptru	equ	0xFF8
  4940                           tblptrh	equ	0xFF7
  4941                           tblptrl	equ	0xFF6
  4942                           tablat	equ	0xFF5
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           postdec1	equ	0xFE5
  4946                           fsr1h	equ	0xFE2
  4947                           fsr1l	equ	0xFE1
  4948                           
  4949                           	psect	cstackBANK1
  4950  0001C3                     __pcstackBANK1:
  4951                           	opt stack 0
  4952  0001C3                     ??_configFile_read:
  4953                           
  4954                           ; 1 bytes @ 0x0
  4955  0001C3                     	ds	8
  4956  0001CB                     configFile_read@item_string:
  4957                           	opt stack 0
  4958                           
  4959                           ; 31 bytes @ 0x8
  4960  0001CB                     	ds	31
  4961  0001EA                     configFile_read@value_string:
  4962                           	opt stack 0
  4963                           
  4964                           ; 12 bytes @ 0x27
  4965  0001EA                     	ds	12
  4966  0001F6                     configFile_read@file_size:
  4967                           	opt stack 0
  4968                           
  4969                           ; 4 bytes @ 0x33
  4970  0001F6                     	ds	4
  4971  0001FA                     configFile_read@file_number:
  4972                           	opt stack 0
  4973                           
  4974                           ; 1 bytes @ 0x37
  4975  0001FA                     	ds	1
  4976  0001FB                     configFile_read@position:
  4977                           	opt stack 0
  4978                           
  4979                           ; 4 bytes @ 0x38
  4980  0001FB                     	ds	4
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           postinc0	equ	0xFEE
  4986                           wreg	equ	0xFE8
  4987                           postdec1	equ	0xFE5
  4988                           fsr1h	equ	0xFE2
  4989                           fsr1l	equ	0xFE1
  4990                           
  4991                           	psect	cstackBANK0
  4992  000060                     __pcstackBANK0:
  4993                           	opt stack 0
  4994  000060                     ??_motor_stop:
  4995  000060                     ??_isdigit:
  4996  000060                     ??__i2c_wait_idle:
  4997  000060                     ??__display_clear:
  4998  000060                     ??__divide_jump_size_increment:
  4999  000060                     ??__divide_jump_size_decrement:
  5000  000060                     ?_USBTransferOnePacket:
  5001                           	opt stack 0
  5002  000060                     ?_ExternalFlash_MediaInitialize:
  5003                           	opt stack 0
  5004  000060                     ?_ExternalFlash_SectorSizeRead:
  5005                           	opt stack 0
  5006  000060                     ?_strlen:
  5007                           	opt stack 0
  5008  000060                     ?_strncmp:
  5009                           	opt stack 0
  5010  000060                     ?__sector_from_file_number:
  5011                           	opt stack 0
  5012  000060                     ?__offset_from_file_number:
  5013                           	opt stack 0
  5014  000060                     ?__data_sector_from_cluster:
  5015                           	opt stack 0
  5016  000060                     ?__fat_sector_from_cluster:
  5017                           	opt stack 0
  5018  000060                     ?__fat_offset_from_cluster:
  5019                           	opt stack 0
  5020  000060                     ?__cluster_from_sector_and_offset:
  5021                           	opt stack 0
  5022  000060                     ?__get_available_offset_from_buffer:
  5023                           	opt stack 0
  5024  000060                     ?__read_value_from_offset:
  5025                           	opt stack 0
  5026  000060                     ?__get_time:
  5027                           	opt stack 0
  5028  000060                     ?__get_date:
  5029                           	opt stack 0
  5030  000060                     ?__encoder_next_setup_stepsize:
  5031                           	opt stack 0
  5032  000060                     ?__encoder_next_arc_step_size:
  5033                           	opt stack 0
  5034  000060                     ?___wmul:
  5035                           	opt stack 0
  5036  000060                     ?___lwdiv:
  5037                           	opt stack 0
  5038  000060                     ?___lwmod:
  5039                           	opt stack 0
  5040  000060                     ?_ExternalFlash_CapacityRead:
  5041                           	opt stack 0
  5042  000060                     ?___lmul:
  5043                           	opt stack 0
  5044  000060                     ?___lldiv:
  5045                           	opt stack 0
  5046  000060                     ?___aldiv:
  5047                           	opt stack 0
  5048  000060                     ?___almod:
  5049                           	opt stack 0
  5050  000060                     ?___fltol:
  5051                           	opt stack 0
  5052  000060                     ?___llmod:
  5053                           	opt stack 0
  5054  000060                     ?___xxtofl:
  5055                           	opt stack 0
  5056  000060                     USBTransferOnePacket@dir:
  5057                           	opt stack 0
  5058  000060                     USBStallEndpoint@dir:
  5059                           	opt stack 0
  5060  000060                     __i2c_send@dat:
  5061                           	opt stack 0
  5062  000060                     display_get_character@position:
  5063                           	opt stack 0
  5064  000060                     __encoder_next_divide_step_size@old_stepsize:
  5065                           	opt stack 0
  5066  000060                     toupper@c:
  5067                           	opt stack 0
  5068  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5069                           	opt stack 0
  5070  000060                     SYSTEM_Initialize@pll_startup_counter:
  5071                           	opt stack 0
  5072  000060                     ExternalFlash_MediaInitialize@config:
  5073                           	opt stack 0
  5074  000060                     ExternalFlash_SectorSizeRead@config:
  5075                           	opt stack 0
  5076  000060                     ExternalFlash_CapacityRead@config:
  5077                           	opt stack 0
  5078  000060                     ExternalFlash_MediaDetect@config:
  5079                           	opt stack 0
  5080  000060                     ExternalFlash_WriteProtectStateGet@config:
  5081                           	opt stack 0
  5082  000060                     __data_sector_from_cluster@fat_cluster:
  5083                           	opt stack 0
  5084  000060                     __fat_sector_from_cluster@cluster:
  5085                           	opt stack 0
  5086  000060                     __fat_offset_from_cluster@cluster:
  5087                           	opt stack 0
  5088  000060                     __cluster_from_sector_and_offset@sector:
  5089                           	opt stack 0
  5090  000060                     __get_available_offset_from_buffer@minimum_offset:
  5091                           	opt stack 0
  5092  000060                     __read_value_from_offset@offset:
  5093                           	opt stack 0
  5094  000060                     __write_value_to_offset@offset:
  5095                           	opt stack 0
  5096  000060                     __get_mbr@idx:
  5097                           	opt stack 0
  5098  000060                     __get_fbr@idx:
  5099                           	opt stack 0
  5100  000060                     spi_tx@data:
  5101                           	opt stack 0
  5102  000060                     spi_tx_tx@command:
  5103                           	opt stack 0
  5104  000060                     spi_tx_rx@command:
  5105                           	opt stack 0
  5106  000060                     __fill_buffer_get_mode_details@outBuffer:
  5107                           	opt stack 0
  5108  000060                     motor_change_speed@new_speed:
  5109                           	opt stack 0
  5110  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5111                           	opt stack 0
  5112  000060                     __encoder_next_arc_step_size@old_stepsize:
  5113                           	opt stack 0
  5114  000060                     __get_item@item_string:
  5115                           	opt stack 0
  5116  000060                     ___wmul@multiplier:
  5117                           	opt stack 0
  5118  000060                     ___lwdiv@dividend:
  5119                           	opt stack 0
  5120  000060                     ___lwmod@dividend:
  5121                           	opt stack 0
  5122  000060                     memcpy@d1:
  5123                           	opt stack 0
  5124  000060                     memset@p1:
  5125                           	opt stack 0
  5126  000060                     strlen@s:
  5127                           	opt stack 0
  5128  000060                     strncmp@s1:
  5129                           	opt stack 0
  5130  000060                     __spi_init@details:
  5131                           	opt stack 0
  5132  000060                     ___lmul@multiplier:
  5133                           	opt stack 0
  5134  000060                     ___lldiv@dividend:
  5135                           	opt stack 0
  5136  000060                     ___aldiv@dividend:
  5137                           	opt stack 0
  5138  000060                     ___almod@dividend:
  5139                           	opt stack 0
  5140  000060                     ___fltol@f1:
  5141                           	opt stack 0
  5142  000060                     ___llmod@dividend:
  5143                           	opt stack 0
  5144  000060                     ___xxtofl@val:
  5145                           	opt stack 0
  5146                           
  5147                           ; 4 bytes @ 0x0
  5148  000060                     	ds	1
  5149  000061                     ??_USBStallEndpoint:
  5150  000061                     ??_display_get_character:
  5151  000061                     ?_stricmp:
  5152                           	opt stack 0
  5153  000061                     _isdigit$8218:
  5154                           	opt stack 0
  5155  000061                     USBTransferOnePacket@data:
  5156                           	opt stack 0
  5157  000061                     stricmp@s1:
  5158                           	opt stack 0
  5159                           
  5160                           ; 2 bytes @ 0x1
  5161  000061                     	ds	1
  5162  000062                     ??_MSDComputeDeviceInAndResidue:
  5163  000062                     ??_strlen:
  5164  000062                     ??__fill_buffer_get_mode_details:
  5165  000062                     ??__get_mbr:
  5166  000062                     ??__get_fbr:
  5167  000062                     ??__encoder_next_setup_stepsize:
  5168  000062                     ??__encoder_next_arc_step_size:
  5169  000062                     __display_clear@row:
  5170                           	opt stack 0
  5171  000062                     __sector_from_file_number@file_number:
  5172                           	opt stack 0
  5173  000062                     __offset_from_file_number@file_number:
  5174                           	opt stack 0
  5175  000062                     isdigit@c:
  5176                           	opt stack 0
  5177  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5178                           	opt stack 0
  5179  000062                     __cluster_from_sector_and_offset@offset:
  5180                           	opt stack 0
  5181  000062                     __get_available_offset_from_buffer@buffer:
  5182                           	opt stack 0
  5183  000062                     __read_value_from_offset@buffer:
  5184                           	opt stack 0
  5185  000062                     __write_value_to_offset@buffer:
  5186                           	opt stack 0
  5187  000062                     spi_tx@length:
  5188                           	opt stack 0
  5189  000062                     spi_tx_tx@command_length:
  5190                           	opt stack 0
  5191  000062                     spi_tx_rx@command_length:
  5192                           	opt stack 0
  5193  000062                     motor_set_manual_speed@new_speed:
  5194                           	opt stack 0
  5195  000062                     __get_item@value_string:
  5196                           	opt stack 0
  5197  000062                     ___wmul@multiplicand:
  5198                           	opt stack 0
  5199  000062                     ___lwdiv@divisor:
  5200                           	opt stack 0
  5201  000062                     ___lwmod@divisor:
  5202                           	opt stack 0
  5203  000062                     memcpy@s1:
  5204                           	opt stack 0
  5205  000062                     memset@c:
  5206                           	opt stack 0
  5207  000062                     strncmp@s2:
  5208                           	opt stack 0
  5209                           
  5210                           ; 2 bytes @ 0x2
  5211  000062                     	ds	1
  5212  000063                     USBTransferOnePacket@len:
  5213                           	opt stack 0
  5214  000063                     __display_clear@col:
  5215                           	opt stack 0
  5216  000063                     display_get_character@line:
  5217                           	opt stack 0
  5218  000063                     spi_init@configuration:
  5219                           	opt stack 0
  5220  000063                     __sector_from_file_number@sector:
  5221                           	opt stack 0
  5222  000063                     __offset_from_file_number@offset:
  5223                           	opt stack 0
  5224  000063                     stricmp@s2:
  5225                           	opt stack 0
  5226                           
  5227                           ; 2 bytes @ 0x3
  5228  000063                     	ds	1
  5229  000064                     ??_USBTransferOnePacket:
  5230  000064                     ??_spi_tx:
  5231  000064                     ??__get_available_offset_from_buffer:
  5232  000064                     ??__read_value_from_offset:
  5233  000064                     ??___fltol:
  5234  000064                     ??___xxtofl:
  5235  000064                     SYSTEM_Initialize@state:
  5236                           	opt stack 0
  5237  000064                     ___lwmod@counter:
  5238                           	opt stack 0
  5239  000064                     __write_value_to_offset@value:
  5240                           	opt stack 0
  5241  000064                     spi_tx_tx@data:
  5242                           	opt stack 0
  5243  000064                     spi_tx_rx@data:
  5244                           	opt stack 0
  5245  000064                     __fill_buffer_get_display@outBuffer:
  5246                           	opt stack 0
  5247  000064                     __parse_set_manual_speed@data:
  5248                           	opt stack 0
  5249  000064                     __get_item@buffer:
  5250                           	opt stack 0
  5251  000064                     ___wmul@product:
  5252                           	opt stack 0
  5253  000064                     ___lwdiv@quotient:
  5254                           	opt stack 0
  5255  000064                     memcpy@n:
  5256                           	opt stack 0
  5257  000064                     memset@n:
  5258                           	opt stack 0
  5259  000064                     strlen@cp:
  5260                           	opt stack 0
  5261  000064                     strncmp@len:
  5262                           	opt stack 0
  5263  000064                     ___lmul@multiplicand:
  5264                           	opt stack 0
  5265  000064                     ___lldiv@divisor:
  5266                           	opt stack 0
  5267  000064                     ___aldiv@divisor:
  5268                           	opt stack 0
  5269  000064                     ___almod@divisor:
  5270                           	opt stack 0
  5271  000064                     ___llmod@divisor:
  5272                           	opt stack 0
  5273                           
  5274                           ; 4 bytes @ 0x4
  5275  000064                     	ds	1
  5276  000065                     ??_stricmp:
  5277  000065                     USBStallEndpoint@ep:
  5278                           	opt stack 0
  5279  000065                     __i2c_eeprom_busy@busy:
  5280                           	opt stack 0
  5281  000065                     __i2c_write@data:
  5282                           	opt stack 0
  5283  000065                     __i2c_read@data:
  5284                           	opt stack 0
  5285  000065                     i2c_display_write_fixed@data:
  5286                           	opt stack 0
  5287                           
  5288                           ; 2 bytes @ 0x5
  5289  000065                     	ds	1
  5290  000066                     ??_strncmp:
  5291  000066                     ??__write_value_to_offset:
  5292  000066                     ??__get_item:
  5293  000066                     ?_atoi:
  5294                           	opt stack 0
  5295  000066                     __fill_buffer_get_display@secondHalf:
  5296                           	opt stack 0
  5297  000066                     ___lwdiv@counter:
  5298                           	opt stack 0
  5299  000066                     stricmp@r:
  5300                           	opt stack 0
  5301  000066                     USBStallEndpoint@p:
  5302                           	opt stack 0
  5303  000066                     __get_available_offset_from_buffer@offset:
  5304                           	opt stack 0
  5305  000066                     spi_tx_tx@data_length:
  5306                           	opt stack 0
  5307  000066                     spi_tx_rx@data_length:
  5308                           	opt stack 0
  5309  000066                     __parse_set_manual_speed@out_buffer:
  5310                           	opt stack 0
  5311  000066                     atoi@s:
  5312                           	opt stack 0
  5313  000066                     memcpy@d:
  5314                           	opt stack 0
  5315  000066                     memset@p:
  5316                           	opt stack 0
  5317                           
  5318                           ; 2 bytes @ 0x6
  5319  000066                     	ds	1
  5320  000067                     ??__fill_buffer_get_display:
  5321  000067                     __i2c_write@length:
  5322                           	opt stack 0
  5323  000067                     __i2c_read@length:
  5324                           	opt stack 0
  5325  000067                     i2c_display_write_fixed@length:
  5326                           	opt stack 0
  5327  000067                     __read_value_from_offset@value:
  5328                           	opt stack 0
  5329  000067                     utoa@buf:
  5330                           	opt stack 0
  5331                           
  5332                           ; 2 bytes @ 0x7
  5333  000067                     	ds	1
  5334  000068                     ??_spi_tx_rx:
  5335  000068                     ??_spi_tx_tx:
  5336  000068                     ??_atoi:
  5337  000068                     ??__i2c_read:
  5338  000068                     USBDeviceInit@i:
  5339                           	opt stack 0
  5340  000068                     USBTransferOnePacket@ep:
  5341                           	opt stack 0
  5342  000068                     MSDErrorHandler@ErrorCase:
  5343                           	opt stack 0
  5344  000068                     __i2c_write@slave_address:
  5345                           	opt stack 0
  5346  000068                     i2c_display_write_fixed@pos:
  5347                           	opt stack 0
  5348  000068                     __flash_wakeup@command:
  5349                           	opt stack 0
  5350  000068                     ___aldiv@counter:
  5351                           	opt stack 0
  5352  000068                     ___almod@counter:
  5353                           	opt stack 0
  5354  000068                     ___fltol@sign1:
  5355                           	opt stack 0
  5356  000068                     ___llmod@counter:
  5357                           	opt stack 0
  5358  000068                     ___xxtofl@sign:
  5359                           	opt stack 0
  5360  000068                     __parse_set_manual_speed@out_idx_ptr:
  5361                           	opt stack 0
  5362  000068                     memcpy@s:
  5363                           	opt stack 0
  5364  000068                     ___lmul@product:
  5365                           	opt stack 0
  5366  000068                     ___lldiv@quotient:
  5367                           	opt stack 0
  5368                           
  5369                           ; 4 bytes @ 0x8
  5370  000068                     	ds	1
  5371  000069                     MSDErrorHandler@OldMSD_State:
  5372                           	opt stack 0
  5373  000069                     __i2c_write@cntr:
  5374                           	opt stack 0
  5375  000069                     __get_item@value_ctr:
  5376                           	opt stack 0
  5377  000069                     ___aldiv@sign:
  5378                           	opt stack 0
  5379  000069                     ___almod@sign:
  5380                           	opt stack 0
  5381  000069                     ___fltol@exp1:
  5382                           	opt stack 0
  5383  000069                     ___xxtofl@exp:
  5384                           	opt stack 0
  5385  000069                     USBTransferOnePacket@handle:
  5386                           	opt stack 0
  5387  000069                     utoa@val:
  5388                           	opt stack 0
  5389                           
  5390                           ; 2 bytes @ 0x9
  5391  000069                     	ds	1
  5392  00006A                     ??__parse_set_manual_speed:
  5393  00006A                     ??_i2c_display_init:
  5394  00006A                     __ic2_display_set_ddram_address@address:
  5395                           	opt stack 0
  5396  00006A                     __get_item@item_ctr:
  5397                           	opt stack 0
  5398  00006A                     atoi@sign:
  5399                           	opt stack 0
  5400  00006A                     memcpy@tmp:
  5401                           	opt stack 0
  5402  00006A                     __ic2_display_set_cgram_address@data_array:
  5403                           	opt stack 0
  5404  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5405                           	opt stack 0
  5406  00006A                     ___aldiv@quotient:
  5407                           	opt stack 0
  5408  00006A                     ___xxtofl@arg:
  5409                           	opt stack 0
  5410                           
  5411                           ; 4 bytes @ 0xA
  5412  00006A                     	ds	1
  5413  00006B                     __ic2_display_set_ddram_address@data_array:
  5414                           	opt stack 0
  5415  00006B                     __fill_buffer_get_status@outBuffer:
  5416                           	opt stack 0
  5417  00006B                     __parse_set_manual_speed@new_speed:
  5418                           	opt stack 0
  5419  00006B                     atoi@a:
  5420                           	opt stack 0
  5421  00006B                     utoa@base:
  5422                           	opt stack 0
  5423  00006B                     i2c_display_init@init_sequence:
  5424                           	opt stack 0
  5425                           
  5426                           ; 9 bytes @ 0xB
  5427  00006B                     	ds	1
  5428  00006C                     ?__flash_get_status:
  5429                           	opt stack 0
  5430  00006C                     ?_atol:
  5431                           	opt stack 0
  5432  00006C                     __fill_buffer_get_display@cntr:
  5433                           	opt stack 0
  5434  00006C                     ___lldiv@counter:
  5435                           	opt stack 0
  5436  00006C                     atol@s:
  5437                           	opt stack 0
  5438                           
  5439                           ; 2 bytes @ 0xC
  5440  00006C                     	ds	1
  5441  00006D                     __ic2_display_set_cgram_address@address:
  5442                           	opt stack 0
  5443  00006D                     i2c_display_cursor@position:
  5444                           	opt stack 0
  5445  00006D                     __fill_buffer_get_display@line:
  5446                           	opt stack 0
  5447  00006D                     utoa@v:
  5448                           	opt stack 0
  5449  00006D                     ultoa@buf:
  5450                           	opt stack 0
  5451                           
  5452                           ; 2 bytes @ 0xD
  5453  00006D                     	ds	1
  5454  00006E                     ?___fldiv:
  5455                           	opt stack 0
  5456  00006E                     ?___flmul:
  5457                           	opt stack 0
  5458  00006E                     ?___flneg:
  5459                           	opt stack 0
  5460  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5461                           	opt stack 0
  5462  00006E                     i2c_display_cursor@line:
  5463                           	opt stack 0
  5464  00006E                     __flash_get_status@command:
  5465                           	opt stack 0
  5466  00006E                     __fill_buffer_get_display@start_line:
  5467                           	opt stack 0
  5468  00006E                     i2c_display_program_custom_character@bit_pattern:
  5469                           	opt stack 0
  5470  00006E                     ___flneg@f1:
  5471                           	opt stack 0
  5472  00006E                     ___fldiv@b:
  5473                           	opt stack 0
  5474  00006E                     ___flmul@b:
  5475                           	opt stack 0
  5476                           
  5477                           ; 4 bytes @ 0xE
  5478  00006E                     	ds	1
  5479  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5480                           	opt stack 0
  5481  00006F                     __i2c_read@slave_address:
  5482                           	opt stack 0
  5483  00006F                     i2c_display_cursor@address:
  5484                           	opt stack 0
  5485  00006F                     __fill_buffer_get_display@position:
  5486                           	opt stack 0
  5487  00006F                     utoa@c:
  5488                           	opt stack 0
  5489  00006F                     __flash_get_status@status:
  5490                           	opt stack 0
  5491  00006F                     ultoa@val:
  5492                           	opt stack 0
  5493                           
  5494                           ; 4 bytes @ 0xF
  5495  00006F                     	ds	1
  5496  000070                     ??_atol:
  5497  000070                     ??_i2c_display_program_custom_character:
  5498  000070                     MSDCheckForErrorCases@DeviceNoData:
  5499                           	opt stack 0
  5500  000070                     __i2c_read@cntr:
  5501                           	opt stack 0
  5502  000070                     display_update@line:
  5503                           	opt stack 0
  5504  000070                     api_prepare@inBuffer:
  5505                           	opt stack 0
  5506  000070                     itoa@buf:
  5507                           	opt stack 0
  5508                           
  5509                           ; 2 bytes @ 0x10
  5510  000070                     	ds	1
  5511  000071                     i2c_eeprom_read@address:
  5512                           	opt stack 0
  5513  000071                     __flash_is_busy@status:
  5514                           	opt stack 0
  5515                           
  5516                           ; 2 bytes @ 0x11
  5517  000071                     	ds	1
  5518  000072                     ?___fladd:
  5519                           	opt stack 0
  5520  000072                     api_prepare@outBuffer:
  5521                           	opt stack 0
  5522  000072                     itoa@val:
  5523                           	opt stack 0
  5524  000072                     ___fladd@b:
  5525                           	opt stack 0
  5526  000072                     ___fldiv@a:
  5527                           	opt stack 0
  5528  000072                     ___flmul@a:
  5529                           	opt stack 0
  5530                           
  5531                           ; 4 bytes @ 0x12
  5532  000072                     	ds	1
  5533  000073                     i2c_eeprom_read@data:
  5534                           	opt stack 0
  5535  000073                     __flash_copy_page_to_buffer@page:
  5536                           	opt stack 0
  5537  000073                     __flash_compare_page_to_buffer@page:
  5538                           	opt stack 0
  5539  000073                     __flash_write_to_buffer@start:
  5540                           	opt stack 0
  5541  000073                     __flash_write_page_from_buffer@page:
  5542                           	opt stack 0
  5543  000073                     __flash_partial_read@page:
  5544                           	opt stack 0
  5545  000073                     ultoa@base:
  5546                           	opt stack 0
  5547  000073                     __flash_set_page_size@command:
  5548                           	opt stack 0
  5549                           
  5550                           ; 4 bytes @ 0x13
  5551  000073                     	ds	1
  5552  000074                     api_prepare@command:
  5553                           	opt stack 0
  5554  000074                     atol@sign:
  5555                           	opt stack 0
  5556  000074                     itoa@base:
  5557                           	opt stack 0
  5558  000074                     i2c_display_program_custom_character@data_array:
  5559                           	opt stack 0
  5560                           
  5561                           ; 11 bytes @ 0x14
  5562  000074                     	ds	1
  5563  000075                     i2c_eeprom_read@length:
  5564                           	opt stack 0
  5565  000075                     __flash_copy_page_to_buffer@buffer:
  5566                           	opt stack 0
  5567  000075                     __flash_compare_page_to_buffer@buffer:
  5568                           	opt stack 0
  5569  000075                     __flash_write_page_from_buffer@buffer:
  5570                           	opt stack 0
  5571  000075                     __flash_write_to_buffer@data:
  5572                           	opt stack 0
  5573  000075                     __flash_partial_read@start:
  5574                           	opt stack 0
  5575  000075                     atol@a:
  5576                           	opt stack 0
  5577  000075                     ultoa@v:
  5578                           	opt stack 0
  5579                           
  5580                           ; 4 bytes @ 0x15
  5581  000075                     	ds	1
  5582  000076                     ??_i2c_eeprom_read:
  5583  000076                     ??___fldiv:
  5584  000076                     ??___flmul:
  5585  000076                     ??__flash_copy_page_to_buffer:
  5586  000076                     ??__flash_compare_page_to_buffer:
  5587  000076                     ??__flash_write_page_from_buffer:
  5588  000076                     itoa@cp:
  5589                           	opt stack 0
  5590  000076                     ___fladd@a:
  5591                           	opt stack 0
  5592                           
  5593                           ; 4 bytes @ 0x16
  5594  000076                     	ds	1
  5595  000077                     i2c_eeprom_read@addr:
  5596                           	opt stack 0
  5597  000077                     __flash_set_page_size@size:
  5598                           	opt stack 0
  5599  000077                     __flash_write_to_buffer@data_length:
  5600                           	opt stack 0
  5601  000077                     __flash_partial_read@length:
  5602                           	opt stack 0
  5603                           
  5604                           ; 2 bytes @ 0x17
  5605  000077                     	ds	1
  5606  000078                     i2c_eeprom_read@slave_address:
  5607                           	opt stack 0
  5608  000078                     __display_padded_itoa@value:
  5609                           	opt stack 0
  5610  000078                     __display_itoa_u16@value:
  5611                           	opt stack 0
  5612                           
  5613                           ; 2 bytes @ 0x18
  5614  000078                     	ds	1
  5615  000079                     ?_i2c_eeprom_readUint32:
  5616                           	opt stack 0
  5617  000079                     __flash_write_to_buffer@buffer:
  5618                           	opt stack 0
  5619  000079                     atol@c:
  5620                           	opt stack 0
  5621  000079                     ultoa@c:
  5622                           	opt stack 0
  5623  000079                     i2c_eeprom_readUint32@address:
  5624                           	opt stack 0
  5625  000079                     __flash_compare_page_to_buffer@status:
  5626                           	opt stack 0
  5627  000079                     __flash_partial_read@data:
  5628                           	opt stack 0
  5629  000079                     __flash_copy_page_to_buffer@command:
  5630                           	opt stack 0
  5631  000079                     __flash_write_page_from_buffer@command:
  5632                           	opt stack 0
  5633                           
  5634                           ; 4 bytes @ 0x19
  5635  000079                     	ds	1
  5636  00007A                     ??___fladd:
  5637  00007A                     __display_padded_itoa@length:
  5638                           	opt stack 0
  5639  00007A                     ___flmul@sign:
  5640                           	opt stack 0
  5641  00007A                     __display_itoa_u16@text:
  5642                           	opt stack 0
  5643  00007A                     __parse_item@item_string:
  5644                           	opt stack 0
  5645  00007A                     ltoa@buf:
  5646                           	opt stack 0
  5647  00007A                     __flash_write_to_buffer@command:
  5648                           	opt stack 0
  5649  00007A                     ___fldiv@rem:
  5650                           	opt stack 0
  5651                           
  5652                           ; 4 bytes @ 0x1A
  5653  00007A                     	ds	1
  5654  00007B                     ??__flash_partial_read:
  5655  00007B                     __display_padded_itoa@text:
  5656                           	opt stack 0
  5657  00007B                     __flash_compare_page_to_buffer@command:
  5658                           	opt stack 0
  5659  00007B                     ___flmul@grs:
  5660                           	opt stack 0
  5661                           
  5662                           ; 4 bytes @ 0x1B
  5663  00007B                     	ds	1
  5664  00007C                     __display_start@cntr:
  5665                           	opt stack 0
  5666  00007C                     __parse_item@value_string:
  5667                           	opt stack 0
  5668  00007C                     ltoa@val:
  5669                           	opt stack 0
  5670                           
  5671                           ; 4 bytes @ 0x1C
  5672  00007C                     	ds	1
  5673  00007D                     ??__display_padded_itoa:
  5674  00007D                     i2c_eeprom_readUint32@data:
  5675                           	opt stack 0
  5676                           
  5677                           ; 4 bytes @ 0x1D
  5678  00007D                     	ds	1
  5679  00007E                     ___fldiv@sign:
  5680                           	opt stack 0
  5681                           
  5682                           ; 1 bytes @ 0x1E
  5683  00007E                     	ds	1
  5684  00007F                     i2c_display_program_custom_character@address:
  5685                           	opt stack 0
  5686  00007F                     ___flmul@aexp:
  5687                           	opt stack 0
  5688  00007F                     flash_sector_write@page:
  5689                           	opt stack 0
  5690  00007F                     flash_partial_write@page:
  5691                           	opt stack 0
  5692  00007F                     ___fldiv@new_exp:
  5693                           	opt stack 0
  5694  00007F                     __flash_partial_read@command:
  5695                           	opt stack 0
  5696                           
  5697                           ; 4 bytes @ 0x1F
  5698  00007F                     	ds	1
  5699  000080                     i2c_display_program_custom_character@cntr:
  5700                           	opt stack 0
  5701  000080                     ___flmul@bexp:
  5702                           	opt stack 0
  5703  000080                     ltoa@base:
  5704                           	opt stack 0
  5705                           
  5706                           ; 2 bytes @ 0x20
  5707  000080                     	ds	1
  5708  000081                     flash_sector_write@data:
  5709                           	opt stack 0
  5710  000081                     flash_partial_write@start:
  5711                           	opt stack 0
  5712  000081                     ___fldiv@grs:
  5713                           	opt stack 0
  5714  000081                     ___flmul@prod:
  5715                           	opt stack 0
  5716                           
  5717                           ; 4 bytes @ 0x21
  5718  000081                     	ds	1
  5719  000082                     ___fladd@signs:
  5720                           	opt stack 0
  5721  000082                     ltoa@cp:
  5722                           	opt stack 0
  5723  000082                     __display_padded_itoa@tmp:
  5724                           	opt stack 0
  5725                           
  5726                           ; 10 bytes @ 0x22
  5727  000082                     	ds	1
  5728  000083                     flash_sector_write@match:
  5729                           	opt stack 0
  5730  000083                     ___fladd@aexp:
  5731                           	opt stack 0
  5732  000083                     flash_partial_write@length:
  5733                           	opt stack 0
  5734  000083                     __flash_partial_read@address:
  5735                           	opt stack 0
  5736                           
  5737                           ; 4 bytes @ 0x23
  5738  000083                     	ds	1
  5739  000084                     ___fladd@bexp:
  5740                           	opt stack 0
  5741  000084                     ExternalFlash_SectorWrite@config:
  5742                           	opt stack 0
  5743  000084                     fat_restore_mbr_fbr@cntr:
  5744                           	opt stack 0
  5745  000084                     __add_item@item_string:
  5746                           	opt stack 0
  5747                           
  5748                           ; 2 bytes @ 0x24
  5749  000084                     	ds	1
  5750  000085                     ___fladd@grs:
  5751                           	opt stack 0
  5752  000085                     ___fldiv@bexp:
  5753                           	opt stack 0
  5754  000085                     flash_partial_write@data:
  5755                           	opt stack 0
  5756  000085                     ___flmul@temp:
  5757                           	opt stack 0
  5758                           
  5759                           ; 2 bytes @ 0x25
  5760  000085                     	ds	1
  5761  000086                     ___fldiv@aexp:
  5762                           	opt stack 0
  5763  000086                     ExternalFlash_SectorWrite@sector_addr:
  5764                           	opt stack 0
  5765  000086                     __add_item@value:
  5766                           	opt stack 0
  5767                           
  5768                           ; 4 bytes @ 0x26
  5769  000086                     	ds	1
  5770  000087                     ??_adc_read_temperature:
  5771  000087                     ?__motor_get_speed_in_degrees:
  5772                           	opt stack 0
  5773  000087                     ?_motor_steps_from_degrees:
  5774                           	opt stack 0
  5775  000087                     ?__step_position_from_divide_position:
  5776                           	opt stack 0
  5777  000087                     flash_partial_write@match:
  5778                           	opt stack 0
  5779  000087                     flash_sector_read@page:
  5780                           	opt stack 0
  5781  000087                     flash_partial_read@page:
  5782                           	opt stack 0
  5783  000087                     motor_steps_from_degrees@degrees:
  5784                           	opt stack 0
  5785  000087                     __motor_get_speed_in_degrees@speed_index:
  5786                           	opt stack 0
  5787  000087                     __step_position_from_divide_position@divide_position:
  5788                           	opt stack 0
  5789  000087                     motor_calculate_position_in_degrees@tmp:
  5790                           	opt stack 0
  5791                           
  5792                           ; 4 bytes @ 0x27
  5793  000087                     	ds	1
  5794  000088                     __write_root@data:
  5795                           	opt stack 0
  5796                           
  5797                           ; 2 bytes @ 0x28
  5798  000088                     	ds	1
  5799  000089                     ??__motor_get_speed_in_degrees:
  5800  000089                     flash_sector_read@data:
  5801                           	opt stack 0
  5802  000089                     flash_partial_read@start:
  5803                           	opt stack 0
  5804  000089                     adc_read_temperature@adc_result:
  5805                           	opt stack 0
  5806                           
  5807                           ; 2 bytes @ 0x29
  5808  000089                     	ds	1
  5809  00008A                     ExternalFlash_SectorWrite@buffer:
  5810                           	opt stack 0
  5811  00008A                     __write_root@sector:
  5812                           	opt stack 0
  5813  00008A                     __add_item@buffer:
  5814                           	opt stack 0
  5815                           
  5816                           ; 2 bytes @ 0x2A
  5817  00008A                     	ds	1
  5818  00008B                     ??_fat_get_format_status:
  5819  00008B                     ?__get_available_cluster:
  5820                           	opt stack 0
  5821  00008B                     flash_partial_read@length:
  5822                           	opt stack 0
  5823  00008B                     ExternalFlash_SectorRead@config:
  5824                           	opt stack 0
  5825  00008B                     __get_available_cluster@first_sector:
  5826                           	opt stack 0
  5827  00008B                     fat_find_file@name:
  5828                           	opt stack 0
  5829  00008B                     motor_steps_from_degrees@steps:
  5830                           	opt stack 0
  5831  00008B                     __motor_get_speed_in_degrees@speed:
  5832                           	opt stack 0
  5833  00008B                     __step_position_from_divide_position@target_position:
  5834                           	opt stack 0
  5835  00008B                     adc_read_temperature@temperature:
  5836                           	opt stack 0
  5837                           
  5838                           ; 4 bytes @ 0x2B
  5839  00008B                     	ds	1
  5840  00008C                     ??__add_item:
  5841  00008C                     __display_padded_itoa@len:
  5842                           	opt stack 0
  5843  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5844                           	opt stack 0
  5845  00008C                     __write_root@offset:
  5846                           	opt stack 0
  5847                           
  5848                           ; 2 bytes @ 0x2C
  5849  00008C                     	ds	1
  5850  00008D                     __display_padded_itoa@pos:
  5851                           	opt stack 0
  5852  00008D                     flash_partial_read@data:
  5853                           	opt stack 0
  5854  00008D                     ExternalFlash_SectorWrite@page:
  5855                           	opt stack 0
  5856  00008D                     __get_available_cluster@skip_sector:
  5857                           	opt stack 0
  5858  00008D                     fat_find_file@extension:
  5859                           	opt stack 0
  5860  00008D                     fat_get_format_status@cntr:
  5861                           	opt stack 0
  5862  00008D                     ExternalFlash_SectorRead@sector_addr:
  5863                           	opt stack 0
  5864                           
  5865                           ; 4 bytes @ 0x2D
  5866  00008D                     	ds	1
  5867  00008E                     __display_padded_itoa@padding:
  5868                           	opt stack 0
  5869  00008E                     __write_root@file_number:
  5870                           	opt stack 0
  5871  00008E                     __add_item@length:
  5872                           	opt stack 0
  5873                           
  5874                           ; 1 bytes @ 0x2E
  5875  00008E                     	ds	1
  5876  00008F                     ??_MSDWriteHandler:
  5877  00008F                     ??_fat_find_file:
  5878  00008F                     ?__read_fat:
  5879                           	opt stack 0
  5880  00008F                     ?_motor_nonzero_steps_from_degrees:
  5881                           	opt stack 0
  5882  00008F                     __display_signed_itoa@value:
  5883                           	opt stack 0
  5884  00008F                     __get_available_cluster@cluster:
  5885                           	opt stack 0
  5886  00008F                     __root_is_available@root_sector:
  5887                           	opt stack 0
  5888  00008F                     __read_fat@cluster:
  5889                           	opt stack 0
  5890  00008F                     fat_get_file_information@data:
  5891                           	opt stack 0
  5892  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5893                           	opt stack 0
  5894  00008F                     __motor_get_speed_in_degrees@lookup:
  5895                           	opt stack 0
  5896  00008F                     __motor_run@distance_in_steps:
  5897                           	opt stack 0
  5898                           
  5899                           ; 4 bytes @ 0x2F
  5900  00008F                     	ds	2
  5901  000091                     fat_find_file@file_number:
  5902                           	opt stack 0
  5903  000091                     __display_signed_itoa@text:
  5904                           	opt stack 0
  5905  000091                     ExternalFlash_SectorRead@buffer:
  5906                           	opt stack 0
  5907  000091                     __get_available_cluster@offset:
  5908                           	opt stack 0
  5909  000091                     __root_is_available@offset:
  5910                           	opt stack 0
  5911  000091                     __read_fat@sector:
  5912                           	opt stack 0
  5913                           
  5914                           ; 2 bytes @ 0x31
  5915  000091                     	ds	1
  5916  000092                     fat_find_file@sector:
  5917                           	opt stack 0
  5918  000092                     fat_get_file_information@root_sector:
  5919                           	opt stack 0
  5920                           
  5921                           ; 2 bytes @ 0x32
  5922  000092                     	ds	1
  5923  000093                     ?_motor_speed_from_index:
  5924                           	opt stack 0
  5925  000093                     __root_is_available@file_number:
  5926                           	opt stack 0
  5927  000093                     ExternalFlash_SectorRead@page:
  5928                           	opt stack 0
  5929  000093                     __get_available_cluster@sector:
  5930                           	opt stack 0
  5931  000093                     __read_fat@offset:
  5932                           	opt stack 0
  5933  000093                     motor_speed_from_index@speed_index:
  5934                           	opt stack 0
  5935  000093                     __motor_run@speed:
  5936                           	opt stack 0
  5937  000093                     motor_nonzero_steps_from_degrees@steps:
  5938                           	opt stack 0
  5939                           
  5940                           ; 4 bytes @ 0x33
  5941  000093                     	ds	1
  5942  000094                     __root_is_available@first_byte:
  5943                           	opt stack 0
  5944  000094                     fat_find_file@offset:
  5945                           	opt stack 0
  5946  000094                     fat_get_file_information@offset:
  5947                           	opt stack 0
  5948                           
  5949                           ; 2 bytes @ 0x34
  5950  000094                     	ds	1
  5951  000095                     ??_MSDReadHandler:
  5952  000095                     ?__make_cluster_chain:
  5953                           	opt stack 0
  5954  000095                     ?_fat_get_file_size:
  5955                           	opt stack 0
  5956  000095                     __get_available_root_entry@file_number:
  5957                           	opt stack 0
  5958  000095                     __motor_run@type:
  5959                           	opt stack 0
  5960  000095                     __display_itoa@value:
  5961                           	opt stack 0
  5962  000095                     __make_cluster_chain@first_cluster:
  5963                           	opt stack 0
  5964  000095                     __read_fat@value:
  5965                           	opt stack 0
  5966                           
  5967                           ; 2 bytes @ 0x35
  5968  000095                     	ds	1
  5969  000096                     ??__motor_run:
  5970  000096                     fat_get_file_information@file_number:
  5971                           	opt stack 0
  5972                           
  5973                           ; 1 bytes @ 0x36
  5974  000096                     	ds	1
  5975  000097                     ?__find_nth_cluster:
  5976                           	opt stack 0
  5977  000097                     __display_itoa@decimals:
  5978                           	opt stack 0
  5979  000097                     __find_nth_cluster@cluster:
  5980                           	opt stack 0
  5981  000097                     __make_cluster_chain@number_of_clusters:
  5982                           	opt stack 0
  5983                           
  5984                           ; 2 bytes @ 0x37
  5985  000097                     	ds	1
  5986  000098                     __display_itoa@text:
  5987                           	opt stack 0
  5988                           
  5989                           ; 2 bytes @ 0x38
  5990  000098                     	ds	1
  5991  000099                     ??_MSDProcessCommandMediaPresent:
  5992  000099                     ??__make_cluster_chain:
  5993  000099                     __find_nth_cluster@n:
  5994                           	opt stack 0
  5995  000099                     fat_get_file_size@sector:
  5996                           	opt stack 0
  5997                           
  5998                           ; 2 bytes @ 0x39
  5999  000099                     	ds	1
  6000  00009A                     ??__display_itoa:
  6001  00009A                     __motor_run@direction:
  6002                           	opt stack 0
  6003                           
  6004                           ; 1 bytes @ 0x3A
  6005  00009A                     	ds	1
  6006  00009B                     _MSDProcessCommandMediaPresent$2606:
  6007                           	opt stack 0
  6008  00009B                     __find_nth_cluster@offset:
  6009                           	opt stack 0
  6010  00009B                     __make_cluster_chain@next_offset:
  6011                           	opt stack 0
  6012  00009B                     fat_get_file_size@offset:
  6013                           	opt stack 0
  6014  00009B                     __motor_run@maximum_distance_in_degrees:
  6015                           	opt stack 0
  6016                           
  6017                           ; 2 bytes @ 0x3B
  6018  00009B                     	ds	2
  6019  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6020                           	opt stack 0
  6021  00009D                     __find_nth_cluster@sector_in_buffer:
  6022                           	opt stack 0
  6023  00009D                     __make_cluster_chain@minimum_sector:
  6024                           	opt stack 0
  6025  00009D                     fat_get_file_size@file_size:
  6026                           	opt stack 0
  6027  00009D                     __motor_run@maximum_distance_in_steps:
  6028                           	opt stack 0
  6029                           
  6030                           ; 4 bytes @ 0x3D
  6031  00009D                     	ds	1
  6032  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6033                           	opt stack 0
  6034                           
  6035                           ; 4 bytes @ 0x3E
  6036  00009E                     	ds	1
  6037  00009F                     __find_nth_cluster@sector:
  6038                           	opt stack 0
  6039  00009F                     __make_cluster_chain@different_sector_cluster:
  6040                           	opt stack 0
  6041                           
  6042                           ; 2 bytes @ 0x3F
  6043  00009F                     	ds	1
  6044  0000A0                     __display_itoa@tmp:
  6045                           	opt stack 0
  6046                           
  6047                           ; 10 bytes @ 0x40
  6048  0000A0                     	ds	1
  6049  0000A1                     __make_cluster_chain@data_changed:
  6050                           	opt stack 0
  6051  0000A1                     fat_get_file_size@file_number:
  6052                           	opt stack 0
  6053  0000A1                     fat_read_from_file_fast@start_byte:
  6054                           	opt stack 0
  6055  0000A1                     fat_modify_file@start_byte:
  6056                           	opt stack 0
  6057  0000A1                     motor_schedule_command@distance_in_steps:
  6058                           	opt stack 0
  6059                           
  6060                           ; 4 bytes @ 0x41
  6061  0000A1                     	ds	1
  6062  0000A2                     __make_cluster_chain@remaining_clusters:
  6063                           	opt stack 0
  6064  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6065                           	opt stack 0
  6066                           
  6067                           ; 4 bytes @ 0x42
  6068  0000A2                     	ds	2
  6069  0000A4                     __make_cluster_chain@sector:
  6070                           	opt stack 0
  6071                           
  6072                           ; 2 bytes @ 0x44
  6073  0000A4                     	ds	1
  6074  0000A5                     fat_modify_file@length:
  6075                           	opt stack 0
  6076  0000A5                     motor_schedule_command@speed:
  6077                           	opt stack 0
  6078  0000A5                     fat_read_from_file_fast@length:
  6079                           	opt stack 0
  6080                           
  6081                           ; 4 bytes @ 0x45
  6082  0000A5                     	ds	1
  6083  0000A6                     MSDProcessCommandMediaPresent@i:
  6084                           	opt stack 0
  6085  0000A6                     __make_cluster_chain@sector_in_buffer:
  6086                           	opt stack 0
  6087                           
  6088                           ; 2 bytes @ 0x46
  6089  0000A6                     	ds	1
  6090  0000A7                     ??_MSDProcessCommand:
  6091  0000A7                     motor_schedule_command@type:
  6092                           	opt stack 0
  6093  0000A7                     fat_modify_file@data:
  6094                           	opt stack 0
  6095                           
  6096                           ; 2 bytes @ 0x47
  6097  0000A7                     	ds	1
  6098  0000A8                     motor_schedule_command@direction:
  6099                           	opt stack 0
  6100  0000A8                     __make_cluster_chain@offset:
  6101                           	opt stack 0
  6102                           
  6103                           ; 2 bytes @ 0x48
  6104  0000A8                     	ds	1
  6105  0000A9                     ??_fat_modify_file:
  6106  0000A9                     motor_set_zero@direction:
  6107                           	opt stack 0
  6108  0000A9                     fat_read_from_file_fast@data:
  6109                           	opt stack 0
  6110  0000A9                     __parse_jump_steps@data:
  6111                           	opt stack 0
  6112  0000A9                     motor_go_to_steps_position@target_position:
  6113                           	opt stack 0
  6114  0000A9                     motor_move_steps_with_overshoot@distance:
  6115                           	opt stack 0
  6116  0000A9                     _motor_arc_move$8826:
  6117                           	opt stack 0
  6118                           
  6119                           ; 4 bytes @ 0x49
  6120  0000A9                     	ds	1
  6121  0000AA                     __display_itoa@len:
  6122                           	opt stack 0
  6123  0000AA                     __make_cluster_chain@next_cluster:
  6124                           	opt stack 0
  6125                           
  6126                           ; 2 bytes @ 0x4A
  6127  0000AA                     	ds	1
  6128  0000AB                     __display_itoa@missing:
  6129                           	opt stack 0
  6130  0000AB                     fat_read_from_file_fast@cluster:
  6131                           	opt stack 0
  6132  0000AB                     __parse_jump_steps@out_buffer:
  6133                           	opt stack 0
  6134                           
  6135                           ; 2 bytes @ 0x4B
  6136  0000AB                     	ds	1
  6137  0000AC                     ??_MSDTasks:
  6138  0000AC                     __display_itoa@pos:
  6139                           	opt stack 0
  6140  0000AC                     fat_create_file@name:
  6141                           	opt stack 0
  6142  0000AC                     fat_resize_file@new_file_size:
  6143                           	opt stack 0
  6144                           
  6145                           ; 4 bytes @ 0x4C
  6146  0000AC                     	ds	1
  6147  0000AD                     ??_motor_go_to_steps_position:
  6148  0000AD                     motor_arc_move@direction:
  6149                           	opt stack 0
  6150  0000AD                     motor_move_steps_with_overshoot@direction:
  6151                           	opt stack 0
  6152  0000AD                     _MSDTasks$2588:
  6153                           	opt stack 0
  6154  0000AD                     fat_read_from_file_fast@cluster_number:
  6155                           	opt stack 0
  6156  0000AD                     __parse_jump_steps@out_idx_ptr:
  6157                           	opt stack 0
  6158  0000AD                     __display_itoa_long@value:
  6159                           	opt stack 0
  6160                           
  6161                           ; 4 bytes @ 0x4D
  6162  0000AD                     	ds	1
  6163  0000AE                     fat_create_file@extension:
  6164                           	opt stack 0
  6165  0000AE                     __parse_jump_steps_with_overshoot@data:
  6166                           	opt stack 0
  6167  0000AE                     motor_arc_move@arc_in_steps:
  6168                           	opt stack 0
  6169                           
  6170                           ; 4 bytes @ 0x4E
  6171  0000AE                     	ds	1
  6172  0000AF                     ??_fat_read_from_file_fast:
  6173  0000AF                     ??__parse_jump_steps:
  6174  0000AF                     _MSDTasks$2589:
  6175                           	opt stack 0
  6176                           
  6177                           ; 2 bytes @ 0x4F
  6178  0000AF                     	ds	1
  6179  0000B0                     ??_fat_resize_file:
  6180  0000B0                     __parse_jump_steps@return_value:
  6181                           	opt stack 0
  6182  0000B0                     __parse_jump_steps_with_overshoot@out_buffer:
  6183                           	opt stack 0
  6184  0000B0                     fat_create_file@size:
  6185                           	opt stack 0
  6186                           
  6187                           ; 4 bytes @ 0x50
  6188  0000B0                     	ds	1
  6189  0000B1                     MSDTasks@i:
  6190                           	opt stack 0
  6191  0000B1                     __display_itoa_long@decimals:
  6192                           	opt stack 0
  6193  0000B1                     __parse_jump_steps@number_of_steps:
  6194                           	opt stack 0
  6195                           
  6196                           ; 4 bytes @ 0x51
  6197  0000B1                     	ds	1
  6198  0000B2                     __display_itoa_long@text:
  6199                           	opt stack 0
  6200  0000B2                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6201                           	opt stack 0
  6202                           
  6203                           ; 2 bytes @ 0x52
  6204  0000B2                     	ds	2
  6205  0000B4                     ??__parse_jump_steps_with_overshoot:
  6206  0000B4                     ??__display_itoa_long:
  6207  0000B4                     ??_fat_create_file:
  6208  0000B4                     fat_resize_file@old_number_of_clusters:
  6209                           	opt stack 0
  6210                           
  6211                           ; 2 bytes @ 0x54
  6212  0000B4                     	ds	1
  6213  0000B5                     fat_modify_file@sector:
  6214                           	opt stack 0
  6215  0000B5                     __parse_jump_steps_with_overshoot@number_of_steps:
  6216                           	opt stack 0
  6217  0000B5                     motor_go_to_steps_position@overhead_cw:
  6218                           	opt stack 0
  6219                           
  6220                           ; 4 bytes @ 0x55
  6221  0000B5                     	ds	1
  6222  0000B6                     fat_resize_file@new_number_of_clusters:
  6223                           	opt stack 0
  6224                           
  6225                           ; 2 bytes @ 0x56
  6226  0000B6                     	ds	1
  6227  0000B7                     fat_modify_file@file_number:
  6228                           	opt stack 0
  6229                           
  6230                           ; 1 bytes @ 0x57
  6231  0000B7                     	ds	1
  6232  0000B8                     __display_itoa_long@length:
  6233                           	opt stack 0
  6234  0000B8                     fat_modify_file@return_code:
  6235                           	opt stack 0
  6236  0000B8                     fat_create_file@number_of_clusters:
  6237                           	opt stack 0
  6238  0000B8                     fat_resize_file@first_cluster:
  6239                           	opt stack 0
  6240                           
  6241                           ; 2 bytes @ 0x58
  6242  0000B8                     	ds	1
  6243  0000B9                     __display_itoa_long@short_value:
  6244                           	opt stack 0
  6245  0000B9                     fat_modify_file@cluster:
  6246                           	opt stack 0
  6247  0000B9                     __parse_command_long@data:
  6248                           	opt stack 0
  6249  0000B9                     motor_go_to_steps_position@overhead_ccw:
  6250                           	opt stack 0
  6251                           
  6252                           ; 4 bytes @ 0x59
  6253  0000B9                     	ds	1
  6254  0000BA                     fat_resize_file@file_number:
  6255                           	opt stack 0
  6256  0000BA                     fat_create_file@first_cluster:
  6257                           	opt stack 0
  6258                           
  6259                           ; 2 bytes @ 0x5A
  6260  0000BA                     	ds	1
  6261  0000BB                     __display_itoa_long@last_digit:
  6262                           	opt stack 0
  6263  0000BB                     fat_read_from_file_fast@sector:
  6264                           	opt stack 0
  6265  0000BB                     fat_modify_file@offset:
  6266                           	opt stack 0
  6267  0000BB                     __parse_command_long@out_buffer:
  6268                           	opt stack 0
  6269  0000BB                     fat_resize_file@root:
  6270                           	opt stack 0
  6271                           
  6272                           ; 32 bytes @ 0x5B
  6273  0000BB                     	ds	1
  6274  0000BC                     ??_display_prepare:
  6275  0000BC                     fat_create_file@file_number:
  6276                           	opt stack 0
  6277                           
  6278                           ; 1 bytes @ 0x5C
  6279  0000BC                     	ds	1
  6280  0000BD                     fat_read_from_file_fast@working_cluster:
  6281                           	opt stack 0
  6282  0000BD                     fat_modify_file@number_of_bytes:
  6283                           	opt stack 0
  6284  0000BD                     __parse_command_long@out_idx_ptr:
  6285                           	opt stack 0
  6286  0000BD                     motor_go_to_steps_position@distance_cw:
  6287                           	opt stack 0
  6288  0000BD                     fat_create_file@root_entry:
  6289                           	opt stack 0
  6290                           
  6291                           ; 32 bytes @ 0x5D
  6292  0000BD                     	ds	1
  6293  0000BE                     display_prepare@temp:
  6294                           	opt stack 0
  6295                           
  6296                           ; 10 bytes @ 0x5E
  6297  0000BE                     	ds	1
  6298  0000BF                     __parse_command_long@length:
  6299                           	opt stack 0
  6300  0000BF                     fat_read_from_file_fast@offset:
  6301                           	opt stack 0
  6302  0000BF                     fat_modify_file@position:
  6303                           	opt stack 0
  6304                           
  6305                           ; 4 bytes @ 0x5F
  6306  0000BF                     	ds	2
  6307  0000C1                     fat_read_from_file_fast@needed_cluster:
  6308                           	opt stack 0
  6309  0000C1                     motor_go_to_steps_position@distance_ccw:
  6310                           	opt stack 0
  6311                           
  6312                           ; 4 bytes @ 0x61
  6313  0000C1                     	ds	2
  6314  0000C3                     fat_read_from_file_fast@read_length:
  6315                           	opt stack 0
  6316  0000C3                     fat_modify_file@root:
  6317                           	opt stack 0
  6318                           
  6319                           ; 32 bytes @ 0x63
  6320  0000C3                     	ds	2
  6321  0000C5                     ??_motor_divide_jump:
  6322  0000C5                     __parse_command_short@cmd:
  6323                           	opt stack 0
  6324  0000C5                     fat_read_from_file_fast@position:
  6325                           	opt stack 0
  6326  0000C5                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6327                           	opt stack 0
  6328                           
  6329                           ; 4 bytes @ 0x65
  6330  0000C5                     	ds	1
  6331  0000C6                     api_parse@inBuffer:
  6332                           	opt stack 0
  6333  0000C6                     motor_divide_jump@target_position_in_steps:
  6334                           	opt stack 0
  6335                           
  6336                           ; 4 bytes @ 0x66
  6337  0000C6                     	ds	2
  6338  0000C8                     display_prepare@space:
  6339                           	opt stack 0
  6340  0000C8                     api_parse@receivedDataLength:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x68
  6344  0000C8                     	ds	1
  6345  0000C9                     display_prepare@cntr:
  6346                           	opt stack 0
  6347  0000C9                     api_parse@outBuffer:
  6348                           	opt stack 0
  6349  0000C9                     motor_divide_jump_to_nearest@nearest_divide_position:
  6350                           	opt stack 0
  6351  0000C9                     fat_read_from_file@start_byte:
  6352                           	opt stack 0
  6353                           
  6354                           ; 4 bytes @ 0x69
  6355  0000C9                     	ds	1
  6356  0000CA                     motor_divide_jump@target_divide_position:
  6357                           	opt stack 0
  6358                           
  6359                           ; 2 bytes @ 0x6A
  6360  0000CA                     	ds	1
  6361  0000CB                     ??_api_parse:
  6362  0000CB                     motor_divide_jump_to_nearest@divide_position_float:
  6363                           	opt stack 0
  6364                           
  6365                           ; 4 bytes @ 0x6B
  6366  0000CB                     	ds	2
  6367  0000CD                     api_parse@out_idx_ptr:
  6368                           	opt stack 0
  6369  0000CD                     fat_read_from_file@length:
  6370                           	opt stack 0
  6371                           
  6372                           ; 4 bytes @ 0x6D
  6373  0000CD                     	ds	2
  6374  0000CF                     ??_encoder_statemachine:
  6375  0000CF                     api_parse@out_idx:
  6376                           	opt stack 0
  6377                           
  6378                           ; 1 bytes @ 0x6F
  6379  0000CF                     	ds	1
  6380  0000D0                     api_parse@in_idx:
  6381                           	opt stack 0
  6382                           
  6383                           ; 1 bytes @ 0x70
  6384  0000D0                     	ds	1
  6385  0000D1                     fat_read_from_file@data:
  6386                           	opt stack 0
  6387                           
  6388                           ; 2 bytes @ 0x71
  6389  0000D1                     	ds	2
  6390  0000D3                     ??_fat_read_from_file:
  6391                           
  6392                           ; 1 bytes @ 0x73
  6393  0000D3                     	ds	4
  6394  0000D7                     fat_read_from_file@file_number:
  6395                           	opt stack 0
  6396                           
  6397                           ; 1 bytes @ 0x77
  6398  0000D7                     	ds	1
  6399  0000D8                     fat_read_from_file@return_code:
  6400                           	opt stack 0
  6401                           
  6402                           ; 1 bytes @ 0x78
  6403  0000D8                     	ds	1
  6404  0000D9                     fat_read_from_file@cluster:
  6405                           	opt stack 0
  6406                           
  6407                           ; 2 bytes @ 0x79
  6408  0000D9                     	ds	2
  6409  0000DB                     fat_read_from_file@cluster_number:
  6410                           	opt stack 0
  6411                           
  6412                           ; 2 bytes @ 0x7B
  6413  0000DB                     	ds	2
  6414  0000DD                     fat_read_from_file@root:
  6415                           	opt stack 0
  6416                           
  6417                           ; 32 bytes @ 0x7D
  6418  0000DD                     	ds	6
  6419  0000E3                     ??_configFile_write:
  6420                           
  6421                           ; 1 bytes @ 0x83
  6422  0000E3                     	ds	1
  6423  0000E4                     configFile_write@file_number:
  6424                           	opt stack 0
  6425                           
  6426                           ; 1 bytes @ 0x84
  6427  0000E4                     	ds	1
  6428  0000E5                     configFile_write@file_size:
  6429                           	opt stack 0
  6430                           
  6431                           ; 4 bytes @ 0x85
  6432  0000E5                     	ds	24
  6433  0000FD                     main@startup_timer:
  6434                           	opt stack 0
  6435                           
  6436                           ; 1 bytes @ 0x9D
  6437  0000FD                     	ds	1
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           postinc0	equ	0xFEE
  6443                           wreg	equ	0xFE8
  6444                           postdec1	equ	0xFE5
  6445                           fsr1h	equ	0xFE2
  6446                           fsr1l	equ	0xFE1
  6447                           
  6448                           	psect	cstackCOMRAM
  6449  000001                     __pcstackCOMRAM:
  6450                           	opt stack 0
  6451  000001                     ??_USBStdGetDscHandler:
  6452  000001                     ??_USBStdGetStatusHandler:
  6453  000001                     ??i2__i2c_wait_idle:
  6454  000001                     ?i2_USBTransferOnePacket:
  6455                           	opt stack 0
  6456  000001                     ?i2_ExternalFlash_MediaInitialize:
  6457                           	opt stack 0
  6458  000001                     USBConfigureEndpoint@direction:
  6459                           	opt stack 0
  6460  000001                     USBCtrlTrfTxService@byteToSend:
  6461                           	opt stack 0
  6462  000001                     USBCtrlTrfRxService@i:
  6463                           	opt stack 0
  6464  000001                     i2USBTransferOnePacket@dir:
  6465                           	opt stack 0
  6466  000001                     i2USBStallEndpoint@dir:
  6467                           	opt stack 0
  6468  000001                     i2__i2c_send@dat:
  6469                           	opt stack 0
  6470  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6471                           	opt stack 0
  6472  000001                     i2ExternalFlash_MediaInitialize@config:
  6473                           	opt stack 0
  6474  000001                     i2ExternalFlash_MediaDetect@config:
  6475                           	opt stack 0
  6476  000001                     i2memcpy@d1:
  6477                           	opt stack 0
  6478  000001                     i2memset@p1:
  6479                           	opt stack 0
  6480                           
  6481                           ; 2 bytes @ 0x0
  6482  000001                     	ds	1
  6483  000002                     ??_USBConfigureEndpoint:
  6484  000002                     ??i2_USBStallEndpoint:
  6485  000002                     USBCtrlTrfRxService@byteToRead:
  6486                           	opt stack 0
  6487  000002                     USBCtrlTrfInHandler@lastDTS:
  6488                           	opt stack 0
  6489  000002                     USBStdGetStatusHandler@p:
  6490                           	opt stack 0
  6491  000002                     i2USBTransferOnePacket@data:
  6492                           	opt stack 0
  6493                           
  6494                           ; 2 bytes @ 0x1
  6495  000002                     	ds	1
  6496  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6497                           	opt stack 0
  6498  000003                     i2memcpy@s1:
  6499                           	opt stack 0
  6500  000003                     i2memset@c:
  6501                           	opt stack 0
  6502                           
  6503                           ; 2 bytes @ 0x2
  6504  000003                     	ds	1
  6505  000004                     i2USBTransferOnePacket@len:
  6506                           	opt stack 0
  6507                           
  6508                           ; 1 bytes @ 0x3
  6509  000004                     	ds	1
  6510  000005                     ??i2_USBTransferOnePacket:
  6511  000005                     i2SYSTEM_Initialize@state:
  6512                           	opt stack 0
  6513  000005                     i2memcpy@n:
  6514                           	opt stack 0
  6515  000005                     i2memset@n:
  6516                           	opt stack 0
  6517                           
  6518                           ; 2 bytes @ 0x4
  6519  000005                     	ds	1
  6520  000006                     USBConfigureEndpoint@EPNum:
  6521                           	opt stack 0
  6522  000006                     i2USBStallEndpoint@ep:
  6523                           	opt stack 0
  6524  000006                     i2__i2c_eeprom_busy@busy:
  6525                           	opt stack 0
  6526  000006                     i2__i2c_write@data:
  6527                           	opt stack 0
  6528                           
  6529                           ; 2 bytes @ 0x5
  6530  000006                     	ds	1
  6531  000007                     USBConfigureEndpoint@handle:
  6532                           	opt stack 0
  6533  000007                     i2USBStallEndpoint@p:
  6534                           	opt stack 0
  6535  000007                     i2memcpy@d:
  6536                           	opt stack 0
  6537  000007                     i2memset@p:
  6538                           	opt stack 0
  6539                           
  6540                           ; 2 bytes @ 0x6
  6541  000007                     	ds	1
  6542  000008                     i2__i2c_write@length:
  6543                           	opt stack 0
  6544                           
  6545                           ; 1 bytes @ 0x7
  6546  000008                     	ds	1
  6547  000009                     USBEnableEndpoint@options:
  6548                           	opt stack 0
  6549  000009                     i2USBDeviceInit@i:
  6550                           	opt stack 0
  6551  000009                     i2USBTransferOnePacket@ep:
  6552                           	opt stack 0
  6553  000009                     i2__i2c_write@slave_address:
  6554                           	opt stack 0
  6555  000009                     i2memcpy@s:
  6556                           	opt stack 0
  6557                           
  6558                           ; 2 bytes @ 0x8
  6559  000009                     	ds	1
  6560  00000A                     i2__i2c_write@cntr:
  6561                           	opt stack 0
  6562  00000A                     USBEnableEndpoint@p:
  6563                           	opt stack 0
  6564  00000A                     i2USBTransferOnePacket@handle:
  6565                           	opt stack 0
  6566                           
  6567                           ; 2 bytes @ 0x9
  6568  00000A                     	ds	1
  6569  00000B                     i2memcpy@tmp:
  6570                           	opt stack 0
  6571  00000B                     i2c_eeprom_write@address:
  6572                           	opt stack 0
  6573                           
  6574                           ; 2 bytes @ 0xA
  6575  00000B                     	ds	1
  6576  00000C                     ??_USBMSDInit:
  6577  00000C                     USBEnableEndpoint@ep:
  6578                           	opt stack 0
  6579  00000C                     _USBCheckMSDRequest$2534:
  6580                           	opt stack 0
  6581  00000C                     MSDTransferTerminated@handle:
  6582                           	opt stack 0
  6583                           
  6584                           ; 2 bytes @ 0xB
  6585  00000C                     	ds	1
  6586  00000D                     i2c_eeprom_write@data:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0xC
  6590  00000D                     	ds	1
  6591  00000E                     _USBCheckMSDRequest$2535:
  6592                           	opt stack 0
  6593  00000E                     _MSDTransferTerminated$2623:
  6594                           	opt stack 0
  6595                           
  6596                           ; 2 bytes @ 0xD
  6597  00000E                     	ds	1
  6598  00000F                     i2c_eeprom_write@length:
  6599                           	opt stack 0
  6600                           
  6601                           ; 1 bytes @ 0xE
  6602  00000F                     	ds	1
  6603  000010                     ??_i2c_eeprom_write:
  6604  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6605                           	opt stack 0
  6606                           
  6607                           ; 2 bytes @ 0xF
  6608  000010                     	ds	2
  6609  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6610                           	opt stack 0
  6611                           
  6612                           ; 2 bytes @ 0x11
  6613  000012                     	ds	1
  6614  000013                     i2c_eeprom_write@dat:
  6615                           	opt stack 0
  6616                           
  6617                           ; 17 bytes @ 0x12
  6618  000013                     	ds	1
  6619  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6620                           	opt stack 0
  6621                           
  6622                           ; 2 bytes @ 0x13
  6623  000014                     	ds	2
  6624  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6625                           
  6626                           ; 1 bytes @ 0x15
  6627  000016                     	ds	2
  6628  000018                     ??_USBStdFeatureReqHandler:
  6629  000018                     USBStdSetCfgHandler@i:
  6630                           	opt stack 0
  6631                           
  6632                           ; 1 bytes @ 0x17
  6633  000018                     	ds	1
  6634  000019                     USBStdFeatureReqHandler@pUEP:
  6635                           	opt stack 0
  6636                           
  6637                           ; 2 bytes @ 0x18
  6638  000019                     	ds	2
  6639  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6640                           	opt stack 0
  6641                           
  6642                           ; 1 bytes @ 0x1A
  6643  00001B                     	ds	1
  6644  00001C                     USBStdFeatureReqHandler@p:
  6645                           	opt stack 0
  6646                           
  6647                           ; 2 bytes @ 0x1B
  6648  00001C                     	ds	2
  6649  00001E                     ??_USBCtrlEPService:
  6650  00001E                     
  6651                           ; 1 bytes @ 0x1D
  6652  00001E                     	ds	1
  6653  00001F                     USBDeviceTasks@i:
  6654                           	opt stack 0
  6655                           
  6656                           ; 1 bytes @ 0x1E
  6657  00001F                     	ds	5
  6658  000024                     i2c_eeprom_write@slave_address:
  6659                           	opt stack 0
  6660                           
  6661                           ; 1 bytes @ 0x23
  6662  000024                     	ds	1
  6663  000025                     i2c_eeprom_write@cntr:
  6664                           	opt stack 0
  6665                           
  6666                           ; 1 bytes @ 0x24
  6667  000025                     	ds	1
  6668  000026                     i2c_eeprom_writeUint32@address:
  6669                           	opt stack 0
  6670                           
  6671                           ; 2 bytes @ 0x25
  6672  000026                     	ds	2
  6673  000028                     i2c_eeprom_writeUint32@data:
  6674                           	opt stack 0
  6675                           
  6676                           ; 4 bytes @ 0x27
  6677  000028                     	ds	4
  6678  00002C                     ??_motor_isr:
  6679  00002C                     
  6680                           ; 1 bytes @ 0x2B
  6681  00002C                     	ds	16
  6682  00003C                     motor_isr@steps_until_standstill:
  6683                           	opt stack 0
  6684                           
  6685                           ; 2 bytes @ 0x3B
  6686  00003C                     	ds	2
  6687  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6688                           	opt stack 0
  6689                           
  6690                           ; 2 bytes @ 0x3D
  6691  00003E                     	ds	2
  6692  000040                     motor_isr@steps_remaining:
  6693                           	opt stack 0
  6694                           
  6695                           ; 4 bytes @ 0x3F
  6696  000040                     	ds	4
  6697  000044                     ??_SYS_InterruptHigh:
  6698                           
  6699                           ; 1 bytes @ 0x43
  6700  000044                     	ds	14
  6701                           tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           postinc0	equ	0xFEE
  6706                           wreg	equ	0xFE8
  6707                           postdec1	equ	0xFE5
  6708                           fsr1h	equ	0xFE2
  6709                           fsr1l	equ	0xFE1
  6710                           
  6711 ;;
  6712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6713 ;;
  6714 ;; *************** function _main *****************
  6715 ;; Defined at:
  6716 ;;		line 49 in file "main.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;		None
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;Total ram usage:        1 bytes
  6735 ;; Hardware stack levels required when called:   22
  6736 ;; This function calls:
  6737 ;;		_APP_DeviceCustomHIDTasks
  6738 ;;		_APP_DeviceMSDTasks
  6739 ;;		_SYSTEM_Initialize
  6740 ;;		_USBDeviceAttach
  6741 ;;		_USBDeviceInit
  6742 ;;		_adc_read_temperature
  6743 ;;		_display_prepare
  6744 ;;		_display_update
  6745 ;;		_encoder_statemachine
  6746 ;;		_motor_calculate_position_in_degrees
  6747 ;;		_motor_process_cue
  6748 ;;		_system_init
  6749 ;; This function is called by:
  6750 ;;		Startup code after reset
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text0
  6755  01344A                     __ptext0:
  6756                           	opt stack 0
  6757  01344A                     _main:
  6758                           	opt stack 9
  6759                           
  6760                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6761                           
  6762                           ;incstack = 0
  6763  01344A  ECF4  F08B         	call	_system_init	;wreg free
  6764                           
  6765                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6766  01344E  0E00               	movlw	0
  6767  013450  ECF1  F0A2         	call	_SYSTEM_Initialize
  6768                           
  6769                           ;main.c: 59: USBDeviceInit();
  6770  013454  ECB7  F07D         	call	_USBDeviceInit	;wreg free
  6771                           
  6772                           ;main.c: 60: USBDeviceAttach();
  6773  013458  EC5C  F0A9         	call	_USBDeviceAttach	;wreg free
  6774                           
  6775                           ;main.c: 63: startup_timer = 150;
  6776  01345C  0E96               	movlw	150
  6777  01345E  0100               	movlb	0	; () banked
  6778  013460  6FFD               	movwf	main@startup_timer& (0+255),b
  6779                           
  6780                           ;main.c: 64: while(startup_timer)
  6781  013462  D00D               	goto	l863
  6782  013464                     
  6783                           ; BSR set to: 0
  6784                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6785                           
  6786                           ; BSR set to: 0
  6787  013464  EC03  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6788                           
  6789                           ;main.c: 69: if(!os.done)
  6790  013468  0101               	movlb	1	; () banked
  6791  01346A  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6792  01346C  A4D8               	btfss	status,2,c
  6793  01346E  D007               	goto	l863
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6797  013470  EC48  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6798                           
  6799                           ;main.c: 74: --startup_timer;
  6800  013474  0100               	movlb	0	; () banked
  6801  013476  07FD               	decf	main@startup_timer& (0+255),f,b
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;main.c: 75: os.done = 1;
  6805  013478  0E01               	movlw	1
  6806  01347A  0101               	movlb	1	; () banked
  6807  01347C  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6808  01347E                     l863:
  6809                           
  6810                           ; BSR set to: 1
  6811                           
  6812                           ; BSR set to: 1
  6813  01347E  0100               	movlb	0	; () banked
  6814  013480  51FD               	movf	main@startup_timer& (0+255),w,b
  6815  013482  A4D8               	btfss	status,2,c
  6816  013484  D7EF               	goto	l862
  6817  013486                     u18760:
  6818                           
  6819                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6820                           
  6821                           ; BSR set to: 0
  6822                           
  6823                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6824                           
  6825                           ; BSR set to: 0
  6826  013486  EC03  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6827                           
  6828                           ;main.c: 85: if(!os.done)
  6829  01348A  0101               	movlb	1	; () banked
  6830  01348C  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6831  01348E  A4D8               	btfss	status,2,c
  6832  013490  D7FA               	goto	u18760
  6833                           
  6834                           ; BSR set to: 1
  6835  013492  0004               	clrwdt		;# 
  6836                           
  6837                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6838  013494  EC48  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6839                           
  6840                           ;main.c: 94: encoder_statemachine();
  6841  013498  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6842                           
  6843                           ;main.c: 97: motor_process_cue();
  6844  01349C  EC70  F09A         	call	_motor_process_cue	;wreg free
  6845                           
  6846                           ;main.c: 100: adc_read_temperature();
  6847  0134A0  EC4A  F078         	call	_adc_read_temperature	;wreg free
  6848                           
  6849                           ;main.c: 103: switch(os.timeSlot)
  6850  0134A4  D008               	goto	l867
  6851  0134A6                     
  6852                           ;main.c: 114: motor_calculate_position_in_degrees();
  6853  0134A6  EC19  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
  6854  0134AA                     
  6855                           ;main.c: 117: display_prepare();
  6856  0134AA  EC98  F051         	call	_display_prepare	;wreg free
  6857                           
  6858                           ;main.c: 118: break;
  6859  0134AE  D014               	goto	l869
  6860  0134B0                     
  6861                           ;main.c: 121: display_update();
  6862  0134B0  ECA1  F0A8         	call	_display_update	;wreg free
  6863                           
  6864                           ;main.c: 123: }
  6865                           
  6866                           ;main.c: 122: break;
  6867  0134B4  D011               	goto	l869
  6868  0134B6                     l867:
  6869  0134B6  0101               	movlb	1	; () banked
  6870  0134B8  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6871                           
  6872                           ; Switch size 1, requested type "space"
  6873                           ; Number of cases is 5, Range of values is 0 to 7
  6874                           ; switch strategies available:
  6875                           ; Name         Instructions Cycles
  6876                           ; simple_byte           16     9 (average)
  6877                           ;	Chosen strategy is simple_byte
  6878  0134BA  0A00               	xorlw	0	; case 0
  6879  0134BC  B4D8               	btfsc	status,2,c
  6880  0134BE  D00C               	goto	l869
  6881  0134C0  0A01               	xorlw	1	; case 1
  6882  0134C2  B4D8               	btfsc	status,2,c
  6883  0134C4  D009               	goto	l869
  6884  0134C6  0A04               	xorlw	4	; case 5
  6885  0134C8  B4D8               	btfsc	status,2,c
  6886  0134CA  D7ED               	goto	l871
  6887  0134CC  0A03               	xorlw	3	; case 6
  6888  0134CE  B4D8               	btfsc	status,2,c
  6889  0134D0  D7EC               	goto	l872
  6890  0134D2  0A01               	xorlw	1	; case 7
  6891  0134D4  B4D8               	btfsc	status,2,c
  6892  0134D6  D7EC               	goto	l873
  6893  0134D8                     l869:
  6894                           
  6895                           ;main.c: 125: os.done = 1;
  6896                           
  6897                           ; BSR set to: 1
  6898  0134D8  0E01               	movlw	1
  6899  0134DA  0101               	movlb	1	; () banked
  6900  0134DC  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6901                           
  6902                           ; BSR set to: 1
  6903                           
  6904                           ; BSR set to: 1
  6905  0134DE  D7D3               	goto	u18760
  6906  0134E0                     __end_of_main:
  6907                           	opt stack 0
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           postinc0	equ	0xFEE
  6913                           wreg	equ	0xFE8
  6914                           postdec1	equ	0xFE5
  6915                           fsr1h	equ	0xFE2
  6916                           fsr1l	equ	0xFE1
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _system_init *****************
  6920 ;; Defined at:
  6921 ;;		line 177 in file "os.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:   20
  6942 ;; This function calls:
  6943 ;;		__backlight_init
  6944 ;;		__system_pin_setup
  6945 ;;		__system_timer0_init
  6946 ;;		_adc_init
  6947 ;;		_configFile_read
  6948 ;;		_configFile_readDefault
  6949 ;;		_configFile_write
  6950 ;;		_display_init
  6951 ;;		_display_update
  6952 ;;		_encoder_init
  6953 ;;		_fat_init
  6954 ;;		_flash_init
  6955 ;;		_i2c_eeprom_readUint32
  6956 ;;		_i2c_init
  6957 ;;		_motor_calculate_position_in_degrees
  6958 ;;		_motor_init
  6959 ;; This function is called by:
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text1
  6965  0117E8                     __ptext1:
  6966                           	opt stack 0
  6967  0117E8                     _system_init:
  6968                           	opt stack 10
  6969                           
  6970                           ;os.c: 180: _system_pin_setup();
  6971                           
  6972                           ; BSR set to: 1
  6973                           ;incstack = 0
  6974  0117E8  EC7A  F0A0         	call	__system_pin_setup	;wreg free
  6975                           
  6976                           ;os.c: 183: adc_init();
  6977  0117EC  ECA4  F0A3         	call	_adc_init	;wreg free
  6978                           
  6979                           ;os.c: 186: flash_init();
  6980  0117F0  EC24  F0AC         	call	_flash_init	;wreg free
  6981                           
  6982                           ;os.c: 189: fat_init();
  6983  0117F4  EC0C  F0AC         	call	_fat_init	;wreg free
  6984                           
  6985                           ;os.c: 192: encoder_init();
  6986  0117F8  ECFA  F0AA         	call	_encoder_init	;wreg free
  6987                           
  6988                           ;os.c: 195: i2c_init();
  6989  0117FC  EC93  F0AB         	call	_i2c_init	;wreg free
  6990                           
  6991                           ;os.c: 198: display_init();
  6992  011800  EC4B  F0A8         	call	_display_init	;wreg free
  6993                           
  6994                           ;os.c: 199: display_update();
  6995  011804  ECA1  F0A8         	call	_display_update	;wreg free
  6996                           
  6997                           ;os.c: 200: _backlight_init();
  6998  011808  EC78  F0AC         	call	__backlight_init	;wreg free
  6999                           
  7000                           ;os.c: 203: motor_init();
  7001  01180C  EC84  F0AB         	call	_motor_init	;wreg free
  7002                           
  7003                           ;os.c: 206: configFile_readDefault();
  7004  011810  EC15  F0A1         	call	_configFile_readDefault	;wreg free
  7005                           
  7006                           ;os.c: 209: configFile_read();
  7007  011814  EC10  F07A         	call	_configFile_read	;wreg free
  7008                           
  7009                           ;os.c: 212: configFile_write();
  7010  011818  ECD4  F060         	call	_configFile_write	;wreg free
  7011                           
  7012                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7013  01181C  0E01               	movlw	1
  7014  01181E  0101               	movlb	1	; () banked
  7015  011820  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;os.c: 216: os.busy = 0;
  7019  011822  0E00               	movlw	0
  7020  011824  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7024  011826  0E01               	movlw	1
  7025  011828  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;os.c: 219: os.setup_step_size = 1000;
  7029  01182A  0E03               	movlw	3
  7030  01182C  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7031  01182E  0EE8               	movlw	232
  7032  011830  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7033                           
  7034                           ; BSR set to: 1
  7035                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7036  011832  0E01               	movlw	1
  7037  011834  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;os.c: 221: os.division = 36;
  7041  011836  0E00               	movlw	0
  7042  011838  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7043  01183A  0E24               	movlw	36
  7044  01183C  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7045                           
  7046                           ; BSR set to: 1
  7047                           ;os.c: 222: os.divide_step_size = 10;
  7048  01183E  0E0A               	movlw	10
  7049  011840  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;os.c: 223: os.divide_position = 0;
  7053  011842  0E00               	movlw	0
  7054  011844  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7055  011846  0E00               	movlw	0
  7056  011848  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;os.c: 224: os.divide_jump_size = 1;
  7060  01184A  0E00               	movlw	0
  7061  01184C  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7062  01184E  0E01               	movlw	1
  7063  011850  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7064                           
  7065                           ; BSR set to: 1
  7066                           ;os.c: 225: os.arc_step_size = 1000;
  7067  011852  0E03               	movlw	3
  7068  011854  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7069  011856  0EE8               	movlw	232
  7070  011858  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7071                           
  7072                           ; BSR set to: 1
  7073                           ;os.c: 226: os.arc_size = 1000;
  7074  01185A  0EE8               	movlw	232
  7075  01185C  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7076  01185E  0E03               	movlw	3
  7077  011860  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7078  011862  0E00               	movlw	0
  7079  011864  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7080  011866  0E00               	movlw	0
  7081  011868  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7085  01186A  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7086  01186E  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7090  011872  0E01               	movlw	1
  7091  011874  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7095  011876  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7096  01187A  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7097                           
  7098                           ; BSR set to: 1
  7099                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7100  01187E  0E01               	movlw	1
  7101  011880  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;os.c: 231: os.beep_count = 0;
  7105  011882  0E00               	movlw	0
  7106  011884  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7110  011886  0E02               	movlw	2
  7111  011888  0100               	movlb	0	; () banked
  7112  01188A  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7113  01188C  0E00               	movlw	0
  7114  01188E  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7115  011890  EC03  F0AA         	call	_i2c_eeprom_readUint32	;wreg free
  7116  011894  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7117  011898  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7118  01189C  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7119  0118A0  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7120                           
  7121                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7122  0118A4  0101               	movlb	1	; () banked
  7123  0118A6  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7124  0118A8  5DA1               	subwf	_config& (0+255),w,b
  7125  0118AA  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7126  0118AC  59A2               	subwfb	(_config+1)& (0+255),w,b
  7127  0118AE  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7128  0118B0  59A3               	subwfb	(_config+2)& (0+255),w,b
  7129  0118B2  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7130  0118B4  59A4               	subwfb	(_config+3)& (0+255),w,b
  7131  0118B6  B0D8               	btfsc	status,0,c
  7132  0118B8  D008               	goto	l1082
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7136  0118BA  0E00               	movlw	0
  7137  0118BC  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7138  0118BE  0E00               	movlw	0
  7139  0118C0  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7140  0118C2  0E00               	movlw	0
  7141  0118C4  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7142  0118C6  0E00               	movlw	0
  7143  0118C8  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7144  0118CA                     l1082:
  7145                           
  7146                           ; BSR set to: 1
  7147                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7148                           
  7149                           ; BSR set to: 1
  7150  0118CA  EC19  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
  7151                           
  7152                           ;os.c: 242: _system_timer0_init();
  7153  0118CE  EC19  F0AA         	call	__system_timer0_init	;wreg free
  7154  0118D2  0012               	return		;funcret
  7155  0118D4                     __end_of_system_init:
  7156                           	opt stack 0
  7157                           tblptru	equ	0xFF8
  7158                           tblptrh	equ	0xFF7
  7159                           tblptrl	equ	0xFF6
  7160                           tablat	equ	0xFF5
  7161                           postinc0	equ	0xFEE
  7162                           wreg	equ	0xFE8
  7163                           postdec1	equ	0xFE5
  7164                           fsr1h	equ	0xFE2
  7165                           fsr1l	equ	0xFE1
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function _motor_init *****************
  7169 ;; Defined at:
  7170 ;;		line 186 in file "motor.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;Total ram usage:        0 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:   10
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_system_init
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text2
  7199  015708                     __ptext2:
  7200                           	opt stack 0
  7201  015708                     _motor_init:
  7202                           	opt stack 19
  7203                           
  7204                           ;motor.c: 189: motor_cue_read_index = 0;
  7205                           
  7206                           ;incstack = 0
  7207  015708  0E00               	movlw	0
  7208  01570A  0101               	movlb	1	; () banked
  7209  01570C  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7210                           
  7211                           ;motor.c: 190: motor_cue_write_index = 0;
  7212  01570E  0E00               	movlw	0
  7213  015710  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7214                           
  7215                           ; BSR set to: 1
  7216                           ;motor.c: 196: CCPTMRS0bits.C2TSEL = 0b000;
  7217  015712  010F               	movlb	15	; () banked
  7218  015714  9752               	bcf	82,3,b	;volatile
  7219  015716  9952               	bcf	82,4,b	;volatile
  7220  015718  9B52               	bcf	82,5,b	;volatile
  7221                           
  7222                           ;motor.c: 201: CCP1CONbits.P1M = 0b00;
  7223  01571A  0E3F               	movlw	-193
  7224  01571C  16BA               	andwf	4026,f,c	;volatile
  7225                           
  7226                           ;motor.c: 204: CCP1CONbits.DC1B = 0b00;
  7227  01571E  0ECF               	movlw	-49
  7228  015720  16BA               	andwf	4026,f,c	;volatile
  7229                           
  7230                           ; BSR set to: 15
  7231                           ;motor.c: 207: LATBbits.LB0 = 0;
  7232  015722  908A               	bcf	3978,0,c	;volatile
  7233                           
  7234                           ; BSR set to: 15
  7235  015724  0012               	return		;funcret
  7236  015726                     __end_of_motor_init:
  7237                           	opt stack 0
  7238                           tblptru	equ	0xFF8
  7239                           tblptrh	equ	0xFF7
  7240                           tblptrl	equ	0xFF6
  7241                           tablat	equ	0xFF5
  7242                           postinc0	equ	0xFEE
  7243                           wreg	equ	0xFE8
  7244                           postdec1	equ	0xFE5
  7245                           fsr1h	equ	0xFE2
  7246                           fsr1l	equ	0xFE1
  7247                           status	equ	0xFD8
  7248                           
  7249 ;; *************** function _i2c_init *****************
  7250 ;; Defined at:
  7251 ;;		line 24 in file "i2c.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;Total ram usage:        0 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:   10
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_system_init
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text3
  7280  015726                     __ptext3:
  7281                           	opt stack 0
  7282  015726                     _i2c_init:
  7283                           	opt stack 19
  7284                           
  7285                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7286                           
  7287                           ; BSR set to: 15
  7288                           ;incstack = 0
  7289  015726  8A93               	bsf	3987,5,c	;volatile
  7290                           
  7291                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7292  015728  8893               	bsf	3987,4,c	;volatile
  7293                           
  7294                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7295  01572A  8EC7               	bsf	4039,7,c	;volatile
  7296                           
  7297                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7298  01572C  9CC7               	bcf	4039,6,c	;volatile
  7299                           
  7300                           ;i2c.c: 32: SSP1ADD = 119;
  7301  01572E  0E77               	movlw	119
  7302  015730  6EC8               	movwf	4040,c	;volatile
  7303                           
  7304                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7305  015732  9EC6               	bcf	4038,7,c	;volatile
  7306                           
  7307                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7308  015734  9CC6               	bcf	4038,6,c	;volatile
  7309                           
  7310                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7311  015736  50C6               	movf	4038,w,c	;volatile
  7312  015738  0BF0               	andlw	-16
  7313  01573A  0908               	iorlw	8
  7314  01573C  6EC6               	movwf	4038,c	;volatile
  7315                           
  7316                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7317  01573E  8AC6               	bsf	4038,5,c	;volatile
  7318  015740  0012               	return		;funcret
  7319  015742                     __end_of_i2c_init:
  7320                           	opt stack 0
  7321                           tblptru	equ	0xFF8
  7322                           tblptrh	equ	0xFF7
  7323                           tblptrl	equ	0xFF6
  7324                           tablat	equ	0xFF5
  7325                           postinc0	equ	0xFEE
  7326                           wreg	equ	0xFE8
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           status	equ	0xFD8
  7331                           
  7332 ;; *************** function _i2c_eeprom_readUint32 *****************
  7333 ;; Defined at:
  7334 ;;		line 235 in file "i2c.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  address         2   25[BANK0 ] unsigned int 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  data            4   29[BANK0 ] unsigned long 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  4   25[BANK0 ] unsigned long 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;Total ram usage:        8 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:   13
  7355 ;; This function calls:
  7356 ;;		_i2c_eeprom_read
  7357 ;; This function is called by:
  7358 ;;		_system_init
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text4
  7363  015406                     __ptext4:
  7364                           	opt stack 0
  7365  015406                     _i2c_eeprom_readUint32:
  7366                           	opt stack 16
  7367                           
  7368                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7369                           
  7370                           ;incstack = 0
  7371  015406  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7372  01540A  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7373  01540E  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7374  015410  0100               	movlb	0	; () banked
  7375  015412  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7376  015414  0E00               	movlw	high i2c_eeprom_readUint32@data
  7377  015416  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7378  015418  0E04               	movlw	4
  7379  01541A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7380  01541C  EC54  F0A4         	call	_i2c_eeprom_read	;wreg free
  7381                           
  7382                           ;i2c.c: 239: return data;
  7383  015420  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7384  015424  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7385  015428  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7386  01542C  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7387  015430  0012               	return	
  7388  015432                     __end_of_i2c_eeprom_readUint32:
  7389                           	opt stack 0
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           postinc0	equ	0xFEE
  7395                           wreg	equ	0xFE8
  7396                           postdec1	equ	0xFE5
  7397                           fsr1h	equ	0xFE2
  7398                           fsr1l	equ	0xFE1
  7399                           status	equ	0xFD8
  7400                           
  7401 ;; *************** function _i2c_eeprom_read *****************
  7402 ;; Defined at:
  7403 ;;		line 263 in file "i2c.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  address         2   17[BANK0 ] unsigned int 
  7406 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7407 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7408 ;;  length          1   21[BANK0 ] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7411 ;;  addr            1   23[BANK0 ] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7421 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;Total ram usage:        8 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:   12
  7428 ;; This function calls:
  7429 ;;		__i2c_eeprom_busy
  7430 ;;		__i2c_read
  7431 ;;		__i2c_write
  7432 ;; This function is called by:
  7433 ;;		_i2c_eeprom_readUint32
  7434 ;;		_i2c_eeprom_readUint16
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text5
  7439  0148A8                     __ptext5:
  7440                           	opt stack 0
  7441  0148A8                     _i2c_eeprom_read:
  7442                           	opt stack 16
  7443                           
  7444                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7445                           
  7446                           ;incstack = 0
  7447  0148A8  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7448                           
  7449                           ;i2c.c: 268: address &= 0b0000011100000000;
  7450  0148AC  0100               	movlb	0	; () banked
  7451  0148AE  0E00               	movlw	0
  7452  0148B0  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7453  0148B2  0E07               	movlw	7
  7454  0148B4  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7455                           
  7456                           ;i2c.c: 269: address >>= 7;
  7457  0148B6  0E07               	movlw	7
  7458  0148B8  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7459  0148BA                     u14295:
  7460  0148BA  90D8               	bcf	status,0,c
  7461  0148BC  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7462  0148BE  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7463  0148C0  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7464  0148C2  D7FB               	goto	u14295
  7465                           
  7466                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7467  0148C4  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7468  0148C6  09A0               	iorlw	160
  7469  0148C8  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7470  0148CA                     
  7471                           ; BSR set to: 0
  7472                           
  7473                           ; BSR set to: 0
  7474  0148CA  EC84  F0AA         	call	__i2c_eeprom_busy	;wreg free
  7475  0148CE  0900               	iorlw	0
  7476  0148D0  A4D8               	btfss	status,2,c
  7477  0148D2  D7FB               	goto	l1213
  7478                           
  7479                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7480  0148D4  0E77               	movlw	low i2c_eeprom_read@addr
  7481  0148D6  0100               	movlb	0	; () banked
  7482  0148D8  6F65               	movwf	__i2c_write@data& (0+255),b
  7483  0148DA  0E00               	movlw	high i2c_eeprom_read@addr
  7484  0148DC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7485  0148DE  0E01               	movlw	1
  7486  0148E0  6F67               	movwf	__i2c_write@length& (0+255),b
  7487  0148E2  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7488  0148E4  ECCB  F0A5         	call	__i2c_write
  7489                           
  7490                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7491  0148E8  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7492  0148EC  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7493  0148F0  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7494  0148F4  0100               	movlb	0	; () banked
  7495  0148F6  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7496  0148F8  EC05  F09B         	call	__i2c_read
  7497  0148FC  0012               	return		;funcret
  7498  0148FE                     __end_of_i2c_eeprom_read:
  7499                           	opt stack 0
  7500                           tblptru	equ	0xFF8
  7501                           tblptrh	equ	0xFF7
  7502                           tblptrl	equ	0xFF6
  7503                           tablat	equ	0xFF5
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           postdec1	equ	0xFE5
  7507                           fsr1h	equ	0xFE2
  7508                           fsr1l	equ	0xFE1
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function __i2c_read *****************
  7512 ;; Defined at:
  7513 ;;		line 103 in file "i2c.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  slave_addres    1    wreg     unsigned char 
  7516 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7517 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7518 ;;  length          1    7[BANK0 ] unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7521 ;;  cntr            1   16[BANK0 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7531 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;Total ram usage:       12 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:   11
  7538 ;; This function calls:
  7539 ;;		__i2c_acknowledge
  7540 ;;		__i2c_get
  7541 ;;		__i2c_not_acknowledge
  7542 ;;		__i2c_send
  7543 ;;		__i2c_start
  7544 ;;		__i2c_stop
  7545 ;;		__i2c_wait_idle
  7546 ;; This function is called by:
  7547 ;;		_i2c_eeprom_read
  7548 ;;		_i2c_eeprom_readByte
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text6
  7553  01360A                     __ptext6:
  7554                           	opt stack 0
  7555  01360A                     __i2c_read:
  7556                           	opt stack 16
  7557                           
  7558                           ;incstack = 0
  7559                           ;__i2c_read@slave_address stored from wreg
  7560  01360A  0100               	movlb	0	; () banked
  7561  01360C  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7562                           
  7563                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7564  01360E  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  7565                           
  7566                           ;i2c.c: 108: _i2c_start();
  7567  013612  EC65  F0AC         	call	__i2c_start	;wreg free
  7568                           
  7569                           ;i2c.c: 109: _i2c_wait_idle();
  7570  013616  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  7571                           
  7572                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7573  01361A  0100               	movlb	0	; () banked
  7574  01361C  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7575  01361E  0901               	iorlw	1
  7576  013620  EC52  F0AC         	call	__i2c_send
  7577                           
  7578                           ;i2c.c: 111: _i2c_wait_idle();
  7579  013624  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  7580                           
  7581                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7582  013628  0E00               	movlw	0
  7583  01362A  0100               	movlb	0	; () banked
  7584  01362C  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7585  01362E  D00F               	goto	l1164
  7586  013630                     
  7587                           ; BSR set to: 0
  7588                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7589                           
  7590                           ; BSR set to: 0
  7591  013630  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7592  013632  0D01               	mullw	1
  7593  013634  50F3               	movf	prodl,w,c
  7594  013636  2565               	addwf	__i2c_read@data& (0+255),w,b
  7595  013638  6ED9               	movwf	fsr2l,c
  7596  01363A  50F4               	movf	prodh,w,c
  7597  01363C  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7598  01363E  6EDA               	movwf	fsr2h,c
  7599  013640  EC48  F0AC         	call	__i2c_get	;wreg free
  7600  013644  6EDF               	movwf	indf2,c
  7601                           
  7602                           ;i2c.c: 124: _i2c_acknowledge();
  7603  013646  EC4D  F0AC         	call	__i2c_acknowledge	;wreg free
  7604  01364A  0100               	movlb	0	; () banked
  7605  01364C  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7606  01364E                     l1164:
  7607                           
  7608                           ; BSR set to: 0
  7609                           
  7610                           ; BSR set to: 0
  7611  01364E  0EFF               	movlw	255
  7612  013650  6F68               	movwf	??__i2c_read& (0+255),b
  7613  013652  0EFF               	movlw	255
  7614  013654  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7615  013656  5167               	movf	__i2c_read@length& (0+255),w,b
  7616  013658  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7617  01365A  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7618  01365C  5168               	movf	??__i2c_read& (0+255),w,b
  7619  01365E  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7620  013660  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7621  013662  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7622  013664  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7623  013666  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7624  013668  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7625  01366A  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7626  01366C  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7627  01366E  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7628  013670  0A80               	xorlw	128
  7629  013672  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7630  013674  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7631  013676  0A80               	xorlw	128
  7632  013678  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7633  01367A  A0D8               	btfss	status,0,c
  7634  01367C  D7D9               	goto	l1165
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7638                           
  7639                           ; BSR set to: 0
  7640  01367E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7641  013680  0D01               	mullw	1
  7642  013682  50F3               	movf	prodl,w,c
  7643  013684  2565               	addwf	__i2c_read@data& (0+255),w,b
  7644  013686  6ED9               	movwf	fsr2l,c
  7645  013688  50F4               	movf	prodh,w,c
  7646  01368A  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7647  01368C  6EDA               	movwf	fsr2h,c
  7648  01368E  EC48  F0AC         	call	__i2c_get	;wreg free
  7649  013692  6EDF               	movwf	indf2,c
  7650                           
  7651                           ;i2c.c: 127: _i2c_not_acknowledge();
  7652  013694  EC43  F0AC         	call	__i2c_not_acknowledge	;wreg free
  7653                           
  7654                           ;i2c.c: 129: _i2c_stop();
  7655  013698  EC61  F0AC         	call	__i2c_stop	;wreg free
  7656  01369C  0012               	return		;funcret
  7657  01369E                     __end_of__i2c_read:
  7658                           	opt stack 0
  7659                           tblptru	equ	0xFF8
  7660                           tblptrh	equ	0xFF7
  7661                           tblptrl	equ	0xFF6
  7662                           tablat	equ	0xFF5
  7663                           prodh	equ	0xFF4
  7664                           prodl	equ	0xFF3
  7665                           postinc0	equ	0xFEE
  7666                           wreg	equ	0xFE8
  7667                           postdec1	equ	0xFE5
  7668                           fsr1h	equ	0xFE2
  7669                           fsr1l	equ	0xFE1
  7670                           indf2	equ	0xFDF
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function __i2c_not_acknowledge *****************
  7676 ;; Defined at:
  7677 ;;		line 76 in file "i2c.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		None
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:   10
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		__i2c_read
  7702 ;;		_i2c_adc_read
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text7
  7707  015886                     __ptext7:
  7708                           	opt stack 0
  7709  015886                     __i2c_not_acknowledge:
  7710                           	opt stack 16
  7711                           
  7712                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7713                           
  7714                           ;incstack = 0
  7715  015886  8AC5               	bsf	4037,5,c	;volatile
  7716                           
  7717                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7718  015888  88C5               	bsf	4037,4,c	;volatile
  7719  01588A  A8C5               	btfss	4037,4,c	;volatile
  7720  01588C  0012               	return	
  7721  01588E  D7FD               	goto	l1153
  7722  015890                     __end_of__i2c_not_acknowledge:
  7723                           	opt stack 0
  7724                           tblptru	equ	0xFF8
  7725                           tblptrh	equ	0xFF7
  7726                           tblptrl	equ	0xFF6
  7727                           tablat	equ	0xFF5
  7728                           prodh	equ	0xFF4
  7729                           prodl	equ	0xFF3
  7730                           postinc0	equ	0xFEE
  7731                           wreg	equ	0xFE8
  7732                           postdec1	equ	0xFE5
  7733                           fsr1h	equ	0xFE2
  7734                           fsr1l	equ	0xFE1
  7735                           indf2	equ	0xFDF
  7736                           fsr2h	equ	0xFDA
  7737                           fsr2l	equ	0xFD9
  7738                           status	equ	0xFD8
  7739                           
  7740 ;; *************** function __i2c_get *****************
  7741 ;; Defined at:
  7742 ;;		line 56 in file "i2c.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      unsigned char 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;Total ram usage:        0 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:   10
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		__i2c_read
  7767 ;;		_i2c_adc_read
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text8
  7772  015890                     __ptext8:
  7773                           	opt stack 0
  7774  015890                     __i2c_get:
  7775                           	opt stack 16
  7776                           
  7777                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7778                           
  7779                           ;incstack = 0
  7780  015890  86C5               	bsf	4037,3,c	;volatile
  7781  015892  B6C5               	btfsc	4037,3,c	;volatile
  7782  015894  D7FE               	goto	l1135
  7783                           
  7784                           ;i2c.c: 60: return SSP1BUF;
  7785  015896  50C9               	movf	4041,w,c	;volatile
  7786  015898  0012               	return	
  7787  01589A                     __end_of__i2c_get:
  7788                           	opt stack 0
  7789                           tblptru	equ	0xFF8
  7790                           tblptrh	equ	0xFF7
  7791                           tblptrl	equ	0xFF6
  7792                           tablat	equ	0xFF5
  7793                           prodh	equ	0xFF4
  7794                           prodl	equ	0xFF3
  7795                           postinc0	equ	0xFEE
  7796                           wreg	equ	0xFE8
  7797                           postdec1	equ	0xFE5
  7798                           fsr1h	equ	0xFE2
  7799                           fsr1l	equ	0xFE1
  7800                           indf2	equ	0xFDF
  7801                           fsr2h	equ	0xFDA
  7802                           fsr2l	equ	0xFD9
  7803                           status	equ	0xFD8
  7804                           
  7805 ;; *************** function __i2c_acknowledge *****************
  7806 ;; Defined at:
  7807 ;;		line 69 in file "i2c.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		None
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:   10
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		__i2c_read
  7832 ;;		_i2c_adc_read
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text9
  7837  01589A                     __ptext9:
  7838                           	opt stack 0
  7839  01589A                     __i2c_acknowledge:
  7840                           	opt stack 16
  7841                           
  7842                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7843                           
  7844                           ;incstack = 0
  7845  01589A  9AC5               	bcf	4037,5,c	;volatile
  7846                           
  7847                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7848  01589C  88C5               	bsf	4037,4,c	;volatile
  7849  01589E  A8C5               	btfss	4037,4,c	;volatile
  7850  0158A0  0012               	return	
  7851  0158A2  D7FD               	goto	l1147
  7852  0158A4                     __end_of__i2c_acknowledge:
  7853                           	opt stack 0
  7854                           tblptru	equ	0xFF8
  7855                           tblptrh	equ	0xFF7
  7856                           tblptrl	equ	0xFF6
  7857                           tablat	equ	0xFF5
  7858                           prodh	equ	0xFF4
  7859                           prodl	equ	0xFF3
  7860                           postinc0	equ	0xFEE
  7861                           wreg	equ	0xFE8
  7862                           postdec1	equ	0xFE5
  7863                           fsr1h	equ	0xFE2
  7864                           fsr1l	equ	0xFE1
  7865                           indf2	equ	0xFDF
  7866                           fsr2h	equ	0xFDA
  7867                           fsr2l	equ	0xFD9
  7868                           status	equ	0xFD8
  7869                           
  7870 ;; *************** function __i2c_eeprom_busy *****************
  7871 ;; Defined at:
  7872 ;;		line 169 in file "i2c.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  busy            1    5[BANK0 ] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:        1 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:   11
  7893 ;; This function calls:
  7894 ;;		__i2c_send
  7895 ;;		__i2c_start
  7896 ;;		__i2c_stop
  7897 ;;		__i2c_wait_idle
  7898 ;; This function is called by:
  7899 ;;		_i2c_eeprom_read
  7900 ;;		_i2c_eeprom_writeByte
  7901 ;;		_i2c_eeprom_readByte
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text10
  7906  015508                     __ptext10:
  7907                           	opt stack 0
  7908  015508                     __i2c_eeprom_busy:
  7909                           	opt stack 16
  7910                           
  7911                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7912                           
  7913                           ;incstack = 0
  7914  015508  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  7915                           
  7916                           ;i2c.c: 173: _i2c_start();
  7917  01550C  EC65  F0AC         	call	__i2c_start	;wreg free
  7918                           
  7919                           ;i2c.c: 174: _i2c_wait_idle();
  7920  015510  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  7921                           
  7922                           ;i2c.c: 175: _i2c_send(0b10100000);
  7923  015514  0EA0               	movlw	160
  7924  015516  EC52  F0AC         	call	__i2c_send
  7925                           
  7926                           ;i2c.c: 176: _i2c_wait_idle();
  7927  01551A  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  7928                           
  7929                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7930  01551E  0E00               	movlw	0
  7931  015520  BCC5               	btfsc	4037,6,c	;volatile
  7932  015522  0E01               	movlw	1
  7933  015524  0100               	movlb	0	; () banked
  7934  015526  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;i2c.c: 181: _i2c_stop();
  7938  015528  EC61  F0AC         	call	__i2c_stop	;wreg free
  7939                           
  7940                           ;i2c.c: 183: return 0;
  7941  01552C  0E00               	movlw	0
  7942  01552E  0012               	return	
  7943  015530                     __end_of__i2c_eeprom_busy:
  7944                           	opt stack 0
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodh	equ	0xFF4
  7950                           prodl	equ	0xFF3
  7951                           postinc0	equ	0xFEE
  7952                           wreg	equ	0xFE8
  7953                           postdec1	equ	0xFE5
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           fsr2h	equ	0xFDA
  7958                           fsr2l	equ	0xFD9
  7959                           status	equ	0xFD8
  7960                           
  7961 ;; *************** function _flash_init *****************
  7962 ;; Defined at:
  7963 ;;		line 361 in file "flash.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7981 ;;Total ram usage:        0 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:   14
  7984 ;; This function calls:
  7985 ;;		__flash_set_page_size
  7986 ;;		_spi_init
  7987 ;; This function is called by:
  7988 ;;		_system_init
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text11
  7993  015848                     __ptext11:
  7994                           	opt stack 0
  7995  015848                     _flash_init:
  7996                           	opt stack 15
  7997                           
  7998                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  7999                           
  8000                           ;incstack = 0
  8001  015848  0E00               	movlw	0
  8002  01584A  ECCE  F0A7         	call	_spi_init
  8003                           
  8004                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8005  01584E  0E00               	movlw	0
  8006  015850  ECA0  F09F         	call	__flash_set_page_size
  8007  015854  0012               	return		;funcret
  8008  015856                     __end_of_flash_init:
  8009                           	opt stack 0
  8010                           tblptru	equ	0xFF8
  8011                           tblptrh	equ	0xFF7
  8012                           tblptrl	equ	0xFF6
  8013                           tablat	equ	0xFF5
  8014                           prodh	equ	0xFF4
  8015                           prodl	equ	0xFF3
  8016                           postinc0	equ	0xFEE
  8017                           wreg	equ	0xFE8
  8018                           postdec1	equ	0xFE5
  8019                           fsr1h	equ	0xFE2
  8020                           fsr1l	equ	0xFE1
  8021                           indf2	equ	0xFDF
  8022                           fsr2h	equ	0xFDA
  8023                           fsr2l	equ	0xFD9
  8024                           status	equ	0xFD8
  8025                           
  8026 ;; *************** function _spi_init *****************
  8027 ;; Defined at:
  8028 ;;		line 89 in file "spi.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  configuratio    1    wreg     enum E6832
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  configuratio    1    3[BANK0 ] enum E6832
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;Total ram usage:        1 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:   11
  8049 ;; This function calls:
  8050 ;;		__spi_init
  8051 ;; This function is called by:
  8052 ;;		_flash_init
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text12
  8057  014F9C                     __ptext12:
  8058                           	opt stack 0
  8059  014F9C                     _spi_init:
  8060                           	opt stack 17
  8061                           
  8062                           ;incstack = 0
  8063                           ;spi_init@configuration stored from wreg
  8064  014F9C  0100               	movlb	0	; () banked
  8065  014F9E  6F63               	movwf	spi_init@configuration& (0+255),b
  8066                           
  8067                           ;spi.c: 91: switch(configuration)
  8068  014FA0  D012               	goto	l2169
  8069  014FA2                     
  8070                           ;spi.c: 94: _spi_init(config_internal);
  8071  014FA2  C136  F060         	movff	_config_internal,__spi_init@details
  8072  014FA6  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8073  014FAA  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8074  014FAE  EC85  F0A8         	call	__spi_init	;wreg free
  8075                           
  8076                           ;spi.c: 95: break;
  8077  014FB2  D011               	goto	l2171
  8078  014FB4                     
  8079                           ;spi.c: 98: _spi_init(config_external);
  8080  014FB4  C133  F060         	movff	_config_external,__spi_init@details
  8081  014FB8  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8082  014FBC  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8083  014FC0  EC85  F0A8         	call	__spi_init	;wreg free
  8084                           
  8085                           ;spi.c: 100: }
  8086                           
  8087                           ;spi.c: 99: break;
  8088  014FC4  D008               	goto	l2171
  8089  014FC6                     l2169:
  8090  014FC6  0100               	movlb	0	; () banked
  8091  014FC8  5163               	movf	spi_init@configuration& (0+255),w,b
  8092                           
  8093                           ; Switch size 1, requested type "space"
  8094                           ; Number of cases is 2, Range of values is 0 to 1
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte            7     4 (average)
  8098                           ;	Chosen strategy is simple_byte
  8099  014FCA  0A00               	xorlw	0	; case 0
  8100  014FCC  B4D8               	btfsc	status,2,c
  8101  014FCE  D7E9               	goto	l2170
  8102  014FD0  0A01               	xorlw	1	; case 1
  8103  014FD2  B4D8               	btfsc	status,2,c
  8104  014FD4  D7EF               	goto	l2172
  8105  014FD6                     l2171:
  8106                           
  8107                           ;spi.c: 102: active_configuration = configuration;
  8108  014FD6  C063  F159         	movff	spi_init@configuration,_active_configuration
  8109  014FDA  0012               	return		;funcret
  8110  014FDC                     __end_of_spi_init:
  8111                           	opt stack 0
  8112                           tblptru	equ	0xFF8
  8113                           tblptrh	equ	0xFF7
  8114                           tblptrl	equ	0xFF6
  8115                           tablat	equ	0xFF5
  8116                           prodh	equ	0xFF4
  8117                           prodl	equ	0xFF3
  8118                           postinc0	equ	0xFEE
  8119                           wreg	equ	0xFE8
  8120                           postdec1	equ	0xFE5
  8121                           fsr1h	equ	0xFE2
  8122                           fsr1l	equ	0xFE1
  8123                           indf2	equ	0xFDF
  8124                           fsr2h	equ	0xFDA
  8125                           fsr2l	equ	0xFD9
  8126                           status	equ	0xFD8
  8127                           
  8128 ;; *************** function __spi_init *****************
  8129 ;; Defined at:
  8130 ;;		line 24 in file "spi.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  details         3    0[BANK0 ] struct .
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;		None
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      void 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8144 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;Total ram usage:        3 bytes
  8149 ;; Hardware stack levels used:    1
  8150 ;; Hardware stack levels required when called:   10
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_spi_init
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text13
  8159  01510A                     __ptext13:
  8160                           	opt stack 0
  8161  01510A                     __spi_init:
  8162                           	opt stack 17
  8163                           
  8164                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8165                           
  8166                           ;incstack = 0
  8167  01510A  0E55               	movlw	85
  8168  01510C  6EA7               	movwf	4007,c	;volsfr
  8169  01510E  0EAA               	movlw	170
  8170  015110  6EA7               	movwf	4007,c	;volsfr
  8171  015112  010E               	movlb	14	; () banked
  8172  015114  91BF               	bcf	191,0,b	;volatile
  8173                           
  8174                           ;spi.c: 31: RPINR21 = 22;
  8175  015116  0E16               	movlw	22
  8176  015118  6FFC               	movwf	252,b	;volatile
  8177                           
  8178                           ;spi.c: 32: RPOR21 = 10;
  8179  01511A  0E0A               	movlw	10
  8180  01511C  6FD5               	movwf	213,b	;volatile
  8181                           
  8182                           ;spi.c: 34: RPOR23 = 11;
  8183  01511E  0E0B               	movlw	11
  8184  015120  6FD7               	movwf	215,b	;volatile
  8185                           
  8186                           ;spi.c: 35: RPINR22 = 23;
  8187  015122  0E17               	movlw	23
  8188  015124  6FFD               	movwf	253,b	;volatile
  8189                           
  8190                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8191  015126  0E55               	movlw	85
  8192  015128  6EA7               	movwf	4007,c	;volsfr
  8193  01512A  0EAA               	movlw	170
  8194  01512C  6EA7               	movwf	4007,c	;volsfr
  8195                           
  8196                           ; BSR set to: 14
  8197  01512E  81BF               	bsf	191,0,b	;volatile
  8198                           
  8199                           ; BSR set to: 14
  8200                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8201  015130  8E73               	bsf	3955,7,c	;volatile
  8202                           
  8203                           ; BSR set to: 14
  8204                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8205  015132  8C73               	bsf	3955,6,c	;volatile
  8206                           
  8207                           ; BSR set to: 14
  8208                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8209  015134  9872               	bcf	3954,4,c	;volatile
  8210                           
  8211                           ; BSR set to: 14
  8212                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8213  015136  9072               	bcf	3954,0,c	;volatile
  8214  015138  9272               	bcf	3954,1,c	;volatile
  8215  01513A  9472               	bcf	3954,2,c	;volatile
  8216  01513C  9672               	bcf	3954,3,c	;volatile
  8217                           
  8218                           ; BSR set to: 14
  8219                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8220  01513E  8A72               	bsf	3954,5,c	;volatile
  8221                           
  8222                           ; BSR set to: 14
  8223  015140  0012               	return		;funcret
  8224  015142                     __end_of__spi_init:
  8225                           	opt stack 0
  8226                           tblptru	equ	0xFF8
  8227                           tblptrh	equ	0xFF7
  8228                           tblptrl	equ	0xFF6
  8229                           tablat	equ	0xFF5
  8230                           prodh	equ	0xFF4
  8231                           prodl	equ	0xFF3
  8232                           postinc0	equ	0xFEE
  8233                           wreg	equ	0xFE8
  8234                           postdec1	equ	0xFE5
  8235                           fsr1h	equ	0xFE2
  8236                           fsr1l	equ	0xFE1
  8237                           indf2	equ	0xFDF
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function __flash_set_page_size *****************
  8243 ;; Defined at:
  8244 ;;		line 99 in file "flash.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  size            1    wreg     enum E7005
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  size            1   23[BANK0 ] enum E7005
  8249 ;;  command         4   19[BANK0 ] unsigned char [4]
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      void 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;Total ram usage:        5 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:   13
  8266 ;; This function calls:
  8267 ;;		__flash_is_busy
  8268 ;;		_memcpy
  8269 ;;		_spi_tx
  8270 ;; This function is called by:
  8271 ;;		_flash_init
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text14
  8276  013F40                     __ptext14:
  8277                           	opt stack 0
  8278  013F40                     __flash_set_page_size:
  8279                           	opt stack 15
  8280                           
  8281                           ; BSR set to: 14
  8282                           ;incstack = 0
  8283                           ;__flash_set_page_size@size stored from wreg
  8284  013F40  0100               	movlb	0	; () banked
  8285  013F42  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8286  013F44                     
  8287                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8288  013F44  EC1E  F0AB         	call	__flash_is_busy	;wreg free
  8289  013F48  0900               	iorlw	0
  8290  013F4A  A4D8               	btfss	status,2,c
  8291  013F4C  D7FB               	goto	l15457
  8292                           
  8293                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8294  013F4E  0100               	movlb	0	; () banked
  8295  013F50  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8296  013F52  A4D8               	btfss	status,2,c
  8297  013F54  D00E               	goto	l1522
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8301  013F56  0E73               	movlw	low __flash_set_page_size@command
  8302  013F58  6F60               	movwf	memcpy@d1& (0+255),b
  8303  013F5A  0E00               	movlw	high __flash_set_page_size@command
  8304  013F5C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8305  013F5E  0EE1               	movlw	low _flash_command_pagesize_512
  8306  013F60  6F62               	movwf	memcpy@s1& (0+255),b
  8307  013F62  0EA2               	movlw	high _flash_command_pagesize_512
  8308  013F64  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8309  013F66  0E00               	movlw	0
  8310  013F68  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8311  013F6A  0E04               	movlw	4
  8312  013F6C  6F64               	movwf	memcpy@n& (0+255),b
  8313  013F6E  ECDA  F0A1         	call	_memcpy	;wreg free
  8314  013F72                     l1522:
  8315                           
  8316                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8317  013F72  0100               	movlb	0	; () banked
  8318  013F74  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8319  013F76  A4D8               	btfss	status,2,c
  8320  013F78  D00E               	goto	l1523
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8324  013F7A  0E73               	movlw	low __flash_set_page_size@command
  8325  013F7C  6F60               	movwf	memcpy@d1& (0+255),b
  8326  013F7E  0E00               	movlw	high __flash_set_page_size@command
  8327  013F80  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8328  013F82  0EDD               	movlw	low _flash_command_pagesize_528
  8329  013F84  6F62               	movwf	memcpy@s1& (0+255),b
  8330  013F86  0EA2               	movlw	high _flash_command_pagesize_528
  8331  013F88  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8332  013F8A  0E00               	movlw	0
  8333  013F8C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8334  013F8E  0E04               	movlw	4
  8335  013F90  6F64               	movwf	memcpy@n& (0+255),b
  8336  013F92  ECDA  F0A1         	call	_memcpy	;wreg free
  8337  013F96                     l1523:
  8338                           
  8339                           ;flash.c: 113: spi_tx(command, 4);
  8340  013F96  0E73               	movlw	low __flash_set_page_size@command
  8341  013F98  0100               	movlb	0	; () banked
  8342  013F9A  6F60               	movwf	spi_tx@data& (0+255),b
  8343  013F9C  0E00               	movlw	high __flash_set_page_size@command
  8344  013F9E  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8345  013FA0  0E00               	movlw	0
  8346  013FA2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8347  013FA4  0E04               	movlw	4
  8348  013FA6  6F62               	movwf	spi_tx@length& (0+255),b
  8349  013FA8  EC4B  F0A3         	call	_spi_tx	;wreg free
  8350  013FAC  0012               	return		;funcret
  8351  013FAE                     __end_of__flash_set_page_size:
  8352                           	opt stack 0
  8353                           tblptru	equ	0xFF8
  8354                           tblptrh	equ	0xFF7
  8355                           tblptrl	equ	0xFF6
  8356                           tablat	equ	0xFF5
  8357                           prodh	equ	0xFF4
  8358                           prodl	equ	0xFF3
  8359                           postinc0	equ	0xFEE
  8360                           wreg	equ	0xFE8
  8361                           postdec1	equ	0xFE5
  8362                           fsr1h	equ	0xFE2
  8363                           fsr1l	equ	0xFE1
  8364                           indf2	equ	0xFDF
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function _fat_init *****************
  8370 ;; Defined at:
  8371 ;;		line 1404 in file "fat16.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:   16
  8392 ;; This function calls:
  8393 ;;		_fat_get_format_status
  8394 ;;		_fat_restore_mbr_fbr
  8395 ;; This function is called by:
  8396 ;;		_system_init
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text15
  8401  015818                     __ptext15:
  8402                           	opt stack 0
  8403  015818                     _fat_init:
  8404                           	opt stack 13
  8405                           
  8406                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8407                           
  8408                           ;incstack = 0
  8409  015818  EC9B  F096         	call	_fat_get_format_status	;wreg free
  8410  01581C  0900               	iorlw	0
  8411  01581E  A4D8               	btfss	status,2,c
  8412  015820  0012               	return	
  8413                           
  8414                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8415  015822  EC99  F09B         	call	_fat_restore_mbr_fbr	;wreg free
  8416  015826  0012               	return	
  8417  015828                     __end_of_fat_init:
  8418                           	opt stack 0
  8419                           tblptru	equ	0xFF8
  8420                           tblptrh	equ	0xFF7
  8421                           tblptrl	equ	0xFF6
  8422                           tablat	equ	0xFF5
  8423                           prodh	equ	0xFF4
  8424                           prodl	equ	0xFF3
  8425                           postinc0	equ	0xFEE
  8426                           wreg	equ	0xFE8
  8427                           postdec1	equ	0xFE5
  8428                           fsr1h	equ	0xFE2
  8429                           fsr1l	equ	0xFE1
  8430                           indf2	equ	0xFDF
  8431                           fsr2h	equ	0xFDA
  8432                           fsr2l	equ	0xFD9
  8433                           status	equ	0xFD8
  8434                           
  8435 ;; *************** function _fat_restore_mbr_fbr *****************
  8436 ;; Defined at:
  8437 ;;		line 1321 in file "fat16.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  cntr            2   36[BANK0 ] unsigned int 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      unsigned char 
  8444 ;; Registers used:
  8445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8455 ;;Total ram usage:        2 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:   15
  8458 ;; This function calls:
  8459 ;;		__get_fbr
  8460 ;;		__get_mbr
  8461 ;;		_flash_sector_write
  8462 ;; This function is called by:
  8463 ;;		_fat_init
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text16
  8468  013732                     __ptext16:
  8469                           	opt stack 0
  8470  013732                     _fat_restore_mbr_fbr:
  8471                           	opt stack 13
  8472                           
  8473                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8474                           
  8475                           ;incstack = 0
  8476  013732  0E00               	movlw	0
  8477  013734  0100               	movlb	0	; () banked
  8478  013736  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8479  013738  0E00               	movlw	0
  8480  01373A  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8481  01373C                     l15687:
  8482                           
  8483                           ; BSR set to: 0
  8484  01373C  0E02               	movlw	2
  8485  01373E  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8486  013740  B0D8               	btfsc	status,0,c
  8487  013742  D011               	goto	u14800
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8491                           
  8492                           ; BSR set to: 0
  8493                           
  8494                           ; BSR set to: 0
  8495  013744  0E00               	movlw	low _buffer
  8496  013746  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8497  013748  6ED9               	movwf	fsr2l,c
  8498  01374A  0E0A               	movlw	high _buffer
  8499  01374C  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8500  01374E  6EDA               	movwf	fsr2h,c
  8501  013750  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8502  013754  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8503  013758  EC12  F092         	call	__get_mbr	;wreg free
  8504  01375C  6EDF               	movwf	indf2,c
  8505  01375E  0100               	movlb	0	; () banked
  8506  013760  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8507  013762  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8508  013764  D7EB               	goto	l15687
  8509  013766                     u14800:
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8513                           
  8514                           ; BSR set to: 0
  8515  013766  0E00               	movlw	0
  8516  013768  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8517  01376A  0E00               	movlw	0
  8518  01376C  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8519  01376E  0E00               	movlw	low _buffer
  8520  013770  6F81               	movwf	flash_sector_write@data& (0+255),b
  8521  013772  0E0A               	movlw	high _buffer
  8522  013774  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8523  013776  ECF3  F0A5         	call	_flash_sector_write	;wreg free
  8524                           
  8525                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8526  01377A  0E00               	movlw	0
  8527  01377C  0100               	movlb	0	; () banked
  8528  01377E  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8529  013780  0E00               	movlw	0
  8530  013782  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8531  013784                     l15701:
  8532                           
  8533                           ; BSR set to: 0
  8534  013784  0E02               	movlw	2
  8535  013786  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8536  013788  B0D8               	btfsc	status,0,c
  8537  01378A  D011               	goto	u14820
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8541                           
  8542                           ; BSR set to: 0
  8543                           
  8544                           ; BSR set to: 0
  8545  01378C  0E00               	movlw	low _buffer
  8546  01378E  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8547  013790  6ED9               	movwf	fsr2l,c
  8548  013792  0E0A               	movlw	high _buffer
  8549  013794  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8550  013796  6EDA               	movwf	fsr2h,c
  8551  013798  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8552  01379C  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8553  0137A0  ECAF  F070         	call	__get_fbr	;wreg free
  8554  0137A4  6EDF               	movwf	indf2,c
  8555  0137A6  0100               	movlb	0	; () banked
  8556  0137A8  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8557  0137AA  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8558  0137AC  D7EB               	goto	l15701
  8559  0137AE                     u14820:
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8563                           
  8564                           ; BSR set to: 0
  8565  0137AE  0E00               	movlw	0
  8566  0137B0  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8567  0137B2  0E01               	movlw	1
  8568  0137B4  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8569  0137B6  0E00               	movlw	low _buffer
  8570  0137B8  6F81               	movwf	flash_sector_write@data& (0+255),b
  8571  0137BA  0E0A               	movlw	high _buffer
  8572  0137BC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8573  0137BE  ECF3  F0A5         	call	_flash_sector_write	;wreg free
  8574  0137C2  0012               	return	
  8575  0137C4                     __end_of_fat_restore_mbr_fbr:
  8576                           	opt stack 0
  8577                           tblptru	equ	0xFF8
  8578                           tblptrh	equ	0xFF7
  8579                           tblptrl	equ	0xFF6
  8580                           tablat	equ	0xFF5
  8581                           prodh	equ	0xFF4
  8582                           prodl	equ	0xFF3
  8583                           postinc0	equ	0xFEE
  8584                           wreg	equ	0xFE8
  8585                           postdec1	equ	0xFE5
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           fsr2h	equ	0xFDA
  8590                           fsr2l	equ	0xFD9
  8591                           status	equ	0xFD8
  8592                           
  8593 ;; *************** function _fat_get_format_status *****************
  8594 ;; Defined at:
  8595 ;;		line 1293 in file "fat16.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  cntr            2   45[BANK0 ] unsigned int 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      enum E6979
  8602 ;; Registers used:
  8603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;Total ram usage:        4 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:   15
  8616 ;; This function calls:
  8617 ;;		__get_fbr
  8618 ;;		__get_mbr
  8619 ;;		_flash_sector_read
  8620 ;; This function is called by:
  8621 ;;		_fat_init
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text17
  8626  012D36                     __ptext17:
  8627                           	opt stack 0
  8628  012D36                     _fat_get_format_status:
  8629                           	opt stack 13
  8630                           
  8631                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8632                           
  8633                           ;incstack = 0
  8634  012D36  0E00               	movlw	0
  8635  012D38  0100               	movlb	0	; () banked
  8636  012D3A  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8637  012D3C  0E00               	movlw	0
  8638  012D3E  6F87               	movwf	flash_sector_read@page& (0+255),b
  8639  012D40  0E00               	movlw	low _buffer
  8640  012D42  6F89               	movwf	flash_sector_read@data& (0+255),b
  8641  012D44  0E0A               	movlw	high _buffer
  8642  012D46  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8643  012D48  ECC0  F0AA         	call	_flash_sector_read	;wreg free
  8644                           
  8645                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  8646  012D4C  0E00               	movlw	0
  8647  012D4E  0100               	movlb	0	; () banked
  8648  012D50  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8649  012D52  0E00               	movlw	0
  8650  012D54  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8651  012D56                     l15649:
  8652                           
  8653                           ; BSR set to: 0
  8654  012D56  0E02               	movlw	2
  8655  012D58  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8656  012D5A  B0D8               	btfsc	status,0,c
  8657  012D5C  D017               	goto	u14750
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  8661                           
  8662                           ; BSR set to: 0
  8663                           
  8664                           ; BSR set to: 0
  8665  012D5E  0E00               	movlw	low _buffer
  8666  012D60  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8667  012D62  6ED9               	movwf	fsr2l,c
  8668  012D64  0E0A               	movlw	high _buffer
  8669  012D66  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8670  012D68  6EDA               	movwf	fsr2h,c
  8671  012D6A  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8672  012D6E  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8673  012D72  EC12  F092         	call	__get_mbr	;wreg free
  8674  012D76  0100               	movlb	0	; () banked
  8675  012D78  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8676  012D7A  50DE               	movf	postinc2,w,c
  8677  012D7C  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8678  012D7E  B4D8               	btfsc	status,2,c
  8679  012D80  D002               	goto	l2046
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  8683  012D82  0E00               	movlw	0
  8684                           
  8685                           ; BSR set to: 0
  8686  012D84  0012               	return	
  8687  012D86                     l2046:
  8688                           
  8689                           ; BSR set to: 0
  8690                           
  8691                           ; BSR set to: 0
  8692  012D86  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8693  012D88  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8694  012D8A  D7E5               	goto	l15649
  8695  012D8C                     u14750:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  8699                           
  8700                           ; BSR set to: 0
  8701  012D8C  0E00               	movlw	0
  8702  012D8E  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8703  012D90  0E01               	movlw	1
  8704  012D92  6F87               	movwf	flash_sector_read@page& (0+255),b
  8705  012D94  0E00               	movlw	low _buffer
  8706  012D96  6F89               	movwf	flash_sector_read@data& (0+255),b
  8707  012D98  0E0A               	movlw	high _buffer
  8708  012D9A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8709  012D9C  ECC0  F0AA         	call	_flash_sector_read	;wreg free
  8710                           
  8711                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  8712  012DA0  0E00               	movlw	0
  8713  012DA2  0100               	movlb	0	; () banked
  8714  012DA4  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8715  012DA6  0E00               	movlw	0
  8716  012DA8  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8717  012DAA                     l15667:
  8718                           
  8719                           ; BSR set to: 0
  8720  012DAA  0E02               	movlw	2
  8721  012DAC  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8722  012DAE  B0D8               	btfsc	status,0,c
  8723  012DB0  D017               	goto	u14780
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  8727                           
  8728                           ; BSR set to: 0
  8729                           
  8730                           ; BSR set to: 0
  8731  012DB2  0E00               	movlw	low _buffer
  8732  012DB4  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8733  012DB6  6ED9               	movwf	fsr2l,c
  8734  012DB8  0E0A               	movlw	high _buffer
  8735  012DBA  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8736  012DBC  6EDA               	movwf	fsr2h,c
  8737  012DBE  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8738  012DC2  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8739  012DC6  ECAF  F070         	call	__get_fbr	;wreg free
  8740  012DCA  0100               	movlb	0	; () banked
  8741  012DCC  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8742  012DCE  50DE               	movf	postinc2,w,c
  8743  012DD0  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8744  012DD2  B4D8               	btfsc	status,2,c
  8745  012DD4  D002               	goto	l2050
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  8749  012DD6  0E00               	movlw	0
  8750                           
  8751                           ; BSR set to: 0
  8752  012DD8  0012               	return	
  8753  012DDA                     l2050:
  8754                           
  8755                           ; BSR set to: 0
  8756                           
  8757                           ; BSR set to: 0
  8758  012DDA  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8759  012DDC  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8760  012DDE  D7E5               	goto	l15667
  8761  012DE0                     u14780:
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  8765                           
  8766                           ; BSR set to: 0
  8767  012DE0  0E01               	movlw	1
  8768  012DE2  0012               	return	
  8769  012DE4                     __end_of_fat_get_format_status:
  8770                           	opt stack 0
  8771                           tblptru	equ	0xFF8
  8772                           tblptrh	equ	0xFF7
  8773                           tblptrl	equ	0xFF6
  8774                           tablat	equ	0xFF5
  8775                           prodh	equ	0xFF4
  8776                           prodl	equ	0xFF3
  8777                           postinc0	equ	0xFEE
  8778                           wreg	equ	0xFE8
  8779                           postdec1	equ	0xFE5
  8780                           fsr1h	equ	0xFE2
  8781                           fsr1l	equ	0xFE1
  8782                           indf2	equ	0xFDF
  8783                           postinc2	equ	0xFDE
  8784                           fsr2h	equ	0xFDA
  8785                           fsr2l	equ	0xFD9
  8786                           status	equ	0xFD8
  8787                           
  8788 ;; *************** function __get_mbr *****************
  8789 ;; Defined at:
  8790 ;;		line 1038 in file "fat16.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  idx             2    0[BANK0 ] unsigned int 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      unsigned char 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;Total ram usage:        4 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:   10
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_fat_get_format_status
  8815 ;;		_fat_restore_mbr_fbr
  8816 ;;		_fat_format
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text18
  8821  012424                     __ptext18:
  8822                           	opt stack 0
  8823  012424                     __get_mbr:
  8824                           	opt stack 17
  8825                           
  8826                           ;fat16.c: 1040: switch (idx)
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;incstack = 0
  8830  012424  D026               	goto	l1918
  8831  012426                     
  8832                           ;fat16.c: 1043: return 0x80;
  8833  012426  0E80               	movlw	128
  8834  012428  0012               	return	
  8835  01242A                     
  8836                           ;fat16.c: 1045: return 0;
  8837  01242A  0E00               	movlw	0
  8838  01242C  0012               	return	
  8839  01242E                     
  8840                           ;fat16.c: 1047: return 2;
  8841  01242E  0E02               	movlw	2
  8842  012430  0012               	return	
  8843  012432                     
  8844                           ;fat16.c: 1049: return 0;
  8845  012432  0E00               	movlw	0
  8846  012434  0012               	return	
  8847  012436                     
  8848                           ;fat16.c: 1051: return 0x04;
  8849  012436  0E04               	movlw	4
  8850  012438  0012               	return	
  8851  01243A                     
  8852                           ;fat16.c: 1053: return 2;
  8853  01243A  0E02               	movlw	2
  8854  01243C  0012               	return	
  8855  01243E                     
  8856                           ;fat16.c: 1055: return 3;
  8857  01243E  0E03               	movlw	3
  8858  012440  0012               	return	
  8859  012442                     
  8860                           ;fat16.c: 1057: return 8;
  8861  012442  0E08               	movlw	8
  8862  012444  0012               	return	
  8863  012446                     
  8864                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  8865  012446  0E01               	movlw	1
  8866  012448  0012               	return	
  8867  01244A                     
  8868                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  8869  01244A  0E00               	movlw	0
  8870  01244C  0012               	return	
  8871  01244E                     
  8872                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  8873  01244E  0E00               	movlw	0
  8874  012450  0012               	return	
  8875  012452                     
  8876                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  8877  012452  0E00               	movlw	0
  8878  012454  0012               	return	
  8879  012456                     
  8880                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  8881  012456  0EFF               	movlw	255
  8882  012458  0012               	return	
  8883  01245A                     
  8884                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  8885  01245A  0E1F               	movlw	31
  8886  01245C  0012               	return	
  8887  01245E                     
  8888                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  8889  01245E  0E00               	movlw	0
  8890  012460  0012               	return	
  8891  012462                     
  8892                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  8893  012462  0E00               	movlw	0
  8894  012464  0012               	return	
  8895  012466                     
  8896                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  8897  012466  0E55               	movlw	85
  8898  012468  0012               	return	
  8899  01246A                     
  8900                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  8901  01246A  0EAA               	movlw	170
  8902  01246C  0012               	return	
  8903  01246E                     
  8904                           ;fat16.c: 1079: return 0X00;
  8905  01246E  0E00               	movlw	0
  8906                           
  8907                           ;fat16.c: 1080: }
  8908  012470  0012               	return	
  8909  012472                     l1918:
  8910  012472  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  8911  012476  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  8912                           
  8913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8914                           ; Switch size 1, requested type "space"
  8915                           ; Number of cases is 1, Range of values is 1 to 1
  8916                           ; switch strategies available:
  8917                           ; Name         Instructions Cycles
  8918                           ; simple_byte            4     3 (average)
  8919                           ;	Chosen strategy is simple_byte
  8920  01247A  0100               	movlb	0	; () banked
  8921  01247C  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  8922  01247E  0A01               	xorlw	1	; case 1
  8923  012480  A4D8               	btfss	status,2,c
  8924  012482  D7F5               	goto	l1938
  8925                           
  8926                           ; BSR set to: 0
  8927                           ; Switch size 1, requested type "space"
  8928                           ; Number of cases is 18, Range of values is 190 to 255
  8929                           ; switch strategies available:
  8930                           ; Name         Instructions Cycles
  8931                           ; simple_byte           55    28 (average)
  8932                           ;	Chosen strategy is simple_byte
  8933  012484  5162               	movf	??__get_mbr& (0+255),w,b
  8934  012486  0ABE               	xorlw	190	; case 190
  8935  012488  B4D8               	btfsc	status,2,c
  8936  01248A  D7CD               	goto	l1919
  8937  01248C  0A01               	xorlw	1	; case 191
  8938  01248E  B4D8               	btfsc	status,2,c
  8939  012490  D7CC               	goto	l1921
  8940  012492  0A7F               	xorlw	127	; case 192
  8941  012494  B4D8               	btfsc	status,2,c
  8942  012496  D7CB               	goto	l1922
  8943  012498  0A01               	xorlw	1	; case 193
  8944  01249A  B4D8               	btfsc	status,2,c
  8945  01249C  D7CA               	goto	l1923
  8946  01249E  0A03               	xorlw	3	; case 194
  8947  0124A0  B4D8               	btfsc	status,2,c
  8948  0124A2  D7C9               	goto	l1924
  8949  0124A4  0A01               	xorlw	1	; case 195
  8950  0124A6  B4D8               	btfsc	status,2,c
  8951  0124A8  D7C8               	goto	l1925
  8952  0124AA  0A07               	xorlw	7	; case 196
  8953  0124AC  B4D8               	btfsc	status,2,c
  8954  0124AE  D7C7               	goto	l1926
  8955  0124B0  0A01               	xorlw	1	; case 197
  8956  0124B2  B4D8               	btfsc	status,2,c
  8957  0124B4  D7C6               	goto	l1927
  8958  0124B6  0A03               	xorlw	3	; case 198
  8959  0124B8  B4D8               	btfsc	status,2,c
  8960  0124BA  D7C5               	goto	l1928
  8961  0124BC  0A01               	xorlw	1	; case 199
  8962  0124BE  B4D8               	btfsc	status,2,c
  8963  0124C0  D7C4               	goto	l1929
  8964  0124C2  0A0F               	xorlw	15	; case 200
  8965  0124C4  B4D8               	btfsc	status,2,c
  8966  0124C6  D7C3               	goto	l1930
  8967  0124C8  0A01               	xorlw	1	; case 201
  8968  0124CA  B4D8               	btfsc	status,2,c
  8969  0124CC  D7C2               	goto	l1931
  8970  0124CE  0A03               	xorlw	3	; case 202
  8971  0124D0  B4D8               	btfsc	status,2,c
  8972  0124D2  D7C1               	goto	l1932
  8973  0124D4  0A01               	xorlw	1	; case 203
  8974  0124D6  B4D8               	btfsc	status,2,c
  8975  0124D8  D7C0               	goto	l1933
  8976  0124DA  0A07               	xorlw	7	; case 204
  8977  0124DC  B4D8               	btfsc	status,2,c
  8978  0124DE  D7BF               	goto	l1934
  8979  0124E0  0A01               	xorlw	1	; case 205
  8980  0124E2  B4D8               	btfsc	status,2,c
  8981  0124E4  D7BE               	goto	l1935
  8982  0124E6  0A33               	xorlw	51	; case 254
  8983  0124E8  B4D8               	btfsc	status,2,c
  8984  0124EA  D7BD               	goto	l1936
  8985  0124EC  0A01               	xorlw	1	; case 255
  8986  0124EE  B4D8               	btfsc	status,2,c
  8987  0124F0  D7BC               	goto	l1937
  8988  0124F2  D7BD               	goto	l1938
  8989  0124F4                     __end_of__get_mbr:
  8990                           	opt stack 0
  8991                           tblptru	equ	0xFF8
  8992                           tblptrh	equ	0xFF7
  8993                           tblptrl	equ	0xFF6
  8994                           tablat	equ	0xFF5
  8995                           prodh	equ	0xFF4
  8996                           prodl	equ	0xFF3
  8997                           postinc0	equ	0xFEE
  8998                           wreg	equ	0xFE8
  8999                           postdec1	equ	0xFE5
  9000                           fsr1h	equ	0xFE2
  9001                           fsr1l	equ	0xFE1
  9002                           indf2	equ	0xFDF
  9003                           postinc2	equ	0xFDE
  9004                           fsr2h	equ	0xFDA
  9005                           fsr2l	equ	0xFD9
  9006                           status	equ	0xFD8
  9007                           
  9008 ;; *************** function __get_fbr *****************
  9009 ;; Defined at:
  9010 ;;		line 1083 in file "fat16.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  idx             2    0[BANK0 ] unsigned int 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      unsigned char 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;Total ram usage:        4 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:   10
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_fat_get_format_status
  9035 ;;		_fat_restore_mbr_fbr
  9036 ;;		_fat_format
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text19
  9041  00E15E                     __ptext19:
  9042                           	opt stack 0
  9043  00E15E                     __get_fbr:
  9044                           	opt stack 17
  9045                           
  9046                           ;fat16.c: 1085: switch (idx)
  9047                           
  9048                           ;incstack = 0
  9049  00E15E  D098               	goto	l1942
  9050  00E160                     
  9051                           ;fat16.c: 1088: return 0xEB;
  9052  00E160  0EEB               	movlw	235
  9053  00E162  0012               	return	
  9054  00E164                     
  9055                           ;fat16.c: 1090: return 0x3C;
  9056  00E164  0E3C               	movlw	60
  9057  00E166  0012               	return	
  9058  00E168                     
  9059                           ;fat16.c: 1092: return 0x90;
  9060  00E168  0E90               	movlw	144
  9061  00E16A  0012               	return	
  9062  00E16C                     
  9063                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9064  00E16C  0E0B               	movlw	low STR_7
  9065  00E16E  6EF6               	movwf	tblptrl,c
  9066  00E170                     	if	1	;There is more than 1 active tblptr byte
  9067  00E170  0EA3               	movlw	high STR_7
  9068  00E172  6EF7               	movwf	tblptrh,c
  9069  00E174                     	endif
  9070  00E174                     	if	1	;There are 3 active tblptr bytes
  9071  00E174  0E00               	movlw	low (STR_7 shr (0+16))
  9072  00E176  6EF8               	movwf	tblptru,c
  9073  00E178                     	endif
  9074  00E178  0008               	tblrd		*
  9075  00E17A  50F5               	movf	tablat,w,c
  9076  00E17C  0012               	return	
  9077  00E17E                     
  9078                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9079  00E17E  0E0C               	movlw	low (STR_7+1)
  9080  00E180  6EF6               	movwf	tblptrl,c
  9081  00E182  0EA3               	movlw	high (STR_7+1)
  9082  00E184  6EF7               	movwf	tblptrh,c
  9083  00E186                     	if	0	;tblptru may be non-zero
  9084  00E186                     	endif
  9085  00E186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9086  00E186  0E00               	movlw	low (__mediumconst shr (0+16))
  9087  00E188  6EF8               	movwf	tblptru,c
  9088  00E18A                     	endif
  9089  00E18A  0008               	tblrd		*
  9090  00E18C  50F5               	movf	tablat,w,c
  9091  00E18E  0012               	return	
  9092  00E190                     
  9093                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9094  00E190  0E0D               	movlw	low (STR_7+2)
  9095  00E192  6EF6               	movwf	tblptrl,c
  9096  00E194  0EA3               	movlw	high (STR_7+2)
  9097  00E196  6EF7               	movwf	tblptrh,c
  9098  00E198                     	if	0	;tblptru may be non-zero
  9099  00E198                     	endif
  9100  00E198                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9101  00E198  0E00               	movlw	low (__mediumconst shr (0+16))
  9102  00E19A  6EF8               	movwf	tblptru,c
  9103  00E19C                     	endif
  9104  00E19C  0008               	tblrd		*
  9105  00E19E  50F5               	movf	tablat,w,c
  9106  00E1A0  0012               	return	
  9107  00E1A2                     
  9108                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9109  00E1A2  0E0E               	movlw	low (STR_7+3)
  9110  00E1A4  6EF6               	movwf	tblptrl,c
  9111  00E1A6  0EA3               	movlw	high (STR_7+3)
  9112  00E1A8  6EF7               	movwf	tblptrh,c
  9113  00E1AA                     	if	0	;tblptru may be non-zero
  9114  00E1AA                     	endif
  9115  00E1AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9116  00E1AA  0E00               	movlw	low (__mediumconst shr (0+16))
  9117  00E1AC  6EF8               	movwf	tblptru,c
  9118  00E1AE                     	endif
  9119  00E1AE  0008               	tblrd		*
  9120  00E1B0  50F5               	movf	tablat,w,c
  9121  00E1B2  0012               	return	
  9122  00E1B4                     
  9123                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9124  00E1B4  0E0F               	movlw	low (STR_7+4)
  9125  00E1B6  6EF6               	movwf	tblptrl,c
  9126  00E1B8  0EA3               	movlw	high (STR_7+4)
  9127  00E1BA  6EF7               	movwf	tblptrh,c
  9128  00E1BC                     	if	0	;tblptru may be non-zero
  9129  00E1BC                     	endif
  9130  00E1BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9131  00E1BC  0E00               	movlw	low (__mediumconst shr (0+16))
  9132  00E1BE  6EF8               	movwf	tblptru,c
  9133  00E1C0                     	endif
  9134  00E1C0  0008               	tblrd		*
  9135  00E1C2  50F5               	movf	tablat,w,c
  9136  00E1C4  0012               	return	
  9137  00E1C6                     
  9138                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9139  00E1C6  0E10               	movlw	low (STR_7+5)
  9140  00E1C8  6EF6               	movwf	tblptrl,c
  9141  00E1CA  0EA3               	movlw	high (STR_7+5)
  9142  00E1CC  6EF7               	movwf	tblptrh,c
  9143  00E1CE                     	if	0	;tblptru may be non-zero
  9144  00E1CE                     	endif
  9145  00E1CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9146  00E1CE  0E00               	movlw	low (__mediumconst shr (0+16))
  9147  00E1D0  6EF8               	movwf	tblptru,c
  9148  00E1D2                     	endif
  9149  00E1D2  0008               	tblrd		*
  9150  00E1D4  50F5               	movf	tablat,w,c
  9151  00E1D6  0012               	return	
  9152  00E1D8                     
  9153                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9154  00E1D8  0E11               	movlw	low (STR_7+6)
  9155  00E1DA  6EF6               	movwf	tblptrl,c
  9156  00E1DC  0EA3               	movlw	high (STR_7+6)
  9157  00E1DE  6EF7               	movwf	tblptrh,c
  9158  00E1E0                     	if	0	;tblptru may be non-zero
  9159  00E1E0                     	endif
  9160  00E1E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9161  00E1E0  0E00               	movlw	low (__mediumconst shr (0+16))
  9162  00E1E2  6EF8               	movwf	tblptru,c
  9163  00E1E4                     	endif
  9164  00E1E4  0008               	tblrd		*
  9165  00E1E6  50F5               	movf	tablat,w,c
  9166  00E1E8  0012               	return	
  9167  00E1EA                     
  9168                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9169  00E1EA  0E12               	movlw	low (STR_7+7)
  9170  00E1EC  6EF6               	movwf	tblptrl,c
  9171  00E1EE  0EA3               	movlw	high (STR_7+7)
  9172  00E1F0  6EF7               	movwf	tblptrh,c
  9173  00E1F2                     	if	0	;tblptru may be non-zero
  9174  00E1F2                     	endif
  9175  00E1F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9176  00E1F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9177  00E1F4  6EF8               	movwf	tblptru,c
  9178  00E1F6                     	endif
  9179  00E1F6  0008               	tblrd		*
  9180  00E1F8  50F5               	movf	tablat,w,c
  9181  00E1FA  0012               	return	
  9182  00E1FC                     
  9183                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9184  00E1FC  0E00               	movlw	0
  9185  00E1FE  0012               	return	
  9186  00E200                     
  9187                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9188  00E200  0E02               	movlw	2
  9189  00E202  0012               	return	
  9190  00E204                     
  9191                           ;fat16.c: 1114: return 1;
  9192  00E204  0E01               	movlw	1
  9193  00E206  0012               	return	
  9194  00E208                     
  9195                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9196  00E208  0E01               	movlw	1
  9197  00E20A  0012               	return	
  9198  00E20C                     
  9199                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9200  00E20C  0E00               	movlw	0
  9201  00E20E  0012               	return	
  9202  00E210                     
  9203                           ;fat16.c: 1120: return 1;
  9204  00E210  0E01               	movlw	1
  9205  00E212  0012               	return	
  9206  00E214                     
  9207                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9208  00E214  0E40               	movlw	64
  9209  00E216  0012               	return	
  9210  00E218                     
  9211                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9212  00E218  0E00               	movlw	0
  9213  00E21A  0012               	return	
  9214  00E21C                     
  9215                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9216  00E21C  0EFF               	movlw	255
  9217  00E21E  0012               	return	
  9218  00E220                     
  9219                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9220  00E220  0E1F               	movlw	31
  9221  00E222  0012               	return	
  9222  00E224                     
  9223                           ;fat16.c: 1130: return 0XF8;
  9224  00E224  0EF8               	movlw	248
  9225  00E226  0012               	return	
  9226  00E228                     
  9227                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9228  00E228  0E20               	movlw	32
  9229  00E22A  0012               	return	
  9230  00E22C                     
  9231                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9232  00E22C  0E00               	movlw	0
  9233  00E22E  0012               	return	
  9234  00E230                     
  9235                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9236  00E230  0E3F               	movlw	63
  9237  00E232  0012               	return	
  9238  00E234                     
  9239                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9240  00E234  0E00               	movlw	0
  9241  00E236  0012               	return	
  9242  00E238                     
  9243                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9244  00E238  0E10               	movlw	16
  9245  00E23A  0012               	return	
  9246  00E23C                     
  9247                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9248  00E23C  0E00               	movlw	0
  9249  00E23E  0012               	return	
  9250  00E240                     
  9251                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9252  00E240  0E00               	movlw	0
  9253  00E242  0012               	return	
  9254  00E244                     
  9255                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9256  00E244  0E00               	movlw	0
  9257  00E246  0012               	return	
  9258  00E248                     
  9259                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9260  00E248  0E00               	movlw	0
  9261  00E24A  0012               	return	
  9262  00E24C                     
  9263                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9264  00E24C  0E00               	movlw	0
  9265  00E24E  0012               	return	
  9266  00E250                     
  9267                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9268  00E250  0E01               	movlw	1
  9269  00E252  0012               	return	
  9270  00E254                     
  9271                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9272  00E254  0E00               	movlw	0
  9273  00E256  0012               	return	
  9274  00E258                     
  9275                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9276  00E258  0E22               	movlw	34
  9277  00E25A  0012               	return	
  9278  00E25C                     
  9279                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9280  00E25C  0E00               	movlw	0
  9281  00E25E  0012               	return	
  9282  00E260                     
  9283                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9284                           
  9285                           ;fat16.c: 1161: case 0x2F:
  9286  00E260  0E00               	movlw	0
  9287  00E262  0012               	return	
  9288  00E264                     
  9289                           ;fat16.c: 1164: return 'F';
  9290  00E264  0E46               	movlw	70
  9291  00E266  0012               	return	
  9292  00E268                     
  9293                           ;fat16.c: 1166: return 'A';
  9294  00E268  0E41               	movlw	65
  9295  00E26A  0012               	return	
  9296  00E26C                     
  9297                           ;fat16.c: 1168: return 'T';
  9298  00E26C  0E54               	movlw	84
  9299  00E26E  0012               	return	
  9300  00E270                     
  9301                           ;fat16.c: 1170: return '1';
  9302  00E270  0E31               	movlw	49
  9303  00E272  0012               	return	
  9304  00E274                     
  9305                           ;fat16.c: 1172: return '6';
  9306  00E274  0E36               	movlw	54
  9307  00E276  0012               	return	
  9308  00E278                     
  9309                           ;fat16.c: 1174: return ' ';
  9310  00E278  0E20               	movlw	32
  9311  00E27A  0012               	return	
  9312  00E27C                     
  9313                           ;fat16.c: 1176: return ' ';
  9314  00E27C  0E20               	movlw	32
  9315  00E27E  0012               	return	
  9316  00E280                     
  9317                           ;fat16.c: 1178: return ' ';
  9318  00E280  0E20               	movlw	32
  9319  00E282  0012               	return	
  9320  00E284                     
  9321                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9322  00E284  0E55               	movlw	85
  9323  00E286  0012               	return	
  9324  00E288                     
  9325                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9326  00E288  0EAA               	movlw	170
  9327  00E28A  0012               	return	
  9328  00E28C                     
  9329                           ;fat16.c: 1184: return 0X00;
  9330  00E28C  0E00               	movlw	0
  9331                           
  9332                           ;fat16.c: 1185: }
  9333  00E28E  0012               	return	
  9334  00E290                     l1942:
  9335  00E290  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9336  00E294  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9337                           
  9338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9339                           ; Switch size 1, requested type "space"
  9340                           ; Number of cases is 2, Range of values is 0 to 1
  9341                           ; switch strategies available:
  9342                           ; Name         Instructions Cycles
  9343                           ; simple_byte            7     4 (average)
  9344                           ;	Chosen strategy is simple_byte
  9345  00E298  0100               	movlb	0	; () banked
  9346  00E29A  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9347  00E29C  0A00               	xorlw	0	; case 0
  9348  00E29E  B4D8               	btfsc	status,2,c
  9349  00E2A0  D004               	goto	l19255
  9350  00E2A2  0A01               	xorlw	1	; case 1
  9351  00E2A4  B4D8               	btfsc	status,2,c
  9352  00E2A6  D08D               	goto	l19257
  9353  00E2A8  D7F1               	goto	l1992
  9354  00E2AA                     l19255:
  9355                           
  9356                           ; BSR set to: 0
  9357                           ; Switch size 1, requested type "space"
  9358                           ; Number of cases is 46, Range of values is 0 to 61
  9359                           ; switch strategies available:
  9360                           ; Name         Instructions Cycles
  9361                           ; simple_byte          139    70 (average)
  9362                           ;	Chosen strategy is simple_byte
  9363  00E2AA  5162               	movf	??__get_fbr& (0+255),w,b
  9364  00E2AC  0A00               	xorlw	0	; case 0
  9365  00E2AE  B4D8               	btfsc	status,2,c
  9366  00E2B0  D757               	goto	l1943
  9367  00E2B2  0A01               	xorlw	1	; case 1
  9368  00E2B4  B4D8               	btfsc	status,2,c
  9369  00E2B6  D756               	goto	l1945
  9370  00E2B8  0A03               	xorlw	3	; case 2
  9371  00E2BA  B4D8               	btfsc	status,2,c
  9372  00E2BC  D755               	goto	l1946
  9373  00E2BE  0A01               	xorlw	1	; case 3
  9374  00E2C0  B4D8               	btfsc	status,2,c
  9375  00E2C2  D754               	goto	l1947
  9376  00E2C4  0A07               	xorlw	7	; case 4
  9377  00E2C6  B4D8               	btfsc	status,2,c
  9378  00E2C8  D75A               	goto	l1948
  9379  00E2CA  0A01               	xorlw	1	; case 5
  9380  00E2CC  B4D8               	btfsc	status,2,c
  9381  00E2CE  D760               	goto	l1949
  9382  00E2D0  0A03               	xorlw	3	; case 6
  9383  00E2D2  B4D8               	btfsc	status,2,c
  9384  00E2D4  D766               	goto	l1950
  9385  00E2D6  0A01               	xorlw	1	; case 7
  9386  00E2D8  B4D8               	btfsc	status,2,c
  9387  00E2DA  D76C               	goto	l1951
  9388  00E2DC  0A0F               	xorlw	15	; case 8
  9389  00E2DE  B4D8               	btfsc	status,2,c
  9390  00E2E0  D772               	goto	l1952
  9391  00E2E2  0A01               	xorlw	1	; case 9
  9392  00E2E4  B4D8               	btfsc	status,2,c
  9393  00E2E6  D778               	goto	l1953
  9394  00E2E8  0A03               	xorlw	3	; case 10
  9395  00E2EA  B4D8               	btfsc	status,2,c
  9396  00E2EC  D77E               	goto	l1954
  9397  00E2EE  0A01               	xorlw	1	; case 11
  9398  00E2F0  B4D8               	btfsc	status,2,c
  9399  00E2F2  D784               	goto	l1955
  9400  00E2F4  0A07               	xorlw	7	; case 12
  9401  00E2F6  B4D8               	btfsc	status,2,c
  9402  00E2F8  D783               	goto	l1956
  9403  00E2FA  0A01               	xorlw	1	; case 13
  9404  00E2FC  B4D8               	btfsc	status,2,c
  9405  00E2FE  D782               	goto	l1957
  9406  00E300  0A03               	xorlw	3	; case 14
  9407  00E302  B4D8               	btfsc	status,2,c
  9408  00E304  D781               	goto	l1958
  9409  00E306  0A01               	xorlw	1	; case 15
  9410  00E308  B4D8               	btfsc	status,2,c
  9411  00E30A  D780               	goto	l1959
  9412  00E30C  0A1F               	xorlw	31	; case 16
  9413  00E30E  B4D8               	btfsc	status,2,c
  9414  00E310  D77F               	goto	l1960
  9415  00E312  0A01               	xorlw	1	; case 17
  9416  00E314  B4D8               	btfsc	status,2,c
  9417  00E316  D77E               	goto	l1961
  9418  00E318  0A03               	xorlw	3	; case 18
  9419  00E31A  B4D8               	btfsc	status,2,c
  9420  00E31C  D77D               	goto	l1962
  9421  00E31E  0A01               	xorlw	1	; case 19
  9422  00E320  B4D8               	btfsc	status,2,c
  9423  00E322  D77C               	goto	l1963
  9424  00E324  0A07               	xorlw	7	; case 20
  9425  00E326  B4D8               	btfsc	status,2,c
  9426  00E328  D77B               	goto	l1964
  9427  00E32A  0A01               	xorlw	1	; case 21
  9428  00E32C  B4D8               	btfsc	status,2,c
  9429  00E32E  D77A               	goto	l1965
  9430  00E330  0A03               	xorlw	3	; case 22
  9431  00E332  B4D8               	btfsc	status,2,c
  9432  00E334  D779               	goto	l1966
  9433  00E336  0A01               	xorlw	1	; case 23
  9434  00E338  B4D8               	btfsc	status,2,c
  9435  00E33A  D778               	goto	l1967
  9436  00E33C  0A0F               	xorlw	15	; case 24
  9437  00E33E  B4D8               	btfsc	status,2,c
  9438  00E340  D777               	goto	l1968
  9439  00E342  0A01               	xorlw	1	; case 25
  9440  00E344  B4D8               	btfsc	status,2,c
  9441  00E346  D776               	goto	l1969
  9442  00E348  0A03               	xorlw	3	; case 26
  9443  00E34A  B4D8               	btfsc	status,2,c
  9444  00E34C  D775               	goto	l1970
  9445  00E34E  0A01               	xorlw	1	; case 27
  9446  00E350  B4D8               	btfsc	status,2,c
  9447  00E352  D774               	goto	l1971
  9448  00E354  0A07               	xorlw	7	; case 28
  9449  00E356  B4D8               	btfsc	status,2,c
  9450  00E358  D773               	goto	l1972
  9451  00E35A  0A01               	xorlw	1	; case 29
  9452  00E35C  B4D8               	btfsc	status,2,c
  9453  00E35E  D772               	goto	l1973
  9454  00E360  0A03               	xorlw	3	; case 30
  9455  00E362  B4D8               	btfsc	status,2,c
  9456  00E364  D771               	goto	l1974
  9457  00E366  0A01               	xorlw	1	; case 31
  9458  00E368  B4D8               	btfsc	status,2,c
  9459  00E36A  D770               	goto	l1975
  9460  00E36C  0A37               	xorlw	55	; case 40
  9461  00E36E  B4D8               	btfsc	status,2,c
  9462  00E370  D76F               	goto	l1976
  9463  00E372  0A01               	xorlw	1	; case 41
  9464  00E374  B4D8               	btfsc	status,2,c
  9465  00E376  D76E               	goto	l1977
  9466  00E378  0A05               	xorlw	5	; case 44
  9467  00E37A  B4D8               	btfsc	status,2,c
  9468  00E37C  D76D               	goto	l1978
  9469  00E37E  0A01               	xorlw	1	; case 45
  9470  00E380  B4D8               	btfsc	status,2,c
  9471  00E382  D76C               	goto	l1979
  9472  00E384  0A03               	xorlw	3	; case 46
  9473  00E386  B4D8               	btfsc	status,2,c
  9474  00E388  D76B               	goto	l1980
  9475  00E38A  0A01               	xorlw	1	; case 47
  9476  00E38C  B4D8               	btfsc	status,2,c
  9477  00E38E  D768               	goto	l1980
  9478  00E390  0A19               	xorlw	25	; case 54
  9479  00E392  B4D8               	btfsc	status,2,c
  9480  00E394  D767               	goto	l1982
  9481  00E396  0A01               	xorlw	1	; case 55
  9482  00E398  B4D8               	btfsc	status,2,c
  9483  00E39A  D766               	goto	l1983
  9484  00E39C  0A0F               	xorlw	15	; case 56
  9485  00E39E  B4D8               	btfsc	status,2,c
  9486  00E3A0  D765               	goto	l1984
  9487  00E3A2  0A01               	xorlw	1	; case 57
  9488  00E3A4  B4D8               	btfsc	status,2,c
  9489  00E3A6  D764               	goto	l1985
  9490  00E3A8  0A03               	xorlw	3	; case 58
  9491  00E3AA  B4D8               	btfsc	status,2,c
  9492  00E3AC  D763               	goto	l1986
  9493  00E3AE  0A01               	xorlw	1	; case 59
  9494  00E3B0  B4D8               	btfsc	status,2,c
  9495  00E3B2  D762               	goto	l1987
  9496  00E3B4  0A07               	xorlw	7	; case 60
  9497  00E3B6  B4D8               	btfsc	status,2,c
  9498  00E3B8  D761               	goto	l1988
  9499  00E3BA  0A01               	xorlw	1	; case 61
  9500  00E3BC  B4D8               	btfsc	status,2,c
  9501  00E3BE  D760               	goto	l1989
  9502  00E3C0  D765               	goto	l1992
  9503  00E3C2                     l19257:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ; Switch size 1, requested type "space"
  9507                           ; Number of cases is 2, Range of values is 254 to 255
  9508                           ; switch strategies available:
  9509                           ; Name         Instructions Cycles
  9510                           ; simple_byte            7     4 (average)
  9511                           ;	Chosen strategy is simple_byte
  9512  00E3C2  5162               	movf	??__get_fbr& (0+255),w,b
  9513  00E3C4  0AFE               	xorlw	254	; case 254
  9514  00E3C6  B4D8               	btfsc	status,2,c
  9515  00E3C8  D75D               	goto	l1990
  9516  00E3CA  0A01               	xorlw	1	; case 255
  9517  00E3CC  B4D8               	btfsc	status,2,c
  9518  00E3CE  D75C               	goto	l1991
  9519  00E3D0  D75D               	goto	l1992
  9520  00E3D2                     __end_of__get_fbr:
  9521                           	opt stack 0
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           postinc0	equ	0xFEE
  9529                           wreg	equ	0xFE8
  9530                           postdec1	equ	0xFE5
  9531                           fsr1h	equ	0xFE2
  9532                           fsr1l	equ	0xFE1
  9533                           indf2	equ	0xFDF
  9534                           postinc2	equ	0xFDE
  9535                           fsr2h	equ	0xFDA
  9536                           fsr2l	equ	0xFD9
  9537                           status	equ	0xFD8
  9538                           
  9539 ;; *************** function _encoder_init *****************
  9540 ;; Defined at:
  9541 ;;		line 92 in file "encoder.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;		None
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;		None
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  1    wreg      void 
  9548 ;; Registers used:
  9549 ;;		wreg, status,2, status,0
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9559 ;;Total ram usage:        0 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:   10
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_system_init
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text20
  9570  0155F4                     __ptext20:
  9571                           	opt stack 0
  9572  0155F4                     _encoder_init:
  9573                           	opt stack 19
  9574                           
  9575                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9576                           
  9577                           ;incstack = 0
  9578  0155F4  5084               	movf	3972,w,c	;volatile
  9579  0155F6  0B07               	andlw	7
  9580  0155F8  0101               	movlb	1	; () banked
  9581  0155FA  6F54               	movwf	_enc1& (0+255),b
  9582                           
  9583                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9584  0155FC  5080               	movf	3968,w,c	;volatile
  9585  0155FE  0B07               	andlw	7
  9586  015600  6F53               	movwf	_enc2& (0+255),b
  9587                           
  9588                           ; BSR set to: 1
  9589                           ;encoder.c: 96: os.encoder1Count = 0;
  9590  015602  0E00               	movlw	0
  9591  015604  6F74               	movwf	(_os+3)& (0+255),b	;volatile
  9592                           
  9593                           ; BSR set to: 1
  9594                           ;encoder.c: 97: os.encoder2Count = 0;
  9595  015606  0E00               	movlw	0
  9596  015608  6F76               	movwf	(_os+5)& (0+255),b	;volatile
  9597                           
  9598                           ; BSR set to: 1
  9599                           ;encoder.c: 98: os.button1 = 0;
  9600  01560A  0E00               	movlw	0
  9601  01560C  6F75               	movwf	(_os+4)& (0+255),b	;volatile
  9602                           
  9603                           ; BSR set to: 1
  9604                           ;encoder.c: 99: os.button2 = 0;
  9605  01560E  0E00               	movlw	0
  9606  015610  6F77               	movwf	(_os+6)& (0+255),b	;volatile
  9607                           
  9608                           ; BSR set to: 1
  9609                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9610  015612  0E01               	movlw	1
  9611  015614  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  9612                           
  9613                           ; BSR set to: 1
  9614  015616  0012               	return		;funcret
  9615  015618                     __end_of_encoder_init:
  9616                           	opt stack 0
  9617                           tblptru	equ	0xFF8
  9618                           tblptrh	equ	0xFF7
  9619                           tblptrl	equ	0xFF6
  9620                           tablat	equ	0xFF5
  9621                           prodh	equ	0xFF4
  9622                           prodl	equ	0xFF3
  9623                           postinc0	equ	0xFEE
  9624                           wreg	equ	0xFE8
  9625                           postdec1	equ	0xFE5
  9626                           fsr1h	equ	0xFE2
  9627                           fsr1l	equ	0xFE1
  9628                           indf2	equ	0xFDF
  9629                           postinc2	equ	0xFDE
  9630                           fsr2h	equ	0xFDA
  9631                           fsr2l	equ	0xFD9
  9632                           status	equ	0xFD8
  9633                           
  9634 ;; *************** function _display_update *****************
  9635 ;; Defined at:
  9636 ;;		line 618 in file "display.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;		None
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  line            1   16[BANK0 ] unsigned char 
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      void 
  9643 ;; Registers used:
  9644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9653 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9654 ;;Total ram usage:        1 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; Hardware stack levels required when called:   14
  9657 ;; This function calls:
  9658 ;;		_i2c_display_cursor
  9659 ;;		_i2c_display_write_fixed
  9660 ;; This function is called by:
  9661 ;;		_main
  9662 ;;		_system_init
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text21
  9667  015142                     __ptext21:
  9668                           	opt stack 0
  9669  015142                     _display_update:
  9670                           	opt stack 15
  9671                           
  9672                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;incstack = 0
  9676  015142  0E00               	movlw	0
  9677  015144  0100               	movlb	0	; () banked
  9678  015146  6F70               	movwf	display_update@line& (0+255),b
  9679  015148                     l16589:
  9680                           
  9681                           ; BSR set to: 0
  9682  015148  0E03               	movlw	3
  9683  01514A  6570               	cpfsgt	display_update@line& (0+255),b
  9684  01514C  D001               	goto	l1485
  9685  01514E  0012               	return	
  9686  015150                     l1485:
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
  9690                           
  9691                           ; BSR set to: 0
  9692  015150  0E00               	movlw	0
  9693  015152  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  9694  015154  5170               	movf	display_update@line& (0+255),w,b
  9695  015156  EC30  F0AB         	call	_i2c_display_cursor
  9696                           
  9697                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
  9698  01515A  0100               	movlb	0	; () banked
  9699  01515C  5170               	movf	display_update@line& (0+255),w,b
  9700  01515E  0D14               	mullw	20
  9701  015160  0E34               	movlw	low _display_content
  9702  015162  24F3               	addwf	prodl,w,c
  9703  015164  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  9704  015166  0E02               	movlw	high _display_content
  9705  015168  20F4               	addwfc	prodh,w,c
  9706  01516A  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  9707  01516C  0E14               	movlw	20
  9708  01516E  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  9709  015170  ECAA  F0A4         	call	_i2c_display_write_fixed	;wreg free
  9710  015174  0100               	movlb	0	; () banked
  9711  015176  2B70               	incf	display_update@line& (0+255),f,b
  9712  015178  D7E7               	goto	l16589
  9713  01517A                     __end_of_display_update:
  9714                           	opt stack 0
  9715                           tblptru	equ	0xFF8
  9716                           tblptrh	equ	0xFF7
  9717                           tblptrl	equ	0xFF6
  9718                           tablat	equ	0xFF5
  9719                           prodh	equ	0xFF4
  9720                           prodl	equ	0xFF3
  9721                           postinc0	equ	0xFEE
  9722                           wreg	equ	0xFE8
  9723                           postdec1	equ	0xFE5
  9724                           fsr1h	equ	0xFE2
  9725                           fsr1l	equ	0xFE1
  9726                           indf2	equ	0xFDF
  9727                           postinc2	equ	0xFDE
  9728                           fsr2h	equ	0xFDA
  9729                           fsr2l	equ	0xFD9
  9730                           status	equ	0xFD8
  9731                           
  9732 ;; *************** function _i2c_display_write_fixed *****************
  9733 ;; Defined at:
  9734 ;;		line 419 in file "i2c.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9737 ;;		 -> display_content(80), 
  9738 ;;  length          1    7[BANK0 ] unsigned char 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  pos             1    8[BANK0 ] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;Total ram usage:        4 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:   11
  9757 ;; This function calls:
  9758 ;;		__i2c_send
  9759 ;;		__i2c_start
  9760 ;;		__i2c_stop
  9761 ;;		__i2c_wait_idle
  9762 ;; This function is called by:
  9763 ;;		_display_update
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text22
  9768  014954                     __ptext22:
  9769                           	opt stack 0
  9770  014954                     _i2c_display_write_fixed:
  9771                           	opt stack 17
  9772                           
  9773                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;incstack = 0
  9777  014954  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  9778                           
  9779                           ;i2c.c: 427: _i2c_start();
  9780  014958  EC65  F0AC         	call	__i2c_start	;wreg free
  9781                           
  9782                           ;i2c.c: 428: _i2c_wait_idle();
  9783  01495C  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  9784                           
  9785                           ;i2c.c: 429: _i2c_send(0b01111000);
  9786  014960  0E78               	movlw	120
  9787  014962  EC52  F0AC         	call	__i2c_send
  9788                           
  9789                           ;i2c.c: 430: _i2c_wait_idle();
  9790  014966  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  9791                           
  9792                           ;i2c.c: 431: _i2c_send(0b01000000);
  9793  01496A  0E40               	movlw	64
  9794  01496C  EC52  F0AC         	call	__i2c_send
  9795                           
  9796                           ;i2c.c: 432: _i2c_wait_idle();
  9797  014970  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  9798                           
  9799                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
  9800  014974  0E00               	movlw	0
  9801  014976  0100               	movlb	0	; () banked
  9802  014978  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  9803  01497A  D00F               	goto	l1243
  9804  01497C                     
  9805                           ; BSR set to: 0
  9806                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
  9807                           
  9808                           ; BSR set to: 0
  9809  01497C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  9810  01497E  0D01               	mullw	1
  9811  014980  50F3               	movf	prodl,w,c
  9812  014982  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  9813  014984  6ED9               	movwf	fsr2l,c
  9814  014986  50F4               	movf	prodh,w,c
  9815  014988  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  9816  01498A  6EDA               	movwf	fsr2h,c
  9817  01498C  50DF               	movf	indf2,w,c
  9818  01498E  EC52  F0AC         	call	__i2c_send
  9819                           
  9820                           ;i2c.c: 438: _i2c_wait_idle();
  9821  014992  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
  9822  014996  0100               	movlb	0	; () banked
  9823  014998  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  9824  01499A                     l1243:
  9825                           
  9826                           ; BSR set to: 0
  9827                           
  9828                           ; BSR set to: 0
  9829  01499A  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  9830  01499C  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  9831  01499E  A0D8               	btfss	status,0,c
  9832  0149A0  D7ED               	goto	l1244
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
  9836                           
  9837                           ; BSR set to: 0
  9838  0149A2  EC61  F0AC         	call	__i2c_stop	;wreg free
  9839  0149A6  0012               	return		;funcret
  9840  0149A8                     __end_of_i2c_display_write_fixed:
  9841                           	opt stack 0
  9842                           tblptru	equ	0xFF8
  9843                           tblptrh	equ	0xFF7
  9844                           tblptrl	equ	0xFF6
  9845                           tablat	equ	0xFF5
  9846                           prodh	equ	0xFF4
  9847                           prodl	equ	0xFF3
  9848                           postinc0	equ	0xFEE
  9849                           wreg	equ	0xFE8
  9850                           postdec1	equ	0xFE5
  9851                           fsr1h	equ	0xFE2
  9852                           fsr1l	equ	0xFE1
  9853                           indf2	equ	0xFDF
  9854                           postinc2	equ	0xFDE
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function _i2c_display_cursor *****************
  9860 ;; Defined at:
  9861 ;;		line 379 in file "i2c.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  line            1    wreg     unsigned char 
  9864 ;;  position        1   13[BANK0 ] unsigned char 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  line            1   14[BANK0 ] unsigned char 
  9867 ;;  address         1   15[BANK0 ] unsigned char 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9877 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9881 ;;Total ram usage:        3 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:   13
  9884 ;; This function calls:
  9885 ;;		__ic2_display_set_ddram_address
  9886 ;; This function is called by:
  9887 ;;		_display_update
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text23
  9892  015660                     __ptext23:
  9893                           	opt stack 0
  9894  015660                     _i2c_display_cursor:
  9895                           	opt stack 15
  9896                           
  9897                           ;incstack = 0
  9898                           ;i2c_display_cursor@line stored from wreg
  9899  015660  0100               	movlb	0	; () banked
  9900  015662  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  9901                           
  9902                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
  9903  015664  0E03               	movlw	3
  9904  015666  0100               	movlb	0	; () banked
  9905  015668  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  9906                           
  9907                           ;i2c.c: 385: address = line<<5;
  9908  01566A  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  9909  01566C  46E8               	rlncf	wreg,f,c
  9910  01566E  0BE0               	andlw	224
  9911  015670  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  9912                           
  9913                           ;i2c.c: 386: position &= 0b11111;
  9914  015672  0E1F               	movlw	31
  9915  015674  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  9916                           
  9917                           ;i2c.c: 387: address |= position;
  9918  015676  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  9919  015678  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
  9923  01567A  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  9924  01567C  EC0C  F0AB         	call	__ic2_display_set_ddram_address
  9925  015680  0012               	return		;funcret
  9926  015682                     __end_of_i2c_display_cursor:
  9927                           	opt stack 0
  9928                           tblptru	equ	0xFF8
  9929                           tblptrh	equ	0xFF7
  9930                           tblptrl	equ	0xFF6
  9931                           tablat	equ	0xFF5
  9932                           prodh	equ	0xFF4
  9933                           prodl	equ	0xFF3
  9934                           postinc0	equ	0xFEE
  9935                           wreg	equ	0xFE8
  9936                           postdec1	equ	0xFE5
  9937                           fsr1h	equ	0xFE2
  9938                           fsr1l	equ	0xFE1
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           fsr2h	equ	0xFDA
  9942                           fsr2l	equ	0xFD9
  9943                           status	equ	0xFD8
  9944                           
  9945 ;; *************** function __ic2_display_set_ddram_address *****************
  9946 ;; Defined at:
  9947 ;;		line 350 in file "i2c.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;  address         1    wreg     unsigned char 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  address         1   10[BANK0 ] unsigned char 
  9952 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  1    wreg      void 
  9955 ;; Registers used:
  9956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9963 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9966 ;;Total ram usage:        3 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; Hardware stack levels required when called:   12
  9969 ;; This function calls:
  9970 ;;		__i2c_write
  9971 ;; This function is called by:
  9972 ;;		_i2c_display_cursor
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text24
  9977  015618                     __ptext24:
  9978                           	opt stack 0
  9979  015618                     __ic2_display_set_ddram_address:
  9980                           	opt stack 15
  9981                           
  9982                           ;incstack = 0
  9983                           ;__ic2_display_set_ddram_address@address stored from wreg
  9984  015618  0100               	movlb	0	; () banked
  9985  01561A  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
  9986                           
  9987                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
  9988  01561C  0E00               	movlw	0
  9989  01561E  0100               	movlb	0	; () banked
  9990  015620  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
  9994  015622  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
  9995  015624  0980               	iorlw	128
  9996  015626  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
 10000  015628  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10001  01562A  6F65               	movwf	__i2c_write@data& (0+255),b
 10002  01562C  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10003  01562E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10004  015630  0E02               	movlw	2
 10005  015632  6F67               	movwf	__i2c_write@length& (0+255),b
 10006  015634  0E78               	movlw	120
 10007  015636  ECCB  F0A5         	call	__i2c_write
 10008  01563A  0012               	return		;funcret
 10009  01563C                     __end_of__ic2_display_set_ddram_address:
 10010                           	opt stack 0
 10011                           tblptru	equ	0xFF8
 10012                           tblptrh	equ	0xFF7
 10013                           tblptrl	equ	0xFF6
 10014                           tablat	equ	0xFF5
 10015                           prodh	equ	0xFF4
 10016                           prodl	equ	0xFF3
 10017                           postinc0	equ	0xFEE
 10018                           wreg	equ	0xFE8
 10019                           postdec1	equ	0xFE5
 10020                           fsr1h	equ	0xFE2
 10021                           fsr1l	equ	0xFE1
 10022                           indf2	equ	0xFDF
 10023                           postinc2	equ	0xFDE
 10024                           fsr2h	equ	0xFDA
 10025                           fsr2l	equ	0xFD9
 10026                           status	equ	0xFD8
 10027                           
 10028 ;; *************** function _display_init *****************
 10029 ;; Defined at:
 10030 ;;		line 256 in file "display.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10048 ;;Total ram usage:        0 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:   15
 10051 ;; This function calls:
 10052 ;;		__display_start
 10053 ;;		_i2c_display_init
 10054 ;;		_i2c_display_program_custom_character
 10055 ;; This function is called by:
 10056 ;;		_system_init
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text25
 10061  015096                     __ptext25:
 10062                           	opt stack 0
 10063  015096                     _display_init:
 10064                           	opt stack 14
 10065                           
 10066                           ;display.c: 258: i2c_display_init();
 10067                           
 10068                           ;incstack = 0
 10069  015096  ECA3  F0A5         	call	_i2c_display_init	;wreg free
 10070                           
 10071                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10072  01509A  0ED5               	movlw	low _bit_pattern_verticalbar
 10073  01509C  0100               	movlb	0	; () banked
 10074  01509E  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10075  0150A0  0EA2               	movlw	high _bit_pattern_verticalbar
 10076  0150A2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10077  0150A4  0E00               	movlw	0
 10078  0150A6  ECFD  F09D         	call	_i2c_display_program_custom_character
 10079                           
 10080                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10081  0150AA  0ECD               	movlw	low _bit_pattern_degree
 10082  0150AC  0100               	movlb	0	; () banked
 10083  0150AE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10084  0150B0  0EA2               	movlw	high _bit_pattern_degree
 10085  0150B2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10086  0150B4  0E01               	movlw	1
 10087  0150B6  ECFD  F09D         	call	_i2c_display_program_custom_character
 10088                           
 10089                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10090  0150BA  0EC5               	movlw	low _bit_pattern_ae
 10091  0150BC  0100               	movlb	0	; () banked
 10092  0150BE  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10093  0150C0  0EA2               	movlw	high _bit_pattern_ae
 10094  0150C2  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10095  0150C4  0E02               	movlw	2
 10096  0150C6  ECFD  F09D         	call	_i2c_display_program_custom_character
 10097                           
 10098                           ;display.c: 263: _display_start();
 10099  0150CA  EC42  F096         	call	__display_start	;wreg free
 10100  0150CE  0012               	return		;funcret
 10101  0150D0                     __end_of_display_init:
 10102                           	opt stack 0
 10103                           tblptru	equ	0xFF8
 10104                           tblptrh	equ	0xFF7
 10105                           tblptrl	equ	0xFF6
 10106                           tablat	equ	0xFF5
 10107                           prodh	equ	0xFF4
 10108                           prodl	equ	0xFF3
 10109                           postinc0	equ	0xFEE
 10110                           wreg	equ	0xFE8
 10111                           postdec1	equ	0xFE5
 10112                           fsr1h	equ	0xFE2
 10113                           fsr1l	equ	0xFE1
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           fsr2h	equ	0xFDA
 10117                           fsr2l	equ	0xFD9
 10118                           status	equ	0xFD8
 10119                           
 10120 ;; *************** function _i2c_display_program_custom_character *****************
 10121 ;; Defined at:
 10122 ;;		line 444 in file "i2c.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  address         1    wreg     unsigned char 
 10125 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10126 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  address         1   31[BANK0 ] unsigned char 
 10129 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10130 ;;  cntr            1   32[BANK0 ] unsigned char 
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10141 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10143 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10144 ;;Total ram usage:       19 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:   13
 10147 ;; This function calls:
 10148 ;;		__i2c_write
 10149 ;;		__ic2_display_set_cgram_address
 10150 ;; This function is called by:
 10151 ;;		_display_init
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           	psect	text26
 10156  013BFA                     __ptext26:
 10157                           	opt stack 0
 10158  013BFA                     _i2c_display_program_custom_character:
 10159                           	opt stack 15
 10160                           
 10161                           ;incstack = 0
 10162                           ;i2c_display_program_custom_character@address stored from wreg
 10163  013BFA  0100               	movlb	0	; () banked
 10164  013BFC  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10165                           
 10166                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 10167  013BFE  0100               	movlb	0	; () banked
 10168  013C00  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10169  013C02  42E8               	rrncf	wreg,f,c
 10170  013C04  0BF8               	andlw	248
 10171  013C06  EC45  F0AA         	call	__ic2_display_set_cgram_address
 10172                           
 10173                           ;i2c.c: 453: data_array[0] = 0b01000000;
 10174  013C0A  0E40               	movlw	64
 10175  013C0C  0100               	movlb	0	; () banked
 10176  013C0E  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 10180  013C10  0E00               	movlw	0
 10181  013C12  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10182  013C14                     l15341:
 10183                           
 10184                           ; BSR set to: 0
 10185  013C14  0E07               	movlw	7
 10186  013C16  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10187  013C18  D001               	goto	l1249
 10188  013C1A  D023               	goto	u14340
 10189  013C1C                     l1249:
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10193                           
 10194                           ; BSR set to: 0
 10195  013C1C  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10196  013C1E  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10197  013C20  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10198  013C22  0E01               	movlw	1
 10199  013C24  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10200  013C26  0E00               	movlw	0
 10201  013C28  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10202  013C2A  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10203  013C2C  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10204  013C2E  6ED9               	movwf	fsr2l,c
 10205  013C30  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10206  013C32  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10207  013C34  6EDA               	movwf	fsr2h,c
 10208  013C36  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10209  013C38  0D01               	mullw	1
 10210  013C3A  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10211  013C3E  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10212  013C42  50F3               	movf	prodl,w,c
 10213  013C44  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10214  013C46  50F4               	movf	prodh,w,c
 10215  013C48  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10216  013C4A  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10217  013C4E  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10218  013C52                     	if	0	;tblptru may be non-zero
 10219  013C52                     	endif
 10220  013C52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10221  013C52  0E00               	movlw	low (__mediumconst shr (0+16))
 10222  013C54  6EF8               	movwf	tblptru,c
 10223  013C56                     	endif
 10224  013C56  0008               	tblrd		*
 10225  013C58  50F5               	movf	tablat,w,c
 10226  013C5A  0B1F               	andlw	31
 10227  013C5C  6EDF               	movwf	indf2,c
 10228                           
 10229                           ; BSR set to: 0
 10230  013C5E  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10231  013C60  D7D9               	goto	l15341
 10232  013C62                     u14340:
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 10236                           
 10237                           ; BSR set to: 0
 10238  013C62  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10239  013C64  6F65               	movwf	__i2c_write@data& (0+255),b
 10240  013C66  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10241  013C68  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10242  013C6A  0E09               	movlw	9
 10243  013C6C  6F67               	movwf	__i2c_write@length& (0+255),b
 10244  013C6E  0E78               	movlw	120
 10245  013C70  ECCB  F0A5         	call	__i2c_write
 10246  013C74  0012               	return		;funcret
 10247  013C76                     __end_of_i2c_display_program_custom_character:
 10248                           	opt stack 0
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           postinc0	equ	0xFEE
 10256                           wreg	equ	0xFE8
 10257                           postdec1	equ	0xFE5
 10258                           fsr1h	equ	0xFE2
 10259                           fsr1l	equ	0xFE1
 10260                           indf2	equ	0xFDF
 10261                           postinc2	equ	0xFDE
 10262                           fsr2h	equ	0xFDA
 10263                           fsr2l	equ	0xFD9
 10264                           status	equ	0xFD8
 10265                           
 10266 ;; *************** function __ic2_display_set_cgram_address *****************
 10267 ;; Defined at:
 10268 ;;		line 363 in file "i2c.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;  address         1    wreg     unsigned char 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  address         1   13[BANK0 ] unsigned char 
 10273 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10284 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10286 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10287 ;;Total ram usage:        4 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:   12
 10290 ;; This function calls:
 10291 ;;		__i2c_write
 10292 ;; This function is called by:
 10293 ;;		_i2c_display_program_custom_character
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text27
 10298  01548A                     __ptext27:
 10299                           	opt stack 0
 10300  01548A                     __ic2_display_set_cgram_address:
 10301                           	opt stack 15
 10302                           
 10303                           ;incstack = 0
 10304                           ;__ic2_display_set_cgram_address@address stored from wreg
 10305  01548A  0100               	movlb	0	; () banked
 10306  01548C  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10307                           
 10308                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 10309  01548E  0100               	movlb	0	; () banked
 10310  015490  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;i2c.c: 371: data_array[0] = 0b00000000;
 10314  015492  0E00               	movlw	0
 10315  015494  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;i2c.c: 372: data_array[1] = 0b00111000;
 10319  015496  0E38               	movlw	56
 10320  015498  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10321                           
 10322                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 10323  01549A  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10324  01549C  0940               	iorlw	64
 10325  01549E  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 10329  0154A0  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10330  0154A2  6F65               	movwf	__i2c_write@data& (0+255),b
 10331  0154A4  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10332  0154A6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10333  0154A8  0E03               	movlw	3
 10334  0154AA  6F67               	movwf	__i2c_write@length& (0+255),b
 10335  0154AC  0E78               	movlw	120
 10336  0154AE  ECCB  F0A5         	call	__i2c_write
 10337  0154B2  0012               	return		;funcret
 10338  0154B4                     __end_of__ic2_display_set_cgram_address:
 10339                           	opt stack 0
 10340                           tblptru	equ	0xFF8
 10341                           tblptrh	equ	0xFF7
 10342                           tblptrl	equ	0xFF6
 10343                           tablat	equ	0xFF5
 10344                           prodh	equ	0xFF4
 10345                           prodl	equ	0xFF3
 10346                           postinc0	equ	0xFEE
 10347                           wreg	equ	0xFE8
 10348                           postdec1	equ	0xFE5
 10349                           fsr1h	equ	0xFE2
 10350                           fsr1l	equ	0xFE1
 10351                           indf2	equ	0xFDF
 10352                           postinc2	equ	0xFDE
 10353                           fsr2h	equ	0xFDA
 10354                           fsr2l	equ	0xFD9
 10355                           status	equ	0xFD8
 10356                           
 10357 ;; *************** function _i2c_display_init *****************
 10358 ;; Defined at:
 10359 ;;		line 321 in file "i2c.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;Total ram usage:       10 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:   12
 10380 ;; This function calls:
 10381 ;;		__i2c_write
 10382 ;; This function is called by:
 10383 ;;		_display_init
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text28
 10388  014B46                     __ptext28:
 10389                           	opt stack 0
 10390  014B46                     _i2c_display_init:
 10391                           	opt stack 16
 10392                           
 10393                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 10394                           
 10395                           ;incstack = 0
 10396  014B46  EE22  F0A6         	lfsr	2,i2c_display_init@F6951
 10397  014B4A  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10398  014B4E  0E08               	movlw	8
 10399  014B50                     u14311:
 10400  014B50  CFDB FFE3          	movff	plusw2,plusw1
 10401  014B54  06E8               	decf	wreg,f,c
 10402  014B56  E2FC               	bc	u14311
 10403                           
 10404                           ;i2c.c: 338: LATAbits.LA3 = 0;
 10405  014B58  9689               	bcf	3977,3,c	;volatile
 10406                           
 10407                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 10408  014B5A  0E1A               	movlw	26
 10409  014B5C  0100               	movlb	0	; () banked
 10410  014B5E  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10411  014B60  0EF8               	movlw	248
 10412  014B62                     u19317:
 10413  014B62  2EE8               	decfsz	wreg,f,c
 10414  014B64  D7FE               	bra	u19317
 10415  014B66  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10416  014B68  D7FC               	bra	u19317
 10417  014B6A  F000               	nop	
 10418                           
 10419                           ;i2c.c: 340: LATAbits.LA3 = 1;
 10420  014B6C  8689               	bsf	3977,3,c	;volatile
 10421                           
 10422                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 10423  014B6E  0E82               	movlw	130
 10424  014B70  0100               	movlb	0	; () banked
 10425  014B72  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10426  014B74  0EDD               	movlw	221
 10427  014B76                     u19327:
 10428  014B76  2EE8               	decfsz	wreg,f,c
 10429  014B78  D7FE               	bra	u19327
 10430  014B7A  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10431  014B7C  D7FC               	bra	u19327
 10432  014B7E  D000               	nop2	
 10433                           
 10434                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 10435  014B80  0E6B               	movlw	low i2c_display_init@init_sequence
 10436  014B82  0100               	movlb	0	; () banked
 10437  014B84  6F65               	movwf	__i2c_write@data& (0+255),b
 10438  014B86  0E00               	movlw	high i2c_display_init@init_sequence
 10439  014B88  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10440  014B8A  0E09               	movlw	9
 10441  014B8C  6F67               	movwf	__i2c_write@length& (0+255),b
 10442  014B8E  0E78               	movlw	120
 10443  014B90  ECCB  F0A5         	call	__i2c_write
 10444  014B94  0012               	return		;funcret
 10445  014B96                     __end_of_i2c_display_init:
 10446                           	opt stack 0
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           postinc0	equ	0xFEE
 10454                           wreg	equ	0xFE8
 10455                           postdec1	equ	0xFE5
 10456                           plusw1	equ	0xFE3
 10457                           fsr1h	equ	0xFE2
 10458                           fsr1l	equ	0xFE1
 10459                           indf2	equ	0xFDF
 10460                           postinc2	equ	0xFDE
 10461                           plusw2	equ	0xFDB
 10462                           fsr2h	equ	0xFDA
 10463                           fsr2l	equ	0xFD9
 10464                           status	equ	0xFD8
 10465                           
 10466 ;; *************** function __i2c_write *****************
 10467 ;; Defined at:
 10468 ;;		line 84 in file "i2c.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  slave_addres    1    wreg     unsigned char 
 10471 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10472 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10473 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10474 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10475 ;;  length          1    7[BANK0 ] unsigned char 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10478 ;;  cntr            1    9[BANK0 ] unsigned char 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10488 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;Total ram usage:        5 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:   11
 10495 ;; This function calls:
 10496 ;;		__i2c_send
 10497 ;;		__i2c_start
 10498 ;;		__i2c_stop
 10499 ;;		__i2c_wait_idle
 10500 ;; This function is called by:
 10501 ;;		_i2c_eeprom_read
 10502 ;;		_i2c_display_init
 10503 ;;		__ic2_display_set_ddram_address
 10504 ;;		__ic2_display_set_cgram_address
 10505 ;;		_i2c_display_program_custom_character
 10506 ;;		_i2c_adc_start
 10507 ;;		_i2c_eeprom_writeByte
 10508 ;;		_i2c_eeprom_readByte
 10509 ;;		__i2c_display_send_init_sequence
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text29
 10514  014B96                     __ptext29:
 10515                           	opt stack 0
 10516  014B96                     __i2c_write:
 10517                           	opt stack 16
 10518                           
 10519                           ;incstack = 0
 10520                           ;__i2c_write@slave_address stored from wreg
 10521  014B96  0100               	movlb	0	; () banked
 10522  014B98  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10523                           
 10524                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 10525  014B9A  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
 10526                           
 10527                           ;i2c.c: 89: _i2c_start();
 10528  014B9E  EC65  F0AC         	call	__i2c_start	;wreg free
 10529                           
 10530                           ;i2c.c: 90: _i2c_wait_idle();
 10531  014BA2  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
 10532                           
 10533                           ;i2c.c: 91: _i2c_send(slave_address);
 10534  014BA6  0100               	movlb	0	; () banked
 10535  014BA8  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10536  014BAA  EC52  F0AC         	call	__i2c_send
 10537                           
 10538                           ;i2c.c: 92: _i2c_wait_idle();
 10539  014BAE  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
 10540                           
 10541                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 10542  014BB2  0E00               	movlw	0
 10543  014BB4  0100               	movlb	0	; () banked
 10544  014BB6  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10545  014BB8  D00F               	goto	l1158
 10546  014BBA                     
 10547                           ; BSR set to: 0
 10548                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 10549                           
 10550                           ; BSR set to: 0
 10551  014BBA  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10552  014BBC  0D01               	mullw	1
 10553  014BBE  50F3               	movf	prodl,w,c
 10554  014BC0  2565               	addwf	__i2c_write@data& (0+255),w,b
 10555  014BC2  6ED9               	movwf	fsr2l,c
 10556  014BC4  50F4               	movf	prodh,w,c
 10557  014BC6  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10558  014BC8  6EDA               	movwf	fsr2h,c
 10559  014BCA  50DF               	movf	indf2,w,c
 10560  014BCC  EC52  F0AC         	call	__i2c_send
 10561                           
 10562                           ;i2c.c: 97: _i2c_wait_idle();
 10563  014BD0  ECE3  F0A0         	call	__i2c_wait_idle	;wreg free
 10564  014BD4  0100               	movlb	0	; () banked
 10565  014BD6  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10566  014BD8                     l1158:
 10567                           
 10568                           ; BSR set to: 0
 10569                           
 10570                           ; BSR set to: 0
 10571  014BD8  5167               	movf	__i2c_write@length& (0+255),w,b
 10572  014BDA  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10573  014BDC  A0D8               	btfss	status,0,c
 10574  014BDE  D7ED               	goto	l1159
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 10578                           
 10579                           ; BSR set to: 0
 10580  014BE0  EC61  F0AC         	call	__i2c_stop	;wreg free
 10581  014BE4  0012               	return		;funcret
 10582  014BE6                     __end_of__i2c_write:
 10583                           	opt stack 0
 10584                           tblptru	equ	0xFF8
 10585                           tblptrh	equ	0xFF7
 10586                           tblptrl	equ	0xFF6
 10587                           tablat	equ	0xFF5
 10588                           prodh	equ	0xFF4
 10589                           prodl	equ	0xFF3
 10590                           postinc0	equ	0xFEE
 10591                           wreg	equ	0xFE8
 10592                           postdec1	equ	0xFE5
 10593                           plusw1	equ	0xFE3
 10594                           fsr1h	equ	0xFE2
 10595                           fsr1l	equ	0xFE1
 10596                           indf2	equ	0xFDF
 10597                           postinc2	equ	0xFDE
 10598                           plusw2	equ	0xFDB
 10599                           fsr2h	equ	0xFDA
 10600                           fsr2l	equ	0xFD9
 10601                           status	equ	0xFD8
 10602                           
 10603 ;; *************** function __i2c_wait_idle *****************
 10604 ;; Defined at:
 10605 ;;		line 40 in file "i2c.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10622 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;Total ram usage:        5 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:   10
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		__i2c_write
 10630 ;;		__i2c_read
 10631 ;;		__i2c_eeprom_busy
 10632 ;;		_i2c_display_write_fixed
 10633 ;;		_i2c_adc_read
 10634 ;;		_i2c_display_write
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text30
 10639  0141C6                     __ptext30:
 10640                           	opt stack 0
 10641  0141C6                     __i2c_wait_idle:
 10642                           	opt stack 16
 10643                           
 10644                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10645                           
 10646                           ;incstack = 0
 10647  0141C6  A4C7               	btfss	4039,2,c	;volatile
 10648  0141C8  D004               	goto	u11770
 10649  0141CA  0100               	movlb	0	; () banked
 10650  0141CC  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10651  0141CE  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10652  0141D0  D002               	goto	u11778
 10653  0141D2                     u11770:
 10654  0141D2  0100               	movlb	0	; () banked
 10655  0141D4  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10656  0141D6                     u11778:
 10657  0141D6  A0C5               	btfss	4037,0,c	;volatile
 10658  0141D8  D003               	goto	u11780
 10659  0141DA  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10660  0141DC  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10661  0141DE  D002               	goto	u11788
 10662  0141E0                     u11780:
 10663  0141E0  0100               	movlb	0	; () banked
 10664  0141E2  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10665  0141E4                     u11788:
 10666  0141E4  A2C5               	btfss	4037,1,c	;volatile
 10667  0141E6  D003               	goto	u11790
 10668  0141E8  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10669  0141EA  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 10670  0141EC  D002               	goto	u11798
 10671  0141EE                     u11790:
 10672  0141EE  0100               	movlb	0	; () banked
 10673  0141F0  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10674  0141F2                     u11798:
 10675  0141F2  A4C5               	btfss	4037,2,c	;volatile
 10676  0141F4  D003               	goto	u11800
 10677  0141F6  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10678  0141F8  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 10679  0141FA  D002               	goto	u11808
 10680  0141FC                     u11800:
 10681  0141FC  0100               	movlb	0	; () banked
 10682  0141FE  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10683  014200                     u11808:
 10684  014200  A6C5               	btfss	4037,3,c	;volatile
 10685  014202  D003               	goto	u11810
 10686  014204  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10687  014206  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 10688  014208  D002               	goto	u11818
 10689  01420A                     u11810:
 10690  01420A  0100               	movlb	0	; () banked
 10691  01420C  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10692  01420E                     u11818:
 10693  01420E  A8C5               	btfss	4037,4,c	;volatile
 10694  014210  D002               	goto	u11820
 10695  014212  0E01               	movlw	1
 10696  014214  D001               	goto	u11826
 10697  014216                     u11820:
 10698  014216  0E00               	movlw	0
 10699  014218                     u11826:
 10700  014218  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 10701  01421A  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 10702  01421C  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 10703  01421E  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 10704  014220  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 10705  014222  0900               	iorlw	0
 10706  014224  B4D8               	btfsc	status,2,c
 10707  014226  0012               	return	
 10708  014228  D7CE               	goto	__i2c_wait_idle
 10709  01422A                     __end_of__i2c_wait_idle:
 10710                           	opt stack 0
 10711                           tblptru	equ	0xFF8
 10712                           tblptrh	equ	0xFF7
 10713                           tblptrl	equ	0xFF6
 10714                           tablat	equ	0xFF5
 10715                           prodh	equ	0xFF4
 10716                           prodl	equ	0xFF3
 10717                           postinc0	equ	0xFEE
 10718                           wreg	equ	0xFE8
 10719                           postdec1	equ	0xFE5
 10720                           plusw1	equ	0xFE3
 10721                           fsr1h	equ	0xFE2
 10722                           fsr1l	equ	0xFE1
 10723                           indf2	equ	0xFDF
 10724                           postinc2	equ	0xFDE
 10725                           plusw2	equ	0xFDB
 10726                           fsr2h	equ	0xFDA
 10727                           fsr2l	equ	0xFD9
 10728                           status	equ	0xFD8
 10729                           
 10730 ;; *************** function __i2c_stop *****************
 10731 ;; Defined at:
 10732 ;;		line 63 in file "i2c.c"
 10733 ;; Parameters:    Size  Location     Type
 10734 ;;		None
 10735 ;; Auto vars:     Size  Location     Type
 10736 ;;		None
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  1    wreg      void 
 10739 ;; Registers used:
 10740 ;;		None
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10750 ;;Total ram usage:        0 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:   10
 10753 ;; This function calls:
 10754 ;;		Nothing
 10755 ;; This function is called by:
 10756 ;;		__i2c_write
 10757 ;;		__i2c_read
 10758 ;;		__i2c_eeprom_busy
 10759 ;;		_i2c_display_write_fixed
 10760 ;;		_i2c_adc_read
 10761 ;;		_i2c_display_write
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text31
 10766  0158C2                     __ptext31:
 10767                           	opt stack 0
 10768  0158C2                     __i2c_stop:
 10769                           	opt stack 16
 10770                           
 10771                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;incstack = 0
 10775  0158C2  84C5               	bsf	4037,2,c	;volatile
 10776  0158C4  A4C5               	btfss	4037,2,c	;volatile
 10777  0158C6  0012               	return	
 10778  0158C8  D7FD               	goto	l1141
 10779  0158CA                     __end_of__i2c_stop:
 10780                           	opt stack 0
 10781                           tblptru	equ	0xFF8
 10782                           tblptrh	equ	0xFF7
 10783                           tblptrl	equ	0xFF6
 10784                           tablat	equ	0xFF5
 10785                           prodh	equ	0xFF4
 10786                           prodl	equ	0xFF3
 10787                           postinc0	equ	0xFEE
 10788                           wreg	equ	0xFE8
 10789                           postdec1	equ	0xFE5
 10790                           plusw1	equ	0xFE3
 10791                           fsr1h	equ	0xFE2
 10792                           fsr1l	equ	0xFE1
 10793                           indf2	equ	0xFDF
 10794                           postinc2	equ	0xFDE
 10795                           plusw2	equ	0xFDB
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8
 10799                           
 10800 ;; *************** function __i2c_start *****************
 10801 ;; Defined at:
 10802 ;;		line 45 in file "i2c.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		None
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10820 ;;Total ram usage:        0 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:   10
 10823 ;; This function calls:
 10824 ;;		Nothing
 10825 ;; This function is called by:
 10826 ;;		__i2c_write
 10827 ;;		__i2c_read
 10828 ;;		__i2c_eeprom_busy
 10829 ;;		_i2c_display_write_fixed
 10830 ;;		_i2c_adc_read
 10831 ;;		_i2c_display_write
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           	psect	text32
 10836  0158CA                     __ptext32:
 10837                           	opt stack 0
 10838  0158CA                     __i2c_start:
 10839                           	opt stack 16
 10840                           
 10841                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 10842                           
 10843                           ;incstack = 0
 10844  0158CA  80C5               	bsf	4037,0,c	;volatile
 10845  0158CC  A0C5               	btfss	4037,0,c	;volatile
 10846  0158CE  0012               	return	
 10847  0158D0  D7FD               	goto	l1126
 10848  0158D2                     __end_of__i2c_start:
 10849                           	opt stack 0
 10850                           tblptru	equ	0xFF8
 10851                           tblptrh	equ	0xFF7
 10852                           tblptrl	equ	0xFF6
 10853                           tablat	equ	0xFF5
 10854                           prodh	equ	0xFF4
 10855                           prodl	equ	0xFF3
 10856                           postinc0	equ	0xFEE
 10857                           wreg	equ	0xFE8
 10858                           postdec1	equ	0xFE5
 10859                           plusw1	equ	0xFE3
 10860                           fsr1h	equ	0xFE2
 10861                           fsr1l	equ	0xFE1
 10862                           indf2	equ	0xFDF
 10863                           postinc2	equ	0xFDE
 10864                           plusw2	equ	0xFDB
 10865                           fsr2h	equ	0xFDA
 10866                           fsr2l	equ	0xFD9
 10867                           status	equ	0xFD8
 10868                           
 10869 ;; *************** function __i2c_send *****************
 10870 ;; Defined at:
 10871 ;;		line 51 in file "i2c.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  dat             1    wreg     unsigned char 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  dat             1    0[BANK0 ] unsigned char 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		wreg
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10889 ;;Total ram usage:        1 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:   10
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		__i2c_write
 10896 ;;		__i2c_read
 10897 ;;		__i2c_eeprom_busy
 10898 ;;		_i2c_display_write_fixed
 10899 ;;		_i2c_adc_read
 10900 ;;		_i2c_display_write
 10901 ;; This function uses a non-reentrant model
 10902 ;;
 10903                           
 10904                           	psect	text33
 10905  0158A4                     __ptext33:
 10906                           	opt stack 0
 10907  0158A4                     __i2c_send:
 10908                           	opt stack 16
 10909                           
 10910                           ;incstack = 0
 10911                           ;__i2c_send@dat stored from wreg
 10912  0158A4  0100               	movlb	0	; () banked
 10913  0158A6  6F60               	movwf	__i2c_send@dat& (0+255),b
 10914                           
 10915                           ;i2c.c: 53: SSP1BUF = dat;
 10916  0158A8  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 10917  0158AC  0012               	return		;funcret
 10918  0158AE                     __end_of__i2c_send:
 10919                           	opt stack 0
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           postinc0	equ	0xFEE
 10927                           wreg	equ	0xFE8
 10928                           postdec1	equ	0xFE5
 10929                           plusw1	equ	0xFE3
 10930                           fsr1h	equ	0xFE2
 10931                           fsr1l	equ	0xFE1
 10932                           indf2	equ	0xFDF
 10933                           postinc2	equ	0xFDE
 10934                           plusw2	equ	0xFDB
 10935                           fsr2h	equ	0xFDA
 10936                           fsr2l	equ	0xFD9
 10937                           status	equ	0xFD8
 10938                           
 10939 ;; *************** function __display_start *****************
 10940 ;; Defined at:
 10941 ;;		line 266 in file "display.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  cntr            1   28[BANK0 ] unsigned char 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;Total ram usage:        1 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:   14
 10962 ;; This function calls:
 10963 ;;		__display_itoa_u16
 10964 ;;		_memcpy
 10965 ;; This function is called by:
 10966 ;;		_display_init
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text34
 10971  012C84                     __ptext34:
 10972                           	opt stack 0
 10973  012C84                     __display_start:
 10974                           	opt stack 14
 10975                           
 10976                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 10977                           
 10978                           ;incstack = 0
 10979  012C84  0E34               	movlw	low _display_content
 10980  012C86  0100               	movlb	0	; () banked
 10981  012C88  6F60               	movwf	memcpy@d1& (0+255),b
 10982  012C8A  0E02               	movlw	high _display_content
 10983  012C8C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10984  012C8E  0E00               	movlw	low _dc_startup
 10985  012C90  6F62               	movwf	memcpy@s1& (0+255),b
 10986  012C92  0E04               	movlw	high _dc_startup
 10987  012C94  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10988  012C96  0E00               	movlw	0
 10989  012C98  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10990  012C9A  0E50               	movlw	80
 10991  012C9C  6F64               	movwf	memcpy@n& (0+255),b
 10992  012C9E  ECDA  F0A1         	call	_memcpy	;wreg free
 10993                           
 10994                           ;display.c: 270: cntr = 6;
 10995  012CA2  0E06               	movlw	6
 10996  012CA4  0100               	movlb	0	; () banked
 10997  012CA6  6F7C               	movwf	__display_start@cntr& (0+255),b
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11001  012CA8  0E00               	movlw	0
 11002  012CAA  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11003  012CAC  0E00               	movlw	0
 11004  012CAE  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11005  012CB0  517C               	movf	__display_start@cntr& (0+255),w,b
 11006  012CB2  0D01               	mullw	1
 11007  012CB4  0E5C               	movlw	low (_display_content+40)
 11008  012CB6  24F3               	addwf	prodl,w,c
 11009  012CB8  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11010  012CBA  0E02               	movlw	high (_display_content+40)
 11011  012CBC  20F4               	addwfc	prodh,w,c
 11012  012CBE  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11013  012CC0  ECE8  F095         	call	__display_itoa_u16	;wreg free
 11014  012CC4  0100               	movlb	0	; () banked
 11015  012CC6  277C               	addwf	__display_start@cntr& (0+255),f,b
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;display.c: 272: display_content[2][cntr++] = '.';
 11019  012CC8  517C               	movf	__display_start@cntr& (0+255),w,b
 11020  012CCA  0D01               	mullw	1
 11021  012CCC  0E5C               	movlw	low (_display_content+40)
 11022  012CCE  24F3               	addwf	prodl,w,c
 11023  012CD0  6ED9               	movwf	fsr2l,c
 11024  012CD2  0E02               	movlw	high (_display_content+40)
 11025  012CD4  20F4               	addwfc	prodh,w,c
 11026  012CD6  6EDA               	movwf	fsr2h,c
 11027  012CD8  0E2E               	movlw	46
 11028  012CDA  6EDF               	movwf	indf2,c
 11029                           
 11030                           ; BSR set to: 0
 11031  012CDC  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 11035  012CDE  0E00               	movlw	0
 11036  012CE0  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11037  012CE2  0E05               	movlw	5
 11038  012CE4  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11039  012CE6  517C               	movf	__display_start@cntr& (0+255),w,b
 11040  012CE8  0D01               	mullw	1
 11041  012CEA  0E5C               	movlw	low (_display_content+40)
 11042  012CEC  24F3               	addwf	prodl,w,c
 11043  012CEE  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11044  012CF0  0E02               	movlw	high (_display_content+40)
 11045  012CF2  20F4               	addwfc	prodh,w,c
 11046  012CF4  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11047  012CF6  ECE8  F095         	call	__display_itoa_u16	;wreg free
 11048  012CFA  0100               	movlb	0	; () banked
 11049  012CFC  277C               	addwf	__display_start@cntr& (0+255),f,b
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;display.c: 274: display_content[2][cntr++] = '.';
 11053  012CFE  517C               	movf	__display_start@cntr& (0+255),w,b
 11054  012D00  0D01               	mullw	1
 11055  012D02  0E5C               	movlw	low (_display_content+40)
 11056  012D04  24F3               	addwf	prodl,w,c
 11057  012D06  6ED9               	movwf	fsr2l,c
 11058  012D08  0E02               	movlw	high (_display_content+40)
 11059  012D0A  20F4               	addwfc	prodh,w,c
 11060  012D0C  6EDA               	movwf	fsr2h,c
 11061  012D0E  0E2E               	movlw	46
 11062  012D10  6EDF               	movwf	indf2,c
 11063                           
 11064                           ; BSR set to: 0
 11065  012D12  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;display.c: 275: cntr += _display_itoa_u16(0x07, &display_content[2][cntr]);
 11069  012D14  0E00               	movlw	0
 11070  012D16  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11071  012D18  0E07               	movlw	7
 11072  012D1A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11073  012D1C  517C               	movf	__display_start@cntr& (0+255),w,b
 11074  012D1E  0D01               	mullw	1
 11075  012D20  0E5C               	movlw	low (_display_content+40)
 11076  012D22  24F3               	addwf	prodl,w,c
 11077  012D24  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11078  012D26  0E02               	movlw	high (_display_content+40)
 11079  012D28  20F4               	addwfc	prodh,w,c
 11080  012D2A  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11081  012D2C  ECE8  F095         	call	__display_itoa_u16	;wreg free
 11082  012D30  0100               	movlb	0	; () banked
 11083  012D32  277C               	addwf	__display_start@cntr& (0+255),f,b
 11084                           
 11085                           ; BSR set to: 0
 11086  012D34  0012               	return		;funcret
 11087  012D36                     __end_of__display_start:
 11088                           	opt stack 0
 11089                           tblptru	equ	0xFF8
 11090                           tblptrh	equ	0xFF7
 11091                           tblptrl	equ	0xFF6
 11092                           tablat	equ	0xFF5
 11093                           prodh	equ	0xFF4
 11094                           prodl	equ	0xFF3
 11095                           postinc0	equ	0xFEE
 11096                           wreg	equ	0xFE8
 11097                           postdec1	equ	0xFE5
 11098                           plusw1	equ	0xFE3
 11099                           fsr1h	equ	0xFE2
 11100                           fsr1l	equ	0xFE1
 11101                           indf2	equ	0xFDF
 11102                           postinc2	equ	0xFDE
 11103                           plusw2	equ	0xFDB
 11104                           fsr2h	equ	0xFDA
 11105                           fsr2l	equ	0xFD9
 11106                           status	equ	0xFD8
 11107                           
 11108 ;; *************** function __display_itoa_u16 *****************
 11109 ;; Defined at:
 11110 ;;		line 226 in file "display.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;  value           2   24[BANK0 ] unsigned int 
 11113 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11114 ;;		 -> display_content(80), 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  1    wreg      unsigned char 
 11119 ;; Registers used:
 11120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11129 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11130 ;;Total ram usage:        4 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:   13
 11133 ;; This function calls:
 11134 ;;		_itoa
 11135 ;; This function is called by:
 11136 ;;		__display_start
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text35
 11141  012BD0                     __ptext35:
 11142                           	opt stack 0
 11143  012BD0                     __display_itoa_u16:
 11144                           	opt stack 14
 11145                           
 11146                           ;display.c: 228: itoa(text, value, 10);
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;incstack = 0
 11150  012BD0  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11151  012BD4  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11152  012BD8  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11153  012BDC  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11154  012BE0  0E00               	movlw	0
 11155  012BE2  0100               	movlb	0	; () banked
 11156  012BE4  6F75               	movwf	(itoa@base+1)& (0+255),b
 11157  012BE6  0E0A               	movlw	10
 11158  012BE8  6F74               	movwf	itoa@base& (0+255),b
 11159  012BEA  EC68  F0A7         	call	_itoa	;wreg free
 11160                           
 11161                           ;display.c: 229: if(value>9999)
 11162  012BEE  0E10               	movlw	16
 11163  012BF0  0100               	movlb	0	; () banked
 11164  012BF2  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11165  012BF4  0E27               	movlw	39
 11166  012BF6  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11167  012BF8  A0D8               	btfss	status,0,c
 11168  012BFA  D00A               	goto	l1359
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 11172  012BFC  EE20 F005          	lfsr	2,5
 11173  012C00  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11174  012C02  26D9               	addwf	fsr2l,f,c
 11175  012C04  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11176  012C06  22DA               	addwfc	fsr2h,f,c
 11177  012C08  0E20               	movlw	32
 11178  012C0A  6EDF               	movwf	indf2,c
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;display.c: 232: return 5;
 11182  012C0C  0E05               	movlw	5
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;display.c: 233: }
 11186                           
 11187                           ; BSR set to: 0
 11188  012C0E  0012               	return	
 11189  012C10                     l1359:
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;display.c: 234: else if (value>999)
 11193                           
 11194                           ; BSR set to: 0
 11195  012C10  0EE8               	movlw	232
 11196  012C12  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11197  012C14  0E03               	movlw	3
 11198  012C16  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11199  012C18  A0D8               	btfss	status,0,c
 11200  012C1A  D00A               	goto	l1362
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 11204  012C1C  EE20 F004          	lfsr	2,4
 11205  012C20  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11206  012C22  26D9               	addwf	fsr2l,f,c
 11207  012C24  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11208  012C26  22DA               	addwfc	fsr2h,f,c
 11209  012C28  0E20               	movlw	32
 11210  012C2A  6EDF               	movwf	indf2,c
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;display.c: 237: return 4;
 11214  012C2C  0E04               	movlw	4
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;display.c: 238: }
 11218                           
 11219                           ; BSR set to: 0
 11220  012C2E  0012               	return	
 11221  012C30                     l1362:
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;display.c: 239: else if (value>99)
 11225                           
 11226                           ; BSR set to: 0
 11227  012C30  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11228  012C32  E104               	bnz	u13290
 11229  012C34  0E64               	movlw	100
 11230  012C36  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11231  012C38  A0D8               	btfss	status,0,c
 11232  012C3A  D00A               	goto	l1364
 11233  012C3C                     u13290:
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 11237  012C3C  EE20 F003          	lfsr	2,3
 11238  012C40  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11239  012C42  26D9               	addwf	fsr2l,f,c
 11240  012C44  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11241  012C46  22DA               	addwfc	fsr2h,f,c
 11242  012C48  0E20               	movlw	32
 11243  012C4A  6EDF               	movwf	indf2,c
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;display.c: 242: return 3;
 11247  012C4C  0E03               	movlw	3
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;display.c: 243: }
 11251                           
 11252                           ; BSR set to: 0
 11253  012C4E  0012               	return	
 11254  012C50                     l1364:
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;display.c: 244: else if (value>9)
 11258                           
 11259                           ; BSR set to: 0
 11260  012C50  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11261  012C52  E104               	bnz	u13300
 11262  012C54  0E0A               	movlw	10
 11263  012C56  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11264  012C58  A0D8               	btfss	status,0,c
 11265  012C5A  D00A               	goto	l1366
 11266  012C5C                     u13300:
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 11270  012C5C  EE20 F002          	lfsr	2,2
 11271  012C60  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11272  012C62  26D9               	addwf	fsr2l,f,c
 11273  012C64  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11274  012C66  22DA               	addwfc	fsr2h,f,c
 11275  012C68  0E20               	movlw	32
 11276  012C6A  6EDF               	movwf	indf2,c
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;display.c: 247: return 2;
 11280  012C6C  0E02               	movlw	2
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;display.c: 248: }
 11284                           
 11285                           ; BSR set to: 0
 11286  012C6E  0012               	return	
 11287  012C70                     l1366:
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 11291                           
 11292                           ; BSR set to: 0
 11293  012C70  EE20 F001          	lfsr	2,1
 11294  012C74  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11295  012C76  26D9               	addwf	fsr2l,f,c
 11296  012C78  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11297  012C7A  22DA               	addwfc	fsr2h,f,c
 11298  012C7C  0E20               	movlw	32
 11299  012C7E  6EDF               	movwf	indf2,c
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;display.c: 252: return 1;
 11303  012C80  0E01               	movlw	1
 11304                           
 11305                           ; BSR set to: 0
 11306                           
 11307                           ; BSR set to: 0
 11308                           
 11309                           ; BSR set to: 0
 11310                           
 11311                           ; BSR set to: 0
 11312  012C82  0012               	return	
 11313  012C84                     __end_of__display_itoa_u16:
 11314                           	opt stack 0
 11315                           tblptru	equ	0xFF8
 11316                           tblptrh	equ	0xFF7
 11317                           tblptrl	equ	0xFF6
 11318                           tablat	equ	0xFF5
 11319                           prodh	equ	0xFF4
 11320                           prodl	equ	0xFF3
 11321                           postinc0	equ	0xFEE
 11322                           wreg	equ	0xFE8
 11323                           postdec1	equ	0xFE5
 11324                           plusw1	equ	0xFE3
 11325                           fsr1h	equ	0xFE2
 11326                           fsr1l	equ	0xFE1
 11327                           indf2	equ	0xFDF
 11328                           postinc2	equ	0xFDE
 11329                           plusw2	equ	0xFDB
 11330                           fsr2h	equ	0xFDA
 11331                           fsr2l	equ	0xFD9
 11332                           status	equ	0xFD8
 11333                           
 11334 ;; *************** function _configFile_write *****************
 11335 ;; Defined at:
 11336 ;;		line 270 in file "config_file.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  file_size       4  133[BANK0 ] unsigned long 
 11341 ;;  file_number     1  132[BANK0 ] unsigned char 
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  1    wreg      void 
 11344 ;; Registers used:
 11345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11352 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11354 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11355 ;;Total ram usage:        6 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:   18
 11358 ;; This function calls:
 11359 ;;		__add_item
 11360 ;;		_fat_create_file
 11361 ;;		_fat_find_file
 11362 ;;		_fat_modify_file
 11363 ;;		_fat_resize_file
 11364 ;; This function is called by:
 11365 ;;		_system_init
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text36
 11370  00C1A8                     __ptext36:
 11371                           	opt stack 0
 11372  00C1A8                     _configFile_write:
 11373                           	opt stack 11
 11374                           
 11375                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;incstack = 0
 11379  00C1A8  0E00               	movlw	0
 11380  00C1AA  0100               	movlb	0	; () banked
 11381  00C1AC  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11382  00C1AE  0E00               	movlw	0
 11383  00C1B0  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11384  00C1B2  0E00               	movlw	0
 11385  00C1B4  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11386  00C1B6  0E00               	movlw	0
 11387  00C1B8  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11391  00C1BA  0EFD               	movlw	low _full_circle_in_steps_string
 11392  00C1BC  6F84               	movwf	__add_item@item_string& (0+255),b
 11393  00C1BE  0EA1               	movlw	high _full_circle_in_steps_string
 11394  00C1C0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11395  00C1C2  C1A1  F086         	movff	_config,__add_item@value
 11396  00C1C6  C1A2  F087         	movff	_config+1,__add_item@value+1
 11397  00C1CA  C1A3  F088         	movff	_config+2,__add_item@value+2
 11398  00C1CE  C1A4  F089         	movff	_config+3,__add_item@value+3
 11399  00C1D2  0E00               	movlw	low _ConfigFile_buffer
 11400  00C1D4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11401  00C1D6  6F8A               	movwf	__add_item@buffer& (0+255),b
 11402  00C1D8  0E08               	movlw	high _ConfigFile_buffer
 11403  00C1DA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11404  00C1DC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11405  00C1DE  EC06  F08A         	call	__add_item	;wreg free
 11406  00C1E2  0100               	movlb	0	; () banked
 11407  00C1E4  6FE3               	movwf	??_configFile_write& (0+255),b
 11408  00C1E6  51E3               	movf	??_configFile_write& (0+255),w,b
 11409  00C1E8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11410  00C1EA  0E00               	movlw	0
 11411  00C1EC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11412  00C1EE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11413  00C1F0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11417  00C1F2  0E49               	movlw	low _inverse_direction_string
 11418  00C1F4  6F84               	movwf	__add_item@item_string& (0+255),b
 11419  00C1F6  0EA2               	movlw	high _inverse_direction_string
 11420  00C1F8  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11421  00C1FA  0101               	movlb	1	; () banked
 11422  00C1FC  51A5               	movf	(_config+4)& (0+255),w,b
 11423  00C1FE  0100               	movlb	0	; () banked
 11424  00C200  6F86               	movwf	__add_item@value& (0+255),b
 11425  00C202  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11426  00C204  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11427  00C206  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11428  00C208  0E00               	movlw	low _ConfigFile_buffer
 11429  00C20A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11430  00C20C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11431  00C20E  0E08               	movlw	high _ConfigFile_buffer
 11432  00C210  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11433  00C212  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11434  00C214  EC06  F08A         	call	__add_item	;wreg free
 11435  00C218  0100               	movlb	0	; () banked
 11436  00C21A  6FE3               	movwf	??_configFile_write& (0+255),b
 11437  00C21C  51E3               	movf	??_configFile_write& (0+255),w,b
 11438  00C21E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11439  00C220  0E00               	movlw	0
 11440  00C222  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11441  00C224  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11442  00C226  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11446  00C228  0E12               	movlw	low _overshoot_in_steps_string
 11447  00C22A  6F84               	movwf	__add_item@item_string& (0+255),b
 11448  00C22C  0EA2               	movlw	high _overshoot_in_steps_string
 11449  00C22E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11450  00C230  C1A6  F086         	movff	_config+5,__add_item@value
 11451  00C234  C1A7  F087         	movff	_config+6,__add_item@value+1
 11452  00C238  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11453  00C23A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11454  00C23C  0E00               	movlw	low _ConfigFile_buffer
 11455  00C23E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11456  00C240  6F8A               	movwf	__add_item@buffer& (0+255),b
 11457  00C242  0E08               	movlw	high _ConfigFile_buffer
 11458  00C244  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11459  00C246  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11460  00C248  EC06  F08A         	call	__add_item	;wreg free
 11461  00C24C  0100               	movlb	0	; () banked
 11462  00C24E  6FE3               	movwf	??_configFile_write& (0+255),b
 11463  00C250  51E3               	movf	??_configFile_write& (0+255),w,b
 11464  00C252  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11465  00C254  0E00               	movlw	0
 11466  00C256  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11467  00C258  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11468  00C25A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11472  00C25C  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11473  00C25E  6F84               	movwf	__add_item@item_string& (0+255),b
 11474  00C260  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11475  00C262  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11476  00C264  C1A8  F086         	movff	_config+7,__add_item@value
 11477  00C268  C1A9  F087         	movff	_config+8,__add_item@value+1
 11478  00C26C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11479  00C26E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11480  00C270  0E00               	movlw	low _ConfigFile_buffer
 11481  00C272  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11482  00C274  6F8A               	movwf	__add_item@buffer& (0+255),b
 11483  00C276  0E08               	movlw	high _ConfigFile_buffer
 11484  00C278  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11485  00C27A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11486  00C27C  EC06  F08A         	call	__add_item	;wreg free
 11487  00C280  0100               	movlb	0	; () banked
 11488  00C282  6FE3               	movwf	??_configFile_write& (0+255),b
 11489  00C284  51E3               	movf	??_configFile_write& (0+255),w,b
 11490  00C286  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11491  00C288  0E00               	movlw	0
 11492  00C28A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11493  00C28C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11494  00C28E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11498  00C290  0E97               	movlw	low _minimum_speed_string
 11499  00C292  6F84               	movwf	__add_item@item_string& (0+255),b
 11500  00C294  0EA2               	movlw	high _minimum_speed_string
 11501  00C296  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11502  00C298  C1AA  F086         	movff	_config+9,__add_item@value
 11503  00C29C  C1AB  F087         	movff	_config+10,__add_item@value+1
 11504  00C2A0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11505  00C2A2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11506  00C2A4  0E00               	movlw	low _ConfigFile_buffer
 11507  00C2A6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11508  00C2A8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11509  00C2AA  0E08               	movlw	high _ConfigFile_buffer
 11510  00C2AC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11511  00C2AE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11512  00C2B0  EC06  F08A         	call	__add_item	;wreg free
 11513  00C2B4  0100               	movlb	0	; () banked
 11514  00C2B6  6FE3               	movwf	??_configFile_write& (0+255),b
 11515  00C2B8  51E3               	movf	??_configFile_write& (0+255),w,b
 11516  00C2BA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11517  00C2BC  0E00               	movlw	0
 11518  00C2BE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11519  00C2C0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11520  00C2C2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11524  00C2C4  0E89               	movlw	low _maximum_speed_string
 11525  00C2C6  6F84               	movwf	__add_item@item_string& (0+255),b
 11526  00C2C8  0EA2               	movlw	high _maximum_speed_string
 11527  00C2CA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11528  00C2CC  C1AC  F086         	movff	_config+11,__add_item@value
 11529  00C2D0  C1AD  F087         	movff	_config+12,__add_item@value+1
 11530  00C2D4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11531  00C2D6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11532  00C2D8  0E00               	movlw	low _ConfigFile_buffer
 11533  00C2DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11534  00C2DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11535  00C2DE  0E08               	movlw	high _ConfigFile_buffer
 11536  00C2E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11537  00C2E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11538  00C2E4  EC06  F08A         	call	__add_item	;wreg free
 11539  00C2E8  0100               	movlb	0	; () banked
 11540  00C2EA  6FE3               	movwf	??_configFile_write& (0+255),b
 11541  00C2EC  51E3               	movf	??_configFile_write& (0+255),w,b
 11542  00C2EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11543  00C2F0  0E00               	movlw	0
 11544  00C2F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11545  00C2F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11546  00C2F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11550  00C2F8  0E37               	movlw	low _initial_speed_arc_string
 11551  00C2FA  6F84               	movwf	__add_item@item_string& (0+255),b
 11552  00C2FC  0EA2               	movlw	high _initial_speed_arc_string
 11553  00C2FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11554  00C300  C1AE  F086         	movff	_config+13,__add_item@value
 11555  00C304  C1AF  F087         	movff	_config+14,__add_item@value+1
 11556  00C308  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11557  00C30A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11558  00C30C  0E00               	movlw	low _ConfigFile_buffer
 11559  00C30E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11560  00C310  6F8A               	movwf	__add_item@buffer& (0+255),b
 11561  00C312  0E08               	movlw	high _ConfigFile_buffer
 11562  00C314  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11563  00C316  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11564  00C318  EC06  F08A         	call	__add_item	;wreg free
 11565  00C31C  0100               	movlb	0	; () banked
 11566  00C31E  6FE3               	movwf	??_configFile_write& (0+255),b
 11567  00C320  51E3               	movf	??_configFile_write& (0+255),w,b
 11568  00C322  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11569  00C324  0E00               	movlw	0
 11570  00C326  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11571  00C328  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11572  00C32A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11576  00C32C  0E25               	movlw	low _maximum_speed_arc_string
 11577  00C32E  6F84               	movwf	__add_item@item_string& (0+255),b
 11578  00C330  0EA2               	movlw	high _maximum_speed_arc_string
 11579  00C332  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11580  00C334  C1B0  F086         	movff	_config+15,__add_item@value
 11581  00C338  C1B1  F087         	movff	_config+16,__add_item@value+1
 11582  00C33C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11583  00C33E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11584  00C340  0E00               	movlw	low _ConfigFile_buffer
 11585  00C342  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11586  00C344  6F8A               	movwf	__add_item@buffer& (0+255),b
 11587  00C346  0E08               	movlw	high _ConfigFile_buffer
 11588  00C348  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11589  00C34A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11590  00C34C  EC06  F08A         	call	__add_item	;wreg free
 11591  00C350  0100               	movlb	0	; () banked
 11592  00C352  6FE3               	movwf	??_configFile_write& (0+255),b
 11593  00C354  51E3               	movf	??_configFile_write& (0+255),w,b
 11594  00C356  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11595  00C358  0E00               	movlw	0
 11596  00C35A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11597  00C35C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11598  00C35E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11602  00C360  0EE8               	movlw	low _initial_speed_manual_string
 11603  00C362  6F84               	movwf	__add_item@item_string& (0+255),b
 11604  00C364  0EA1               	movlw	high _initial_speed_manual_string
 11605  00C366  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11606  00C368  C1B2  F086         	movff	_config+17,__add_item@value
 11607  00C36C  C1B3  F087         	movff	_config+18,__add_item@value+1
 11608  00C370  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11609  00C372  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11610  00C374  0E00               	movlw	low _ConfigFile_buffer
 11611  00C376  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11612  00C378  6F8A               	movwf	__add_item@buffer& (0+255),b
 11613  00C37A  0E08               	movlw	high _ConfigFile_buffer
 11614  00C37C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11615  00C37E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11616  00C380  EC06  F08A         	call	__add_item	;wreg free
 11617  00C384  0100               	movlb	0	; () banked
 11618  00C386  6FE3               	movwf	??_configFile_write& (0+255),b
 11619  00C388  51E3               	movf	??_configFile_write& (0+255),w,b
 11620  00C38A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11621  00C38C  0E00               	movlw	0
 11622  00C38E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11623  00C390  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11624  00C392  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11628  00C394  0ED3               	movlw	low _maximum_speed_manual_string
 11629  00C396  6F84               	movwf	__add_item@item_string& (0+255),b
 11630  00C398  0EA1               	movlw	high _maximum_speed_manual_string
 11631  00C39A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11632  00C39C  C1B4  F086         	movff	_config+19,__add_item@value
 11633  00C3A0  C1B5  F087         	movff	_config+20,__add_item@value+1
 11634  00C3A4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11635  00C3A6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11636  00C3A8  0E00               	movlw	low _ConfigFile_buffer
 11637  00C3AA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11638  00C3AC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11639  00C3AE  0E08               	movlw	high _ConfigFile_buffer
 11640  00C3B0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11641  00C3B2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11642  00C3B4  EC06  F08A         	call	__add_item	;wreg free
 11643  00C3B8  0100               	movlb	0	; () banked
 11644  00C3BA  6FE3               	movwf	??_configFile_write& (0+255),b
 11645  00C3BC  51E3               	movf	??_configFile_write& (0+255),w,b
 11646  00C3BE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11647  00C3C0  0E00               	movlw	0
 11648  00C3C2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11649  00C3C4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11650  00C3C6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11654  00C3C8  0E6D               	movlw	low _use_ccw_limit_string
 11655  00C3CA  6F84               	movwf	__add_item@item_string& (0+255),b
 11656  00C3CC  0EA2               	movlw	high _use_ccw_limit_string
 11657  00C3CE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11658  00C3D0  0101               	movlb	1	; () banked
 11659  00C3D2  51BA               	movf	(_config+25)& (0+255),w,b
 11660  00C3D4  0100               	movlb	0	; () banked
 11661  00C3D6  6F86               	movwf	__add_item@value& (0+255),b
 11662  00C3D8  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11663  00C3DA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11664  00C3DC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11665  00C3DE  0E00               	movlw	low _ConfigFile_buffer
 11666  00C3E0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11667  00C3E2  6F8A               	movwf	__add_item@buffer& (0+255),b
 11668  00C3E4  0E08               	movlw	high _ConfigFile_buffer
 11669  00C3E6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11670  00C3E8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11671  00C3EA  EC06  F08A         	call	__add_item	;wreg free
 11672  00C3EE  0100               	movlb	0	; () banked
 11673  00C3F0  6FE3               	movwf	??_configFile_write& (0+255),b
 11674  00C3F2  51E3               	movf	??_configFile_write& (0+255),w,b
 11675  00C3F4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11676  00C3F6  0E00               	movlw	0
 11677  00C3F8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11678  00C3FA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11679  00C3FC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 11683  00C3FE  0EB2               	movlw	low _ccw_limit_string
 11684  00C400  6F84               	movwf	__add_item@item_string& (0+255),b
 11685  00C402  0EA2               	movlw	high _ccw_limit_string
 11686  00C404  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11687  00C406  C1BB  F086         	movff	_config+26,__add_item@value
 11688  00C40A  C1BC  F087         	movff	_config+27,__add_item@value+1
 11689  00C40E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11690  00C410  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11691  00C412  0E00               	movlw	low _ConfigFile_buffer
 11692  00C414  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11693  00C416  6F8A               	movwf	__add_item@buffer& (0+255),b
 11694  00C418  0E08               	movlw	high _ConfigFile_buffer
 11695  00C41A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11696  00C41C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11697  00C41E  EC06  F08A         	call	__add_item	;wreg free
 11698  00C422  0100               	movlb	0	; () banked
 11699  00C424  6FE3               	movwf	??_configFile_write& (0+255),b
 11700  00C426  51E3               	movf	??_configFile_write& (0+255),w,b
 11701  00C428  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11702  00C42A  0E00               	movlw	0
 11703  00C42C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11704  00C42E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11705  00C430  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 11709  00C432  0EA5               	movlw	low _use_cw_limit_string
 11710  00C434  6F84               	movwf	__add_item@item_string& (0+255),b
 11711  00C436  0EA2               	movlw	high _use_cw_limit_string
 11712  00C438  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11713  00C43A  0101               	movlb	1	; () banked
 11714  00C43C  51B7               	movf	(_config+22)& (0+255),w,b
 11715  00C43E  0100               	movlb	0	; () banked
 11716  00C440  6F86               	movwf	__add_item@value& (0+255),b
 11717  00C442  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11718  00C444  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11719  00C446  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11720  00C448  0E00               	movlw	low _ConfigFile_buffer
 11721  00C44A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11722  00C44C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11723  00C44E  0E08               	movlw	high _ConfigFile_buffer
 11724  00C450  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11725  00C452  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11726  00C454  EC06  F08A         	call	__add_item	;wreg free
 11727  00C458  0100               	movlb	0	; () banked
 11728  00C45A  6FE3               	movwf	??_configFile_write& (0+255),b
 11729  00C45C  51E3               	movf	??_configFile_write& (0+255),w,b
 11730  00C45E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11731  00C460  0E00               	movlw	0
 11732  00C462  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11733  00C464  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11734  00C466  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 11738  00C468  0EBC               	movlw	low _cw_limit_string
 11739  00C46A  6F84               	movwf	__add_item@item_string& (0+255),b
 11740  00C46C  0EA2               	movlw	high _cw_limit_string
 11741  00C46E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11742  00C470  C1B8  F086         	movff	_config+23,__add_item@value
 11743  00C474  C1B9  F087         	movff	_config+24,__add_item@value+1
 11744  00C478  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11745  00C47A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11746  00C47C  0E00               	movlw	low _ConfigFile_buffer
 11747  00C47E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11748  00C480  6F8A               	movwf	__add_item@buffer& (0+255),b
 11749  00C482  0E08               	movlw	high _ConfigFile_buffer
 11750  00C484  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11751  00C486  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11752  00C488  EC06  F08A         	call	__add_item	;wreg free
 11753  00C48C  0100               	movlb	0	; () banked
 11754  00C48E  6FE3               	movwf	??_configFile_write& (0+255),b
 11755  00C490  51E3               	movf	??_configFile_write& (0+255),w,b
 11756  00C492  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11757  00C494  0E00               	movlw	0
 11758  00C496  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11759  00C498  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11760  00C49A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 11764  00C49C  0E7B               	movlw	low _beep_duration_string
 11765  00C49E  6F84               	movwf	__add_item@item_string& (0+255),b
 11766  00C4A0  0EA2               	movlw	high _beep_duration_string
 11767  00C4A2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11768  00C4A4  0101               	movlb	1	; () banked
 11769  00C4A6  51B6               	movf	(_config+21)& (0+255),w,b
 11770  00C4A8  0100               	movlb	0	; () banked
 11771  00C4AA  6F86               	movwf	__add_item@value& (0+255),b
 11772  00C4AC  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11773  00C4AE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11774  00C4B0  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11775  00C4B2  0E00               	movlw	low _ConfigFile_buffer
 11776  00C4B4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11777  00C4B6  6F8A               	movwf	__add_item@buffer& (0+255),b
 11778  00C4B8  0E08               	movlw	high _ConfigFile_buffer
 11779  00C4BA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11780  00C4BC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11781  00C4BE  EC06  F08A         	call	__add_item	;wreg free
 11782  00C4C2  0100               	movlb	0	; () banked
 11783  00C4C4  6FE3               	movwf	??_configFile_write& (0+255),b
 11784  00C4C6  51E3               	movf	??_configFile_write& (0+255),w,b
 11785  00C4C8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11786  00C4CA  0E00               	movlw	0
 11787  00C4CC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11788  00C4CE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11789  00C4D0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 11793  00C4D2  0EC0               	movlw	low _configFile_used_name
 11794  00C4D4  6F8B               	movwf	fat_find_file@name& (0+255),b
 11795  00C4D6  0E02               	movlw	high _configFile_used_name
 11796  00C4D8  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 11797  00C4DA  0ED0               	movlw	low _configFile_used_extention
 11798  00C4DC  6F8D               	movwf	fat_find_file@extension& (0+255),b
 11799  00C4DE  0E02               	movlw	high _configFile_used_extention
 11800  00C4E0  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 11801  00C4E2  ECE0  F08C         	call	_fat_find_file	;wreg free
 11802  00C4E6  0100               	movlb	0	; () banked
 11803  00C4E8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;config_file.c: 294: if(file_number==0xFF)
 11807  00C4EA  29E4               	incf	configFile_write@file_number& (0+255),w,b
 11808  00C4EC  A4D8               	btfss	status,2,c
 11809  00C4EE  D015               	goto	l2994
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 11813  00C4F0  0EC0               	movlw	low _configFile_used_name
 11814  00C4F2  6FAC               	movwf	fat_create_file@name& (0+255),b
 11815  00C4F4  0E02               	movlw	high _configFile_used_name
 11816  00C4F6  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 11817  00C4F8  0ED0               	movlw	low _configFile_used_extention
 11818  00C4FA  6FAE               	movwf	fat_create_file@extension& (0+255),b
 11819  00C4FC  0E02               	movlw	high _configFile_used_extention
 11820  00C4FE  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 11821  00C500  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 11822  00C504  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 11823  00C508  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 11824  00C50C  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 11825  00C510  EC45  F080         	call	_fat_create_file	;wreg free
 11826  00C514  0100               	movlb	0	; () banked
 11827  00C516  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11828                           
 11829                           ;config_file.c: 297: }
 11830  00C518  D00B               	goto	l2995
 11831  00C51A                     l2994:
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 11835                           
 11836                           ; BSR set to: 0
 11837  00C51A  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 11838  00C51E  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 11839  00C522  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 11840  00C526  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 11841  00C52A  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11842  00C52C  EC8A  F088         	call	_fat_resize_file
 11843  00C530                     l2995:
 11844                           
 11845                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 11846  00C530  0E00               	movlw	0
 11847  00C532  0100               	movlb	0	; () banked
 11848  00C534  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 11849  00C536  0E00               	movlw	0
 11850  00C538  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 11851  00C53A  0E00               	movlw	0
 11852  00C53C  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 11853  00C53E  0E00               	movlw	0
 11854  00C540  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 11855  00C542  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 11856  00C546  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 11857  00C54A  0E00               	movlw	low _ConfigFile_buffer
 11858  00C54C  6FA7               	movwf	fat_modify_file@data& (0+255),b
 11859  00C54E  0E08               	movlw	high _ConfigFile_buffer
 11860  00C550  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 11861  00C552  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11862  00C554  EC1E  F073         	call	_fat_modify_file
 11863  00C558  0012               	return		;funcret
 11864  00C55A                     __end_of_configFile_write:
 11865                           	opt stack 0
 11866                           tblptru	equ	0xFF8
 11867                           tblptrh	equ	0xFF7
 11868                           tblptrl	equ	0xFF6
 11869                           tablat	equ	0xFF5
 11870                           prodh	equ	0xFF4
 11871                           prodl	equ	0xFF3
 11872                           postinc0	equ	0xFEE
 11873                           wreg	equ	0xFE8
 11874                           postdec1	equ	0xFE5
 11875                           plusw1	equ	0xFE3
 11876                           fsr1h	equ	0xFE2
 11877                           fsr1l	equ	0xFE1
 11878                           indf2	equ	0xFDF
 11879                           postinc2	equ	0xFDE
 11880                           plusw2	equ	0xFDB
 11881                           fsr2h	equ	0xFDA
 11882                           fsr2l	equ	0xFD9
 11883                           status	equ	0xFD8
 11884                           
 11885 ;; *************** function _fat_resize_file *****************
 11886 ;; Defined at:
 11887 ;;		line 911 in file "fat16.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;  file_number     1    wreg     unsigned char 
 11890 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;  file_number     1   90[BANK0 ] unsigned char 
 11893 ;;  root           32   91[BANK0 ] struct .
 11894 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 11895 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 11896 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  1    wreg      unsigned char 
 11899 ;; Registers used:
 11900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11907 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11909 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11910 ;;Total ram usage:       47 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; Hardware stack levels required when called:   17
 11913 ;; This function calls:
 11914 ;;		__make_cluster_chain
 11915 ;;		__root_is_available
 11916 ;;		__write_root
 11917 ;;		_fat_get_file_information
 11918 ;; This function is called by:
 11919 ;;		_configFile_write
 11920 ;;		_fat_append_to_file
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text37
 11925  011114                     __ptext37:
 11926                           	opt stack 0
 11927  011114                     _fat_resize_file:
 11928                           	opt stack 11
 11929                           
 11930                           ;incstack = 0
 11931                           ;fat_resize_file@file_number stored from wreg
 11932  011114  0100               	movlb	0	; () banked
 11933  011116  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 11934                           
 11935                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 11936  011118  0E3F               	movlw	63
 11937  01111A  0100               	movlb	0	; () banked
 11938  01111C  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 11939  01111E  D002               	goto	l1900
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 11943  011120  0EFF               	movlw	255
 11944                           
 11945                           ; BSR set to: 0
 11946  011122  0012               	return	
 11947  011124                     l1900:
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 11951                           
 11952                           ; BSR set to: 0
 11953  011124  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 11954  011126  EC44  F0A0         	call	__root_is_available
 11955  01112A  0900               	iorlw	0
 11956  01112C  B4D8               	btfsc	status,2,c
 11957  01112E  D002               	goto	l1902
 11958                           
 11959                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 11960  011130  0EFE               	movlw	254
 11961  011132  0012               	return	
 11962  011134                     l1902:
 11963                           
 11964                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 11965  011134  0EBB               	movlw	low fat_resize_file@root
 11966  011136  0100               	movlb	0	; () banked
 11967  011138  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 11968  01113A  0E00               	movlw	high fat_resize_file@root
 11969  01113C  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 11970  01113E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 11971  011140  EC79  F09E         	call	_fat_get_file_information
 11972                           
 11973                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 11974  011144  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 11975  011148  0EFF               	movlw	255
 11976  01114A  24DE               	addwf	postinc2,w,c
 11977  01114C  0100               	movlb	0	; () banked
 11978  01114E  6FB0               	movwf	??_fat_resize_file& (0+255),b
 11979  011150  0E01               	movlw	1
 11980  011152  20DE               	addwfc	postinc2,w,c
 11981  011154  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 11982  011156  0E00               	movlw	0
 11983  011158  20DE               	addwfc	postinc2,w,c
 11984  01115A  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 11985  01115C  0E00               	movlw	0
 11986  01115E  20DE               	addwfc	postinc2,w,c
 11987  011160  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 11988  011162  0E0A               	movlw	10
 11989  011164  D005               	goto	u14590
 11990  011166                     u14595:
 11991  011166  90D8               	bcf	status,0,c
 11992  011168  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 11993  01116A  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 11994  01116C  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 11995  01116E  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 11996  011170                     u14590:
 11997  011170  2EE8               	decfsz	wreg,f,c
 11998  011172  D7F9               	goto	u14595
 11999  011174  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12000  011178  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12004  01117C  0EFF               	movlw	255
 12005  01117E  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12006  011180  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12007  011182  0E01               	movlw	1
 12008  011184  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12009  011186  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12010  011188  0E00               	movlw	0
 12011  01118A  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12012  01118C  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12013  01118E  0E00               	movlw	0
 12014  011190  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12015  011192  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12016  011194  0E0A               	movlw	10
 12017  011196  D005               	goto	u14600
 12018  011198                     u14605:
 12019  011198  90D8               	bcf	status,0,c
 12020  01119A  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12021  01119C  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12022  01119E  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12023  0111A0  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12024  0111A2                     u14600:
 12025  0111A2  2EE8               	decfsz	wreg,f,c
 12026  0111A4  D7F9               	goto	u14605
 12027  0111A6  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12028  0111AA  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12032  0111AE  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12033  0111B0  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12034  0111B2  E104               	bnz	u14610
 12035  0111B4  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12036  0111B6  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12037  0111B8  B4D8               	btfsc	status,2,c
 12038  0111BA  D01A               	goto	l1903
 12039  0111BC                     u14610:
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12043  0111BC  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12044  0111C0  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12045  0111C4  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12046  0111C8  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12047  0111CC  ECA9  F06C         	call	__make_cluster_chain	;wreg free
 12048  0111D0  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12049  0111D4  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12050                           
 12051                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12052  0111D8  0100               	movlb	0	; () banked
 12053  0111DA  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12054  0111DC  E105               	bnz	l1904
 12055  0111DE  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12056  0111E0  A4D8               	btfss	status,2,c
 12057  0111E2  D002               	goto	l1904
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12061  0111E4  0EFD               	movlw	253
 12062                           
 12063                           ; BSR set to: 0
 12064  0111E6  0012               	return	
 12065  0111E8                     l1904:
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12069  0111E8  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12070  0111EC  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12071  0111F0                     l1903:
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12075  0111F0  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12076  0111F4  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12077  0111F8  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12078  0111FC  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;fat16.c: 957: _write_root(file_number, &root);
 12082  011200  0EBB               	movlw	low fat_resize_file@root
 12083  011202  6F88               	movwf	__write_root@data& (0+255),b
 12084  011204  0E00               	movlw	high fat_resize_file@root
 12085  011206  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12086  011208  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12087  01120A  EC6A  F0A6         	call	__write_root
 12088                           
 12089                           ;fat16.c: 960: return 0x00;
 12090  01120E  0E00               	movlw	0
 12091  011210  0012               	return	
 12092  011212                     __end_of_fat_resize_file:
 12093                           	opt stack 0
 12094                           tblptru	equ	0xFF8
 12095                           tblptrh	equ	0xFF7
 12096                           tblptrl	equ	0xFF6
 12097                           tablat	equ	0xFF5
 12098                           prodh	equ	0xFF4
 12099                           prodl	equ	0xFF3
 12100                           postinc0	equ	0xFEE
 12101                           wreg	equ	0xFE8
 12102                           postdec1	equ	0xFE5
 12103                           plusw1	equ	0xFE3
 12104                           fsr1h	equ	0xFE2
 12105                           fsr1l	equ	0xFE1
 12106                           indf2	equ	0xFDF
 12107                           postinc2	equ	0xFDE
 12108                           plusw2	equ	0xFDB
 12109                           fsr2h	equ	0xFDA
 12110                           fsr2l	equ	0xFD9
 12111                           status	equ	0xFD8
 12112                           
 12113 ;; *************** function _fat_modify_file *****************
 12114 ;; Defined at:
 12115 ;;		line 963 in file "fat16.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  file_number     1    wreg     unsigned char 
 12118 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12119 ;;  length          2   69[BANK0 ] unsigned int 
 12120 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12121 ;;		 -> ConfigFile_buffer(512), 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  file_number     1   87[BANK0 ] unsigned char 
 12124 ;;  root           32   99[BANK0 ] struct .
 12125 ;;  position        4   95[BANK0 ] unsigned long 
 12126 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12127 ;;  offset          2   91[BANK0 ] unsigned int 
 12128 ;;  cluster         2   89[BANK0 ] unsigned int 
 12129 ;;  sector          2   85[BANK0 ] unsigned int 
 12130 ;;  return_code     1   88[BANK0 ] unsigned char 
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      unsigned char 
 12133 ;; Registers used:
 12134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12140 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12142 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12143 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12144 ;;Total ram usage:       66 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:   17
 12147 ;; This function calls:
 12148 ;;		__data_sector_from_cluster
 12149 ;;		__find_nth_cluster
 12150 ;;		__read_fat
 12151 ;;		_fat_get_file_information
 12152 ;;		_flash_partial_write
 12153 ;; This function is called by:
 12154 ;;		_configFile_write
 12155 ;;		_fat_append_to_file
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text38
 12160  00E63C                     __ptext38:
 12161                           	opt stack 0
 12162  00E63C                     _fat_modify_file:
 12163                           	opt stack 11
 12164                           
 12165                           ;incstack = 0
 12166                           ;fat_modify_file@file_number stored from wreg
 12167  00E63C  0100               	movlb	0	; () banked
 12168  00E63E  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12169                           
 12170                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12171  00E640  0EC3               	movlw	low fat_modify_file@root
 12172  00E642  0100               	movlb	0	; () banked
 12173  00E644  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12174  00E646  0E00               	movlw	high fat_modify_file@root
 12175  00E648  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12176  00E64A  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12177  00E64C  EC79  F09E         	call	_fat_get_file_information
 12178  00E650  0100               	movlb	0	; () banked
 12179  00E652  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;fat16.c: 975: if(return_code!=0x00)
 12183  00E654  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12184  00E656  A4D8               	btfss	status,2,c
 12185  00E658  0012               	return	
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12189                           
 12190                           ; BSR set to: 0
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12194  00E65A  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12195  00E65C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12196  00E65E  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12197  00E660  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12198  00E662  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12199  00E664  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12200  00E666  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12201  00E668  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12202  00E66A  A0D8               	btfss	status,0,c
 12203  00E66C  0012               	return	
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12207                           
 12208                           ; BSR set to: 0
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12212  00E66E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12213  00E670  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12214  00E672  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12215  00E674  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12216  00E676  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12217  00E678  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12218  00E67A  0E00               	movlw	0
 12219  00E67C  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12220  00E67E  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12221  00E680  0E00               	movlw	0
 12222  00E682  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12223  00E684  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12224  00E686  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12225  00E688  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12226  00E68A  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12227  00E68C  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12228  00E68E  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12229  00E690  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12230  00E692  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12231  00E694  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12232  00E696  B0D8               	btfsc	status,0,c
 12233  00E698  D00E               	goto	l1910
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12237  00E69A  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12238  00E69E  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12239  00E6A2  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12240  00E6A4  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12241  00E6A6  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12242  00E6A8  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12243  00E6AA  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12244  00E6AC  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12245  00E6AE  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12246  00E6B0  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12247  00E6B2  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12248  00E6B4  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12249  00E6B6                     l1910:
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12253                           
 12254                           ; BSR set to: 0
 12255  00E6B6  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12256  00E6BA  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12257  00E6BE  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12258  00E6C2  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12259  00E6C6  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12260  00E6CA  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12261  00E6CE  0E0A               	movlw	10
 12262  00E6D0  D005               	goto	u14660
 12263  00E6D2                     u14665:
 12264  00E6D2  90D8               	bcf	status,0,c
 12265  00E6D4  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12266  00E6D6  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12267  00E6D8  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12268  00E6DA  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12269  00E6DC                     u14660:
 12270  00E6DC  2EE8               	decfsz	wreg,f,c
 12271  00E6DE  D7F9               	goto	u14665
 12272  00E6E0  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12273  00E6E4  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12274  00E6E8  EC9C  F098         	call	__find_nth_cluster	;wreg free
 12275  00E6EC  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12276  00E6F0  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12277                           
 12278                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12279  00E6F4  0E00               	movlw	0
 12280  00E6F6  0100               	movlb	0	; () banked
 12281  00E6F8  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12282  00E6FA  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12283  00E6FC  0EFE               	movlw	254
 12284  00E6FE  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12285  00E700  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12286  00E702  0EFF               	movlw	255
 12287  00E704  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12288  00E706  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12289  00E708  0EFF               	movlw	255
 12290  00E70A  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12291  00E70C  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12295  00E70E  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12296  00E712  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12297  00E716  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12298  00E718  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12299  00E71A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12300  00E71C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12301  00E71E  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12302  00E720  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12303  00E722  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12304  00E724  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12305  00E726  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12306  00E728  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;fat16.c: 1004: position = 0;
 12310  00E72A  0E00               	movlw	0
 12311  00E72C  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12312  00E72E  0E00               	movlw	0
 12313  00E730  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12314  00E732  0E00               	movlw	0
 12315  00E734  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12316  00E736  0E00               	movlw	0
 12317  00E738  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12318                           
 12319                           ;fat16.c: 1005: while(position < length)
 12320  00E73A  D089               	goto	l1911
 12321  00E73C                     
 12322                           ; BSR set to: 0
 12323                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12324                           
 12325                           ; BSR set to: 0
 12326  00E73C  0E02               	movlw	2
 12327  00E73E  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12328  00E740  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12329  00E742  A4D8               	btfss	status,2,c
 12330  00E744  D00F               	goto	l1913
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12334  00E746  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12335  00E74A  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12336  00E74E  EC78  F0A3         	call	__read_fat	;wreg free
 12337  00E752  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12338  00E756  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12339                           
 12340                           ;fat16.c: 1013: offset = 0;
 12341  00E75A  0E00               	movlw	0
 12342  00E75C  0100               	movlb	0	; () banked
 12343  00E75E  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12344  00E760  0E00               	movlw	0
 12345  00E762  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12346  00E764                     l1913:
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12350                           
 12351                           ; BSR set to: 0
 12352  00E764  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12353  00E768  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12354  00E76C  EC14  F0AC         	call	__data_sector_from_cluster	;wreg free
 12355  00E770  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12356  00E774  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12357                           
 12358                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12359  00E778  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12360  00E77C  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12361  00E780  0100               	movlb	0	; () banked
 12362  00E782  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12363  00E784  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12364  00E786  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12365  00E788  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12366  00E78A  0E00               	movlw	0
 12367  00E78C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12368  00E78E  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12369  00E790  0E02               	movlw	2
 12370  00E792  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12371  00E794  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12375  00E796  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12376  00E798  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12377  00E79A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12378  00E79C  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12379  00E79E  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12380  00E7A0  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12381  00E7A2  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12382  00E7A6  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12383  00E7AA  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12384  00E7AE  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12385  00E7B2  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12386  00E7B4  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12387  00E7B6  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12388  00E7B8  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12389  00E7BA  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12390  00E7BC  0E00               	movlw	0
 12391  00E7BE  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12392  00E7C0  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12393  00E7C2  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12394  00E7C4  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12395  00E7C6  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12396  00E7C8  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12397  00E7CA  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12398  00E7CC  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12399  00E7CE  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12400  00E7D0  0E00               	movlw	0
 12401  00E7D2  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12402  00E7D4  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12403  00E7D6  0E00               	movlw	0
 12404  00E7D8  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12405  00E7DA  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12406  00E7DC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12407  00E7DE  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12408  00E7E0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12409  00E7E2  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12410  00E7E4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12411  00E7E6  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12412  00E7E8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12413  00E7EA  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12414  00E7EC  B0D8               	btfsc	status,0,c
 12415  00E7EE  D00E               	goto	l1914
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12419  00E7F0  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12420  00E7F4  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12421  00E7F8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12422  00E7FA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12423  00E7FC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12424  00E7FE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12425  00E800  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12426  00E802  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12427  00E804  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12428  00E806  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12429  00E808  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12430  00E80A  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12431  00E80C                     l1914:
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12435                           
 12436                           ; BSR set to: 0
 12437  00E80C  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12438  00E810  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12439  00E814  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12440  00E818  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12441  00E81C  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12442  00E820  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12443  00E824  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12444  00E826  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12445  00E828  6F85               	movwf	flash_partial_write@data& (0+255),b
 12446  00E82A  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12447  00E82C  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12448  00E82E  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12449  00E830  EC0E  F0A0         	call	_flash_partial_write	;wreg free
 12450                           
 12451                           ;fat16.c: 1030: position += number_of_bytes;
 12452  00E834  0100               	movlb	0	; () banked
 12453  00E836  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12454  00E838  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12455  00E83A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12456  00E83C  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12457  00E83E  0E00               	movlw	0
 12458  00E840  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12459  00E842  0E00               	movlw	0
 12460  00E844  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;fat16.c: 1031: offset += number_of_bytes;
 12464  00E846  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12465  00E848  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12466  00E84A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12467  00E84C  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12468  00E84E                     l1911:
 12469                           
 12470                           ; BSR set to: 0
 12471                           
 12472                           ; BSR set to: 0
 12473  00E84E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12474  00E850  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12475  00E852  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12476  00E854  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12477  00E856  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12478  00E858  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12479  00E85A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12480  00E85C  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12481  00E85E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12482  00E860  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12483  00E862  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12484  00E864  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12485  00E866  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12486  00E868  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12487  00E86A  B0D8               	btfsc	status,0,c
 12488  00E86C  0012               	return	
 12489  00E86E  D766               	goto	l1912
 12490  00E870                     __end_of_fat_modify_file:
 12491                           	opt stack 0
 12492                           tblptru	equ	0xFF8
 12493                           tblptrh	equ	0xFF7
 12494                           tblptrl	equ	0xFF6
 12495                           tablat	equ	0xFF5
 12496                           prodh	equ	0xFF4
 12497                           prodl	equ	0xFF3
 12498                           postinc0	equ	0xFEE
 12499                           wreg	equ	0xFE8
 12500                           postdec1	equ	0xFE5
 12501                           plusw1	equ	0xFE3
 12502                           fsr1h	equ	0xFE2
 12503                           fsr1l	equ	0xFE1
 12504                           indf2	equ	0xFDF
 12505                           postinc2	equ	0xFDE
 12506                           plusw2	equ	0xFDB
 12507                           fsr2h	equ	0xFDA
 12508                           fsr2l	equ	0xFD9
 12509                           status	equ	0xFD8
 12510                           
 12511 ;; *************** function _fat_create_file *****************
 12512 ;; Defined at:
 12513 ;;		line 587 in file "fat16.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12516 ;;		 -> configFile_used_name(8), 
 12517 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12518 ;;		 -> configFile_used_extention(3), 
 12519 ;;  size            4   80[BANK0 ] unsigned long 
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;  root_entry     32   93[BANK0 ] struct .
 12522 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12523 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12524 ;;  file_number     1   92[BANK0 ] unsigned char 
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      unsigned char 
 12527 ;; Registers used:
 12528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12534 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12535 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12536 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12537 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12538 ;;Total ram usage:       49 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; Hardware stack levels required when called:   17
 12541 ;; This function calls:
 12542 ;;		__get_available_root_entry
 12543 ;;		__get_date
 12544 ;;		__get_time
 12545 ;;		__make_cluster_chain
 12546 ;;		__write_root
 12547 ;;		_fat_find_file
 12548 ;;		_memcpy
 12549 ;; This function is called by:
 12550 ;;		_configFile_write
 12551 ;;		_fat_copy_file
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555                           	psect	text39
 12556  01008A                     __ptext39:
 12557                           	opt stack 0
 12558  01008A                     _fat_create_file:
 12559                           	opt stack 11
 12560                           
 12561                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;incstack = 0
 12565  01008A  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12566  01008E  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12567  010092  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12568  010096  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12569  01009A  ECE0  F08C         	call	_fat_find_file	;wreg free
 12570  01009E  0AFF               	xorlw	255
 12571  0100A0  B4D8               	btfsc	status,2,c
 12572  0100A2  D002               	goto	l1849
 12573                           
 12574                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12575  0100A4  0EFF               	movlw	255
 12576  0100A6  0012               	return	
 12577  0100A8                     l1849:
 12578                           
 12579                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12580  0100A8  EC5A  F0AA         	call	__get_available_root_entry	;wreg free
 12581  0100AC  0100               	movlb	0	; () banked
 12582  0100AE  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;fat16.c: 606: if(file_number == 0xFF)
 12586  0100B0  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12587  0100B2  A4D8               	btfss	status,2,c
 12588  0100B4  D002               	goto	l1851
 12589                           
 12590                           ; BSR set to: 0
 12591                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12592  0100B6  0EFE               	movlw	254
 12593                           
 12594                           ; BSR set to: 0
 12595  0100B8  0012               	return	
 12596  0100BA                     l1851:
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12600                           
 12601                           ; BSR set to: 0
 12602  0100BA  0EFF               	movlw	255
 12603  0100BC  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12604  0100BE  6FB4               	movwf	??_fat_create_file& (0+255),b
 12605  0100C0  0E01               	movlw	1
 12606  0100C2  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12607  0100C4  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12608  0100C6  0E00               	movlw	0
 12609  0100C8  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12610  0100CA  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12611  0100CC  0E00               	movlw	0
 12612  0100CE  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12613  0100D0  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12614  0100D2  0E0A               	movlw	10
 12615  0100D4  D005               	goto	u14550
 12616  0100D6                     u14555:
 12617  0100D6  90D8               	bcf	status,0,c
 12618  0100D8  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12619  0100DA  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12620  0100DC  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12621  0100DE  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12622  0100E0                     u14550:
 12623  0100E0  2EE8               	decfsz	wreg,f,c
 12624  0100E2  D7F9               	goto	u14555
 12625  0100E4  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12626  0100E8  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12630  0100EC  0E00               	movlw	0
 12631  0100EE  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12632  0100F0  0E00               	movlw	0
 12633  0100F2  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12634  0100F4  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12635  0100F8  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12636  0100FC  ECA9  F06C         	call	__make_cluster_chain	;wreg free
 12637  010100  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12638  010104  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12639                           
 12640                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12641  010108  0100               	movlb	0	; () banked
 12642  01010A  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12643  01010C  E105               	bnz	l15515
 12644  01010E  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12645  010110  A4D8               	btfss	status,2,c
 12646  010112  D002               	goto	l1852
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12650  010114  0EFD               	movlw	253
 12651                           
 12652                           ; BSR set to: 0
 12653  010116  0012               	return	
 12654  010118                     l1852:
 12655  010118                     l15515:
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12659  010118  0EBD               	movlw	low fat_create_file@root_entry
 12660  01011A  6F60               	movwf	memcpy@d1& (0+255),b
 12661  01011C  0E00               	movlw	high fat_create_file@root_entry
 12662  01011E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12663  010120  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12664  010124  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12665  010128  0E00               	movlw	0
 12666  01012A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12667  01012C  0E08               	movlw	8
 12668  01012E  6F64               	movwf	memcpy@n& (0+255),b
 12669  010130  ECDA  F0A1         	call	_memcpy	;wreg free
 12670                           
 12671                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 12672  010134  0EC5               	movlw	low (fat_create_file@root_entry+8)
 12673  010136  0100               	movlb	0	; () banked
 12674  010138  6F60               	movwf	memcpy@d1& (0+255),b
 12675  01013A  0E00               	movlw	high (fat_create_file@root_entry+8)
 12676  01013C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12677  01013E  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 12678  010142  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 12679  010146  0E00               	movlw	0
 12680  010148  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12681  01014A  0E03               	movlw	3
 12682  01014C  6F64               	movwf	memcpy@n& (0+255),b
 12683  01014E  ECDA  F0A1         	call	_memcpy	;wreg free
 12684                           
 12685                           ;fat16.c: 630: root_entry.attributes = 0x00;
 12686  010152  0E00               	movlw	0
 12687  010154  0100               	movlb	0	; () banked
 12688  010156  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 12692  010158  0E00               	movlw	0
 12693  01015A  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 12697  01015C  0E00               	movlw	0
 12698  01015E  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 12702  010160  EC2B  F0AC         	call	__get_time	;wreg free
 12703  010164  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 12704  010168  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 12705                           
 12706                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 12707  01016C  EC31  F0AC         	call	__get_date	;wreg free
 12708  010170  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 12709  010174  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 12710                           
 12711                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 12712  010178  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 12713  01017C  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 12714                           
 12715                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 12716  010180  0E00               	movlw	0
 12717  010182  0100               	movlb	0	; () banked
 12718  010184  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 12719  010186  0E00               	movlw	0
 12720  010188  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 12724  01018A  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 12725  01018E  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 12729  010192  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 12730  010196  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 12734  01019A  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 12735  01019E  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;fat16.c: 640: root_entry.fileSize = size;
 12739  0101A2  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 12740  0101A6  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 12741  0101AA  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 12742  0101AE  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 12746  0101B2  0EBD               	movlw	low fat_create_file@root_entry
 12747  0101B4  6F88               	movwf	__write_root@data& (0+255),b
 12748  0101B6  0E00               	movlw	high fat_create_file@root_entry
 12749  0101B8  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12750  0101BA  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12751  0101BC  EC6A  F0A6         	call	__write_root
 12752                           
 12753                           ;fat16.c: 645: return file_number;
 12754  0101C0  0100               	movlb	0	; () banked
 12755  0101C2  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12756  0101C4  0012               	return	
 12757  0101C6                     __end_of_fat_create_file:
 12758                           	opt stack 0
 12759                           tblptru	equ	0xFF8
 12760                           tblptrh	equ	0xFF7
 12761                           tblptrl	equ	0xFF6
 12762                           tablat	equ	0xFF5
 12763                           prodh	equ	0xFF4
 12764                           prodl	equ	0xFF3
 12765                           postinc0	equ	0xFEE
 12766                           wreg	equ	0xFE8
 12767                           postdec1	equ	0xFE5
 12768                           plusw1	equ	0xFE3
 12769                           fsr1h	equ	0xFE2
 12770                           fsr1l	equ	0xFE1
 12771                           indf2	equ	0xFDF
 12772                           postinc2	equ	0xFDE
 12773                           plusw2	equ	0xFDB
 12774                           fsr2h	equ	0xFDA
 12775                           fsr2l	equ	0xFD9
 12776                           status	equ	0xFD8
 12777                           
 12778 ;; *************** function __write_root *****************
 12779 ;; Defined at:
 12780 ;;		line 474 in file "fat16.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;  file_number     1    wreg     unsigned char 
 12783 ;;  data            2   40[BANK0 ] PTR struct .
 12784 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;  file_number     1   46[BANK0 ] unsigned char 
 12787 ;;  offset          2   44[BANK0 ] unsigned int 
 12788 ;;  sector          2   42[BANK0 ] unsigned int 
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, status,2, status,0, cstack
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12799 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12801 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12802 ;;Total ram usage:        7 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:   15
 12805 ;; This function calls:
 12806 ;;		__offset_from_file_number
 12807 ;;		__sector_from_file_number
 12808 ;;		_flash_partial_write
 12809 ;; This function is called by:
 12810 ;;		_fat_create_file
 12811 ;;		_fat_resize_file
 12812 ;;		_fat_rename_file
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text40
 12817  014CD4                     __ptext40:
 12818                           	opt stack 0
 12819  014CD4                     __write_root:
 12820                           	opt stack 12
 12821                           
 12822                           ;incstack = 0
 12823                           ;__write_root@file_number stored from wreg
 12824  014CD4  0100               	movlb	0	; () banked
 12825  014CD6  6F8E               	movwf	__write_root@file_number& (0+255),b
 12826                           
 12827                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 12828  014CD8  0100               	movlb	0	; () banked
 12829  014CDA  518E               	movf	__write_root@file_number& (0+255),w,b
 12830  014CDC  EC75  F0A9         	call	__sector_from_file_number
 12831  014CE0  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 12832  014CE4  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 12833                           
 12834                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 12835  014CE8  0100               	movlb	0	; () banked
 12836  014CEA  518E               	movf	__write_root@file_number& (0+255),w,b
 12837  014CEC  EC6F  F0AA         	call	__offset_from_file_number
 12838  014CF0  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 12839  014CF4  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 12840                           
 12841                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 12842  014CF8  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 12843  014CFC  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 12844  014D00  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 12845  014D04  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 12846  014D08  0E00               	movlw	0
 12847  014D0A  0100               	movlb	0	; () banked
 12848  014D0C  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 12849  014D0E  0E20               	movlw	32
 12850  014D10  6F83               	movwf	flash_partial_write@length& (0+255),b
 12851  014D12  C088  F085         	movff	__write_root@data,flash_partial_write@data
 12852  014D16  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 12853  014D1A  EC0E  F0A0         	call	_flash_partial_write	;wreg free
 12854  014D1E  0012               	return		;funcret
 12855  014D20                     __end_of__write_root:
 12856                           	opt stack 0
 12857                           tblptru	equ	0xFF8
 12858                           tblptrh	equ	0xFF7
 12859                           tblptrl	equ	0xFF6
 12860                           tablat	equ	0xFF5
 12861                           prodh	equ	0xFF4
 12862                           prodl	equ	0xFF3
 12863                           postinc0	equ	0xFEE
 12864                           wreg	equ	0xFE8
 12865                           postdec1	equ	0xFE5
 12866                           plusw1	equ	0xFE3
 12867                           fsr1h	equ	0xFE2
 12868                           fsr1l	equ	0xFE1
 12869                           indf2	equ	0xFDF
 12870                           postinc2	equ	0xFDE
 12871                           plusw2	equ	0xFDB
 12872                           fsr2h	equ	0xFDA
 12873                           fsr2l	equ	0xFD9
 12874                           status	equ	0xFD8
 12875                           
 12876 ;; *************** function _flash_partial_write *****************
 12877 ;; Defined at:
 12878 ;;		line 460 in file "flash.c"
 12879 ;; Parameters:    Size  Location     Type
 12880 ;;  page            2   31[BANK0 ] unsigned int 
 12881 ;;  start           2   33[BANK0 ] unsigned int 
 12882 ;;  length          2   35[BANK0 ] unsigned int 
 12883 ;;  data            2   37[BANK0 ] PTR unsigned char 
 12884 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12885 ;;		 -> _delete_root@deleted_value(1), 
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;  match           1   39[BANK0 ] enum E7013
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0, cstack
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12897 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12901 ;;Total ram usage:        9 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:   14
 12904 ;; This function calls:
 12905 ;;		__flash_compare_page_to_buffer
 12906 ;;		__flash_copy_page_to_buffer
 12907 ;;		__flash_is_busy
 12908 ;;		__flash_write_page_from_buffer
 12909 ;;		__flash_write_to_buffer
 12910 ;; This function is called by:
 12911 ;;		__write_root
 12912 ;;		_fat_modify_file
 12913 ;;		__delete_root
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           	psect	text41
 12918  01401C                     __ptext41:
 12919                           	opt stack 0
 12920  01401C                     _flash_partial_write:
 12921                           	opt stack 12
 12922                           
 12923                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 12924                           
 12925                           ;incstack = 0
 12926  01401C  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 12927  014020  0900               	iorlw	0
 12928  014022  A4D8               	btfss	status,2,c
 12929  014024  D7FB               	goto	_flash_partial_write
 12930                           
 12931                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 12932  014026  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 12933  01402A  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 12934  01402E  0E00               	movlw	0
 12935  014030  0100               	movlb	0	; () banked
 12936  014032  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 12937  014034  EC97  F0A2         	call	__flash_copy_page_to_buffer	;wreg free
 12938                           
 12939                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 12940  014038  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 12941  01403C  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 12942  014040  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 12943  014044  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 12944  014048  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 12945  01404C  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 12946  014050  0E00               	movlw	0
 12947  014052  0100               	movlb	0	; () banked
 12948  014054  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 12949  014056  EC52  F0A5         	call	__flash_write_to_buffer	;wreg free
 12950                           
 12951                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 12952  01405A  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 12953  01405E  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 12954  014062  0E00               	movlw	0
 12955  014064  0100               	movlb	0	; () banked
 12956  014066  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 12957  014068  EC3B  F09E         	call	__flash_compare_page_to_buffer	;wreg free
 12958  01406C  0100               	movlb	0	; () banked
 12959  01406E  6F87               	movwf	flash_partial_write@match& (0+255),b
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 12963  014070  0587               	decf	flash_partial_write@match& (0+255),w,b
 12964  014072  A4D8               	btfss	status,2,c
 12965  014074  0012               	return	
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 12969  014076  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 12970  01407A  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 12971  01407E  0E00               	movlw	0
 12972  014080  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 12973  014082  EC1E  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 12974  014086  0012               	return	
 12975  014088                     __end_of_flash_partial_write:
 12976                           	opt stack 0
 12977                           tblptru	equ	0xFF8
 12978                           tblptrh	equ	0xFF7
 12979                           tblptrl	equ	0xFF6
 12980                           tablat	equ	0xFF5
 12981                           prodh	equ	0xFF4
 12982                           prodl	equ	0xFF3
 12983                           postinc0	equ	0xFEE
 12984                           wreg	equ	0xFE8
 12985                           postdec1	equ	0xFE5
 12986                           plusw1	equ	0xFE3
 12987                           fsr1h	equ	0xFE2
 12988                           fsr1l	equ	0xFE1
 12989                           indf2	equ	0xFDF
 12990                           postinc2	equ	0xFDE
 12991                           plusw2	equ	0xFDB
 12992                           fsr2h	equ	0xFDA
 12993                           fsr2l	equ	0xFD9
 12994                           status	equ	0xFD8
 12995                           
 12996 ;; *************** function __flash_copy_page_to_buffer *****************
 12997 ;; Defined at:
 12998 ;;		line 154 in file "flash.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;  page            2   19[BANK0 ] unsigned int 
 13001 ;;  buffer          1   21[BANK0 ] enum E7009
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;  command         4   25[BANK0 ] unsigned char [4]
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0, cstack
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13013 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13014 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13015 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13016 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13017 ;;Total ram usage:       10 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:   13
 13020 ;; This function calls:
 13021 ;;		__flash_is_busy
 13022 ;;		_spi_tx
 13023 ;; This function is called by:
 13024 ;;		_flash_partial_write
 13025 ;;		_flash_copy_page_to_buffer
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text42
 13030  01452E                     __ptext42:
 13031                           	opt stack 0
 13032  01452E                     __flash_copy_page_to_buffer:
 13033                           	opt stack 12
 13034                           
 13035                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13036                           
 13037                           ;incstack = 0
 13038  01452E  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 13039  014532  0900               	iorlw	0
 13040  014534  A4D8               	btfss	status,2,c
 13041  014536  D7FB               	goto	__flash_copy_page_to_buffer
 13042                           
 13043                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13044  014538  0100               	movlb	0	; () banked
 13045  01453A  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13046  01453C  A4D8               	btfss	status,2,c
 13047  01453E  D002               	goto	l1540
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;flash.c: 163: command[0] = 0x53;
 13051  014540  0E53               	movlw	83
 13052  014542  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13053  014544                     l1540:
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13057                           
 13058                           ; BSR set to: 0
 13059  014544  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13060  014546  A4D8               	btfss	status,2,c
 13061  014548  D002               	goto	l1541
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;flash.c: 165: command[0] = 0x55;
 13065  01454A  0E55               	movlw	85
 13066  01454C  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13067  01454E                     l1541:
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13071                           
 13072                           ; BSR set to: 0
 13073  01454E  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13074  014552  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13075  014556  0E07               	movlw	7
 13076  014558  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13077  01455A                     u11895:
 13078  01455A  90D8               	bcf	status,0,c
 13079  01455C  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13080  01455E  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13081  014560  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13082  014562  D7FB               	goto	u11895
 13083  014564  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13084  014566  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13088  014568  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13089  01456A  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13090  01456C  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13091                           
 13092                           ;flash.c: 169: command[3] = 0x00;
 13093  01456E  0E00               	movlw	0
 13094  014570  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;flash.c: 172: spi_tx(command, 4);
 13098  014572  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13099  014574  6F60               	movwf	spi_tx@data& (0+255),b
 13100  014576  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13101  014578  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13102  01457A  0E00               	movlw	0
 13103  01457C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13104  01457E  0E04               	movlw	4
 13105  014580  6F62               	movwf	spi_tx@length& (0+255),b
 13106  014582  EC4B  F0A3         	call	_spi_tx	;wreg free
 13107  014586  0012               	return		;funcret
 13108  014588                     __end_of__flash_copy_page_to_buffer:
 13109                           	opt stack 0
 13110                           tblptru	equ	0xFF8
 13111                           tblptrh	equ	0xFF7
 13112                           tblptrl	equ	0xFF6
 13113                           tablat	equ	0xFF5
 13114                           prodh	equ	0xFF4
 13115                           prodl	equ	0xFF3
 13116                           postinc0	equ	0xFEE
 13117                           wreg	equ	0xFE8
 13118                           postdec1	equ	0xFE5
 13119                           plusw1	equ	0xFE3
 13120                           fsr1h	equ	0xFE2
 13121                           fsr1l	equ	0xFE1
 13122                           indf2	equ	0xFDF
 13123                           postinc2	equ	0xFDE
 13124                           plusw2	equ	0xFDB
 13125                           fsr2h	equ	0xFDA
 13126                           fsr2l	equ	0xFD9
 13127                           status	equ	0xFD8
 13128                           
 13129 ;; *************** function __make_cluster_chain *****************
 13130 ;; Defined at:
 13131 ;;		line 214 in file "fat16.c"
 13132 ;; Parameters:    Size  Location     Type
 13133 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13134 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13135 ;; Auto vars:     Size  Location     Type
 13136 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13137 ;;  offset          2   72[BANK0 ] unsigned int 
 13138 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13139 ;;  sector          2   68[BANK0 ] unsigned int 
 13140 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13141 ;;  different_se    2   63[BANK0 ] unsigned int 
 13142 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13143 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13144 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  2   53[BANK0 ] unsigned int 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13157 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13158 ;;Total ram usage:       23 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:   16
 13161 ;; This function calls:
 13162 ;;		__fat_offset_from_cluster
 13163 ;;		__fat_sector_from_cluster
 13164 ;;		__get_available_cluster
 13165 ;;		__get_available_offset_from_buffer
 13166 ;;		__read_value_from_offset
 13167 ;;		__write_value_to_offset
 13168 ;;		_flash_sector_read
 13169 ;;		_flash_sector_write
 13170 ;; This function is called by:
 13171 ;;		_fat_create_file
 13172 ;;		_fat_resize_file
 13173 ;;		_fat_delete_file
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text43
 13178  00D952                     __ptext43:
 13179                           	opt stack 0
 13180  00D952                     __make_cluster_chain:
 13181                           	opt stack 11
 13182                           
 13183                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13184                           
 13185                           ;incstack = 0
 13186  00D952  0E00               	movlw	0
 13187  00D954  0100               	movlb	0	; () banked
 13188  00D956  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13189  00D958  0E00               	movlw	0
 13190  00D95A  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13194  00D95C  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13195  00D960  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13196                           
 13197                           ;fat16.c: 229: minimum_sector = 2;
 13198  00D964  0E00               	movlw	0
 13199  00D966  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13200  00D968  0E02               	movlw	2
 13201  00D96A  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13202                           
 13203                           ;fat16.c: 230: data_changed = 0;
 13204  00D96C  0E00               	movlw	0
 13205  00D96E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13209  00D970  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13210  00D972  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13211  00D974  A4D8               	btfss	status,2,c
 13212  00D976  D024               	goto	l1774
 13213                           
 13214                           ; BSR set to: 0
 13215  00D978  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13216  00D97A  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13217  00D97C  B4D8               	btfsc	status,2,c
 13218  00D97E  D020               	goto	l1774
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13222  00D980  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13223  00D984  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13224  00D988  0E00               	movlw	0
 13225  00D98A  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13226  00D98C  0E00               	movlw	0
 13227  00D98E  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13228  00D990  EC7A  F092         	call	__get_available_cluster	;wreg free
 13229  00D994  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13230  00D998  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13231                           
 13232                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13233  00D99C  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13234  00D9A0  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13235  00D9A4  ECA1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 13236  00D9A8  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13237  00D9AC  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13238                           
 13239                           ;fat16.c: 238: if(first_cluster == 0)
 13240  00D9B0  0100               	movlb	0	; () banked
 13241  00D9B2  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13242  00D9B4  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13243  00D9B6  A4D8               	btfss	status,2,c
 13244  00D9B8  D003               	goto	l1774
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13248  00D9BA  6995               	setf	?__make_cluster_chain& (0+255),b
 13249  00D9BC  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13250  00D9BE  0012               	return	
 13251  00D9C0                     l1774:
 13252                           
 13253                           ; BSR set to: 0
 13254                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13255                           
 13256                           ; BSR set to: 0
 13257  00D9C0  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13258  00D9C4  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13259                           
 13260                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13261  00D9C8  D103               	goto	l1791
 13262  00D9CA                     
 13263                           ; BSR set to: 0
 13264                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13265                           
 13266                           ; BSR set to: 0
 13267  00D9CA  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13268  00D9CE  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13269  00D9D2  ECA1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 13270  00D9D6  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13271  00D9DA  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13272                           
 13273                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13274  00D9DE  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13275  00D9E2  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13276  00D9E6  ECAE  F0AB         	call	__fat_offset_from_cluster	;wreg free
 13277  00D9EA  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13278  00D9EE  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13279                           
 13280                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13281  00D9F2  0100               	movlb	0	; () banked
 13282  00D9F4  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13283  00D9F6  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13284  00D9F8  E104               	bnz	u13340
 13285  00D9FA  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13286  00D9FC  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13287  00D9FE  B4D8               	btfsc	status,2,c
 13288  00DA00  D037               	goto	l1778
 13289  00DA02                     u13340:
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13293  00DA02  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13294  00DA04  B4D8               	btfsc	status,2,c
 13295  00DA06  D00A               	goto	l1779
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13299  00DA08  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13300  00DA0C  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13301  00DA10  0E00               	movlw	low _buffer
 13302  00DA12  6F81               	movwf	flash_sector_write@data& (0+255),b
 13303  00DA14  0E0A               	movlw	high _buffer
 13304  00DA16  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13305  00DA18  ECF3  F0A5         	call	_flash_sector_write	;wreg free
 13306  00DA1C                     l1779:
 13307                           
 13308                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13309  00DA1C  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13310  00DA20  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13311  00DA24  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13312  00DA28  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13313  00DA2C  EC7A  F092         	call	__get_available_cluster	;wreg free
 13314  00DA30  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13315  00DA34  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13316                           
 13317                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13318  00DA38  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13319  00DA3C  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13320  00DA40  ECA1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 13321  00DA44  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13322  00DA48  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13323                           
 13324                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13325  00DA4C  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13326  00DA50  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13327  00DA54  0E00               	movlw	low _buffer
 13328  00DA56  0100               	movlb	0	; () banked
 13329  00DA58  6F89               	movwf	flash_sector_read@data& (0+255),b
 13330  00DA5A  0E0A               	movlw	high _buffer
 13331  00DA5C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13332  00DA5E  ECC0  F0AA         	call	_flash_sector_read	;wreg free
 13333                           
 13334                           ;fat16.c: 280: sector_in_buffer = sector;
 13335  00DA62  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13336  00DA66  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13337                           
 13338                           ;fat16.c: 281: data_changed = 0;
 13339  00DA6A  0E00               	movlw	0
 13340  00DA6C  0100               	movlb	0	; () banked
 13341  00DA6E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13342  00DA70                     l1778:
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13346                           
 13347                           ; BSR set to: 0
 13348  00DA70  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13349  00DA72  E104               	bnz	u13360
 13350  00DA74  0E02               	movlw	2
 13351  00DA76  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13352  00DA78  A0D8               	btfss	status,0,c
 13353  00DA7A  D05E               	goto	l1780
 13354  00DA7C                     u13360:
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13358  00DA7C  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13359  00DA80  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13360  00DA84  0E00               	movlw	low _buffer
 13361  00DA86  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13362  00DA88  0E0A               	movlw	high _buffer
 13363  00DA8A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13364  00DA8C  ECDB  F0A6         	call	__read_value_from_offset	;wreg free
 13365  00DA90  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13366  00DA94  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13367                           
 13368                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13369  00DA98  0100               	movlb	0	; () banked
 13370  00DA9A  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13371  00DA9C  E104               	bnz	u13370
 13372  00DA9E  0E02               	movlw	2
 13373  00DAA0  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13374  00DAA2  A0D8               	btfss	status,0,c
 13375  00DAA4  D006               	goto	u13380
 13376  00DAA6                     u13370:
 13377                           
 13378                           ; BSR set to: 0
 13379  00DAA6  0EDA               	movlw	218
 13380  00DAA8  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13381  00DAAA  0E1F               	movlw	31
 13382  00DAAC  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13383  00DAAE  A0D8               	btfss	status,0,c
 13384  00DAB0  D06B               	goto	l1790
 13385  00DAB2                     u13380:
 13386                           
 13387                           ; BSR set to: 0
 13388                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13389                           
 13390                           ; BSR set to: 0
 13391  00DAB2  0E02               	movlw	2
 13392  00DAB4  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13393  00DAB6  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13394  00DAB8  0E00               	movlw	0
 13395  00DABA  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13396  00DABC  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13397  00DABE  0E00               	movlw	low _buffer
 13398  00DAC0  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13399  00DAC2  0E0A               	movlw	high _buffer
 13400  00DAC4  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13401  00DAC6  EC3A  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 13402  00DACA  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13403  00DACE  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13404                           
 13405                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13406  00DAD2  0100               	movlb	0	; () banked
 13407  00DAD4  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13408  00DAD6  E103               	bnz	u13390
 13409  00DAD8  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13410  00DADA  B4D8               	btfsc	status,2,c
 13411  00DADC  D013               	goto	l1784
 13412  00DADE                     u13390:
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13416  00DADE  0EFE               	movlw	254
 13417  00DAE0  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13418  00DAE2  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13419  00DAE4  0EFF               	movlw	255
 13420  00DAE6  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13421  00DAE8  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;fat16.c: 300: next_cluster <<= 8;
 13425  00DAEA  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13426  00DAEC  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13427  00DAEE  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13431  00DAF0  90D8               	bcf	status,0,c
 13432  00DAF2  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13433  00DAF4  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13434  00DAF6  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13435  00DAF8  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13436  00DAFA  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13437  00DAFC  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13438  00DAFE  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13439  00DB00  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13440                           
 13441                           ;fat16.c: 302: }
 13442  00DB02  D00B               	goto	l1787
 13443  00DB04                     l1784:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13447                           
 13448                           ; BSR set to: 0
 13449  00DB04  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13450  00DB06  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13451  00DB08  A4D8               	btfss	status,2,c
 13452  00DB0A  D003               	goto	l1786
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13456  00DB0C  6995               	setf	?__make_cluster_chain& (0+255),b
 13457  00DB0E  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13458  00DB10  0012               	return	
 13459  00DB12                     l1786:
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13463  00DB12  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13464  00DB16  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13465  00DB1A                     l1787:
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13469                           
 13470                           ; BSR set to: 0
 13471                           
 13472                           ; BSR set to: 0
 13473  00DB1A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13474  00DB1E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13475  00DB22  0E00               	movlw	low _buffer
 13476  00DB24  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13477  00DB26  0E0A               	movlw	high _buffer
 13478  00DB28  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13479  00DB2A  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13480  00DB2E  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13481  00DB32  ECD9  F0A8         	call	__write_value_to_offset	;wreg free
 13482  00DB36  D025               	goto	L91
 13483  00DB38                     l1780:
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13487                           
 13488                           ; BSR set to: 0
 13489  00DB38  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13490  00DB3A  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13491  00DB3C  A4D8               	btfss	status,2,c
 13492  00DB3E  D028               	goto	l1789
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13496  00DB40  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13497  00DB44  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13498  00DB48  0E00               	movlw	low _buffer
 13499  00DB4A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13500  00DB4C  0E0A               	movlw	high _buffer
 13501  00DB4E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13502  00DB50  ECDB  F0A6         	call	__read_value_from_offset	;wreg free
 13503  00DB54  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13504  00DB58  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13505                           
 13506                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13507  00DB5C  0100               	movlb	0	; () banked
 13508  00DB5E  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13509  00DB60  E103               	bnz	u13420
 13510  00DB62  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13511  00DB64  B4D8               	btfsc	status,2,c
 13512  00DB66  D010               	goto	l1790
 13513  00DB68                     u13420:
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13517  00DB68  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13518  00DB6C  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13519  00DB70  0E00               	movlw	low _buffer
 13520  00DB72  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13521  00DB74  0E0A               	movlw	high _buffer
 13522  00DB76  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13523  00DB78  0EFF               	movlw	255
 13524  00DB7A  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13525  00DB7C  6964               	setf	__write_value_to_offset@value& (0+255),b
 13526  00DB7E  ECD9  F0A8         	call	__write_value_to_offset	;wreg free
 13527  00DB82                     L91:
 13528                           
 13529                           ;fat16.c: 337: data_changed = 1;
 13530  00DB82  0E01               	movlw	1
 13531  00DB84  0100               	movlb	0	; () banked
 13532  00DB86  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13533  00DB88                     l1790:
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13537                           
 13538                           ; BSR set to: 0
 13539  00DB88  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13540  00DB8A  A0D8               	btfss	status,0,c
 13541  00DB8C  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13542                           
 13543                           ;fat16.c: 342: }
 13544  00DB8E  D020               	goto	l1791
 13545  00DB90                     l1789:
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13549                           
 13550                           ; BSR set to: 0
 13551  00DB90  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13552  00DB94  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13553  00DB98  0E00               	movlw	low _buffer
 13554  00DB9A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13555  00DB9C  0E0A               	movlw	high _buffer
 13556  00DB9E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13557  00DBA0  ECDB  F0A6         	call	__read_value_from_offset	;wreg free
 13558  00DBA4  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13559  00DBA8  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13560                           
 13561                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13562  00DBAC  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13563  00DBB0  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13564  00DBB4  0E00               	movlw	low _buffer
 13565  00DBB6  0100               	movlb	0	; () banked
 13566  00DBB8  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13567  00DBBA  0E0A               	movlw	high _buffer
 13568  00DBBC  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13569  00DBBE  0E00               	movlw	0
 13570  00DBC0  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13571  00DBC2  0E00               	movlw	0
 13572  00DBC4  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13573  00DBC6  ECD9  F0A8         	call	__write_value_to_offset	;wreg free
 13574                           
 13575                           ;fat16.c: 353: data_changed = 1;
 13576  00DBCA  0E01               	movlw	1
 13577  00DBCC  0100               	movlb	0	; () banked
 13578  00DBCE  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13579  00DBD0                     l1791:
 13580                           
 13581                           ; BSR set to: 0
 13582                           
 13583                           ; BSR set to: 0
 13584                           
 13585                           ; BSR set to: 0
 13586                           
 13587                           ; BSR set to: 0
 13588  00DBD0  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13589  00DBD2  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13590  00DBD4  A4D8               	btfss	status,2,c
 13591  00DBD6  D6F9               	goto	l1777
 13592                           
 13593                           ; BSR set to: 0
 13594  00DBD8  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13595  00DBDA  E104               	bnz	u13440
 13596  00DBDC  0E02               	movlw	2
 13597  00DBDE  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13598  00DBE0  A0D8               	btfss	status,0,c
 13599  00DBE2  D006               	goto	u13450
 13600  00DBE4                     u13440:
 13601                           
 13602                           ; BSR set to: 0
 13603  00DBE4  0EDA               	movlw	218
 13604  00DBE6  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13605  00DBE8  0E1F               	movlw	31
 13606  00DBEA  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13607  00DBEC  A0D8               	btfss	status,0,c
 13608  00DBEE  D6ED               	goto	l1777
 13609  00DBF0                     u13450:
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13613                           
 13614                           ; BSR set to: 0
 13615                           
 13616                           ; BSR set to: 0
 13617  00DBF0  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13618  00DBF2  B4D8               	btfsc	status,2,c
 13619  00DBF4  D00A               	goto	l1795
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13623  00DBF6  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13624  00DBFA  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13625  00DBFE  0E00               	movlw	low _buffer
 13626  00DC00  6F81               	movwf	flash_sector_write@data& (0+255),b
 13627  00DC02  0E0A               	movlw	high _buffer
 13628  00DC04  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13629  00DC06  ECF3  F0A5         	call	_flash_sector_write	;wreg free
 13630  00DC0A                     l1795:
 13631                           
 13632                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13633  00DC0A  0100               	movlb	0	; () banked
 13634  00DC0C  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13635  00DC0E  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13636  00DC10  B4D8               	btfsc	status,2,c
 13637  00DC12  D005               	goto	l1796
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13641  00DC14  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13642  00DC18  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;fat16.c: 368: }
 13646  00DC1C  0012               	return	
 13647  00DC1E                     l1796:
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13651                           
 13652                           ; BSR set to: 0
 13653  00DC1E  0E00               	movlw	0
 13654  00DC20  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13655  00DC22  0E00               	movlw	0
 13656  00DC24  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13657                           
 13658                           ; BSR set to: 0
 13659  00DC26  0012               	return	
 13660  00DC28                     __end_of__make_cluster_chain:
 13661                           	opt stack 0
 13662                           tblptru	equ	0xFF8
 13663                           tblptrh	equ	0xFF7
 13664                           tblptrl	equ	0xFF6
 13665                           tablat	equ	0xFF5
 13666                           prodh	equ	0xFF4
 13667                           prodl	equ	0xFF3
 13668                           postinc0	equ	0xFEE
 13669                           wreg	equ	0xFE8
 13670                           postdec1	equ	0xFE5
 13671                           plusw1	equ	0xFE3
 13672                           fsr1h	equ	0xFE2
 13673                           fsr1l	equ	0xFE1
 13674                           indf2	equ	0xFDF
 13675                           postinc2	equ	0xFDE
 13676                           plusw2	equ	0xFDB
 13677                           fsr2h	equ	0xFDA
 13678                           fsr2l	equ	0xFD9
 13679                           status	equ	0xFD8
 13680                           
 13681 ;; *************** function __write_value_to_offset *****************
 13682 ;; Defined at:
 13683 ;;		line 124 in file "fat16.c"
 13684 ;; Parameters:    Size  Location     Type
 13685 ;;  offset          2    0[BANK0 ] unsigned int 
 13686 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13687 ;;		 -> buffer(512), 
 13688 ;;  value           2    4[BANK0 ] unsigned int 
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;		None
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  1    wreg      void 
 13693 ;; Registers used:
 13694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/0
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13700 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13702 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13703 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13704 ;;Total ram usage:        8 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:   10
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		__make_cluster_chain
 13711 ;; This function uses a non-reentrant model
 13712 ;;
 13713                           
 13714                           	psect	text44
 13715  0151B2                     __ptext44:
 13716                           	opt stack 0
 13717  0151B2                     __write_value_to_offset:
 13718                           	opt stack 16
 13719                           
 13720                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;incstack = 0
 13724  0151B2  0100               	movlb	0	; () banked
 13725  0151B4  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 13726  0151B6  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13727  0151B8  6ED9               	movwf	fsr2l,c
 13728  0151BA  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 13729  0151BC  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13730  0151BE  6EDA               	movwf	fsr2h,c
 13731  0151C0  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;fat16.c: 127: value >>= 8;
 13735  0151C4  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 13736  0151C6  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13737  0151C8  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 13741  0151CA  0E01               	movlw	1
 13742  0151CC  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 13743  0151CE  6F66               	movwf	??__write_value_to_offset& (0+255),b
 13744  0151D0  0E00               	movlw	0
 13745  0151D2  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 13746  0151D4  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 13747  0151D6  5166               	movf	??__write_value_to_offset& (0+255),w,b
 13748  0151D8  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13749  0151DA  6ED9               	movwf	fsr2l,c
 13750  0151DC  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 13751  0151DE  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13752  0151E0  6EDA               	movwf	fsr2h,c
 13753  0151E2  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13754                           
 13755                           ; BSR set to: 0
 13756  0151E6  0012               	return		;funcret
 13757  0151E8                     __end_of__write_value_to_offset:
 13758                           	opt stack 0
 13759                           tblptru	equ	0xFF8
 13760                           tblptrh	equ	0xFF7
 13761                           tblptrl	equ	0xFF6
 13762                           tablat	equ	0xFF5
 13763                           prodh	equ	0xFF4
 13764                           prodl	equ	0xFF3
 13765                           postinc0	equ	0xFEE
 13766                           wreg	equ	0xFE8
 13767                           postdec1	equ	0xFE5
 13768                           plusw1	equ	0xFE3
 13769                           fsr1h	equ	0xFE2
 13770                           fsr1l	equ	0xFE1
 13771                           indf2	equ	0xFDF
 13772                           postinc2	equ	0xFDE
 13773                           plusw2	equ	0xFDB
 13774                           fsr2h	equ	0xFDA
 13775                           fsr2l	equ	0xFD9
 13776                           status	equ	0xFD8
 13777                           
 13778 ;; *************** function __get_available_cluster *****************
 13779 ;; Defined at:
 13780 ;;		line 131 in file "fat16.c"
 13781 ;; Parameters:    Size  Location     Type
 13782 ;;  first_sector    2   43[BANK0 ] unsigned int 
 13783 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;  sector          2   51[BANK0 ] unsigned int 
 13786 ;;  offset          2   49[BANK0 ] unsigned int 
 13787 ;;  cluster         2   47[BANK0 ] unsigned int 
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  2   43[BANK0 ] unsigned int 
 13790 ;; Registers used:
 13791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13792 ;; Tracked objects:
 13793 ;;		On entry : 0/0
 13794 ;;		On exit  : 0/0
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13798 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13800 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13801 ;;Total ram usage:       10 bytes
 13802 ;; Hardware stack levels used:    1
 13803 ;; Hardware stack levels required when called:   15
 13804 ;; This function calls:
 13805 ;;		__cluster_from_sector_and_offset
 13806 ;;		__get_available_offset_from_buffer
 13807 ;;		_flash_sector_read
 13808 ;; This function is called by:
 13809 ;;		__make_cluster_chain
 13810 ;; This function uses a non-reentrant model
 13811 ;;
 13812                           
 13813                           	psect	text45
 13814  0124F4                     __ptext45:
 13815                           	opt stack 0
 13816  0124F4                     __get_available_cluster:
 13817                           	opt stack 11
 13818                           
 13819                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;incstack = 0
 13823  0124F4  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 13824  0124F8  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 13825  0124FC  0100               	movlb	0	; () banked
 13826  0124FE  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 13827  012500  E15B               	bnz	l13871
 13828  012502  0E22               	movlw	34
 13829  012504  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 13830  012506  B0D8               	btfsc	status,0,c
 13831  012508  D057               	goto	u12790
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 13835                           
 13836                           ; BSR set to: 0
 13837                           
 13838                           ; BSR set to: 0
 13839  01250A  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 13840  01250C  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13841  01250E  E104               	bnz	l13847
 13842  012510  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 13843  012512  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13844  012514  B4D8               	btfsc	status,2,c
 13845  012516  D04D               	goto	l1762
 13846  012518                     l13847:
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 13850  012518  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 13851  01251C  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 13852  012520  0E00               	movlw	low _buffer
 13853  012522  6F89               	movwf	flash_sector_read@data& (0+255),b
 13854  012524  0E0A               	movlw	high _buffer
 13855  012526  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13856  012528  ECC0  F0AA         	call	_flash_sector_read	;wreg free
 13857                           
 13858                           ;fat16.c: 150: if(sector == 2)
 13859  01252C  0E02               	movlw	2
 13860  01252E  0100               	movlb	0	; () banked
 13861  012530  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13862  012532  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13863  012534  A4D8               	btfss	status,2,c
 13864  012536  D00B               	goto	l1757
 13865                           
 13866                           ; BSR set to: 0
 13867                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 13868  012538  0E00               	movlw	0
 13869  01253A  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13870  01253C  0E04               	movlw	4
 13871  01253E  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13872  012540  0E00               	movlw	low _buffer
 13873  012542  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13874  012544  0E0A               	movlw	high _buffer
 13875  012546  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13876  012548  EC3A  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 13877  01254C  D00B               	goto	L1
 13878  01254E                     l1757:
 13879                           
 13880                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 13881  01254E  0E00               	movlw	0
 13882  012550  0100               	movlb	0	; () banked
 13883  012552  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13884  012554  0E00               	movlw	0
 13885  012556  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13886  012558  0E00               	movlw	low _buffer
 13887  01255A  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13888  01255C  0E0A               	movlw	high _buffer
 13889  01255E  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13890  012560  EC3A  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 13891  012564                     L1:
 13892  012564  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 13893  012568  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 13894                           
 13895                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 13896  01256C  0100               	movlb	0	; () banked
 13897  01256E  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 13898  012570  E103               	bnz	u12770
 13899  012572  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 13900  012574  B4D8               	btfsc	status,2,c
 13901  012576  D01D               	goto	l1762
 13902  012578                     u12770:
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 13906  012578  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 13907  01257C  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 13908  012580  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 13909  012584  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 13910  012588  EC98  F0AA         	call	__cluster_from_sector_and_offset	;wreg free
 13911  01258C  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 13912  012590  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 13913                           
 13914                           ;fat16.c: 166: if(cluster > 8191)
 13915  012594  0E20               	movlw	32
 13916  012596  0100               	movlb	0	; () banked
 13917  012598  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 13918  01259A  A0D8               	btfss	status,0,c
 13919  01259C  D005               	goto	l1760
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 13923  01259E  0E00               	movlw	0
 13924  0125A0  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13925  0125A2  0E00               	movlw	0
 13926  0125A4  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13927                           
 13928                           ; BSR set to: 0
 13929  0125A6  0012               	return	
 13930  0125A8                     l1760:
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 13934  0125A8  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 13935  0125AC  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 13936  0125B0  0012               	return	
 13937  0125B2                     l1762:
 13938                           
 13939                           ; BSR set to: 0
 13940                           
 13941                           ; BSR set to: 0
 13942                           
 13943                           ; BSR set to: 0
 13944                           
 13945                           ; BSR set to: 0
 13946  0125B2  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 13947  0125B4  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 13948  0125B6  D7A3               	goto	L2
 13949  0125B8                     u12790:
 13950  0125B8                     l13871:
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 13954  0125B8  0E00               	movlw	0
 13955  0125BA  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13956  0125BC  0E00               	movlw	0
 13957  0125BE  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13958  0125C0  0012               	return	
 13959  0125C2                     __end_of__get_available_cluster:
 13960                           	opt stack 0
 13961                           tblptru	equ	0xFF8
 13962                           tblptrh	equ	0xFF7
 13963                           tblptrl	equ	0xFF6
 13964                           tablat	equ	0xFF5
 13965                           prodh	equ	0xFF4
 13966                           prodl	equ	0xFF3
 13967                           postinc0	equ	0xFEE
 13968                           wreg	equ	0xFE8
 13969                           postdec1	equ	0xFE5
 13970                           plusw1	equ	0xFE3
 13971                           fsr1h	equ	0xFE2
 13972                           fsr1l	equ	0xFE1
 13973                           indf2	equ	0xFDF
 13974                           postinc2	equ	0xFDE
 13975                           plusw2	equ	0xFDB
 13976                           fsr2h	equ	0xFDA
 13977                           fsr2l	equ	0xFD9
 13978                           status	equ	0xFD8
 13979                           
 13980 ;; *************** function __get_available_offset_from_buffer *****************
 13981 ;; Defined at:
 13982 ;;		line 99 in file "fat16.c"
 13983 ;; Parameters:    Size  Location     Type
 13984 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 13985 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13986 ;;		 -> buffer(512), 
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;  offset          2    6[BANK0 ] unsigned int 
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  2    0[BANK0 ] unsigned int 
 13991 ;; Registers used:
 13992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14001 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;Total ram usage:        8 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   10
 14005 ;; This function calls:
 14006 ;;		Nothing
 14007 ;; This function is called by:
 14008 ;;		__get_available_cluster
 14009 ;;		__make_cluster_chain
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           	psect	text46
 14014  014474                     __ptext46:
 14015                           	opt stack 0
 14016  014474                     __get_available_offset_from_buffer:
 14017                           	opt stack 16
 14018                           
 14019                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;incstack = 0
 14023  014474  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14024  014478  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14025  01447C  0E02               	movlw	2
 14026  01447E  0100               	movlb	0	; () banked
 14027  014480  D022               	goto	L3
 14028  014482                     
 14029                           ; BSR set to: 0
 14030                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14031                           
 14032                           ; BSR set to: 0
 14033  014482  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14034  014484  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14035  014486  6ED9               	movwf	fsr2l,c
 14036  014488  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14037  01448A  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14038  01448C  6EDA               	movwf	fsr2h,c
 14039  01448E  50DF               	movf	indf2,w,c
 14040  014490  A4D8               	btfss	status,2,c
 14041  014492  D014               	goto	l1743
 14042                           
 14043                           ; BSR set to: 0
 14044  014494  0E01               	movlw	1
 14045  014496  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14046  014498  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14047  01449A  0E00               	movlw	0
 14048  01449C  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14049  01449E  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14050  0144A0  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14051  0144A2  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14052  0144A4  6ED9               	movwf	fsr2l,c
 14053  0144A6  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14054  0144A8  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14055  0144AA  6EDA               	movwf	fsr2h,c
 14056  0144AC  50DF               	movf	indf2,w,c
 14057  0144AE  A4D8               	btfss	status,2,c
 14058  0144B0  D005               	goto	l1743
 14059                           
 14060                           ; BSR set to: 0
 14061                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14062  0144B2  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14063  0144B6  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14064  0144BA  0012               	return	
 14065  0144BC                     l1743:
 14066                           
 14067                           ; BSR set to: 0
 14068                           
 14069                           ; BSR set to: 0
 14070  0144BC  0E02               	movlw	2
 14071  0144BE  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14072  0144C0  0E00               	movlw	0
 14073  0144C2  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14074  0144C4  0E02               	movlw	2
 14075  0144C6                     L3:
 14076  0144C6  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14077  0144C8  A0D8               	btfss	status,0,c
 14078  0144CA  D7DB               	goto	l1741
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14082  0144CC  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14083  0144CE  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14084                           
 14085                           ; BSR set to: 0
 14086  0144D0  0012               	return		;funcret
 14087  0144D2                     __end_of__get_available_offset_from_buffer:
 14088                           	opt stack 0
 14089                           tblptru	equ	0xFF8
 14090                           tblptrh	equ	0xFF7
 14091                           tblptrl	equ	0xFF6
 14092                           tablat	equ	0xFF5
 14093                           prodh	equ	0xFF4
 14094                           prodl	equ	0xFF3
 14095                           postinc0	equ	0xFEE
 14096                           wreg	equ	0xFE8
 14097                           postdec1	equ	0xFE5
 14098                           plusw1	equ	0xFE3
 14099                           fsr1h	equ	0xFE2
 14100                           fsr1l	equ	0xFE1
 14101                           indf2	equ	0xFDF
 14102                           postinc2	equ	0xFDE
 14103                           plusw2	equ	0xFDB
 14104                           fsr2h	equ	0xFDA
 14105                           fsr2l	equ	0xFD9
 14106                           status	equ	0xFD8
 14107                           
 14108 ;; *************** function __cluster_from_sector_and_offset *****************
 14109 ;; Defined at:
 14110 ;;		line 90 in file "fat16.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;  sector          2    0[BANK0 ] unsigned int 
 14113 ;;  offset          2    2[BANK0 ] unsigned int 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  2    0[BANK0 ] unsigned int 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2, status,0
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14125 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14128 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14129 ;;Total ram usage:        4 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:   10
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		__get_available_cluster
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text47
 14140  015530                     __ptext47:
 14141                           	opt stack 0
 14142  015530                     __cluster_from_sector_and_offset:
 14143                           	opt stack 15
 14144                           
 14145                           ;fat16.c: 92: offset >>= 1;
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;incstack = 0
 14149  015530  0100               	movlb	0	; () banked
 14150  015532  90D8               	bcf	status,0,c
 14151  015534  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14152  015536  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;fat16.c: 93: sector -= 2;
 14156  015538  0E02               	movlw	2
 14157  01553A  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14158  01553C  0E00               	movlw	0
 14159  01553E  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;fat16.c: 94: sector <<= 8;
 14163  015540  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14164  015542  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14165  015544  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14166                           
 14167                           ; BSR set to: 0
 14168                           ;fat16.c: 95: sector |= offset;
 14169  015546  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14170  015548  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14171  01554A  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14172  01554C  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;fat16.c: 96: return sector;
 14176  01554E  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14177  015552  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14178  015556  0012               	return	
 14179  015558                     __end_of__cluster_from_sector_and_offset:
 14180                           	opt stack 0
 14181                           tblptru	equ	0xFF8
 14182                           tblptrh	equ	0xFF7
 14183                           tblptrl	equ	0xFF6
 14184                           tablat	equ	0xFF5
 14185                           prodh	equ	0xFF4
 14186                           prodl	equ	0xFF3
 14187                           postinc0	equ	0xFEE
 14188                           wreg	equ	0xFE8
 14189                           postdec1	equ	0xFE5
 14190                           plusw1	equ	0xFE3
 14191                           fsr1h	equ	0xFE2
 14192                           fsr1l	equ	0xFE1
 14193                           indf2	equ	0xFDF
 14194                           postinc2	equ	0xFDE
 14195                           plusw2	equ	0xFDB
 14196                           fsr2h	equ	0xFDA
 14197                           fsr2l	equ	0xFD9
 14198                           status	equ	0xFD8
 14199                           
 14200 ;; *************** function __get_time *****************
 14201 ;; Defined at:
 14202 ;;		line 377 in file "fat16.c"
 14203 ;; Parameters:    Size  Location     Type
 14204 ;;		None
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;		None
 14207 ;; Return value:  Size  Location     Type
 14208 ;;                  2    0[BANK0 ] unsigned int 
 14209 ;; Registers used:
 14210 ;;		wreg, status,2
 14211 ;; Tracked objects:
 14212 ;;		On entry : 0/0
 14213 ;;		On exit  : 0/0
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14219 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14220 ;;Total ram usage:        2 bytes
 14221 ;; Hardware stack levels used:    1
 14222 ;; Hardware stack levels required when called:   10
 14223 ;; This function calls:
 14224 ;;		Nothing
 14225 ;; This function is called by:
 14226 ;;		_fat_create_file
 14227 ;; This function uses a non-reentrant model
 14228 ;;
 14229                           
 14230                           	psect	text48
 14231  015856                     __ptext48:
 14232                           	opt stack 0
 14233  015856                     __get_time:
 14234                           	opt stack 17
 14235                           
 14236                           ;fat16.c: 389: return 0x0000;
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;incstack = 0
 14240  015856  0E00               	movlw	0
 14241  015858  0100               	movlb	0	; () banked
 14242  01585A  6F61               	movwf	(?__get_time+1)& (0+255),b
 14243  01585C  0E00               	movlw	0
 14244  01585E  6F60               	movwf	?__get_time& (0+255),b
 14245  015860  0012               	return	
 14246  015862                     __end_of__get_time:
 14247                           	opt stack 0
 14248                           tblptru	equ	0xFF8
 14249                           tblptrh	equ	0xFF7
 14250                           tblptrl	equ	0xFF6
 14251                           tablat	equ	0xFF5
 14252                           prodh	equ	0xFF4
 14253                           prodl	equ	0xFF3
 14254                           postinc0	equ	0xFEE
 14255                           wreg	equ	0xFE8
 14256                           postdec1	equ	0xFE5
 14257                           plusw1	equ	0xFE3
 14258                           fsr1h	equ	0xFE2
 14259                           fsr1l	equ	0xFE1
 14260                           indf2	equ	0xFDF
 14261                           postinc2	equ	0xFDE
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267 ;; *************** function __get_date *****************
 14268 ;; Defined at:
 14269 ;;		line 393 in file "fat16.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  2    0[BANK0 ] unsigned int 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14287 ;;Total ram usage:        2 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:   10
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_fat_create_file
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text49
 14298  015862                     __ptext49:
 14299                           	opt stack 0
 14300  015862                     __get_date:
 14301                           	opt stack 17
 14302                           
 14303                           ;fat16.c: 405: return 0x0000;
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;incstack = 0
 14307  015862  0E00               	movlw	0
 14308  015864  0100               	movlb	0	; () banked
 14309  015866  6F61               	movwf	(?__get_date+1)& (0+255),b
 14310  015868  0E00               	movlw	0
 14311  01586A  6F60               	movwf	?__get_date& (0+255),b
 14312  01586C  0012               	return	
 14313  01586E                     __end_of__get_date:
 14314                           	opt stack 0
 14315                           tblptru	equ	0xFF8
 14316                           tblptrh	equ	0xFF7
 14317                           tblptrl	equ	0xFF6
 14318                           tablat	equ	0xFF5
 14319                           prodh	equ	0xFF4
 14320                           prodl	equ	0xFF3
 14321                           postinc0	equ	0xFEE
 14322                           wreg	equ	0xFE8
 14323                           postdec1	equ	0xFE5
 14324                           plusw1	equ	0xFE3
 14325                           fsr1h	equ	0xFE2
 14326                           fsr1l	equ	0xFE1
 14327                           indf2	equ	0xFDF
 14328                           postinc2	equ	0xFDE
 14329                           plusw2	equ	0xFDB
 14330                           fsr2h	equ	0xFDA
 14331                           fsr2l	equ	0xFD9
 14332                           status	equ	0xFD8
 14333                           
 14334 ;; *************** function __get_available_root_entry *****************
 14335 ;; Defined at:
 14336 ;;		line 443 in file "fat16.c"
 14337 ;; Parameters:    Size  Location     Type
 14338 ;;		None
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;  file_number     1   53[BANK0 ] unsigned char 
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  1    wreg      unsigned char 
 14343 ;; Registers used:
 14344 ;;		wreg, status,2, status,0, cstack
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;Total ram usage:        1 bytes
 14355 ;; Hardware stack levels used:    1
 14356 ;; Hardware stack levels required when called:   16
 14357 ;; This function calls:
 14358 ;;		__root_is_available
 14359 ;; This function is called by:
 14360 ;;		_fat_create_file
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text50
 14365  0154B4                     __ptext50:
 14366                           	opt stack 0
 14367  0154B4                     __get_available_root_entry:
 14368                           	opt stack 11
 14369                           
 14370                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;incstack = 0
 14374  0154B4  0E00               	movlw	0
 14375  0154B6  0100               	movlb	0	; () banked
 14376  0154B8  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14377  0154BA                     l14433:
 14378                           
 14379                           ; BSR set to: 0
 14380  0154BA  0E3F               	movlw	63
 14381  0154BC  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14382  0154BE  D001               	goto	l1814
 14383  0154C0  D00C               	goto	u13500
 14384  0154C2                     l1814:
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14388                           
 14389                           ; BSR set to: 0
 14390  0154C2  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14391  0154C4  EC44  F0A0         	call	__root_is_available
 14392  0154C8  0900               	iorlw	0
 14393  0154CA  B4D8               	btfsc	status,2,c
 14394  0154CC  D003               	goto	l1816
 14395                           
 14396                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14397  0154CE  0100               	movlb	0	; () banked
 14398  0154D0  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14399                           
 14400                           ; BSR set to: 0
 14401  0154D2  0012               	return	
 14402  0154D4                     l1816:
 14403                           
 14404                           ; BSR set to: 0
 14405  0154D4  0100               	movlb	0	; () banked
 14406  0154D6  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14407  0154D8  D7F0               	goto	l14433
 14408  0154DA                     u13500:
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14412                           
 14413                           ; BSR set to: 0
 14414  0154DA  0EFF               	movlw	255
 14415  0154DC  0012               	return	
 14416  0154DE                     __end_of__get_available_root_entry:
 14417                           	opt stack 0
 14418                           tblptru	equ	0xFF8
 14419                           tblptrh	equ	0xFF7
 14420                           tblptrl	equ	0xFF6
 14421                           tablat	equ	0xFF5
 14422                           prodh	equ	0xFF4
 14423                           prodl	equ	0xFF3
 14424                           postinc0	equ	0xFEE
 14425                           wreg	equ	0xFE8
 14426                           postdec1	equ	0xFE5
 14427                           plusw1	equ	0xFE3
 14428                           fsr1h	equ	0xFE2
 14429                           fsr1l	equ	0xFE1
 14430                           indf2	equ	0xFDF
 14431                           postinc2	equ	0xFDE
 14432                           plusw2	equ	0xFDB
 14433                           fsr2h	equ	0xFDA
 14434                           fsr2l	equ	0xFD9
 14435                           status	equ	0xFD8
 14436                           
 14437 ;; *************** function __add_item *****************
 14438 ;; Defined at:
 14439 ;;		line 39 in file "config_file.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14442 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 14443 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 14444 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 14445 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 14446 ;;  value           4   38[BANK0 ] long 
 14447 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14448 ;;		 -> ConfigFile_buffer(512), 
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;  length          1   46[BANK0 ] unsigned char 
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  1    wreg      unsigned char 
 14453 ;; Registers used:
 14454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14460 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14462 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14463 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14464 ;;Total ram usage:       11 bytes
 14465 ;; Hardware stack levels used:    1
 14466 ;; Hardware stack levels required when called:   13
 14467 ;; This function calls:
 14468 ;;		_ltoa
 14469 ;; This function is called by:
 14470 ;;		_configFile_write
 14471 ;; This function uses a non-reentrant model
 14472 ;;
 14473                           
 14474                           	psect	text51
 14475  01140C                     __ptext51:
 14476                           	opt stack 0
 14477  01140C                     __add_item:
 14478                           	opt stack 15
 14479                           
 14480                           ;config_file.c: 41: uint8_t length = 0;
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;incstack = 0
 14484  01140C  0E00               	movlw	0
 14485  01140E  0100               	movlb	0	; () banked
 14486  011410  6F8E               	movwf	__add_item@length& (0+255),b
 14487                           
 14488                           ;config_file.c: 44: while(item_string[length])
 14489  011412  D01C               	goto	l2940
 14490  011414                     
 14491                           ; BSR set to: 0
 14492                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 14493                           
 14494                           ; BSR set to: 0
 14495  011414  518E               	movf	__add_item@length& (0+255),w,b
 14496  011416  0D01               	mullw	1
 14497  011418  C084  F08C         	movff	__add_item@item_string,??__add_item
 14498  01141C  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14499  011420  50F3               	movf	prodl,w,c
 14500  011422  278C               	addwf	??__add_item& (0+255),f,b
 14501  011424  50F4               	movf	prodh,w,c
 14502  011426  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14503  011428  C08C  FFF6         	movff	??__add_item,tblptrl
 14504  01142C  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14505  011430                     	if	0	;tblptru may be non-zero
 14506  011430                     	endif
 14507  011430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14508  011430  0E00               	movlw	low (__mediumconst shr (0+16))
 14509  011432  6EF8               	movwf	tblptru,c
 14510  011434                     	endif
 14511  011434  518E               	movf	__add_item@length& (0+255),w,b
 14512  011436  0D01               	mullw	1
 14513  011438  50F3               	movf	prodl,w,c
 14514  01143A  258A               	addwf	__add_item@buffer& (0+255),w,b
 14515  01143C  6ED9               	movwf	fsr2l,c
 14516  01143E  50F4               	movf	prodh,w,c
 14517  011440  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14518  011442  6EDA               	movwf	fsr2h,c
 14519  011444  0008               	tblrd		*
 14520  011446  CFF5 FFDF          	movff	tablat,indf2
 14521                           
 14522                           ; BSR set to: 0
 14523                           ;config_file.c: 47: ++length;
 14524  01144A  2B8E               	incf	__add_item@length& (0+255),f,b
 14525  01144C                     l2940:
 14526                           
 14527                           ; BSR set to: 0
 14528                           
 14529                           ; BSR set to: 0
 14530  01144C  518E               	movf	__add_item@length& (0+255),w,b
 14531  01144E  0D01               	mullw	1
 14532  011450  C084  F08C         	movff	__add_item@item_string,??__add_item
 14533  011454  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14534  011458  50F3               	movf	prodl,w,c
 14535  01145A  278C               	addwf	??__add_item& (0+255),f,b
 14536  01145C  50F4               	movf	prodh,w,c
 14537  01145E  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14538  011460  C08C  FFF6         	movff	??__add_item,tblptrl
 14539  011464  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14540  011468                     	if	0	;tblptru may be non-zero
 14541  011468                     	endif
 14542  011468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14543  011468  0E00               	movlw	low (__mediumconst shr (0+16))
 14544  01146A  6EF8               	movwf	tblptru,c
 14545  01146C                     	endif
 14546  01146C  0008               	tblrd		*
 14547  01146E  50F5               	movf	tablat,w,c
 14548  011470  0900               	iorlw	0
 14549  011472  A4D8               	btfss	status,2,c
 14550  011474  D7CF               	goto	l2941
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 14554                           
 14555                           ; BSR set to: 0
 14556  011476  518E               	movf	__add_item@length& (0+255),w,b
 14557  011478  0D01               	mullw	1
 14558  01147A  50F3               	movf	prodl,w,c
 14559  01147C  258A               	addwf	__add_item@buffer& (0+255),w,b
 14560  01147E  6ED9               	movwf	fsr2l,c
 14561  011480  50F4               	movf	prodh,w,c
 14562  011482  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14563  011484  6EDA               	movwf	fsr2h,c
 14564  011486  0E3D               	movlw	61
 14565  011488  6EDF               	movwf	indf2,c
 14566                           
 14567                           ; BSR set to: 0
 14568  01148A  2B8E               	incf	__add_item@length& (0+255),f,b
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 14572  01148C  518E               	movf	__add_item@length& (0+255),w,b
 14573  01148E  0D01               	mullw	1
 14574  011490  50F3               	movf	prodl,w,c
 14575  011492  258A               	addwf	__add_item@buffer& (0+255),w,b
 14576  011494  6F7A               	movwf	ltoa@buf& (0+255),b
 14577  011496  50F4               	movf	prodh,w,c
 14578  011498  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14579  01149A  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14580  01149C  C086  F07C         	movff	__add_item@value,ltoa@val
 14581  0114A0  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14582  0114A4  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14583  0114A8  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14584  0114AC  0E00               	movlw	0
 14585  0114AE  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14586  0114B0  0E0A               	movlw	10
 14587  0114B2  6F80               	movwf	ltoa@base& (0+255),b
 14588  0114B4  ECD4  F0A4         	call	_ltoa	;wreg free
 14589                           
 14590                           ;config_file.c: 55: while(buffer[length])
 14591  0114B8  D002               	goto	l2943
 14592  0114BA                     
 14593                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 14594  0114BA  0100               	movlb	0	; () banked
 14595  0114BC  2B8E               	incf	__add_item@length& (0+255),f,b
 14596  0114BE                     l2943:
 14597                           
 14598                           ; BSR set to: 0
 14599  0114BE  0100               	movlb	0	; () banked
 14600  0114C0  518E               	movf	__add_item@length& (0+255),w,b
 14601  0114C2  0D01               	mullw	1
 14602  0114C4  50F3               	movf	prodl,w,c
 14603  0114C6  258A               	addwf	__add_item@buffer& (0+255),w,b
 14604  0114C8  6ED9               	movwf	fsr2l,c
 14605  0114CA  50F4               	movf	prodh,w,c
 14606  0114CC  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14607  0114CE  6EDA               	movwf	fsr2h,c
 14608  0114D0  50DF               	movf	indf2,w,c
 14609  0114D2  A4D8               	btfss	status,2,c
 14610  0114D4  D7F2               	goto	l2944
 14611                           
 14612                           ; BSR set to: 0
 14613                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\r';
 14614                           
 14615                           ; BSR set to: 0
 14616  0114D6  518E               	movf	__add_item@length& (0+255),w,b
 14617  0114D8  0D01               	mullw	1
 14618  0114DA  50F3               	movf	prodl,w,c
 14619  0114DC  258A               	addwf	__add_item@buffer& (0+255),w,b
 14620  0114DE  6ED9               	movwf	fsr2l,c
 14621  0114E0  50F4               	movf	prodh,w,c
 14622  0114E2  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14623  0114E4  6EDA               	movwf	fsr2h,c
 14624  0114E6  0E0D               	movlw	13
 14625  0114E8  6EDF               	movwf	indf2,c
 14626                           
 14627                           ; BSR set to: 0
 14628  0114EA  2B8E               	incf	__add_item@length& (0+255),f,b
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;config_file.c: 62: buffer[length++] = '\n';
 14632  0114EC  518E               	movf	__add_item@length& (0+255),w,b
 14633  0114EE  0D01               	mullw	1
 14634  0114F0  50F3               	movf	prodl,w,c
 14635  0114F2  258A               	addwf	__add_item@buffer& (0+255),w,b
 14636  0114F4  6ED9               	movwf	fsr2l,c
 14637  0114F6  50F4               	movf	prodh,w,c
 14638  0114F8  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14639  0114FA  6EDA               	movwf	fsr2h,c
 14640  0114FC  0E0A               	movlw	10
 14641  0114FE  6EDF               	movwf	indf2,c
 14642  011500  2B8E               	incf	__add_item@length& (0+255),f,b
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;config_file.c: 65: return length;
 14646  011502  518E               	movf	__add_item@length& (0+255),w,b
 14647  011504  0012               	return	
 14648  011506                     __end_of__add_item:
 14649                           	opt stack 0
 14650                           tblptru	equ	0xFF8
 14651                           tblptrh	equ	0xFF7
 14652                           tblptrl	equ	0xFF6
 14653                           tablat	equ	0xFF5
 14654                           prodh	equ	0xFF4
 14655                           prodl	equ	0xFF3
 14656                           postinc0	equ	0xFEE
 14657                           wreg	equ	0xFE8
 14658                           postdec1	equ	0xFE5
 14659                           plusw1	equ	0xFE3
 14660                           fsr1h	equ	0xFE2
 14661                           fsr1l	equ	0xFE1
 14662                           indf2	equ	0xFDF
 14663                           postinc2	equ	0xFDE
 14664                           plusw2	equ	0xFDB
 14665                           fsr2h	equ	0xFDA
 14666                           fsr2l	equ	0xFD9
 14667                           status	equ	0xFD8
 14668                           
 14669 ;; *************** function _ltoa *****************
 14670 ;; Defined at:
 14671 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 14674 ;;		 -> ConfigFile_buffer(512), 
 14675 ;;  val             4   28[BANK0 ] long 
 14676 ;;  base            2   32[BANK0 ] int 
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 14679 ;;		 -> ConfigFile_buffer(512), 
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  2   26[BANK0 ] PTR unsigned char 
 14682 ;; Registers used:
 14683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14689 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14692 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14693 ;;Total ram usage:       10 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:   12
 14696 ;; This function calls:
 14697 ;;		_ultoa
 14698 ;; This function is called by:
 14699 ;;		__add_item
 14700 ;; This function uses a non-reentrant model
 14701 ;;
 14702                           
 14703                           	psect	text52
 14704  0149A8                     __ptext52:
 14705                           	opt stack 0
 14706  0149A8                     _ltoa:
 14707                           	opt stack 15
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;incstack = 0
 14711  0149A8  C07A  F082         	movff	ltoa@buf,ltoa@cp
 14712  0149AC  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 14713  0149B0  0100               	movlb	0	; () banked
 14714  0149B2  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 14715  0149B4  D010               	goto	l3711
 14716                           
 14717                           ; BSR set to: 0
 14718  0149B6  C07A  FFD9         	movff	ltoa@buf,fsr2l
 14719  0149BA  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 14720  0149BE  0E2D               	movlw	45
 14721  0149C0  6EDF               	movwf	indf2,c
 14722                           
 14723                           ; BSR set to: 0
 14724  0149C2  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 14725  0149C4  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 14726                           
 14727                           ; BSR set to: 0
 14728  0149C6  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 14729  0149C8  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 14730  0149CA  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 14731  0149CC  6D7C               	negf	ltoa@val& (0+255),b
 14732  0149CE  0E00               	movlw	0
 14733  0149D0  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 14734  0149D2  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 14735  0149D4  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 14736  0149D6                     l3711:
 14737                           
 14738                           ; BSR set to: 0
 14739                           
 14740                           ; BSR set to: 0
 14741  0149D6  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 14742  0149DA  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 14743  0149DE  C07C  F06F         	movff	ltoa@val,ultoa@val
 14744  0149E2  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 14745  0149E6  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 14746  0149EA  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 14747  0149EE  C080  F073         	movff	ltoa@base,ultoa@base
 14748  0149F2  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 14749  0149F6  EC09  F089         	call	_ultoa	;wreg free
 14750  0149FA  0012               	return	
 14751  0149FC                     __end_of_ltoa:
 14752                           	opt stack 0
 14753                           tblptru	equ	0xFF8
 14754                           tblptrh	equ	0xFF7
 14755                           tblptrl	equ	0xFF6
 14756                           tablat	equ	0xFF5
 14757                           prodh	equ	0xFF4
 14758                           prodl	equ	0xFF3
 14759                           postinc0	equ	0xFEE
 14760                           wreg	equ	0xFE8
 14761                           postdec1	equ	0xFE5
 14762                           plusw1	equ	0xFE3
 14763                           fsr1h	equ	0xFE2
 14764                           fsr1l	equ	0xFE1
 14765                           indf2	equ	0xFDF
 14766                           postinc2	equ	0xFDE
 14767                           plusw2	equ	0xFDB
 14768                           fsr2h	equ	0xFDA
 14769                           fsr2l	equ	0xFD9
 14770                           status	equ	0xFD8
 14771                           
 14772 ;; *************** function _ultoa *****************
 14773 ;; Defined at:
 14774 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 14777 ;;		 -> ConfigFile_buffer(512), 
 14778 ;;  val             4   15[BANK0 ] unsigned long 
 14779 ;;  base            2   19[BANK0 ] int 
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;  v               4   21[BANK0 ] unsigned long 
 14782 ;;  c               1   25[BANK0 ] unsigned char 
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  2   13[BANK0 ] PTR unsigned char 
 14785 ;; Registers used:
 14786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14787 ;; Tracked objects:
 14788 ;;		On entry : 0/0
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14792 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14793 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14795 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14796 ;;Total ram usage:       13 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:   11
 14799 ;; This function calls:
 14800 ;;		___lldiv
 14801 ;;		___llmod
 14802 ;; This function is called by:
 14803 ;;		_ltoa
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text53
 14808  011212                     __ptext53:
 14809                           	opt stack 0
 14810  011212                     _ultoa:
 14811                           	opt stack 15
 14812                           
 14813                           ;incstack = 0
 14814  011212  C06F  F075         	movff	ultoa@val,ultoa@v
 14815  011216  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 14816  01121A  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 14817  01121E  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 14818  011222  C075  F060         	movff	ultoa@v,___lldiv@dividend
 14819  011226  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 14820  01122A  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 14821  01122E  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 14822  011232  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14823  011236  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14824  01123A  0100               	movlb	0	; () banked
 14825  01123C  0E00               	movlw	0
 14826  01123E  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14827  011240  0EFF               	movlw	-1
 14828  011242  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14829  011244  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14830  011246  ECF8  F09C         	call	___lldiv	;wreg free
 14831  01124A  C060  F075         	movff	?___lldiv,ultoa@v
 14832  01124E  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 14833  011252  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 14834  011256  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 14835  01125A  0100               	movlb	0	; () banked
 14836  01125C  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 14837  01125E  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 14838                           
 14839                           ; BSR set to: 0
 14840  011260  5175               	movf	ultoa@v& (0+255),w,b
 14841  011262  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 14842  011264  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 14843  011266  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 14844  011268  A4D8               	btfss	status,2,c
 14845  01126A  D7DB               	goto	l3715
 14846                           
 14847                           ; BSR set to: 0
 14848                           
 14849                           ; BSR set to: 0
 14850  01126C  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14851  011270  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14852  011274  0E00               	movlw	0
 14853  011276  6EDF               	movwf	indf2,c
 14854                           
 14855                           ; BSR set to: 0
 14856  011278  076D               	decf	ultoa@buf& (0+255),f,b
 14857  01127A  A0D8               	btfss	status,0,c
 14858  01127C  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14859  01127E                     
 14860                           ; BSR set to: 0
 14861                           
 14862                           ; BSR set to: 0
 14863  01127E  C06F  F060         	movff	ultoa@val,___llmod@dividend
 14864  011282  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 14865  011286  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 14866  01128A  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 14867  01128E  C073  F064         	movff	ultoa@base,___llmod@divisor
 14868  011292  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 14869  011296  0E00               	movlw	0
 14870  011298  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 14871  01129A  0EFF               	movlw	-1
 14872  01129C  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 14873  01129E  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 14874  0112A0  ECAF  F0A0         	call	___llmod	;wreg free
 14875  0112A4  0100               	movlb	0	; () banked
 14876  0112A6  5160               	movf	?___llmod& (0+255),w,b
 14877  0112A8  6F79               	movwf	ultoa@c& (0+255),b
 14878                           
 14879                           ; BSR set to: 0
 14880  0112AA  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 14881  0112AE  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 14882  0112B2  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 14883  0112B6  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 14884  0112BA  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14885  0112BE  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14886  0112C2  0E00               	movlw	0
 14887  0112C4  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14888  0112C6  0EFF               	movlw	-1
 14889  0112C8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14890  0112CA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14891  0112CC  ECF8  F09C         	call	___lldiv	;wreg free
 14892  0112D0  C060  F06F         	movff	?___lldiv,ultoa@val
 14893  0112D4  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 14894  0112D8  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 14895  0112DC  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 14896  0112E0  0E09               	movlw	9
 14897  0112E2  0100               	movlb	0	; () banked
 14898  0112E4  6579               	cpfsgt	ultoa@c& (0+255),b
 14899  0112E6  D002               	goto	l3718
 14900                           
 14901                           ; BSR set to: 0
 14902  0112E8  0E07               	movlw	7
 14903  0112EA  2779               	addwf	ultoa@c& (0+255),f,b
 14904  0112EC                     l3718:
 14905                           
 14906                           ; BSR set to: 0
 14907  0112EC  0E30               	movlw	48
 14908  0112EE  2779               	addwf	ultoa@c& (0+255),f,b
 14909                           
 14910                           ; BSR set to: 0
 14911  0112F0  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14912  0112F4  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14913  0112F8  C079  FFDF         	movff	ultoa@c,indf2
 14914                           
 14915                           ; BSR set to: 0
 14916  0112FC  076D               	decf	ultoa@buf& (0+255),f,b
 14917  0112FE  A0D8               	btfss	status,0,c
 14918  011300  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14919                           
 14920                           ; BSR set to: 0
 14921  011302  516F               	movf	ultoa@val& (0+255),w,b
 14922  011304  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 14923  011306  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 14924  011308  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 14925  01130A  B4D8               	btfsc	status,2,c
 14926  01130C  0012               	return	
 14927  01130E  D7B7               	goto	l3717
 14928  011310                     __end_of_ultoa:
 14929                           	opt stack 0
 14930                           tblptru	equ	0xFF8
 14931                           tblptrh	equ	0xFF7
 14932                           tblptrl	equ	0xFF6
 14933                           tablat	equ	0xFF5
 14934                           prodh	equ	0xFF4
 14935                           prodl	equ	0xFF3
 14936                           postinc0	equ	0xFEE
 14937                           wreg	equ	0xFE8
 14938                           postdec1	equ	0xFE5
 14939                           plusw1	equ	0xFE3
 14940                           fsr1h	equ	0xFE2
 14941                           fsr1l	equ	0xFE1
 14942                           indf2	equ	0xFDF
 14943                           postinc2	equ	0xFDE
 14944                           plusw2	equ	0xFDB
 14945                           fsr2h	equ	0xFDA
 14946                           fsr2l	equ	0xFD9
 14947                           status	equ	0xFD8
 14948                           
 14949 ;; *************** function ___llmod *****************
 14950 ;; Defined at:
 14951 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 14952 ;; Parameters:    Size  Location     Type
 14953 ;;  dividend        4    0[BANK0 ] unsigned long 
 14954 ;;  divisor         4    4[BANK0 ] unsigned long 
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;  counter         1    8[BANK0 ] unsigned char 
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  4    0[BANK0 ] unsigned long 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2, status,0
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14966 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14969 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14970 ;;Total ram usage:        9 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:   10
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_ultoa
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text54
 14981  01415E                     __ptext54:
 14982                           	opt stack 0
 14983  01415E                     ___llmod:
 14984                           	opt stack 15
 14985                           
 14986                           ; BSR set to: 0
 14987                           ;incstack = 0
 14988  01415E  0100               	movlb	0	; () banked
 14989  014160  5164               	movf	___llmod@divisor& (0+255),w,b
 14990  014162  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14991  014164  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14992  014166  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14993  014168  B4D8               	btfsc	status,2,c
 14994  01416A  D024               	goto	l3413
 14995                           
 14996                           ; BSR set to: 0
 14997  01416C  0E01               	movlw	1
 14998  01416E  6F68               	movwf	___llmod@counter& (0+255),b
 14999  014170  D006               	goto	l3408
 15000  014172                     
 15001                           ; BSR set to: 0
 15002                           
 15003                           ; BSR set to: 0
 15004  014172  90D8               	bcf	status,0,c
 15005  014174  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15006  014176  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15007  014178  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15008  01417A  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15009  01417C  2B68               	incf	___llmod@counter& (0+255),f,b
 15010  01417E                     l3408:
 15011                           
 15012                           ; BSR set to: 0
 15013                           
 15014                           ; BSR set to: 0
 15015  01417E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15016  014180  D7F8               	goto	l3409
 15017  014182                     u12020:
 15018                           
 15019                           ; BSR set to: 0
 15020                           
 15021                           ; BSR set to: 0
 15022                           
 15023                           ; BSR set to: 0
 15024  014182  5164               	movf	___llmod@divisor& (0+255),w,b
 15025  014184  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15026  014186  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15027  014188  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15028  01418A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15029  01418C  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15030  01418E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15031  014190  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15032  014192  A0D8               	btfss	status,0,c
 15033  014194  D008               	goto	l3412
 15034                           
 15035                           ; BSR set to: 0
 15036  014196  5164               	movf	___llmod@divisor& (0+255),w,b
 15037  014198  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15038  01419A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15039  01419C  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15040  01419E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15041  0141A0  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15042  0141A2  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15043  0141A4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15044  0141A6                     l3412:
 15045                           
 15046                           ; BSR set to: 0
 15047                           
 15048                           ; BSR set to: 0
 15049  0141A6  90D8               	bcf	status,0,c
 15050  0141A8  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15051  0141AA  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15052  0141AC  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15053  0141AE  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15054                           
 15055                           ; BSR set to: 0
 15056  0141B0  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15057  0141B2  D7E7               	goto	u12020
 15058  0141B4                     l3413:
 15059                           
 15060                           ; BSR set to: 0
 15061                           
 15062                           ; BSR set to: 0
 15063  0141B4  C060  F060         	movff	___llmod@dividend,?___llmod
 15064  0141B8  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15065  0141BC  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15066  0141C0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15067                           
 15068                           ; BSR set to: 0
 15069  0141C4  0012               	return		;funcret
 15070  0141C6                     __end_of___llmod:
 15071                           	opt stack 0
 15072                           tblptru	equ	0xFF8
 15073                           tblptrh	equ	0xFF7
 15074                           tblptrl	equ	0xFF6
 15075                           tablat	equ	0xFF5
 15076                           prodh	equ	0xFF4
 15077                           prodl	equ	0xFF3
 15078                           postinc0	equ	0xFEE
 15079                           wreg	equ	0xFE8
 15080                           postdec1	equ	0xFE5
 15081                           plusw1	equ	0xFE3
 15082                           fsr1h	equ	0xFE2
 15083                           fsr1l	equ	0xFE1
 15084                           indf2	equ	0xFDF
 15085                           postinc2	equ	0xFDE
 15086                           plusw2	equ	0xFDB
 15087                           fsr2h	equ	0xFDA
 15088                           fsr2l	equ	0xFD9
 15089                           status	equ	0xFD8
 15090                           
 15091 ;; *************** function ___lldiv *****************
 15092 ;; Defined at:
 15093 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  dividend        4    0[BANK0 ] unsigned long 
 15096 ;;  divisor         4    4[BANK0 ] unsigned long 
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;  quotient        4    8[BANK0 ] unsigned long 
 15099 ;;  counter         1   12[BANK0 ] unsigned char 
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  4    0[BANK0 ] unsigned long 
 15102 ;; Registers used:
 15103 ;;		wreg, status,2, status,0
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15110 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15112 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;Total ram usage:       13 bytes
 15114 ;; Hardware stack levels used:    1
 15115 ;; Hardware stack levels required when called:   10
 15116 ;; This function calls:
 15117 ;;		Nothing
 15118 ;; This function is called by:
 15119 ;;		_ultoa
 15120 ;; This function uses a non-reentrant model
 15121 ;;
 15122                           
 15123                           	psect	text55
 15124  0139F0                     __ptext55:
 15125                           	opt stack 0
 15126  0139F0                     ___lldiv:
 15127                           	opt stack 15
 15128                           
 15129                           ; BSR set to: 0
 15130                           ;incstack = 0
 15131  0139F0  0E00               	movlw	0
 15132  0139F2  0100               	movlb	0	; () banked
 15133  0139F4  6F68               	movwf	___lldiv@quotient& (0+255),b
 15134  0139F6  0E00               	movlw	0
 15135  0139F8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15136  0139FA  0E00               	movlw	0
 15137  0139FC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15138  0139FE  0E00               	movlw	0
 15139  013A00  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15140                           
 15141                           ; BSR set to: 0
 15142  013A02  5164               	movf	___lldiv@divisor& (0+255),w,b
 15143  013A04  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15144  013A06  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15145  013A08  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15146  013A0A  B4D8               	btfsc	status,2,c
 15147  013A0C  D02A               	goto	l3032
 15148                           
 15149                           ; BSR set to: 0
 15150  013A0E  0E01               	movlw	1
 15151  013A10  6F6C               	movwf	___lldiv@counter& (0+255),b
 15152  013A12  D006               	goto	l3027
 15153  013A14                     
 15154                           ; BSR set to: 0
 15155                           
 15156                           ; BSR set to: 0
 15157  013A14  90D8               	bcf	status,0,c
 15158  013A16  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15159  013A18  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15160  013A1A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15161  013A1C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15162  013A1E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15163  013A20                     l3027:
 15164                           
 15165                           ; BSR set to: 0
 15166                           
 15167                           ; BSR set to: 0
 15168  013A20  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15169  013A22  D7F8               	goto	l3028
 15170  013A24                     u11990:
 15171                           
 15172                           ; BSR set to: 0
 15173                           
 15174                           ; BSR set to: 0
 15175                           
 15176                           ; BSR set to: 0
 15177  013A24  90D8               	bcf	status,0,c
 15178  013A26  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15179  013A28  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15180  013A2A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15181  013A2C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15182                           
 15183                           ; BSR set to: 0
 15184  013A2E  5164               	movf	___lldiv@divisor& (0+255),w,b
 15185  013A30  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15186  013A32  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15187  013A34  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15188  013A36  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15189  013A38  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15190  013A3A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15191  013A3C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15192  013A3E  A0D8               	btfss	status,0,c
 15193  013A40  D009               	goto	l3031
 15194                           
 15195                           ; BSR set to: 0
 15196  013A42  5164               	movf	___lldiv@divisor& (0+255),w,b
 15197  013A44  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15198  013A46  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15199  013A48  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15200  013A4A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15201  013A4C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15202  013A4E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15203  013A50  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15204                           
 15205                           ; BSR set to: 0
 15206  013A52  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15207  013A54                     l3031:
 15208                           
 15209                           ; BSR set to: 0
 15210                           
 15211                           ; BSR set to: 0
 15212  013A54  90D8               	bcf	status,0,c
 15213  013A56  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15214  013A58  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15215  013A5A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15216  013A5C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15217                           
 15218                           ; BSR set to: 0
 15219  013A5E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15220  013A60  D7E1               	goto	u11990
 15221  013A62                     l3032:
 15222                           
 15223                           ; BSR set to: 0
 15224                           
 15225                           ; BSR set to: 0
 15226  013A62  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15227  013A66  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15228  013A6A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15229  013A6E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15230                           
 15231                           ; BSR set to: 0
 15232  013A72  0012               	return		;funcret
 15233  013A74                     __end_of___lldiv:
 15234                           	opt stack 0
 15235                           tblptru	equ	0xFF8
 15236                           tblptrh	equ	0xFF7
 15237                           tblptrl	equ	0xFF6
 15238                           tablat	equ	0xFF5
 15239                           prodh	equ	0xFF4
 15240                           prodl	equ	0xFF3
 15241                           postinc0	equ	0xFEE
 15242                           wreg	equ	0xFE8
 15243                           postdec1	equ	0xFE5
 15244                           plusw1	equ	0xFE3
 15245                           fsr1h	equ	0xFE2
 15246                           fsr1l	equ	0xFE1
 15247                           indf2	equ	0xFDF
 15248                           postinc2	equ	0xFDE
 15249                           plusw2	equ	0xFDB
 15250                           fsr2h	equ	0xFDA
 15251                           fsr2l	equ	0xFD9
 15252                           status	equ	0xFD8
 15253                           
 15254 ;; *************** function _configFile_readDefault *****************
 15255 ;; Defined at:
 15256 ;;		line 209 in file "config_file.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  1    wreg      void 
 15263 ;; Registers used:
 15264 ;;		wreg, status,2
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15274 ;;Total ram usage:        0 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:   10
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_system_init
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           	psect	text56
 15285  01422A                     __ptext56:
 15286                           	opt stack 0
 15287  01422A                     _configFile_readDefault:
 15288                           	opt stack 19
 15289                           
 15290                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;incstack = 0
 15294  01422A  0E00               	movlw	0
 15295  01422C  0101               	movlb	1	; () banked
 15296  01422E  6FA1               	movwf	_config& (0+255),b
 15297  014230  0ECA               	movlw	202
 15298  014232  6FA2               	movwf	(_config+1)& (0+255),b
 15299  014234  0E08               	movlw	8
 15300  014236  6FA3               	movwf	(_config+2)& (0+255),b
 15301  014238  0E00               	movlw	0
 15302  01423A  6FA4               	movwf	(_config+3)& (0+255),b
 15303                           
 15304                           ;config_file.c: 212: config.inverse_direction = 1;
 15305  01423C  0E01               	movlw	1
 15306  01423E  6FA5               	movwf	(_config+4)& (0+255),b
 15307                           
 15308                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 15309  014240  0E19               	movlw	25
 15310  014242  6FA7               	movwf	(_config+6)& (0+255),b
 15311  014244  0E00               	movlw	0
 15312  014246  6FA6               	movwf	(_config+5)& (0+255),b
 15313                           
 15314                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 15315  014248  0E0B               	movlw	11
 15316  01424A  6FA9               	movwf	(_config+8)& (0+255),b
 15317  01424C  0EB8               	movlw	184
 15318  01424E  6FA8               	movwf	(_config+7)& (0+255),b
 15319                           
 15320                           ;config_file.c: 215: config.minimum_speed = 1;
 15321  014250  0E00               	movlw	0
 15322  014252  6FAB               	movwf	(_config+10)& (0+255),b
 15323  014254  0E01               	movlw	1
 15324  014256  6FAA               	movwf	(_config+9)& (0+255),b
 15325                           
 15326                           ;config_file.c: 216: config.maximum_speed = 380;
 15327  014258  0E01               	movlw	1
 15328  01425A  6FAD               	movwf	(_config+12)& (0+255),b
 15329  01425C  0E7C               	movlw	124
 15330  01425E  6FAC               	movwf	(_config+11)& (0+255),b
 15331                           
 15332                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 15333  014260  0E01               	movlw	1
 15334  014262  6FB1               	movwf	(_config+16)& (0+255),b
 15335  014264  0E31               	movlw	49
 15336  014266  6FB0               	movwf	(_config+15)& (0+255),b
 15337                           
 15338                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 15339  014268  0E01               	movlw	1
 15340  01426A  6FB5               	movwf	(_config+20)& (0+255),b
 15341  01426C  0E31               	movlw	49
 15342  01426E  6FB4               	movwf	(_config+19)& (0+255),b
 15343                           
 15344                           ;config_file.c: 219: config.use_ccw_limit = 0;
 15345  014270  0E00               	movlw	0
 15346  014272  6FBA               	movwf	(_config+25)& (0+255),b
 15347                           
 15348                           ;config_file.c: 220: config.ccw_limit = 35500;
 15349  014274  0E8A               	movlw	138
 15350  014276  6FBC               	movwf	(_config+27)& (0+255),b
 15351  014278  0EAC               	movlw	172
 15352  01427A  6FBB               	movwf	(_config+26)& (0+255),b
 15353                           
 15354                           ;config_file.c: 221: config.use_cw_limit = 0;
 15355  01427C  0E00               	movlw	0
 15356  01427E  6FB7               	movwf	(_config+22)& (0+255),b
 15357                           
 15358                           ;config_file.c: 222: config.cw_limit = 500;
 15359  014280  0E01               	movlw	1
 15360  014282  6FB9               	movwf	(_config+24)& (0+255),b
 15361  014284  0EF4               	movlw	244
 15362  014286  6FB8               	movwf	(_config+23)& (0+255),b
 15363                           
 15364                           ;config_file.c: 223: config.beep_duration = 10;
 15365  014288  0E0A               	movlw	10
 15366  01428A  6FB6               	movwf	(_config+21)& (0+255),b
 15367                           
 15368                           ; BSR set to: 1
 15369  01428C  0012               	return		;funcret
 15370  01428E                     __end_of_configFile_readDefault:
 15371                           	opt stack 0
 15372                           tblptru	equ	0xFF8
 15373                           tblptrh	equ	0xFF7
 15374                           tblptrl	equ	0xFF6
 15375                           tablat	equ	0xFF5
 15376                           prodh	equ	0xFF4
 15377                           prodl	equ	0xFF3
 15378                           postinc0	equ	0xFEE
 15379                           wreg	equ	0xFE8
 15380                           postdec1	equ	0xFE5
 15381                           plusw1	equ	0xFE3
 15382                           fsr1h	equ	0xFE2
 15383                           fsr1l	equ	0xFE1
 15384                           indf2	equ	0xFDF
 15385                           postinc2	equ	0xFDE
 15386                           plusw2	equ	0xFDB
 15387                           fsr2h	equ	0xFDA
 15388                           fsr2l	equ	0xFD9
 15389                           status	equ	0xFD8
 15390                           
 15391 ;; *************** function _configFile_read *****************
 15392 ;; Defined at:
 15393 ;;		line 227 in file "config_file.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;		None
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15398 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15399 ;;  position        4   56[BANK1 ] unsigned long 
 15400 ;;  file_size       4   51[BANK1 ] unsigned long 
 15401 ;;  file_number     1   55[BANK1 ] unsigned char 
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      void 
 15404 ;; Registers used:
 15405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15412 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15413 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15414 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15415 ;;Total ram usage:       60 bytes
 15416 ;; Hardware stack levels used:    1
 15417 ;; Hardware stack levels required when called:   19
 15418 ;; This function calls:
 15419 ;;		__get_item
 15420 ;;		__parse_item
 15421 ;;		_fat_find_file
 15422 ;;		_fat_get_file_size
 15423 ;;		_fat_read_from_file
 15424 ;; This function is called by:
 15425 ;;		_system_init
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text57
 15430  00F420                     __ptext57:
 15431                           	opt stack 0
 15432  00F420                     _configFile_read:
 15433                           	opt stack 10
 15434                           
 15435                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15436                           
 15437                           ; BSR set to: 1
 15438                           ;incstack = 0
 15439  00F420  0EC8               	movlw	low _configFile_name
 15440  00F422  0100               	movlb	0	; () banked
 15441  00F424  6F8B               	movwf	fat_find_file@name& (0+255),b
 15442  00F426  0E02               	movlw	high _configFile_name
 15443  00F428  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15444  00F42A  0ED3               	movlw	low _configFile_extention
 15445  00F42C  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15446  00F42E  0E02               	movlw	high _configFile_extention
 15447  00F430  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15448  00F432  ECE0  F08C         	call	_fat_find_file	;wreg free
 15449  00F436  0101               	movlb	1	; () banked
 15450  00F438  6FFA               	movwf	configFile_read@file_number& (0+255),b
 15451                           
 15452                           ; BSR set to: 1
 15453                           ;config_file.c: 237: if(file_number==0xFF)
 15454  00F43A  29FA               	incf	configFile_read@file_number& (0+255),w,b
 15455  00F43C  B4D8               	btfsc	status,2,c
 15456  00F43E  0012               	return	
 15457                           
 15458                           ; BSR set to: 1
 15459                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 15460                           
 15461                           ; BSR set to: 1
 15462                           
 15463                           ; BSR set to: 1
 15464                           ;config_file.c: 238: {;config_file.c: 240: return;
 15465  00F440  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15466  00F442  ECB6  F09E         	call	_fat_get_file_size
 15467  00F446  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 15468  00F44A  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15469  00F44E  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15470  00F452  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15471                           
 15472                           ;config_file.c: 247: position = 0;
 15473  00F456  0E00               	movlw	0
 15474  00F458  0101               	movlb	1	; () banked
 15475  00F45A  6FFB               	movwf	configFile_read@position& (0+255),b
 15476  00F45C  0E00               	movlw	0
 15477  00F45E  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 15478  00F460  0E00               	movlw	0
 15479  00F462  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 15480  00F464  0E00               	movlw	0
 15481  00F466  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 15482                           
 15483                           ;config_file.c: 248: while((file_size-position)>3)
 15484  00F468  D086               	goto	l2987
 15485  00F46A                     
 15486                           ; BSR set to: 1
 15487                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 15488                           
 15489                           ; BSR set to: 1
 15490  00F46A  0E2D               	movlw	45
 15491  00F46C  25FB               	addwf	configFile_read@position& (0+255),w,b
 15492  00F46E  6FC3               	movwf	??_configFile_read& (0+255),b
 15493  00F470  0E00               	movlw	0
 15494  00F472  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15495  00F474  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 15496  00F476  0E00               	movlw	0
 15497  00F478  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15498  00F47A  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 15499  00F47C  0E00               	movlw	0
 15500  00F47E  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15501  00F480  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 15502  00F482  51C3               	movf	??_configFile_read& (0+255),w,b
 15503  00F484  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 15504  00F486  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 15505  00F488  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15506  00F48A  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 15507  00F48C  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15508  00F48E  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 15509  00F490  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15510  00F492  B0D8               	btfsc	status,0,c
 15511  00F494  D035               	goto	l2989
 15512                           
 15513                           ; BSR set to: 1
 15514                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15515  00F496  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15516  00F49A  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15517  00F49E  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15518  00F4A2  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15519  00F4A6  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 15520  00F4AA  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 15521  00F4AE  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 15522  00F4B2  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 15523  00F4B6  1FC3               	comf	??_configFile_read& (0+255),f,b
 15524  00F4B8  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 15525  00F4BA  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 15526  00F4BC  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 15527  00F4BE  2BC3               	incf	??_configFile_read& (0+255),f,b
 15528  00F4C0  0E00               	movlw	0
 15529  00F4C2  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15530  00F4C4  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15531  00F4C6  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15532  00F4C8  51F6               	movf	configFile_read@file_size& (0+255),w,b
 15533  00F4CA  25C3               	addwf	??_configFile_read& (0+255),w,b
 15534  00F4CC  0100               	movlb	0	; () banked
 15535  00F4CE  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15536  00F4D0  0101               	movlb	1	; () banked
 15537  00F4D2  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15538  00F4D4  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15539  00F4D6  0100               	movlb	0	; () banked
 15540  00F4D8  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15541  00F4DA  0101               	movlb	1	; () banked
 15542  00F4DC  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15543  00F4DE  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15544  00F4E0  0100               	movlb	0	; () banked
 15545  00F4E2  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15546  00F4E4  0101               	movlb	1	; () banked
 15547  00F4E6  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15548  00F4E8  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15549  00F4EA  0100               	movlb	0	; () banked
 15550  00F4EC  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15551  00F4EE  0E00               	movlw	low _ConfigFile_buffer
 15552  00F4F0  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15553  00F4F2  0E08               	movlw	high _ConfigFile_buffer
 15554  00F4F4  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15555  00F4F6  0101               	movlb	1	; () banked
 15556  00F4F8  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15557  00F4FA  EC54  F08D         	call	_fat_read_from_file
 15558                           
 15559                           ;config_file.c: 254: }
 15560  00F4FE  D019               	goto	l2990
 15561  00F500                     l2989:
 15562                           
 15563                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15564  00F500  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15565  00F504  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15566  00F508  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15567  00F50C  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15568  00F510  0E2D               	movlw	45
 15569  00F512  0100               	movlb	0	; () banked
 15570  00F514  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15571  00F516  0E00               	movlw	0
 15572  00F518  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15573  00F51A  0E00               	movlw	0
 15574  00F51C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15575  00F51E  0E00               	movlw	0
 15576  00F520  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15577  00F522  0E00               	movlw	low _ConfigFile_buffer
 15578  00F524  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15579  00F526  0E08               	movlw	high _ConfigFile_buffer
 15580  00F528  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15581  00F52A  0101               	movlb	1	; () banked
 15582  00F52C  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15583  00F52E  EC54  F08D         	call	_fat_read_from_file
 15584  00F532                     l2990:
 15585                           
 15586                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15587  00F532  0ECB               	movlw	low configFile_read@item_string
 15588  00F534  0100               	movlb	0	; () banked
 15589  00F536  6F60               	movwf	__get_item@item_string& (0+255),b
 15590  00F538  0E01               	movlw	high configFile_read@item_string
 15591  00F53A  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15592  00F53C  0EEA               	movlw	low configFile_read@value_string
 15593  00F53E  6F62               	movwf	__get_item@value_string& (0+255),b
 15594  00F540  0E01               	movlw	high configFile_read@value_string
 15595  00F542  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15596  00F544  0E00               	movlw	low _ConfigFile_buffer
 15597  00F546  6F64               	movwf	__get_item@buffer& (0+255),b
 15598  00F548  0E08               	movlw	high _ConfigFile_buffer
 15599  00F54A  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15600  00F54C  ECE2  F07A         	call	__get_item	;wreg free
 15601  00F550  0101               	movlb	1	; () banked
 15602  00F552  6FC3               	movwf	??_configFile_read& (0+255),b
 15603  00F554  51C3               	movf	??_configFile_read& (0+255),w,b
 15604  00F556  27FB               	addwf	configFile_read@position& (0+255),f,b
 15605  00F558  0E00               	movlw	0
 15606  00F55A  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15607  00F55C  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15608  00F55E  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15609                           
 15610                           ; BSR set to: 1
 15611                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 15612  00F560  0ECB               	movlw	low configFile_read@item_string
 15613  00F562  0100               	movlb	0	; () banked
 15614  00F564  6F7A               	movwf	__parse_item@item_string& (0+255),b
 15615  00F566  0E01               	movlw	high configFile_read@item_string
 15616  00F568  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 15617  00F56A  0EEA               	movlw	low configFile_read@value_string
 15618  00F56C  6F7C               	movwf	__parse_item@value_string& (0+255),b
 15619  00F56E  0E01               	movlw	high configFile_read@value_string
 15620  00F570  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 15621  00F572  EC84  F064         	call	__parse_item	;wreg free
 15622  00F576                     l2987:
 15623  00F576  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 15624  00F57A  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 15625  00F57E  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 15626  00F582  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 15627  00F586  0101               	movlb	1	; () banked
 15628  00F588  1FC3               	comf	??_configFile_read& (0+255),f,b
 15629  00F58A  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 15630  00F58C  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 15631  00F58E  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 15632  00F590  2BC3               	incf	??_configFile_read& (0+255),f,b
 15633  00F592  0E00               	movlw	0
 15634  00F594  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15635  00F596  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15636  00F598  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15637  00F59A  51F6               	movf	configFile_read@file_size& (0+255),w,b
 15638  00F59C  25C3               	addwf	??_configFile_read& (0+255),w,b
 15639  00F59E  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 15640  00F5A0  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15641  00F5A2  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15642  00F5A4  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 15643  00F5A6  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15644  00F5A8  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15645  00F5AA  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 15646  00F5AC  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15647  00F5AE  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15648  00F5B0  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 15649  00F5B2  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 15650  00F5B4  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15651  00F5B6  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15652  00F5B8  E104               	bnz	u16511
 15653  00F5BA  0E04               	movlw	4
 15654  00F5BC  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 15655  00F5BE  A0D8               	btfss	status,0,c
 15656  00F5C0  0012               	return	
 15657  00F5C2                     u16511:
 15658  00F5C2  D753               	goto	l2988
 15659  00F5C4                     __end_of_configFile_read:
 15660                           	opt stack 0
 15661                           tblptru	equ	0xFF8
 15662                           tblptrh	equ	0xFF7
 15663                           tblptrl	equ	0xFF6
 15664                           tablat	equ	0xFF5
 15665                           prodh	equ	0xFF4
 15666                           prodl	equ	0xFF3
 15667                           postinc0	equ	0xFEE
 15668                           wreg	equ	0xFE8
 15669                           postdec1	equ	0xFE5
 15670                           plusw1	equ	0xFE3
 15671                           fsr1h	equ	0xFE2
 15672                           fsr1l	equ	0xFE1
 15673                           indf2	equ	0xFDF
 15674                           postinc2	equ	0xFDE
 15675                           plusw2	equ	0xFDB
 15676                           fsr2h	equ	0xFDA
 15677                           fsr2l	equ	0xFD9
 15678                           status	equ	0xFD8
 15679                           
 15680 ;; *************** function _fat_read_from_file *****************
 15681 ;; Defined at:
 15682 ;;		line 752 in file "fat16.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;  file_number     1    wreg     unsigned char 
 15685 ;;  start_byte      4  105[BANK0 ] unsigned long 
 15686 ;;  length          4  109[BANK0 ] unsigned long 
 15687 ;;  data            2  113[BANK0 ] PTR unsigned char 
 15688 ;;		 -> ConfigFile_buffer(512), 
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;  file_number     1  119[BANK0 ] unsigned char 
 15691 ;;  root           32  125[BANK0 ] struct .
 15692 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 15693 ;;  cluster         2  121[BANK0 ] unsigned int 
 15694 ;;  return_code     1  120[BANK0 ] unsigned char 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  1    wreg      unsigned char 
 15697 ;; Registers used:
 15698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15704 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15705 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15706 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15707 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15708 ;;Total ram usage:       52 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:   18
 15711 ;; This function calls:
 15712 ;;		_fat_get_file_information
 15713 ;;		_fat_read_from_file_fast
 15714 ;; This function is called by:
 15715 ;;		_configFile_read
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text58
 15720  011AA8                     __ptext58:
 15721                           	opt stack 0
 15722  011AA8                     _fat_read_from_file:
 15723                           	opt stack 10
 15724                           
 15725                           ; BSR set to: 1
 15726                           ;incstack = 0
 15727                           ;fat_read_from_file@file_number stored from wreg
 15728  011AA8  0100               	movlb	0	; () banked
 15729  011AAA  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 15730                           
 15731                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 15732  011AAC  0EDD               	movlw	low fat_read_from_file@root
 15733  011AAE  0100               	movlb	0	; () banked
 15734  011AB0  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 15735  011AB2  0E00               	movlw	high fat_read_from_file@root
 15736  011AB4  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 15737  011AB6  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 15738  011AB8  EC79  F09E         	call	_fat_get_file_information
 15739  011ABC  0100               	movlb	0	; () banked
 15740  011ABE  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 15741                           
 15742                           ; BSR set to: 0
 15743                           ;fat16.c: 761: if(return_code!=0x00)
 15744  011AC0  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 15745  011AC2  A4D8               	btfss	status,2,c
 15746  011AC4  0012               	return	
 15747                           
 15748                           ; BSR set to: 0
 15749                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 15750                           
 15751                           ; BSR set to: 0
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 15755  011AC6  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 15756  011AC8  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15757  011ACA  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15758  011ACC  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15759  011ACE  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15760  011AD0  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15761  011AD2  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15762  011AD4  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15763  011AD6  A0D8               	btfss	status,0,c
 15764  011AD8  0012               	return	
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 15768                           
 15769                           ; BSR set to: 0
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 15773  011ADA  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 15774  011ADC  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 15775  011ADE  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 15776  011AE0  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 15777  011AE2  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15778  011AE4  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 15779  011AE6  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 15780  011AE8  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15781  011AEA  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 15782  011AEC  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 15783  011AEE  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15784  011AF0  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 15785  011AF2  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 15786  011AF4  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15787  011AF6  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 15788  011AF8  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15789  011AFA  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 15790  011AFC  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15791  011AFE  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 15792  011B00  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15793  011B02  B0D8               	btfsc	status,0,c
 15794  011B04  D01D               	goto	l1877
 15795                           
 15796                           ; BSR set to: 0
 15797                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 15798  011B06  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 15799  011B0A  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 15800  011B0E  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 15801  011B12  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 15802  011B16  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 15803  011B18  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 15804  011B1A  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 15805  011B1C  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 15806  011B1E  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 15807  011B20  0E00               	movlw	0
 15808  011B22  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 15809  011B24  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 15810  011B26  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 15811  011B28  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 15812  011B2A  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 15813  011B2C  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15814  011B2E  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 15815  011B30  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 15816  011B32  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15817  011B34  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 15818  011B36  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 15819  011B38  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15820  011B3A  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 15821  011B3C  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 15822  011B3E  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15823  011B40                     l1877:
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 15827                           
 15828                           ; BSR set to: 0
 15829  011B40  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 15830  011B44  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;fat16.c: 782: cluster_number = 0;
 15834  011B48  0E00               	movlw	0
 15835  011B4A  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 15836  011B4C  0E00               	movlw	0
 15837  011B4E  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 15838                           
 15839                           ; BSR set to: 0
 15840                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 15841  011B50  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 15842  011B54  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 15843  011B58  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 15844  011B5C  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 15845  011B60  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 15846  011B64  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 15847  011B68  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 15848  011B6C  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 15849  011B70  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 15850  011B74  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 15851  011B78  0ED9               	movlw	low fat_read_from_file@cluster
 15852  011B7A  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 15853  011B7C  0E00               	movlw	high fat_read_from_file@cluster
 15854  011B7E  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 15855  011B80  0EDB               	movlw	low fat_read_from_file@cluster_number
 15856  011B82  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 15857  011B84  0E00               	movlw	high fat_read_from_file@cluster_number
 15858  011B86  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 15859  011B88  EC38  F074         	call	_fat_read_from_file_fast	;wreg free
 15860  011B8C  0012               	return	
 15861  011B8E                     __end_of_fat_read_from_file:
 15862                           	opt stack 0
 15863                           tblptru	equ	0xFF8
 15864                           tblptrh	equ	0xFF7
 15865                           tblptrl	equ	0xFF6
 15866                           tablat	equ	0xFF5
 15867                           prodh	equ	0xFF4
 15868                           prodl	equ	0xFF3
 15869                           postinc0	equ	0xFEE
 15870                           wreg	equ	0xFE8
 15871                           postdec1	equ	0xFE5
 15872                           plusw1	equ	0xFE3
 15873                           fsr1h	equ	0xFE2
 15874                           fsr1l	equ	0xFE1
 15875                           indf2	equ	0xFDF
 15876                           postinc2	equ	0xFDE
 15877                           plusw2	equ	0xFDB
 15878                           fsr2h	equ	0xFDA
 15879                           fsr2l	equ	0xFD9
 15880                           status	equ	0xFD8
 15881                           
 15882 ;; *************** function _fat_read_from_file_fast *****************
 15883 ;; Defined at:
 15884 ;;		line 788 in file "fat16.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  start_byte      4   65[BANK0 ] unsigned long 
 15887 ;;  length          4   69[BANK0 ] unsigned long 
 15888 ;;  data            2   73[BANK0 ] PTR unsigned char 
 15889 ;;		 -> ConfigFile_buffer(512), 
 15890 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 15891 ;;		 -> fat_read_from_file@cluster(2), 
 15892 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 15893 ;;		 -> fat_read_from_file@cluster_number(2), 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;  position        4  101[BANK0 ] unsigned long 
 15896 ;;  read_length     2   99[BANK0 ] unsigned int 
 15897 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 15898 ;;  offset          2   95[BANK0 ] unsigned int 
 15899 ;;  working_clus    2   93[BANK0 ] unsigned int 
 15900 ;;  sector          2   91[BANK0 ] unsigned int 
 15901 ;; Return value:  Size  Location     Type
 15902 ;;                  1    wreg      unsigned char 
 15903 ;; Registers used:
 15904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15910 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15911 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15912 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15913 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15914 ;;Total ram usage:       40 bytes
 15915 ;; Hardware stack levels used:    1
 15916 ;; Hardware stack levels required when called:   17
 15917 ;; This function calls:
 15918 ;;		__data_sector_from_cluster
 15919 ;;		__find_nth_cluster
 15920 ;;		__read_fat
 15921 ;;		_flash_partial_read
 15922 ;; This function is called by:
 15923 ;;		_fat_read_from_file
 15924 ;; This function uses a non-reentrant model
 15925 ;;
 15926                           
 15927                           	psect	text59
 15928  00E870                     __ptext59:
 15929                           	opt stack 0
 15930  00E870                     _fat_read_from_file_fast:
 15931                           	opt stack 10
 15932                           
 15933                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 15934                           
 15935                           ;incstack = 0
 15936  00E870  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 15937  00E874  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 15938  00E878  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 15939  00E87C  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 15940  00E880  0E0A               	movlw	10
 15941  00E882  D006               	goto	u13620
 15942  00E884                     u13625:
 15943  00E884  0100               	movlb	0	; () banked
 15944  00E886  90D8               	bcf	status,0,c
 15945  00E888  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 15946  00E88A  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 15947  00E88C  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15948  00E88E  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 15949  00E890                     u13620:
 15950  00E890  2EE8               	decfsz	wreg,f,c
 15951  00E892  D7F8               	goto	u13625
 15952  00E894  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 15953  00E898  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 15957  00E89C  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15958  00E8A0  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15959  00E8A4  50DE               	movf	postinc2,w,c
 15960  00E8A6  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 15961  00E8A8  50DE               	movf	postinc2,w,c
 15962  00E8AA  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 15963  00E8AC  B0D8               	btfsc	status,0,c
 15964  00E8AE  D002               	goto	l1880
 15965                           
 15966                           ; BSR set to: 0
 15967                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 15968  00E8B0  0EFF               	movlw	255
 15969                           
 15970                           ; BSR set to: 0
 15971  00E8B2  0012               	return	
 15972  00E8B4                     l1880:
 15973                           
 15974                           ; BSR set to: 0
 15975                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 15976                           
 15977                           ; BSR set to: 0
 15978  00E8B4  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15979  00E8B8  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15980  00E8BC  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 15981  00E8C0  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 15982  00E8C4  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15983  00E8C8  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15984  00E8CC  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 15985  00E8D0  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 15986  00E8D4  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 15987  00E8D6  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15988  00E8D8  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 15989  00E8DA  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15990  00E8DC  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 15991  00E8DE  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 15992  00E8E0  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 15993  00E8E2  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 15994  00E8E4  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 15995  00E8E6  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 15996  00E8E8  EC9C  F098         	call	__find_nth_cluster	;wreg free
 15997  00E8EC  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15998  00E8F0  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15999  00E8F4  0100               	movlb	0	; () banked
 16000  00E8F6  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16001  00E8FA  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16002                           
 16003                           ; BSR set to: 0
 16004                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16005  00E8FE  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16006  00E902  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16007  00E906  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16008  00E90A  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;fat16.c: 814: working_cluster = (*cluster);
 16012  00E90E  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16013  00E912  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16014  00E916  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16015  00E91A  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16016                           
 16017                           ; BSR set to: 0
 16018                           ;fat16.c: 817: position = (needed_cluster << 9);
 16019  00E91E  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16020  00E922  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16021  00E926  0E09               	movlw	9
 16022  00E928                     u13645:
 16023  00E928  90D8               	bcf	status,0,c
 16024  00E92A  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16025  00E92C  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16026  00E92E  2EE8               	decfsz	wreg,f,c
 16027  00E930  D7FB               	goto	u13645
 16028  00E932  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16029  00E936  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16030  00E93A  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16031  00E93C  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;fat16.c: 818: offset = start_byte - position;
 16035  00E93E  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16036  00E942  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16037  00E946  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16038  00E948  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16039  00E94A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16040  00E94C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16041  00E94E  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16042  00E950  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16043  00E952  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16044  00E954  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16045  00E956  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16046  00E958  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;fat16.c: 821: position = 0;
 16050  00E95A  0E00               	movlw	0
 16051  00E95C  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16052  00E95E  0E00               	movlw	0
 16053  00E960  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16054  00E962  0E00               	movlw	0
 16055  00E964  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16056  00E966  0E00               	movlw	0
 16057  00E968  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16058                           
 16059                           ;fat16.c: 822: while(position < length)
 16060  00E96A  D089               	goto	l1882
 16061  00E96C                     
 16062                           ; BSR set to: 0
 16063                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16064                           
 16065                           ; BSR set to: 0
 16066  00E96C  0E02               	movlw	2
 16067  00E96E  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16068  00E970  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16069  00E972  A4D8               	btfss	status,2,c
 16070  00E974  D00F               	goto	l1884
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16074  00E976  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16075  00E97A  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16076  00E97E  EC78  F0A3         	call	__read_fat	;wreg free
 16077  00E982  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16078  00E986  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16079                           
 16080                           ;fat16.c: 829: offset = 0;
 16081  00E98A  0E00               	movlw	0
 16082  00E98C  0100               	movlb	0	; () banked
 16083  00E98E  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16084  00E990  0E00               	movlw	0
 16085  00E992  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16086  00E994                     l1884:
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16090                           
 16091                           ; BSR set to: 0
 16092  00E994  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16093  00E998  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16094  00E99C  EC14  F0AC         	call	__data_sector_from_cluster	;wreg free
 16095  00E9A0  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16096  00E9A4  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16097                           
 16098                           ;fat16.c: 836: read_length = 512 - offset;
 16099  00E9A8  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16100  00E9AC  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16101  00E9B0  0100               	movlb	0	; () banked
 16102  00E9B2  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16103  00E9B4  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16104  00E9B6  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16105  00E9B8  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16106  00E9BA  0E00               	movlw	0
 16107  00E9BC  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16108  00E9BE  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16109  00E9C0  0E02               	movlw	2
 16110  00E9C2  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16111  00E9C4  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16112                           
 16113                           ; BSR set to: 0
 16114                           ;fat16.c: 837: if(read_length > (length-position))
 16115  00E9C6  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16116  00E9C8  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16117  00E9CA  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16118  00E9CC  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16119  00E9CE  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16120  00E9D0  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16121  00E9D2  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16122  00E9D6  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16123  00E9DA  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16124  00E9DE  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16125  00E9E2  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16126  00E9E4  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16127  00E9E6  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16128  00E9E8  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16129  00E9EA  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16130  00E9EC  0E00               	movlw	0
 16131  00E9EE  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16132  00E9F0  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16133  00E9F2  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16134  00E9F4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16135  00E9F6  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16136  00E9F8  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16137  00E9FA  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16138  00E9FC  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16139  00E9FE  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16140  00EA00  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16141  00EA02  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16142  00EA04  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16143  00EA06  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16144  00EA08  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16145  00EA0A  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16146  00EA0C  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16147  00EA0E  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16148  00EA10  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16149  00EA12  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16150  00EA14  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16151  00EA16  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16152  00EA18  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16153  00EA1A  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16154  00EA1C  B0D8               	btfsc	status,0,c
 16155  00EA1E  D00E               	goto	l1885
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16159  00EA20  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16160  00EA24  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16161  00EA28  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16162  00EA2A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16163  00EA2C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16164  00EA2E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16165  00EA30  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16166  00EA32  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16167  00EA34  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16168  00EA36  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16169  00EA38  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16170  00EA3A  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16171  00EA3C                     l1885:
 16172                           
 16173                           ; BSR set to: 0
 16174                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16175                           
 16176                           ; BSR set to: 0
 16177  00EA3C  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16178  00EA40  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16179  00EA44  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16180  00EA48  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16181  00EA4C  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16182  00EA50  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16183  00EA54  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16184  00EA56  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16185  00EA58  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16186  00EA5A  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16187  00EA5C  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16188  00EA5E  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16189  00EA60  ECD4  F0AA         	call	_flash_partial_read	;wreg free
 16190                           
 16191                           ;fat16.c: 847: position += read_length;
 16192  00EA64  0100               	movlb	0	; () banked
 16193  00EA66  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16194  00EA68  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16195  00EA6A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16196  00EA6C  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16197  00EA6E  0E00               	movlw	0
 16198  00EA70  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16199  00EA72  0E00               	movlw	0
 16200  00EA74  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16201                           
 16202                           ; BSR set to: 0
 16203                           ;fat16.c: 848: offset += read_length;
 16204  00EA76  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16205  00EA78  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16206  00EA7A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16207  00EA7C  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16208  00EA7E                     l1882:
 16209                           
 16210                           ; BSR set to: 0
 16211                           
 16212                           ; BSR set to: 0
 16213  00EA7E  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16214  00EA80  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16215  00EA82  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16216  00EA84  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16217  00EA86  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16218  00EA88  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16219  00EA8A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16220  00EA8C  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16221  00EA8E  A0D8               	btfss	status,0,c
 16222  00EA90  D76D               	goto	l1883
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16226                           
 16227                           ; BSR set to: 0
 16228  00EA92  0E00               	movlw	0
 16229  00EA94  0012               	return	
 16230  00EA96                     __end_of_fat_read_from_file_fast:
 16231                           	opt stack 0
 16232                           tblptru	equ	0xFF8
 16233                           tblptrh	equ	0xFF7
 16234                           tblptrl	equ	0xFF6
 16235                           tablat	equ	0xFF5
 16236                           prodh	equ	0xFF4
 16237                           prodl	equ	0xFF3
 16238                           postinc0	equ	0xFEE
 16239                           wreg	equ	0xFE8
 16240                           postdec1	equ	0xFE5
 16241                           plusw1	equ	0xFE3
 16242                           fsr1h	equ	0xFE2
 16243                           fsr1l	equ	0xFE1
 16244                           indf2	equ	0xFDF
 16245                           postinc2	equ	0xFDE
 16246                           postdec2	equ	0xFDD
 16247                           plusw2	equ	0xFDB
 16248                           fsr2h	equ	0xFDA
 16249                           fsr2l	equ	0xFD9
 16250                           status	equ	0xFD8
 16251                           
 16252 ;; *************** function __find_nth_cluster *****************
 16253 ;; Defined at:
 16254 ;;		line 183 in file "fat16.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;  cluster         2   55[BANK0 ] unsigned int 
 16257 ;;  n               2   57[BANK0 ] unsigned int 
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;  sector          2   63[BANK0 ] unsigned int 
 16260 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16261 ;;  offset          2   59[BANK0 ] unsigned int 
 16262 ;; Return value:  Size  Location     Type
 16263 ;;                  2   55[BANK0 ] unsigned int 
 16264 ;; Registers used:
 16265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16266 ;; Tracked objects:
 16267 ;;		On entry : 0/0
 16268 ;;		On exit  : 0/0
 16269 ;;		Unchanged: 0/0
 16270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16272 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16274 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16275 ;;Total ram usage:       10 bytes
 16276 ;; Hardware stack levels used:    1
 16277 ;; Hardware stack levels required when called:   16
 16278 ;; This function calls:
 16279 ;;		__fat_offset_from_cluster
 16280 ;;		__fat_sector_from_cluster
 16281 ;;		__read_fat
 16282 ;;		__read_value_from_offset
 16283 ;;		_flash_sector_read
 16284 ;; This function is called by:
 16285 ;;		_fat_read_from_file_fast
 16286 ;;		_fat_modify_file
 16287 ;;		_fat_copy_sector_to_buffer
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           	psect	text60
 16292  013138                     __ptext60:
 16293                           	opt stack 0
 16294  013138                     __find_nth_cluster:
 16295                           	opt stack 11
 16296                           
 16297                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;incstack = 0
 16301  013138  0E00               	movlw	0
 16302  01313A  0100               	movlb	0	; () banked
 16303  01313C  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16304  01313E  0E00               	movlw	0
 16305  013140  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16306                           
 16307                           ; BSR set to: 0
 16308                           ;fat16.c: 190: if(n==1)
 16309  013142  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16310  013144  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16311  013146  A4D8               	btfss	status,2,c
 16312  013148  D040               	goto	l1767
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16316  01314A  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16317  01314E  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16318  013152  EC78  F0A3         	call	__read_fat	;wreg free
 16319  013156  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16320  01315A  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16321  01315E  0012               	return	
 16322  013160                     
 16323                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16324  013160  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16325  013164  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16326  013168  ECA1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 16327  01316C  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16328  013170  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16329                           
 16330                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16331  013174  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16332  013178  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16333  01317C  ECAE  F0AB         	call	__fat_offset_from_cluster	;wreg free
 16334  013180  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16335  013184  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16336                           
 16337                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16338  013188  0100               	movlb	0	; () banked
 16339  01318A  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16340  01318C  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16341  01318E  E104               	bnz	u12810
 16342  013190  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16343  013192  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16344  013194  B4D8               	btfsc	status,2,c
 16345  013196  D00A               	goto	l1769
 16346  013198                     u12810:
 16347                           
 16348                           ; BSR set to: 0
 16349                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16350  013198  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16351  01319C  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16352  0131A0  0E00               	movlw	low _buffer
 16353  0131A2  6F89               	movwf	flash_sector_read@data& (0+255),b
 16354  0131A4  0E0A               	movlw	high _buffer
 16355  0131A6  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16356  0131A8  ECC0  F0AA         	call	_flash_sector_read	;wreg free
 16357  0131AC                     l1769:
 16358                           
 16359                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16360  0131AC  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16361  0131B0  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16362  0131B4  0E00               	movlw	low _buffer
 16363  0131B6  0100               	movlb	0	; () banked
 16364  0131B8  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16365  0131BA  0E0A               	movlw	high _buffer
 16366  0131BC  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16367  0131BE  ECDB  F0A6         	call	__read_value_from_offset	;wreg free
 16368  0131C2  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16369  0131C6  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16370  0131CA                     l1767:
 16371  0131CA  0100               	movlb	0	; () banked
 16372  0131CC  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16373  0131CE  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16374  0131D0  A4D8               	btfss	status,2,c
 16375  0131D2  D7C6               	goto	l1768
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16379  0131D4  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16380  0131D8  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16381  0131DC  0012               	return		;funcret
 16382  0131DE                     __end_of__find_nth_cluster:
 16383                           	opt stack 0
 16384                           tblptru	equ	0xFF8
 16385                           tblptrh	equ	0xFF7
 16386                           tblptrl	equ	0xFF6
 16387                           tablat	equ	0xFF5
 16388                           prodh	equ	0xFF4
 16389                           prodl	equ	0xFF3
 16390                           postinc0	equ	0xFEE
 16391                           wreg	equ	0xFE8
 16392                           postdec1	equ	0xFE5
 16393                           plusw1	equ	0xFE3
 16394                           fsr1h	equ	0xFE2
 16395                           fsr1l	equ	0xFE1
 16396                           indf2	equ	0xFDF
 16397                           postinc2	equ	0xFDE
 16398                           postdec2	equ	0xFDD
 16399                           plusw2	equ	0xFDB
 16400                           fsr2h	equ	0xFDA
 16401                           fsr2l	equ	0xFD9
 16402                           status	equ	0xFD8
 16403                           
 16404 ;; *************** function __read_value_from_offset *****************
 16405 ;; Defined at:
 16406 ;;		line 115 in file "fat16.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;  offset          2    0[BANK0 ] unsigned int 
 16409 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16410 ;;		 -> buffer(512), 
 16411 ;; Auto vars:     Size  Location     Type
 16412 ;;  value           2    7[BANK0 ] unsigned int 
 16413 ;; Return value:  Size  Location     Type
 16414 ;;                  2    0[BANK0 ] unsigned int 
 16415 ;; Registers used:
 16416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16417 ;; Tracked objects:
 16418 ;;		On entry : 0/0
 16419 ;;		On exit  : 0/0
 16420 ;;		Unchanged: 0/0
 16421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16424 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16425 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16426 ;;Total ram usage:        9 bytes
 16427 ;; Hardware stack levels used:    1
 16428 ;; Hardware stack levels required when called:   10
 16429 ;; This function calls:
 16430 ;;		Nothing
 16431 ;; This function is called by:
 16432 ;;		__find_nth_cluster
 16433 ;;		__make_cluster_chain
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           	psect	text61
 16438  014DB6                     __ptext61:
 16439                           	opt stack 0
 16440  014DB6                     __read_value_from_offset:
 16441                           	opt stack 16
 16442                           
 16443                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16444                           
 16445                           ;incstack = 0
 16446  014DB6  0E01               	movlw	1
 16447  014DB8  0100               	movlb	0	; () banked
 16448  014DBA  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16449  014DBC  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16450  014DBE  0E00               	movlw	0
 16451  014DC0  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16452  014DC2  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16453  014DC4  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16454  014DC6  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16455  014DC8  6ED9               	movwf	fsr2l,c
 16456  014DCA  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16457  014DCC  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16458  014DCE  6EDA               	movwf	fsr2h,c
 16459  014DD0  50DF               	movf	indf2,w,c
 16460  014DD2  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16461  014DD4  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16462  014DD6  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16463  014DD8  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;fat16.c: 119: value <<= 8;
 16467  014DDA  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16468  014DDC  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16469  014DDE  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;fat16.c: 120: value |= buffer[offset];
 16473  014DE0  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16474  014DE2  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16475  014DE4  6ED9               	movwf	fsr2l,c
 16476  014DE6  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16477  014DE8  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16478  014DEA  6EDA               	movwf	fsr2h,c
 16479  014DEC  50DF               	movf	indf2,w,c
 16480  014DEE  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16481  014DF0  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16482  014DF2  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;fat16.c: 121: return value;
 16486  014DF4  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16487  014DF8  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16488  014DFC  0012               	return	
 16489  014DFE                     __end_of__read_value_from_offset:
 16490                           	opt stack 0
 16491                           tblptru	equ	0xFF8
 16492                           tblptrh	equ	0xFF7
 16493                           tblptrl	equ	0xFF6
 16494                           tablat	equ	0xFF5
 16495                           prodh	equ	0xFF4
 16496                           prodl	equ	0xFF3
 16497                           postinc0	equ	0xFEE
 16498                           wreg	equ	0xFE8
 16499                           postdec1	equ	0xFE5
 16500                           plusw1	equ	0xFE3
 16501                           fsr1h	equ	0xFE2
 16502                           fsr1l	equ	0xFE1
 16503                           indf2	equ	0xFDF
 16504                           postinc2	equ	0xFDE
 16505                           postdec2	equ	0xFDD
 16506                           plusw2	equ	0xFDB
 16507                           fsr2h	equ	0xFDA
 16508                           fsr2l	equ	0xFD9
 16509                           status	equ	0xFD8
 16510                           
 16511 ;; *************** function __read_fat *****************
 16512 ;; Defined at:
 16513 ;;		line 457 in file "fat16.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;  cluster         2   47[BANK0 ] unsigned int 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;  value           2   53[BANK0 ] unsigned int 
 16518 ;;  offset          2   51[BANK0 ] unsigned int 
 16519 ;;  sector          2   49[BANK0 ] unsigned int 
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  2   47[BANK0 ] unsigned int 
 16522 ;; Registers used:
 16523 ;;		wreg, status,2, status,0, cstack
 16524 ;; Tracked objects:
 16525 ;;		On entry : 0/0
 16526 ;;		On exit  : 0/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16530 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16532 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16533 ;;Total ram usage:        8 bytes
 16534 ;; Hardware stack levels used:    1
 16535 ;; Hardware stack levels required when called:   15
 16536 ;; This function calls:
 16537 ;;		__fat_offset_from_cluster
 16538 ;;		__fat_sector_from_cluster
 16539 ;;		_flash_partial_read
 16540 ;; This function is called by:
 16541 ;;		__find_nth_cluster
 16542 ;;		_fat_read_from_file_fast
 16543 ;;		_fat_modify_file
 16544 ;; This function uses a non-reentrant model
 16545 ;;
 16546                           
 16547                           	psect	text62
 16548  0146F0                     __ptext62:
 16549                           	opt stack 0
 16550  0146F0                     __read_fat:
 16551                           	opt stack 12
 16552                           
 16553                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;incstack = 0
 16557  0146F0  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16558  0146F4  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16559  0146F8  ECA1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 16560  0146FC  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16561  014700  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16562                           
 16563                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16564  014704  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16565  014708  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16566  01470C  ECAE  F0AB         	call	__fat_offset_from_cluster	;wreg free
 16567  014710  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16568  014714  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16569                           
 16570                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16571  014718  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16572  01471C  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16573  014720  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16574  014724  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16575  014728  0E00               	movlw	0
 16576  01472A  0100               	movlb	0	; () banked
 16577  01472C  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16578  01472E  0E02               	movlw	2
 16579  014730  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16580  014732  0E95               	movlw	low __read_fat@value
 16581  014734  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16582  014736  0E00               	movlw	high __read_fat@value
 16583  014738  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16584  01473A  ECD4  F0AA         	call	_flash_partial_read	;wreg free
 16585                           
 16586                           ;fat16.c: 471: return value;
 16587  01473E  C095  F08F         	movff	__read_fat@value,?__read_fat
 16588  014742  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16589  014746  0012               	return	
 16590  014748                     __end_of__read_fat:
 16591                           	opt stack 0
 16592                           tblptru	equ	0xFF8
 16593                           tblptrh	equ	0xFF7
 16594                           tblptrl	equ	0xFF6
 16595                           tablat	equ	0xFF5
 16596                           prodh	equ	0xFF4
 16597                           prodl	equ	0xFF3
 16598                           postinc0	equ	0xFEE
 16599                           wreg	equ	0xFE8
 16600                           postdec1	equ	0xFE5
 16601                           plusw1	equ	0xFE3
 16602                           fsr1h	equ	0xFE2
 16603                           fsr1l	equ	0xFE1
 16604                           indf2	equ	0xFDF
 16605                           postinc2	equ	0xFDE
 16606                           postdec2	equ	0xFDD
 16607                           plusw2	equ	0xFDB
 16608                           fsr2h	equ	0xFDA
 16609                           fsr2l	equ	0xFD9
 16610                           status	equ	0xFD8
 16611                           
 16612 ;; *************** function __fat_sector_from_cluster *****************
 16613 ;; Defined at:
 16614 ;;		line 76 in file "fat16.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;  cluster         2    0[BANK0 ] unsigned int 
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;		None
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  2    0[BANK0 ] unsigned int 
 16621 ;; Registers used:
 16622 ;;		wreg, status,2, status,0
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16632 ;;Total ram usage:        2 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:   10
 16635 ;; This function calls:
 16636 ;;		Nothing
 16637 ;; This function is called by:
 16638 ;;		__find_nth_cluster
 16639 ;;		__make_cluster_chain
 16640 ;;		__read_fat
 16641 ;; This function uses a non-reentrant model
 16642 ;;
 16643                           
 16644                           	psect	text63
 16645  015742                     __ptext63:
 16646                           	opt stack 0
 16647  015742                     __fat_sector_from_cluster:
 16648                           	opt stack 16
 16649                           
 16650                           ;fat16.c: 78: cluster >>= 8;
 16651                           
 16652                           ;incstack = 0
 16653  015742  0100               	movlb	0	; () banked
 16654  015744  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16655  015746  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16656  015748  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;fat16.c: 79: cluster += 2;
 16660  01574A  0E02               	movlw	2
 16661  01574C  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 16662  01574E  0E00               	movlw	0
 16663  015750  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 16664                           
 16665                           ; BSR set to: 0
 16666                           ;fat16.c: 80: return cluster;
 16667  015752  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 16668  015756  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 16669  01575A  0012               	return	
 16670  01575C                     __end_of__fat_sector_from_cluster:
 16671                           	opt stack 0
 16672                           tblptru	equ	0xFF8
 16673                           tblptrh	equ	0xFF7
 16674                           tblptrl	equ	0xFF6
 16675                           tablat	equ	0xFF5
 16676                           prodh	equ	0xFF4
 16677                           prodl	equ	0xFF3
 16678                           postinc0	equ	0xFEE
 16679                           wreg	equ	0xFE8
 16680                           postdec1	equ	0xFE5
 16681                           plusw1	equ	0xFE3
 16682                           fsr1h	equ	0xFE2
 16683                           fsr1l	equ	0xFE1
 16684                           indf2	equ	0xFDF
 16685                           postinc2	equ	0xFDE
 16686                           postdec2	equ	0xFDD
 16687                           plusw2	equ	0xFDB
 16688                           fsr2h	equ	0xFDA
 16689                           fsr2l	equ	0xFD9
 16690                           status	equ	0xFD8
 16691                           
 16692 ;; *************** function __fat_offset_from_cluster *****************
 16693 ;; Defined at:
 16694 ;;		line 83 in file "fat16.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;  cluster         2    0[BANK0 ] unsigned int 
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;		None
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  2    0[BANK0 ] unsigned int 
 16701 ;; Registers used:
 16702 ;;		wreg, status,2, status,0
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16712 ;;Total ram usage:        2 bytes
 16713 ;; Hardware stack levels used:    1
 16714 ;; Hardware stack levels required when called:   10
 16715 ;; This function calls:
 16716 ;;		Nothing
 16717 ;; This function is called by:
 16718 ;;		__find_nth_cluster
 16719 ;;		__make_cluster_chain
 16720 ;;		__read_fat
 16721 ;; This function uses a non-reentrant model
 16722 ;;
 16723                           
 16724                           	psect	text64
 16725  01575C                     __ptext64:
 16726                           	opt stack 0
 16727  01575C                     __fat_offset_from_cluster:
 16728                           	opt stack 16
 16729                           
 16730                           ;fat16.c: 85: cluster &= 0xFF;
 16731                           
 16732                           ; BSR set to: 0
 16733                           ;incstack = 0
 16734  01575C  0EFF               	movlw	255
 16735  01575E  0100               	movlb	0	; () banked
 16736  015760  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16737  015762  0E00               	movlw	0
 16738  015764  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;fat16.c: 86: cluster <<= 1;
 16742  015766  90D8               	bcf	status,0,c
 16743  015768  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16744  01576A  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16745                           
 16746                           ; BSR set to: 0
 16747                           ;fat16.c: 87: return cluster;
 16748  01576C  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 16749  015770  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 16750  015774  0012               	return	
 16751  015776                     __end_of__fat_offset_from_cluster:
 16752                           	opt stack 0
 16753                           tblptru	equ	0xFF8
 16754                           tblptrh	equ	0xFF7
 16755                           tblptrl	equ	0xFF6
 16756                           tablat	equ	0xFF5
 16757                           prodh	equ	0xFF4
 16758                           prodl	equ	0xFF3
 16759                           postinc0	equ	0xFEE
 16760                           wreg	equ	0xFE8
 16761                           postdec1	equ	0xFE5
 16762                           plusw1	equ	0xFE3
 16763                           fsr1h	equ	0xFE2
 16764                           fsr1l	equ	0xFE1
 16765                           indf2	equ	0xFDF
 16766                           postinc2	equ	0xFDE
 16767                           postdec2	equ	0xFDD
 16768                           plusw2	equ	0xFDB
 16769                           fsr2h	equ	0xFDA
 16770                           fsr2l	equ	0xFD9
 16771                           status	equ	0xFD8
 16772                           
 16773 ;; *************** function __data_sector_from_cluster *****************
 16774 ;; Defined at:
 16775 ;;		line 71 in file "fat16.c"
 16776 ;; Parameters:    Size  Location     Type
 16777 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16778 ;; Auto vars:     Size  Location     Type
 16779 ;;		None
 16780 ;; Return value:  Size  Location     Type
 16781 ;;                  2    0[BANK0 ] unsigned int 
 16782 ;; Registers used:
 16783 ;;		wreg, status,2, status,0
 16784 ;; Tracked objects:
 16785 ;;		On entry : 0/0
 16786 ;;		On exit  : 0/0
 16787 ;;		Unchanged: 0/0
 16788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16793 ;;Total ram usage:        2 bytes
 16794 ;; Hardware stack levels used:    1
 16795 ;; Hardware stack levels required when called:   10
 16796 ;; This function calls:
 16797 ;;		Nothing
 16798 ;; This function is called by:
 16799 ;;		_fat_read_from_file_fast
 16800 ;;		_fat_modify_file
 16801 ;;		_fat_copy_sector_to_buffer
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           	psect	text65
 16806  015828                     __ptext65:
 16807                           	opt stack 0
 16808  015828                     __data_sector_from_cluster:
 16809                           	opt stack 17
 16810                           
 16811                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;incstack = 0
 16815  015828  0E24               	movlw	36
 16816  01582A  0100               	movlb	0	; () banked
 16817  01582C  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 16818  01582E  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 16819  015830  0E00               	movlw	0
 16820  015832  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16821  015834  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 16822  015836  0012               	return	
 16823  015838                     __end_of__data_sector_from_cluster:
 16824                           	opt stack 0
 16825                           tblptru	equ	0xFF8
 16826                           tblptrh	equ	0xFF7
 16827                           tblptrl	equ	0xFF6
 16828                           tablat	equ	0xFF5
 16829                           prodh	equ	0xFF4
 16830                           prodl	equ	0xFF3
 16831                           postinc0	equ	0xFEE
 16832                           wreg	equ	0xFE8
 16833                           postdec1	equ	0xFE5
 16834                           plusw1	equ	0xFE3
 16835                           fsr1h	equ	0xFE2
 16836                           fsr1l	equ	0xFE1
 16837                           indf2	equ	0xFDF
 16838                           postinc2	equ	0xFDE
 16839                           postdec2	equ	0xFDD
 16840                           plusw2	equ	0xFDB
 16841                           fsr2h	equ	0xFDA
 16842                           fsr2l	equ	0xFD9
 16843                           status	equ	0xFD8
 16844                           
 16845 ;; *************** function _fat_get_file_information *****************
 16846 ;; Defined at:
 16847 ;;		line 1421 in file "fat16.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;  file_number     1    wreg     unsigned char 
 16850 ;;  data            2   47[BANK0 ] PTR struct .
 16851 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 16852 ;; Auto vars:     Size  Location     Type
 16853 ;;  file_number     1   54[BANK0 ] unsigned char 
 16854 ;;  offset          2   52[BANK0 ] unsigned int 
 16855 ;;  root_sector     2   50[BANK0 ] unsigned int 
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  1    wreg      unsigned char 
 16858 ;; Registers used:
 16859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16868 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16869 ;;Total ram usage:        8 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; Hardware stack levels required when called:   15
 16872 ;; This function calls:
 16873 ;;		__offset_from_file_number
 16874 ;;		__sector_from_file_number
 16875 ;;		_flash_partial_read
 16876 ;; This function is called by:
 16877 ;;		_fat_read_from_file
 16878 ;;		_fat_resize_file
 16879 ;;		_fat_modify_file
 16880 ;;		_fat_rename_file
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           	psect	text66
 16885  013CF2                     __ptext66:
 16886                           	opt stack 0
 16887  013CF2                     _fat_get_file_information:
 16888                           	opt stack 12
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;incstack = 0
 16892                           ;fat_get_file_information@file_number stored from wreg
 16893  013CF2  0100               	movlb	0	; () banked
 16894  013CF4  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 16895                           
 16896                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 16897  013CF6  0E3F               	movlw	63
 16898  013CF8  0100               	movlb	0	; () banked
 16899  013CFA  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 16900  013CFC  D002               	goto	l2083
 16901                           
 16902                           ; BSR set to: 0
 16903                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 16904  013CFE  0E01               	movlw	1
 16905                           
 16906                           ; BSR set to: 0
 16907  013D00  0012               	return	
 16908  013D02                     l2083:
 16909                           
 16910                           ; BSR set to: 0
 16911                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 16912                           
 16913                           ; BSR set to: 0
 16914  013D02  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16915  013D04  EC75  F0A9         	call	__sector_from_file_number
 16916  013D08  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 16917  013D0C  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 16918                           
 16919                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 16920  013D10  0100               	movlb	0	; () banked
 16921  013D12  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16922  013D14  EC6F  F0AA         	call	__offset_from_file_number
 16923  013D18  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 16924  013D1C  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 16925                           
 16926                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 16927  013D20  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 16928  013D24  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 16929  013D28  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 16930  013D2C  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 16931  013D30  0E00               	movlw	0
 16932  013D32  0100               	movlb	0	; () banked
 16933  013D34  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16934  013D36  0E20               	movlw	32
 16935  013D38  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16936  013D3A  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 16937  013D3E  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 16938  013D42  ECD4  F0AA         	call	_flash_partial_read	;wreg free
 16939                           
 16940                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 16941  013D46  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 16942  013D4A  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 16943  013D4E  50DF               	movf	indf2,w,c
 16944  013D50  B4D8               	btfsc	status,2,c
 16945  013D52  D008               	goto	u13610
 16946  013D54  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 16947  013D58  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 16948  013D5C  0EE5               	movlw	229
 16949  013D5E  18DE               	xorwf	postinc2,w,c
 16950  013D60  A4D8               	btfss	status,2,c
 16951  013D62  D002               	goto	l2085
 16952  013D64                     u13610:
 16953                           
 16954                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 16955  013D64  0E02               	movlw	2
 16956  013D66  0012               	return	
 16957  013D68                     l2085:
 16958                           
 16959                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 16960  013D68  0E00               	movlw	0
 16961  013D6A  0012               	return	
 16962  013D6C                     __end_of_fat_get_file_information:
 16963                           	opt stack 0
 16964                           tblptru	equ	0xFF8
 16965                           tblptrh	equ	0xFF7
 16966                           tblptrl	equ	0xFF6
 16967                           tablat	equ	0xFF5
 16968                           prodh	equ	0xFF4
 16969                           prodl	equ	0xFF3
 16970                           postinc0	equ	0xFEE
 16971                           wreg	equ	0xFE8
 16972                           postdec1	equ	0xFE5
 16973                           plusw1	equ	0xFE3
 16974                           fsr1h	equ	0xFE2
 16975                           fsr1l	equ	0xFE1
 16976                           indf2	equ	0xFDF
 16977                           postinc2	equ	0xFDE
 16978                           postdec2	equ	0xFDD
 16979                           plusw2	equ	0xFDB
 16980                           fsr2h	equ	0xFDA
 16981                           fsr2l	equ	0xFD9
 16982                           status	equ	0xFD8
 16983                           
 16984 ;; *************** function _fat_get_file_size *****************
 16985 ;; Defined at:
 16986 ;;		line 563 in file "fat16.c"
 16987 ;; Parameters:    Size  Location     Type
 16988 ;;  file_number     1    wreg     unsigned char 
 16989 ;; Auto vars:     Size  Location     Type
 16990 ;;  file_number     1   65[BANK0 ] unsigned char 
 16991 ;;  file_size       4   61[BANK0 ] unsigned long 
 16992 ;;  offset          2   59[BANK0 ] unsigned int 
 16993 ;;  sector          2   57[BANK0 ] unsigned int 
 16994 ;; Return value:  Size  Location     Type
 16995 ;;                  4   53[BANK0 ] unsigned long 
 16996 ;; Registers used:
 16997 ;;		wreg, status,2, status,0, cstack
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17004 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17006 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17007 ;;Total ram usage:       13 bytes
 17008 ;; Hardware stack levels used:    1
 17009 ;; Hardware stack levels required when called:   16
 17010 ;; This function calls:
 17011 ;;		__offset_from_file_number
 17012 ;;		__root_is_available
 17013 ;;		__sector_from_file_number
 17014 ;;		_flash_partial_read
 17015 ;; This function is called by:
 17016 ;;		_configFile_read
 17017 ;;		_fat_append_to_file
 17018 ;;		_fat_copy_file
 17019 ;;		_fat_copy_sector_to_buffer
 17020 ;;		_fat_write_sector_from_buffer
 17021 ;; This function uses a non-reentrant model
 17022 ;;
 17023                           
 17024                           	psect	text67
 17025  013D6C                     __ptext67:
 17026                           	opt stack 0
 17027  013D6C                     _fat_get_file_size:
 17028                           	opt stack 12
 17029                           
 17030                           ;incstack = 0
 17031                           ;fat_get_file_size@file_number stored from wreg
 17032  013D6C  0100               	movlb	0	; () banked
 17033  013D6E  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17034                           
 17035                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17036  013D70  0100               	movlb	0	; () banked
 17037  013D72  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17038  013D74  EC44  F0A0         	call	__root_is_available
 17039  013D78  0900               	iorlw	0
 17040  013D7A  B4D8               	btfsc	status,2,c
 17041  013D7C  D006               	goto	l1845
 17042                           
 17043                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17044  013D7E  0100               	movlb	0	; () banked
 17045  013D80  6995               	setf	?_fat_get_file_size& (0+255),b
 17046  013D82  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17047  013D84  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17048  013D86  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17049  013D88  0012               	return	
 17050  013D8A                     l1845:
 17051                           
 17052                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17053                           
 17054                           ; BSR set to: 0
 17055  013D8A  0100               	movlb	0	; () banked
 17056  013D8C  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17057  013D8E  EC75  F0A9         	call	__sector_from_file_number
 17058  013D92  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17059  013D96  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17060                           
 17061                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17062  013D9A  0100               	movlb	0	; () banked
 17063  013D9C  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17064  013D9E  EC6F  F0AA         	call	__offset_from_file_number
 17065  013DA2  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17066  013DA6  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17067                           
 17068                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17069  013DAA  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17070  013DAE  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17071  013DB2  0E1C               	movlw	28
 17072  013DB4  0100               	movlb	0	; () banked
 17073  013DB6  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17074  013DB8  6F89               	movwf	flash_partial_read@start& (0+255),b
 17075  013DBA  0E00               	movlw	0
 17076  013DBC  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17077  013DBE  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17078  013DC0  0E00               	movlw	0
 17079  013DC2  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17080  013DC4  0E04               	movlw	4
 17081  013DC6  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17082  013DC8  0E9D               	movlw	low fat_get_file_size@file_size
 17083  013DCA  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17084  013DCC  0E00               	movlw	high fat_get_file_size@file_size
 17085  013DCE  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17086  013DD0  ECD4  F0AA         	call	_flash_partial_read	;wreg free
 17087                           
 17088                           ;fat16.c: 584: return file_size;
 17089  013DD4  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17090  013DD8  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17091  013DDC  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17092  013DE0  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17093  013DE4  0012               	return	
 17094  013DE6                     __end_of_fat_get_file_size:
 17095                           	opt stack 0
 17096                           tblptru	equ	0xFF8
 17097                           tblptrh	equ	0xFF7
 17098                           tblptrl	equ	0xFF6
 17099                           tablat	equ	0xFF5
 17100                           prodh	equ	0xFF4
 17101                           prodl	equ	0xFF3
 17102                           postinc0	equ	0xFEE
 17103                           wreg	equ	0xFE8
 17104                           postdec1	equ	0xFE5
 17105                           plusw1	equ	0xFE3
 17106                           fsr1h	equ	0xFE2
 17107                           fsr1l	equ	0xFE1
 17108                           indf2	equ	0xFDF
 17109                           postinc2	equ	0xFDE
 17110                           postdec2	equ	0xFDD
 17111                           plusw2	equ	0xFDB
 17112                           fsr2h	equ	0xFDA
 17113                           fsr2l	equ	0xFD9
 17114                           status	equ	0xFD8
 17115                           
 17116 ;; *************** function __root_is_available *****************
 17117 ;; Defined at:
 17118 ;;		line 409 in file "fat16.c"
 17119 ;; Parameters:    Size  Location     Type
 17120 ;;  file_number     1    wreg     unsigned char 
 17121 ;; Auto vars:     Size  Location     Type
 17122 ;;  file_number     1   51[BANK0 ] unsigned char 
 17123 ;;  offset          2   49[BANK0 ] unsigned int 
 17124 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17125 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  1    wreg      unsigned char 
 17128 ;; Registers used:
 17129 ;;		wreg, status,2, status,0, cstack
 17130 ;; Tracked objects:
 17131 ;;		On entry : 0/0
 17132 ;;		On exit  : 0/0
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17136 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17138 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17139 ;;Total ram usage:        6 bytes
 17140 ;; Hardware stack levels used:    1
 17141 ;; Hardware stack levels required when called:   15
 17142 ;; This function calls:
 17143 ;;		__offset_from_file_number
 17144 ;;		__sector_from_file_number
 17145 ;;		_flash_partial_read
 17146 ;; This function is called by:
 17147 ;;		__get_available_root_entry
 17148 ;;		_fat_get_file_size
 17149 ;;		_fat_resize_file
 17150 ;;		_fat_delete_file
 17151 ;;		_fat_append_to_file
 17152 ;;		_fat_copy_file
 17153 ;;		_fat_copy_sector_to_buffer
 17154 ;;		_fat_write_sector_from_buffer
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           	psect	text68
 17159  014088                     __ptext68:
 17160                           	opt stack 0
 17161  014088                     __root_is_available:
 17162                           	opt stack 12
 17163                           
 17164                           ;incstack = 0
 17165                           ;__root_is_available@file_number stored from wreg
 17166  014088  0100               	movlb	0	; () banked
 17167  01408A  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17168                           
 17169                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17170  01408C  0E3F               	movlw	63
 17171  01408E  0100               	movlb	0	; () banked
 17172  014090  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17173  014092  D002               	goto	l1806
 17174                           
 17175                           ; BSR set to: 0
 17176                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17177  014094  0E00               	movlw	0
 17178                           
 17179                           ; BSR set to: 0
 17180  014096  0012               	return	
 17181  014098                     l1806:
 17182                           
 17183                           ; BSR set to: 0
 17184                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17185                           
 17186                           ; BSR set to: 0
 17187  014098  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17188  01409A  EC75  F0A9         	call	__sector_from_file_number
 17189  01409E  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17190  0140A2  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17191                           
 17192                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17193  0140A6  0100               	movlb	0	; () banked
 17194  0140A8  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17195  0140AA  EC6F  F0AA         	call	__offset_from_file_number
 17196  0140AE  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17197  0140B2  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17198                           
 17199                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17200  0140B6  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17201  0140BA  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17202  0140BE  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17203  0140C2  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17204  0140C6  0E00               	movlw	0
 17205  0140C8  0100               	movlb	0	; () banked
 17206  0140CA  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17207  0140CC  0E01               	movlw	1
 17208  0140CE  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17209  0140D0  0E94               	movlw	low __root_is_available@first_byte
 17210  0140D2  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17211  0140D4  0E00               	movlw	high __root_is_available@first_byte
 17212  0140D6  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17213  0140D8  ECD4  F0AA         	call	_flash_partial_read	;wreg free
 17214                           
 17215                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17216  0140DC  0100               	movlb	0	; () banked
 17217  0140DE  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17218  0140E0  B4D8               	btfsc	status,2,c
 17219  0140E2  D004               	goto	u12850
 17220                           
 17221                           ; BSR set to: 0
 17222  0140E4  0EE5               	movlw	229
 17223  0140E6  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17224  0140E8  A4D8               	btfss	status,2,c
 17225  0140EA  D002               	goto	l1808
 17226  0140EC                     u12850:
 17227                           
 17228                           ; BSR set to: 0
 17229                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17230                           
 17231                           ; BSR set to: 0
 17232  0140EC  0E01               	movlw	1
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;fat16.c: 435: }
 17236                           
 17237                           ; BSR set to: 0
 17238  0140EE  0012               	return	
 17239  0140F0                     l1808:
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17243                           
 17244                           ; BSR set to: 0
 17245  0140F0  0E00               	movlw	0
 17246                           
 17247                           ; BSR set to: 0
 17248  0140F2  0012               	return	
 17249  0140F4                     __end_of__root_is_available:
 17250                           	opt stack 0
 17251                           tblptru	equ	0xFF8
 17252                           tblptrh	equ	0xFF7
 17253                           tblptrl	equ	0xFF6
 17254                           tablat	equ	0xFF5
 17255                           prodh	equ	0xFF4
 17256                           prodl	equ	0xFF3
 17257                           postinc0	equ	0xFEE
 17258                           wreg	equ	0xFE8
 17259                           postdec1	equ	0xFE5
 17260                           plusw1	equ	0xFE3
 17261                           fsr1h	equ	0xFE2
 17262                           fsr1l	equ	0xFE1
 17263                           indf2	equ	0xFDF
 17264                           postinc2	equ	0xFDE
 17265                           postdec2	equ	0xFDD
 17266                           plusw2	equ	0xFDB
 17267                           fsr2h	equ	0xFDA
 17268                           fsr2l	equ	0xFD9
 17269                           status	equ	0xFD8
 17270                           
 17271 ;; *************** function _flash_partial_read *****************
 17272 ;; Defined at:
 17273 ;;		line 452 in file "flash.c"
 17274 ;; Parameters:    Size  Location     Type
 17275 ;;  page            2   39[BANK0 ] unsigned int 
 17276 ;;  start           2   41[BANK0 ] unsigned int 
 17277 ;;  length          2   43[BANK0 ] unsigned int 
 17278 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17279 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17280 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17281 ;;		 -> _root_is_available@first_byte(1), 
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;		None
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  1    wreg      void 
 17286 ;; Registers used:
 17287 ;;		wreg, status,2, status,0, cstack
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17293 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17296 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17297 ;;Total ram usage:        8 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:   14
 17300 ;; This function calls:
 17301 ;;		__flash_partial_read
 17302 ;; This function is called by:
 17303 ;;		__root_is_available
 17304 ;;		__read_fat
 17305 ;;		_fat_get_file_size
 17306 ;;		_fat_read_from_file_fast
 17307 ;;		_fat_get_file_information
 17308 ;;		__get_first_cluster
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           	psect	text69
 17313  0155A8                     __ptext69:
 17314                           	opt stack 0
 17315  0155A8                     _flash_partial_read:
 17316                           	opt stack 12
 17317                           
 17318                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17319                           
 17320                           ; BSR set to: 0
 17321                           ;incstack = 0
 17322  0155A8  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17323  0155AC  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17324  0155B0  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17325  0155B4  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17326  0155B8  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17327  0155BC  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17328  0155C0  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17329  0155C4  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17330  0155C8  ECF3  F09E         	call	__flash_partial_read	;wreg free
 17331  0155CC  0012               	return		;funcret
 17332  0155CE                     __end_of_flash_partial_read:
 17333                           	opt stack 0
 17334                           tblptru	equ	0xFF8
 17335                           tblptrh	equ	0xFF7
 17336                           tblptrl	equ	0xFF6
 17337                           tablat	equ	0xFF5
 17338                           prodh	equ	0xFF4
 17339                           prodl	equ	0xFF3
 17340                           postinc0	equ	0xFEE
 17341                           wreg	equ	0xFE8
 17342                           postdec1	equ	0xFE5
 17343                           plusw1	equ	0xFE3
 17344                           fsr1h	equ	0xFE2
 17345                           fsr1l	equ	0xFE1
 17346                           indf2	equ	0xFDF
 17347                           postinc2	equ	0xFDE
 17348                           postdec2	equ	0xFDD
 17349                           plusw2	equ	0xFDB
 17350                           fsr2h	equ	0xFDA
 17351                           fsr2l	equ	0xFD9
 17352                           status	equ	0xFD8
 17353                           
 17354 ;; *************** function __sector_from_file_number *****************
 17355 ;; Defined at:
 17356 ;;		line 53 in file "fat16.c"
 17357 ;; Parameters:    Size  Location     Type
 17358 ;;  file_number     1    wreg     unsigned char 
 17359 ;; Auto vars:     Size  Location     Type
 17360 ;;  file_number     1    2[BANK0 ] unsigned char 
 17361 ;;  sector          2    3[BANK0 ] unsigned int 
 17362 ;; Return value:  Size  Location     Type
 17363 ;;                  2    0[BANK0 ] unsigned int 
 17364 ;; Registers used:
 17365 ;;		wreg, status,2, status,0
 17366 ;; Tracked objects:
 17367 ;;		On entry : 0/0
 17368 ;;		On exit  : 0/0
 17369 ;;		Unchanged: 0/0
 17370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17371 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17372 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17374 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17375 ;;Total ram usage:        5 bytes
 17376 ;; Hardware stack levels used:    1
 17377 ;; Hardware stack levels required when called:   10
 17378 ;; This function calls:
 17379 ;;		Nothing
 17380 ;; This function is called by:
 17381 ;;		__root_is_available
 17382 ;;		__write_root
 17383 ;;		_fat_get_file_size
 17384 ;;		_fat_get_file_information
 17385 ;;		__delete_root
 17386 ;;		__get_first_cluster
 17387 ;; This function uses a non-reentrant model
 17388 ;;
 17389                           
 17390                           	psect	text70
 17391  0152EA                     __ptext70:
 17392                           	opt stack 0
 17393  0152EA                     __sector_from_file_number:
 17394                           	opt stack 16
 17395                           
 17396                           ;incstack = 0
 17397                           ;__sector_from_file_number@file_number stored from wreg
 17398  0152EA  0100               	movlb	0	; () banked
 17399  0152EC  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17400                           
 17401                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17402  0152EE  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17403  0152F2  0100               	movlb	0	; () banked
 17404  0152F4  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17405                           
 17406                           ; BSR set to: 0
 17407                           ;fat16.c: 57: sector >>= 4;
 17408  0152F6  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17409  0152F8  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17410  0152FA  0E0F               	movlw	15
 17411  0152FC  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17412  0152FE  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17413  015300  0BF0               	andlw	240
 17414  015302  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17415  015304  0E0F               	movlw	15
 17416  015306  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;fat16.c: 58: sector += 34;
 17420  015308  0E22               	movlw	34
 17421  01530A  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17422  01530C  0E00               	movlw	0
 17423  01530E  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17424                           
 17425                           ; BSR set to: 0
 17426                           ;fat16.c: 59: return sector;
 17427  015310  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17428  015314  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17429  015318  0012               	return	
 17430  01531A                     __end_of__sector_from_file_number:
 17431                           	opt stack 0
 17432                           tblptru	equ	0xFF8
 17433                           tblptrh	equ	0xFF7
 17434                           tblptrl	equ	0xFF6
 17435                           tablat	equ	0xFF5
 17436                           prodh	equ	0xFF4
 17437                           prodl	equ	0xFF3
 17438                           postinc0	equ	0xFEE
 17439                           wreg	equ	0xFE8
 17440                           postdec1	equ	0xFE5
 17441                           plusw1	equ	0xFE3
 17442                           fsr1h	equ	0xFE2
 17443                           fsr1l	equ	0xFE1
 17444                           indf2	equ	0xFDF
 17445                           postinc2	equ	0xFDE
 17446                           postdec2	equ	0xFDD
 17447                           plusw2	equ	0xFDB
 17448                           fsr2h	equ	0xFDA
 17449                           fsr2l	equ	0xFD9
 17450                           status	equ	0xFD8
 17451                           
 17452 ;; *************** function __offset_from_file_number *****************
 17453 ;; Defined at:
 17454 ;;		line 62 in file "fat16.c"
 17455 ;; Parameters:    Size  Location     Type
 17456 ;;  file_number     1    wreg     unsigned char 
 17457 ;; Auto vars:     Size  Location     Type
 17458 ;;  file_number     1    2[BANK0 ] unsigned char 
 17459 ;;  offset          2    3[BANK0 ] unsigned int 
 17460 ;; Return value:  Size  Location     Type
 17461 ;;                  2    0[BANK0 ] unsigned int 
 17462 ;; Registers used:
 17463 ;;		wreg, status,2, status,0
 17464 ;; Tracked objects:
 17465 ;;		On entry : 0/0
 17466 ;;		On exit  : 0/0
 17467 ;;		Unchanged: 0/0
 17468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17470 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17472 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17473 ;;Total ram usage:        5 bytes
 17474 ;; Hardware stack levels used:    1
 17475 ;; Hardware stack levels required when called:   10
 17476 ;; This function calls:
 17477 ;;		Nothing
 17478 ;; This function is called by:
 17479 ;;		__root_is_available
 17480 ;;		__write_root
 17481 ;;		_fat_get_file_size
 17482 ;;		_fat_get_file_information
 17483 ;;		__delete_root
 17484 ;;		__get_first_cluster
 17485 ;; This function uses a non-reentrant model
 17486 ;;
 17487                           
 17488                           	psect	text71
 17489  0154DE                     __ptext71:
 17490                           	opt stack 0
 17491  0154DE                     __offset_from_file_number:
 17492                           	opt stack 16
 17493                           
 17494                           ; BSR set to: 0
 17495                           ;incstack = 0
 17496                           ;__offset_from_file_number@file_number stored from wreg
 17497  0154DE  0100               	movlb	0	; () banked
 17498  0154E0  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17499                           
 17500                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17501  0154E2  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17502  0154E6  0100               	movlb	0	; () banked
 17503  0154E8  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;fat16.c: 66: offset &= 0b1111;
 17507  0154EA  0E0F               	movlw	15
 17508  0154EC  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17509  0154EE  0E00               	movlw	0
 17510  0154F0  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;fat16.c: 67: offset <<= 5;
 17514  0154F2  0E05               	movlw	5
 17515  0154F4                     u11905:
 17516  0154F4  90D8               	bcf	status,0,c
 17517  0154F6  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17518  0154F8  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17519  0154FA  2EE8               	decfsz	wreg,f,c
 17520  0154FC  D7FB               	goto	u11905
 17521                           
 17522                           ; BSR set to: 0
 17523                           ;fat16.c: 68: return offset;
 17524  0154FE  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17525  015502  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17526  015506  0012               	return	
 17527  015508                     __end_of__offset_from_file_number:
 17528                           	opt stack 0
 17529                           tblptru	equ	0xFF8
 17530                           tblptrh	equ	0xFF7
 17531                           tblptrl	equ	0xFF6
 17532                           tablat	equ	0xFF5
 17533                           prodh	equ	0xFF4
 17534                           prodl	equ	0xFF3
 17535                           postinc0	equ	0xFEE
 17536                           wreg	equ	0xFE8
 17537                           postdec1	equ	0xFE5
 17538                           plusw1	equ	0xFE3
 17539                           fsr1h	equ	0xFE2
 17540                           fsr1l	equ	0xFE1
 17541                           indf2	equ	0xFDF
 17542                           postinc2	equ	0xFDE
 17543                           postdec2	equ	0xFDD
 17544                           plusw2	equ	0xFDB
 17545                           fsr2h	equ	0xFDA
 17546                           fsr2l	equ	0xFD9
 17547                           status	equ	0xFD8
 17548                           
 17549 ;; *************** function _fat_find_file *****************
 17550 ;; Defined at:
 17551 ;;		line 518 in file "fat16.c"
 17552 ;; Parameters:    Size  Location     Type
 17553 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17554 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17555 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17556 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;  offset          2   52[BANK0 ] unsigned int 
 17559 ;;  sector          2   50[BANK0 ] unsigned int 
 17560 ;;  file_number     1   49[BANK0 ] unsigned char 
 17561 ;; Return value:  Size  Location     Type
 17562 ;;                  1    wreg      unsigned char 
 17563 ;; Registers used:
 17564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17565 ;; Tracked objects:
 17566 ;;		On entry : 0/0
 17567 ;;		On exit  : 0/0
 17568 ;;		Unchanged: 0/0
 17569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17570 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17571 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17573 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17574 ;;Total ram usage:       11 bytes
 17575 ;; Hardware stack levels used:    1
 17576 ;; Hardware stack levels required when called:   15
 17577 ;; This function calls:
 17578 ;;		_flash_sector_read
 17579 ;;		_strncmp
 17580 ;; This function is called by:
 17581 ;;		_fat_create_file
 17582 ;;		_configFile_read
 17583 ;;		_configFile_write
 17584 ;; This function uses a non-reentrant model
 17585 ;;
 17586                           
 17587                           	psect	text72
 17588  0119C0                     __ptext72:
 17589                           	opt stack 0
 17590  0119C0                     _fat_find_file:
 17591                           	opt stack 13
 17592                           
 17593                           ;fat16.c: 520: uint8_t file_number = 0;
 17594                           
 17595                           ; BSR set to: 0
 17596                           ;incstack = 0
 17597  0119C0  0E00               	movlw	0
 17598  0119C2  0100               	movlb	0	; () banked
 17599  0119C4  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17600                           
 17601                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17602  0119C6  0E00               	movlw	0
 17603  0119C8  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17604  0119CA  0E22               	movlw	34
 17605  0119CC  6F92               	movwf	fat_find_file@sector& (0+255),b
 17606                           
 17607                           ; BSR set to: 0
 17608  0119CE  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17609  0119D0  E169               	bnz	l1833
 17610  0119D2  0E26               	movlw	38
 17611  0119D4  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17612  0119D6  B0D8               	btfsc	status,0,c
 17613  0119D8  D065               	goto	u13580
 17614                           
 17615                           ; BSR set to: 0
 17616                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17617                           
 17618                           ; BSR set to: 0
 17619                           
 17620                           ; BSR set to: 0
 17621  0119DA  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17622  0119DE  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17623  0119E2  0E00               	movlw	low _buffer
 17624  0119E4  6F89               	movwf	flash_sector_read@data& (0+255),b
 17625  0119E6  0E0A               	movlw	high _buffer
 17626  0119E8  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17627  0119EA  ECC0  F0AA         	call	_flash_sector_read	;wreg free
 17628                           
 17629                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17630  0119EE  0E00               	movlw	0
 17631  0119F0  0100               	movlb	0	; () banked
 17632  0119F2  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17633  0119F4  0E00               	movlw	0
 17634  0119F6  6F94               	movwf	fat_find_file@offset& (0+255),b
 17635  0119F8                     l14463:
 17636                           
 17637                           ; BSR set to: 0
 17638  0119F8  0E02               	movlw	2
 17639  0119FA  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17640  0119FC  B0D8               	btfsc	status,0,c
 17641  0119FE  D04D               	goto	u13570
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17645                           
 17646                           ; BSR set to: 0
 17647                           
 17648                           ; BSR set to: 0
 17649  011A00  0E00               	movlw	low _buffer
 17650  011A02  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17651  011A04  6ED9               	movwf	fsr2l,c
 17652  011A06  0E0A               	movlw	high _buffer
 17653  011A08  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17654  011A0A  6EDA               	movwf	fsr2h,c
 17655  011A0C  50DF               	movf	indf2,w,c
 17656  011A0E  A4D8               	btfss	status,2,c
 17657  011A10  D002               	goto	l1836
 17658                           
 17659                           ; BSR set to: 0
 17660                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 17661  011A12  0EFF               	movlw	255
 17662                           
 17663                           ; BSR set to: 0
 17664  011A14  0012               	return	
 17665  011A16                     l1836:
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 17669                           
 17670                           ; BSR set to: 0
 17671  011A16  0E00               	movlw	low _buffer
 17672  011A18  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17673  011A1A  6ED9               	movwf	fsr2l,c
 17674  011A1C  0E0A               	movlw	high _buffer
 17675  011A1E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17676  011A20  6EDA               	movwf	fsr2h,c
 17677  011A22  0EE5               	movlw	229
 17678  011A24  18DE               	xorwf	postinc2,w,c
 17679  011A26  B4D8               	btfsc	status,2,c
 17680  011A28  D032               	goto	l1842
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 17684                           
 17685                           ; BSR set to: 0
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;fat16.c: 538: {;fat16.c: 542: }
 17689  011A2A  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 17690  011A2E  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 17691  011A32  0E00               	movlw	low _buffer
 17692  011A34  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17693  011A36  6F62               	movwf	strncmp@s2& (0+255),b
 17694  011A38  0E0A               	movlw	high _buffer
 17695  011A3A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17696  011A3C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17697  011A3E  0E00               	movlw	0
 17698  011A40  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17699  011A42  0E08               	movlw	8
 17700  011A44  6F64               	movwf	strncmp@len& (0+255),b
 17701  011A46  ECBD  F09D         	call	_strncmp	;wreg free
 17702  011A4A  0100               	movlb	0	; () banked
 17703  011A4C  5160               	movf	?_strncmp& (0+255),w,b
 17704  011A4E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17705  011A50  A4D8               	btfss	status,2,c
 17706  011A52  D01D               	goto	l1842
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 17710  011A54  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 17711  011A58  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 17712  011A5C  0E08               	movlw	8
 17713  011A5E  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17714  011A60  6F8F               	movwf	??_fat_find_file& (0+255),b
 17715  011A62  0E00               	movlw	0
 17716  011A64  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17717  011A66  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 17718  011A68  0E00               	movlw	low _buffer
 17719  011A6A  258F               	addwf	??_fat_find_file& (0+255),w,b
 17720  011A6C  6F62               	movwf	strncmp@s2& (0+255),b
 17721  011A6E  0E0A               	movlw	high _buffer
 17722  011A70  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 17723  011A72  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17724  011A74  0E00               	movlw	0
 17725  011A76  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17726  011A78  0E03               	movlw	3
 17727  011A7A  6F64               	movwf	strncmp@len& (0+255),b
 17728  011A7C  ECBD  F09D         	call	_strncmp	;wreg free
 17729  011A80  0100               	movlb	0	; () banked
 17730  011A82  5160               	movf	?_strncmp& (0+255),w,b
 17731  011A84  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17732  011A86  A4D8               	btfss	status,2,c
 17733  011A88  D002               	goto	l1842
 17734                           
 17735                           ; BSR set to: 0
 17736                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 17737  011A8A  5191               	movf	fat_find_file@file_number& (0+255),w,b
 17738                           
 17739                           ; BSR set to: 0
 17740  011A8C  0012               	return	
 17741  011A8E                     l1842:
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 17745                           
 17746                           ; BSR set to: 0
 17747                           
 17748                           ; BSR set to: 0
 17749                           
 17750                           ; BSR set to: 0
 17751                           
 17752                           ; BSR set to: 0
 17753  011A8E  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 17754                           
 17755                           ; BSR set to: 0
 17756  011A90  0E20               	movlw	32
 17757  011A92  2794               	addwf	fat_find_file@offset& (0+255),f,b
 17758  011A94  0E00               	movlw	0
 17759  011A96  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 17760  011A98  D7AF               	goto	l14463
 17761  011A9A                     u13570:
 17762                           
 17763                           ; BSR set to: 0
 17764                           
 17765                           ; BSR set to: 0
 17766  011A9A  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 17767  011A9C  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 17768                           
 17769                           ; BSR set to: 0
 17770  011A9E  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17771  011AA0  E101               	bnz	l14497
 17772  011AA2  D797               	goto	L4
 17773  011AA4                     u13580:
 17774  011AA4                     l1833:
 17775  011AA4                     l14497:
 17776                           
 17777                           ; BSR set to: 0
 17778                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 17779  011AA4  0EFF               	movlw	255
 17780  011AA6  0012               	return	
 17781  011AA8                     __end_of_fat_find_file:
 17782                           	opt stack 0
 17783                           tblptru	equ	0xFF8
 17784                           tblptrh	equ	0xFF7
 17785                           tblptrl	equ	0xFF6
 17786                           tablat	equ	0xFF5
 17787                           prodh	equ	0xFF4
 17788                           prodl	equ	0xFF3
 17789                           postinc0	equ	0xFEE
 17790                           wreg	equ	0xFE8
 17791                           postdec1	equ	0xFE5
 17792                           plusw1	equ	0xFE3
 17793                           fsr1h	equ	0xFE2
 17794                           fsr1l	equ	0xFE1
 17795                           indf2	equ	0xFDF
 17796                           postinc2	equ	0xFDE
 17797                           postdec2	equ	0xFDD
 17798                           plusw2	equ	0xFDB
 17799                           fsr2h	equ	0xFDA
 17800                           fsr2l	equ	0xFD9
 17801                           status	equ	0xFD8
 17802                           
 17803 ;; *************** function _strncmp *****************
 17804 ;; Defined at:
 17805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 17806 ;; Parameters:    Size  Location     Type
 17807 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17808 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 17809 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17810 ;;		 -> buffer(512), 
 17811 ;;  len             2    4[BANK0 ] unsigned int 
 17812 ;; Auto vars:     Size  Location     Type
 17813 ;;		None
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  2    0[BANK0 ] int 
 17816 ;; Registers used:
 17817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17823 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17825 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17826 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17827 ;;Total ram usage:        9 bytes
 17828 ;; Hardware stack levels used:    1
 17829 ;; Hardware stack levels required when called:   10
 17830 ;; This function calls:
 17831 ;;		Nothing
 17832 ;; This function is called by:
 17833 ;;		_fat_find_file
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           	psect	text73
 17838  013B7A                     __ptext73:
 17839                           	opt stack 0
 17840  013B7A                     _strncmp:
 17841                           	opt stack 17
 17842                           
 17843                           ; BSR set to: 0
 17844                           ;incstack = 0
 17845  013B7A  D031               	goto	l3751
 17846  013B7C                     l13917:
 17847  013B7C  C060  FFD9         	movff	strncmp@s1,fsr2l
 17848  013B80  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17849  013B84  50DF               	movf	indf2,w,c
 17850  013B86  B4D8               	btfsc	status,2,c
 17851  013B88  D00C               	goto	u12870
 17852  013B8A  C062  FFD9         	movff	strncmp@s2,fsr2l
 17853  013B8E  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17854  013B92  C060  FFE1         	movff	strncmp@s1,fsr1l
 17855  013B96  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 17856  013B9A  50DE               	movf	postinc2,w,c
 17857  013B9C  18E6               	xorwf	postinc1,w,c
 17858  013B9E  B4D8               	btfsc	status,2,c
 17859  013BA0  D019               	goto	l3753
 17860  013BA2                     u12870:
 17861  013BA2  C062  FFD9         	movff	strncmp@s2,fsr2l
 17862  013BA6  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17863  013BAA  50DF               	movf	indf2,w,c
 17864  013BAC  0100               	movlb	0	; () banked
 17865  013BAE  6F66               	movwf	??_strncmp& (0+255),b
 17866  013BB0  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17867  013BB2  1F66               	comf	??_strncmp& (0+255),f,b
 17868  013BB4  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17869  013BB6  4B66               	infsnz	??_strncmp& (0+255),f,b
 17870  013BB8  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17871  013BBA  C060  FFD9         	movff	strncmp@s1,fsr2l
 17872  013BBE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17873  013BC2  50DF               	movf	indf2,w,c
 17874  013BC4  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17875  013BC6  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17876  013BC8  2566               	addwf	??_strncmp& (0+255),w,b
 17877  013BCA  6F60               	movwf	?_strncmp& (0+255),b
 17878  013BCC  0E00               	movlw	0
 17879  013BCE  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17880  013BD0  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17881                           
 17882                           ; BSR set to: 0
 17883  013BD2  0012               	return	
 17884  013BD4                     l3753:
 17885                           
 17886                           ; BSR set to: 0
 17887  013BD4  0100               	movlb	0	; () banked
 17888  013BD6  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17889  013BD8  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17890  013BDA  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17891  013BDC  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17892  013BDE                     l3751:
 17893                           
 17894                           ; BSR set to: 0
 17895  013BDE  0100               	movlb	0	; () banked
 17896  013BE0  0764               	decf	strncmp@len& (0+255),f,b
 17897  013BE2  A0D8               	btfss	status,0,c
 17898  013BE4  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17899  013BE6  2964               	incf	strncmp@len& (0+255),w,b
 17900  013BE8  E1C9               	bnz	l13917
 17901  013BEA  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17902  013BEC  A4D8               	btfss	status,2,c
 17903  013BEE  D7C6               	goto	l3752
 17904                           
 17905                           ; BSR set to: 0
 17906                           
 17907                           ; BSR set to: 0
 17908  013BF0  0E00               	movlw	0
 17909  013BF2  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17910  013BF4  0E00               	movlw	0
 17911  013BF6  6F60               	movwf	?_strncmp& (0+255),b
 17912  013BF8  0012               	return	
 17913  013BFA                     __end_of_strncmp:
 17914                           	opt stack 0
 17915                           tblptru	equ	0xFF8
 17916                           tblptrh	equ	0xFF7
 17917                           tblptrl	equ	0xFF6
 17918                           tablat	equ	0xFF5
 17919                           prodh	equ	0xFF4
 17920                           prodl	equ	0xFF3
 17921                           postinc0	equ	0xFEE
 17922                           wreg	equ	0xFE8
 17923                           postinc1	equ	0xFE6
 17924                           postdec1	equ	0xFE5
 17925                           plusw1	equ	0xFE3
 17926                           fsr1h	equ	0xFE2
 17927                           fsr1l	equ	0xFE1
 17928                           indf2	equ	0xFDF
 17929                           postinc2	equ	0xFDE
 17930                           postdec2	equ	0xFDD
 17931                           plusw2	equ	0xFDB
 17932                           fsr2h	equ	0xFDA
 17933                           fsr2l	equ	0xFD9
 17934                           status	equ	0xFD8
 17935                           
 17936 ;; *************** function __parse_item *****************
 17937 ;; Defined at:
 17938 ;;		line 108 in file "config_file.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 17941 ;;		 -> configFile_read@item_string(31), 
 17942 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 17943 ;;		 -> configFile_read@value_string(12), 
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      unsigned char 
 17948 ;; Registers used:
 17949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17958 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17959 ;;Total ram usage:        4 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:   12
 17962 ;; This function calls:
 17963 ;;		_atoi
 17964 ;;		_atol
 17965 ;;		_stricmp
 17966 ;; This function is called by:
 17967 ;;		_configFile_read
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971                           	psect	text74
 17972  00C908                     __ptext74:
 17973                           	opt stack 0
 17974  00C908                     __parse_item:
 17975                           	opt stack 16
 17976                           
 17977                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 17978                           
 17979                           ; BSR set to: 0
 17980                           ;incstack = 0
 17981  00C908  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 17982  00C90C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 17983  00C910  0EFD               	movlw	low _full_circle_in_steps_string
 17984  00C912  0100               	movlb	0	; () banked
 17985  00C914  6F63               	movwf	stricmp@s2& (0+255),b
 17986  00C916  0EA1               	movlw	high _full_circle_in_steps_string
 17987  00C918  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 17988  00C91A  ECC4  F0A2         	call	_stricmp	;wreg free
 17989  00C91E  0100               	movlb	0	; () banked
 17990  00C920  5161               	movf	?_stricmp& (0+255),w,b
 17991  00C922  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 17992  00C924  A4D8               	btfss	status,2,c
 17993  00C926  D00F               	goto	l2963
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 17997  00C928  C07C  F06C         	movff	__parse_item@value_string,atol@s
 17998  00C92C  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 17999  00C930  EC88  F089         	call	_atol	;wreg free
 18000  00C934  C06C  F1A1         	movff	?_atol,_config
 18001  00C938  C06D  F1A2         	movff	?_atol+1,_config+1
 18002  00C93C  C06E  F1A3         	movff	?_atol+2,_config+2
 18003  00C940  C06F  F1A4         	movff	?_atol+3,_config+3
 18004                           
 18005                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 18006  00C944  0012               	return	
 18007  00C946                     l2963:
 18008                           
 18009                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18010  00C946  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18011  00C94A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18012  00C94E  0E12               	movlw	low _overshoot_in_steps_string
 18013  00C950  0100               	movlb	0	; () banked
 18014  00C952  6F63               	movwf	stricmp@s2& (0+255),b
 18015  00C954  0EA2               	movlw	high _overshoot_in_steps_string
 18016  00C956  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18017  00C958  ECC4  F0A2         	call	_stricmp	;wreg free
 18018  00C95C  0100               	movlb	0	; () banked
 18019  00C95E  5161               	movf	?_stricmp& (0+255),w,b
 18020  00C960  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18021  00C962  A4D8               	btfss	status,2,c
 18022  00C964  D00B               	goto	l2965
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 18026  00C966  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18027  00C96A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18028  00C96E  EC66  F090         	call	_atoi	;wreg free
 18029  00C972  C066  F1A6         	movff	?_atoi,_config+5
 18030  00C976  C067  F1A7         	movff	?_atoi+1,_config+6
 18031                           
 18032                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 18033  00C97A  0012               	return	
 18034  00C97C                     l2965:
 18035                           
 18036                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18037  00C97C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18038  00C980  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18039  00C984  0E49               	movlw	low _inverse_direction_string
 18040  00C986  0100               	movlb	0	; () banked
 18041  00C988  6F63               	movwf	stricmp@s2& (0+255),b
 18042  00C98A  0EA2               	movlw	high _inverse_direction_string
 18043  00C98C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18044  00C98E  ECC4  F0A2         	call	_stricmp	;wreg free
 18045  00C992  0100               	movlb	0	; () banked
 18046  00C994  5161               	movf	?_stricmp& (0+255),w,b
 18047  00C996  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18048  00C998  A4D8               	btfss	status,2,c
 18049  00C99A  D00B               	goto	l2966
 18050                           
 18051                           ; BSR set to: 0
 18052                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 18053  00C99C  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18054  00C9A0  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18055  00C9A4  EC88  F089         	call	_atol	;wreg free
 18056  00C9A8  0100               	movlb	0	; () banked
 18057  00C9AA  516C               	movf	?_atol& (0+255),w,b
 18058  00C9AC  0101               	movlb	1	; () banked
 18059  00C9AE  6FA5               	movwf	(_config+4)& (0+255),b
 18060                           
 18061                           ; BSR set to: 1
 18062                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 18063  00C9B0  0012               	return	
 18064  00C9B2                     l2966:
 18065                           
 18066                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18067                           
 18068                           ; BSR set to: 1
 18069  00C9B2  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18070  00C9B6  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18071  00C9BA  0E12               	movlw	low _overshoot_in_steps_string
 18072  00C9BC  0100               	movlb	0	; () banked
 18073  00C9BE  6F63               	movwf	stricmp@s2& (0+255),b
 18074  00C9C0  0EA2               	movlw	high _overshoot_in_steps_string
 18075  00C9C2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18076  00C9C4  ECC4  F0A2         	call	_stricmp	;wreg free
 18077  00C9C8  0100               	movlb	0	; () banked
 18078  00C9CA  5161               	movf	?_stricmp& (0+255),w,b
 18079  00C9CC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18080  00C9CE  A4D8               	btfss	status,2,c
 18081  00C9D0  D00B               	goto	l2967
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 18085  00C9D2  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18086  00C9D6  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18087  00C9DA  EC66  F090         	call	_atoi	;wreg free
 18088  00C9DE  C066  F1A6         	movff	?_atoi,_config+5
 18089  00C9E2  C067  F1A7         	movff	?_atoi+1,_config+6
 18090                           
 18091                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 18092  00C9E6  0012               	return	
 18093  00C9E8                     l2967:
 18094                           
 18095                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18096  00C9E8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18097  00C9EC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18098  00C9F0  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18099  00C9F2  0100               	movlb	0	; () banked
 18100  00C9F4  6F63               	movwf	stricmp@s2& (0+255),b
 18101  00C9F6  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18102  00C9F8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18103  00C9FA  ECC4  F0A2         	call	_stricmp	;wreg free
 18104  00C9FE  0100               	movlb	0	; () banked
 18105  00CA00  5161               	movf	?_stricmp& (0+255),w,b
 18106  00CA02  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18107  00CA04  A4D8               	btfss	status,2,c
 18108  00CA06  D00B               	goto	l2968
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18112  00CA08  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18113  00CA0C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18114  00CA10  EC66  F090         	call	_atoi	;wreg free
 18115  00CA14  C066  F1A8         	movff	?_atoi,_config+7
 18116  00CA18  C067  F1A9         	movff	?_atoi+1,_config+8
 18117                           
 18118                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 18119  00CA1C  0012               	return	
 18120  00CA1E                     l2968:
 18121                           
 18122                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18123  00CA1E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18124  00CA22  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18125  00CA26  0E97               	movlw	low _minimum_speed_string
 18126  00CA28  0100               	movlb	0	; () banked
 18127  00CA2A  6F63               	movwf	stricmp@s2& (0+255),b
 18128  00CA2C  0EA2               	movlw	high _minimum_speed_string
 18129  00CA2E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18130  00CA30  ECC4  F0A2         	call	_stricmp	;wreg free
 18131  00CA34  0100               	movlb	0	; () banked
 18132  00CA36  5161               	movf	?_stricmp& (0+255),w,b
 18133  00CA38  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18134  00CA3A  A4D8               	btfss	status,2,c
 18135  00CA3C  D00B               	goto	l2969
 18136                           
 18137                           ; BSR set to: 0
 18138                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 18139  00CA3E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18140  00CA42  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18141  00CA46  EC66  F090         	call	_atoi	;wreg free
 18142  00CA4A  C066  F1AA         	movff	?_atoi,_config+9
 18143  00CA4E  C067  F1AB         	movff	?_atoi+1,_config+10
 18144                           
 18145                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 18146  00CA52  0012               	return	
 18147  00CA54                     l2969:
 18148                           
 18149                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18150  00CA54  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18151  00CA58  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18152  00CA5C  0E89               	movlw	low _maximum_speed_string
 18153  00CA5E  0100               	movlb	0	; () banked
 18154  00CA60  6F63               	movwf	stricmp@s2& (0+255),b
 18155  00CA62  0EA2               	movlw	high _maximum_speed_string
 18156  00CA64  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18157  00CA66  ECC4  F0A2         	call	_stricmp	;wreg free
 18158  00CA6A  0100               	movlb	0	; () banked
 18159  00CA6C  5161               	movf	?_stricmp& (0+255),w,b
 18160  00CA6E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18161  00CA70  A4D8               	btfss	status,2,c
 18162  00CA72  D00B               	goto	l2970
 18163                           
 18164                           ; BSR set to: 0
 18165                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 18166  00CA74  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18167  00CA78  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18168  00CA7C  EC66  F090         	call	_atoi	;wreg free
 18169  00CA80  C066  F1AC         	movff	?_atoi,_config+11
 18170  00CA84  C067  F1AD         	movff	?_atoi+1,_config+12
 18171                           
 18172                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 18173  00CA88  0012               	return	
 18174  00CA8A                     l2970:
 18175                           
 18176                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18177  00CA8A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18178  00CA8E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18179  00CA92  0E37               	movlw	low _initial_speed_arc_string
 18180  00CA94  0100               	movlb	0	; () banked
 18181  00CA96  6F63               	movwf	stricmp@s2& (0+255),b
 18182  00CA98  0EA2               	movlw	high _initial_speed_arc_string
 18183  00CA9A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18184  00CA9C  ECC4  F0A2         	call	_stricmp	;wreg free
 18185  00CAA0  0100               	movlb	0	; () banked
 18186  00CAA2  5161               	movf	?_stricmp& (0+255),w,b
 18187  00CAA4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18188  00CAA6  A4D8               	btfss	status,2,c
 18189  00CAA8  D00B               	goto	l2971
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18193  00CAAA  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18194  00CAAE  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18195  00CAB2  EC66  F090         	call	_atoi	;wreg free
 18196  00CAB6  C066  F1AE         	movff	?_atoi,_config+13
 18197  00CABA  C067  F1AF         	movff	?_atoi+1,_config+14
 18198                           
 18199                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 18200  00CABE  0012               	return	
 18201  00CAC0                     l2971:
 18202                           
 18203                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18204  00CAC0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18205  00CAC4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18206  00CAC8  0E25               	movlw	low _maximum_speed_arc_string
 18207  00CACA  0100               	movlb	0	; () banked
 18208  00CACC  6F63               	movwf	stricmp@s2& (0+255),b
 18209  00CACE  0EA2               	movlw	high _maximum_speed_arc_string
 18210  00CAD0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18211  00CAD2  ECC4  F0A2         	call	_stricmp	;wreg free
 18212  00CAD6  0100               	movlb	0	; () banked
 18213  00CAD8  5161               	movf	?_stricmp& (0+255),w,b
 18214  00CADA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18215  00CADC  A4D8               	btfss	status,2,c
 18216  00CADE  D00B               	goto	l2972
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18220  00CAE0  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18221  00CAE4  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18222  00CAE8  EC66  F090         	call	_atoi	;wreg free
 18223  00CAEC  C066  F1B0         	movff	?_atoi,_config+15
 18224  00CAF0  C067  F1B1         	movff	?_atoi+1,_config+16
 18225                           
 18226                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 18227  00CAF4  0012               	return	
 18228  00CAF6                     l2972:
 18229                           
 18230                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18231  00CAF6  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18232  00CAFA  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18233  00CAFE  0EE8               	movlw	low _initial_speed_manual_string
 18234  00CB00  0100               	movlb	0	; () banked
 18235  00CB02  6F63               	movwf	stricmp@s2& (0+255),b
 18236  00CB04  0EA1               	movlw	high _initial_speed_manual_string
 18237  00CB06  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18238  00CB08  ECC4  F0A2         	call	_stricmp	;wreg free
 18239  00CB0C  0100               	movlb	0	; () banked
 18240  00CB0E  5161               	movf	?_stricmp& (0+255),w,b
 18241  00CB10  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18242  00CB12  A4D8               	btfss	status,2,c
 18243  00CB14  D00B               	goto	l2973
 18244                           
 18245                           ; BSR set to: 0
 18246                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18247  00CB16  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18248  00CB1A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18249  00CB1E  EC66  F090         	call	_atoi	;wreg free
 18250  00CB22  C066  F1B2         	movff	?_atoi,_config+17
 18251  00CB26  C067  F1B3         	movff	?_atoi+1,_config+18
 18252                           
 18253                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 18254  00CB2A  0012               	return	
 18255  00CB2C                     l2973:
 18256                           
 18257                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18258  00CB2C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18259  00CB30  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18260  00CB34  0ED3               	movlw	low _maximum_speed_manual_string
 18261  00CB36  0100               	movlb	0	; () banked
 18262  00CB38  6F63               	movwf	stricmp@s2& (0+255),b
 18263  00CB3A  0EA1               	movlw	high _maximum_speed_manual_string
 18264  00CB3C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18265  00CB3E  ECC4  F0A2         	call	_stricmp	;wreg free
 18266  00CB42  0100               	movlb	0	; () banked
 18267  00CB44  5161               	movf	?_stricmp& (0+255),w,b
 18268  00CB46  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18269  00CB48  A4D8               	btfss	status,2,c
 18270  00CB4A  D00B               	goto	l2974
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18274  00CB4C  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18275  00CB50  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18276  00CB54  EC66  F090         	call	_atoi	;wreg free
 18277  00CB58  C066  F1B4         	movff	?_atoi,_config+19
 18278  00CB5C  C067  F1B5         	movff	?_atoi+1,_config+20
 18279                           
 18280                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 18281  00CB60  0012               	return	
 18282  00CB62                     l2974:
 18283                           
 18284                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18285  00CB62  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18286  00CB66  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18287  00CB6A  0E7B               	movlw	low _beep_duration_string
 18288  00CB6C  0100               	movlb	0	; () banked
 18289  00CB6E  6F63               	movwf	stricmp@s2& (0+255),b
 18290  00CB70  0EA2               	movlw	high _beep_duration_string
 18291  00CB72  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18292  00CB74  ECC4  F0A2         	call	_stricmp	;wreg free
 18293  00CB78  0100               	movlb	0	; () banked
 18294  00CB7A  5161               	movf	?_stricmp& (0+255),w,b
 18295  00CB7C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18296  00CB7E  A4D8               	btfss	status,2,c
 18297  00CB80  D00B               	goto	l2975
 18298                           
 18299                           ; BSR set to: 0
 18300                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 18301  00CB82  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18302  00CB86  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18303  00CB8A  EC66  F090         	call	_atoi	;wreg free
 18304  00CB8E  0100               	movlb	0	; () banked
 18305  00CB90  5166               	movf	?_atoi& (0+255),w,b
 18306  00CB92  0101               	movlb	1	; () banked
 18307  00CB94  6FB6               	movwf	(_config+21)& (0+255),b
 18308                           
 18309                           ; BSR set to: 1
 18310                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 18311  00CB96  0012               	return	
 18312  00CB98                     l2975:
 18313                           
 18314                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18315                           
 18316                           ; BSR set to: 1
 18317  00CB98  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18318  00CB9C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18319  00CBA0  0EA5               	movlw	low _use_cw_limit_string
 18320  00CBA2  0100               	movlb	0	; () banked
 18321  00CBA4  6F63               	movwf	stricmp@s2& (0+255),b
 18322  00CBA6  0EA2               	movlw	high _use_cw_limit_string
 18323  00CBA8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18324  00CBAA  ECC4  F0A2         	call	_stricmp	;wreg free
 18325  00CBAE  0100               	movlb	0	; () banked
 18326  00CBB0  5161               	movf	?_stricmp& (0+255),w,b
 18327  00CBB2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18328  00CBB4  A4D8               	btfss	status,2,c
 18329  00CBB6  D00B               	goto	l2976
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 18333  00CBB8  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18334  00CBBC  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18335  00CBC0  EC88  F089         	call	_atol	;wreg free
 18336  00CBC4  0100               	movlb	0	; () banked
 18337  00CBC6  516C               	movf	?_atol& (0+255),w,b
 18338  00CBC8  0101               	movlb	1	; () banked
 18339  00CBCA  6FB7               	movwf	(_config+22)& (0+255),b
 18340                           
 18341                           ; BSR set to: 1
 18342                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 18343  00CBCC  0012               	return	
 18344  00CBCE                     l2976:
 18345                           
 18346                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 18347                           
 18348                           ; BSR set to: 1
 18349  00CBCE  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18350  00CBD2  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18351  00CBD6  0EBC               	movlw	low _cw_limit_string
 18352  00CBD8  0100               	movlb	0	; () banked
 18353  00CBDA  6F63               	movwf	stricmp@s2& (0+255),b
 18354  00CBDC  0EA2               	movlw	high _cw_limit_string
 18355  00CBDE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18356  00CBE0  ECC4  F0A2         	call	_stricmp	;wreg free
 18357  00CBE4  0100               	movlb	0	; () banked
 18358  00CBE6  5161               	movf	?_stricmp& (0+255),w,b
 18359  00CBE8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18360  00CBEA  A4D8               	btfss	status,2,c
 18361  00CBEC  D00B               	goto	l2977
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 18365  00CBEE  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18366  00CBF2  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18367  00CBF6  EC88  F089         	call	_atol	;wreg free
 18368  00CBFA  C06C  F1B8         	movff	?_atol,_config+23
 18369  00CBFE  C06D  F1B9         	movff	?_atol+1,_config+24
 18370                           
 18371                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 18372  00CC02  0012               	return	
 18373  00CC04                     l2977:
 18374                           
 18375                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18376  00CC04  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18377  00CC08  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18378  00CC0C  0E6D               	movlw	low _use_ccw_limit_string
 18379  00CC0E  0100               	movlb	0	; () banked
 18380  00CC10  6F63               	movwf	stricmp@s2& (0+255),b
 18381  00CC12  0EA2               	movlw	high _use_ccw_limit_string
 18382  00CC14  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18383  00CC16  ECC4  F0A2         	call	_stricmp	;wreg free
 18384  00CC1A  0100               	movlb	0	; () banked
 18385  00CC1C  5161               	movf	?_stricmp& (0+255),w,b
 18386  00CC1E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18387  00CC20  A4D8               	btfss	status,2,c
 18388  00CC22  D00B               	goto	l2978
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 18392  00CC24  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18393  00CC28  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18394  00CC2C  EC88  F089         	call	_atol	;wreg free
 18395  00CC30  0100               	movlb	0	; () banked
 18396  00CC32  516C               	movf	?_atol& (0+255),w,b
 18397  00CC34  0101               	movlb	1	; () banked
 18398  00CC36  6FBA               	movwf	(_config+25)& (0+255),b
 18399                           
 18400                           ; BSR set to: 1
 18401                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 18402  00CC38  0012               	return	
 18403  00CC3A                     l2978:
 18404                           
 18405                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 18406                           
 18407                           ; BSR set to: 1
 18408  00CC3A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18409  00CC3E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18410  00CC42  0EB2               	movlw	low _ccw_limit_string
 18411  00CC44  0100               	movlb	0	; () banked
 18412  00CC46  6F63               	movwf	stricmp@s2& (0+255),b
 18413  00CC48  0EA2               	movlw	high _ccw_limit_string
 18414  00CC4A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18415  00CC4C  ECC4  F0A2         	call	_stricmp	;wreg free
 18416  00CC50  0100               	movlb	0	; () banked
 18417  00CC52  5161               	movf	?_stricmp& (0+255),w,b
 18418  00CC54  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18419  00CC56  A4D8               	btfss	status,2,c
 18420  00CC58  0012               	return	
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 18424  00CC5A  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18425  00CC5E  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18426  00CC62  EC88  F089         	call	_atol	;wreg free
 18427  00CC66  C06C  F1BB         	movff	?_atol,_config+26
 18428  00CC6A  C06D  F1BC         	movff	?_atol+1,_config+27
 18429                           
 18430                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 18431  00CC6E  0012               	return	
 18432  00CC70                     __end_of__parse_item:
 18433                           	opt stack 0
 18434                           tblptru	equ	0xFF8
 18435                           tblptrh	equ	0xFF7
 18436                           tblptrl	equ	0xFF6
 18437                           tablat	equ	0xFF5
 18438                           prodh	equ	0xFF4
 18439                           prodl	equ	0xFF3
 18440                           postinc0	equ	0xFEE
 18441                           wreg	equ	0xFE8
 18442                           postinc1	equ	0xFE6
 18443                           postdec1	equ	0xFE5
 18444                           plusw1	equ	0xFE3
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           postdec2	equ	0xFDD
 18450                           plusw2	equ	0xFDB
 18451                           fsr2h	equ	0xFDA
 18452                           fsr2l	equ	0xFD9
 18453                           status	equ	0xFD8
 18454                           
 18455 ;; *************** function _stricmp *****************
 18456 ;; Defined at:
 18457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18458 ;; Parameters:    Size  Location     Type
 18459 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18460 ;;		 -> configFile_read@item_string(31), 
 18461 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18462 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 18463 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 18464 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 18465 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 18466 ;; Auto vars:     Size  Location     Type
 18467 ;;  r               1    6[BANK0 ] char 
 18468 ;; Return value:  Size  Location     Type
 18469 ;;                  2    1[BANK0 ] int 
 18470 ;; Registers used:
 18471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18472 ;; Tracked objects:
 18473 ;;		On entry : 0/0
 18474 ;;		On exit  : 0/0
 18475 ;;		Unchanged: 0/0
 18476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18480 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18481 ;;Total ram usage:        6 bytes
 18482 ;; Hardware stack levels used:    1
 18483 ;; Hardware stack levels required when called:   11
 18484 ;; This function calls:
 18485 ;;		_toupper
 18486 ;; This function is called by:
 18487 ;;		__parse_item
 18488 ;; This function uses a non-reentrant model
 18489 ;;
 18490                           
 18491                           	psect	text75
 18492  014588                     __ptext75:
 18493                           	opt stack 0
 18494  014588                     _stricmp:
 18495                           	opt stack 16
 18496                           
 18497                           ;incstack = 0
 18498  014588  D005               	goto	l3737
 18499  01458A  0100               	movlb	0	; () banked
 18500  01458C  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18501  01458E  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18502  014590  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18503  014592  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18504  014594                     l3737:
 18505                           
 18506                           ; BSR set to: 0
 18507  014594  C063  FFF6         	movff	stricmp@s2,tblptrl
 18508  014598  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18509  01459C                     	if	0	;tblptru may be non-zero
 18510  01459C                     	endif
 18511  01459C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18512  01459C  0E00               	movlw	low (__mediumconst shr (0+16))
 18513  01459E  6EF8               	movwf	tblptru,c
 18514  0145A0                     	endif
 18515  0145A0  0008               	tblrd		*
 18516  0145A2  50F5               	movf	tablat,w,c
 18517  0145A4  ECE2  F0AB         	call	_toupper
 18518  0145A8  0800               	sublw	0
 18519  0145AA  0100               	movlb	0	; () banked
 18520  0145AC  6F65               	movwf	??_stricmp& (0+255),b
 18521  0145AE  C061  FFD9         	movff	stricmp@s1,fsr2l
 18522  0145B2  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18523  0145B6  50DF               	movf	indf2,w,c
 18524  0145B8  ECE2  F0AB         	call	_toupper
 18525  0145BC  0100               	movlb	0	; () banked
 18526  0145BE  2565               	addwf	??_stricmp& (0+255),w,b
 18527  0145C0  6F66               	movwf	stricmp@r& (0+255),b
 18528  0145C2  5166               	movf	stricmp@r& (0+255),w,b
 18529  0145C4  A4D8               	btfss	status,2,c
 18530  0145C6  D007               	goto	u13950
 18531                           
 18532                           ; BSR set to: 0
 18533  0145C8  C061  FFD9         	movff	stricmp@s1,fsr2l
 18534  0145CC  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18535  0145D0  50DF               	movf	indf2,w,c
 18536  0145D2  A4D8               	btfss	status,2,c
 18537  0145D4  D7DA               	goto	l3738
 18538  0145D6                     u13950:
 18539                           
 18540                           ; BSR set to: 0
 18541                           
 18542                           ; BSR set to: 0
 18543                           
 18544                           ; BSR set to: 0
 18545  0145D6  5166               	movf	stricmp@r& (0+255),w,b
 18546  0145D8  6F61               	movwf	?_stricmp& (0+255),b
 18547  0145DA  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18548  0145DC  BF61               	btfsc	?_stricmp& (0+255),7,b
 18549  0145DE  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18550  0145E0  0012               	return	
 18551  0145E2                     __end_of_stricmp:
 18552                           	opt stack 0
 18553                           tblptru	equ	0xFF8
 18554                           tblptrh	equ	0xFF7
 18555                           tblptrl	equ	0xFF6
 18556                           tablat	equ	0xFF5
 18557                           prodh	equ	0xFF4
 18558                           prodl	equ	0xFF3
 18559                           postinc0	equ	0xFEE
 18560                           wreg	equ	0xFE8
 18561                           postinc1	equ	0xFE6
 18562                           postdec1	equ	0xFE5
 18563                           plusw1	equ	0xFE3
 18564                           fsr1h	equ	0xFE2
 18565                           fsr1l	equ	0xFE1
 18566                           indf2	equ	0xFDF
 18567                           postinc2	equ	0xFDE
 18568                           postdec2	equ	0xFDD
 18569                           plusw2	equ	0xFDB
 18570                           fsr2h	equ	0xFDA
 18571                           fsr2l	equ	0xFD9
 18572                           status	equ	0xFD8
 18573                           
 18574 ;; *************** function _toupper *****************
 18575 ;; Defined at:
 18576 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18577 ;; Parameters:    Size  Location     Type
 18578 ;;  c               1    wreg     unsigned char 
 18579 ;; Auto vars:     Size  Location     Type
 18580 ;;  c               1    0[BANK0 ] unsigned char 
 18581 ;; Return value:  Size  Location     Type
 18582 ;;                  1    wreg      unsigned char 
 18583 ;; Registers used:
 18584 ;;		wreg, status,2, status,0
 18585 ;; Tracked objects:
 18586 ;;		On entry : 0/0
 18587 ;;		On exit  : 0/0
 18588 ;;		Unchanged: 0/0
 18589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18594 ;;Total ram usage:        1 bytes
 18595 ;; Hardware stack levels used:    1
 18596 ;; Hardware stack levels required when called:   10
 18597 ;; This function calls:
 18598 ;;		Nothing
 18599 ;; This function is called by:
 18600 ;;		_stricmp
 18601 ;; This function uses a non-reentrant model
 18602 ;;
 18603                           
 18604                           	psect	text76
 18605  0157C4                     __ptext76:
 18606                           	opt stack 0
 18607  0157C4                     _toupper:
 18608                           	opt stack 16
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;incstack = 0
 18612                           ;toupper@c stored from wreg
 18613  0157C4  0100               	movlb	0	; () banked
 18614  0157C6  6F60               	movwf	toupper@c& (0+255),b
 18615  0157C8  0E7B               	movlw	123
 18616  0157CA  0100               	movlb	0	; () banked
 18617  0157CC  6160               	cpfslt	toupper@c& (0+255),b
 18618  0157CE  D004               	goto	l3760
 18619                           
 18620                           ; BSR set to: 0
 18621  0157D0  0E60               	movlw	96
 18622  0157D2  6560               	cpfsgt	toupper@c& (0+255),b
 18623  0157D4  D001               	goto	l3760
 18624                           
 18625                           ; BSR set to: 0
 18626  0157D6  9B60               	bcf	toupper@c& (0+255),5,b
 18627  0157D8                     l3760:
 18628                           
 18629                           ; BSR set to: 0
 18630                           
 18631                           ; BSR set to: 0
 18632  0157D8  5160               	movf	toupper@c& (0+255),w,b
 18633  0157DA  0012               	return	
 18634  0157DC                     __end_of_toupper:
 18635                           	opt stack 0
 18636                           tblptru	equ	0xFF8
 18637                           tblptrh	equ	0xFF7
 18638                           tblptrl	equ	0xFF6
 18639                           tablat	equ	0xFF5
 18640                           prodh	equ	0xFF4
 18641                           prodl	equ	0xFF3
 18642                           postinc0	equ	0xFEE
 18643                           wreg	equ	0xFE8
 18644                           postinc1	equ	0xFE6
 18645                           postdec1	equ	0xFE5
 18646                           plusw1	equ	0xFE3
 18647                           fsr1h	equ	0xFE2
 18648                           fsr1l	equ	0xFE1
 18649                           indf2	equ	0xFDF
 18650                           postinc2	equ	0xFDE
 18651                           postdec2	equ	0xFDD
 18652                           plusw2	equ	0xFDB
 18653                           fsr2h	equ	0xFDA
 18654                           fsr2l	equ	0xFD9
 18655                           status	equ	0xFD8
 18656                           
 18657 ;; *************** function _atol *****************
 18658 ;; Defined at:
 18659 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 18662 ;;		 -> configFile_read@value_string(12), 
 18663 ;; Auto vars:     Size  Location     Type
 18664 ;;  a               4   21[BANK0 ] long 
 18665 ;;  c               1   25[BANK0 ] unsigned char 
 18666 ;;  sign            1   20[BANK0 ] unsigned char 
 18667 ;; Return value:  Size  Location     Type
 18668 ;;                  4   12[BANK0 ] long 
 18669 ;; Registers used:
 18670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18671 ;; Tracked objects:
 18672 ;;		On entry : 0/0
 18673 ;;		On exit  : 0/0
 18674 ;;		Unchanged: 0/0
 18675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18677 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18678 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18679 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18680 ;;Total ram usage:       14 bytes
 18681 ;; Hardware stack levels used:    1
 18682 ;; Hardware stack levels required when called:   11
 18683 ;; This function calls:
 18684 ;;		___lmul
 18685 ;;		_isdigit
 18686 ;; This function is called by:
 18687 ;;		__parse_item
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           	psect	text77
 18692  011310                     __ptext77:
 18693                           	opt stack 0
 18694  011310                     _atol:
 18695                           	opt stack 16
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;incstack = 0
 18699  011310  C06C  FFD9         	movff	atol@s,fsr2l
 18700  011314  C06D  FFDA         	movff	atol@s+1,fsr2h
 18701  011318  50DF               	movf	indf2,w,c
 18702  01131A  0100               	movlb	0	; () banked
 18703  01131C  6F79               	movwf	atol@c& (0+255),b
 18704                           
 18705                           ; BSR set to: 0
 18706  01131E  4B6C               	infsnz	atol@s& (0+255),f,b
 18707  011320  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18708                           
 18709                           ; BSR set to: 0
 18710  011322  0E20               	movlw	32
 18711  011324  1979               	xorwf	atol@c& (0+255),w,b
 18712  011326  B4D8               	btfsc	status,2,c
 18713  011328  D7F3               	goto	_atol
 18714                           
 18715                           ; BSR set to: 0
 18716  01132A  0E09               	movlw	9
 18717  01132C  1979               	xorwf	atol@c& (0+255),w,b
 18718  01132E  B4D8               	btfsc	status,2,c
 18719  011330  D7EF               	goto	_atol
 18720                           
 18721                           ; BSR set to: 0
 18722                           
 18723                           ; BSR set to: 0
 18724  011332  0E00               	movlw	0
 18725  011334  6F75               	movwf	atol@a& (0+255),b
 18726  011336  0E00               	movlw	0
 18727  011338  6F76               	movwf	(atol@a+1)& (0+255),b
 18728  01133A  0E00               	movlw	0
 18729  01133C  6F77               	movwf	(atol@a+2)& (0+255),b
 18730  01133E  0E00               	movlw	0
 18731  011340  6F78               	movwf	(atol@a+3)& (0+255),b
 18732  011342  0E00               	movlw	0
 18733  011344  6F74               	movwf	atol@sign& (0+255),b
 18734                           
 18735                           ; BSR set to: 0
 18736  011346  0E2D               	movlw	45
 18737  011348  1979               	xorwf	atol@c& (0+255),w,b
 18738  01134A  A4D8               	btfss	status,2,c
 18739  01134C  D002               	goto	l3680
 18740                           
 18741                           ; BSR set to: 0
 18742  01134E  2B74               	incf	atol@sign& (0+255),f,b
 18743  011350  D029               	goto	L92
 18744  011352                     l3680:
 18745                           
 18746                           ; BSR set to: 0
 18747                           
 18748                           ; BSR set to: 0
 18749  011352  0E2B               	movlw	43
 18750  011354  1979               	xorwf	atol@c& (0+255),w,b
 18751  011356  A4D8               	btfss	status,2,c
 18752  011358  D02D               	goto	l3683
 18753  01135A  D024               	goto	L92
 18754  01135C                     
 18755                           ; BSR set to: 0
 18756  01135C  C075  F060         	movff	atol@a,___lmul@multiplier
 18757  011360  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 18758  011364  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 18759  011368  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 18760  01136C  0E0A               	movlw	10
 18761  01136E  0100               	movlb	0	; () banked
 18762  011370  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18763  011372  0E00               	movlw	0
 18764  011374  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18765  011376  0E00               	movlw	0
 18766  011378  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18767  01137A  0E00               	movlw	0
 18768  01137C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18769  01137E  ECD0  F0A3         	call	___lmul	;wreg free
 18770  011382  C079  F070         	movff	atol@c,??_atol
 18771  011386  0ED0               	movlw	208
 18772  011388  0100               	movlb	0	; () banked
 18773  01138A  2770               	addwf	??_atol& (0+255),f,b
 18774  01138C  5170               	movf	??_atol& (0+255),w,b
 18775  01138E  2560               	addwf	?___lmul& (0+255),w,b
 18776  011390  6F75               	movwf	atol@a& (0+255),b
 18777  011392  0E00               	movlw	0
 18778  011394  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 18779  011396  6F76               	movwf	(atol@a+1)& (0+255),b
 18780  011398  0E00               	movlw	0
 18781  01139A  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 18782  01139C  6F77               	movwf	(atol@a+2)& (0+255),b
 18783  01139E  0E00               	movlw	0
 18784  0113A0  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 18785  0113A2  6F78               	movwf	(atol@a+3)& (0+255),b
 18786  0113A4                     L92:
 18787                           
 18788                           ; BSR set to: 0
 18789  0113A4  C06C  FFD9         	movff	atol@s,fsr2l
 18790  0113A8  C06D  FFDA         	movff	atol@s+1,fsr2h
 18791  0113AC  50DF               	movf	indf2,w,c
 18792  0113AE  6F79               	movwf	atol@c& (0+255),b
 18793                           
 18794                           ; BSR set to: 0
 18795  0113B0  4B6C               	infsnz	atol@s& (0+255),f,b
 18796  0113B2  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18797  0113B4                     l3683:
 18798                           
 18799                           ; BSR set to: 0
 18800                           
 18801                           ; BSR set to: 0
 18802  0113B4  5179               	movf	atol@c& (0+255),w,b
 18803  0113B6  EC41  F0AB         	call	_isdigit
 18804  0113BA  B0D8               	btfsc	status,0,c
 18805  0113BC  D7CF               	goto	l3684
 18806  0113BE  0100               	movlb	0	; () banked
 18807  0113C0  5174               	movf	atol@sign& (0+255),w,b
 18808  0113C2  B4D8               	btfsc	status,2,c
 18809  0113C4  D01A               	goto	l3686
 18810                           
 18811                           ; BSR set to: 0
 18812  0113C6  C075  F070         	movff	atol@a,??_atol
 18813  0113CA  C076  F071         	movff	atol@a+1,??_atol+1
 18814  0113CE  C077  F072         	movff	atol@a+2,??_atol+2
 18815  0113D2  C078  F073         	movff	atol@a+3,??_atol+3
 18816  0113D6  1F70               	comf	??_atol& (0+255),f,b
 18817  0113D8  1F71               	comf	(??_atol+1)& (0+255),f,b
 18818  0113DA  1F72               	comf	(??_atol+2)& (0+255),f,b
 18819  0113DC  1F73               	comf	(??_atol+3)& (0+255),f,b
 18820  0113DE  2B70               	incf	??_atol& (0+255),f,b
 18821  0113E0  0E00               	movlw	0
 18822  0113E2  2371               	addwfc	(??_atol+1)& (0+255),f,b
 18823  0113E4  2372               	addwfc	(??_atol+2)& (0+255),f,b
 18824  0113E6  2373               	addwfc	(??_atol+3)& (0+255),f,b
 18825  0113E8  C070  F06C         	movff	??_atol,?_atol
 18826  0113EC  C071  F06D         	movff	??_atol+1,?_atol+1
 18827  0113F0  C072  F06E         	movff	??_atol+2,?_atol+2
 18828  0113F4  C073  F06F         	movff	??_atol+3,?_atol+3
 18829                           
 18830                           ; BSR set to: 0
 18831  0113F8  0012               	return	
 18832  0113FA                     l3686:
 18833                           
 18834                           ; BSR set to: 0
 18835  0113FA  C075  F06C         	movff	atol@a,?_atol
 18836  0113FE  C076  F06D         	movff	atol@a+1,?_atol+1
 18837  011402  C077  F06E         	movff	atol@a+2,?_atol+2
 18838  011406  C078  F06F         	movff	atol@a+3,?_atol+3
 18839                           
 18840                           ; BSR set to: 0
 18841  01140A  0012               	return		;funcret
 18842  01140C                     __end_of_atol:
 18843                           	opt stack 0
 18844                           tblptru	equ	0xFF8
 18845                           tblptrh	equ	0xFF7
 18846                           tblptrl	equ	0xFF6
 18847                           tablat	equ	0xFF5
 18848                           prodh	equ	0xFF4
 18849                           prodl	equ	0xFF3
 18850                           postinc0	equ	0xFEE
 18851                           wreg	equ	0xFE8
 18852                           postinc1	equ	0xFE6
 18853                           postdec1	equ	0xFE5
 18854                           plusw1	equ	0xFE3
 18855                           fsr1h	equ	0xFE2
 18856                           fsr1l	equ	0xFE1
 18857                           indf2	equ	0xFDF
 18858                           postinc2	equ	0xFDE
 18859                           postdec2	equ	0xFDD
 18860                           plusw2	equ	0xFDB
 18861                           fsr2h	equ	0xFDA
 18862                           fsr2l	equ	0xFD9
 18863                           status	equ	0xFD8
 18864                           
 18865 ;; *************** function _atoi *****************
 18866 ;; Defined at:
 18867 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 18868 ;; Parameters:    Size  Location     Type
 18869 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 18870 ;;		 -> configFile_read@value_string(12), 
 18871 ;; Auto vars:     Size  Location     Type
 18872 ;;  a               2   11[BANK0 ] int 
 18873 ;;  sign            1   10[BANK0 ] unsigned char 
 18874 ;; Return value:  Size  Location     Type
 18875 ;;                  2    6[BANK0 ] int 
 18876 ;; Registers used:
 18877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18878 ;; Tracked objects:
 18879 ;;		On entry : 0/0
 18880 ;;		On exit  : 0/0
 18881 ;;		Unchanged: 0/0
 18882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18884 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18886 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18887 ;;Total ram usage:        7 bytes
 18888 ;; Hardware stack levels used:    1
 18889 ;; Hardware stack levels required when called:   11
 18890 ;; This function calls:
 18891 ;;		___wmul
 18892 ;;		_isdigit
 18893 ;; This function is called by:
 18894 ;;		__parse_item
 18895 ;; This function uses a non-reentrant model
 18896 ;;
 18897                           
 18898                           	psect	text78
 18899  0120CC                     __ptext78:
 18900                           	opt stack 0
 18901  0120CC                     _atoi:
 18902                           	opt stack 16
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;incstack = 0
 18906  0120CC  D003               	goto	l3663
 18907  0120CE  0100               	movlb	0	; () banked
 18908  0120D0  4B66               	infsnz	atoi@s& (0+255),f,b
 18909  0120D2  2B67               	incf	(atoi@s+1)& (0+255),f,b
 18910  0120D4                     l3663:
 18911                           
 18912                           ; BSR set to: 0
 18913  0120D4  C066  FFD9         	movff	atoi@s,fsr2l
 18914  0120D8  C067  FFDA         	movff	atoi@s+1,fsr2h
 18915  0120DC  0E20               	movlw	32
 18916  0120DE  18DE               	xorwf	postinc2,w,c
 18917  0120E0  B4D8               	btfsc	status,2,c
 18918  0120E2  D7F5               	goto	l3664
 18919  0120E4  C066  FFD9         	movff	atoi@s,fsr2l
 18920  0120E8  C067  FFDA         	movff	atoi@s+1,fsr2h
 18921  0120EC  0E09               	movlw	9
 18922  0120EE  18DE               	xorwf	postinc2,w,c
 18923  0120F0  B4D8               	btfsc	status,2,c
 18924  0120F2  D7ED               	goto	l3664
 18925  0120F4  0E00               	movlw	0
 18926  0120F6  0100               	movlb	0	; () banked
 18927  0120F8  6F6C               	movwf	(atoi@a+1)& (0+255),b
 18928  0120FA  0E00               	movlw	0
 18929  0120FC  6F6B               	movwf	atoi@a& (0+255),b
 18930  0120FE  0E00               	movlw	0
 18931  012100  6F6A               	movwf	atoi@sign& (0+255),b
 18932                           
 18933                           ; BSR set to: 0
 18934  012102  C066  FFD9         	movff	atoi@s,fsr2l
 18935  012106  C067  FFDA         	movff	atoi@s+1,fsr2h
 18936  01210A  0E2D               	movlw	45
 18937  01210C  18DE               	xorwf	postinc2,w,c
 18938  01210E  A4D8               	btfss	status,2,c
 18939  012110  D002               	goto	l3666
 18940                           
 18941                           ; BSR set to: 0
 18942  012112  2B6A               	incf	atoi@sign& (0+255),f,b
 18943  012114  D026               	goto	l15109
 18944  012116                     l3666:
 18945                           
 18946                           ; BSR set to: 0
 18947                           
 18948                           ; BSR set to: 0
 18949  012116  C066  FFD9         	movff	atoi@s,fsr2l
 18950  01211A  C067  FFDA         	movff	atoi@s+1,fsr2h
 18951  01211E  0E2B               	movlw	43
 18952  012120  18DE               	xorwf	postinc2,w,c
 18953  012122  A4D8               	btfss	status,2,c
 18954  012124  D020               	goto	l3669
 18955  012126  D01D               	goto	l15109
 18956  012128                     
 18957                           ; BSR set to: 0
 18958  012128  C06B  F060         	movff	atoi@a,___wmul@multiplier
 18959  01212C  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 18960  012130  0E00               	movlw	0
 18961  012132  0100               	movlb	0	; () banked
 18962  012134  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18963  012136  0E0A               	movlw	10
 18964  012138  6F62               	movwf	___wmul@multiplicand& (0+255),b
 18965  01213A  ECAC  F0AA         	call	___wmul	;wreg free
 18966  01213E  C066  FFD9         	movff	atoi@s,fsr2l
 18967  012142  C067  FFDA         	movff	atoi@s+1,fsr2h
 18968  012146  50DF               	movf	indf2,w,c
 18969  012148  0100               	movlb	0	; () banked
 18970  01214A  6F68               	movwf	??_atoi& (0+255),b
 18971  01214C  6B69               	clrf	(??_atoi+1)& (0+255),b
 18972  01214E  5160               	movf	?___wmul& (0+255),w,b
 18973  012150  2768               	addwf	??_atoi& (0+255),f,b
 18974  012152  5161               	movf	(?___wmul+1)& (0+255),w,b
 18975  012154  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 18976  012156  0ED0               	movlw	208
 18977  012158  2568               	addwf	??_atoi& (0+255),w,b
 18978  01215A  6F6B               	movwf	atoi@a& (0+255),b
 18979  01215C  0EFF               	movlw	255
 18980  01215E  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 18981  012160  6F6C               	movwf	(atoi@a+1)& (0+255),b
 18982  012162                     l15109:
 18983                           
 18984                           ; BSR set to: 0
 18985  012162  4B66               	infsnz	atoi@s& (0+255),f,b
 18986  012164  2B67               	incf	(atoi@s+1)& (0+255),f,b
 18987  012166                     l3669:
 18988                           
 18989                           ; BSR set to: 0
 18990                           
 18991                           ; BSR set to: 0
 18992  012166  C066  FFD9         	movff	atoi@s,fsr2l
 18993  01216A  C067  FFDA         	movff	atoi@s+1,fsr2h
 18994  01216E  50DF               	movf	indf2,w,c
 18995  012170  EC41  F0AB         	call	_isdigit
 18996  012174  B0D8               	btfsc	status,0,c
 18997  012176  D7D8               	goto	l3670
 18998  012178  0100               	movlb	0	; () banked
 18999  01217A  516A               	movf	atoi@sign& (0+255),w,b
 19000  01217C  B4D8               	btfsc	status,2,c
 19001  01217E  D00D               	goto	l3672
 19002                           
 19003                           ; BSR set to: 0
 19004  012180  C06B  F068         	movff	atoi@a,??_atoi
 19005  012184  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19006  012188  1F68               	comf	??_atoi& (0+255),f,b
 19007  01218A  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19008  01218C  4B68               	infsnz	??_atoi& (0+255),f,b
 19009  01218E  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19010  012190  C068  F066         	movff	??_atoi,?_atoi
 19011  012194  C069  F067         	movff	??_atoi+1,?_atoi+1
 19012  012198  0012               	return	
 19013  01219A                     l3672:
 19014                           
 19015                           ; BSR set to: 0
 19016  01219A  C06B  F066         	movff	atoi@a,?_atoi
 19017  01219E  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19018                           
 19019                           ; BSR set to: 0
 19020  0121A2  0012               	return		;funcret
 19021  0121A4                     __end_of_atoi:
 19022                           	opt stack 0
 19023                           tblptru	equ	0xFF8
 19024                           tblptrh	equ	0xFF7
 19025                           tblptrl	equ	0xFF6
 19026                           tablat	equ	0xFF5
 19027                           prodh	equ	0xFF4
 19028                           prodl	equ	0xFF3
 19029                           postinc0	equ	0xFEE
 19030                           wreg	equ	0xFE8
 19031                           postinc1	equ	0xFE6
 19032                           postdec1	equ	0xFE5
 19033                           plusw1	equ	0xFE3
 19034                           fsr1h	equ	0xFE2
 19035                           fsr1l	equ	0xFE1
 19036                           indf2	equ	0xFDF
 19037                           postinc2	equ	0xFDE
 19038                           postdec2	equ	0xFDD
 19039                           plusw2	equ	0xFDB
 19040                           fsr2h	equ	0xFDA
 19041                           fsr2l	equ	0xFD9
 19042                           status	equ	0xFD8
 19043                           
 19044 ;; *************** function _isdigit *****************
 19045 ;; Defined at:
 19046 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19047 ;; Parameters:    Size  Location     Type
 19048 ;;  c               1    wreg     unsigned char 
 19049 ;; Auto vars:     Size  Location     Type
 19050 ;;  c               1    2[BANK0 ] unsigned char 
 19051 ;; Return value:  Size  Location     Type
 19052 ;;		None               void
 19053 ;; Registers used:
 19054 ;;		wreg, status,2, status,0
 19055 ;; Tracked objects:
 19056 ;;		On entry : 0/0
 19057 ;;		On exit  : 0/0
 19058 ;;		Unchanged: 0/0
 19059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19061 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19062 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19064 ;;Total ram usage:        3 bytes
 19065 ;; Hardware stack levels used:    1
 19066 ;; Hardware stack levels required when called:   10
 19067 ;; This function calls:
 19068 ;;		Nothing
 19069 ;; This function is called by:
 19070 ;;		_atoi
 19071 ;;		_atol
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           	psect	text79
 19076  015682                     __ptext79:
 19077                           	opt stack 0
 19078  015682                     _isdigit:
 19079                           	opt stack 16
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;incstack = 0
 19083                           ;isdigit@c stored from wreg
 19084  015682  0100               	movlb	0	; () banked
 19085  015684  6F62               	movwf	isdigit@c& (0+255),b
 19086  015686  0E00               	movlw	0
 19087  015688  0100               	movlb	0	; () banked
 19088  01568A  6F61               	movwf	_isdigit$8218& (0+255),b
 19089                           
 19090                           ; BSR set to: 0
 19091  01568C  0E3A               	movlw	58
 19092  01568E  6162               	cpfslt	isdigit@c& (0+255),b
 19093  015690  D005               	goto	l3691
 19094                           
 19095                           ; BSR set to: 0
 19096  015692  0E2F               	movlw	47
 19097  015694  6562               	cpfsgt	isdigit@c& (0+255),b
 19098  015696  D002               	goto	l3691
 19099                           
 19100                           ; BSR set to: 0
 19101  015698  0E01               	movlw	1
 19102  01569A  6F61               	movwf	_isdigit$8218& (0+255),b
 19103  01569C                     l3691:
 19104                           
 19105                           ; BSR set to: 0
 19106                           
 19107                           ; BSR set to: 0
 19108  01569C  C061  F060         	movff	_isdigit$8218,??_isdigit
 19109  0156A0  3160               	rrcf	??_isdigit& (0+255),w,b
 19110  0156A2  0012               	return	
 19111  0156A4                     __end_of_isdigit:
 19112                           	opt stack 0
 19113                           tblptru	equ	0xFF8
 19114                           tblptrh	equ	0xFF7
 19115                           tblptrl	equ	0xFF6
 19116                           tablat	equ	0xFF5
 19117                           prodh	equ	0xFF4
 19118                           prodl	equ	0xFF3
 19119                           postinc0	equ	0xFEE
 19120                           wreg	equ	0xFE8
 19121                           postinc1	equ	0xFE6
 19122                           postdec1	equ	0xFE5
 19123                           plusw1	equ	0xFE3
 19124                           fsr1h	equ	0xFE2
 19125                           fsr1l	equ	0xFE1
 19126                           indf2	equ	0xFDF
 19127                           postinc2	equ	0xFDE
 19128                           postdec2	equ	0xFDD
 19129                           plusw2	equ	0xFDB
 19130                           fsr2h	equ	0xFDA
 19131                           fsr2l	equ	0xFD9
 19132                           status	equ	0xFD8
 19133                           
 19134 ;; *************** function ___wmul *****************
 19135 ;; Defined at:
 19136 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19137 ;; Parameters:    Size  Location     Type
 19138 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19139 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19140 ;; Auto vars:     Size  Location     Type
 19141 ;;  product         2    4[BANK0 ] unsigned int 
 19142 ;; Return value:  Size  Location     Type
 19143 ;;                  2    0[BANK0 ] unsigned int 
 19144 ;; Registers used:
 19145 ;;		wreg, status,2, status,0, prodl, prodh
 19146 ;; Tracked objects:
 19147 ;;		On entry : 0/0
 19148 ;;		On exit  : 0/0
 19149 ;;		Unchanged: 0/0
 19150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19151 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19154 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19155 ;;Total ram usage:        6 bytes
 19156 ;; Hardware stack levels used:    1
 19157 ;; Hardware stack levels required when called:   10
 19158 ;; This function calls:
 19159 ;;		Nothing
 19160 ;; This function is called by:
 19161 ;;		_atoi
 19162 ;; This function uses a non-reentrant model
 19163 ;;
 19164                           
 19165                           	psect	text80
 19166  015558                     __ptext80:
 19167                           	opt stack 0
 19168  015558                     ___wmul:
 19169                           	opt stack 16
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;incstack = 0
 19173  015558  0100               	movlb	0	; () banked
 19174  01555A  5160               	movf	___wmul@multiplier& (0+255),w,b
 19175  01555C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19176  01555E  CFF3 F064          	movff	prodl,___wmul@product
 19177  015562  CFF4 F065          	movff	prodh,___wmul@product+1
 19178  015566  5160               	movf	___wmul@multiplier& (0+255),w,b
 19179  015568  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19180  01556A  50F3               	movf	prodl,w,c
 19181  01556C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19182  01556E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19183  015570  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19184  015572  50F3               	movf	prodl,w,c
 19185  015574  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19186                           
 19187                           ; BSR set to: 0
 19188  015576  C064  F060         	movff	___wmul@product,?___wmul
 19189  01557A  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19190  01557E  0012               	return	
 19191  015580                     __end_of___wmul:
 19192                           	opt stack 0
 19193                           tblptru	equ	0xFF8
 19194                           tblptrh	equ	0xFF7
 19195                           tblptrl	equ	0xFF6
 19196                           tablat	equ	0xFF5
 19197                           prodh	equ	0xFF4
 19198                           prodl	equ	0xFF3
 19199                           postinc0	equ	0xFEE
 19200                           wreg	equ	0xFE8
 19201                           postinc1	equ	0xFE6
 19202                           postdec1	equ	0xFE5
 19203                           plusw1	equ	0xFE3
 19204                           fsr1h	equ	0xFE2
 19205                           fsr1l	equ	0xFE1
 19206                           indf2	equ	0xFDF
 19207                           postinc2	equ	0xFDE
 19208                           postdec2	equ	0xFDD
 19209                           plusw2	equ	0xFDB
 19210                           fsr2h	equ	0xFDA
 19211                           fsr2l	equ	0xFD9
 19212                           status	equ	0xFD8
 19213                           
 19214 ;; *************** function __get_item *****************
 19215 ;; Defined at:
 19216 ;;		line 68 in file "config_file.c"
 19217 ;; Parameters:    Size  Location     Type
 19218 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 19219 ;;		 -> configFile_read@item_string(31), 
 19220 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 19221 ;;		 -> configFile_read@value_string(12), 
 19222 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 19223 ;;		 -> ConfigFile_buffer(512), 
 19224 ;; Auto vars:     Size  Location     Type
 19225 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 19226 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  1    wreg      unsigned char 
 19229 ;; Registers used:
 19230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19236 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19238 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19239 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19240 ;;Total ram usage:       11 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:   10
 19243 ;; This function calls:
 19244 ;;		Nothing
 19245 ;; This function is called by:
 19246 ;;		_configFile_read
 19247 ;; This function uses a non-reentrant model
 19248 ;;
 19249                           
 19250                           	psect	text81
 19251  00F5C4                     __ptext81:
 19252                           	opt stack 0
 19253  00F5C4                     __get_item:
 19254                           	opt stack 18
 19255                           
 19256                           ;config_file.c: 70: uint8_t item_ctr;;config_file.c: 71: uint8_t value_ctr;;config_file.
      +                          c: 74: for(item_ctr=0;item_ctr<30;++item_ctr)
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;incstack = 0
 19260  00F5C4  0E00               	movlw	0
 19261  00F5C6  0100               	movlb	0	; () banked
 19262  00F5C8  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 19263  00F5CA                     l15963:
 19264                           
 19265                           ; BSR set to: 0
 19266  00F5CA  0E1D               	movlw	29
 19267  00F5CC  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 19268  00F5CE  D001               	goto	l2949
 19269  00F5D0  D020               	goto	u14960
 19270  00F5D2                     l2949:
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;config_file.c: 75: {;config_file.c: 77: if(buffer[item_ctr] == '=')
 19274                           
 19275                           ; BSR set to: 0
 19276  00F5D2  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19277  00F5D4  0D01               	mullw	1
 19278  00F5D6  50F3               	movf	prodl,w,c
 19279  00F5D8  2564               	addwf	__get_item@buffer& (0+255),w,b
 19280  00F5DA  6ED9               	movwf	fsr2l,c
 19281  00F5DC  50F4               	movf	prodh,w,c
 19282  00F5DE  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19283  00F5E0  6EDA               	movwf	fsr2h,c
 19284  00F5E2  0E3D               	movlw	61
 19285  00F5E4  18DE               	xorwf	postinc2,w,c
 19286  00F5E6  B4D8               	btfsc	status,2,c
 19287  00F5E8  D014               	goto	u14960
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;config_file.c: 80: };config_file.c: 81: item_string[item_ctr] = buffer[item_ctr];
 19291                           
 19292                           ; BSR set to: 0
 19293                           
 19294                           ; BSR set to: 0
 19295                           ;config_file.c: 78: {;config_file.c: 79: break;
 19296  00F5EA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19297  00F5EC  0D01               	mullw	1
 19298  00F5EE  50F3               	movf	prodl,w,c
 19299  00F5F0  2564               	addwf	__get_item@buffer& (0+255),w,b
 19300  00F5F2  6ED9               	movwf	fsr2l,c
 19301  00F5F4  50F4               	movf	prodh,w,c
 19302  00F5F6  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19303  00F5F8  6EDA               	movwf	fsr2h,c
 19304  00F5FA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19305  00F5FC  0D01               	mullw	1
 19306  00F5FE  50F3               	movf	prodl,w,c
 19307  00F600  2560               	addwf	__get_item@item_string& (0+255),w,b
 19308  00F602  6EE1               	movwf	fsr1l,c
 19309  00F604  50F4               	movf	prodh,w,c
 19310  00F606  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19311  00F608  6EE2               	movwf	fsr1h,c
 19312  00F60A  CFDF FFE7          	movff	indf2,indf1
 19313                           
 19314                           ; BSR set to: 0
 19315  00F60E  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19316  00F610  D7DC               	goto	l15963
 19317  00F612                     u14960:
 19318                           
 19319                           ; BSR set to: 0
 19320                           ;config_file.c: 82: };config_file.c: 83: item_string[item_ctr++] = 0;
 19321                           
 19322                           ; BSR set to: 0
 19323  00F612  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19324  00F614  0D01               	mullw	1
 19325  00F616  50F3               	movf	prodl,w,c
 19326  00F618  2560               	addwf	__get_item@item_string& (0+255),w,b
 19327  00F61A  6ED9               	movwf	fsr2l,c
 19328  00F61C  50F4               	movf	prodh,w,c
 19329  00F61E  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19330  00F620  6EDA               	movwf	fsr2h,c
 19331  00F622  0E00               	movlw	0
 19332  00F624  6EDF               	movwf	indf2,c
 19333                           
 19334                           ; BSR set to: 0
 19335  00F626  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19336                           
 19337                           ; BSR set to: 0
 19338                           ;config_file.c: 86: for(value_ctr=0;value_ctr<11;++value_ctr)
 19339  00F628  0E00               	movlw	0
 19340  00F62A  6F69               	movwf	__get_item@value_ctr& (0+255),b
 19341  00F62C                     l15983:
 19342                           
 19343                           ; BSR set to: 0
 19344  00F62C  0E0A               	movlw	10
 19345  00F62E  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 19346  00F630  D001               	goto	l2952
 19347  00F632  D03B               	goto	u15000
 19348  00F634                     l2952:
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;config_file.c: 87: {;config_file.c: 89: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 19352                           
 19353                           ; BSR set to: 0
 19354  00F634  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19355  00F636  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19356  00F63A  6B67               	clrf	(??__get_item+1)& (0+255),b
 19357  00F63C  2766               	addwf	??__get_item& (0+255),f,b
 19358  00F63E  0E00               	movlw	0
 19359  00F640  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19360  00F642  5166               	movf	??__get_item& (0+255),w,b
 19361  00F644  2564               	addwf	__get_item@buffer& (0+255),w,b
 19362  00F646  6ED9               	movwf	fsr2l,c
 19363  00F648  5167               	movf	(??__get_item+1)& (0+255),w,b
 19364  00F64A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19365  00F64C  6EDA               	movwf	fsr2h,c
 19366  00F64E  0E0D               	movlw	13
 19367  00F650  18DE               	xorwf	postinc2,w,c
 19368  00F652  B4D8               	btfsc	status,2,c
 19369  00F654  D02A               	goto	u15000
 19370                           
 19371                           ; BSR set to: 0
 19372  00F656  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19373  00F658  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19374  00F65C  6B67               	clrf	(??__get_item+1)& (0+255),b
 19375  00F65E  2766               	addwf	??__get_item& (0+255),f,b
 19376  00F660  0E00               	movlw	0
 19377  00F662  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19378  00F664  5166               	movf	??__get_item& (0+255),w,b
 19379  00F666  2564               	addwf	__get_item@buffer& (0+255),w,b
 19380  00F668  6ED9               	movwf	fsr2l,c
 19381  00F66A  5167               	movf	(??__get_item+1)& (0+255),w,b
 19382  00F66C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19383  00F66E  6EDA               	movwf	fsr2h,c
 19384  00F670  0E0A               	movlw	10
 19385  00F672  18DE               	xorwf	postinc2,w,c
 19386  00F674  B4D8               	btfsc	status,2,c
 19387  00F676  D019               	goto	u15000
 19388                           
 19389                           ; BSR set to: 0
 19390                           ;config_file.c: 92: };config_file.c: 93: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 19391                           
 19392                           ; BSR set to: 0
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;config_file.c: 90: {;config_file.c: 91: break;
 19396  00F678  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19397  00F67A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19398  00F67E  6B67               	clrf	(??__get_item+1)& (0+255),b
 19399  00F680  2766               	addwf	??__get_item& (0+255),f,b
 19400  00F682  0E00               	movlw	0
 19401  00F684  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19402  00F686  5166               	movf	??__get_item& (0+255),w,b
 19403  00F688  2564               	addwf	__get_item@buffer& (0+255),w,b
 19404  00F68A  6ED9               	movwf	fsr2l,c
 19405  00F68C  5167               	movf	(??__get_item+1)& (0+255),w,b
 19406  00F68E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19407  00F690  6EDA               	movwf	fsr2h,c
 19408  00F692  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19409  00F694  0D01               	mullw	1
 19410  00F696  50F3               	movf	prodl,w,c
 19411  00F698  2562               	addwf	__get_item@value_string& (0+255),w,b
 19412  00F69A  6EE1               	movwf	fsr1l,c
 19413  00F69C  50F4               	movf	prodh,w,c
 19414  00F69E  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 19415  00F6A0  6EE2               	movwf	fsr1h,c
 19416  00F6A2  CFDF FFE7          	movff	indf2,indf1
 19417                           
 19418                           ; BSR set to: 0
 19419  00F6A6  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 19420  00F6A8  D7C1               	goto	l15983
 19421  00F6AA                     u15000:
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;config_file.c: 94: };config_file.c: 95: value_string[value_ctr++] = 0;
 19425                           
 19426                           ; BSR set to: 0
 19427  00F6AA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19428  00F6AC  0D01               	mullw	1
 19429  00F6AE  50F3               	movf	prodl,w,c
 19430  00F6B0  2562               	addwf	__get_item@value_string& (0+255),w,b
 19431  00F6B2  6ED9               	movwf	fsr2l,c
 19432  00F6B4  50F4               	movf	prodh,w,c
 19433  00F6B6  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 19434  00F6B8  6EDA               	movwf	fsr2h,c
 19435  00F6BA  0E00               	movlw	0
 19436  00F6BC  6EDF               	movwf	indf2,c
 19437  00F6BE                     
 19438                           ; BSR set to: 0
 19439                           ;config_file.c: 99: {;config_file.c: 100: ++value_ctr;
 19440                           
 19441                           ; BSR set to: 0
 19442                           
 19443                           ;config_file.c: 98: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_c
      +                          tr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 19444                           
 19445                           ; BSR set to: 0
 19446  00F6BE  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 19447                           
 19448                           ; BSR set to: 0
 19449                           
 19450                           ; BSR set to: 0
 19451  00F6C0  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19452  00F6C2  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19453  00F6C6  6B67               	clrf	(??__get_item+1)& (0+255),b
 19454  00F6C8  2766               	addwf	??__get_item& (0+255),f,b
 19455  00F6CA  0E00               	movlw	0
 19456  00F6CC  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19457  00F6CE  5166               	movf	??__get_item& (0+255),w,b
 19458  00F6D0  2564               	addwf	__get_item@buffer& (0+255),w,b
 19459  00F6D2  6ED9               	movwf	fsr2l,c
 19460  00F6D4  5167               	movf	(??__get_item+1)& (0+255),w,b
 19461  00F6D6  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19462  00F6D8  6EDA               	movwf	fsr2h,c
 19463  00F6DA  0E0D               	movlw	13
 19464  00F6DC  18DE               	xorwf	postinc2,w,c
 19465  00F6DE  B4D8               	btfsc	status,2,c
 19466  00F6E0  D7EE               	goto	l15999
 19467                           
 19468                           ; BSR set to: 0
 19469  00F6E2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19470  00F6E4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19471  00F6E8  6B67               	clrf	(??__get_item+1)& (0+255),b
 19472  00F6EA  2766               	addwf	??__get_item& (0+255),f,b
 19473  00F6EC  0E00               	movlw	0
 19474  00F6EE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19475  00F6F0  5166               	movf	??__get_item& (0+255),w,b
 19476  00F6F2  2564               	addwf	__get_item@buffer& (0+255),w,b
 19477  00F6F4  6ED9               	movwf	fsr2l,c
 19478  00F6F6  5167               	movf	(??__get_item+1)& (0+255),w,b
 19479  00F6F8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19480  00F6FA  6EDA               	movwf	fsr2h,c
 19481  00F6FC  0E0A               	movlw	10
 19482  00F6FE  18DE               	xorwf	postinc2,w,c
 19483  00F700  B4D8               	btfsc	status,2,c
 19484  00F702  D7DD               	goto	l15999
 19485                           
 19486                           ; BSR set to: 0
 19487  00F704  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19488  00F706  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19489  00F70A  6B67               	clrf	(??__get_item+1)& (0+255),b
 19490  00F70C  2766               	addwf	??__get_item& (0+255),f,b
 19491  00F70E  0E00               	movlw	0
 19492  00F710  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19493  00F712  5166               	movf	??__get_item& (0+255),w,b
 19494  00F714  2564               	addwf	__get_item@buffer& (0+255),w,b
 19495  00F716  6ED9               	movwf	fsr2l,c
 19496  00F718  5167               	movf	(??__get_item+1)& (0+255),w,b
 19497  00F71A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19498  00F71C  6EDA               	movwf	fsr2h,c
 19499  00F71E  0E09               	movlw	9
 19500  00F720  18DE               	xorwf	postinc2,w,c
 19501  00F722  B4D8               	btfsc	status,2,c
 19502  00F724  D7CC               	goto	l15999
 19503                           
 19504                           ; BSR set to: 0
 19505  00F726  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19506  00F728  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19507  00F72C  6B67               	clrf	(??__get_item+1)& (0+255),b
 19508  00F72E  2766               	addwf	??__get_item& (0+255),f,b
 19509  00F730  0E00               	movlw	0
 19510  00F732  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19511  00F734  5166               	movf	??__get_item& (0+255),w,b
 19512  00F736  2564               	addwf	__get_item@buffer& (0+255),w,b
 19513  00F738  6ED9               	movwf	fsr2l,c
 19514  00F73A  5167               	movf	(??__get_item+1)& (0+255),w,b
 19515  00F73C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19516  00F73E  6EDA               	movwf	fsr2h,c
 19517  00F740  0E20               	movlw	32
 19518  00F742  18DE               	xorwf	postinc2,w,c
 19519  00F744  B4D8               	btfsc	status,2,c
 19520  00F746  D7BB               	goto	l15999
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;config_file.c: 101: };config_file.c: 104: return (item_ctr+value_ctr);
 19524                           
 19525                           ; BSR set to: 0
 19526  00F748  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19527  00F74A  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 19528  00F74C  0012               	return	
 19529  00F74E                     __end_of__get_item:
 19530                           	opt stack 0
 19531                           tblptru	equ	0xFF8
 19532                           tblptrh	equ	0xFF7
 19533                           tblptrl	equ	0xFF6
 19534                           tablat	equ	0xFF5
 19535                           prodh	equ	0xFF4
 19536                           prodl	equ	0xFF3
 19537                           postinc0	equ	0xFEE
 19538                           wreg	equ	0xFE8
 19539                           indf1	equ	0xFE7
 19540                           postinc1	equ	0xFE6
 19541                           postdec1	equ	0xFE5
 19542                           plusw1	equ	0xFE3
 19543                           fsr1h	equ	0xFE2
 19544                           fsr1l	equ	0xFE1
 19545                           indf2	equ	0xFDF
 19546                           postinc2	equ	0xFDE
 19547                           postdec2	equ	0xFDD
 19548                           plusw2	equ	0xFDB
 19549                           fsr2h	equ	0xFDA
 19550                           fsr2l	equ	0xFD9
 19551                           status	equ	0xFD8
 19552                           
 19553 ;; *************** function _adc_init *****************
 19554 ;; Defined at:
 19555 ;;		line 19 in file "adc.c"
 19556 ;; Parameters:    Size  Location     Type
 19557 ;;		None
 19558 ;; Auto vars:     Size  Location     Type
 19559 ;;		None
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  1    wreg      void 
 19562 ;; Registers used:
 19563 ;;		wreg, status,2
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19573 ;;Total ram usage:        0 bytes
 19574 ;; Hardware stack levels used:    1
 19575 ;; Hardware stack levels required when called:   10
 19576 ;; This function calls:
 19577 ;;		Nothing
 19578 ;; This function is called by:
 19579 ;;		_system_init
 19580 ;; This function uses a non-reentrant model
 19581 ;;
 19582                           
 19583                           	psect	text82
 19584  014748                     __ptext82:
 19585                           	opt stack 0
 19586  014748                     _adc_init:
 19587                           	opt stack 19
 19588                           
 19589                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 19590                           
 19591                           ; BSR set to: 0
 19592                           ;incstack = 0
 19593  014748  0E00               	movlw	0
 19594  01474A  0101               	movlb	1	; () banked
 19595  01474C  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 19596  01474E  0E00               	movlw	0
 19597  014750  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 19598                           
 19599                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 19600  014752  0E00               	movlw	0
 19601  014754  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 19602  014756  0E00               	movlw	0
 19603  014758  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 19604                           
 19605                           ;adc.c: 24: os.fan_on = 0;
 19606  01475A  0E00               	movlw	0
 19607  01475C  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 19608                           
 19609                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 19610  01475E  0E00               	movlw	0
 19611  014760  0102               	movlb	2	; () banked
 19612  014762  6F1F               	movwf	_params& (0+255),b
 19613                           
 19614                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 19615  014764  0E00               	movlw	0
 19616  014766  6F21               	movwf	(_params+2)& (0+255),b
 19617  014768  0E00               	movlw	0
 19618  01476A  6F20               	movwf	(_params+1)& (0+255),b
 19619                           
 19620                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 19621  01476C  0E00               	movlw	0
 19622  01476E  6F24               	movwf	(_params+5)& (0+255),b
 19623                           
 19624                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 19625  014770  0E00               	movlw	0
 19626  014772  6F23               	movwf	(_params+4)& (0+255),b
 19627  014774  0E00               	movlw	0
 19628  014776  6F22               	movwf	(_params+3)& (0+255),b
 19629                           
 19630                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 19631  014778  0E00               	movlw	0
 19632  01477A  6F25               	movwf	(_params+6)& (0+255),b
 19633                           
 19634                           ; BSR set to: 2
 19635                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 19636  01477C  9EC2               	bcf	4034,7,c	;volatile
 19637                           
 19638                           ; BSR set to: 2
 19639                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 19640  01477E  9CC2               	bcf	4034,6,c	;volatile
 19641                           
 19642                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 19643  014780  50C2               	movf	4034,w,c	;volatile
 19644  014782  0BC3               	andlw	-61
 19645  014784  0924               	iorlw	36
 19646  014786  6EC2               	movwf	4034,c	;volatile
 19647                           
 19648                           ; BSR set to: 2
 19649                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 19650  014788  8EC1               	bsf	4033,7,c	;volatile
 19651                           
 19652                           ; BSR set to: 2
 19653                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 19654  01478A  9CC1               	bcf	4033,6,c	;volatile
 19655                           
 19656                           ; BSR set to: 2
 19657                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 19658  01478C  86C1               	bsf	4033,3,c	;volatile
 19659  01478E  88C1               	bsf	4033,4,c	;volatile
 19660  014790  8AC1               	bsf	4033,5,c	;volatile
 19661                           
 19662                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 19663  014792  50C1               	movf	4033,w,c	;volatile
 19664  014794  0BF8               	andlw	-8
 19665  014796  0906               	iorlw	6
 19666  014798  6EC1               	movwf	4033,c	;volatile
 19667                           
 19668                           ; BSR set to: 2
 19669                           ;adc.c: 40: ADCON0bits.ADON = 1;
 19670  01479A  80C2               	bsf	4034,0,c	;volatile
 19671                           
 19672                           ; BSR set to: 2
 19673                           ;adc.c: 41: ADCON0bits.GO = 1;
 19674  01479C  82C2               	bsf	4034,1,c	;volatile
 19675                           
 19676                           ; BSR set to: 2
 19677  01479E  0012               	return		;funcret
 19678  0147A0                     __end_of_adc_init:
 19679                           	opt stack 0
 19680                           tblptru	equ	0xFF8
 19681                           tblptrh	equ	0xFF7
 19682                           tblptrl	equ	0xFF6
 19683                           tablat	equ	0xFF5
 19684                           prodh	equ	0xFF4
 19685                           prodl	equ	0xFF3
 19686                           postinc0	equ	0xFEE
 19687                           wreg	equ	0xFE8
 19688                           indf1	equ	0xFE7
 19689                           postinc1	equ	0xFE6
 19690                           postdec1	equ	0xFE5
 19691                           plusw1	equ	0xFE3
 19692                           fsr1h	equ	0xFE2
 19693                           fsr1l	equ	0xFE1
 19694                           indf2	equ	0xFDF
 19695                           postinc2	equ	0xFDE
 19696                           postdec2	equ	0xFDD
 19697                           plusw2	equ	0xFDB
 19698                           fsr2h	equ	0xFDA
 19699                           fsr2l	equ	0xFD9
 19700                           status	equ	0xFD8
 19701                           
 19702 ;; *************** function __system_timer0_init *****************
 19703 ;; Defined at:
 19704 ;;		line 125 in file "os.c"
 19705 ;; Parameters:    Size  Location     Type
 19706 ;;		None
 19707 ;; Auto vars:     Size  Location     Type
 19708 ;;		None
 19709 ;; Return value:  Size  Location     Type
 19710 ;;                  1    wreg      void 
 19711 ;; Registers used:
 19712 ;;		wreg, status,2
 19713 ;; Tracked objects:
 19714 ;;		On entry : 0/0
 19715 ;;		On exit  : 0/0
 19716 ;;		Unchanged: 0/0
 19717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19722 ;;Total ram usage:        0 bytes
 19723 ;; Hardware stack levels used:    1
 19724 ;; Hardware stack levels required when called:   10
 19725 ;; This function calls:
 19726 ;;		Nothing
 19727 ;; This function is called by:
 19728 ;;		_system_init
 19729 ;; This function uses a non-reentrant model
 19730 ;;
 19731                           
 19732                           	psect	text83
 19733  015432                     __ptext83:
 19734                           	opt stack 0
 19735  015432                     __system_timer0_init:
 19736                           	opt stack 19
 19737                           
 19738                           ;os.c: 130: T0CONbits.T0CS = 0;
 19739                           
 19740                           ; BSR set to: 2
 19741                           ;incstack = 0
 19742  015432  9AD5               	bcf	4053,5,c	;volatile
 19743                           
 19744                           ;os.c: 132: T0CONbits.T08BIT = 0;
 19745  015434  9CD5               	bcf	4053,6,c	;volatile
 19746                           
 19747                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 19748  015436  94D5               	bcf	4053,2,c	;volatile
 19749                           
 19750                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 19751  015438  82D5               	bsf	4053,1,c	;volatile
 19752                           
 19753                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 19754  01543A  90D5               	bcf	4053,0,c	;volatile
 19755                           
 19756                           ;os.c: 138: T0CONbits.PSA = 0;
 19757  01543C  96D5               	bcf	4053,3,c	;volatile
 19758                           
 19759                           ;os.c: 140: TMR0H = 0xFA;
 19760  01543E  0EFA               	movlw	250
 19761  015440  6ED7               	movwf	4055,c	;volatile
 19762                           
 19763                           ;os.c: 141: TMR0L = 0x24;
 19764  015442  0E24               	movlw	36
 19765  015444  6ED6               	movwf	4054,c	;volatile
 19766                           
 19767                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 19768  015446  8ED5               	bsf	4053,7,c	;volatile
 19769                           
 19770                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 19771  015448  94F2               	bcf	intcon,2,c	;volatile
 19772                           
 19773                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 19774  01544A  8AF2               	bsf	intcon,5,c	;volatile
 19775                           
 19776                           ;os.c: 148: INTCONbits.GIE = 1;
 19777  01544C  8EF2               	bsf	intcon,7,c	;volatile
 19778                           
 19779                           ;os.c: 151: os.subTimeSlot = 0;
 19780  01544E  0E00               	movlw	0
 19781  015450  0101               	movlb	1	; () banked
 19782  015452  6F71               	movwf	_os& (0+255),b	;volatile
 19783                           
 19784                           ;os.c: 152: os.timeSlot = 0;
 19785  015454  0E00               	movlw	0
 19786  015456  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 19787                           
 19788                           ;os.c: 153: os.done = 0;
 19789  015458  0E00               	movlw	0
 19790  01545A  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 19791                           
 19792                           ; BSR set to: 1
 19793  01545C  0012               	return		;funcret
 19794  01545E                     __end_of__system_timer0_init:
 19795                           	opt stack 0
 19796                           tblptru	equ	0xFF8
 19797                           tblptrh	equ	0xFF7
 19798                           tblptrl	equ	0xFF6
 19799                           tablat	equ	0xFF5
 19800                           prodh	equ	0xFF4
 19801                           prodl	equ	0xFF3
 19802                           intcon	equ	0xFF2
 19803                           postinc0	equ	0xFEE
 19804                           wreg	equ	0xFE8
 19805                           indf1	equ	0xFE7
 19806                           postinc1	equ	0xFE6
 19807                           postdec1	equ	0xFE5
 19808                           plusw1	equ	0xFE3
 19809                           fsr1h	equ	0xFE2
 19810                           fsr1l	equ	0xFE1
 19811                           indf2	equ	0xFDF
 19812                           postinc2	equ	0xFDE
 19813                           postdec2	equ	0xFDD
 19814                           plusw2	equ	0xFDB
 19815                           fsr2h	equ	0xFDA
 19816                           fsr2l	equ	0xFD9
 19817                           status	equ	0xFD8
 19818                           
 19819 ;; *************** function __system_pin_setup *****************
 19820 ;; Defined at:
 19821 ;;		line 59 in file "os.c"
 19822 ;; Parameters:    Size  Location     Type
 19823 ;;		None
 19824 ;; Auto vars:     Size  Location     Type
 19825 ;;		None
 19826 ;; Return value:  Size  Location     Type
 19827 ;;                  1    wreg      void 
 19828 ;; Registers used:
 19829 ;;		wreg, status,2
 19830 ;; Tracked objects:
 19831 ;;		On entry : 0/0
 19832 ;;		On exit  : 0/0
 19833 ;;		Unchanged: 0/0
 19834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19839 ;;Total ram usage:        0 bytes
 19840 ;; Hardware stack levels used:    1
 19841 ;; Hardware stack levels required when called:   10
 19842 ;; This function calls:
 19843 ;;		Nothing
 19844 ;; This function is called by:
 19845 ;;		_system_init
 19846 ;; This function uses a non-reentrant model
 19847 ;;
 19848                           
 19849                           	psect	text84
 19850  0140F4                     __ptext84:
 19851                           	opt stack 0
 19852  0140F4                     __system_pin_setup:
 19853                           	opt stack 19
 19854                           
 19855                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 19856                           
 19857                           ; BSR set to: 1
 19858                           ;incstack = 0
 19859  0140F4  8A95               	bsf	3989,5,c	;volatile
 19860                           
 19861                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 19862  0140F6  9895               	bcf	3989,4,c	;volatile
 19863                           
 19864                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 19865  0140F8  9C95               	bcf	3989,6,c	;volatile
 19866                           
 19867                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 19868  0140FA  9E95               	bcf	3989,7,c	;volatile
 19869                           
 19870                           ;os.c: 66: LATDbits.LD7 = 1;
 19871  0140FC  8E8C               	bsf	3980,7,c	;volatile
 19872                           
 19873                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 19874  0140FE  8693               	bsf	3987,3,c	;volatile
 19875                           
 19876                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 19877  014100  010F               	movlb	15	; () banked
 19878  014102  9349               	bcf	73,1,b	;volatile
 19879                           
 19880                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 19881  014104  9E94               	bcf	3988,7,c	;volatile
 19882                           
 19883                           ;os.c: 72: LATCbits.LC7 = 0;
 19884  014106  9E8B               	bcf	3979,7,c	;volatile
 19885                           
 19886                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 19887  014108  9C94               	bcf	3988,6,c	;volatile
 19888                           
 19889                           ;os.c: 75: LATCbits.LC6 = 0;
 19890  01410A  9C8B               	bcf	3979,6,c	;volatile
 19891                           
 19892                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 19893  01410C  9692               	bcf	3986,3,c	;volatile
 19894                           
 19895                           ;os.c: 78: LATAbits.LA3 = 0;
 19896  01410E  9689               	bcf	3977,3,c	;volatile
 19897                           
 19898                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 19899  014110  9294               	bcf	3988,1,c	;volatile
 19900                           
 19901                           ;os.c: 81: LATCbits.LC1 = 0;
 19902  014112  928B               	bcf	3979,1,c	;volatile
 19903                           
 19904                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 19905  014114  8A93               	bsf	3987,5,c	;volatile
 19906                           
 19907                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 19908  014116  8893               	bsf	3987,4,c	;volatile
 19909                           
 19910                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 19911  014118  9093               	bcf	3987,0,c	;volatile
 19912                           
 19913                           ;os.c: 90: LATBbits.LB0 = 1;
 19914  01411A  808A               	bsf	3978,0,c	;volatile
 19915                           
 19916                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 19917  01411C  9493               	bcf	3987,2,c	;volatile
 19918                           
 19919                           ;os.c: 93: LATBbits.LB2 = 0;
 19920  01411E  948A               	bcf	3978,2,c	;volatile
 19921                           
 19922                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 19923  014120  9293               	bcf	3987,1,c	;volatile
 19924                           
 19925                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 19926  014122  8549               	bsf	73,2,b	;volatile
 19927                           
 19928                           ;os.c: 97: LATBbits.LB1 = 0;
 19929  014124  928A               	bcf	3978,1,c	;volatile
 19930                           
 19931                           ; BSR set to: 15
 19932                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 19933  014126  0E55               	movlw	85
 19934  014128  6EA7               	movwf	4007,c	;volsfr
 19935  01412A  0EAA               	movlw	170
 19936  01412C  6EA7               	movwf	4007,c	;volsfr
 19937                           
 19938                           ; BSR set to: 15
 19939  01412E  010E               	movlb	14	; () banked
 19940  014130  91BF               	bcf	191,0,b	;volatile
 19941                           
 19942                           ;os.c: 99: RPOR4 = 14;
 19943  014132  0E0E               	movlw	14
 19944  014134  6FC4               	movwf	196,b	;volatile
 19945                           
 19946                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 19947  014136  0E55               	movlw	85
 19948  014138  6EA7               	movwf	4007,c	;volsfr
 19949  01413A  0EAA               	movlw	170
 19950  01413C  6EA7               	movwf	4007,c	;volsfr
 19951                           
 19952                           ; BSR set to: 14
 19953  01413E  81BF               	bsf	191,0,b	;volatile
 19954                           
 19955                           ; BSR set to: 14
 19956                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 19957  014140  8495               	bsf	3989,2,c	;volatile
 19958                           
 19959                           ; BSR set to: 14
 19960                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 19961  014142  8496               	bsf	3990,2,c	;volatile
 19962                           
 19963                           ; BSR set to: 14
 19964                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 19965  014144  010F               	movlb	15	; () banked
 19966  014146  8F48               	bsf	72,7,b	;volatile
 19967                           
 19968                           ; BSR set to: 15
 19969                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 19970  014148  8096               	bsf	3990,0,c	;volatile
 19971                           
 19972                           ; BSR set to: 15
 19973                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 19974  01414A  8B48               	bsf	72,5,b	;volatile
 19975                           
 19976                           ; BSR set to: 15
 19977                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 19978  01414C  8296               	bsf	3990,1,c	;volatile
 19979                           
 19980                           ; BSR set to: 15
 19981                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 19982  01414E  8D48               	bsf	72,6,b	;volatile
 19983                           
 19984                           ; BSR set to: 15
 19985                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 19986  014150  8092               	bsf	3986,0,c	;volatile
 19987                           
 19988                           ; BSR set to: 15
 19989                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 19990  014152  8148               	bsf	72,0,b	;volatile
 19991                           
 19992                           ; BSR set to: 15
 19993                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 19994  014154  8492               	bsf	3986,2,c	;volatile
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 19998  014156  8548               	bsf	72,2,b	;volatile
 19999                           
 20000                           ; BSR set to: 15
 20001                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20002  014158  8292               	bsf	3986,1,c	;volatile
 20003                           
 20004                           ; BSR set to: 15
 20005                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20006  01415A  8348               	bsf	72,1,b	;volatile
 20007                           
 20008                           ; BSR set to: 15
 20009  01415C  0012               	return		;funcret
 20010  01415E                     __end_of__system_pin_setup:
 20011                           	opt stack 0
 20012                           tblptru	equ	0xFF8
 20013                           tblptrh	equ	0xFF7
 20014                           tblptrl	equ	0xFF6
 20015                           tablat	equ	0xFF5
 20016                           prodh	equ	0xFF4
 20017                           prodl	equ	0xFF3
 20018                           intcon	equ	0xFF2
 20019                           postinc0	equ	0xFEE
 20020                           wreg	equ	0xFE8
 20021                           indf1	equ	0xFE7
 20022                           postinc1	equ	0xFE6
 20023                           postdec1	equ	0xFE5
 20024                           plusw1	equ	0xFE3
 20025                           fsr1h	equ	0xFE2
 20026                           fsr1l	equ	0xFE1
 20027                           indf2	equ	0xFDF
 20028                           postinc2	equ	0xFDE
 20029                           postdec2	equ	0xFDD
 20030                           plusw2	equ	0xFDB
 20031                           fsr2h	equ	0xFDA
 20032                           fsr2l	equ	0xFD9
 20033                           status	equ	0xFD8
 20034                           
 20035 ;; *************** function __backlight_init *****************
 20036 ;; Defined at:
 20037 ;;		line 158 in file "os.c"
 20038 ;; Parameters:    Size  Location     Type
 20039 ;;		None
 20040 ;; Auto vars:     Size  Location     Type
 20041 ;;		None
 20042 ;; Return value:  Size  Location     Type
 20043 ;;                  1    wreg      void 
 20044 ;; Registers used:
 20045 ;;		None
 20046 ;; Tracked objects:
 20047 ;;		On entry : 0/0
 20048 ;;		On exit  : 0/0
 20049 ;;		Unchanged: 0/0
 20050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20055 ;;Total ram usage:        0 bytes
 20056 ;; Hardware stack levels used:    1
 20057 ;; Hardware stack levels required when called:   10
 20058 ;; This function calls:
 20059 ;;		Nothing
 20060 ;; This function is called by:
 20061 ;;		_system_init
 20062 ;; This function uses a non-reentrant model
 20063 ;;
 20064                           
 20065                           	psect	text85
 20066  0158F0                     __ptext85:
 20067                           	opt stack 0
 20068  0158F0                     __backlight_init:
 20069                           	opt stack 19
 20070                           
 20071                           ;os.c: 160: LATCbits.LC1 = 1;
 20072                           
 20073                           ; BSR set to: 15
 20074                           ;incstack = 0
 20075  0158F0  828B               	bsf	3979,1,c	;volatile
 20076  0158F2  0012               	return		;funcret
 20077  0158F4                     __end_of__backlight_init:
 20078                           	opt stack 0
 20079                           tblptru	equ	0xFF8
 20080                           tblptrh	equ	0xFF7
 20081                           tblptrl	equ	0xFF6
 20082                           tablat	equ	0xFF5
 20083                           prodh	equ	0xFF4
 20084                           prodl	equ	0xFF3
 20085                           intcon	equ	0xFF2
 20086                           postinc0	equ	0xFEE
 20087                           wreg	equ	0xFE8
 20088                           indf1	equ	0xFE7
 20089                           postinc1	equ	0xFE6
 20090                           postdec1	equ	0xFE5
 20091                           plusw1	equ	0xFE3
 20092                           fsr1h	equ	0xFE2
 20093                           fsr1l	equ	0xFE1
 20094                           indf2	equ	0xFDF
 20095                           postinc2	equ	0xFDE
 20096                           postdec2	equ	0xFDD
 20097                           plusw2	equ	0xFDB
 20098                           fsr2h	equ	0xFDA
 20099                           fsr2l	equ	0xFD9
 20100                           status	equ	0xFD8
 20101                           
 20102 ;; *************** function _motor_process_cue *****************
 20103 ;; Defined at:
 20104 ;;		line 160 in file "motor.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;		None
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;		None
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  1    wreg      void 
 20111 ;; Registers used:
 20112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20113 ;; Tracked objects:
 20114 ;;		On entry : 0/0
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20122 ;;Total ram usage:        0 bytes
 20123 ;; Hardware stack levels used:    1
 20124 ;; Hardware stack levels required when called:   13
 20125 ;; This function calls:
 20126 ;;		__motor_run
 20127 ;;		_motor_items_in_cue
 20128 ;; This function is called by:
 20129 ;;		_main
 20130 ;; This function uses a non-reentrant model
 20131 ;;
 20132                           
 20133                           	psect	text86
 20134  0134E0                     __ptext86:
 20135                           	opt stack 0
 20136  0134E0                     _motor_process_cue:
 20137                           	opt stack 17
 20138                           
 20139                           ;motor.c: 162: if(motor_items_in_cue()==0)
 20140                           
 20141                           ;incstack = 0
 20142  0134E0  EC3D  F0AC         	call	_motor_items_in_cue	;wreg free
 20143  0134E4  0900               	iorlw	0
 20144  0134E6  B4D8               	btfsc	status,2,c
 20145  0134E8  0012               	return	
 20146                           
 20147                           ;motor.c: 167: else if(os.busy)
 20148                           
 20149                           ;motor.c: 166: }
 20150                           
 20151                           ;motor.c: 163: {;motor.c: 165: return;
 20152  0134EA  0101               	movlb	1	; () banked
 20153  0134EC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 20154  0134EE  A4D8               	btfss	status,2,c
 20155  0134F0  0012               	return	
 20156                           
 20157                           ; BSR set to: 1
 20158                           ;motor.c: 172: else;motor.c: 173: {;motor.c: 175: _motor_run(;motor.c: 176: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 177: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 178: motor_command_cue[motor_cue_read_index].speed,;motor.c: 179
      +                          : motor_command_cue[motor_cue_read_index].type;motor.c: 180: );
 20159                           
 20160                           ; BSR set to: 1
 20161                           
 20162                           ; BSR set to: 1
 20163                           ;motor.c: 171: }
 20164                           
 20165                           ; BSR set to: 1
 20166                           ;motor.c: 168: {;motor.c: 170: return;
 20167  0134F2  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20168  0134F4  0D08               	mullw	8
 20169  0134F6  0E01               	movlw	1
 20170  0134F8  26F3               	addwf	prodl,f,c
 20171  0134FA  0E00               	movlw	0
 20172  0134FC  22F4               	addwfc	prodh,f,c
 20173  0134FE  0E00               	movlw	low _motor_command_cue
 20174  013500  24F3               	addwf	prodl,w,c
 20175  013502  6ED9               	movwf	fsr2l,c
 20176  013504  0E03               	movlw	high _motor_command_cue
 20177  013506  20F4               	addwfc	prodh,w,c
 20178  013508  6EDA               	movwf	fsr2h,c
 20179  01350A  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 20180  01350E  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 20181  013512  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 20182  013516  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 20183  01351A  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20184  01351C  0D08               	mullw	8
 20185  01351E  0E05               	movlw	5
 20186  013520  26F3               	addwf	prodl,f,c
 20187  013522  0E00               	movlw	0
 20188  013524  22F4               	addwfc	prodh,f,c
 20189  013526  0E00               	movlw	low _motor_command_cue
 20190  013528  24F3               	addwf	prodl,w,c
 20191  01352A  6ED9               	movwf	fsr2l,c
 20192  01352C  0E03               	movlw	high _motor_command_cue
 20193  01352E  20F4               	addwfc	prodh,w,c
 20194  013530  6EDA               	movwf	fsr2h,c
 20195  013532  CFDE F093          	movff	postinc2,__motor_run@speed
 20196  013536  CFDD F094          	movff	postdec2,__motor_run@speed+1
 20197  01353A  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20198  01353C  0D08               	mullw	8
 20199  01353E  0E07               	movlw	7
 20200  013540  26F3               	addwf	prodl,f,c
 20201  013542  0E00               	movlw	0
 20202  013544  22F4               	addwfc	prodh,f,c
 20203  013546  0E00               	movlw	low _motor_command_cue
 20204  013548  24F3               	addwf	prodl,w,c
 20205  01354A  6ED9               	movwf	fsr2l,c
 20206  01354C  0E03               	movlw	high _motor_command_cue
 20207  01354E  20F4               	addwfc	prodh,w,c
 20208  013550  6EDA               	movwf	fsr2h,c
 20209  013552  50DF               	movf	indf2,w,c
 20210  013554  0100               	movlb	0	; () banked
 20211  013556  6F95               	movwf	__motor_run@type& (0+255),b
 20212  013558  0101               	movlb	1	; () banked
 20213  01355A  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20214  01355C  0D08               	mullw	8
 20215  01355E  0E00               	movlw	low _motor_command_cue
 20216  013560  24F3               	addwf	prodl,w,c
 20217  013562  6ED9               	movwf	fsr2l,c
 20218  013564  0E03               	movlw	high _motor_command_cue
 20219  013566  20F4               	addwfc	prodh,w,c
 20220  013568  6EDA               	movwf	fsr2h,c
 20221  01356A  50DF               	movf	indf2,w,c
 20222  01356C  ECAD  F062         	call	__motor_run
 20223                           
 20224                           ;motor.c: 182: ++motor_cue_read_index;
 20225  013570  0101               	movlb	1	; () banked
 20226  013572  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 20227                           
 20228                           ; BSR set to: 1
 20229  013574  0012               	return	
 20230  013576                     __end_of_motor_process_cue:
 20231                           	opt stack 0
 20232                           tblptru	equ	0xFF8
 20233                           tblptrh	equ	0xFF7
 20234                           tblptrl	equ	0xFF6
 20235                           tablat	equ	0xFF5
 20236                           prodh	equ	0xFF4
 20237                           prodl	equ	0xFF3
 20238                           intcon	equ	0xFF2
 20239                           postinc0	equ	0xFEE
 20240                           wreg	equ	0xFE8
 20241                           indf1	equ	0xFE7
 20242                           postinc1	equ	0xFE6
 20243                           postdec1	equ	0xFE5
 20244                           plusw1	equ	0xFE3
 20245                           fsr1h	equ	0xFE2
 20246                           fsr1l	equ	0xFE1
 20247                           indf2	equ	0xFDF
 20248                           postinc2	equ	0xFDE
 20249                           postdec2	equ	0xFDD
 20250                           plusw2	equ	0xFDB
 20251                           fsr2h	equ	0xFDA
 20252                           fsr2l	equ	0xFD9
 20253                           status	equ	0xFD8
 20254                           
 20255 ;; *************** function _encoder_statemachine *****************
 20256 ;; Defined at:
 20257 ;;		line 210 in file "encoder.c"
 20258 ;; Parameters:    Size  Location     Type
 20259 ;;		None
 20260 ;; Auto vars:     Size  Location     Type
 20261 ;;		None
 20262 ;; Return value:  Size  Location     Type
 20263 ;;                  1    wreg      void 
 20264 ;; Registers used:
 20265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20266 ;; Tracked objects:
 20267 ;;		On entry : 0/0
 20268 ;;		On exit  : 0/0
 20269 ;;		Unchanged: 0/0
 20270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20273 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20275 ;;Total ram usage:        4 bytes
 20276 ;; Hardware stack levels used:    1
 20277 ;; Hardware stack levels required when called:   16
 20278 ;; This function calls:
 20279 ;;		__divide_jump_size_decrement
 20280 ;;		__divide_jump_size_increment
 20281 ;;		__encoder_next_arc_step_size
 20282 ;;		__encoder_next_divide_step_size
 20283 ;;		__encoder_next_setup_stepsize
 20284 ;;		_motor_arc_move
 20285 ;;		_motor_change_speed
 20286 ;;		_motor_decrease_manual_speed
 20287 ;;		_motor_divide_jump
 20288 ;;		_motor_divide_jump_to_nearest
 20289 ;;		_motor_go_to_steps_position
 20290 ;;		_motor_increase_manual_speed
 20291 ;;		_motor_nonzero_steps_from_degrees
 20292 ;;		_motor_schedule_command
 20293 ;;		_motor_set_zero
 20294 ;;		_motor_stop
 20295 ;; This function is called by:
 20296 ;;		_main
 20297 ;; This function uses a non-reentrant model
 20298 ;;
 20299                           
 20300                           	psect	text87
 20301  00AF94                     __ptext87:
 20302                           	opt stack 0
 20303  00AF94                     _encoder_statemachine:
 20304                           	opt stack 14
 20305                           
 20306                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 20307                           
 20308                           ;incstack = 0
 20309  00AF94  0101               	movlb	1	; () banked
 20310  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 20311  00AF98  A4D8               	btfss	status,2,c
 20312  00AF9A  EFD9  F05B         	goto	l2699
 20313                           
 20314                           ; BSR set to: 1
 20315  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 20316  00AFA0  A4D8               	btfss	status,2,c
 20317  00AFA2  EFD9  F05B         	goto	l2699
 20318                           
 20319                           ; BSR set to: 1
 20320  00AFA6  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 20321  00AFA8  A4D8               	btfss	status,2,c
 20322  00AFAA  EFD9  F05B         	goto	l2699
 20323                           
 20324                           ; BSR set to: 1
 20325  00AFAE  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 20326  00AFB0  B4D8               	btfsc	status,2,c
 20327  00AFB2  0012               	return	
 20328  00AFB4  D3FE               	goto	l2699
 20329  00AFB6                     
 20330                           ; BSR set to: 1
 20331                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 20332                           
 20333                           ; BSR set to: 1
 20334  00AFB6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20335  00AFB8  B4D8               	btfsc	status,2,c
 20336  00AFBA  D003               	goto	u17250
 20337                           
 20338                           ; BSR set to: 1
 20339  00AFBC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20340  00AFBE  A4D8               	btfss	status,2,c
 20341  00AFC0  D002               	goto	l2703
 20342  00AFC2                     u17250:
 20343                           
 20344                           ; BSR set to: 1
 20345                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 20346                           
 20347                           ; BSR set to: 1
 20348  00AFC2  0E11               	movlw	17
 20349  00AFC4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20350  00AFC6                     l2703:
 20351                           
 20352                           ; BSR set to: 1
 20353                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 20354                           
 20355                           ; BSR set to: 1
 20356  00AFC6  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20357  00AFCA  0100               	movlb	0	; () banked
 20358  00AFCC  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20359  00AFCE  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20360  00AFD0  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20361  00AFD2  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20362  00AFD6  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20363  00AFD8  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20364  00AFDA  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20365  00AFDC  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20366  00AFDE  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20367  00AFE0  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20368  00AFE2  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20369  00AFE4  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20370  00AFE6  D008               	goto	l2706
 20371  00AFE8  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20372  00AFEA  E103               	bnz	u17260
 20373  00AFEC  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20374  00AFEE  A0D8               	btfss	status,0,c
 20375  00AFF0  D003               	goto	l2706
 20376  00AFF2                     u17260:
 20377                           
 20378                           ; BSR set to: 0
 20379                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 20380  00AFF2  0E02               	movlw	2
 20381  00AFF4  0101               	movlb	1	; () banked
 20382  00AFF6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20383  00AFF8                     l2706:
 20384                           
 20385                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 20386                           
 20387                           ; BSR set to: 1
 20388  00AFF8  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20389  00AFFC  0100               	movlb	0	; () banked
 20390  00AFFE  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20391  00B000  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20392  00B002  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20393  00B004  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20394  00B008  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20395  00B00A  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20396  00B00C  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20397  00B00E  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20398  00B010  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20399  00B012  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20400  00B014  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20401  00B016  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20402  00B018  D3F1               	goto	l2734
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 20406  00B01A  0E05               	movlw	5
 20407  00B01C  D3B8               	goto	L22
 20408  00B01E                     
 20409                           ; BSR set to: 1
 20410                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 20411                           
 20412                           ; BSR set to: 1
 20413  00B01E  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20414  00B020  B4D8               	btfsc	status,2,c
 20415  00B022  D003               	goto	u17290
 20416                           
 20417                           ; BSR set to: 1
 20418  00B024  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20419  00B026  A4D8               	btfss	status,2,c
 20420  00B028  D002               	goto	l2710
 20421  00B02A                     u17290:
 20422                           
 20423                           ; BSR set to: 1
 20424                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 20425                           
 20426                           ; BSR set to: 1
 20427  00B02A  0E31               	movlw	49
 20428  00B02C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20429  00B02E                     l2710:
 20430                           
 20431                           ; BSR set to: 1
 20432                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 20433                           
 20434                           ; BSR set to: 1
 20435  00B02E  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20436  00B032  0100               	movlb	0	; () banked
 20437  00B034  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20438  00B036  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20439  00B038  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20440  00B03A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20441  00B03E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20442  00B040  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20443  00B042  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20444  00B044  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20445  00B046  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20446  00B048  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20447  00B04A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20448  00B04C  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20449  00B04E  D008               	goto	l2713
 20450  00B050  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20451  00B052  E103               	bnz	u17300
 20452  00B054  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20453  00B056  A0D8               	btfss	status,0,c
 20454  00B058  D003               	goto	l2713
 20455  00B05A                     u17300:
 20456                           
 20457                           ; BSR set to: 0
 20458                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 20459  00B05A  0E03               	movlw	3
 20460  00B05C  0101               	movlb	1	; () banked
 20461  00B05E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20462  00B060                     l2713:
 20463                           
 20464                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 20465                           
 20466                           ; BSR set to: 1
 20467  00B060  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20468  00B064  0100               	movlb	0	; () banked
 20469  00B066  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20470  00B068  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20471  00B06A  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20472  00B06C  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20473  00B070  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20474  00B072  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20475  00B074  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20476  00B076  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20477  00B078  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20478  00B07A  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20479  00B07C  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20480  00B07E  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20481  00B080  D3BD               	goto	l2734
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 20485  00B082  0E01               	movlw	1
 20486  00B084  D384               	goto	L22
 20487  00B086                     
 20488                           ; BSR set to: 1
 20489                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 20490                           
 20491                           ; BSR set to: 1
 20492  00B086  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20493  00B088  B4D8               	btfsc	status,2,c
 20494  00B08A  D003               	goto	u17330
 20495                           
 20496                           ; BSR set to: 1
 20497  00B08C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20498  00B08E  A4D8               	btfss	status,2,c
 20499  00B090  D002               	goto	l2716
 20500  00B092                     u17330:
 20501                           
 20502                           ; BSR set to: 1
 20503                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 20504                           
 20505                           ; BSR set to: 1
 20506  00B092  0E51               	movlw	81
 20507  00B094  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20508  00B096                     l2716:
 20509                           
 20510                           ; BSR set to: 1
 20511                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 20512                           
 20513                           ; BSR set to: 1
 20514  00B096  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20515  00B09A  0100               	movlb	0	; () banked
 20516  00B09C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20517  00B09E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20518  00B0A0  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20519  00B0A2  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20520  00B0A6  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20521  00B0A8  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20522  00B0AA  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20523  00B0AC  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20524  00B0AE  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20525  00B0B0  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20526  00B0B2  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20527  00B0B4  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20528  00B0B6  D008               	goto	l2719
 20529  00B0B8  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20530  00B0BA  E103               	bnz	u17340
 20531  00B0BC  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20532  00B0BE  A0D8               	btfss	status,0,c
 20533  00B0C0  D003               	goto	l2719
 20534  00B0C2                     u17340:
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 20538  00B0C2  0E04               	movlw	4
 20539  00B0C4  0101               	movlb	1	; () banked
 20540  00B0C6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20541  00B0C8                     l2719:
 20542                           
 20543                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 20544                           
 20545                           ; BSR set to: 1
 20546  00B0C8  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20547  00B0CC  0100               	movlb	0	; () banked
 20548  00B0CE  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20549  00B0D0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20550  00B0D2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20551  00B0D4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20552  00B0D8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20553  00B0DA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20554  00B0DC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20555  00B0DE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20556  00B0E0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20557  00B0E2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20558  00B0E4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20559  00B0E6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20560  00B0E8  D389               	goto	l2734
 20561                           
 20562                           ; BSR set to: 0
 20563                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 20564  00B0EA  0E02               	movlw	2
 20565  00B0EC  D350               	goto	L22
 20566  00B0EE                     
 20567                           ; BSR set to: 1
 20568                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 20569                           
 20570                           ; BSR set to: 1
 20571  00B0EE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20572  00B0F0  B4D8               	btfsc	status,2,c
 20573  00B0F2  D003               	goto	u17370
 20574                           
 20575                           ; BSR set to: 1
 20576  00B0F4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20577  00B0F6  A4D8               	btfss	status,2,c
 20578  00B0F8  D002               	goto	l2722
 20579  00B0FA                     u17370:
 20580                           
 20581                           ; BSR set to: 1
 20582                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 20583                           
 20584                           ; BSR set to: 1
 20585  00B0FA  0E82               	movlw	130
 20586  00B0FC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20587  00B0FE                     l2722:
 20588                           
 20589                           ; BSR set to: 1
 20590                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 20591                           
 20592                           ; BSR set to: 1
 20593  00B0FE  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20594  00B102  0100               	movlb	0	; () banked
 20595  00B104  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20596  00B106  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20597  00B108  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20598  00B10A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20599  00B10E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20600  00B110  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20601  00B112  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20602  00B114  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20603  00B116  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20604  00B118  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20605  00B11A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20606  00B11C  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20607  00B11E  D008               	goto	l2725
 20608  00B120  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20609  00B122  E103               	bnz	u17380
 20610  00B124  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20611  00B126  A0D8               	btfss	status,0,c
 20612  00B128  D003               	goto	l2725
 20613  00B12A                     u17380:
 20614                           
 20615                           ; BSR set to: 0
 20616                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 20617  00B12A  0E05               	movlw	5
 20618  00B12C  0101               	movlb	1	; () banked
 20619  00B12E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20620  00B130                     l2725:
 20621                           
 20622                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 20623                           
 20624                           ; BSR set to: 1
 20625  00B130  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20626  00B134  0100               	movlb	0	; () banked
 20627  00B136  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20628  00B138  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20629  00B13A  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20630  00B13C  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20631  00B140  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20632  00B142  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20633  00B144  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20634  00B146  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20635  00B148  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20636  00B14A  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20637  00B14C  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20638  00B14E  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20639  00B150  D355               	goto	l2734
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 20643  00B152  0E03               	movlw	3
 20644  00B154  D31C               	goto	L22
 20645  00B156                     
 20646                           ; BSR set to: 1
 20647                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 20648                           
 20649                           ; BSR set to: 1
 20650  00B156  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20651  00B158  B4D8               	btfsc	status,2,c
 20652  00B15A  D003               	goto	u17410
 20653                           
 20654                           ; BSR set to: 1
 20655  00B15C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20656  00B15E  A4D8               	btfss	status,2,c
 20657  00B160  D002               	goto	l2728
 20658  00B162                     u17410:
 20659                           
 20660                           ; BSR set to: 1
 20661                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 20662                           
 20663                           ; BSR set to: 1
 20664  00B162  0E71               	movlw	113
 20665  00B164  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20666  00B166                     l2728:
 20667                           
 20668                           ; BSR set to: 1
 20669                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 20670                           
 20671                           ; BSR set to: 1
 20672  00B166  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20673  00B16A  0100               	movlb	0	; () banked
 20674  00B16C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20675  00B16E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20676  00B170  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20677  00B172  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20678  00B176  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20679  00B178  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20680  00B17A  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20681  00B17C  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20682  00B17E  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20683  00B180  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20684  00B182  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20685  00B184  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20686  00B186  D008               	goto	l2731
 20687  00B188  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20688  00B18A  E103               	bnz	u17420
 20689  00B18C  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20690  00B18E  A0D8               	btfss	status,0,c
 20691  00B190  D003               	goto	l2731
 20692  00B192                     u17420:
 20693                           
 20694                           ; BSR set to: 0
 20695                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 20696  00B192  0E01               	movlw	1
 20697  00B194  0101               	movlb	1	; () banked
 20698  00B196  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20699  00B198                     l2731:
 20700                           
 20701                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 20702                           
 20703                           ; BSR set to: 1
 20704  00B198  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20705  00B19C  0100               	movlb	0	; () banked
 20706  00B19E  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20707  00B1A0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20708  00B1A2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20709  00B1A4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20710  00B1A8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20711  00B1AA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20712  00B1AC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20713  00B1AE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20714  00B1B0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20715  00B1B2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20716  00B1B4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20717  00B1B6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20718  00B1B8  D321               	goto	l2734
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 20722  00B1BA  0E04               	movlw	4
 20723  00B1BC  D2E8               	goto	L22
 20724  00B1BE                     
 20725                           ; BSR set to: 1
 20726  00B1BE  0101               	movlb	1	; () banked
 20727  00B1C0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 20728                           
 20729                           ; Switch size 1, requested type "space"
 20730                           ; Number of cases is 6, Range of values is 1 to 240
 20731                           ; switch strategies available:
 20732                           ; Name         Instructions Cycles
 20733                           ; simple_byte           19    10 (average)
 20734                           ;	Chosen strategy is simple_byte
 20735  00B1C2  0A01               	xorlw	1	; case 1
 20736  00B1C4  B4D8               	btfsc	status,2,c
 20737  00B1C6  D6F7               	goto	l2702
 20738  00B1C8  0A03               	xorlw	3	; case 2
 20739  00B1CA  B4D8               	btfsc	status,2,c
 20740  00B1CC  D728               	goto	l2709
 20741  00B1CE  0A01               	xorlw	1	; case 3
 20742  00B1D0  B4D8               	btfsc	status,2,c
 20743  00B1D2  D759               	goto	l2715
 20744  00B1D4  0A07               	xorlw	7	; case 4
 20745  00B1D6  B4D8               	btfsc	status,2,c
 20746  00B1D8  D78A               	goto	l2721
 20747  00B1DA  0A01               	xorlw	1	; case 5
 20748  00B1DC  B4D8               	btfsc	status,2,c
 20749  00B1DE  D7BB               	goto	l2727
 20750  00B1E0  0AF5               	xorlw	245	; case 240
 20751                           
 20752                           ; BSR set to: 1
 20753                           ;encoder.c: 268: break;
 20754  00B1E2  D30C               	goto	l2734
 20755  00B1E4                     
 20756                           ; BSR set to: 1
 20757                           ;encoder.c: 274: if(os.button1==1)
 20758                           
 20759                           ; BSR set to: 1
 20760  00B1E4  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20761  00B1E6  A4D8               	btfss	status,2,c
 20762  00B1E8  D00E               	goto	l2738
 20763                           
 20764                           ; BSR set to: 1
 20765                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 20766  00B1EA  0E00               	movlw	0
 20767  00B1EC  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 20768  00B1EE  0E00               	movlw	0
 20769  00B1F0  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 20770  00B1F2  0E00               	movlw	0
 20771  00B1F4  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 20772  00B1F6  0E00               	movlw	0
 20773  00B1F8  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 20774                           
 20775                           ;encoder.c: 277: os.divide_position = 0;
 20776  00B1FA  0E00               	movlw	0
 20777  00B1FC  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 20778  00B1FE  0E00               	movlw	0
 20779  00B200  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 20780                           
 20781                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 20782  00B202  0E21               	movlw	33
 20783  00B204  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20784  00B206                     l2738:
 20785                           
 20786                           ; BSR set to: 1
 20787                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 20788                           
 20789                           ; BSR set to: 1
 20790  00B206  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 20791  00B208  0A80               	xorlw	128
 20792  00B20A  0F7F               	addlw	-129
 20793  00B20C  A0D8               	btfss	status,0,c
 20794  00B20E  D002               	goto	l2739
 20795                           
 20796                           ; BSR set to: 1
 20797                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 20798  00B210  0E12               	movlw	18
 20799  00B212  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20800  00B214                     l2739:
 20801                           
 20802                           ; BSR set to: 1
 20803                           ;encoder.c: 282: if(os.encoder1Count<0)
 20804                           
 20805                           ; BSR set to: 1
 20806  00B214  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 20807  00B216  D01B               	goto	l2741
 20808                           
 20809                           ; BSR set to: 1
 20810                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 20811  00B218  0E12               	movlw	18
 20812  00B21A  D00F               	goto	L10
 20813  00B21C                     
 20814                           ; BSR set to: 1
 20815                           ;encoder.c: 286: if(os.button1==1)
 20816                           
 20817                           ; BSR set to: 1
 20818  00B21C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20819  00B21E  A4D8               	btfss	status,2,c
 20820  00B220  D002               	goto	l2743
 20821                           
 20822                           ; BSR set to: 1
 20823                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 20824  00B222  0E01               	movlw	1
 20825  00B224  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20826  00B226                     l2743:
 20827                           
 20828                           ; BSR set to: 1
 20829                           ;encoder.c: 288: if(os.encoder1Count>0)
 20830                           
 20831                           ; BSR set to: 1
 20832  00B226  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 20833  00B228  0A80               	xorlw	128
 20834  00B22A  0F7F               	addlw	-129
 20835  00B22C  A0D8               	btfss	status,0,c
 20836  00B22E  D002               	goto	l2744
 20837                           
 20838                           ; BSR set to: 1
 20839                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 20840  00B230  0E11               	movlw	17
 20841  00B232  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20842  00B234                     l2744:
 20843                           
 20844                           ; BSR set to: 1
 20845                           ;encoder.c: 290: if(os.encoder1Count<0)
 20846                           
 20847                           ; BSR set to: 1
 20848  00B234  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 20849  00B236  D00B               	goto	l2741
 20850                           
 20851                           ; BSR set to: 1
 20852                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 20853  00B238  0E11               	movlw	17
 20854  00B23A                     L10:
 20855  00B23A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20856                           
 20857                           ; BSR set to: 1
 20858                           ;encoder.c: 293: }
 20859                           
 20860                           ; BSR set to: 1
 20861                           ;encoder.c: 292: break;
 20862  00B23C  D008               	goto	l2741
 20863  00B23E                     
 20864                           ; BSR set to: 1
 20865  00B23E  0101               	movlb	1	; () banked
 20866  00B240  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 20867                           
 20868                           ; Switch size 1, requested type "space"
 20869                           ; Number of cases is 2, Range of values is 17 to 18
 20870                           ; switch strategies available:
 20871                           ; Name         Instructions Cycles
 20872                           ; simple_byte            7     4 (average)
 20873                           ;	Chosen strategy is simple_byte
 20874  00B242  0A11               	xorlw	17	; case 17
 20875  00B244  B4D8               	btfsc	status,2,c
 20876  00B246  D7CE               	goto	l2737
 20877  00B248  0A03               	xorlw	3	; case 18
 20878  00B24A  B4D8               	btfsc	status,2,c
 20879  00B24C  D7E7               	goto	l2742
 20880  00B24E                     l2741:
 20881                           
 20882                           ; BSR set to: 1
 20883                           ;encoder.c: 294: if(os.button2==1)
 20884                           
 20885                           ; BSR set to: 1
 20886  00B24E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20887  00B250  A4D8               	btfss	status,2,c
 20888  00B252  D00A               	goto	l2746
 20889                           
 20890                           ; BSR set to: 1
 20891                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 20892  00B254  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 20893  00B258  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 20894  00B25C  EC30  F09F         	call	__encoder_next_setup_stepsize	;wreg free
 20895  00B260  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 20896  00B264  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 20897  00B268                     l2746:
 20898                           
 20899                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 20900  00B268  0101               	movlb	1	; () banked
 20901  00B26A  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 20902  00B26C  0A80               	xorlw	128
 20903  00B26E  0F7F               	addlw	-129
 20904  00B270  A0D8               	btfss	status,0,c
 20905  00B272  D01B               	goto	l2748
 20906                           
 20907                           ; BSR set to: 1
 20908                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 20909  00B274  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 20910  00B276  A4D8               	btfss	status,2,c
 20911  00B278  D018               	goto	l2748
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0, MOTOR_MOVE_TYPE_NORMAL);
 20915  00B27A  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 20916  00B27E  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 20917  00B282  EC90  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 20918  00B286  C08F  F0A1         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 20919  00B28A  C090  F0A2         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 20920  00B28E  C091  F0A3         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 20921  00B292  C092  F0A4         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 20922  00B296  0E00               	movlw	0
 20923  00B298  0100               	movlb	0	; () banked
 20924  00B29A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 20925  00B29C  0E00               	movlw	0
 20926  00B29E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 20927  00B2A0  0E00               	movlw	0
 20928  00B2A2  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 20929  00B2A4  0E01               	movlw	1
 20930  00B2A6  EC48  F093         	call	_motor_schedule_command
 20931  00B2AA                     l2748:
 20932                           
 20933                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 20934  00B2AA  0101               	movlb	1	; () banked
 20935  00B2AC  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 20936  00B2AE  D2A6               	goto	l2734
 20937                           
 20938                           ; BSR set to: 1
 20939                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 20940  00B2B0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 20941  00B2B2  A4D8               	btfss	status,2,c
 20942  00B2B4  D2A3               	goto	l2734
 20943                           
 20944                           ; BSR set to: 1
 20945                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0, MOTOR_MOVE_TYPE_NORMAL);
 20946  00B2B6  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 20947  00B2BA  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 20948  00B2BE  EC90  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 20949  00B2C2  C08F  F0A1         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 20950  00B2C6  C090  F0A2         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 20951  00B2CA  C091  F0A3         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 20952  00B2CE  C092  F0A4         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 20953  00B2D2  0E00               	movlw	0
 20954  00B2D4  0100               	movlb	0	; () banked
 20955  00B2D6  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 20956  00B2D8  0E00               	movlw	0
 20957  00B2DA  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 20958  00B2DC  0E00               	movlw	0
 20959  00B2DE  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 20960  00B2E0  0EFF               	movlw	255
 20961  00B2E2  EC48  F093         	call	_motor_schedule_command
 20962                           
 20963                           ;encoder.c: 309: };encoder.c: 310: break;
 20964  00B2E6  D28A               	goto	l2734
 20965  00B2E8                     
 20966                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 20967  00B2E8  0101               	movlb	1	; () banked
 20968  00B2EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20969  00B2EC  B4D8               	btfsc	status,2,c
 20970  00B2EE  D003               	goto	u17560
 20971                           
 20972                           ; BSR set to: 1
 20973  00B2F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20974  00B2F2  A4D8               	btfss	status,2,c
 20975  00B2F4  D003               	goto	l2754
 20976  00B2F6                     u17560:
 20977                           
 20978                           ; BSR set to: 1
 20979                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 20980                           
 20981                           ; BSR set to: 1
 20982  00B2F6  0EFF               	movlw	255
 20983  00B2F8  EC8C  F095         	call	_motor_set_zero
 20984  00B2FC                     l2754:
 20985                           
 20986                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 20987  00B2FC  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20988  00B300  0100               	movlb	0	; () banked
 20989  00B302  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20990  00B304  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20991  00B306  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20992  00B308  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20993  00B30C  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20994  00B30E  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20995  00B310  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20996  00B312  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20997  00B314  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20998  00B316  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20999  00B318  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21000  00B31A  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21001  00B31C  D008               	goto	l2757
 21002  00B31E  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21003  00B320  E103               	bnz	u17570
 21004  00B322  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21005  00B324  A0D8               	btfss	status,0,c
 21006  00B326  D003               	goto	l2757
 21007  00B328                     u17570:
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21011  00B328  0E22               	movlw	34
 21012  00B32A  0101               	movlb	1	; () banked
 21013  00B32C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21014  00B32E                     l2757:
 21015                           
 21016                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 21017                           
 21018                           ; BSR set to: 1
 21019  00B32E  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21020  00B332  0100               	movlb	0	; () banked
 21021  00B334  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21022  00B336  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21023  00B338  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21024  00B33A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21025  00B33E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21026  00B340  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21027  00B342  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21028  00B344  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21029  00B346  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21030  00B348  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21031  00B34A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21032  00B34C  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21033  00B34E  D256               	goto	l2734
 21034                           
 21035                           ; BSR set to: 0
 21036                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21037  00B350  0E22               	movlw	34
 21038  00B352  D21D               	goto	L22
 21039  00B354                     
 21040                           ; BSR set to: 1
 21041                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 21042                           
 21043                           ; BSR set to: 1
 21044  00B354  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21045  00B356  B4D8               	btfsc	status,2,c
 21046  00B358  D003               	goto	u17600
 21047                           
 21048                           ; BSR set to: 1
 21049  00B35A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21050  00B35C  A4D8               	btfss	status,2,c
 21051  00B35E  D003               	goto	l2761
 21052  00B360                     u17600:
 21053                           
 21054                           ; BSR set to: 1
 21055                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 21056                           
 21057                           ; BSR set to: 1
 21058  00B360  0E01               	movlw	1
 21059  00B362  EC8C  F095         	call	_motor_set_zero
 21060  00B366                     l2761:
 21061                           
 21062                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 21063  00B366  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21064  00B36A  0100               	movlb	0	; () banked
 21065  00B36C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21066  00B36E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21067  00B370  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21068  00B372  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21069  00B376  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21070  00B378  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21071  00B37A  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21072  00B37C  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21073  00B37E  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21074  00B380  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21075  00B382  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21076  00B384  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21077  00B386  D008               	goto	l2764
 21078  00B388  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21079  00B38A  E103               	bnz	u17610
 21080  00B38C  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21081  00B38E  A0D8               	btfss	status,0,c
 21082  00B390  D003               	goto	l2764
 21083  00B392                     u17610:
 21084                           
 21085                           ; BSR set to: 0
 21086                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21087  00B392  0E21               	movlw	33
 21088  00B394  0101               	movlb	1	; () banked
 21089  00B396  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21090  00B398                     l2764:
 21091                           
 21092                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 21093                           
 21094                           ; BSR set to: 1
 21095  00B398  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21096  00B39C  0100               	movlb	0	; () banked
 21097  00B39E  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21098  00B3A0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21099  00B3A2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21100  00B3A4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21101  00B3A8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21102  00B3AA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21103  00B3AC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21104  00B3AE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21105  00B3B0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21106  00B3B2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21107  00B3B4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21108  00B3B6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21109  00B3B8  D221               	goto	l2734
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21113  00B3BA  0E21               	movlw	33
 21114  00B3BC  D1E8               	goto	L22
 21115  00B3BE                     
 21116                           ; BSR set to: 1
 21117  00B3BE  0101               	movlb	1	; () banked
 21118  00B3C0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21119                           
 21120                           ; Switch size 1, requested type "space"
 21121                           ; Number of cases is 2, Range of values is 33 to 34
 21122                           ; switch strategies available:
 21123                           ; Name         Instructions Cycles
 21124                           ; simple_byte            7     4 (average)
 21125                           ;	Chosen strategy is simple_byte
 21126  00B3C2  0A21               	xorlw	33	; case 33
 21127  00B3C4  B4D8               	btfsc	status,2,c
 21128  00B3C6  D790               	goto	l2753
 21129  00B3C8  0A03               	xorlw	3	; case 34
 21130  00B3CA  B4D8               	btfsc	status,2,c
 21131  00B3CC  D7C3               	goto	l2760
 21132                           
 21133                           ; BSR set to: 1
 21134                           ;encoder.c: 336: break;
 21135  00B3CE  D216               	goto	l2734
 21136  00B3D0                     
 21137                           ; BSR set to: 1
 21138                           ;encoder.c: 342: if(os.button1==1)
 21139                           
 21140                           ; BSR set to: 1
 21141  00B3D0  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21142  00B3D2  A4D8               	btfss	status,2,c
 21143  00B3D4  D005               	goto	l2769
 21144                           
 21145                           ; BSR set to: 1
 21146                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 21147  00B3D6  EC10  F07D         	call	_motor_divide_jump_to_nearest	;wreg free
 21148                           
 21149                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 21150  00B3DA  0E41               	movlw	65
 21151  00B3DC  0101               	movlb	1	; () banked
 21152  00B3DE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21153  00B3E0                     l2769:
 21154                           
 21155                           ; BSR set to: 1
 21156                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 21157                           
 21158                           ; BSR set to: 1
 21159  00B3E0  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21160  00B3E2  0A80               	xorlw	128
 21161  00B3E4  0F7F               	addlw	-129
 21162  00B3E6  A0D8               	btfss	status,0,c
 21163  00B3E8  D002               	goto	l2770
 21164                           
 21165                           ; BSR set to: 1
 21166                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 21167  00B3EA  0E32               	movlw	50
 21168  00B3EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21169  00B3EE                     l2770:
 21170                           
 21171                           ; BSR set to: 1
 21172                           ;encoder.c: 350: if(os.encoder1Count<0)
 21173                           
 21174                           ; BSR set to: 1
 21175  00B3EE  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21176  00B3F0  D01B               	goto	l2772
 21177                           
 21178                           ; BSR set to: 1
 21179                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 21180  00B3F2  0E32               	movlw	50
 21181  00B3F4  D00F               	goto	L13
 21182  00B3F6                     
 21183                           ; BSR set to: 1
 21184                           ;encoder.c: 354: if(os.button1==1)
 21185                           
 21186                           ; BSR set to: 1
 21187  00B3F6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21188  00B3F8  A4D8               	btfss	status,2,c
 21189  00B3FA  D002               	goto	l2774
 21190                           
 21191                           ; BSR set to: 1
 21192                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21193  00B3FC  0E02               	movlw	2
 21194  00B3FE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21195  00B400                     l2774:
 21196                           
 21197                           ; BSR set to: 1
 21198                           ;encoder.c: 356: if(os.encoder1Count>0)
 21199                           
 21200                           ; BSR set to: 1
 21201  00B400  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21202  00B402  0A80               	xorlw	128
 21203  00B404  0F7F               	addlw	-129
 21204  00B406  A0D8               	btfss	status,0,c
 21205  00B408  D002               	goto	l2775
 21206                           
 21207                           ; BSR set to: 1
 21208                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21209  00B40A  0E31               	movlw	49
 21210  00B40C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21211  00B40E                     l2775:
 21212                           
 21213                           ; BSR set to: 1
 21214                           ;encoder.c: 358: if(os.encoder1Count<0)
 21215                           
 21216                           ; BSR set to: 1
 21217  00B40E  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21218  00B410  D00B               	goto	l2772
 21219                           
 21220                           ; BSR set to: 1
 21221                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21222  00B412  0E31               	movlw	49
 21223  00B414                     L13:
 21224  00B414  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21225                           
 21226                           ; BSR set to: 1
 21227                           ;encoder.c: 361: }
 21228                           
 21229                           ; BSR set to: 1
 21230                           ;encoder.c: 360: break;
 21231  00B416  D008               	goto	l2772
 21232  00B418                     
 21233                           ; BSR set to: 1
 21234  00B418  0101               	movlb	1	; () banked
 21235  00B41A  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21236                           
 21237                           ; Switch size 1, requested type "space"
 21238                           ; Number of cases is 2, Range of values is 49 to 50
 21239                           ; switch strategies available:
 21240                           ; Name         Instructions Cycles
 21241                           ; simple_byte            7     4 (average)
 21242                           ;	Chosen strategy is simple_byte
 21243  00B41C  0A31               	xorlw	49	; case 49
 21244  00B41E  B4D8               	btfsc	status,2,c
 21245  00B420  D7D7               	goto	l2768
 21246  00B422  0A03               	xorlw	3	; case 50
 21247  00B424  B4D8               	btfsc	status,2,c
 21248  00B426  D7E7               	goto	l2773
 21249  00B428                     l2772:
 21250                           
 21251                           ; BSR set to: 1
 21252                           ;encoder.c: 362: if(os.button2==1)
 21253                           
 21254                           ; BSR set to: 1
 21255  00B428  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21256  00B42A  A4D8               	btfss	status,2,c
 21257  00B42C  D005               	goto	l2777
 21258                           
 21259                           ; BSR set to: 1
 21260                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 21261  00B42E  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21262  00B430  ECD5  F0A9         	call	__encoder_next_divide_step_size
 21263  00B434  0101               	movlb	1	; () banked
 21264  00B436  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 21265  00B438                     l2777:
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 21269                           
 21270                           ; BSR set to: 1
 21271  00B438  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21272  00B43A  0A80               	xorlw	128
 21273  00B43C  0F7F               	addlw	-129
 21274  00B43E  A0D8               	btfss	status,0,c
 21275  00B440  D004               	goto	l2778
 21276                           
 21277                           ; BSR set to: 1
 21278                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 21279  00B442  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21280  00B444  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 21281  00B446  0E00               	movlw	0
 21282  00B448  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 21283  00B44A                     l2778:
 21284                           
 21285                           ; BSR set to: 1
 21286                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 21287  00B44A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21288  00B44C  D1D7               	goto	l2734
 21289                           
 21290                           ; BSR set to: 1
 21291                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 21292  00B44E  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21293  00B450  0100               	movlb	0	; () banked
 21294  00B452  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 21295  00B454  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21296  00B456  0101               	movlb	1	; () banked
 21297  00B458  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 21298  00B45A  0100               	movlb	0	; () banked
 21299  00B45C  5DCF               	subwf	??_encoder_statemachine& (0+255),w,b
 21300  00B45E  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21301  00B460  0A80               	xorlw	128
 21302  00B462  6FD1               	movwf	(??_encoder_statemachine+2)& (0+255),b
 21303  00B464  0101               	movlb	1	; () banked
 21304  00B466  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 21305  00B468  0A80               	xorlw	128
 21306  00B46A  0100               	movlb	0	; () banked
 21307  00B46C  59D1               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 21308  00B46E  B0D8               	btfsc	status,0,c
 21309  00B470  D006               	goto	l2780
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 21313  00B472  0101               	movlb	1	; () banked
 21314  00B474  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21315  00B476  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 21316  00B478  0E00               	movlw	0
 21317  00B47A  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 21318                           
 21319                           ;encoder.c: 375: }
 21320  00B47C  D1BF               	goto	l2734
 21321  00B47E                     l2780:
 21322                           
 21323                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 21324                           
 21325                           ; BSR set to: 1
 21326  00B47E  0E00               	movlw	0
 21327  00B480  0101               	movlb	1	; () banked
 21328  00B482  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 21329  00B484  0E01               	movlw	1
 21330  00B486  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 21331                           
 21332                           ; BSR set to: 1
 21333                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 21334                           
 21335                           ; BSR set to: 1
 21336  00B488  D1B9               	goto	l2734
 21337  00B48A                     
 21338                           ;encoder.c: 384: if(os.button1==1)
 21339                           
 21340                           ; BSR set to: 1
 21341  00B48A  0101               	movlb	1	; () banked
 21342  00B48C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21343  00B48E  A4D8               	btfss	status,2,c
 21344  00B490  D002               	goto	l2783
 21345                           
 21346                           ; BSR set to: 1
 21347                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21348  00B492  0E02               	movlw	2
 21349  00B494  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21350  00B496                     l2783:
 21351                           
 21352                           ; BSR set to: 1
 21353                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 21354                           
 21355                           ; BSR set to: 1
 21356  00B496  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21357  00B498  B4D8               	btfsc	status,2,c
 21358                           
 21359                           ; BSR set to: 1
 21360                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 21361  00B49A  EC49  F097         	call	_motor_divide_jump	;wreg free
 21362                           
 21363                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 21364  00B49E  0101               	movlb	1	; () banked
 21365  00B4A0  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21366  00B4A2  0A80               	xorlw	128
 21367  00B4A4  0F7F               	addlw	-129
 21368  00B4A6  B0D8               	btfsc	status,0,c
 21369                           
 21370                           ; BSR set to: 1
 21371                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 21372  00B4A8  ECEE  F0A7         	call	__divide_jump_size_increment	;wreg free
 21373                           
 21374                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 21375  00B4AC  0101               	movlb	1	; () banked
 21376  00B4AE  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21377  00B4B0  D1A5               	goto	l2734
 21378                           
 21379                           ; BSR set to: 1
 21380                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 21381  00B4B2  ECD7  F09F         	call	__divide_jump_size_decrement	;wreg free
 21382                           
 21383                           ;encoder.c: 399: };encoder.c: 400: break;
 21384  00B4B6  D1A2               	goto	l2734
 21385  00B4B8                     
 21386                           ;encoder.c: 406: if(os.button1==1)
 21387  00B4B8  0101               	movlb	1	; () banked
 21388  00B4BA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21389  00B4BC  A4D8               	btfss	status,2,c
 21390  00B4BE  D002               	goto	l2790
 21391                           
 21392                           ; BSR set to: 1
 21393                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21394  00B4C0  0E62               	movlw	98
 21395  00B4C2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21396  00B4C4                     l2790:
 21397                           
 21398                           ; BSR set to: 1
 21399                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 21400                           
 21401                           ; BSR set to: 1
 21402  00B4C4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21403  00B4C6  0A80               	xorlw	128
 21404  00B4C8  0F7F               	addlw	-129
 21405  00B4CA  A0D8               	btfss	status,0,c
 21406  00B4CC  D002               	goto	l2791
 21407                           
 21408                           ; BSR set to: 1
 21409                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 21410  00B4CE  0E52               	movlw	82
 21411  00B4D0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21412  00B4D2                     l2791:
 21413                           
 21414                           ; BSR set to: 1
 21415                           ;encoder.c: 412: if(os.encoder1Count<0)
 21416                           
 21417                           ; BSR set to: 1
 21418  00B4D2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21419  00B4D4  D01B               	goto	l2793
 21420                           
 21421                           ; BSR set to: 1
 21422                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 21423  00B4D6  0E52               	movlw	82
 21424  00B4D8  D00F               	goto	L14
 21425  00B4DA                     
 21426                           ; BSR set to: 1
 21427                           ;encoder.c: 416: if(os.button1==1)
 21428                           
 21429                           ; BSR set to: 1
 21430  00B4DA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21431  00B4DC  A4D8               	btfss	status,2,c
 21432  00B4DE  D002               	goto	l2795
 21433                           
 21434                           ; BSR set to: 1
 21435                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21436  00B4E0  0E03               	movlw	3
 21437  00B4E2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21438  00B4E4                     l2795:
 21439                           
 21440                           ; BSR set to: 1
 21441                           ;encoder.c: 418: if(os.encoder1Count>0)
 21442                           
 21443                           ; BSR set to: 1
 21444  00B4E4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21445  00B4E6  0A80               	xorlw	128
 21446  00B4E8  0F7F               	addlw	-129
 21447  00B4EA  A0D8               	btfss	status,0,c
 21448  00B4EC  D002               	goto	l2796
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21452  00B4EE  0E51               	movlw	81
 21453  00B4F0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21454  00B4F2                     l2796:
 21455                           
 21456                           ; BSR set to: 1
 21457                           ;encoder.c: 420: if(os.encoder1Count<0)
 21458                           
 21459                           ; BSR set to: 1
 21460  00B4F2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21461  00B4F4  D00B               	goto	l2793
 21462                           
 21463                           ; BSR set to: 1
 21464                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21465  00B4F6  0E51               	movlw	81
 21466  00B4F8                     L14:
 21467  00B4F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21468                           
 21469                           ; BSR set to: 1
 21470                           ;encoder.c: 423: }
 21471                           
 21472                           ; BSR set to: 1
 21473                           ;encoder.c: 422: break;
 21474  00B4FA  D008               	goto	l2793
 21475  00B4FC                     
 21476                           ; BSR set to: 1
 21477  00B4FC  0101               	movlb	1	; () banked
 21478  00B4FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21479                           
 21480                           ; Switch size 1, requested type "space"
 21481                           ; Number of cases is 2, Range of values is 81 to 82
 21482                           ; switch strategies available:
 21483                           ; Name         Instructions Cycles
 21484                           ; simple_byte            7     4 (average)
 21485                           ;	Chosen strategy is simple_byte
 21486  00B500  0A51               	xorlw	81	; case 81
 21487  00B502  B4D8               	btfsc	status,2,c
 21488  00B504  D7D9               	goto	l2789
 21489  00B506  0A03               	xorlw	3	; case 82
 21490  00B508  B4D8               	btfsc	status,2,c
 21491  00B50A  D7E7               	goto	l2794
 21492  00B50C                     l2793:
 21493                           
 21494                           ; BSR set to: 1
 21495                           ;encoder.c: 424: if(os.button2==1)
 21496                           
 21497                           ; BSR set to: 1
 21498  00B50C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21499  00B50E  A4D8               	btfss	status,2,c
 21500  00B510  D00A               	goto	l2798
 21501                           
 21502                           ; BSR set to: 1
 21503                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 21504  00B512  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 21505  00B516  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 21506  00B51A  EC68  F09F         	call	__encoder_next_arc_step_size	;wreg free
 21507  00B51E  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 21508  00B522  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 21509  00B526                     l2798:
 21510                           
 21511                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 21512  00B526  0101               	movlb	1	; () banked
 21513  00B528  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21514  00B52A  0A80               	xorlw	128
 21515  00B52C  0F7F               	addlw	-129
 21516  00B52E  A0D8               	btfss	status,0,c
 21517  00B530  D01C               	goto	l2800
 21518                           
 21519                           ; BSR set to: 1
 21520                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 21521  00B532  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 21522  00B534  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 21523  00B536  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 21524  00B538  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 21525  00B53A  0E00               	movlw	0
 21526  00B53C  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 21527  00B53E  0E00               	movlw	0
 21528  00B540  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 21529                           
 21530                           ; BSR set to: 1
 21531                           ;encoder.c: 431: if(os.arc_size>100000)
 21532  00B542  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 21533  00B544  D012               	goto	l2800
 21534  00B546  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 21535  00B548  E108               	bnz	u17850
 21536  00B54A  0EA1               	movlw	161
 21537  00B54C  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 21538  00B54E  0E86               	movlw	134
 21539  00B550  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 21540  00B552  0E01               	movlw	1
 21541  00B554  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 21542  00B556  A0D8               	btfss	status,0,c
 21543  00B558  D008               	goto	l2800
 21544  00B55A                     u17850:
 21545                           
 21546                           ; BSR set to: 1
 21547                           ;encoder.c: 432: os.arc_size = 100000;
 21548  00B55A  0EA0               	movlw	160
 21549  00B55C  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 21550  00B55E  0E86               	movlw	134
 21551  00B560  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 21552  00B562  0E01               	movlw	1
 21553  00B564  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 21554  00B566  0E00               	movlw	0
 21555  00B568  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 21556  00B56A                     l2800:
 21557                           
 21558                           ; BSR set to: 1
 21559                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 21560                           
 21561                           ; BSR set to: 1
 21562                           
 21563                           ; BSR set to: 1
 21564  00B56A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21565  00B56C  D147               	goto	l2734
 21566                           
 21567                           ; BSR set to: 1
 21568                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 21569  00B56E  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 21570  00B570  0100               	movlb	0	; () banked
 21571  00B572  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 21572  00B574  0101               	movlb	1	; () banked
 21573  00B576  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 21574  00B578  0100               	movlb	0	; () banked
 21575  00B57A  6FD0               	movwf	(??_encoder_statemachine+1)& (0+255),b
 21576  00B57C  6BD1               	clrf	(??_encoder_statemachine+2)& (0+255),b
 21577  00B57E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21578  00B580  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21579  00B582  0101               	movlb	1	; () banked
 21580  00B584  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 21581  00B586  0100               	movlb	0	; () banked
 21582  00B588  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21583  00B58A  0101               	movlb	1	; () banked
 21584  00B58C  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 21585  00B58E  0100               	movlb	0	; () banked
 21586  00B590  51D1               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 21587  00B592  0101               	movlb	1	; () banked
 21588  00B594  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 21589  00B596  0100               	movlb	0	; () banked
 21590  00B598  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21591  00B59A  0101               	movlb	1	; () banked
 21592  00B59C  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 21593                           
 21594                           ;encoder.c: 437: if(os.arc_size<1)
 21595  00B59E  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 21596  00B5A0  D007               	goto	u17870
 21597  00B5A2  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 21598  00B5A4  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 21599  00B5A6  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 21600  00B5A8  E102               	bnz	u17871
 21601  00B5AA  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 21602  00B5AC  B0D8               	btfsc	status,0,c
 21603  00B5AE                     u17871:
 21604  00B5AE  D126               	goto	l2734
 21605  00B5B0                     u17870:
 21606                           
 21607                           ; BSR set to: 1
 21608                           ;encoder.c: 438: os.arc_size = 1;
 21609  00B5B0  0E01               	movlw	1
 21610  00B5B2  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 21611  00B5B4  0E00               	movlw	0
 21612  00B5B6  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 21613  00B5B8  0E00               	movlw	0
 21614  00B5BA  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 21615  00B5BC  0E00               	movlw	0
 21616  00B5BE  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 21617                           
 21618                           ; BSR set to: 1
 21619                           ;encoder.c: 439: };encoder.c: 440: break;
 21620                           
 21621                           ; BSR set to: 1
 21622  00B5C0  D11D               	goto	l2734
 21623  00B5C2                     
 21624                           ;encoder.c: 443: if(os.encoder1Count>0)
 21625                           
 21626                           ; BSR set to: 1
 21627  00B5C2  0101               	movlb	1	; () banked
 21628  00B5C4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21629  00B5C6  0A80               	xorlw	128
 21630  00B5C8  0F7F               	addlw	-129
 21631  00B5CA  A0D8               	btfss	status,0,c
 21632  00B5CC  D011               	goto	l2806
 21633                           
 21634                           ; BSR set to: 1
 21635                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 21636  00B5CE  51B0               	movf	(_config+15)& (0+255),w,b
 21637  00B5D0  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 21638  00B5D2  51B1               	movf	(_config+16)& (0+255),w,b
 21639  00B5D4  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 21640  00B5D6  B0D8               	btfsc	status,0,c
 21641  00B5D8  D002               	goto	l2805
 21642                           
 21643                           ; BSR set to: 1
 21644                           ;encoder.c: 446: ++os.arc_speed;
 21645  00B5DA  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 21646  00B5DC  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 21647  00B5DE                     l2805:
 21648                           
 21649                           ; BSR set to: 1
 21650                           ;encoder.c: 447: if(os.busy)
 21651                           
 21652                           ; BSR set to: 1
 21653  00B5DE  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21654  00B5E0  B4D8               	btfsc	status,2,c
 21655  00B5E2  D006               	goto	l2806
 21656                           
 21657                           ; BSR set to: 1
 21658                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 21659  00B5E4  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 21660  00B5E8  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 21661  00B5EC  EC5C  F0AC         	call	_motor_change_speed	;wreg free
 21662  00B5F0                     l2806:
 21663                           
 21664                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 21665  00B5F0  0101               	movlb	1	; () banked
 21666  00B5F2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21667  00B5F4  D046               	goto	l2810
 21668                           
 21669                           ; BSR set to: 1
 21670                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 21671  00B5F6  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 21672  00B5F8  5DAA               	subwf	(_config+9)& (0+255),w,b
 21673  00B5FA  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 21674  00B5FC  59AB               	subwfb	(_config+10)& (0+255),w,b
 21675  00B5FE  B0D8               	btfsc	status,0,c
 21676  00B600  D003               	goto	l2808
 21677                           
 21678                           ; BSR set to: 1
 21679                           ;encoder.c: 453: --os.arc_speed;
 21680  00B602  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 21681  00B604  A0D8               	btfss	status,0,c
 21682  00B606  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 21683  00B608                     l2808:
 21684                           
 21685                           ; BSR set to: 1
 21686                           ;encoder.c: 454: if(os.busy)
 21687                           
 21688                           ; BSR set to: 1
 21689  00B608  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21690  00B60A  B4D8               	btfsc	status,2,c
 21691  00B60C  D03A               	goto	l2810
 21692                           
 21693                           ; BSR set to: 1
 21694                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 21695  00B60E  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 21696  00B612  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 21697  00B616  EC5C  F0AC         	call	_motor_change_speed	;wreg free
 21698                           
 21699                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 21700  00B61A  D033               	goto	l2810
 21701  00B61C                     
 21702                           ;encoder.c: 460: if(os.button2==1)
 21703  00B61C  0101               	movlb	1	; () banked
 21704  00B61E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21705  00B620  A4D8               	btfss	status,2,c
 21706  00B622  D006               	goto	l2812
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 21710  00B624  0EFF               	movlw	255
 21711  00B626  EC00  F08B         	call	_motor_arc_move
 21712                           
 21713                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21714  00B62A  0E62               	movlw	98
 21715  00B62C  0101               	movlb	1	; () banked
 21716  00B62E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21717  00B630                     l2812:
 21718                           
 21719                           ; BSR set to: 1
 21720                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 21721                           
 21722                           ; BSR set to: 1
 21723  00B630  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21724  00B632  0A80               	xorlw	128
 21725  00B634  0F7F               	addlw	-129
 21726  00B636  A0D8               	btfss	status,0,c
 21727  00B638  D0E1               	goto	l2734
 21728                           
 21729                           ; BSR set to: 1
 21730                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21731  00B63A  0E62               	movlw	98
 21732  00B63C  D0A9               	goto	L21
 21733  00B63E                     
 21734                           ; BSR set to: 1
 21735                           ;encoder.c: 469: if(os.button2==1)
 21736                           
 21737                           ; BSR set to: 1
 21738  00B63E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21739  00B640  A4D8               	btfss	status,2,c
 21740  00B642  D007               	goto	l2816
 21741                           
 21742                           ; BSR set to: 1
 21743                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 21744  00B644  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21745  00B646  A4D8               	btfss	status,2,c
 21746                           
 21747                           ; BSR set to: 1
 21748                           ;encoder.c: 472: motor_stop();
 21749  00B648  EC23  F0A7         	call	_motor_stop	;wreg free
 21750                           
 21751                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21752  00B64C  0E03               	movlw	3
 21753  00B64E  0101               	movlb	1	; () banked
 21754  00B650  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21755  00B652                     l2816:
 21756                           
 21757                           ; BSR set to: 1
 21758                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 21759                           
 21760                           ; BSR set to: 1
 21761  00B652  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21762  00B654  0A80               	xorlw	128
 21763  00B656  0F7F               	addlw	-129
 21764  00B658  A0D8               	btfss	status,0,c
 21765  00B65A  D002               	goto	l2818
 21766                           
 21767                           ; BSR set to: 1
 21768                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 21769  00B65C  0E63               	movlw	99
 21770  00B65E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21771  00B660                     l2818:
 21772                           
 21773                           ; BSR set to: 1
 21774                           ;encoder.c: 477: if(os.encoder2Count<0)
 21775                           
 21776                           ; BSR set to: 1
 21777  00B660  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21778  00B662  D0CC               	goto	l2734
 21779                           
 21780                           ; BSR set to: 1
 21781                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 21782  00B664  0E61               	movlw	97
 21783  00B666  D094               	goto	L21
 21784  00B668                     
 21785                           ; BSR set to: 1
 21786                           ;encoder.c: 481: if(os.button2==1)
 21787                           
 21788                           ; BSR set to: 1
 21789  00B668  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21790  00B66A  A4D8               	btfss	status,2,c
 21791  00B66C  D006               	goto	l2821
 21792                           
 21793                           ; BSR set to: 1
 21794                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 21795  00B66E  0E01               	movlw	1
 21796  00B670  EC00  F08B         	call	_motor_arc_move
 21797                           
 21798                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21799  00B674  0E62               	movlw	98
 21800  00B676  0101               	movlb	1	; () banked
 21801  00B678  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21802  00B67A                     l2821:
 21803                           
 21804                           ; BSR set to: 1
 21805                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 21806                           
 21807                           ; BSR set to: 1
 21808  00B67A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21809  00B67C  D0BF               	goto	l2734
 21810                           
 21811                           ; BSR set to: 1
 21812                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21813  00B67E  0E62               	movlw	98
 21814  00B680  D087               	goto	L21
 21815  00B682                     l2810:
 21816                           
 21817                           ; BSR set to: 1
 21818  00B682  0101               	movlb	1	; () banked
 21819  00B684  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21820                           
 21821                           ; Switch size 1, requested type "space"
 21822                           ; Number of cases is 3, Range of values is 97 to 99
 21823                           ; switch strategies available:
 21824                           ; Name         Instructions Cycles
 21825                           ; simple_byte           10     6 (average)
 21826                           ;	Chosen strategy is simple_byte
 21827  00B686  0A61               	xorlw	97	; case 97
 21828  00B688  B4D8               	btfsc	status,2,c
 21829  00B68A  D7C8               	goto	l2811
 21830  00B68C  0A03               	xorlw	3	; case 98
 21831  00B68E  B4D8               	btfsc	status,2,c
 21832  00B690  D7D6               	goto	l2815
 21833  00B692  0A01               	xorlw	1	; case 99
 21834  00B694  B4D8               	btfsc	status,2,c
 21835  00B696  D7E8               	goto	l2820
 21836                           
 21837                           ; BSR set to: 1
 21838                           ;encoder.c: 490: break;
 21839  00B698  D0B1               	goto	l2734
 21840  00B69A                     
 21841                           ;encoder.c: 493: if(os.button2==1)
 21842                           
 21843                           ; BSR set to: 1
 21844  00B69A  0101               	movlb	1	; () banked
 21845  00B69C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21846  00B69E  A4D8               	btfss	status,2,c
 21847  00B6A0  D012               	goto	l2824
 21848                           
 21849                           ; BSR set to: 1
 21850                           ;encoder.c: 494: {;encoder.c: 496: motor_go_to_steps_position(0);
 21851  00B6A2  0E00               	movlw	0
 21852  00B6A4  0100               	movlb	0	; () banked
 21853  00B6A6  6FA9               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 21854  00B6A8  0E00               	movlw	0
 21855  00B6AA  6FAA               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 21856  00B6AC  0E00               	movlw	0
 21857  00B6AE  6FAB               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 21858  00B6B0  0E00               	movlw	0
 21859  00B6B2  6FAC               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 21860  00B6B4  EC38  F066         	call	_motor_go_to_steps_position	;wreg free
 21861                           
 21862                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21863  00B6B8  0E05               	movlw	5
 21864  00B6BA  0101               	movlb	1	; () banked
 21865  00B6BC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21866                           
 21867                           ; BSR set to: 1
 21868                           ;encoder.c: 499: os.divide_position = 0;
 21869  00B6BE  0E00               	movlw	0
 21870  00B6C0  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21871  00B6C2  0E00               	movlw	0
 21872  00B6C4  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21873  00B6C6                     l2824:
 21874                           
 21875                           ; BSR set to: 1
 21876                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 21877                           
 21878                           ; BSR set to: 1
 21879  00B6C6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21880  00B6C8  A4D8               	btfss	status,2,c
 21881  00B6CA  D098               	goto	l2734
 21882                           
 21883                           ; BSR set to: 1
 21884                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21885  00B6CC  0E05               	movlw	5
 21886  00B6CE  D060               	goto	L21
 21887  00B6D0                     
 21888                           ;encoder.c: 508: if(os.encoder1Count>0)
 21889                           
 21890                           ; BSR set to: 1
 21891  00B6D0  0101               	movlb	1	; () banked
 21892  00B6D2  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21893  00B6D4  0A80               	xorlw	128
 21894  00B6D6  0F7F               	addlw	-129
 21895  00B6D8  B0D8               	btfsc	status,0,c
 21896                           
 21897                           ; BSR set to: 1
 21898                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 21899  00B6DA  ECBB  F0AB         	call	_motor_increase_manual_speed	;wreg free
 21900                           
 21901                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 21902  00B6DE  0101               	movlb	1	; () banked
 21903  00B6E0  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21904  00B6E2  D058               	goto	l2829
 21905                           
 21906                           ; BSR set to: 1
 21907                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 21908  00B6E4  EC52  F0AB         	call	_motor_decrease_manual_speed	;wreg free
 21909                           
 21910                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 21911  00B6E8  D055               	goto	l2829
 21912  00B6EA                     
 21913                           ;encoder.c: 519: if(os.button2==1)
 21914  00B6EA  0101               	movlb	1	; () banked
 21915  00B6EC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21916  00B6EE  A4D8               	btfss	status,2,c
 21917  00B6F0  D015               	goto	l2831
 21918                           
 21919                           ; BSR set to: 1
 21920                           ;encoder.c: 520: {;encoder.c: 521: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed, MOTOR_MOVE_TYPE_NORMAL);
 21921  00B6F2  0E00               	movlw	0
 21922  00B6F4  0100               	movlb	0	; () banked
 21923  00B6F6  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 21924  00B6F8  0E00               	movlw	0
 21925  00B6FA  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 21926  00B6FC  0E00               	movlw	0
 21927  00B6FE  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 21928  00B700  0E00               	movlw	0
 21929  00B702  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 21930  00B704  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 21931  00B708  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 21932  00B70C  0E00               	movlw	0
 21933  00B70E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 21934  00B710  0EFF               	movlw	255
 21935  00B712  EC48  F093         	call	_motor_schedule_command
 21936                           
 21937                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 21938  00B716  0E84               	movlw	132
 21939  00B718  0101               	movlb	1	; () banked
 21940  00B71A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21941  00B71C                     l2831:
 21942                           
 21943                           ; BSR set to: 1
 21944                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 21945                           
 21946                           ; BSR set to: 1
 21947  00B71C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21948  00B71E  0A80               	xorlw	128
 21949  00B720  0F7F               	addlw	-129
 21950  00B722  A0D8               	btfss	status,0,c
 21951  00B724  D06B               	goto	l2734
 21952                           
 21953                           ; BSR set to: 1
 21954                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21955  00B726  0E82               	movlw	130
 21956  00B728  D033               	goto	L21
 21957  00B72A                     
 21958                           ; BSR set to: 1
 21959                           ;encoder.c: 528: if(os.button2==1)
 21960                           
 21961                           ; BSR set to: 1
 21962  00B72A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21963  00B72C  A4D8               	btfss	status,2,c
 21964  00B72E  D002               	goto	l2835
 21965                           
 21966                           ; BSR set to: 1
 21967                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21968  00B730  0E04               	movlw	4
 21969  00B732  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21970  00B734                     l2835:
 21971                           
 21972                           ; BSR set to: 1
 21973                           ;encoder.c: 530: if(os.encoder2Count>0)
 21974                           
 21975                           ; BSR set to: 1
 21976  00B734  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21977  00B736  0A80               	xorlw	128
 21978  00B738  0F7F               	addlw	-129
 21979  00B73A  A0D8               	btfss	status,0,c
 21980  00B73C  D002               	goto	l2836
 21981                           
 21982                           ; BSR set to: 1
 21983                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 21984  00B73E  0E83               	movlw	131
 21985  00B740  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21986  00B742                     l2836:
 21987                           
 21988                           ; BSR set to: 1
 21989                           ;encoder.c: 532: if(os.encoder2Count<0)
 21990                           
 21991                           ; BSR set to: 1
 21992  00B742  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21993  00B744  D05B               	goto	l2734
 21994                           
 21995                           ; BSR set to: 1
 21996                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 21997  00B746  0E81               	movlw	129
 21998  00B748  D023               	goto	L21
 21999  00B74A                     
 22000                           ; BSR set to: 1
 22001                           ;encoder.c: 536: if(os.button2==1)
 22002                           
 22003                           ; BSR set to: 1
 22004  00B74A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22005  00B74C  A4D8               	btfss	status,2,c
 22006  00B74E  D014               	goto	l2839
 22007                           
 22008                           ; BSR set to: 1
 22009                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22010  00B750  0E84               	movlw	132
 22011  00B752  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed, MOTOR_MO
      +                          VE_TYPE_NORMAL);
 22015  00B754  0E00               	movlw	0
 22016  00B756  0100               	movlb	0	; () banked
 22017  00B758  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22018  00B75A  0E00               	movlw	0
 22019  00B75C  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22020  00B75E  0E00               	movlw	0
 22021  00B760  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22022  00B762  0E00               	movlw	0
 22023  00B764  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22024  00B766  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 22025  00B76A  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22026  00B76E  0E00               	movlw	0
 22027  00B770  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 22028  00B772  0E01               	movlw	1
 22029  00B774  EC48  F093         	call	_motor_schedule_command
 22030  00B778                     l2839:
 22031                           
 22032                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 22033  00B778  0101               	movlb	1	; () banked
 22034  00B77A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22035  00B77C  D03F               	goto	l2734
 22036                           
 22037                           ; BSR set to: 1
 22038                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22039  00B77E  0E82               	movlw	130
 22040  00B780  D007               	goto	L21
 22041  00B782                     
 22042                           ; BSR set to: 1
 22043                           ;encoder.c: 545: if(os.button2==1)
 22044                           
 22045                           ; BSR set to: 1
 22046  00B782  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22047  00B784  A4D8               	btfss	status,2,c
 22048  00B786  D03A               	goto	l2734
 22049                           
 22050                           ; BSR set to: 1
 22051                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 22052  00B788  EC23  F0A7         	call	_motor_stop	;wreg free
 22053                           
 22054                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22055  00B78C  0E82               	movlw	130
 22056  00B78E                     L22:
 22057  00B78E  0101               	movlb	1	; () banked
 22058  00B790                     L21:
 22059  00B790  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22060                           
 22061                           ; BSR set to: 1
 22062                           ;encoder.c: 551: }
 22063                           
 22064                           ; BSR set to: 1
 22065                           ;encoder.c: 549: };encoder.c: 550: break;
 22066  00B792  D034               	goto	l2734
 22067  00B794                     l2829:
 22068                           
 22069                           ; BSR set to: 1
 22070  00B794  0101               	movlb	1	; () banked
 22071  00B796  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22072                           
 22073                           ; Switch size 1, requested type "space"
 22074                           ; Number of cases is 4, Range of values is 129 to 132
 22075                           ; switch strategies available:
 22076                           ; Name         Instructions Cycles
 22077                           ; simple_byte           13     7 (average)
 22078                           ;	Chosen strategy is simple_byte
 22079  00B798  0A81               	xorlw	129	; case 129
 22080  00B79A  B4D8               	btfsc	status,2,c
 22081  00B79C  D7A6               	goto	l2830
 22082  00B79E  0A03               	xorlw	3	; case 130
 22083  00B7A0  B4D8               	btfsc	status,2,c
 22084  00B7A2  D7C3               	goto	l2834
 22085  00B7A4  0A01               	xorlw	1	; case 131
 22086  00B7A6  B4D8               	btfsc	status,2,c
 22087  00B7A8  D7D0               	goto	l2838
 22088  00B7AA  0A07               	xorlw	7	; case 132
 22089  00B7AC  B4D8               	btfsc	status,2,c
 22090  00B7AE  D7E9               	goto	l2841
 22091                           
 22092                           ; BSR set to: 1
 22093                           ;encoder.c: 553: }
 22094                           
 22095                           ; BSR set to: 1
 22096                           ;encoder.c: 552: break;
 22097  00B7B0  D025               	goto	l2734
 22098  00B7B2                     l2699:
 22099                           
 22100                           ; BSR set to: 1
 22101                           
 22102                           ; BSR set to: 1
 22103  00B7B2  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22104  00B7B4  0BF0               	andlw	240
 22105  00B7B6  0100               	movlb	0	; () banked
 22106  00B7B8  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 22107  00B7BA  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22108                           
 22109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22110                           ; Switch size 1, requested type "space"
 22111                           ; Number of cases is 1, Range of values is 0 to 0
 22112                           ; switch strategies available:
 22113                           ; Name         Instructions Cycles
 22114                           ; simple_byte            4     3 (average)
 22115                           ;	Chosen strategy is simple_byte
 22116  00B7BC  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22117  00B7BE  0A00               	xorlw	0	; case 0
 22118  00B7C0  A4D8               	btfss	status,2,c
 22119  00B7C2  D01C               	goto	l2734
 22120                           
 22121                           ; BSR set to: 0
 22122                           ; Switch size 1, requested type "space"
 22123                           ; Number of cases is 9, Range of values is 0 to 128
 22124                           ; switch strategies available:
 22125                           ; Name         Instructions Cycles
 22126                           ; simple_byte           28    15 (average)
 22127                           ;	Chosen strategy is simple_byte
 22128  00B7C4  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22129  00B7C6  0A00               	xorlw	0	; case 0
 22130  00B7C8  B4D8               	btfsc	status,2,c
 22131  00B7CA  D4F9               	goto	l2701
 22132  00B7CC  0A10               	xorlw	16	; case 16
 22133  00B7CE  B4D8               	btfsc	status,2,c
 22134  00B7D0  D536               	goto	l2736
 22135  00B7D2  0A30               	xorlw	48	; case 32
 22136  00B7D4  B4D8               	btfsc	status,2,c
 22137  00B7D6  D5F3               	goto	l2752
 22138  00B7D8  0A10               	xorlw	16	; case 48
 22139  00B7DA  B4D8               	btfsc	status,2,c
 22140  00B7DC  D61D               	goto	l2767
 22141  00B7DE  0A70               	xorlw	112	; case 64
 22142  00B7E0  B4D8               	btfsc	status,2,c
 22143  00B7E2  D653               	goto	l2782
 22144  00B7E4  0A10               	xorlw	16	; case 80
 22145  00B7E6  B4D8               	btfsc	status,2,c
 22146  00B7E8  D689               	goto	l2788
 22147  00B7EA  0A30               	xorlw	48	; case 96
 22148  00B7EC  B4D8               	btfsc	status,2,c
 22149  00B7EE  D6E9               	goto	l2803
 22150  00B7F0  0A10               	xorlw	16	; case 112
 22151  00B7F2  B4D8               	btfsc	status,2,c
 22152  00B7F4  D752               	goto	l2823
 22153  00B7F6  0AF0               	xorlw	240	; case 128
 22154  00B7F8  B4D8               	btfsc	status,2,c
 22155  00B7FA  D76A               	goto	l2826
 22156  00B7FC                     l2734:
 22157                           
 22158                           ;encoder.c: 556: os.encoder1Count = 0;
 22159                           
 22160                           ; BSR set to: 0
 22161  00B7FC  0E00               	movlw	0
 22162  00B7FE  0101               	movlb	1	; () banked
 22163  00B800  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 22164                           
 22165                           ;encoder.c: 557: os.encoder2Count = 0;
 22166  00B802  0E00               	movlw	0
 22167  00B804  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 22168                           
 22169                           ;encoder.c: 558: os.button1 = 0;
 22170  00B806  0E00               	movlw	0
 22171  00B808  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 22172                           
 22173                           ;encoder.c: 559: os.button2 = 0;
 22174  00B80A  0E00               	movlw	0
 22175  00B80C  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 22176                           
 22177                           ; BSR set to: 1
 22178  00B80E  0012               	return		;funcret
 22179  00B810                     __end_of_encoder_statemachine:
 22180                           	opt stack 0
 22181                           tblptru	equ	0xFF8
 22182                           tblptrh	equ	0xFF7
 22183                           tblptrl	equ	0xFF6
 22184                           tablat	equ	0xFF5
 22185                           prodh	equ	0xFF4
 22186                           prodl	equ	0xFF3
 22187                           intcon	equ	0xFF2
 22188                           postinc0	equ	0xFEE
 22189                           wreg	equ	0xFE8
 22190                           indf1	equ	0xFE7
 22191                           postinc1	equ	0xFE6
 22192                           postdec1	equ	0xFE5
 22193                           plusw1	equ	0xFE3
 22194                           fsr1h	equ	0xFE2
 22195                           fsr1l	equ	0xFE1
 22196                           indf2	equ	0xFDF
 22197                           postinc2	equ	0xFDE
 22198                           postdec2	equ	0xFDD
 22199                           plusw2	equ	0xFDB
 22200                           fsr2h	equ	0xFDA
 22201                           fsr2l	equ	0xFD9
 22202                           status	equ	0xFD8
 22203                           
 22204 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 22205 ;; Defined at:
 22206 ;;		line 50 in file "motor.c"
 22207 ;; Parameters:    Size  Location     Type
 22208 ;;  degrees         2   47[BANK0 ] unsigned int 
 22209 ;; Auto vars:     Size  Location     Type
 22210 ;;  steps           4   51[BANK0 ] unsigned long 
 22211 ;; Return value:  Size  Location     Type
 22212 ;;                  4   47[BANK0 ] unsigned long 
 22213 ;; Registers used:
 22214 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22215 ;; Tracked objects:
 22216 ;;		On entry : 0/0
 22217 ;;		On exit  : 0/0
 22218 ;;		Unchanged: 0/0
 22219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22223 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22224 ;;Total ram usage:        8 bytes
 22225 ;; Hardware stack levels used:    1
 22226 ;; Hardware stack levels required when called:   12
 22227 ;; This function calls:
 22228 ;;		_motor_steps_from_degrees
 22229 ;; This function is called by:
 22230 ;;		_encoder_statemachine
 22231 ;; This function uses a non-reentrant model
 22232 ;;
 22233                           
 22234                           	psect	text88
 22235  014D20                     __ptext88:
 22236                           	opt stack 0
 22237  014D20                     _motor_nonzero_steps_from_degrees:
 22238                           	opt stack 17
 22239                           
 22240                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 22241                           
 22242                           ; BSR set to: 1
 22243                           ;incstack = 0
 22244  014D20  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 22245  014D24  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 22246  014D28  ECC7  F08D         	call	_motor_steps_from_degrees	;wreg free
 22247  014D2C  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 22248  014D30  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 22249  014D34  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 22250  014D38  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 22251                           
 22252                           ;motor.c: 54: if(steps==0)
 22253  014D3C  0100               	movlb	0	; () banked
 22254  014D3E  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 22255  014D40  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 22256  014D42  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 22257  014D44  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 22258  014D46  A4D8               	btfss	status,2,c
 22259  014D48  D008               	goto	l2423
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;motor.c: 55: steps = 1;
 22263  014D4A  0E01               	movlw	1
 22264  014D4C  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 22265  014D4E  0E00               	movlw	0
 22266  014D50  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 22267  014D52  0E00               	movlw	0
 22268  014D54  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 22269  014D56  0E00               	movlw	0
 22270  014D58  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 22271  014D5A                     l2423:
 22272                           
 22273                           ; BSR set to: 0
 22274                           ;motor.c: 56: return steps;
 22275                           
 22276                           ; BSR set to: 0
 22277  014D5A  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 22278  014D5E  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 22279  014D62  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 22280  014D66  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 22281  014D6A  0012               	return	
 22282  014D6C                     __end_of_motor_nonzero_steps_from_degrees:
 22283                           	opt stack 0
 22284                           tblptru	equ	0xFF8
 22285                           tblptrh	equ	0xFF7
 22286                           tblptrl	equ	0xFF6
 22287                           tablat	equ	0xFF5
 22288                           prodh	equ	0xFF4
 22289                           prodl	equ	0xFF3
 22290                           intcon	equ	0xFF2
 22291                           postinc0	equ	0xFEE
 22292                           wreg	equ	0xFE8
 22293                           indf1	equ	0xFE7
 22294                           postinc1	equ	0xFE6
 22295                           postdec1	equ	0xFE5
 22296                           plusw1	equ	0xFE3
 22297                           fsr1h	equ	0xFE2
 22298                           fsr1l	equ	0xFE1
 22299                           indf2	equ	0xFDF
 22300                           postinc2	equ	0xFDE
 22301                           postdec2	equ	0xFDD
 22302                           plusw2	equ	0xFDB
 22303                           fsr2h	equ	0xFDA
 22304                           fsr2l	equ	0xFD9
 22305                           status	equ	0xFD8
 22306                           
 22307 ;; *************** function _motor_increase_manual_speed *****************
 22308 ;; Defined at:
 22309 ;;		line 539 in file "motor.c"
 22310 ;; Parameters:    Size  Location     Type
 22311 ;;		None
 22312 ;; Auto vars:     Size  Location     Type
 22313 ;;		None
 22314 ;; Return value:  Size  Location     Type
 22315 ;;                  1    wreg      void 
 22316 ;; Registers used:
 22317 ;;		wreg, status,2, status,0, cstack
 22318 ;; Tracked objects:
 22319 ;;		On entry : 0/0
 22320 ;;		On exit  : 0/0
 22321 ;;		Unchanged: 0/0
 22322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22327 ;;Total ram usage:        0 bytes
 22328 ;; Hardware stack levels used:    1
 22329 ;; Hardware stack levels required when called:   12
 22330 ;; This function calls:
 22331 ;;		_motor_set_manual_speed
 22332 ;; This function is called by:
 22333 ;;		_encoder_statemachine
 22334 ;; This function uses a non-reentrant model
 22335 ;;
 22336                           
 22337                           	psect	text89
 22338  015776                     __ptext89:
 22339                           	opt stack 0
 22340  015776                     _motor_increase_manual_speed:
 22341                           	opt stack 17
 22342                           
 22343                           ;motor.c: 542: {;motor.c: 543: motor_set_manual_speed(os.manual_speed+1);
 22344                           
 22345                           ; BSR set to: 0
 22346                           ;incstack = 0
 22347  015776  0E01               	movlw	1
 22348  015778  0101               	movlb	1	; () banked
 22349  01577A  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 22350  01577C  0100               	movlb	0	; () banked
 22351  01577E  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 22352  015780  0E00               	movlw	0
 22353  015782  0101               	movlb	1	; () banked
 22354  015784  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 22355  015786  0100               	movlb	0	; () banked
 22356  015788  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 22357  01578A  EC1B  F0A6         	call	_motor_set_manual_speed	;wreg free
 22358  01578E  0012               	return	
 22359  015790                     __end_of_motor_increase_manual_speed:
 22360                           	opt stack 0
 22361                           tblptru	equ	0xFF8
 22362                           tblptrh	equ	0xFF7
 22363                           tblptrl	equ	0xFF6
 22364                           tablat	equ	0xFF5
 22365                           prodh	equ	0xFF4
 22366                           prodl	equ	0xFF3
 22367                           intcon	equ	0xFF2
 22368                           postinc0	equ	0xFEE
 22369                           wreg	equ	0xFE8
 22370                           indf1	equ	0xFE7
 22371                           postinc1	equ	0xFE6
 22372                           postdec1	equ	0xFE5
 22373                           plusw1	equ	0xFE3
 22374                           fsr1h	equ	0xFE2
 22375                           fsr1l	equ	0xFE1
 22376                           indf2	equ	0xFDF
 22377                           postinc2	equ	0xFDE
 22378                           postdec2	equ	0xFDD
 22379                           plusw2	equ	0xFDB
 22380                           fsr2h	equ	0xFDA
 22381                           fsr2l	equ	0xFD9
 22382                           status	equ	0xFD8
 22383                           
 22384 ;; *************** function _motor_divide_jump_to_nearest *****************
 22385 ;; Defined at:
 22386 ;;		line 711 in file "motor.c"
 22387 ;; Parameters:    Size  Location     Type
 22388 ;;		None
 22389 ;; Auto vars:     Size  Location     Type
 22390 ;;  divide_posit    4  107[BANK0 ] float 
 22391 ;;  nearest_posi    4  101[BANK0 ] unsigned long 
 22392 ;;  nearest_divi    2  105[BANK0 ] int 
 22393 ;; Return value:  Size  Location     Type
 22394 ;;                  1    wreg      void 
 22395 ;; Registers used:
 22396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22397 ;; Tracked objects:
 22398 ;;		On entry : 0/0
 22399 ;;		On exit  : 0/0
 22400 ;;		Unchanged: 0/0
 22401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22403 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22405 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22406 ;;Total ram usage:       10 bytes
 22407 ;; Hardware stack levels used:    1
 22408 ;; Hardware stack levels required when called:   15
 22409 ;; This function calls:
 22410 ;;		___fladd
 22411 ;;		___fldiv
 22412 ;;		___flmul
 22413 ;;		___fltol
 22414 ;;		___xxtofl
 22415 ;;		__step_position_from_divide_position
 22416 ;;		_motor_go_to_steps_position
 22417 ;; This function is called by:
 22418 ;;		_encoder_statemachine
 22419 ;; This function uses a non-reentrant model
 22420 ;;
 22421                           
 22422                           	psect	text90
 22423  00FA20                     __ptext90:
 22424                           	opt stack 0
 22425  00FA20                     _motor_divide_jump_to_nearest:
 22426                           	opt stack 14
 22427                           
 22428                           ;motor.c: 713: float divide_position_float;;motor.c: 714: int16_t nearest_divide_positio
      +                          n;;motor.c: 715: uint32_t nearest_position_in_steps;;motor.c: 717: divide_position_float
      +                           = (float) os.current_position_in_steps;
 22429                           
 22430                           ;incstack = 0
 22431  00FA20  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 22432  00FA24  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 22433  00FA28  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 22434  00FA2C  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 22435  00FA30  0E00               	movlw	0
 22436  00FA32  ECA3  F07F         	call	___xxtofl
 22437  00FA36  C060  F0CB         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 22438  00FA3A  C061  F0CC         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 22439  00FA3E  C062  F0CD         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 22440  00FA42  C063  F0CE         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 22441                           
 22442                           ;motor.c: 718: divide_position_float *= (float) os.division;
 22443  00FA46  C0CB  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 22444  00FA4A  C0CC  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 22445  00FA4E  C0CD  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 22446  00FA52  C0CE  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 22447  00FA56  EE21  F084         	lfsr	2,_os+19	;volatile
 22448  00FA5A  CFDE F060          	movff	postinc2,___xxtofl@val
 22449  00FA5E  CFDD F061          	movff	postdec2,___xxtofl@val+1
 22450  00FA62  0100               	movlb	0	; () banked
 22451  00FA64  0E00               	movlw	0
 22452  00FA66  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22453  00FA68  0EFF               	movlw	-1
 22454  00FA6A  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22455  00FA6C  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22456  00FA6E  0E01               	movlw	1
 22457  00FA70  ECA3  F07F         	call	___xxtofl
 22458  00FA74  C060  F072         	movff	?___xxtofl,___flmul@a
 22459  00FA78  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 22460  00FA7C  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 22461  00FA80  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 22462  00FA84  ECEC  F067         	call	___flmul	;wreg free
 22463  00FA88  C06E  F0CB         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 22464  00FA8C  C06F  F0CC         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 22465  00FA90  C070  F0CD         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 22466  00FA94  C071  F0CE         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 22467                           
 22468                           ;motor.c: 719: divide_position_float /= (float) config.full_circle_in_steps;
 22469  00FA98  C0CB  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 22470  00FA9C  C0CC  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 22471  00FAA0  C0CD  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 22472  00FAA4  C0CE  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 22473  00FAA8  C1A1  F060         	movff	_config,___xxtofl@val
 22474  00FAAC  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 22475  00FAB0  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 22476  00FAB4  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 22477  00FAB8  0E00               	movlw	0
 22478  00FABA  ECA3  F07F         	call	___xxtofl
 22479  00FABE  C060  F072         	movff	?___xxtofl,___fldiv@a
 22480  00FAC2  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 22481  00FAC6  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 22482  00FACA  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 22483  00FACE  EC14  F06E         	call	___fldiv	;wreg free
 22484  00FAD2  C06E  F0CB         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 22485  00FAD6  C06F  F0CC         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 22486  00FADA  C070  F0CD         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 22487  00FADE  C071  F0CE         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 22488                           
 22489                           ;motor.c: 720: divide_position_float += 0.5;
 22490  00FAE2  C0CB  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 22491  00FAE6  C0CC  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 22492  00FAEA  C0CD  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 22493  00FAEE  C0CE  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 22494  00FAF2  0E00               	movlw	0
 22495  00FAF4  0100               	movlb	0	; () banked
 22496  00FAF6  6F76               	movwf	___fladd@a& (0+255),b
 22497  00FAF8  0E00               	movlw	0
 22498  00FAFA  6F77               	movwf	(___fladd@a+1)& (0+255),b
 22499  00FAFC  0E00               	movlw	0
 22500  00FAFE  6F78               	movwf	(___fladd@a+2)& (0+255),b
 22501  00FB00  0E3F               	movlw	63
 22502  00FB02  6F79               	movwf	(___fladd@a+3)& (0+255),b
 22503  00FB04  EC95  F069         	call	___fladd	;wreg free
 22504  00FB08  C072  F0CB         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 22505  00FB0C  C073  F0CC         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 22506  00FB10  C074  F0CD         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 22507  00FB14  C075  F0CE         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 22508                           
 22509                           ;motor.c: 721: nearest_divide_position = (int16_t) divide_position_float;
 22510  00FB18  C0CB  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 22511  00FB1C  C0CC  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 22512  00FB20  C0CD  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 22513  00FB24  C0CE  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 22514  00FB28  EC88  F08F         	call	___fltol	;wreg free
 22515  00FB2C  C060  F0C9         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 22516  00FB30  C061  F0CA         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 22517                           
 22518                           ;motor.c: 724: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 22519  00FB34  C0C9  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 22520  00FB38  C0CA  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 22521  00FB3C  EC6A  F08C         	call	__step_position_from_divide_position	;wreg free
 22522  00FB40  C087  F0C5         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 22523  00FB44  C088  F0C6         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 22524  00FB48  C089  F0C7         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 22525  00FB4C  C08A  F0C8         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 22526                           
 22527                           ;motor.c: 727: os.divide_position = nearest_divide_position;
 22528  00FB50  C0C9  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 22529  00FB54  C0CA  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 22530                           
 22531                           ;motor.c: 728: motor_go_to_steps_position(nearest_position_in_steps);
 22532  00FB58  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 22533  00FB5C  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 22534  00FB60  C0C7  F0AB         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 22535  00FB64  C0C8  F0AC         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 22536  00FB68  EC38  F066         	call	_motor_go_to_steps_position	;wreg free
 22537  00FB6C  0012               	return		;funcret
 22538  00FB6E                     __end_of_motor_divide_jump_to_nearest:
 22539                           	opt stack 0
 22540                           tblptru	equ	0xFF8
 22541                           tblptrh	equ	0xFF7
 22542                           tblptrl	equ	0xFF6
 22543                           tablat	equ	0xFF5
 22544                           prodh	equ	0xFF4
 22545                           prodl	equ	0xFF3
 22546                           intcon	equ	0xFF2
 22547                           postinc0	equ	0xFEE
 22548                           wreg	equ	0xFE8
 22549                           indf1	equ	0xFE7
 22550                           postinc1	equ	0xFE6
 22551                           postdec1	equ	0xFE5
 22552                           plusw1	equ	0xFE3
 22553                           fsr1h	equ	0xFE2
 22554                           fsr1l	equ	0xFE1
 22555                           indf2	equ	0xFDF
 22556                           postinc2	equ	0xFDE
 22557                           postdec2	equ	0xFDD
 22558                           plusw2	equ	0xFDB
 22559                           fsr2h	equ	0xFDA
 22560                           fsr2l	equ	0xFD9
 22561                           status	equ	0xFD8
 22562                           
 22563 ;; *************** function _motor_divide_jump *****************
 22564 ;; Defined at:
 22565 ;;		line 680 in file "motor.c"
 22566 ;; Parameters:    Size  Location     Type
 22567 ;;		None
 22568 ;; Auto vars:     Size  Location     Type
 22569 ;;  target_posit    4  102[BANK0 ] unsigned long 
 22570 ;;  target_divid    2  106[BANK0 ] int 
 22571 ;; Return value:  Size  Location     Type
 22572 ;;                  1    wreg      void 
 22573 ;; Registers used:
 22574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22575 ;; Tracked objects:
 22576 ;;		On entry : 0/0
 22577 ;;		On exit  : 0/0
 22578 ;;		Unchanged: 0/0
 22579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22581 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22582 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22583 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22584 ;;Total ram usage:        7 bytes
 22585 ;; Hardware stack levels used:    1
 22586 ;; Hardware stack levels required when called:   15
 22587 ;; This function calls:
 22588 ;;		__step_position_from_divide_position
 22589 ;;		_motor_go_to_steps_position
 22590 ;; This function is called by:
 22591 ;;		_encoder_statemachine
 22592 ;; This function uses a non-reentrant model
 22593 ;;
 22594                           
 22595                           	psect	text91
 22596  012E92                     __ptext91:
 22597                           	opt stack 0
 22598  012E92                     _motor_divide_jump:
 22599                           	opt stack 14
 22600                           
 22601                           ;motor.c: 682: int16_t target_divide_position;;motor.c: 683: uint32_t target_position_in
      +                          _steps;;motor.c: 686: if(os.divide_jump_size>0)
 22602                           
 22603                           ;incstack = 0
 22604  012E92  0101               	movlb	1	; () banked
 22605  012E94  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 22606  012E96  D023               	goto	l2564
 22607  012E98  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 22608  012E9A  E103               	bnz	u16650
 22609  012E9C  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 22610  012E9E  A0D8               	btfss	status,0,c
 22611  012EA0  D01E               	goto	l2564
 22612  012EA2                     u16650:
 22613                           
 22614                           ; BSR set to: 1
 22615                           ;motor.c: 687: {;motor.c: 688: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 22616  012EA2  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 22617  012EA4  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 22618  012EA6  0100               	movlb	0	; () banked
 22619  012EA8  6FCA               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 22620  012EAA  0101               	movlb	1	; () banked
 22621  012EAC  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 22622  012EAE  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 22623  012EB0  0100               	movlb	0	; () banked
 22624  012EB2  6FCB               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 22625                           
 22626                           ;motor.c: 689: if(target_divide_position>=os.division)
 22627  012EB4  0101               	movlb	1	; () banked
 22628  012EB6  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22629  012EB8  0100               	movlb	0	; () banked
 22630  012EBA  5DCA               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 22631  012EBC  51CB               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 22632  012EBE  0A80               	xorlw	128
 22633  012EC0  6FC5               	movwf	??_motor_divide_jump& (0+255),b
 22634  012EC2  0101               	movlb	1	; () banked
 22635  012EC4  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22636  012EC6  0A80               	xorlw	128
 22637  012EC8  0100               	movlb	0	; () banked
 22638  012ECA  59C5               	subwfb	??_motor_divide_jump& (0+255),w,b
 22639  012ECC  A0D8               	btfss	status,0,c
 22640  012ECE  D019               	goto	l2567
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;motor.c: 690: {;motor.c: 691: target_divide_position -= os.division;
 22644  012ED0  EE21  F084         	lfsr	2,_os+19	;volatile
 22645  012ED4  50DE               	movf	postinc2,w,c
 22646  012ED6  5FCA               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 22647  012ED8  50DD               	movf	postdec2,w,c
 22648  012EDA  5BCB               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 22649                           
 22650                           ; BSR set to: 0
 22651                           ;motor.c: 692: };motor.c: 693: }
 22652  012EDC  D012               	goto	l2567
 22653  012EDE                     l2564:
 22654                           
 22655                           ;motor.c: 694: else;motor.c: 695: {;motor.c: 696: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 22656                           
 22657                           ; BSR set to: 0
 22658  012EDE  0101               	movlb	1	; () banked
 22659  012EE0  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 22660  012EE2  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 22661  012EE4  0100               	movlb	0	; () banked
 22662  012EE6  6FCA               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 22663  012EE8  0101               	movlb	1	; () banked
 22664  012EEA  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 22665  012EEC  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 22666  012EEE  0100               	movlb	0	; () banked
 22667  012EF0  6FCB               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 22668                           
 22669                           ;motor.c: 697: if(target_divide_position<0)
 22670  012EF2  AFCB               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 22671  012EF4  D006               	goto	l2567
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;motor.c: 698: {;motor.c: 699: target_divide_position += os.division;
 22675  012EF6  EE21  F084         	lfsr	2,_os+19	;volatile
 22676  012EFA  50DE               	movf	postinc2,w,c
 22677  012EFC  27CA               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 22678  012EFE  50DD               	movf	postdec2,w,c
 22679  012F00  23CB               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 22680  012F02                     l2567:
 22681                           
 22682                           ; BSR set to: 0
 22683                           ;motor.c: 700: };motor.c: 701: };motor.c: 704: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 22684                           
 22685                           ; BSR set to: 0
 22686                           
 22687                           ; BSR set to: 0
 22688  012F02  C0CA  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 22689  012F06  C0CB  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 22690  012F0A  EC6A  F08C         	call	__step_position_from_divide_position	;wreg free
 22691  012F0E  C087  F0C6         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 22692  012F12  C088  F0C7         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 22693  012F16  C089  F0C8         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 22694  012F1A  C08A  F0C9         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 22695                           
 22696                           ;motor.c: 707: os.divide_position = target_divide_position;
 22697  012F1E  C0CA  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 22698  012F22  C0CB  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 22699                           
 22700                           ;motor.c: 708: motor_go_to_steps_position(target_position_in_steps);
 22701  012F26  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 22702  012F2A  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 22703  012F2E  C0C8  F0AB         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 22704  012F32  C0C9  F0AC         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 22705  012F36  EC38  F066         	call	_motor_go_to_steps_position	;wreg free
 22706  012F3A  0012               	return		;funcret
 22707  012F3C                     __end_of_motor_divide_jump:
 22708                           	opt stack 0
 22709                           tblptru	equ	0xFF8
 22710                           tblptrh	equ	0xFF7
 22711                           tblptrl	equ	0xFF6
 22712                           tablat	equ	0xFF5
 22713                           prodh	equ	0xFF4
 22714                           prodl	equ	0xFF3
 22715                           intcon	equ	0xFF2
 22716                           postinc0	equ	0xFEE
 22717                           wreg	equ	0xFE8
 22718                           indf1	equ	0xFE7
 22719                           postinc1	equ	0xFE6
 22720                           postdec1	equ	0xFE5
 22721                           plusw1	equ	0xFE3
 22722                           fsr1h	equ	0xFE2
 22723                           fsr1l	equ	0xFE1
 22724                           indf2	equ	0xFDF
 22725                           postinc2	equ	0xFDE
 22726                           postdec2	equ	0xFDD
 22727                           plusw2	equ	0xFDB
 22728                           fsr2h	equ	0xFDA
 22729                           fsr2l	equ	0xFD9
 22730                           status	equ	0xFD8
 22731                           
 22732 ;; *************** function __step_position_from_divide_position *****************
 22733 ;; Defined at:
 22734 ;;		line 92 in file "motor.c"
 22735 ;; Parameters:    Size  Location     Type
 22736 ;;  divide_posit    2   39[BANK0 ] int 
 22737 ;; Auto vars:     Size  Location     Type
 22738 ;;  target_posit    4   43[BANK0 ] float 
 22739 ;; Return value:  Size  Location     Type
 22740 ;;                  4   39[BANK0 ] unsigned long 
 22741 ;; Registers used:
 22742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22743 ;; Tracked objects:
 22744 ;;		On entry : 0/0
 22745 ;;		On exit  : 0/0
 22746 ;;		Unchanged: 0/0
 22747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22749 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22752 ;;Total ram usage:        8 bytes
 22753 ;; Hardware stack levels used:    1
 22754 ;; Hardware stack levels required when called:   11
 22755 ;; This function calls:
 22756 ;;		___fldiv
 22757 ;;		___flmul
 22758 ;;		___fltol
 22759 ;;		___xxtofl
 22760 ;; This function is called by:
 22761 ;;		_motor_divide_jump
 22762 ;;		_motor_divide_jump_to_nearest
 22763 ;; This function uses a non-reentrant model
 22764 ;;
 22765                           
 22766                           	psect	text92
 22767  0118D4                     __ptext92:
 22768                           	opt stack 0
 22769  0118D4                     __step_position_from_divide_position:
 22770                           	opt stack 17
 22771                           
 22772                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 22773                           
 22774                           ;incstack = 0
 22775  0118D4  C1A1  F060         	movff	_config,___xxtofl@val
 22776  0118D8  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 22777  0118DC  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 22778  0118E0  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 22779  0118E4  0E00               	movlw	0
 22780  0118E6  ECA3  F07F         	call	___xxtofl
 22781  0118EA  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 22782  0118EE  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 22783  0118F2  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 22784  0118F6  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 22785                           
 22786                           ;motor.c: 98: target_position *= (float) divide_position;
 22787  0118FA  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 22788  0118FE  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 22789  011902  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 22790  011906  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 22791  01190A  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 22792  01190E  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 22793  011912  0100               	movlb	0	; () banked
 22794  011914  0E00               	movlw	0
 22795  011916  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22796  011918  0EFF               	movlw	-1
 22797  01191A  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22798  01191C  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22799  01191E  0E01               	movlw	1
 22800  011920  ECA3  F07F         	call	___xxtofl
 22801  011924  C060  F072         	movff	?___xxtofl,___flmul@a
 22802  011928  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 22803  01192C  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 22804  011930  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 22805  011934  ECEC  F067         	call	___flmul	;wreg free
 22806  011938  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 22807  01193C  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 22808  011940  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 22809  011944  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 22810                           
 22811                           ;motor.c: 99: target_position /= (float) os.division;
 22812  011948  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 22813  01194C  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 22814  011950  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 22815  011954  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 22816  011958  EE21  F084         	lfsr	2,_os+19	;volatile
 22817  01195C  CFDE F060          	movff	postinc2,___xxtofl@val
 22818  011960  CFDD F061          	movff	postdec2,___xxtofl@val+1
 22819  011964  0100               	movlb	0	; () banked
 22820  011966  0E00               	movlw	0
 22821  011968  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22822  01196A  0EFF               	movlw	-1
 22823  01196C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22824  01196E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22825  011970  0E01               	movlw	1
 22826  011972  ECA3  F07F         	call	___xxtofl
 22827  011976  C060  F072         	movff	?___xxtofl,___fldiv@a
 22828  01197A  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 22829  01197E  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 22830  011982  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 22831  011986  EC14  F06E         	call	___fldiv	;wreg free
 22832  01198A  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 22833  01198E  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 22834  011992  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 22835  011996  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 22836                           
 22837                           ;motor.c: 101: return (uint32_t) target_position;
 22838  01199A  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 22839  01199E  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 22840  0119A2  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 22841  0119A6  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 22842  0119AA  EC88  F08F         	call	___fltol	;wreg free
 22843  0119AE  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 22844  0119B2  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 22845  0119B6  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 22846  0119BA  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 22847  0119BE  0012               	return	
 22848  0119C0                     __end_of__step_position_from_divide_position:
 22849                           	opt stack 0
 22850                           tblptru	equ	0xFF8
 22851                           tblptrh	equ	0xFF7
 22852                           tblptrl	equ	0xFF6
 22853                           tablat	equ	0xFF5
 22854                           prodh	equ	0xFF4
 22855                           prodl	equ	0xFF3
 22856                           intcon	equ	0xFF2
 22857                           postinc0	equ	0xFEE
 22858                           wreg	equ	0xFE8
 22859                           indf1	equ	0xFE7
 22860                           postinc1	equ	0xFE6
 22861                           postdec1	equ	0xFE5
 22862                           plusw1	equ	0xFE3
 22863                           fsr1h	equ	0xFE2
 22864                           fsr1l	equ	0xFE1
 22865                           indf2	equ	0xFDF
 22866                           postinc2	equ	0xFDE
 22867                           postdec2	equ	0xFDD
 22868                           plusw2	equ	0xFDB
 22869                           fsr2h	equ	0xFDA
 22870                           fsr2l	equ	0xFD9
 22871                           status	equ	0xFD8
 22872                           
 22873 ;; *************** function _motor_decrease_manual_speed *****************
 22874 ;; Defined at:
 22875 ;;		line 547 in file "motor.c"
 22876 ;; Parameters:    Size  Location     Type
 22877 ;;		None
 22878 ;; Auto vars:     Size  Location     Type
 22879 ;;		None
 22880 ;; Return value:  Size  Location     Type
 22881 ;;                  1    wreg      void 
 22882 ;; Registers used:
 22883 ;;		wreg, status,2, status,0, cstack
 22884 ;; Tracked objects:
 22885 ;;		On entry : 0/0
 22886 ;;		On exit  : 0/0
 22887 ;;		Unchanged: 0/0
 22888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22893 ;;Total ram usage:        0 bytes
 22894 ;; Hardware stack levels used:    1
 22895 ;; Hardware stack levels required when called:   12
 22896 ;; This function calls:
 22897 ;;		_motor_set_manual_speed
 22898 ;; This function is called by:
 22899 ;;		_encoder_statemachine
 22900 ;; This function uses a non-reentrant model
 22901 ;;
 22902                           
 22903                           	psect	text93
 22904  0156A4                     __ptext93:
 22905                           	opt stack 0
 22906  0156A4                     _motor_decrease_manual_speed:
 22907                           	opt stack 17
 22908                           
 22909                           ;motor.c: 549: if(os.manual_speed>0)
 22910                           
 22911                           ;incstack = 0
 22912  0156A4  0101               	movlb	1	; () banked
 22913  0156A6  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 22914  0156A8  1195               	iorwf	(_os+36)& (0+255),w,b	;volatile
 22915  0156AA  B4D8               	btfsc	status,2,c
 22916  0156AC  0012               	return	
 22917                           
 22918                           ; BSR set to: 1
 22919                           ;motor.c: 550: {;motor.c: 551: motor_set_manual_speed(os.manual_speed-1);
 22920  0156AE  0EFF               	movlw	255
 22921  0156B0  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 22922  0156B2  0100               	movlb	0	; () banked
 22923  0156B4  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 22924  0156B6  0EFF               	movlw	255
 22925  0156B8  0101               	movlb	1	; () banked
 22926  0156BA  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 22927  0156BC  0100               	movlb	0	; () banked
 22928  0156BE  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 22929  0156C0  EC1B  F0A6         	call	_motor_set_manual_speed	;wreg free
 22930  0156C4  0012               	return	
 22931  0156C6                     __end_of_motor_decrease_manual_speed:
 22932                           	opt stack 0
 22933                           tblptru	equ	0xFF8
 22934                           tblptrh	equ	0xFF7
 22935                           tblptrl	equ	0xFF6
 22936                           tablat	equ	0xFF5
 22937                           prodh	equ	0xFF4
 22938                           prodl	equ	0xFF3
 22939                           intcon	equ	0xFF2
 22940                           postinc0	equ	0xFEE
 22941                           wreg	equ	0xFE8
 22942                           indf1	equ	0xFE7
 22943                           postinc1	equ	0xFE6
 22944                           postdec1	equ	0xFE5
 22945                           plusw1	equ	0xFE3
 22946                           fsr1h	equ	0xFE2
 22947                           fsr1l	equ	0xFE1
 22948                           indf2	equ	0xFDF
 22949                           postinc2	equ	0xFDE
 22950                           postdec2	equ	0xFDD
 22951                           plusw2	equ	0xFDB
 22952                           fsr2h	equ	0xFDA
 22953                           fsr2l	equ	0xFD9
 22954                           status	equ	0xFD8
 22955                           
 22956 ;; *************** function _motor_arc_move *****************
 22957 ;; Defined at:
 22958 ;;		line 731 in file "motor.c"
 22959 ;; Parameters:    Size  Location     Type
 22960 ;;  direction       1    wreg     enum E6622
 22961 ;; Auto vars:     Size  Location     Type
 22962 ;;  direction       1   77[BANK0 ] enum E6622
 22963 ;;  arc_in_steps    4   78[BANK0 ] float 
 22964 ;; Return value:  Size  Location     Type
 22965 ;;                  1    wreg      void 
 22966 ;; Registers used:
 22967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22968 ;; Tracked objects:
 22969 ;;		On entry : 0/0
 22970 ;;		On exit  : 0/0
 22971 ;;		Unchanged: 0/0
 22972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22974 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22976 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22977 ;;Total ram usage:        9 bytes
 22978 ;; Hardware stack levels used:    1
 22979 ;; Hardware stack levels required when called:   14
 22980 ;; This function calls:
 22981 ;;		___fldiv
 22982 ;;		___flmul
 22983 ;;		___fltol
 22984 ;;		___xxtofl
 22985 ;;		_motor_schedule_command
 22986 ;; This function is called by:
 22987 ;;		_encoder_statemachine
 22988 ;; This function uses a non-reentrant model
 22989 ;;
 22990                           
 22991                           	psect	text94
 22992  011600                     __ptext94:
 22993                           	opt stack 0
 22994  011600                     _motor_arc_move:
 22995                           	opt stack 15
 22996                           
 22997                           ;incstack = 0
 22998                           ;motor_arc_move@direction stored from wreg
 22999  011600  0100               	movlb	0	; () banked
 23000  011602  6FAD               	movwf	motor_arc_move@direction& (0+255),b
 23001                           
 23002                           ;motor.c: 733: float arc_in_steps;;motor.c: 735: arc_in_steps = (float) os.arc_size;
 23003  011604  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 23004  011608  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 23005  01160C  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 23006  011610  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 23007  011614  0E01               	movlw	1
 23008  011616  ECA3  F07F         	call	___xxtofl
 23009  01161A  C060  F0AE         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 23010  01161E  C061  F0AF         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 23011  011622  C062  F0B0         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 23012  011626  C063  F0B1         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 23013                           
 23014                           ;motor.c: 736: arc_in_steps *= (float) config.full_circle_in_steps;
 23015  01162A  C0AE  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 23016  01162E  C0AF  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 23017  011632  C0B0  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 23018  011636  C0B1  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 23019  01163A  C1A1  F060         	movff	_config,___xxtofl@val
 23020  01163E  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23021  011642  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23022  011646  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23023  01164A  0E00               	movlw	0
 23024  01164C  ECA3  F07F         	call	___xxtofl
 23025  011650  C060  F072         	movff	?___xxtofl,___flmul@a
 23026  011654  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23027  011658  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23028  01165C  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23029  011660  ECEC  F067         	call	___flmul	;wreg free
 23030  011664  C06E  F0AE         	movff	?___flmul,motor_arc_move@arc_in_steps
 23031  011668  C06F  F0AF         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 23032  01166C  C070  F0B0         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 23033  011670  C071  F0B1         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 23034                           
 23035                           ;motor.c: 737: arc_in_steps /= (float) 36000;
 23036  011674  C0AE  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 23037  011678  C0AF  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 23038  01167C  C0B0  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 23039  011680  C0B1  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 23040  011684  0E00               	movlw	0
 23041  011686  0100               	movlb	0	; () banked
 23042  011688  6F72               	movwf	___fldiv@a& (0+255),b
 23043  01168A  0EA0               	movlw	160
 23044  01168C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 23045  01168E  0E0C               	movlw	12
 23046  011690  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 23047  011692  0E47               	movlw	71
 23048  011694  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 23049  011696  EC14  F06E         	call	___fldiv	;wreg free
 23050  01169A  C06E  F0AE         	movff	?___fldiv,motor_arc_move@arc_in_steps
 23051  01169E  C06F  F0AF         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 23052  0116A2  C070  F0B0         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 23053  0116A6  C071  F0B1         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 23054                           
 23055                           ;motor.c: 738: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 23056  0116AA  C0AE  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 23057  0116AE  C0AF  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 23058  0116B2  C0B0  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 23059  0116B6  C0B1  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 23060  0116BA  EC88  F08F         	call	___fltol	;wreg free
 23061  0116BE  C060  F0A9         	movff	?___fltol,_motor_arc_move$8826
 23062  0116C2  C061  F0AA         	movff	?___fltol+1,_motor_arc_move$8826+1
 23063  0116C6  C062  F0AB         	movff	?___fltol+2,_motor_arc_move$8826+2
 23064  0116CA  C063  F0AC         	movff	?___fltol+3,_motor_arc_move$8826+3
 23065                           
 23066                           ;motor.c: 738: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 23067  0116CE  C0A9  F0A1         	movff	_motor_arc_move$8826,motor_schedule_command@distance_in_steps
 23068  0116D2  C0AA  F0A2         	movff	_motor_arc_move$8826+1,motor_schedule_command@distance_in_steps+1
 23069  0116D6  C0AB  F0A3         	movff	_motor_arc_move$8826+2,motor_schedule_command@distance_in_steps+2
 23070  0116DA  C0AC  F0A4         	movff	_motor_arc_move$8826+3,motor_schedule_command@distance_in_steps+3
 23071  0116DE  C191  F0A5         	movff	_os+32,motor_schedule_command@speed	;volatile
 23072  0116E2  C192  F0A6         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 23073  0116E6  0E00               	movlw	0
 23074  0116E8  0100               	movlb	0	; () banked
 23075  0116EA  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 23076  0116EC  51AD               	movf	motor_arc_move@direction& (0+255),w,b
 23077  0116EE  EC48  F093         	call	_motor_schedule_command
 23078  0116F2  0012               	return		;funcret
 23079  0116F4                     __end_of_motor_arc_move:
 23080                           	opt stack 0
 23081                           tblptru	equ	0xFF8
 23082                           tblptrh	equ	0xFF7
 23083                           tblptrl	equ	0xFF6
 23084                           tablat	equ	0xFF5
 23085                           prodh	equ	0xFF4
 23086                           prodl	equ	0xFF3
 23087                           intcon	equ	0xFF2
 23088                           postinc0	equ	0xFEE
 23089                           wreg	equ	0xFE8
 23090                           indf1	equ	0xFE7
 23091                           postinc1	equ	0xFE6
 23092                           postdec1	equ	0xFE5
 23093                           plusw1	equ	0xFE3
 23094                           fsr1h	equ	0xFE2
 23095                           fsr1l	equ	0xFE1
 23096                           indf2	equ	0xFDF
 23097                           postinc2	equ	0xFDE
 23098                           postdec2	equ	0xFDD
 23099                           plusw2	equ	0xFDB
 23100                           fsr2h	equ	0xFDA
 23101                           fsr2l	equ	0xFD9
 23102                           status	equ	0xFD8
 23103                           
 23104 ;; *************** function __encoder_next_setup_stepsize *****************
 23105 ;; Defined at:
 23106 ;;		line 24 in file "encoder.c"
 23107 ;; Parameters:    Size  Location     Type
 23108 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 23109 ;; Auto vars:     Size  Location     Type
 23110 ;;		None
 23111 ;; Return value:  Size  Location     Type
 23112 ;;                  2    0[BANK0 ] unsigned int 
 23113 ;; Registers used:
 23114 ;;		wreg, status,2, status,0
 23115 ;; Tracked objects:
 23116 ;;		On entry : 0/0
 23117 ;;		On exit  : 0/0
 23118 ;;		Unchanged: 0/0
 23119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23124 ;;Total ram usage:        4 bytes
 23125 ;; Hardware stack levels used:    1
 23126 ;; Hardware stack levels required when called:   10
 23127 ;; This function calls:
 23128 ;;		Nothing
 23129 ;; This function is called by:
 23130 ;;		_encoder_statemachine
 23131 ;; This function uses a non-reentrant model
 23132 ;;
 23133                           
 23134                           	psect	text95
 23135  013E60                     __ptext95:
 23136                           	opt stack 0
 23137  013E60                     __encoder_next_setup_stepsize:
 23138                           	opt stack 19
 23139                           
 23140                           ;encoder.c: 26: switch(old_stepsize)
 23141                           
 23142                           ;incstack = 0
 23143  013E60  D01A               	goto	l2630
 23144  013E62                     
 23145                           ;encoder.c: 29: return 100;
 23146  013E62  0E00               	movlw	0
 23147  013E64  0100               	movlb	0	; () banked
 23148  013E66  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23149  013E68  0E64               	movlw	100
 23150  013E6A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23151                           
 23152                           ; BSR set to: 0
 23153  013E6C  0012               	return	
 23154  013E6E                     
 23155                           ; BSR set to: 0
 23156                           ;encoder.c: 31: return 10;
 23157                           
 23158                           ; BSR set to: 0
 23159  013E6E  0E00               	movlw	0
 23160  013E70  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23161  013E72  0E0A               	movlw	10
 23162  013E74  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23163                           
 23164                           ; BSR set to: 0
 23165  013E76  0012               	return	
 23166  013E78                     
 23167                           ; BSR set to: 0
 23168                           ;encoder.c: 33: return 1;
 23169                           
 23170                           ; BSR set to: 0
 23171  013E78  0E00               	movlw	0
 23172  013E7A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23173  013E7C  0E01               	movlw	1
 23174  013E7E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23175                           
 23176                           ; BSR set to: 0
 23177  013E80  0012               	return	
 23178  013E82                     
 23179                           ; BSR set to: 0
 23180                           ;encoder.c: 35: return 1000;
 23181                           
 23182                           ; BSR set to: 0
 23183  013E82  0E03               	movlw	3
 23184  013E84  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23185  013E86  0EE8               	movlw	232
 23186  013E88  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23187                           
 23188                           ; BSR set to: 0
 23189  013E8A  0012               	return	
 23190  013E8C                     
 23191                           ; BSR set to: 0
 23192                           ;encoder.c: 37: return 100;
 23193                           
 23194                           ; BSR set to: 0
 23195  013E8C  0E00               	movlw	0
 23196  013E8E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23197  013E90  0E64               	movlw	100
 23198  013E92  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23199                           
 23200                           ; BSR set to: 0
 23201                           ;encoder.c: 38: }
 23202                           
 23203                           ; BSR set to: 0
 23204  013E94  0012               	return	
 23205  013E96                     l2630:
 23206                           
 23207                           ; BSR set to: 0
 23208  013E96  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 23209  013E9A  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 23210                           
 23211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23212                           ; Switch size 1, requested type "space"
 23213                           ; Number of cases is 2, Range of values is 0 to 3
 23214                           ; switch strategies available:
 23215                           ; Name         Instructions Cycles
 23216                           ; simple_byte            7     4 (average)
 23217                           ;	Chosen strategy is simple_byte
 23218  013E9E  0100               	movlb	0	; () banked
 23219  013EA0  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 23220  013EA2  0A00               	xorlw	0	; case 0
 23221  013EA4  B4D8               	btfsc	status,2,c
 23222  013EA6  D004               	goto	l19261
 23223  013EA8  0A03               	xorlw	3	; case 3
 23224  013EAA  B4D8               	btfsc	status,2,c
 23225  013EAC  D00C               	goto	l19263
 23226  013EAE  D7EE               	goto	l2636
 23227  013EB0                     l19261:
 23228                           
 23229                           ; BSR set to: 0
 23230                           ; Switch size 1, requested type "space"
 23231                           ; Number of cases is 3, Range of values is 1 to 100
 23232                           ; switch strategies available:
 23233                           ; Name         Instructions Cycles
 23234                           ; simple_byte           10     6 (average)
 23235                           ;	Chosen strategy is simple_byte
 23236  013EB0  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 23237  013EB2  0A01               	xorlw	1	; case 1
 23238  013EB4  B4D8               	btfsc	status,2,c
 23239  013EB6  D7E5               	goto	l2635
 23240  013EB8  0A0B               	xorlw	11	; case 10
 23241  013EBA  B4D8               	btfsc	status,2,c
 23242  013EBC  D7DD               	goto	l2634
 23243  013EBE  0A6E               	xorlw	110	; case 100
 23244  013EC0  B4D8               	btfsc	status,2,c
 23245  013EC2  D7D5               	goto	l2633
 23246  013EC4  D7E3               	goto	l2636
 23247  013EC6                     l19263:
 23248                           
 23249                           ; BSR set to: 0
 23250                           ; Switch size 1, requested type "space"
 23251                           ; Number of cases is 1, Range of values is 232 to 232
 23252                           ; switch strategies available:
 23253                           ; Name         Instructions Cycles
 23254                           ; simple_byte            4     3 (average)
 23255                           ;	Chosen strategy is simple_byte
 23256  013EC6  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 23257  013EC8  0AE8               	xorlw	232	; case 232
 23258  013ECA  B4D8               	btfsc	status,2,c
 23259  013ECC  D7CA               	goto	l2631
 23260  013ECE  D7DE               	goto	l2636
 23261  013ED0                     __end_of__encoder_next_setup_stepsize:
 23262                           	opt stack 0
 23263                           tblptru	equ	0xFF8
 23264                           tblptrh	equ	0xFF7
 23265                           tblptrl	equ	0xFF6
 23266                           tablat	equ	0xFF5
 23267                           prodh	equ	0xFF4
 23268                           prodl	equ	0xFF3
 23269                           intcon	equ	0xFF2
 23270                           postinc0	equ	0xFEE
 23271                           wreg	equ	0xFE8
 23272                           indf1	equ	0xFE7
 23273                           postinc1	equ	0xFE6
 23274                           postdec1	equ	0xFE5
 23275                           plusw1	equ	0xFE3
 23276                           fsr1h	equ	0xFE2
 23277                           fsr1l	equ	0xFE1
 23278                           indf2	equ	0xFDF
 23279                           postinc2	equ	0xFDE
 23280                           postdec2	equ	0xFDD
 23281                           plusw2	equ	0xFDB
 23282                           fsr2h	equ	0xFDA
 23283                           fsr2l	equ	0xFD9
 23284                           status	equ	0xFD8
 23285                           
 23286 ;; *************** function __encoder_next_divide_step_size *****************
 23287 ;; Defined at:
 23288 ;;		line 41 in file "encoder.c"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;  old_stepsize    1    wreg     unsigned char 
 23291 ;; Auto vars:     Size  Location     Type
 23292 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 23293 ;; Return value:  Size  Location     Type
 23294 ;;                  1    wreg      unsigned char 
 23295 ;; Registers used:
 23296 ;;		wreg, status,2, status,0
 23297 ;; Tracked objects:
 23298 ;;		On entry : 0/0
 23299 ;;		On exit  : 0/0
 23300 ;;		Unchanged: 0/0
 23301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23306 ;;Total ram usage:        1 bytes
 23307 ;; Hardware stack levels used:    1
 23308 ;; Hardware stack levels required when called:   10
 23309 ;; This function calls:
 23310 ;;		Nothing
 23311 ;; This function is called by:
 23312 ;;		_encoder_statemachine
 23313 ;; This function uses a non-reentrant model
 23314 ;;
 23315                           
 23316                           	psect	text96
 23317  0153AA                     __ptext96:
 23318                           	opt stack 0
 23319  0153AA                     __encoder_next_divide_step_size:
 23320                           	opt stack 19
 23321                           
 23322                           ; BSR set to: 0
 23323                           ;incstack = 0
 23324                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 23325  0153AA  0100               	movlb	0	; () banked
 23326  0153AC  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 23327                           
 23328                           ;encoder.c: 43: switch(old_stepsize)
 23329  0153AE  D008               	goto	l2640
 23330  0153B0                     
 23331                           ;encoder.c: 46: return 10;
 23332  0153B0  0E0A               	movlw	10
 23333  0153B2  0012               	return	
 23334  0153B4                     
 23335                           ;encoder.c: 48: return 1;
 23336  0153B4  0E01               	movlw	1
 23337  0153B6  0012               	return	
 23338  0153B8                     
 23339                           ;encoder.c: 50: return 100;
 23340  0153B8  0E64               	movlw	100
 23341  0153BA  0012               	return	
 23342  0153BC                     
 23343                           ;encoder.c: 52: return 1;
 23344  0153BC  0E01               	movlw	1
 23345                           
 23346                           ;encoder.c: 53: }
 23347  0153BE  0012               	return	
 23348  0153C0                     l2640:
 23349  0153C0  0100               	movlb	0	; () banked
 23350  0153C2  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 23351                           
 23352                           ; Switch size 1, requested type "space"
 23353                           ; Number of cases is 3, Range of values is 1 to 100
 23354                           ; switch strategies available:
 23355                           ; Name         Instructions Cycles
 23356                           ; simple_byte           10     6 (average)
 23357                           ;	Chosen strategy is simple_byte
 23358  0153C4  0A01               	xorlw	1	; case 1
 23359  0153C6  B4D8               	btfsc	status,2,c
 23360  0153C8  D7F7               	goto	l2644
 23361  0153CA  0A0B               	xorlw	11	; case 10
 23362  0153CC  B4D8               	btfsc	status,2,c
 23363  0153CE  D7F2               	goto	l2643
 23364  0153D0  0A6E               	xorlw	110	; case 100
 23365  0153D2  B4D8               	btfsc	status,2,c
 23366  0153D4  D7ED               	goto	l2641
 23367  0153D6  D7F2               	goto	l2645
 23368  0153D8                     __end_of__encoder_next_divide_step_size:
 23369                           	opt stack 0
 23370                           tblptru	equ	0xFF8
 23371                           tblptrh	equ	0xFF7
 23372                           tblptrl	equ	0xFF6
 23373                           tablat	equ	0xFF5
 23374                           prodh	equ	0xFF4
 23375                           prodl	equ	0xFF3
 23376                           intcon	equ	0xFF2
 23377                           postinc0	equ	0xFEE
 23378                           wreg	equ	0xFE8
 23379                           indf1	equ	0xFE7
 23380                           postinc1	equ	0xFE6
 23381                           postdec1	equ	0xFE5
 23382                           plusw1	equ	0xFE3
 23383                           fsr1h	equ	0xFE2
 23384                           fsr1l	equ	0xFE1
 23385                           indf2	equ	0xFDF
 23386                           postinc2	equ	0xFDE
 23387                           postdec2	equ	0xFDD
 23388                           plusw2	equ	0xFDB
 23389                           fsr2h	equ	0xFDA
 23390                           fsr2l	equ	0xFD9
 23391                           status	equ	0xFD8
 23392                           
 23393 ;; *************** function __encoder_next_arc_step_size *****************
 23394 ;; Defined at:
 23395 ;;		line 56 in file "encoder.c"
 23396 ;; Parameters:    Size  Location     Type
 23397 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 23398 ;; Auto vars:     Size  Location     Type
 23399 ;;		None
 23400 ;; Return value:  Size  Location     Type
 23401 ;;                  2    0[BANK0 ] unsigned int 
 23402 ;; Registers used:
 23403 ;;		wreg, status,2, status,0
 23404 ;; Tracked objects:
 23405 ;;		On entry : 0/0
 23406 ;;		On exit  : 0/0
 23407 ;;		Unchanged: 0/0
 23408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23412 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23413 ;;Total ram usage:        4 bytes
 23414 ;; Hardware stack levels used:    1
 23415 ;; Hardware stack levels required when called:   10
 23416 ;; This function calls:
 23417 ;;		Nothing
 23418 ;; This function is called by:
 23419 ;;		_encoder_statemachine
 23420 ;; This function uses a non-reentrant model
 23421 ;;
 23422                           
 23423                           	psect	text97
 23424  013ED0                     __ptext97:
 23425                           	opt stack 0
 23426  013ED0                     __encoder_next_arc_step_size:
 23427                           	opt stack 19
 23428                           
 23429                           ;encoder.c: 58: switch(old_stepsize)
 23430                           
 23431                           ;incstack = 0
 23432  013ED0  D01A               	goto	l2649
 23433  013ED2                     
 23434                           ;encoder.c: 61: return 100;
 23435  013ED2  0E00               	movlw	0
 23436  013ED4  0100               	movlb	0	; () banked
 23437  013ED6  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23438  013ED8  0E64               	movlw	100
 23439  013EDA  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23440                           
 23441                           ; BSR set to: 0
 23442  013EDC  0012               	return	
 23443  013EDE                     
 23444                           ; BSR set to: 0
 23445                           ;encoder.c: 63: return 10;
 23446                           
 23447                           ; BSR set to: 0
 23448  013EDE  0E00               	movlw	0
 23449  013EE0  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23450  013EE2  0E0A               	movlw	10
 23451  013EE4  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23452                           
 23453                           ; BSR set to: 0
 23454  013EE6  0012               	return	
 23455  013EE8                     
 23456                           ; BSR set to: 0
 23457                           ;encoder.c: 65: return 1;
 23458                           
 23459                           ; BSR set to: 0
 23460  013EE8  0E00               	movlw	0
 23461  013EEA  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23462  013EEC  0E01               	movlw	1
 23463  013EEE  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23464                           
 23465                           ; BSR set to: 0
 23466  013EF0  0012               	return	
 23467  013EF2                     
 23468                           ; BSR set to: 0
 23469                           ;encoder.c: 67: return 1000;
 23470                           
 23471                           ; BSR set to: 0
 23472  013EF2  0E03               	movlw	3
 23473  013EF4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23474  013EF6  0EE8               	movlw	232
 23475  013EF8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23476                           
 23477                           ; BSR set to: 0
 23478  013EFA  0012               	return	
 23479  013EFC                     
 23480                           ; BSR set to: 0
 23481                           ;encoder.c: 69: return 100;
 23482                           
 23483                           ; BSR set to: 0
 23484  013EFC  0E00               	movlw	0
 23485  013EFE  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23486  013F00  0E64               	movlw	100
 23487  013F02  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23488                           
 23489                           ; BSR set to: 0
 23490                           ;encoder.c: 70: }
 23491                           
 23492                           ; BSR set to: 0
 23493  013F04  0012               	return	
 23494  013F06                     l2649:
 23495                           
 23496                           ; BSR set to: 0
 23497  013F06  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 23498  013F0A  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 23499                           
 23500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23501                           ; Switch size 1, requested type "space"
 23502                           ; Number of cases is 2, Range of values is 0 to 3
 23503                           ; switch strategies available:
 23504                           ; Name         Instructions Cycles
 23505                           ; simple_byte            7     4 (average)
 23506                           ;	Chosen strategy is simple_byte
 23507  013F0E  0100               	movlb	0	; () banked
 23508  013F10  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 23509  013F12  0A00               	xorlw	0	; case 0
 23510  013F14  B4D8               	btfsc	status,2,c
 23511  013F16  D004               	goto	l19265
 23512  013F18  0A03               	xorlw	3	; case 3
 23513  013F1A  B4D8               	btfsc	status,2,c
 23514  013F1C  D00C               	goto	l19267
 23515  013F1E  D7EE               	goto	l2655
 23516  013F20                     l19265:
 23517                           
 23518                           ; BSR set to: 0
 23519                           ; Switch size 1, requested type "space"
 23520                           ; Number of cases is 3, Range of values is 1 to 100
 23521                           ; switch strategies available:
 23522                           ; Name         Instructions Cycles
 23523                           ; simple_byte           10     6 (average)
 23524                           ;	Chosen strategy is simple_byte
 23525  013F20  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 23526  013F22  0A01               	xorlw	1	; case 1
 23527  013F24  B4D8               	btfsc	status,2,c
 23528  013F26  D7E5               	goto	l2654
 23529  013F28  0A0B               	xorlw	11	; case 10
 23530  013F2A  B4D8               	btfsc	status,2,c
 23531  013F2C  D7DD               	goto	l2653
 23532  013F2E  0A6E               	xorlw	110	; case 100
 23533  013F30  B4D8               	btfsc	status,2,c
 23534  013F32  D7D5               	goto	l2652
 23535  013F34  D7E3               	goto	l2655
 23536  013F36                     l19267:
 23537                           
 23538                           ; BSR set to: 0
 23539                           ; Switch size 1, requested type "space"
 23540                           ; Number of cases is 1, Range of values is 232 to 232
 23541                           ; switch strategies available:
 23542                           ; Name         Instructions Cycles
 23543                           ; simple_byte            4     3 (average)
 23544                           ;	Chosen strategy is simple_byte
 23545  013F36  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 23546  013F38  0AE8               	xorlw	232	; case 232
 23547  013F3A  B4D8               	btfsc	status,2,c
 23548  013F3C  D7CA               	goto	l2650
 23549  013F3E  D7DE               	goto	l2655
 23550  013F40                     __end_of__encoder_next_arc_step_size:
 23551                           	opt stack 0
 23552                           tblptru	equ	0xFF8
 23553                           tblptrh	equ	0xFF7
 23554                           tblptrl	equ	0xFF6
 23555                           tablat	equ	0xFF5
 23556                           prodh	equ	0xFF4
 23557                           prodl	equ	0xFF3
 23558                           intcon	equ	0xFF2
 23559                           postinc0	equ	0xFEE
 23560                           wreg	equ	0xFE8
 23561                           indf1	equ	0xFE7
 23562                           postinc1	equ	0xFE6
 23563                           postdec1	equ	0xFE5
 23564                           plusw1	equ	0xFE3
 23565                           fsr1h	equ	0xFE2
 23566                           fsr1l	equ	0xFE1
 23567                           indf2	equ	0xFDF
 23568                           postinc2	equ	0xFDE
 23569                           postdec2	equ	0xFDD
 23570                           plusw2	equ	0xFDB
 23571                           fsr2h	equ	0xFDA
 23572                           fsr2l	equ	0xFD9
 23573                           status	equ	0xFD8
 23574                           
 23575 ;; *************** function __divide_jump_size_increment *****************
 23576 ;; Defined at:
 23577 ;;		line 73 in file "encoder.c"
 23578 ;; Parameters:    Size  Location     Type
 23579 ;;		None
 23580 ;; Auto vars:     Size  Location     Type
 23581 ;;		None
 23582 ;; Return value:  Size  Location     Type
 23583 ;;                  1    wreg      void 
 23584 ;; Registers used:
 23585 ;;		wreg, status,2, status,0
 23586 ;; Tracked objects:
 23587 ;;		On entry : 0/0
 23588 ;;		On exit  : 0/0
 23589 ;;		Unchanged: 0/0
 23590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23594 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23595 ;;Total ram usage:        1 bytes
 23596 ;; Hardware stack levels used:    1
 23597 ;; Hardware stack levels required when called:   10
 23598 ;; This function calls:
 23599 ;;		Nothing
 23600 ;; This function is called by:
 23601 ;;		_encoder_statemachine
 23602 ;; This function uses a non-reentrant model
 23603 ;;
 23604                           
 23605                           	psect	text98
 23606  014FDC                     __ptext98:
 23607                           	opt stack 0
 23608  014FDC                     __divide_jump_size_increment:
 23609                           	opt stack 19
 23610                           
 23611                           ;encoder.c: 75: ++os.divide_jump_size;
 23612                           
 23613                           ; BSR set to: 0
 23614                           ;incstack = 0
 23615  014FDC  0101               	movlb	1	; () banked
 23616  014FDE  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 23617  014FE0  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 23618                           
 23619                           ; BSR set to: 1
 23620                           ;encoder.c: 76: if(os.divide_jump_size==0)
 23621  014FE2  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23622  014FE4  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 23623  014FE6  A4D8               	btfss	status,2,c
 23624  014FE8  D004               	goto	l2659
 23625                           
 23626                           ; BSR set to: 1
 23627                           ;encoder.c: 77: os.divide_jump_size = 1;
 23628  014FEA  0E00               	movlw	0
 23629  014FEC  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 23630  014FEE  0E01               	movlw	1
 23631  014FF0  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 23632  014FF2                     l2659:
 23633                           
 23634                           ; BSR set to: 1
 23635                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 23636                           
 23637                           ; BSR set to: 1
 23638  014FF2  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23639  014FF4  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 23640  014FF6  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23641  014FF8  0A80               	xorlw	128
 23642  014FFA  0100               	movlb	0	; () banked
 23643  014FFC  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 23644  014FFE  0101               	movlb	1	; () banked
 23645  015000  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23646  015002  0A80               	xorlw	128
 23647  015004  0100               	movlb	0	; () banked
 23648  015006  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 23649  015008  A0D8               	btfss	status,0,c
 23650  01500A  0012               	return	
 23651                           
 23652                           ; BSR set to: 0
 23653                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 23654  01500C  0EFF               	movlw	255
 23655  01500E  0101               	movlb	1	; () banked
 23656  015010  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 23657  015012  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 23658  015014  0EFF               	movlw	255
 23659  015016  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 23660  015018  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 23661  01501A  0012               	return	
 23662  01501C                     __end_of__divide_jump_size_increment:
 23663                           	opt stack 0
 23664                           tblptru	equ	0xFF8
 23665                           tblptrh	equ	0xFF7
 23666                           tblptrl	equ	0xFF6
 23667                           tablat	equ	0xFF5
 23668                           prodh	equ	0xFF4
 23669                           prodl	equ	0xFF3
 23670                           intcon	equ	0xFF2
 23671                           postinc0	equ	0xFEE
 23672                           wreg	equ	0xFE8
 23673                           indf1	equ	0xFE7
 23674                           postinc1	equ	0xFE6
 23675                           postdec1	equ	0xFE5
 23676                           plusw1	equ	0xFE3
 23677                           fsr1h	equ	0xFE2
 23678                           fsr1l	equ	0xFE1
 23679                           indf2	equ	0xFDF
 23680                           postinc2	equ	0xFDE
 23681                           postdec2	equ	0xFDD
 23682                           plusw2	equ	0xFDB
 23683                           fsr2h	equ	0xFDA
 23684                           fsr2l	equ	0xFD9
 23685                           status	equ	0xFD8
 23686                           
 23687 ;; *************** function __divide_jump_size_decrement *****************
 23688 ;; Defined at:
 23689 ;;		line 82 in file "encoder.c"
 23690 ;; Parameters:    Size  Location     Type
 23691 ;;		None
 23692 ;; Auto vars:     Size  Location     Type
 23693 ;;		None
 23694 ;; Return value:  Size  Location     Type
 23695 ;;                  1    wreg      void 
 23696 ;; Registers used:
 23697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23698 ;; Tracked objects:
 23699 ;;		On entry : 0/0
 23700 ;;		On exit  : 0/0
 23701 ;;		Unchanged: 0/0
 23702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23705 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23706 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23707 ;;Total ram usage:        3 bytes
 23708 ;; Hardware stack levels used:    1
 23709 ;; Hardware stack levels required when called:   10
 23710 ;; This function calls:
 23711 ;;		Nothing
 23712 ;; This function is called by:
 23713 ;;		_encoder_statemachine
 23714 ;; This function uses a non-reentrant model
 23715 ;;
 23716                           
 23717                           	psect	text99
 23718  013FAE                     __ptext99:
 23719                           	opt stack 0
 23720  013FAE                     __divide_jump_size_decrement:
 23721                           	opt stack 19
 23722                           
 23723                           ;encoder.c: 84: --os.divide_jump_size;
 23724                           
 23725                           ;incstack = 0
 23726  013FAE  0101               	movlb	1	; () banked
 23727  013FB0  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 23728  013FB2  A0D8               	btfss	status,0,c
 23729  013FB4  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 23730                           
 23731                           ; BSR set to: 1
 23732                           ;encoder.c: 85: if(os.divide_jump_size==0)
 23733  013FB6  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23734  013FB8  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 23735  013FBA  A4D8               	btfss	status,2,c
 23736  013FBC  D002               	goto	l2664
 23737                           
 23738                           ; BSR set to: 1
 23739                           ;encoder.c: 86: os.divide_jump_size = -1;
 23740  013FBE  6989               	setf	(_os+24)& (0+255),b	;volatile
 23741  013FC0  698A               	setf	(_os+25)& (0+255),b	;volatile
 23742  013FC2                     l2664:
 23743                           
 23744                           ; BSR set to: 1
 23745                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 23746                           
 23747                           ; BSR set to: 1
 23748  013FC2  EE21  F084         	lfsr	2,_os+19	;volatile
 23749  013FC6  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 23750  013FCA  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 23751  013FCE  0100               	movlb	0	; () banked
 23752  013FD0  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 23753  013FD2  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23754  013FD4  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 23755  013FD6  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23756  013FD8  0101               	movlb	1	; () banked
 23757  013FDA  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23758  013FDC  0100               	movlb	0	; () banked
 23759  013FDE  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 23760  013FE0  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 23761  013FE2  0A80               	xorlw	128
 23762  013FE4  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 23763  013FE6  0101               	movlb	1	; () banked
 23764  013FE8  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23765  013FEA  0A80               	xorlw	128
 23766  013FEC  0100               	movlb	0	; () banked
 23767  013FEE  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 23768  013FF0  A0D8               	btfss	status,0,c
 23769  013FF2  0012               	return	
 23770                           
 23771                           ; BSR set to: 0
 23772                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 23773  013FF4  EE21  F084         	lfsr	2,_os+19	;volatile
 23774  013FF8  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 23775  013FFC  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 23776  014000  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 23777  014002  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23778  014004  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 23779  014006  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23780  014008  0E01               	movlw	1
 23781  01400A  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 23782  01400C  0101               	movlb	1	; () banked
 23783  01400E  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 23784  014010  0E00               	movlw	0
 23785  014012  0100               	movlb	0	; () banked
 23786  014014  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 23787  014016  0101               	movlb	1	; () banked
 23788  014018  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 23789  01401A  0012               	return	
 23790  01401C                     __end_of__divide_jump_size_decrement:
 23791                           	opt stack 0
 23792                           tblptru	equ	0xFF8
 23793                           tblptrh	equ	0xFF7
 23794                           tblptrl	equ	0xFF6
 23795                           tablat	equ	0xFF5
 23796                           prodh	equ	0xFF4
 23797                           prodl	equ	0xFF3
 23798                           intcon	equ	0xFF2
 23799                           postinc0	equ	0xFEE
 23800                           wreg	equ	0xFE8
 23801                           indf1	equ	0xFE7
 23802                           postinc1	equ	0xFE6
 23803                           postdec1	equ	0xFE5
 23804                           plusw1	equ	0xFE3
 23805                           fsr1h	equ	0xFE2
 23806                           fsr1l	equ	0xFE1
 23807                           indf2	equ	0xFDF
 23808                           postinc2	equ	0xFDE
 23809                           postdec2	equ	0xFDD
 23810                           plusw2	equ	0xFDB
 23811                           fsr2h	equ	0xFDA
 23812                           fsr2l	equ	0xFD9
 23813                           status	equ	0xFD8
 23814                           
 23815 ;; *************** function _display_prepare *****************
 23816 ;; Defined at:
 23817 ;;		line 278 in file "display.c"
 23818 ;; Parameters:    Size  Location     Type
 23819 ;;		None
 23820 ;; Auto vars:     Size  Location     Type
 23821 ;;  temp           10   94[BANK0 ] unsigned char [10]
 23822 ;;  cntr            1  105[BANK0 ] unsigned char 
 23823 ;;  space           1  104[BANK0 ] unsigned char 
 23824 ;; Return value:  Size  Location     Type
 23825 ;;                  1    wreg      void 
 23826 ;; Registers used:
 23827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23828 ;; Tracked objects:
 23829 ;;		On entry : 0/0
 23830 ;;		On exit  : 0/0
 23831 ;;		Unchanged: 0/0
 23832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23834 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23836 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23837 ;;Total ram usage:       14 bytes
 23838 ;; Hardware stack levels used:    1
 23839 ;; Hardware stack levels required when called:   15
 23840 ;; This function calls:
 23841 ;;		__display_clear
 23842 ;;		__display_itoa
 23843 ;;		__display_itoa_long
 23844 ;;		__display_padded_itoa
 23845 ;;		__display_signed_itoa
 23846 ;;		_memcpy
 23847 ;;		_motor_speed_from_index
 23848 ;;		_strlen
 23849 ;; This function is called by:
 23850 ;;		_main
 23851 ;; This function uses a non-reentrant model
 23852 ;;
 23853                           
 23854                           	psect	text100
 23855  00A330                     __ptext100:
 23856                           	opt stack 0
 23857  00A330                     _display_prepare:
 23858                           	opt stack 15
 23859                           
 23860                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 23861                           
 23862                           ;incstack = 0
 23863  00A330  EF8E  F057         	goto	l1376
 23864  00A334                     
 23865                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 23866  00A334  0E34               	movlw	low _display_content
 23867  00A336  0100               	movlb	0	; () banked
 23868  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 23869  00A33A  0E02               	movlw	high _display_content
 23870  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23871  00A33E  0E6E               	movlw	low _dc_main
 23872  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 23873  00A342  0EA0               	movlw	high _dc_main
 23874  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23875  00A346  0E00               	movlw	0
 23876  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23877  00A34A  0E50               	movlw	80
 23878  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 23879  00A34E  ECDA  F0A1         	call	_memcpy	;wreg free
 23880                           
 23881                           ;display.c: 289: switch(os.displayState)
 23882  00A352  D00F               	goto	l1378
 23883  00A354                     
 23884                           ;display.c: 292: display_content[1][0] = '>';
 23885  00A354  0E3E               	movlw	62
 23886  00A356  0102               	movlb	2	; () banked
 23887  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 23888                           
 23889                           ;display.c: 293: break;
 23890  00A35A  EFBC  F057         	goto	l1385
 23891  00A35E                     
 23892                           ;display.c: 295: display_content[1][9] = '>';
 23893                           
 23894                           ; BSR set to: 2
 23895  00A35E  0E3E               	movlw	62
 23896  00A360  0102               	movlb	2	; () banked
 23897  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 23898                           
 23899                           ;display.c: 296: break;
 23900  00A364  EFBC  F057         	goto	l1385
 23901  00A368                     
 23902                           ;display.c: 301: display_content[2][9] = '>';
 23903                           
 23904                           ; BSR set to: 2
 23905  00A368  0E3E               	movlw	62
 23906  00A36A  0102               	movlb	2	; () banked
 23907  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 23908                           
 23909                           ;display.c: 302: break;
 23910  00A36E  EFBC  F057         	goto	l1385
 23911  00A372                     l1378:
 23912                           
 23913                           ; BSR set to: 2
 23914  00A372  0101               	movlb	1	; () banked
 23915  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23916                           
 23917                           ; Switch size 1, requested type "space"
 23918                           ; Number of cases is 5, Range of values is 1 to 5
 23919                           ; switch strategies available:
 23920                           ; Name         Instructions Cycles
 23921                           ; simple_byte           16     9 (average)
 23922                           ;	Chosen strategy is simple_byte
 23923  00A376  0A01               	xorlw	1	; case 1
 23924  00A378  B4D8               	btfsc	status,2,c
 23925  00A37A  D7EC               	goto	l1379
 23926  00A37C  0A03               	xorlw	3	; case 2
 23927  00A37E  B4D8               	btfsc	status,2,c
 23928  00A380  D7EE               	goto	l1381
 23929  00A382  0A01               	xorlw	1	; case 3
 23930  00A384  B4D8               	btfsc	status,2,c
 23931  00A386  D067               	goto	l1398
 23932  00A388  0A07               	xorlw	7	; case 4
 23933  00A38A  B4D8               	btfsc	status,2,c
 23934  00A38C  D7ED               	goto	l1383
 23935  00A38E  0A01               	xorlw	1	; case 5
 23936  00A390  D072               	goto	L93
 23937  00A392                     
 23938                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 23939                           
 23940                           ; BSR set to: 1
 23941  00A392  0E34               	movlw	low _display_content
 23942  00A394  0100               	movlb	0	; () banked
 23943  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 23944  00A398  0E02               	movlw	high _display_content
 23945  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23946  00A39C  0E1E               	movlw	low _dc_setup1
 23947  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 23948  00A3A0  0EA0               	movlw	high _dc_setup1
 23949  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23950  00A3A4  0E00               	movlw	0
 23951  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23952  00A3A8  0E50               	movlw	80
 23953  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 23954  00A3AC  ECDA  F0A1         	call	_memcpy	;wreg free
 23955                           
 23956                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 23957  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 23958  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 23959  00A3B8  0E02               	movlw	2
 23960  00A3BA  0100               	movlb	0	; () banked
 23961  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 23962  00A3BE  0EBE               	movlw	low display_prepare@temp
 23963  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 23964  00A3C2  0E00               	movlw	high display_prepare@temp
 23965  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 23966  00A3C6  EC4B  F075         	call	__display_itoa	;wreg free
 23967                           
 23968                           ;display.c: 312: if(os.setup_step_size>999)
 23969  00A3CA  0EE8               	movlw	232
 23970  00A3CC  0101               	movlb	1	; () banked
 23971  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 23972  00A3D0  0E03               	movlw	3
 23973  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 23974  00A3D4  A0D8               	btfss	status,0,c
 23975  00A3D6  D002               	goto	l1387
 23976                           
 23977                           ; BSR set to: 1
 23978                           ;display.c: 313: space = 0;
 23979  00A3D8  0E00               	movlw	0
 23980  00A3DA  D001               	goto	L23
 23981  00A3DC                     l1387:
 23982                           
 23983                           ;display.c: 314: else;display.c: 315: space = 1;
 23984                           
 23985                           ; BSR set to: 0
 23986  00A3DC  0E01               	movlw	1
 23987  00A3DE                     L23:
 23988  00A3DE  0100               	movlb	0	; () banked
 23989  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 23993  00A3E2  0E00               	movlw	0
 23994  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 23995  00A3E6  D018               	goto	l1389
 23996  00A3E8                     
 23997                           ; BSR set to: 0
 23998                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 23999                           
 24000                           ; BSR set to: 0
 24001  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24002  00A3EA  0D01               	mullw	1
 24003  00A3EC  0EBE               	movlw	low display_prepare@temp
 24004  00A3EE  24F3               	addwf	prodl,w,c
 24005  00A3F0  6ED9               	movwf	fsr2l,c
 24006  00A3F2  0E00               	movlw	high display_prepare@temp
 24007  00A3F4  20F4               	addwfc	prodh,w,c
 24008  00A3F6  6EDA               	movwf	fsr2h,c
 24009  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24010  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24011  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24012  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 24013  00A402  0E00               	movlw	0
 24014  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24015  00A406  0E70               	movlw	low (_display_content+60)
 24016  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 24017  00A40A  6EE1               	movwf	fsr1l,c
 24018  00A40C  0E02               	movlw	high (_display_content+60)
 24019  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24020  00A410  6EE2               	movwf	fsr1h,c
 24021  00A412  CFDF FFE7          	movff	indf2,indf1
 24022                           
 24023                           ; BSR set to: 0
 24024  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24025  00A418                     l1389:
 24026                           
 24027                           ; BSR set to: 0
 24028                           
 24029                           ; BSR set to: 0
 24030  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24031  00A41A  0D01               	mullw	1
 24032  00A41C  0EBE               	movlw	low display_prepare@temp
 24033  00A41E  24F3               	addwf	prodl,w,c
 24034  00A420  6ED9               	movwf	fsr2l,c
 24035  00A422  0E00               	movlw	high display_prepare@temp
 24036  00A424  20F4               	addwfc	prodh,w,c
 24037  00A426  6EDA               	movwf	fsr2h,c
 24038  00A428  50DF               	movf	indf2,w,c
 24039  00A42A  A4D8               	btfss	status,2,c
 24040  00A42C  D7DD               	goto	l1390
 24041                           
 24042                           ; BSR set to: 2
 24043                           
 24044                           ; BSR set to: 2
 24045                           ;display.c: 328: }
 24046                           
 24047                           ;display.c: 327: break;
 24048                           
 24049                           ;display.c: 326: display_content[3][12] = '>';
 24050                           
 24051                           ; BSR set to: 2
 24052                           
 24053                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 24054                           
 24055                           ;display.c: 324: break;
 24056                           
 24057                           ;display.c: 323: display_content[2][12] = '>';
 24058                           
 24059                           ; BSR set to: 0
 24060                           
 24061                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 24062                           
 24063                           ; BSR set to: 0
 24064                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 24065  00A42E  0101               	movlb	1	; () banked
 24066  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24067                           
 24068                           ; Switch size 1, requested type "space"
 24069                           ; Number of cases is 2, Range of values is 17 to 18
 24070                           ; switch strategies available:
 24071                           ; Name         Instructions Cycles
 24072                           ; simple_byte            7     4 (average)
 24073                           ;	Chosen strategy is simple_byte
 24074  00A432  0A11               	xorlw	17	; case 17
 24075  00A434  D08E               	goto	L29
 24076  00A436                     
 24077                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 24078                           
 24079                           ; BSR set to: 1
 24080  00A436  0E34               	movlw	low _display_content
 24081  00A438  0100               	movlb	0	; () banked
 24082  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 24083  00A43C  0E02               	movlw	high _display_content
 24084  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24085  00A440  0ECE               	movlw	low _dc_setup2
 24086  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 24087  00A444  0E9F               	movlw	high _dc_setup2
 24088  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24089  00A448  0E00               	movlw	0
 24090  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24091  00A44C  0E50               	movlw	80
 24092  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 24093  00A450  ECDA  F0A1         	call	_memcpy	;wreg free
 24094                           
 24095                           ;display.c: 333: switch(os.displayState)
 24096  00A454  D00A               	goto	l1397
 24097  00A456                     l1398:
 24098                           
 24099                           ;display.c: 336: display_content[2][0] = '>';
 24100  00A456  0E3E               	movlw	62
 24101  00A458  0102               	movlb	2	; () banked
 24102  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 24103                           
 24104                           ;display.c: 337: break;
 24105  00A45C  EFBC  F057         	goto	l1385
 24106  00A460                     l1400:
 24107                           
 24108                           ;display.c: 339: display_content[3][0] = '>';
 24109                           
 24110                           ; BSR set to: 2
 24111  00A460  0E3E               	movlw	62
 24112  00A462  0102               	movlb	2	; () banked
 24113  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 24114                           
 24115                           ; BSR set to: 2
 24116                           ;display.c: 341: }
 24117                           
 24118                           ;display.c: 340: break;
 24119  00A466  EFBC  F057         	goto	l1385
 24120  00A46A                     l1397:
 24121                           
 24122                           ; BSR set to: 2
 24123  00A46A  0101               	movlb	1	; () banked
 24124  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24125                           
 24126                           ; Switch size 1, requested type "space"
 24127                           ; Number of cases is 2, Range of values is 33 to 34
 24128                           ; switch strategies available:
 24129                           ; Name         Instructions Cycles
 24130                           ; simple_byte            7     4 (average)
 24131                           ;	Chosen strategy is simple_byte
 24132  00A46E  0A21               	xorlw	33	; case 33
 24133  00A470  B4D8               	btfsc	status,2,c
 24134  00A472  D7F1               	goto	l1398
 24135  00A474  0A03               	xorlw	3	; case 34
 24136  00A476                     L93:
 24137  00A476  B4D8               	btfsc	status,2,c
 24138  00A478  D7F3               	goto	l1400
 24139                           
 24140                           ; BSR set to: 1
 24141                           ;display.c: 342: break;
 24142  00A47A  EFBC  F057         	goto	l1385
 24143  00A47E                     
 24144                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 24145                           
 24146                           ; BSR set to: 1
 24147  00A47E  0E34               	movlw	low _display_content
 24148  00A480  0100               	movlb	0	; () banked
 24149  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 24150  00A484  0E02               	movlw	high _display_content
 24151  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24152  00A488  0E7E               	movlw	low _dc_divide1
 24153  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 24154  00A48C  0E9F               	movlw	high _dc_divide1
 24155  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24156  00A490  0E00               	movlw	0
 24157  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24158  00A494  0E50               	movlw	80
 24159  00A496  6F64               	movwf	memcpy@n& (0+255),b
 24160  00A498  ECDA  F0A1         	call	_memcpy	;wreg free
 24161                           
 24162                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 24163  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 24164  00A4A0  0100               	movlb	0	; () banked
 24165  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 24166  00A4A4  0E03               	movlw	3
 24167  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24168  00A4A8  0EBE               	movlw	low display_prepare@temp
 24169  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24170  00A4AC  0E00               	movlw	high display_prepare@temp
 24171  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24172  00A4B0  EC39  F08E         	call	__display_padded_itoa	;wreg free
 24173                           
 24174                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 24175  00A4B4  0E00               	movlw	0
 24176  00A4B6  0100               	movlb	0	; () banked
 24177  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24178  00A4BA                     l18077:
 24179                           
 24180                           ; BSR set to: 0
 24181  00A4BA  0E02               	movlw	2
 24182  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 24183  00A4BE  D001               	goto	l1402
 24184  00A4C0  D014               	goto	u18260
 24185  00A4C2                     l1402:
 24186                           
 24187                           ; BSR set to: 0
 24188                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 24189                           
 24190                           ; BSR set to: 0
 24191  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24192  00A4C4  0D01               	mullw	1
 24193  00A4C6  0EBE               	movlw	low display_prepare@temp
 24194  00A4C8  24F3               	addwf	prodl,w,c
 24195  00A4CA  6ED9               	movwf	fsr2l,c
 24196  00A4CC  0E00               	movlw	high display_prepare@temp
 24197  00A4CE  20F4               	addwfc	prodh,w,c
 24198  00A4D0  6EDA               	movwf	fsr2h,c
 24199  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24200  00A4D4  0D01               	mullw	1
 24201  00A4D6  0E5C               	movlw	low (_display_content+40)
 24202  00A4D8  24F3               	addwf	prodl,w,c
 24203  00A4DA  6EE1               	movwf	fsr1l,c
 24204  00A4DC  0E02               	movlw	high (_display_content+40)
 24205  00A4DE  20F4               	addwfc	prodh,w,c
 24206  00A4E0  6EE2               	movwf	fsr1h,c
 24207  00A4E2  CFDF FFE7          	movff	indf2,indf1
 24208                           
 24209                           ; BSR set to: 0
 24210  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24211  00A4E8  D7E8               	goto	l18077
 24212  00A4EA                     u18260:
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 24216                           
 24217                           ; BSR set to: 0
 24218  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 24219  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 24220  00A4F2  0E04               	movlw	4
 24221  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24222  00A4F6  0EBE               	movlw	low display_prepare@temp
 24223  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24224  00A4FA  0E00               	movlw	high display_prepare@temp
 24225  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24226  00A4FE  EC39  F08E         	call	__display_padded_itoa	;wreg free
 24227                           
 24228                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 24229  00A502  0E00               	movlw	0
 24230  00A504  0100               	movlb	0	; () banked
 24231  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24232  00A508                     l18091:
 24233                           
 24234                           ; BSR set to: 0
 24235  00A508  0E03               	movlw	3
 24236  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 24237  00A50C  D001               	goto	l1404
 24238  00A50E  D01E               	goto	l1406
 24239  00A510                     l1404:
 24240                           
 24241                           ; BSR set to: 0
 24242                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 24243                           
 24244                           ; BSR set to: 0
 24245  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24246  00A512  0D01               	mullw	1
 24247  00A514  0EBE               	movlw	low display_prepare@temp
 24248  00A516  24F3               	addwf	prodl,w,c
 24249  00A518  6ED9               	movwf	fsr2l,c
 24250  00A51A  0E00               	movlw	high display_prepare@temp
 24251  00A51C  20F4               	addwfc	prodh,w,c
 24252  00A51E  6EDA               	movwf	fsr2h,c
 24253  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24254  00A522  0D01               	mullw	1
 24255  00A524  0E70               	movlw	low (_display_content+60)
 24256  00A526  24F3               	addwf	prodl,w,c
 24257  00A528  6EE1               	movwf	fsr1l,c
 24258  00A52A  0E02               	movlw	high (_display_content+60)
 24259  00A52C  20F4               	addwfc	prodh,w,c
 24260  00A52E  6EE2               	movwf	fsr1h,c
 24261  00A530  CFDF FFE7          	movff	indf2,indf1
 24262                           
 24263                           ; BSR set to: 0
 24264  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24265  00A536  D7E8               	goto	l18091
 24266  00A538                     
 24267                           ;display.c: 361: display_content[2][12] = '>';
 24268                           
 24269                           ; BSR set to: 0
 24270  00A538  0E3E               	movlw	62
 24271  00A53A  0102               	movlb	2	; () banked
 24272  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 24273                           
 24274                           ;display.c: 362: break;
 24275  00A53E  EFBC  F057         	goto	l1385
 24276  00A542                     
 24277                           ;display.c: 364: display_content[3][12] = '>';
 24278                           
 24279                           ; BSR set to: 2
 24280  00A542  0E3E               	movlw	62
 24281  00A544  0102               	movlb	2	; () banked
 24282  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 24283                           
 24284                           ; BSR set to: 2
 24285                           ;display.c: 366: }
 24286                           
 24287                           ;display.c: 365: break;
 24288  00A548  EFBC  F057         	goto	l1385
 24289  00A54C                     l1406:
 24290                           
 24291                           ; BSR set to: 2
 24292  00A54C  0101               	movlb	1	; () banked
 24293  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24294                           
 24295                           ; Switch size 1, requested type "space"
 24296                           ; Number of cases is 2, Range of values is 49 to 50
 24297                           ; switch strategies available:
 24298                           ; Name         Instructions Cycles
 24299                           ; simple_byte            7     4 (average)
 24300                           ;	Chosen strategy is simple_byte
 24301  00A550  0A31               	xorlw	49	; case 49
 24302  00A552                     L29:
 24303  00A552  B4D8               	btfsc	status,2,c
 24304  00A554  D7F1               	goto	l1407
 24305  00A556  0A03               	xorlw	3	; case 50
 24306  00A558  B4D8               	btfsc	status,2,c
 24307  00A55A  D7F3               	goto	l1409
 24308                           
 24309                           ; BSR set to: 1
 24310                           ;display.c: 367: break;
 24311  00A55C  EFBC  F057         	goto	l1385
 24312  00A560                     
 24313                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 24314                           
 24315                           ; BSR set to: 1
 24316  00A560  0E34               	movlw	low _display_content
 24317  00A562  0100               	movlb	0	; () banked
 24318  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 24319  00A566  0E02               	movlw	high _display_content
 24320  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24321  00A56A  0E2E               	movlw	low _dc_divide2
 24322  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 24323  00A56E  0E9F               	movlw	high _dc_divide2
 24324  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24325  00A572  0E00               	movlw	0
 24326  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24327  00A576  0E50               	movlw	80
 24328  00A578  6F64               	movwf	memcpy@n& (0+255),b
 24329  00A57A  ECDA  F0A1         	call	_memcpy	;wreg free
 24330                           
 24331                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 24332  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 24333  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 24334  00A586  0E00               	movlw	0
 24335  00A588  0100               	movlb	0	; () banked
 24336  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24337  00A58C  0EBE               	movlw	low display_prepare@temp
 24338  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24339  00A590  0E00               	movlw	high display_prepare@temp
 24340  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24341  00A594  EC39  F08E         	call	__display_padded_itoa	;wreg free
 24342                           
 24343                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 24344  00A598  0E00               	movlw	0
 24345  00A59A  0100               	movlb	0	; () banked
 24346  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24347  00A59E  D018               	goto	l1411
 24348  00A5A0                     
 24349                           ; BSR set to: 0
 24350                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 24351                           
 24352                           ; BSR set to: 0
 24353  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24354  00A5A2  0D01               	mullw	1
 24355  00A5A4  0EBE               	movlw	low display_prepare@temp
 24356  00A5A6  24F3               	addwf	prodl,w,c
 24357  00A5A8  6ED9               	movwf	fsr2l,c
 24358  00A5AA  0E00               	movlw	high display_prepare@temp
 24359  00A5AC  20F4               	addwfc	prodh,w,c
 24360  00A5AE  6EDA               	movwf	fsr2h,c
 24361  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24362  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 24363  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24364  00A5B6  0E08               	movlw	8
 24365  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 24366  00A5BA  0E00               	movlw	0
 24367  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24368  00A5BE  0E34               	movlw	low _display_content
 24369  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 24370  00A5C2  6EE1               	movwf	fsr1l,c
 24371  00A5C4  0E02               	movlw	high _display_content
 24372  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24373  00A5C8  6EE2               	movwf	fsr1h,c
 24374  00A5CA  CFDF FFE7          	movff	indf2,indf1
 24375                           
 24376                           ; BSR set to: 0
 24377  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24378  00A5D0                     l1411:
 24379                           
 24380                           ; BSR set to: 0
 24381                           
 24382                           ; BSR set to: 0
 24383  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24384  00A5D2  0D01               	mullw	1
 24385  00A5D4  0EBE               	movlw	low display_prepare@temp
 24386  00A5D6  24F3               	addwf	prodl,w,c
 24387  00A5D8  6ED9               	movwf	fsr2l,c
 24388  00A5DA  0E00               	movlw	high display_prepare@temp
 24389  00A5DC  20F4               	addwfc	prodh,w,c
 24390  00A5DE  6EDA               	movwf	fsr2h,c
 24391  00A5E0  50DF               	movf	indf2,w,c
 24392  00A5E2  A4D8               	btfss	status,2,c
 24393  00A5E4  D7DD               	goto	l1412
 24394                           
 24395                           ; BSR set to: 0
 24396                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 24397                           
 24398                           ; BSR set to: 0
 24399  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24400  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 24401  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24402  00A5EC  0E08               	movlw	8
 24403  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 24404  00A5F0  0E00               	movlw	0
 24405  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24406  00A5F4  0E34               	movlw	low _display_content
 24407  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 24408  00A5F8  6ED9               	movwf	fsr2l,c
 24409  00A5FA  0E02               	movlw	high _display_content
 24410  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24411  00A5FE  6EDA               	movwf	fsr2h,c
 24412  00A600  0E2C               	movlw	44
 24413  00A602  6EDF               	movwf	indf2,c
 24414                           
 24415                           ; BSR set to: 0
 24416                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 24417  00A604  0101               	movlb	1	; () banked
 24418  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 24419  00A608  A4D8               	btfss	status,2,c
 24420  00A60A  D024               	goto	l1414
 24421                           
 24422                           ; BSR set to: 1
 24423                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 24424  00A60C  0100               	movlb	0	; () banked
 24425  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24426  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 24427  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24428  00A614  0E0A               	movlw	10
 24429  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 24430  00A618  0E00               	movlw	0
 24431  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24432  00A61C  0E34               	movlw	low _display_content
 24433  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 24434  00A620  6ED9               	movwf	fsr2l,c
 24435  00A622  0E02               	movlw	high _display_content
 24436  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24437  00A626  6EDA               	movwf	fsr2h,c
 24438  00A628  0E43               	movlw	67
 24439  00A62A  6EDF               	movwf	indf2,c
 24440                           
 24441                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 24442  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24443  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 24444  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24445  00A632  0E0B               	movlw	11
 24446  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 24447  00A636  0E00               	movlw	0
 24448  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24449  00A63A  0E34               	movlw	low _display_content
 24450  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 24451  00A63E  6ED9               	movwf	fsr2l,c
 24452  00A640  0E02               	movlw	high _display_content
 24453  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24454  00A644  6EDA               	movwf	fsr2h,c
 24455  00A646  0E43               	movlw	67
 24456  00A648  6EDF               	movwf	indf2,c
 24457                           
 24458                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 24459  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24460  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 24461  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24462  00A650  0E0C               	movlw	12
 24463  00A652  D014               	goto	L30
 24464  00A654                     l1414:
 24465                           
 24466                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 24467                           
 24468                           ; BSR set to: 0
 24469  00A654  0100               	movlb	0	; () banked
 24470  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24471  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 24472  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24473  00A65C  0E0A               	movlw	10
 24474  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 24475  00A660  0E00               	movlw	0
 24476  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24477  00A664  0E34               	movlw	low _display_content
 24478  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 24479  00A668  6ED9               	movwf	fsr2l,c
 24480  00A66A  0E02               	movlw	high _display_content
 24481  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24482  00A66E  6EDA               	movwf	fsr2h,c
 24483  00A670  0E43               	movlw	67
 24484  00A672  6EDF               	movwf	indf2,c
 24485                           
 24486                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 24487  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24488  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 24489  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24490  00A67A  0E0B               	movlw	11
 24491  00A67C                     L30:
 24492  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 24493  00A67E  0E00               	movlw	0
 24494  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24495  00A682  0E34               	movlw	low _display_content
 24496  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 24497  00A686  6ED9               	movwf	fsr2l,c
 24498  00A688  0E02               	movlw	high _display_content
 24499  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24500  00A68C  6EDA               	movwf	fsr2h,c
 24501  00A68E  0E57               	movlw	87
 24502  00A690  6EDF               	movwf	indf2,c
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 24506                           
 24507                           ; BSR set to: 0
 24508  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 24509  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 24510  00A69A  0E00               	movlw	0
 24511  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24512  00A69E  0EBE               	movlw	low display_prepare@temp
 24513  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24514  00A6A2  0E00               	movlw	high display_prepare@temp
 24515  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24516  00A6A6  EC39  F08E         	call	__display_padded_itoa	;wreg free
 24517                           
 24518                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 24519  00A6AA  0E00               	movlw	0
 24520  00A6AC  0100               	movlb	0	; () banked
 24521  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24522  00A6B0  D018               	goto	l1416
 24523  00A6B2                     
 24524                           ; BSR set to: 0
 24525                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 24526                           
 24527                           ; BSR set to: 0
 24528  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24529  00A6B4  0D01               	mullw	1
 24530  00A6B6  0EBE               	movlw	low display_prepare@temp
 24531  00A6B8  24F3               	addwf	prodl,w,c
 24532  00A6BA  6ED9               	movwf	fsr2l,c
 24533  00A6BC  0E00               	movlw	high display_prepare@temp
 24534  00A6BE  20F4               	addwfc	prodh,w,c
 24535  00A6C0  6EDA               	movwf	fsr2h,c
 24536  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24537  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 24538  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24539  00A6C8  0E05               	movlw	5
 24540  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 24541  00A6CC  0E00               	movlw	0
 24542  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24543  00A6D0  0E48               	movlw	low (_display_content+20)
 24544  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 24545  00A6D4  6EE1               	movwf	fsr1l,c
 24546  00A6D6  0E02               	movlw	high (_display_content+20)
 24547  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24548  00A6DA  6EE2               	movwf	fsr1h,c
 24549  00A6DC  CFDF FFE7          	movff	indf2,indf1
 24550                           
 24551                           ; BSR set to: 0
 24552  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24553  00A6E2                     l1416:
 24554                           
 24555                           ; BSR set to: 0
 24556                           
 24557                           ; BSR set to: 0
 24558  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24559  00A6E4  0D01               	mullw	1
 24560  00A6E6  0EBE               	movlw	low display_prepare@temp
 24561  00A6E8  24F3               	addwf	prodl,w,c
 24562  00A6EA  6ED9               	movwf	fsr2l,c
 24563  00A6EC  0E00               	movlw	high display_prepare@temp
 24564  00A6EE  20F4               	addwfc	prodh,w,c
 24565  00A6F0  6EDA               	movwf	fsr2h,c
 24566  00A6F2  50DF               	movf	indf2,w,c
 24567  00A6F4  A4D8               	btfss	status,2,c
 24568  00A6F6  D7DD               	goto	l1417
 24569                           
 24570                           ; BSR set to: 0
 24571                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 24572                           
 24573                           ; BSR set to: 0
 24574  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24575  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 24576  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24577  00A6FE  0E06               	movlw	6
 24578  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 24579  00A702  0E00               	movlw	0
 24580  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24581  00A706  0E48               	movlw	low (_display_content+20)
 24582  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 24583  00A70A  6ED9               	movwf	fsr2l,c
 24584  00A70C  0E02               	movlw	high (_display_content+20)
 24585  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24586  00A710  6EDA               	movwf	fsr2h,c
 24587  00A712  0E28               	movlw	40
 24588  00A714  6EDF               	movwf	indf2,c
 24589                           
 24590                           ; BSR set to: 0
 24591                           ;display.c: 398: space = cntr + 7;
 24592  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24593  00A718  0F07               	addlw	7
 24594  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 24598  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 24599  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 24600  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 24601  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 24602  00A728  0E02               	movlw	2
 24603  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 24604  00A72C  0EBE               	movlw	low display_prepare@temp
 24605  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 24606  00A730  0E00               	movlw	high display_prepare@temp
 24607  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 24608  00A734  ECE9  F084         	call	__display_itoa_long	;wreg free
 24609                           
 24610                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 24611  00A738  0E00               	movlw	0
 24612  00A73A  0100               	movlb	0	; () banked
 24613  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24614  00A73E  D018               	goto	l1419
 24615  00A740                     
 24616                           ; BSR set to: 0
 24617                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 24618                           
 24619                           ; BSR set to: 0
 24620  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24621  00A742  0D01               	mullw	1
 24622  00A744  0EBE               	movlw	low display_prepare@temp
 24623  00A746  24F3               	addwf	prodl,w,c
 24624  00A748  6ED9               	movwf	fsr2l,c
 24625  00A74A  0E00               	movlw	high display_prepare@temp
 24626  00A74C  20F4               	addwfc	prodh,w,c
 24627  00A74E  6EDA               	movwf	fsr2h,c
 24628  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 24629  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 24630  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24631  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 24632  00A75A  0E00               	movlw	0
 24633  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24634  00A75E  0E48               	movlw	low (_display_content+20)
 24635  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 24636  00A762  6EE1               	movwf	fsr1l,c
 24637  00A764  0E02               	movlw	high (_display_content+20)
 24638  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24639  00A768  6EE2               	movwf	fsr1h,c
 24640  00A76A  CFDF FFE7          	movff	indf2,indf1
 24641                           
 24642                           ; BSR set to: 0
 24643  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24644  00A770                     l1419:
 24645                           
 24646                           ; BSR set to: 0
 24647                           
 24648                           ; BSR set to: 0
 24649  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24650  00A772  0D01               	mullw	1
 24651  00A774  0EBE               	movlw	low display_prepare@temp
 24652  00A776  24F3               	addwf	prodl,w,c
 24653  00A778  6ED9               	movwf	fsr2l,c
 24654  00A77A  0E00               	movlw	high display_prepare@temp
 24655  00A77C  20F4               	addwfc	prodh,w,c
 24656  00A77E  6EDA               	movwf	fsr2h,c
 24657  00A780  50DF               	movf	indf2,w,c
 24658  00A782  A4D8               	btfss	status,2,c
 24659  00A784  D7DD               	goto	l1420
 24660                           
 24661                           ; BSR set to: 0
 24662                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 24663                           
 24664                           ; BSR set to: 0
 24665  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 24666  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 24667  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24668  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 24669  00A790  0E00               	movlw	0
 24670  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24671  00A794  0E48               	movlw	low (_display_content+20)
 24672  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 24673  00A798  6ED9               	movwf	fsr2l,c
 24674  00A79A  0E02               	movlw	high (_display_content+20)
 24675  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24676  00A79E  6EDA               	movwf	fsr2h,c
 24677  00A7A0  0E01               	movlw	1
 24678  00A7A2  6EDF               	movwf	indf2,c
 24679                           
 24680                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 24681  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 24682  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 24683  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24684  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 24685  00A7AE  0E00               	movlw	0
 24686  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24687  00A7B2  0E01               	movlw	1
 24688  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 24689  00A7B6  0E00               	movlw	0
 24690  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24691  00A7BA  0E48               	movlw	low (_display_content+20)
 24692  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 24693  00A7BE  6ED9               	movwf	fsr2l,c
 24694  00A7C0  0E02               	movlw	high (_display_content+20)
 24695  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24696  00A7C4  6EDA               	movwf	fsr2h,c
 24697  00A7C6  0E29               	movlw	41
 24698  00A7C8  6EDF               	movwf	indf2,c
 24699                           
 24700                           ; BSR set to: 0
 24701                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 24702  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 24703  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 24704  00A7D2  0EBE               	movlw	low display_prepare@temp
 24705  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 24706  00A7D6  0E00               	movlw	high display_prepare@temp
 24707  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 24708  00A7DA  EC46  F0A7         	call	__display_signed_itoa	;wreg free
 24709                           
 24710                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 24711  00A7DE  0E00               	movlw	0
 24712  00A7E0  0100               	movlb	0	; () banked
 24713  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24714  00A7E4  D018               	goto	l1422
 24715  00A7E6                     
 24716                           ; BSR set to: 0
 24717                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 24718                           
 24719                           ; BSR set to: 0
 24720  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24721  00A7E8  0D01               	mullw	1
 24722  00A7EA  0EBE               	movlw	low display_prepare@temp
 24723  00A7EC  24F3               	addwf	prodl,w,c
 24724  00A7EE  6ED9               	movwf	fsr2l,c
 24725  00A7F0  0E00               	movlw	high display_prepare@temp
 24726  00A7F2  20F4               	addwfc	prodh,w,c
 24727  00A7F4  6EDA               	movwf	fsr2h,c
 24728  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24729  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 24730  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24731  00A7FC  0E0B               	movlw	11
 24732  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 24733  00A800  0E00               	movlw	0
 24734  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24735  00A804  0E5C               	movlw	low (_display_content+40)
 24736  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 24737  00A808  6EE1               	movwf	fsr1l,c
 24738  00A80A  0E02               	movlw	high (_display_content+40)
 24739  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24740  00A80E  6EE2               	movwf	fsr1h,c
 24741  00A810  CFDF FFE7          	movff	indf2,indf1
 24742                           
 24743                           ; BSR set to: 0
 24744  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24745  00A816                     l1422:
 24746                           
 24747                           ; BSR set to: 0
 24748                           
 24749                           ; BSR set to: 0
 24750  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24751  00A818  0D01               	mullw	1
 24752  00A81A  0EBE               	movlw	low display_prepare@temp
 24753  00A81C  24F3               	addwf	prodl,w,c
 24754  00A81E  6ED9               	movwf	fsr2l,c
 24755  00A820  0E00               	movlw	high display_prepare@temp
 24756  00A822  20F4               	addwfc	prodh,w,c
 24757  00A824  6EDA               	movwf	fsr2h,c
 24758  00A826  50DF               	movf	indf2,w,c
 24759  00A828  B4D8               	btfsc	status,2,c
 24760  00A82A  D3A6               	goto	l1385
 24761  00A82C  D7DC               	goto	l1423
 24762  00A82E                     
 24763                           ; BSR set to: 0
 24764                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 24765                           
 24766                           ; BSR set to: 0
 24767  00A82E  0E34               	movlw	low _display_content
 24768  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 24769  00A832  0E02               	movlw	high _display_content
 24770  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24771  00A836  0EDE               	movlw	low _dc_arc1
 24772  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 24773  00A83A  0E9E               	movlw	high _dc_arc1
 24774  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24775  00A83E  0E00               	movlw	0
 24776  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24777  00A842  0E50               	movlw	80
 24778  00A844  6F64               	movwf	memcpy@n& (0+255),b
 24779  00A846  ECDA  F0A1         	call	_memcpy	;wreg free
 24780                           
 24781                           ;display.c: 416: switch(os.displayState)
 24782  00A84A  D008               	goto	l1426
 24783  00A84C                     
 24784                           ;display.c: 419: display_content[2][12] = '>';
 24785  00A84C  0E3E               	movlw	62
 24786  00A84E  0102               	movlb	2	; () banked
 24787  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 24788                           
 24789                           ;display.c: 420: break;
 24790  00A852  D00C               	goto	l1428
 24791  00A854                     
 24792                           ;display.c: 422: display_content[3][12] = '>';
 24793                           
 24794                           ; BSR set to: 2
 24795  00A854  0E3E               	movlw	62
 24796  00A856  0102               	movlb	2	; () banked
 24797  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 24798                           
 24799                           ; BSR set to: 2
 24800                           ;display.c: 424: }
 24801                           
 24802                           ;display.c: 423: break;
 24803  00A85A  D008               	goto	l1428
 24804  00A85C                     l1426:
 24805                           
 24806                           ; BSR set to: 2
 24807  00A85C  0101               	movlb	1	; () banked
 24808  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24809                           
 24810                           ; Switch size 1, requested type "space"
 24811                           ; Number of cases is 2, Range of values is 81 to 82
 24812                           ; switch strategies available:
 24813                           ; Name         Instructions Cycles
 24814                           ; simple_byte            7     4 (average)
 24815                           ;	Chosen strategy is simple_byte
 24816  00A860  0A51               	xorlw	81	; case 81
 24817  00A862  B4D8               	btfsc	status,2,c
 24818  00A864  D7F3               	goto	l1427
 24819  00A866  0A03               	xorlw	3	; case 82
 24820  00A868  B4D8               	btfsc	status,2,c
 24821  00A86A  D7F4               	goto	l1429
 24822  00A86C                     l1428:
 24823                           
 24824                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 24825                           
 24826                           ; BSR set to: 1
 24827  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 24828  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 24829  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 24830  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 24831  00A87C  0E02               	movlw	2
 24832  00A87E  0100               	movlb	0	; () banked
 24833  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 24834  00A882  0EBE               	movlw	low display_prepare@temp
 24835  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 24836  00A886  0E00               	movlw	high display_prepare@temp
 24837  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 24838  00A88A  ECE9  F084         	call	__display_itoa_long	;wreg free
 24839                           
 24840                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 24841  00A88E  0E00               	movlw	0
 24842  00A890  0100               	movlb	0	; () banked
 24843  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24844  00A894  D018               	goto	l1430
 24845  00A896                     
 24846                           ; BSR set to: 0
 24847                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 24848                           
 24849                           ; BSR set to: 0
 24850  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24851  00A898  0D01               	mullw	1
 24852  00A89A  0EBE               	movlw	low display_prepare@temp
 24853  00A89C  24F3               	addwf	prodl,w,c
 24854  00A89E  6ED9               	movwf	fsr2l,c
 24855  00A8A0  0E00               	movlw	high display_prepare@temp
 24856  00A8A2  20F4               	addwfc	prodh,w,c
 24857  00A8A4  6EDA               	movwf	fsr2h,c
 24858  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24859  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 24860  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24861  00A8AC  0E0A               	movlw	10
 24862  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 24863  00A8B0  0E00               	movlw	0
 24864  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24865  00A8B4  0E48               	movlw	low (_display_content+20)
 24866  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 24867  00A8B8  6EE1               	movwf	fsr1l,c
 24868  00A8BA  0E02               	movlw	high (_display_content+20)
 24869  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24870  00A8BE  6EE2               	movwf	fsr1h,c
 24871  00A8C0  CFDF FFE7          	movff	indf2,indf1
 24872                           
 24873                           ; BSR set to: 0
 24874  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24875  00A8C6                     l1430:
 24876                           
 24877                           ; BSR set to: 0
 24878                           
 24879                           ; BSR set to: 0
 24880  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24881  00A8C8  0D01               	mullw	1
 24882  00A8CA  0EBE               	movlw	low display_prepare@temp
 24883  00A8CC  24F3               	addwf	prodl,w,c
 24884  00A8CE  6ED9               	movwf	fsr2l,c
 24885  00A8D0  0E00               	movlw	high display_prepare@temp
 24886  00A8D2  20F4               	addwfc	prodh,w,c
 24887  00A8D4  6EDA               	movwf	fsr2h,c
 24888  00A8D6  50DF               	movf	indf2,w,c
 24889  00A8D8  A4D8               	btfss	status,2,c
 24890  00A8DA  D7DD               	goto	l1431
 24891                           
 24892                           ; BSR set to: 0
 24893                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 24894                           
 24895                           ; BSR set to: 0
 24896  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24897  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 24898  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24899  00A8E2  0E0A               	movlw	10
 24900  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 24901  00A8E6  0E00               	movlw	0
 24902  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24903  00A8EA  0E48               	movlw	low (_display_content+20)
 24904  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 24905  00A8EE  6ED9               	movwf	fsr2l,c
 24906  00A8F0  0E02               	movlw	high (_display_content+20)
 24907  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24908  00A8F4  6EDA               	movwf	fsr2h,c
 24909  00A8F6  0E01               	movlw	1
 24910  00A8F8  6EDF               	movwf	indf2,c
 24911                           
 24912                           ; BSR set to: 0
 24913                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 24914  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 24915  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 24916  00A902  0E02               	movlw	2
 24917  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24918  00A906  0EBE               	movlw	low display_prepare@temp
 24919  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 24920  00A90A  0E00               	movlw	high display_prepare@temp
 24921  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24922  00A90E  EC4B  F075         	call	__display_itoa	;wreg free
 24923                           
 24924                           ;display.c: 436: if(os.arc_step_size>999)
 24925  00A912  0EE8               	movlw	232
 24926  00A914  0101               	movlb	1	; () banked
 24927  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 24928  00A918  0E03               	movlw	3
 24929  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 24930  00A91C  A0D8               	btfss	status,0,c
 24931  00A91E  D002               	goto	l1433
 24932                           
 24933                           ; BSR set to: 1
 24934                           ;display.c: 437: space = 0;
 24935  00A920  0E00               	movlw	0
 24936  00A922  D001               	goto	L24
 24937  00A924                     l1433:
 24938                           
 24939                           ;display.c: 438: else;display.c: 439: space = 1;
 24940                           
 24941                           ; BSR set to: 0
 24942  00A924  0E01               	movlw	1
 24943  00A926                     L24:
 24944  00A926  0100               	movlb	0	; () banked
 24945  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 24946                           
 24947                           ; BSR set to: 0
 24948                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 24949  00A92A  0E00               	movlw	0
 24950  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24951  00A92E  D018               	goto	l1435
 24952  00A930                     
 24953                           ; BSR set to: 0
 24954                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 24955                           
 24956                           ; BSR set to: 0
 24957  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24958  00A932  0D01               	mullw	1
 24959  00A934  0EBE               	movlw	low display_prepare@temp
 24960  00A936  24F3               	addwf	prodl,w,c
 24961  00A938  6ED9               	movwf	fsr2l,c
 24962  00A93A  0E00               	movlw	high display_prepare@temp
 24963  00A93C  20F4               	addwfc	prodh,w,c
 24964  00A93E  6EDA               	movwf	fsr2h,c
 24965  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24966  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24967  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24968  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 24969  00A94A  0E00               	movlw	0
 24970  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24971  00A94E  0E70               	movlw	low (_display_content+60)
 24972  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 24973  00A952  6EE1               	movwf	fsr1l,c
 24974  00A954  0E02               	movlw	high (_display_content+60)
 24975  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24976  00A958  6EE2               	movwf	fsr1h,c
 24977  00A95A  CFDF FFE7          	movff	indf2,indf1
 24978                           
 24979                           ; BSR set to: 0
 24980  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24981  00A960                     l1435:
 24982                           
 24983                           ; BSR set to: 0
 24984                           
 24985                           ; BSR set to: 0
 24986  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24987  00A962  0D01               	mullw	1
 24988  00A964  0EBE               	movlw	low display_prepare@temp
 24989  00A966  24F3               	addwf	prodl,w,c
 24990  00A968  6ED9               	movwf	fsr2l,c
 24991  00A96A  0E00               	movlw	high display_prepare@temp
 24992  00A96C  20F4               	addwfc	prodh,w,c
 24993  00A96E  6EDA               	movwf	fsr2h,c
 24994  00A970  50DF               	movf	indf2,w,c
 24995  00A972  A4D8               	btfss	status,2,c
 24996  00A974  D7DD               	goto	l1436
 24997                           
 24998                           ; BSR set to: 0
 24999                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 25000                           
 25001                           ; BSR set to: 0
 25002  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25003  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25004  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25005  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25006  00A980  0E00               	movlw	0
 25007  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25008  00A984  0E70               	movlw	low (_display_content+60)
 25009  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 25010  00A988  6ED9               	movwf	fsr2l,c
 25011  00A98A  0E02               	movlw	high (_display_content+60)
 25012  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25013  00A98E  6EDA               	movwf	fsr2h,c
 25014  00A990  0E01               	movlw	1
 25015  00A992  D25B               	goto	L27
 25016  00A994                     
 25017                           ; BSR set to: 0
 25018                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 25019                           
 25020                           ; BSR set to: 0
 25021  00A994  0E34               	movlw	low _display_content
 25022  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 25023  00A998  0E02               	movlw	high _display_content
 25024  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25025  00A99C  0E8E               	movlw	low _dc_arc2
 25026  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 25027  00A9A0  0E9E               	movlw	high _dc_arc2
 25028  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25029  00A9A4  0E00               	movlw	0
 25030  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25031  00A9A8  0E50               	movlw	80
 25032  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 25033  00A9AC  ECDA  F0A1         	call	_memcpy	;wreg free
 25034                           
 25035                           ;display.c: 450: switch(os.displayState)
 25036  00A9B0  D025               	goto	l1439
 25037  00A9B2                     
 25038                           ;display.c: 453: display_content[2][6] = 'W';
 25039  00A9B2  0E57               	movlw	87
 25040  00A9B4  0102               	movlb	2	; () banked
 25041  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 25042                           
 25043                           ;display.c: 454: display_content[2][7] = ' ';
 25044  00A9B8  0E20               	movlw	32
 25045  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 25046                           
 25047                           ;display.c: 455: break;
 25048  00A9BC  D027               	goto	l1441
 25049  00A9BE                     
 25050                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 25051                           
 25052                           ; BSR set to: 2
 25053  00A9BE  0E5C               	movlw	low (_display_content+40)
 25054  00A9C0  0100               	movlb	0	; () banked
 25055  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 25056  00A9C4  0E02               	movlw	high (_display_content+40)
 25057  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25058  00A9C8  0E14               	movlw	low STR_1
 25059  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 25060  00A9CC  0EA3               	movlw	high STR_1
 25061  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25062  00A9D0  0E00               	movlw	0
 25063  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25064  00A9D4  0E08               	movlw	8
 25065  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 25066  00A9D8  ECDA  F0A1         	call	_memcpy	;wreg free
 25067                           
 25068                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 25069  00A9DC  0E70               	movlw	low (_display_content+60)
 25070  00A9DE  0100               	movlb	0	; () banked
 25071  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 25072  00A9E2  0E02               	movlw	high (_display_content+60)
 25073  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25074  00A9E6  0E1D               	movlw	low STR_2
 25075  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 25076  00A9EA  0EA3               	movlw	high STR_2
 25077  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25078  00A9EE  0E00               	movlw	0
 25079  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25080  00A9F2  0E06               	movlw	6
 25081  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 25082  00A9F6  ECDA  F0A1         	call	_memcpy	;wreg free
 25083                           
 25084                           ;display.c: 460: }
 25085                           
 25086                           ;display.c: 459: break;
 25087  00A9FA  D008               	goto	l1441
 25088  00A9FC                     l1439:
 25089  00A9FC  0101               	movlb	1	; () banked
 25090  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25091                           
 25092                           ; Switch size 1, requested type "space"
 25093                           ; Number of cases is 2, Range of values is 98 to 99
 25094                           ; switch strategies available:
 25095                           ; Name         Instructions Cycles
 25096                           ; simple_byte            7     4 (average)
 25097                           ;	Chosen strategy is simple_byte
 25098  00AA00  0A62               	xorlw	98	; case 98
 25099  00AA02  B4D8               	btfsc	status,2,c
 25100  00AA04  D7DC               	goto	l1442
 25101  00AA06  0A01               	xorlw	1	; case 99
 25102  00AA08  B4D8               	btfsc	status,2,c
 25103  00AA0A  D7D3               	goto	l1440
 25104  00AA0C                     l1441:
 25105                           
 25106                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 25107                           
 25108                           ; BSR set to: 1
 25109  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25110  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25111  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25112  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25113  00AA1C  0E02               	movlw	2
 25114  00AA1E  0100               	movlb	0	; () banked
 25115  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25116  00AA22  0EBE               	movlw	low display_prepare@temp
 25117  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25118  00AA26  0E00               	movlw	high display_prepare@temp
 25119  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25120  00AA2A  ECE9  F084         	call	__display_itoa_long	;wreg free
 25121                           
 25122                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 25123  00AA2E  0E00               	movlw	0
 25124  00AA30  0100               	movlb	0	; () banked
 25125  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25126  00AA34  D018               	goto	l1443
 25127  00AA36                     
 25128                           ; BSR set to: 0
 25129                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 25130                           
 25131                           ; BSR set to: 0
 25132  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25133  00AA38  0D01               	mullw	1
 25134  00AA3A  0EBE               	movlw	low display_prepare@temp
 25135  00AA3C  24F3               	addwf	prodl,w,c
 25136  00AA3E  6ED9               	movwf	fsr2l,c
 25137  00AA40  0E00               	movlw	high display_prepare@temp
 25138  00AA42  20F4               	addwfc	prodh,w,c
 25139  00AA44  6EDA               	movwf	fsr2h,c
 25140  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25141  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 25142  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25143  00AA4C  0E0A               	movlw	10
 25144  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25145  00AA50  0E00               	movlw	0
 25146  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25147  00AA54  0E34               	movlw	low _display_content
 25148  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 25149  00AA58  6EE1               	movwf	fsr1l,c
 25150  00AA5A  0E02               	movlw	high _display_content
 25151  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25152  00AA5E  6EE2               	movwf	fsr1h,c
 25153  00AA60  CFDF FFE7          	movff	indf2,indf1
 25154                           
 25155                           ; BSR set to: 0
 25156  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25157  00AA66                     l1443:
 25158                           
 25159                           ; BSR set to: 0
 25160                           
 25161                           ; BSR set to: 0
 25162  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25163  00AA68  0D01               	mullw	1
 25164  00AA6A  0EBE               	movlw	low display_prepare@temp
 25165  00AA6C  24F3               	addwf	prodl,w,c
 25166  00AA6E  6ED9               	movwf	fsr2l,c
 25167  00AA70  0E00               	movlw	high display_prepare@temp
 25168  00AA72  20F4               	addwfc	prodh,w,c
 25169  00AA74  6EDA               	movwf	fsr2h,c
 25170  00AA76  50DF               	movf	indf2,w,c
 25171  00AA78  A4D8               	btfss	status,2,c
 25172  00AA7A  D7DD               	goto	l1444
 25173                           
 25174                           ; BSR set to: 0
 25175                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 25176                           
 25177                           ; BSR set to: 0
 25178  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25179  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 25180  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25181  00AA82  0E0A               	movlw	10
 25182  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 25183  00AA86  0E00               	movlw	0
 25184  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25185  00AA8A  0E34               	movlw	low _display_content
 25186  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25187  00AA8E  6ED9               	movwf	fsr2l,c
 25188  00AA90  0E02               	movlw	high _display_content
 25189  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25190  00AA94  6EDA               	movwf	fsr2h,c
 25191  00AA96  0E01               	movlw	1
 25192  00AA98  6EDF               	movwf	indf2,c
 25193                           
 25194                           ; BSR set to: 0
 25195                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25196  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25197  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25198  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25199  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25200  00AAA6  0E02               	movlw	2
 25201  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25202  00AAAA  0EBE               	movlw	low display_prepare@temp
 25203  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25204  00AAAE  0E00               	movlw	high display_prepare@temp
 25205  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25206  00AAB2  ECE9  F084         	call	__display_itoa_long	;wreg free
 25207                           
 25208                           ;display.c: 472: space = 6-strlen(temp);
 25209  00AAB6  0EBE               	movlw	low display_prepare@temp
 25210  00AAB8  0100               	movlb	0	; () banked
 25211  00AABA  6F60               	movwf	strlen@s& (0+255),b
 25212  00AABC  0E00               	movlw	high display_prepare@temp
 25213  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 25214  00AAC0  EC0E  F0A8         	call	_strlen	;wreg free
 25215  00AAC4  0100               	movlb	0	; () banked
 25216  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 25217  00AAC8  0800               	sublw	0
 25218  00AACA  0F06               	addlw	6
 25219  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 25220                           
 25221                           ; BSR set to: 0
 25222                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 25223  00AACE  0E00               	movlw	0
 25224  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25225  00AAD2  D01C               	goto	l1446
 25226  00AAD4                     
 25227                           ; BSR set to: 0
 25228                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 25229                           
 25230                           ; BSR set to: 0
 25231  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25232  00AAD6  0D01               	mullw	1
 25233  00AAD8  0EBE               	movlw	low display_prepare@temp
 25234  00AADA  24F3               	addwf	prodl,w,c
 25235  00AADC  6ED9               	movwf	fsr2l,c
 25236  00AADE  0E00               	movlw	high display_prepare@temp
 25237  00AAE0  20F4               	addwfc	prodh,w,c
 25238  00AAE2  6EDA               	movwf	fsr2h,c
 25239  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25240  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25241  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25242  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25243  00AAEE  0E00               	movlw	0
 25244  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25245  00AAF2  0E0D               	movlw	13
 25246  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25247  00AAF6  0E00               	movlw	0
 25248  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25249  00AAFA  0E48               	movlw	low (_display_content+20)
 25250  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25251  00AAFE  6EE1               	movwf	fsr1l,c
 25252  00AB00  0E02               	movlw	high (_display_content+20)
 25253  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25254  00AB04  6EE2               	movwf	fsr1h,c
 25255  00AB06  CFDF FFE7          	movff	indf2,indf1
 25256                           
 25257                           ; BSR set to: 0
 25258  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25259  00AB0C                     l1446:
 25260                           
 25261                           ; BSR set to: 0
 25262                           
 25263                           ; BSR set to: 0
 25264  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25265  00AB0E  0D01               	mullw	1
 25266  00AB10  0EBE               	movlw	low display_prepare@temp
 25267  00AB12  24F3               	addwf	prodl,w,c
 25268  00AB14  6ED9               	movwf	fsr2l,c
 25269  00AB16  0E00               	movlw	high display_prepare@temp
 25270  00AB18  20F4               	addwfc	prodh,w,c
 25271  00AB1A  6EDA               	movwf	fsr2h,c
 25272  00AB1C  50DF               	movf	indf2,w,c
 25273  00AB1E  A4D8               	btfss	status,2,c
 25274  00AB20  D7D9               	goto	l1447
 25275                           
 25276                           ; BSR set to: 0
 25277                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 25278                           
 25279                           ; BSR set to: 0
 25280  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 25281  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 25282  00AB2A  ECEE  F0AB         	call	_motor_speed_from_index	;wreg free
 25283  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 25284  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 25285  00AB36  0E02               	movlw	2
 25286  00AB38  0100               	movlb	0	; () banked
 25287  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25288  00AB3C  0EBE               	movlw	low display_prepare@temp
 25289  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 25290  00AB40  0E00               	movlw	high display_prepare@temp
 25291  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25292  00AB44  EC4B  F075         	call	__display_itoa	;wreg free
 25293                           
 25294                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 25295  00AB48  0E00               	movlw	0
 25296  00AB4A  0100               	movlb	0	; () banked
 25297  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25298  00AB4E  D018               	goto	l1449
 25299  00AB50                     
 25300                           ; BSR set to: 0
 25301                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 25302                           
 25303                           ; BSR set to: 0
 25304  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25305  00AB52  0D01               	mullw	1
 25306  00AB54  0EBE               	movlw	low display_prepare@temp
 25307  00AB56  24F3               	addwf	prodl,w,c
 25308  00AB58  6ED9               	movwf	fsr2l,c
 25309  00AB5A  0E00               	movlw	high display_prepare@temp
 25310  00AB5C  20F4               	addwfc	prodh,w,c
 25311  00AB5E  6EDA               	movwf	fsr2h,c
 25312  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25313  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 25314  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25315  00AB66  0E0B               	movlw	11
 25316  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 25317  00AB6A  0E00               	movlw	0
 25318  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25319  00AB6E  0E70               	movlw	low (_display_content+60)
 25320  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 25321  00AB72  6EE1               	movwf	fsr1l,c
 25322  00AB74  0E02               	movlw	high (_display_content+60)
 25323  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25324  00AB78  6EE2               	movwf	fsr1h,c
 25325  00AB7A  CFDF FFE7          	movff	indf2,indf1
 25326                           
 25327                           ; BSR set to: 0
 25328  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25329  00AB80                     l1449:
 25330                           
 25331                           ; BSR set to: 0
 25332                           
 25333                           ; BSR set to: 0
 25334  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25335  00AB82  0D01               	mullw	1
 25336  00AB84  0EBE               	movlw	low display_prepare@temp
 25337  00AB86  24F3               	addwf	prodl,w,c
 25338  00AB88  6ED9               	movwf	fsr2l,c
 25339  00AB8A  0E00               	movlw	high display_prepare@temp
 25340  00AB8C  20F4               	addwfc	prodh,w,c
 25341  00AB8E  6EDA               	movwf	fsr2h,c
 25342  00AB90  50DF               	movf	indf2,w,c
 25343  00AB92  A4D8               	btfss	status,2,c
 25344  00AB94  D7DD               	goto	l1450
 25345  00AB96  D12D               	goto	L94
 25346  00AB98                     
 25347                           ; BSR set to: 0
 25348                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 25349                           
 25350                           ; BSR set to: 0
 25351  00AB98  0E34               	movlw	low _display_content
 25352  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 25353  00AB9C  0E02               	movlw	high _display_content
 25354  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25355  00ABA0  0E3E               	movlw	low _dc_zero
 25356  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 25357  00ABA4  0E9E               	movlw	high _dc_zero
 25358  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25359  00ABA8  0E00               	movlw	0
 25360  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25361  00ABAC  0E50               	movlw	80
 25362  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 25363  00ABB0  ECDA  F0A1         	call	_memcpy	;wreg free
 25364                           
 25365                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25366  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25367  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25368  00ABBC  0100               	movlb	0	; () banked
 25369  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25370  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25371  00ABC2  0E02               	movlw	2
 25372  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25373  00ABC6  0EBE               	movlw	low display_prepare@temp
 25374  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25375  00ABCA  0E00               	movlw	high display_prepare@temp
 25376  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25377  00ABCE  ECE9  F084         	call	__display_itoa_long	;wreg free
 25378                           
 25379                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 25380  00ABD2  0E00               	movlw	0
 25381  00ABD4  0100               	movlb	0	; () banked
 25382  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25383  00ABD8  D018               	goto	l1453
 25384  00ABDA                     
 25385                           ; BSR set to: 0
 25386                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 25387                           
 25388                           ; BSR set to: 0
 25389  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25390  00ABDC  0D01               	mullw	1
 25391  00ABDE  0EBE               	movlw	low display_prepare@temp
 25392  00ABE0  24F3               	addwf	prodl,w,c
 25393  00ABE2  6ED9               	movwf	fsr2l,c
 25394  00ABE4  0E00               	movlw	high display_prepare@temp
 25395  00ABE6  20F4               	addwfc	prodh,w,c
 25396  00ABE8  6EDA               	movwf	fsr2h,c
 25397  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25398  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 25399  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25400  00ABF0  0E0D               	movlw	13
 25401  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 25402  00ABF4  0E00               	movlw	0
 25403  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25404  00ABF8  0E48               	movlw	low (_display_content+20)
 25405  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 25406  00ABFC  6EE1               	movwf	fsr1l,c
 25407  00ABFE  0E02               	movlw	high (_display_content+20)
 25408  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25409  00AC02  6EE2               	movwf	fsr1h,c
 25410  00AC04  CFDF FFE7          	movff	indf2,indf1
 25411                           
 25412                           ; BSR set to: 0
 25413  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25414  00AC0A                     l1453:
 25415                           
 25416                           ; BSR set to: 0
 25417                           
 25418                           ; BSR set to: 0
 25419  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25420  00AC0C  0D01               	mullw	1
 25421  00AC0E  0EBE               	movlw	low display_prepare@temp
 25422  00AC10  24F3               	addwf	prodl,w,c
 25423  00AC12  6ED9               	movwf	fsr2l,c
 25424  00AC14  0E00               	movlw	high display_prepare@temp
 25425  00AC16  20F4               	addwfc	prodh,w,c
 25426  00AC18  6EDA               	movwf	fsr2h,c
 25427  00AC1A  50DF               	movf	indf2,w,c
 25428  00AC1C  A4D8               	btfss	status,2,c
 25429  00AC1E  D7DD               	goto	l1454
 25430                           
 25431                           ; BSR set to: 0
 25432                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 25433                           
 25434                           ; BSR set to: 0
 25435  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25436  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 25437  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25438  00AC26  0E0D               	movlw	13
 25439  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 25440  00AC2A  0E00               	movlw	0
 25441  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25442  00AC2E  0E48               	movlw	low (_display_content+20)
 25443  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 25444  00AC32  6ED9               	movwf	fsr2l,c
 25445  00AC34  0E02               	movlw	high (_display_content+20)
 25446  00AC36  D6AA               	goto	L36
 25447  00AC38                     
 25448                           ; BSR set to: 0
 25449                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 25450                           
 25451                           ; BSR set to: 0
 25452  00AC38  0E34               	movlw	low _display_content
 25453  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 25454  00AC3C  0E02               	movlw	high _display_content
 25455  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25456  00AC40  0EEE               	movlw	low _dc_manual
 25457  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 25458  00AC44  0E9D               	movlw	high _dc_manual
 25459  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25460  00AC48  0E00               	movlw	0
 25461  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25462  00AC4C  0E50               	movlw	80
 25463  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 25464  00AC50  ECDA  F0A1         	call	_memcpy	;wreg free
 25465                           
 25466                           ;display.c: 509: switch(os.displayState)
 25467  00AC54  D044               	goto	l1457
 25468  00AC56                     
 25469                           ;display.c: 512: display_content[2][6] = 'W';
 25470  00AC56  0E57               	movlw	87
 25471  00AC58  0102               	movlb	2	; () banked
 25472  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 25473                           
 25474                           ;display.c: 513: display_content[2][7] = ' ';
 25475  00AC5C  0E20               	movlw	32
 25476  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 25477                           
 25478                           ;display.c: 514: break;
 25479  00AC60  D049               	goto	l1459
 25480  00AC62                     
 25481                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 25482                           
 25483                           ; BSR set to: 2
 25484  00AC62  0E5C               	movlw	low (_display_content+40)
 25485  00AC64  0100               	movlb	0	; () banked
 25486  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 25487  00AC68  0E02               	movlw	high (_display_content+40)
 25488  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25489  00AC6C  0E14               	movlw	low STR_1
 25490  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 25491  00AC70  0EA3               	movlw	high STR_1
 25492  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25493  00AC74  0E00               	movlw	0
 25494  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25495  00AC78  0E08               	movlw	8
 25496  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 25497  00AC7C  ECDA  F0A1         	call	_memcpy	;wreg free
 25498                           
 25499                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 25500  00AC80  0E70               	movlw	low (_display_content+60)
 25501  00AC82  0100               	movlb	0	; () banked
 25502  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 25503  00AC86  0E02               	movlw	high (_display_content+60)
 25504  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25505  00AC8A  0E1D               	movlw	low STR_2
 25506  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 25507  00AC8E  0EA3               	movlw	high STR_2
 25508  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25509  00AC92  0E00               	movlw	0
 25510  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25511  00AC96  0E06               	movlw	6
 25512  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 25513  00AC9A  ECDA  F0A1         	call	_memcpy	;wreg free
 25514                           
 25515                           ;display.c: 518: break;
 25516  00AC9E  D02A               	goto	l1459
 25517  00ACA0                     
 25518                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 25519  00ACA0  0E5C               	movlw	low (_display_content+40)
 25520  00ACA2  0100               	movlb	0	; () banked
 25521  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 25522  00ACA6  0E02               	movlw	high (_display_content+40)
 25523  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25524  00ACAA  0E14               	movlw	low STR_1
 25525  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 25526  00ACAE  0EA3               	movlw	high STR_1
 25527  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25528  00ACB2  0E00               	movlw	0
 25529  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25530  00ACB6  0E08               	movlw	8
 25531  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 25532  00ACBA  ECDA  F0A1         	call	_memcpy	;wreg free
 25533                           
 25534                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 25535  00ACBE  0E70               	movlw	low (_display_content+60)
 25536  00ACC0  0100               	movlb	0	; () banked
 25537  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 25538  00ACC4  0E02               	movlw	high (_display_content+60)
 25539  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25540  00ACC8  0E24               	movlw	low STR_6
 25541  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 25542  00ACCC  0EA3               	movlw	high STR_6
 25543  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25544  00ACD0  0E00               	movlw	0
 25545  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25546  00ACD4  0E05               	movlw	5
 25547  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 25548  00ACD8  ECDA  F0A1         	call	_memcpy	;wreg free
 25549                           
 25550                           ;display.c: 523: }
 25551                           
 25552                           ;display.c: 522: break;
 25553  00ACDC  D00B               	goto	l1459
 25554  00ACDE                     l1457:
 25555  00ACDE  0101               	movlb	1	; () banked
 25556  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25557                           
 25558                           ; Switch size 1, requested type "space"
 25559                           ; Number of cases is 3, Range of values is 130 to 132
 25560                           ; switch strategies available:
 25561                           ; Name         Instructions Cycles
 25562                           ; simple_byte           10     6 (average)
 25563                           ;	Chosen strategy is simple_byte
 25564  00ACE2  0A82               	xorlw	130	; case 130
 25565  00ACE4  B4D8               	btfsc	status,2,c
 25566  00ACE6  D7BD               	goto	l1460
 25567  00ACE8  0A01               	xorlw	1	; case 131
 25568  00ACEA  B4D8               	btfsc	status,2,c
 25569  00ACEC  D7B4               	goto	l1458
 25570  00ACEE  0A07               	xorlw	7	; case 132
 25571  00ACF0  B4D8               	btfsc	status,2,c
 25572  00ACF2  D7D6               	goto	l1461
 25573  00ACF4                     l1459:
 25574                           
 25575                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25576                           
 25577                           ; BSR set to: 1
 25578  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25579  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25580  00ACFC  0100               	movlb	0	; () banked
 25581  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25582  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25583  00AD02  0E02               	movlw	2
 25584  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25585  00AD06  0EBE               	movlw	low display_prepare@temp
 25586  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25587  00AD0A  0E00               	movlw	high display_prepare@temp
 25588  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25589  00AD0E  ECE9  F084         	call	__display_itoa_long	;wreg free
 25590                           
 25591                           ;display.c: 527: space = 7-strlen(temp);
 25592  00AD12  0EBE               	movlw	low display_prepare@temp
 25593  00AD14  0100               	movlb	0	; () banked
 25594  00AD16  6F60               	movwf	strlen@s& (0+255),b
 25595  00AD18  0E00               	movlw	high display_prepare@temp
 25596  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 25597  00AD1C  EC0E  F0A8         	call	_strlen	;wreg free
 25598  00AD20  0100               	movlb	0	; () banked
 25599  00AD22  5160               	movf	?_strlen& (0+255),w,b
 25600  00AD24  0800               	sublw	0
 25601  00AD26  0F07               	addlw	7
 25602  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 25606  00AD2A  0E00               	movlw	0
 25607  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25608  00AD2E  D01C               	goto	l1462
 25609  00AD30                     
 25610                           ; BSR set to: 0
 25611                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 25612                           
 25613                           ; BSR set to: 0
 25614  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25615  00AD32  0D01               	mullw	1
 25616  00AD34  0EBE               	movlw	low display_prepare@temp
 25617  00AD36  24F3               	addwf	prodl,w,c
 25618  00AD38  6ED9               	movwf	fsr2l,c
 25619  00AD3A  0E00               	movlw	high display_prepare@temp
 25620  00AD3C  20F4               	addwfc	prodh,w,c
 25621  00AD3E  6EDA               	movwf	fsr2h,c
 25622  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25623  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25624  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25625  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 25626  00AD4A  0E00               	movlw	0
 25627  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25628  00AD4E  0E0C               	movlw	12
 25629  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 25630  00AD52  0E00               	movlw	0
 25631  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25632  00AD56  0E48               	movlw	low (_display_content+20)
 25633  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 25634  00AD5A  6EE1               	movwf	fsr1l,c
 25635  00AD5C  0E02               	movlw	high (_display_content+20)
 25636  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25637  00AD60  6EE2               	movwf	fsr1h,c
 25638  00AD62  CFDF FFE7          	movff	indf2,indf1
 25639                           
 25640                           ; BSR set to: 0
 25641  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25642  00AD68                     l1462:
 25643                           
 25644                           ; BSR set to: 0
 25645                           
 25646                           ; BSR set to: 0
 25647  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25648  00AD6A  0D01               	mullw	1
 25649  00AD6C  0EBE               	movlw	low display_prepare@temp
 25650  00AD6E  24F3               	addwf	prodl,w,c
 25651  00AD70  6ED9               	movwf	fsr2l,c
 25652  00AD72  0E00               	movlw	high display_prepare@temp
 25653  00AD74  20F4               	addwfc	prodh,w,c
 25654  00AD76  6EDA               	movwf	fsr2h,c
 25655  00AD78  50DF               	movf	indf2,w,c
 25656  00AD7A  A4D8               	btfss	status,2,c
 25657  00AD7C  D7D9               	goto	l1463
 25658                           
 25659                           ; BSR set to: 0
 25660                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 25661                           
 25662                           ; BSR set to: 0
 25663  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 25664  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 25665  00AD86  ECEE  F0AB         	call	_motor_speed_from_index	;wreg free
 25666  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 25667  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 25668  00AD92  0E02               	movlw	2
 25669  00AD94  0100               	movlb	0	; () banked
 25670  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25671  00AD98  0EBE               	movlw	low display_prepare@temp
 25672  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 25673  00AD9C  0E00               	movlw	high display_prepare@temp
 25674  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25675  00ADA0  EC4B  F075         	call	__display_itoa	;wreg free
 25676                           
 25677                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 25678  00ADA4  0E00               	movlw	0
 25679  00ADA6  0100               	movlb	0	; () banked
 25680  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25681  00ADAA  D018               	goto	l1465
 25682  00ADAC                     
 25683                           ; BSR set to: 0
 25684                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 25685                           
 25686                           ; BSR set to: 0
 25687  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25688  00ADAE  0D01               	mullw	1
 25689  00ADB0  0EBE               	movlw	low display_prepare@temp
 25690  00ADB2  24F3               	addwf	prodl,w,c
 25691  00ADB4  6ED9               	movwf	fsr2l,c
 25692  00ADB6  0E00               	movlw	high display_prepare@temp
 25693  00ADB8  20F4               	addwfc	prodh,w,c
 25694  00ADBA  6EDA               	movwf	fsr2h,c
 25695  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25696  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 25697  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25698  00ADC2  0E0B               	movlw	11
 25699  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25700  00ADC6  0E00               	movlw	0
 25701  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25702  00ADCA  0E70               	movlw	low (_display_content+60)
 25703  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25704  00ADCE  6EE1               	movwf	fsr1l,c
 25705  00ADD0  0E02               	movlw	high (_display_content+60)
 25706  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25707  00ADD4  6EE2               	movwf	fsr1h,c
 25708  00ADD6  CFDF FFE7          	movff	indf2,indf1
 25709                           
 25710                           ; BSR set to: 0
 25711  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25712  00ADDC                     l1465:
 25713                           
 25714                           ; BSR set to: 0
 25715                           
 25716                           ; BSR set to: 0
 25717  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25718  00ADDE  0D01               	mullw	1
 25719  00ADE0  0EBE               	movlw	low display_prepare@temp
 25720  00ADE2  24F3               	addwf	prodl,w,c
 25721  00ADE4  6ED9               	movwf	fsr2l,c
 25722  00ADE6  0E00               	movlw	high display_prepare@temp
 25723  00ADE8  20F4               	addwfc	prodh,w,c
 25724  00ADEA  6EDA               	movwf	fsr2h,c
 25725  00ADEC  50DF               	movf	indf2,w,c
 25726  00ADEE  A4D8               	btfss	status,2,c
 25727  00ADF0  D7DD               	goto	l1466
 25728  00ADF2                     L94:
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 25732                           
 25733                           ; BSR set to: 0
 25734  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25735  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 25736  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25737  00ADF8  0E0B               	movlw	11
 25738  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25739  00ADFC  0E00               	movlw	0
 25740  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25741  00AE00  0E70               	movlw	low (_display_content+60)
 25742  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 25743  00AE04  6ED9               	movwf	fsr2l,c
 25744  00AE06  0E02               	movlw	high (_display_content+60)
 25745  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25746  00AE0A  6EDA               	movwf	fsr2h,c
 25747  00AE0C  0E01               	movlw	1
 25748  00AE0E  6EDF               	movwf	indf2,c
 25749                           
 25750                           ;display.c: 540: display_content[3][12+cntr] = '/';
 25751  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25752  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 25753  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25754  00AE16  0E0C               	movlw	12
 25755  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 25756  00AE1A  0E00               	movlw	0
 25757  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25758  00AE1E  0E70               	movlw	low (_display_content+60)
 25759  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 25760  00AE22  6ED9               	movwf	fsr2l,c
 25761  00AE24  0E02               	movlw	high (_display_content+60)
 25762  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25763  00AE28  6EDA               	movwf	fsr2h,c
 25764  00AE2A  0E2F               	movlw	47
 25765  00AE2C  6EDF               	movwf	indf2,c
 25766                           
 25767                           ;display.c: 541: display_content[3][13+cntr] = 's';
 25768  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25769  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 25770  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25771  00AE34  0E0D               	movlw	13
 25772  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 25773  00AE38  0E00               	movlw	0
 25774  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25775  00AE3C  0E70               	movlw	low (_display_content+60)
 25776  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25777  00AE40  6ED9               	movwf	fsr2l,c
 25778  00AE42  0E02               	movlw	high (_display_content+60)
 25779  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25780  00AE46  6EDA               	movwf	fsr2h,c
 25781  00AE48  0E73               	movlw	115
 25782  00AE4A                     L27:
 25783  00AE4A  6EDF               	movwf	indf2,c
 25784                           
 25785                           ;display.c: 542: break;
 25786  00AE4C  D095               	goto	l1385
 25787  00AE4E                     
 25788                           ; BSR set to: 0
 25789                           ;display.c: 545: _display_clear();
 25790                           
 25791                           ; BSR set to: 0
 25792  00AE4E  ECB6  F0A6         	call	__display_clear	;wreg free
 25793                           
 25794                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 25795  00AE52  0101               	movlb	1	; () banked
 25796  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 25797  00AE56  0100               	movlb	0	; () banked
 25798  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 25799  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25800  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25801  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25802  00AE60  0E00               	movlw	0
 25803  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25804  00AE64  0E34               	movlw	low _display_content
 25805  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 25806  00AE68  0E02               	movlw	high _display_content
 25807  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25808  00AE6C  EC4B  F075         	call	__display_itoa	;wreg free
 25809                           
 25810                           ;display.c: 547: if(PORTEbits.RE2)
 25811  00AE70  A484               	btfss	3972,2,c	;volatile
 25812  00AE72  D002               	goto	l1469
 25813                           
 25814                           ;display.c: 548: display_content[0][8] = 'H';
 25815  00AE74  0E48               	movlw	72
 25816  00AE76  D001               	goto	L31
 25817  00AE78                     l1469:
 25818                           
 25819                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 25820                           
 25821                           ; BSR set to: 2
 25822  00AE78  0E4C               	movlw	76
 25823  00AE7A                     L31:
 25824  00AE7A  0102               	movlb	2	; () banked
 25825  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 25826                           
 25827                           ; BSR set to: 2
 25828                           ;display.c: 551: if(PORTEbits.RE0)
 25829                           
 25830                           ; BSR set to: 2
 25831  00AE7E  A084               	btfss	3972,0,c	;volatile
 25832  00AE80  D002               	goto	l1471
 25833                           
 25834                           ; BSR set to: 2
 25835                           ;display.c: 552: display_content[0][9] = 'H';
 25836  00AE82  0E48               	movlw	72
 25837  00AE84  D001               	goto	L32
 25838  00AE86                     l1471:
 25839                           
 25840                           ; BSR set to: 2
 25841                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 25842                           
 25843                           ; BSR set to: 2
 25844  00AE86  0E4C               	movlw	76
 25845  00AE88                     L32:
 25846  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 25847                           
 25848                           ; BSR set to: 2
 25849                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 25850                           
 25851                           ; BSR set to: 2
 25852  00AE8A  0101               	movlb	1	; () banked
 25853  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 25854  00AE8E  0100               	movlb	0	; () banked
 25855  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 25856  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25857  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25858  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25859  00AE98  0E00               	movlw	0
 25860  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25861  00AE9C  0E48               	movlw	low (_display_content+20)
 25862  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 25863  00AEA0  0E02               	movlw	high (_display_content+20)
 25864  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25865  00AEA4  EC4B  F075         	call	__display_itoa	;wreg free
 25866                           
 25867                           ;display.c: 556: if(PORTEbits.RE1)
 25868  00AEA8  A284               	btfss	3972,1,c	;volatile
 25869  00AEAA  D002               	goto	l1473
 25870                           
 25871                           ;display.c: 557: display_content[1][8] = 'H';
 25872  00AEAC  0E48               	movlw	72
 25873  00AEAE  D001               	goto	L33
 25874  00AEB0                     l1473:
 25875                           
 25876                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 25877                           
 25878                           ; BSR set to: 2
 25879  00AEB0  0E4C               	movlw	76
 25880  00AEB2                     L33:
 25881  00AEB2  0102               	movlb	2	; () banked
 25882  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 25883                           
 25884                           ; BSR set to: 2
 25885                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 25886                           
 25887                           ; BSR set to: 2
 25888  00AEB6  0101               	movlb	1	; () banked
 25889  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 25890  00AEBA  0100               	movlb	0	; () banked
 25891  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 25892  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25893  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25894  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25895  00AEC4  0E00               	movlw	0
 25896  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25897  00AEC8  0E5C               	movlw	low (_display_content+40)
 25898  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 25899  00AECC  0E02               	movlw	high (_display_content+40)
 25900  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25901  00AED0  EC4B  F075         	call	__display_itoa	;wreg free
 25902                           
 25903                           ;display.c: 561: if(PORTAbits.RA0)
 25904  00AED4  A080               	btfss	3968,0,c	;volatile
 25905  00AED6  D002               	goto	l1475
 25906                           
 25907                           ;display.c: 562: display_content[2][8] = 'H';
 25908  00AED8  0E48               	movlw	72
 25909  00AEDA  D001               	goto	L34
 25910  00AEDC                     l1475:
 25911                           
 25912                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 25913                           
 25914                           ; BSR set to: 2
 25915  00AEDC  0E4C               	movlw	76
 25916  00AEDE                     L34:
 25917  00AEDE  0102               	movlb	2	; () banked
 25918  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 25919                           
 25920                           ; BSR set to: 2
 25921                           ;display.c: 565: if(PORTAbits.RA2)
 25922                           
 25923                           ; BSR set to: 2
 25924  00AEE2  A480               	btfss	3968,2,c	;volatile
 25925  00AEE4  D002               	goto	l1477
 25926                           
 25927                           ; BSR set to: 2
 25928                           ;display.c: 566: display_content[2][9] = 'H';
 25929  00AEE6  0E48               	movlw	72
 25930  00AEE8  D001               	goto	L35
 25931  00AEEA                     l1477:
 25932                           
 25933                           ; BSR set to: 2
 25934                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 25935                           
 25936                           ; BSR set to: 2
 25937  00AEEA  0E4C               	movlw	76
 25938  00AEEC                     L35:
 25939  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 25940                           
 25941                           ; BSR set to: 2
 25942                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 25943                           
 25944                           ; BSR set to: 2
 25945  00AEEE  0101               	movlb	1	; () banked
 25946  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 25947  00AEF2  0100               	movlb	0	; () banked
 25948  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 25949  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25950  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25951  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25952  00AEFC  0E00               	movlw	0
 25953  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25954  00AF00  0E70               	movlw	low (_display_content+60)
 25955  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 25956  00AF04  0E02               	movlw	high (_display_content+60)
 25957  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25958  00AF08  EC4B  F075         	call	__display_itoa	;wreg free
 25959                           
 25960                           ;display.c: 570: if(PORTAbits.RA1)
 25961  00AF0C  A280               	btfss	3968,1,c	;volatile
 25962  00AF0E  D002               	goto	l1479
 25963                           
 25964                           ;display.c: 571: display_content[3][8] = 'H';
 25965  00AF10  0E48               	movlw	72
 25966  00AF12  D001               	goto	L28
 25967  00AF14                     l1479:
 25968                           
 25969                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 25970                           
 25971                           ; BSR set to: 2
 25972  00AF14  0E4C               	movlw	76
 25973  00AF16                     L28:
 25974  00AF16  0102               	movlb	2	; () banked
 25975  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 25976                           
 25977                           ; BSR set to: 2
 25978                           ;display.c: 575: }
 25979                           
 25980                           ; BSR set to: 2
 25981                           ;display.c: 574: break;
 25982  00AF1A  D02E               	goto	l1385
 25983  00AF1C                     l1376:
 25984                           
 25985                           ; BSR set to: 2
 25986  00AF1C  0101               	movlb	1	; () banked
 25987  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25988  00AF20  0BF0               	andlw	240
 25989  00AF22  0100               	movlb	0	; () banked
 25990  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 25991  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25992                           
 25993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25994                           ; Switch size 1, requested type "space"
 25995                           ; Number of cases is 1, Range of values is 0 to 0
 25996                           ; switch strategies available:
 25997                           ; Name         Instructions Cycles
 25998                           ; simple_byte            4     3 (average)
 25999                           ;	Chosen strategy is simple_byte
 26000  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 26001  00AF2A  0A00               	xorlw	0	; case 0
 26002  00AF2C  A4D8               	btfss	status,2,c
 26003  00AF2E  D024               	goto	l1385
 26004                           
 26005                           ; BSR set to: 0
 26006                           ; Switch size 1, requested type "space"
 26007                           ; Number of cases is 10, Range of values is 0 to 240
 26008                           ; switch strategies available:
 26009                           ; Name         Instructions Cycles
 26010                           ; simple_byte           31    16 (average)
 26011                           ;	Chosen strategy is simple_byte
 26012  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 26013  00AF32  0A00               	xorlw	0	; case 0
 26014  00AF34  B4D8               	btfsc	status,2,c
 26015  00AF36  EF9A  F051         	goto	l1377
 26016  00AF3A  0A10               	xorlw	16	; case 16
 26017  00AF3C  B4D8               	btfsc	status,2,c
 26018  00AF3E  EFC9  F051         	goto	l1386
 26019  00AF42  0A30               	xorlw	48	; case 32
 26020  00AF44  B4D8               	btfsc	status,2,c
 26021  00AF46  EF1B  F052         	goto	l1396
 26022  00AF4A  0A10               	xorlw	16	; case 48
 26023  00AF4C  B4D8               	btfsc	status,2,c
 26024  00AF4E  EF3F  F052         	goto	l1401
 26025  00AF52  0A70               	xorlw	112	; case 64
 26026  00AF54  B4D8               	btfsc	status,2,c
 26027  00AF56  EFB0  F052         	goto	l1410
 26028  00AF5A  0A10               	xorlw	16	; case 80
 26029  00AF5C  B4D8               	btfsc	status,2,c
 26030  00AF5E  D467               	goto	l1425
 26031  00AF60  0A30               	xorlw	48	; case 96
 26032  00AF62  B4D8               	btfsc	status,2,c
 26033  00AF64  D517               	goto	l1438
 26034  00AF66  0A10               	xorlw	16	; case 112
 26035  00AF68  B4D8               	btfsc	status,2,c
 26036  00AF6A  D616               	goto	l1452
 26037  00AF6C  0AF0               	xorlw	240	; case 128
 26038  00AF6E  B4D8               	btfsc	status,2,c
 26039  00AF70  D663               	goto	l1456
 26040  00AF72  0A70               	xorlw	112	; case 240
 26041  00AF74  B4D8               	btfsc	status,2,c
 26042  00AF76  D76B               	goto	l1468
 26043  00AF78                     l1385:
 26044                           
 26045                           ;display.c: 577: if(!PORTDbits.RD2)
 26046  00AF78  B483               	btfsc	3971,2,c	;volatile
 26047  00AF7A  0012               	return	
 26048                           
 26049                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 26050  00AF7C  0E45               	movlw	69
 26051  00AF7E  0102               	movlb	2	; () banked
 26052  00AF80  6F34               	movwf	_display_content& (0+255),b
 26053                           
 26054                           ;display.c: 580: display_content[0][1] = 'R';
 26055  00AF82  0E52               	movlw	82
 26056  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 26057                           
 26058                           ;display.c: 581: display_content[0][2] = 'R';
 26059  00AF86  0E52               	movlw	82
 26060  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 26061                           
 26062                           ;display.c: 582: display_content[0][3] = 'O';
 26063  00AF8A  0E4F               	movlw	79
 26064  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 26065                           
 26066                           ;display.c: 583: display_content[0][4] = 'R';
 26067  00AF8E  0E52               	movlw	82
 26068  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 26069  00AF92  0012               	return	
 26070  00AF94                     __end_of_display_prepare:
 26071                           	opt stack 0
 26072                           tblptru	equ	0xFF8
 26073                           tblptrh	equ	0xFF7
 26074                           tblptrl	equ	0xFF6
 26075                           tablat	equ	0xFF5
 26076                           prodh	equ	0xFF4
 26077                           prodl	equ	0xFF3
 26078                           intcon	equ	0xFF2
 26079                           postinc0	equ	0xFEE
 26080                           wreg	equ	0xFE8
 26081                           indf1	equ	0xFE7
 26082                           postinc1	equ	0xFE6
 26083                           postdec1	equ	0xFE5
 26084                           plusw1	equ	0xFE3
 26085                           fsr1h	equ	0xFE2
 26086                           fsr1l	equ	0xFE1
 26087                           indf2	equ	0xFDF
 26088                           postinc2	equ	0xFDE
 26089                           postdec2	equ	0xFDD
 26090                           plusw2	equ	0xFDB
 26091                           fsr2h	equ	0xFDA
 26092                           fsr2l	equ	0xFD9
 26093                           status	equ	0xFD8
 26094                           
 26095 ;; *************** function _motor_speed_from_index *****************
 26096 ;; Defined at:
 26097 ;;		line 114 in file "motor.c"
 26098 ;; Parameters:    Size  Location     Type
 26099 ;;  speed_index     2   51[BANK0 ] unsigned int 
 26100 ;; Auto vars:     Size  Location     Type
 26101 ;;		None
 26102 ;; Return value:  Size  Location     Type
 26103 ;;                  2   51[BANK0 ] unsigned int 
 26104 ;; Registers used:
 26105 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26106 ;; Tracked objects:
 26107 ;;		On entry : 0/0
 26108 ;;		On exit  : 0/0
 26109 ;;		Unchanged: 0/0
 26110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26115 ;;Total ram usage:        2 bytes
 26116 ;; Hardware stack levels used:    1
 26117 ;; Hardware stack levels required when called:   12
 26118 ;; This function calls:
 26119 ;;		__motor_get_speed_in_degrees
 26120 ;; This function is called by:
 26121 ;;		_display_prepare
 26122 ;; This function uses a non-reentrant model
 26123 ;;
 26124                           
 26125                           	psect	text101
 26126  0157DC                     __ptext101:
 26127                           	opt stack 0
 26128  0157DC                     _motor_speed_from_index:
 26129                           	opt stack 17
 26130                           
 26131                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 26132                           
 26133                           ;incstack = 0
 26134  0157DC  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 26135  0157E0  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 26136  0157E4  ECE3  F080         	call	__motor_get_speed_in_degrees	;wreg free
 26137  0157E8  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 26138  0157EC  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 26139  0157F0  0012               	return	
 26140  0157F2                     __end_of_motor_speed_from_index:
 26141                           	opt stack 0
 26142                           tblptru	equ	0xFF8
 26143                           tblptrh	equ	0xFF7
 26144                           tblptrl	equ	0xFF6
 26145                           tablat	equ	0xFF5
 26146                           prodh	equ	0xFF4
 26147                           prodl	equ	0xFF3
 26148                           intcon	equ	0xFF2
 26149                           postinc0	equ	0xFEE
 26150                           wreg	equ	0xFE8
 26151                           indf1	equ	0xFE7
 26152                           postinc1	equ	0xFE6
 26153                           postdec1	equ	0xFE5
 26154                           plusw1	equ	0xFE3
 26155                           fsr1h	equ	0xFE2
 26156                           fsr1l	equ	0xFE1
 26157                           indf2	equ	0xFDF
 26158                           postinc2	equ	0xFDE
 26159                           postdec2	equ	0xFDD
 26160                           plusw2	equ	0xFDB
 26161                           fsr2h	equ	0xFDA
 26162                           fsr2l	equ	0xFD9
 26163                           status	equ	0xFD8
 26164                           
 26165 ;; *************** function __motor_get_speed_in_degrees *****************
 26166 ;; Defined at:
 26167 ;;		line 75 in file "motor.c"
 26168 ;; Parameters:    Size  Location     Type
 26169 ;;  speed_index     2   39[BANK0 ] unsigned int 
 26170 ;; Auto vars:     Size  Location     Type
 26171 ;;  lookup          4   47[BANK0 ] unsigned long 
 26172 ;;  speed           4   43[BANK0 ] float 
 26173 ;; Return value:  Size  Location     Type
 26174 ;;                  2   39[BANK0 ] unsigned int 
 26175 ;; Registers used:
 26176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26177 ;; Tracked objects:
 26178 ;;		On entry : 0/0
 26179 ;;		On exit  : 0/0
 26180 ;;		Unchanged: 0/0
 26181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26183 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26185 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26186 ;;Total ram usage:       12 bytes
 26187 ;; Hardware stack levels used:    1
 26188 ;; Hardware stack levels required when called:   11
 26189 ;; This function calls:
 26190 ;;		___fldiv
 26191 ;;		___fltol
 26192 ;;		___lmul
 26193 ;;		___xxtofl
 26194 ;; This function is called by:
 26195 ;;		_motor_speed_from_index
 26196 ;;		_motor_get_maximum_speed
 26197 ;;		_motor_get_current_speed
 26198 ;; This function uses a non-reentrant model
 26199 ;;
 26200                           
 26201                           	psect	text102
 26202  0101C6                     __ptext102:
 26203                           	opt stack 0
 26204  0101C6                     __motor_get_speed_in_degrees:
 26205                           	opt stack 17
 26206                           
 26207                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 26208                           
 26209                           ;incstack = 0
 26210  0101C6  90D8               	bcf	status,0,c
 26211  0101C8  0100               	movlb	0	; () banked
 26212  0101CA  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 26213  0101CC  6EF6               	movwf	tblptrl,c
 26214  0101CE  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 26215  0101D0  6EF7               	movwf	tblptrh,c
 26216  0101D2  0E93               	movlw	low _motor_speed_lookup
 26217  0101D4  26F6               	addwf	tblptrl,f,c
 26218  0101D6  0E90               	movlw	high _motor_speed_lookup
 26219  0101D8  22F7               	addwfc	tblptrh,f,c
 26220  0101DA                     	if	1	;There are 3 active tblptr bytes
 26221  0101DA  6AF8               	clrf	tblptru,c
 26222  0101DC  0E00               	movlw	low (__mediumconst shr (0+16))
 26223  0101DE  22F8               	addwfc	tblptru,f,c
 26224  0101E0                     	endif
 26225  0101E0  0009               	tblrd		*+
 26226  0101E2  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 26227  0101E6  0009               	tblrd		*+
 26228  0101E8  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 26229  0101EC  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 26230  0101F0  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 26231  0101F4  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 26232  0101F6  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 26233                           
 26234                           ; BSR set to: 0
 26235                           ;motor.c: 81: lookup *= 16;
 26236  0101F8  0E04               	movlw	4
 26237  0101FA                     u14915:
 26238  0101FA  90D8               	bcf	status,0,c
 26239  0101FC  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 26240  0101FE  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 26241  010200  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 26242  010202  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 26243  010204  2EE8               	decfsz	wreg,f,c
 26244  010206  D7F9               	goto	u14915
 26245                           
 26246                           ; BSR set to: 0
 26247                           ;motor.c: 82: lookup *= 360;
 26248  010208  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 26249  01020C  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 26250  010210  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 26251  010214  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 26252  010218  0E68               	movlw	104
 26253  01021A  6F64               	movwf	___lmul@multiplicand& (0+255),b
 26254  01021C  0E01               	movlw	1
 26255  01021E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26256  010220  0E00               	movlw	0
 26257  010222  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26258  010224  0E00               	movlw	0
 26259  010226  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26260  010228  ECD0  F0A3         	call	___lmul	;wreg free
 26261  01022C  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 26262  010230  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 26263  010234  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 26264  010238  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 26265                           
 26266                           ;motor.c: 83: lookup *= 100;
 26267  01023C  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 26268  010240  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 26269  010244  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 26270  010248  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 26271  01024C  0E64               	movlw	100
 26272  01024E  0100               	movlb	0	; () banked
 26273  010250  6F64               	movwf	___lmul@multiplicand& (0+255),b
 26274  010252  0E00               	movlw	0
 26275  010254  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26276  010256  0E00               	movlw	0
 26277  010258  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26278  01025A  0E00               	movlw	0
 26279  01025C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26280  01025E  ECD0  F0A3         	call	___lmul	;wreg free
 26281  010262  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 26282  010266  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 26283  01026A  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 26284  01026E  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 26285                           
 26286                           ;motor.c: 85: speed = (float) lookup;
 26287  010272  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 26288  010276  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 26289  01027A  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 26290  01027E  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 26291  010282  0E00               	movlw	0
 26292  010284  ECA3  F07F         	call	___xxtofl
 26293  010288  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 26294  01028C  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 26295  010290  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 26296  010294  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 26297                           
 26298                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 26299  010298  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 26300  01029C  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 26301  0102A0  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 26302  0102A4  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 26303  0102A8  C1A1  F060         	movff	_config,___xxtofl@val
 26304  0102AC  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 26305  0102B0  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 26306  0102B4  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 26307  0102B8  0E00               	movlw	0
 26308  0102BA  ECA3  F07F         	call	___xxtofl
 26309  0102BE  C060  F072         	movff	?___xxtofl,___fldiv@a
 26310  0102C2  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 26311  0102C6  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 26312  0102CA  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 26313  0102CE  EC14  F06E         	call	___fldiv	;wreg free
 26314  0102D2  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 26315  0102D6  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 26316  0102DA  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 26317  0102DE  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 26318                           
 26319                           ;motor.c: 89: return (uint16_t) speed;
 26320  0102E2  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 26321  0102E6  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 26322  0102EA  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 26323  0102EE  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 26324  0102F2  EC88  F08F         	call	___fltol	;wreg free
 26325  0102F6  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 26326  0102FA  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 26327  0102FE  0012               	return	
 26328  010300                     __end_of__motor_get_speed_in_degrees:
 26329                           	opt stack 0
 26330                           tblptru	equ	0xFF8
 26331                           tblptrh	equ	0xFF7
 26332                           tblptrl	equ	0xFF6
 26333                           tablat	equ	0xFF5
 26334                           prodh	equ	0xFF4
 26335                           prodl	equ	0xFF3
 26336                           intcon	equ	0xFF2
 26337                           postinc0	equ	0xFEE
 26338                           wreg	equ	0xFE8
 26339                           indf1	equ	0xFE7
 26340                           postinc1	equ	0xFE6
 26341                           postdec1	equ	0xFE5
 26342                           plusw1	equ	0xFE3
 26343                           fsr1h	equ	0xFE2
 26344                           fsr1l	equ	0xFE1
 26345                           indf2	equ	0xFDF
 26346                           postinc2	equ	0xFDE
 26347                           postdec2	equ	0xFDD
 26348                           plusw2	equ	0xFDB
 26349                           fsr2h	equ	0xFDA
 26350                           fsr2l	equ	0xFD9
 26351                           status	equ	0xFD8
 26352                           
 26353 ;; *************** function ___lmul *****************
 26354 ;; Defined at:
 26355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 26356 ;; Parameters:    Size  Location     Type
 26357 ;;  multiplier      4    0[BANK0 ] unsigned long 
 26358 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 26359 ;; Auto vars:     Size  Location     Type
 26360 ;;  product         4    8[BANK0 ] unsigned long 
 26361 ;; Return value:  Size  Location     Type
 26362 ;;                  4    0[BANK0 ] unsigned long 
 26363 ;; Registers used:
 26364 ;;		wreg, status,2, status,0
 26365 ;; Tracked objects:
 26366 ;;		On entry : 0/0
 26367 ;;		On exit  : 0/0
 26368 ;;		Unchanged: 0/0
 26369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26370 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26371 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26373 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26374 ;;Total ram usage:       12 bytes
 26375 ;; Hardware stack levels used:    1
 26376 ;; Hardware stack levels required when called:   10
 26377 ;; This function calls:
 26378 ;;		Nothing
 26379 ;; This function is called by:
 26380 ;;		__motor_get_speed_in_degrees
 26381 ;;		_atol
 26382 ;; This function uses a non-reentrant model
 26383 ;;
 26384                           
 26385                           	psect	text103
 26386  0147A0                     __ptext103:
 26387                           	opt stack 0
 26388  0147A0                     ___lmul:
 26389                           	opt stack 16
 26390                           
 26391                           ;incstack = 0
 26392  0147A0  0E00               	movlw	0
 26393  0147A2  0100               	movlb	0	; () banked
 26394  0147A4  6F68               	movwf	___lmul@product& (0+255),b
 26395  0147A6  0E00               	movlw	0
 26396  0147A8  6F69               	movwf	(___lmul@product+1)& (0+255),b
 26397  0147AA  0E00               	movlw	0
 26398  0147AC  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 26399  0147AE  0E00               	movlw	0
 26400  0147B0  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 26401  0147B2                     
 26402                           ; BSR set to: 0
 26403                           
 26404                           ; BSR set to: 0
 26405  0147B2  A160               	btfss	___lmul@multiplier& (0+255),0,b
 26406  0147B4  D008               	goto	l3009
 26407                           
 26408                           ; BSR set to: 0
 26409  0147B6  5164               	movf	___lmul@multiplicand& (0+255),w,b
 26410  0147B8  2768               	addwf	___lmul@product& (0+255),f,b
 26411  0147BA  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 26412  0147BC  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 26413  0147BE  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 26414  0147C0  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 26415  0147C2  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 26416  0147C4  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 26417  0147C6                     l3009:
 26418                           
 26419                           ; BSR set to: 0
 26420                           
 26421                           ; BSR set to: 0
 26422  0147C6  90D8               	bcf	status,0,c
 26423  0147C8  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 26424  0147CA  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 26425  0147CC  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 26426  0147CE  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 26427                           
 26428                           ; BSR set to: 0
 26429  0147D0  90D8               	bcf	status,0,c
 26430  0147D2  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 26431  0147D4  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 26432  0147D6  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 26433  0147D8  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 26434  0147DA  5160               	movf	___lmul@multiplier& (0+255),w,b
 26435  0147DC  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 26436  0147DE  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 26437  0147E0  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 26438  0147E2  A4D8               	btfss	status,2,c
 26439  0147E4  D7E6               	goto	l3008
 26440                           
 26441                           ; BSR set to: 0
 26442  0147E6  C068  F060         	movff	___lmul@product,?___lmul
 26443  0147EA  C069  F061         	movff	___lmul@product+1,?___lmul+1
 26444  0147EE  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 26445  0147F2  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 26446                           
 26447                           ; BSR set to: 0
 26448  0147F6  0012               	return		;funcret
 26449  0147F8                     __end_of___lmul:
 26450                           	opt stack 0
 26451                           tblptru	equ	0xFF8
 26452                           tblptrh	equ	0xFF7
 26453                           tblptrl	equ	0xFF6
 26454                           tablat	equ	0xFF5
 26455                           prodh	equ	0xFF4
 26456                           prodl	equ	0xFF3
 26457                           intcon	equ	0xFF2
 26458                           postinc0	equ	0xFEE
 26459                           wreg	equ	0xFE8
 26460                           indf1	equ	0xFE7
 26461                           postinc1	equ	0xFE6
 26462                           postdec1	equ	0xFE5
 26463                           plusw1	equ	0xFE3
 26464                           fsr1h	equ	0xFE2
 26465                           fsr1l	equ	0xFE1
 26466                           indf2	equ	0xFDF
 26467                           postinc2	equ	0xFDE
 26468                           postdec2	equ	0xFDD
 26469                           plusw2	equ	0xFDB
 26470                           fsr2h	equ	0xFDA
 26471                           fsr2l	equ	0xFD9
 26472                           status	equ	0xFD8
 26473                           
 26474 ;; *************** function __display_signed_itoa *****************
 26475 ;; Defined at:
 26476 ;;		line 120 in file "display.c"
 26477 ;; Parameters:    Size  Location     Type
 26478 ;;  value           2   47[BANK0 ] int 
 26479 ;;  text            2   49[BANK0 ] PTR unsigned char 
 26480 ;;		 -> display_prepare@temp(10), 
 26481 ;; Auto vars:     Size  Location     Type
 26482 ;;		None
 26483 ;; Return value:  Size  Location     Type
 26484 ;;                  1    wreg      void 
 26485 ;; Registers used:
 26486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26487 ;; Tracked objects:
 26488 ;;		On entry : 0/0
 26489 ;;		On exit  : 0/0
 26490 ;;		Unchanged: 0/0
 26491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26496 ;;Total ram usage:        4 bytes
 26497 ;; Hardware stack levels used:    1
 26498 ;; Hardware stack levels required when called:   14
 26499 ;; This function calls:
 26500 ;;		__display_padded_itoa
 26501 ;; This function is called by:
 26502 ;;		_display_prepare
 26503 ;; This function uses a non-reentrant model
 26504 ;;
 26505                           
 26506                           	psect	text104
 26507  014E8C                     __ptext104:
 26508                           	opt stack 0
 26509  014E8C                     __display_signed_itoa:
 26510                           	opt stack 15
 26511                           
 26512                           ;display.c: 122: if(value<0)
 26513                           
 26514                           ; BSR set to: 0
 26515                           ;incstack = 0
 26516  014E8C  0100               	movlb	0	; () banked
 26517  014E8E  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 26518  014E90  D00A               	goto	l1326
 26519                           
 26520                           ; BSR set to: 0
 26521                           ;display.c: 123: {;display.c: 124: value = -value;
 26522  014E92  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 26523  014E94  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 26524  014E96  B0D8               	btfsc	status,0,c
 26525  014E98  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;display.c: 125: text[0] = '-';
 26529  014E9A  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 26530  014E9E  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 26531  014EA2  0E2D               	movlw	45
 26532  014EA4  D005               	goto	L37
 26533  014EA6                     l1326:
 26534                           
 26535                           ; BSR set to: 0
 26536                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 26537                           
 26538                           ; BSR set to: 0
 26539  014EA6  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 26540  014EAA  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 26541  014EAE  0E2B               	movlw	43
 26542  014EB0                     L37:
 26543  014EB0  6EDF               	movwf	indf2,c
 26544                           
 26545                           ; BSR set to: 0
 26546                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 26547                           
 26548                           ; BSR set to: 0
 26549  014EB2  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 26550  014EB6  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 26551  014EBA  0E00               	movlw	0
 26552  014EBC  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26553  014EBE  0E01               	movlw	1
 26554  014EC0  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 26555  014EC2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26556  014EC4  0E00               	movlw	0
 26557  014EC6  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 26558  014EC8  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26559  014ECA  EC39  F08E         	call	__display_padded_itoa	;wreg free
 26560  014ECE  0012               	return		;funcret
 26561  014ED0                     __end_of__display_signed_itoa:
 26562                           	opt stack 0
 26563                           tblptru	equ	0xFF8
 26564                           tblptrh	equ	0xFF7
 26565                           tblptrl	equ	0xFF6
 26566                           tablat	equ	0xFF5
 26567                           prodh	equ	0xFF4
 26568                           prodl	equ	0xFF3
 26569                           intcon	equ	0xFF2
 26570                           postinc0	equ	0xFEE
 26571                           wreg	equ	0xFE8
 26572                           indf1	equ	0xFE7
 26573                           postinc1	equ	0xFE6
 26574                           postdec1	equ	0xFE5
 26575                           plusw1	equ	0xFE3
 26576                           fsr1h	equ	0xFE2
 26577                           fsr1l	equ	0xFE1
 26578                           indf2	equ	0xFDF
 26579                           postinc2	equ	0xFDE
 26580                           postdec2	equ	0xFDD
 26581                           plusw2	equ	0xFDB
 26582                           fsr2h	equ	0xFDA
 26583                           fsr2l	equ	0xFD9
 26584                           status	equ	0xFD8
 26585                           
 26586 ;; *************** function __display_padded_itoa *****************
 26587 ;; Defined at:
 26588 ;;		line 98 in file "display.c"
 26589 ;; Parameters:    Size  Location     Type
 26590 ;;  value           2   24[BANK0 ] int 
 26591 ;;  length          1   26[BANK0 ] unsigned char 
 26592 ;;  text            2   27[BANK0 ] PTR unsigned char 
 26593 ;;		 -> display_prepare@temp(10), 
 26594 ;; Auto vars:     Size  Location     Type
 26595 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 26596 ;;  padding         1   46[BANK0 ] unsigned char 
 26597 ;;  pos             1   45[BANK0 ] unsigned char 
 26598 ;;  len             1   44[BANK0 ] unsigned char 
 26599 ;; Return value:  Size  Location     Type
 26600 ;;                  1    wreg      void 
 26601 ;; Registers used:
 26602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26603 ;; Tracked objects:
 26604 ;;		On entry : 0/0
 26605 ;;		On exit  : 0/0
 26606 ;;		Unchanged: 0/0
 26607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26608 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26609 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26610 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26611 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26612 ;;Total ram usage:       23 bytes
 26613 ;; Hardware stack levels used:    1
 26614 ;; Hardware stack levels required when called:   13
 26615 ;; This function calls:
 26616 ;;		_itoa
 26617 ;;		_strlen
 26618 ;; This function is called by:
 26619 ;;		__display_signed_itoa
 26620 ;;		_display_prepare
 26621 ;; This function uses a non-reentrant model
 26622 ;;
 26623                           
 26624                           	psect	text105
 26625  011C72                     __ptext105:
 26626                           	opt stack 0
 26627  011C72                     __display_padded_itoa:
 26628                           	opt stack 15
 26629                           
 26630                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 26631                           
 26632                           ;incstack = 0
 26633  011C72  0E82               	movlw	low __display_padded_itoa@tmp
 26634  011C74  0100               	movlb	0	; () banked
 26635  011C76  6F70               	movwf	itoa@buf& (0+255),b
 26636  011C78  0E00               	movlw	high __display_padded_itoa@tmp
 26637  011C7A  6F71               	movwf	(itoa@buf+1)& (0+255),b
 26638  011C7C  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 26639  011C80  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 26640  011C84  0E00               	movlw	0
 26641  011C86  6F75               	movwf	(itoa@base+1)& (0+255),b
 26642  011C88  0E0A               	movlw	10
 26643  011C8A  6F74               	movwf	itoa@base& (0+255),b
 26644  011C8C  EC68  F0A7         	call	_itoa	;wreg free
 26645                           
 26646                           ;display.c: 106: len = strlen(tmp);
 26647  011C90  0E82               	movlw	low __display_padded_itoa@tmp
 26648  011C92  0100               	movlb	0	; () banked
 26649  011C94  6F60               	movwf	strlen@s& (0+255),b
 26650  011C96  0E00               	movlw	high __display_padded_itoa@tmp
 26651  011C98  6F61               	movwf	(strlen@s+1)& (0+255),b
 26652  011C9A  EC0E  F0A8         	call	_strlen	;wreg free
 26653  011C9E  0100               	movlb	0	; () banked
 26654  011CA0  5160               	movf	?_strlen& (0+255),w,b
 26655  011CA2  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 26656                           
 26657                           ; BSR set to: 0
 26658                           ;display.c: 107: padding = 0;
 26659  011CA4  0E00               	movlw	0
 26660  011CA6  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 26661                           
 26662                           ;display.c: 108: while((padding+len)<length)
 26663  011CA8  D00B               	goto	l1317
 26664  011CAA                     
 26665                           ; BSR set to: 0
 26666                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 26667                           
 26668                           ; BSR set to: 0
 26669  011CAA  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 26670  011CAC  0D01               	mullw	1
 26671  011CAE  50F3               	movf	prodl,w,c
 26672  011CB0  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 26673  011CB2  6ED9               	movwf	fsr2l,c
 26674  011CB4  50F4               	movf	prodh,w,c
 26675  011CB6  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 26676  011CB8  6EDA               	movwf	fsr2h,c
 26677  011CBA  0E20               	movlw	32
 26678  011CBC  6EDF               	movwf	indf2,c
 26679                           
 26680                           ; BSR set to: 0
 26681                           ;display.c: 111: ++padding;
 26682  011CBE  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 26683  011CC0                     l1317:
 26684                           
 26685                           ; BSR set to: 0
 26686                           
 26687                           ; BSR set to: 0
 26688  011CC0  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 26689  011CC2  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 26690  011CC4  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 26691  011CC6  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 26692  011CC8  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 26693  011CCC  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 26694  011CCE  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 26695  011CD0  0E00               	movlw	0
 26696  011CD2  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 26697  011CD4  517D               	movf	??__display_padded_itoa& (0+255),w,b
 26698  011CD6  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 26699  011CD8  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 26700  011CDA  0A80               	xorlw	128
 26701  011CDC  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 26702  011CDE  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 26703  011CE0  0A80               	xorlw	128
 26704  011CE2  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 26705  011CE4  A0D8               	btfss	status,0,c
 26706  011CE6  D7E1               	goto	l1318
 26707                           
 26708                           ; BSR set to: 0
 26709                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 26710                           
 26711                           ; BSR set to: 0
 26712  011CE8  0E00               	movlw	0
 26713  011CEA  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 26714  011CEC  D018               	goto	l1320
 26715  011CEE                     
 26716                           ; BSR set to: 0
 26717                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 26718                           
 26719                           ; BSR set to: 0
 26720  011CEE  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 26721  011CF0  0D01               	mullw	1
 26722  011CF2  0E82               	movlw	low __display_padded_itoa@tmp
 26723  011CF4  24F3               	addwf	prodl,w,c
 26724  011CF6  6ED9               	movwf	fsr2l,c
 26725  011CF8  0E00               	movlw	high __display_padded_itoa@tmp
 26726  011CFA  20F4               	addwfc	prodh,w,c
 26727  011CFC  6EDA               	movwf	fsr2h,c
 26728  011CFE  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 26729  011D00  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 26730  011D04  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 26731  011D06  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 26732  011D08  0E00               	movlw	0
 26733  011D0A  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 26734  011D0C  517D               	movf	??__display_padded_itoa& (0+255),w,b
 26735  011D0E  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 26736  011D10  6EE1               	movwf	fsr1l,c
 26737  011D12  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 26738  011D14  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 26739  011D16  6EE2               	movwf	fsr1h,c
 26740  011D18  CFDF FFE7          	movff	indf2,indf1
 26741                           
 26742                           ; BSR set to: 0
 26743  011D1C  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 26744  011D1E                     l1320:
 26745                           
 26746                           ; BSR set to: 0
 26747                           
 26748                           ; BSR set to: 0
 26749  011D1E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 26750  011D20  0D01               	mullw	1
 26751  011D22  0E82               	movlw	low __display_padded_itoa@tmp
 26752  011D24  24F3               	addwf	prodl,w,c
 26753  011D26  6ED9               	movwf	fsr2l,c
 26754  011D28  0E00               	movlw	high __display_padded_itoa@tmp
 26755  011D2A  20F4               	addwfc	prodh,w,c
 26756  011D2C  6EDA               	movwf	fsr2h,c
 26757  011D2E  50DF               	movf	indf2,w,c
 26758  011D30  A4D8               	btfss	status,2,c
 26759  011D32  D7DD               	goto	l1321
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 26763                           
 26764                           ; BSR set to: 0
 26765  011D34  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 26766  011D36  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 26767  011D3A  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 26768  011D3C  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 26769  011D3E  0E00               	movlw	0
 26770  011D40  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 26771  011D42  517D               	movf	??__display_padded_itoa& (0+255),w,b
 26772  011D44  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 26773  011D46  6ED9               	movwf	fsr2l,c
 26774  011D48  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 26775  011D4A  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 26776  011D4C  6EDA               	movwf	fsr2h,c
 26777  011D4E  0E00               	movlw	0
 26778  011D50  6EDF               	movwf	indf2,c
 26779                           
 26780                           ; BSR set to: 0
 26781  011D52  0012               	return		;funcret
 26782  011D54                     __end_of__display_padded_itoa:
 26783                           	opt stack 0
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           postinc0	equ	0xFEE
 26792                           wreg	equ	0xFE8
 26793                           indf1	equ	0xFE7
 26794                           postinc1	equ	0xFE6
 26795                           postdec1	equ	0xFE5
 26796                           plusw1	equ	0xFE3
 26797                           fsr1h	equ	0xFE2
 26798                           fsr1l	equ	0xFE1
 26799                           indf2	equ	0xFDF
 26800                           postinc2	equ	0xFDE
 26801                           postdec2	equ	0xFDD
 26802                           plusw2	equ	0xFDB
 26803                           fsr2h	equ	0xFDA
 26804                           fsr2l	equ	0xFD9
 26805                           status	equ	0xFD8
 26806                           
 26807 ;; *************** function __display_itoa_long *****************
 26808 ;; Defined at:
 26809 ;;		line 202 in file "display.c"
 26810 ;; Parameters:    Size  Location     Type
 26811 ;;  value           4   77[BANK0 ] long 
 26812 ;;  decimals        1   81[BANK0 ] unsigned char 
 26813 ;;  text            2   82[BANK0 ] PTR unsigned char 
 26814 ;;		 -> display_prepare@temp(10), 
 26815 ;; Auto vars:     Size  Location     Type
 26816 ;;  short_value     2   89[BANK0 ] int 
 26817 ;;  last_digit      1   91[BANK0 ] char 
 26818 ;;  length          1   88[BANK0 ] unsigned char 
 26819 ;; Return value:  Size  Location     Type
 26820 ;;                  1    wreg      void 
 26821 ;; Registers used:
 26822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26823 ;; Tracked objects:
 26824 ;;		On entry : 0/0
 26825 ;;		On exit  : 0/0
 26826 ;;		Unchanged: 0/0
 26827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26828 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26829 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26830 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26831 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26832 ;;Total ram usage:       15 bytes
 26833 ;; Hardware stack levels used:    1
 26834 ;; Hardware stack levels required when called:   14
 26835 ;; This function calls:
 26836 ;;		___aldiv
 26837 ;;		___almod
 26838 ;;		__display_itoa
 26839 ;;		_strlen
 26840 ;; This function is called by:
 26841 ;;		_display_prepare
 26842 ;; This function uses a non-reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text106
 26846  0109D2                     __ptext106:
 26847                           	opt stack 0
 26848  0109D2                     __display_itoa_long:
 26849                           	opt stack 15
 26850                           
 26851                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 26852                           
 26853                           ; BSR set to: 0
 26854                           ;incstack = 0
 26855  0109D2  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 26856  0109D6  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 26857                           
 26858                           ;display.c: 209: if(short_value==value)
 26859  0109DA  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 26860  0109DE  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 26861  0109E2  0E00               	movlw	0
 26862  0109E4  0100               	movlb	0	; () banked
 26863  0109E6  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 26864  0109E8  0EFF               	movlw	255
 26865  0109EA  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 26866  0109EC  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 26867  0109EE  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 26868  0109F0  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 26869  0109F2  E117               	bnz	l16979
 26870  0109F4  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 26871  0109F6  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 26872  0109F8  E114               	bnz	l16979
 26873  0109FA  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 26874  0109FC  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 26875  0109FE  E111               	bnz	l16979
 26876  010A00  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 26877  010A02  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 26878  010A04  A4D8               	btfss	status,2,c
 26879  010A06  D00D               	goto	l1353
 26880                           
 26881                           ; BSR set to: 0
 26882                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 26883  010A08  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 26884  010A0C  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 26885  010A10  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 26886  010A14  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 26887  010A18  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 26888  010A1C  EC4B  F075         	call	__display_itoa	;wreg free
 26889                           
 26890                           ;display.c: 212: }
 26891  010A20  0012               	return	
 26892  010A22                     l1353:
 26893  010A22                     l16979:
 26894                           
 26895                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 26896  010A22  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 26897  010A26  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 26898  010A2A  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 26899  010A2E  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 26900  010A32  0E0A               	movlw	10
 26901  010A34  0100               	movlb	0	; () banked
 26902  010A36  6F64               	movwf	___aldiv@divisor& (0+255),b
 26903  010A38  0E00               	movlw	0
 26904  010A3A  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 26905  010A3C  0E00               	movlw	0
 26906  010A3E  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 26907  010A40  0E00               	movlw	0
 26908  010A42  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 26909  010A44  ECE1  F092         	call	___aldiv	;wreg free
 26910  010A48  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 26911  010A4C  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 26912                           
 26913                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 26914  010A50  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 26915  010A54  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 26916  010A58  0100               	movlb	0	; () banked
 26917  010A5A  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 26918  010A5C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26919  010A5E  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 26920  010A62  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 26921  010A66  EC4B  F075         	call	__display_itoa	;wreg free
 26922                           
 26923                           ;display.c: 217: length = strlen(text);
 26924  010A6A  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 26925  010A6E  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 26926  010A72  EC0E  F0A8         	call	_strlen	;wreg free
 26927  010A76  0100               	movlb	0	; () banked
 26928  010A78  5160               	movf	?_strlen& (0+255),w,b
 26929  010A7A  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 26930                           
 26931                           ; BSR set to: 0
 26932                           ;display.c: 218: last_digit = value % 10;
 26933  010A7C  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 26934  010A80  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 26935  010A84  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 26936  010A88  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 26937  010A8C  0E0A               	movlw	10
 26938  010A8E  6F64               	movwf	___almod@divisor& (0+255),b
 26939  010A90  0E00               	movlw	0
 26940  010A92  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 26941  010A94  0E00               	movlw	0
 26942  010A96  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 26943  010A98  0E00               	movlw	0
 26944  010A9A  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 26945  010A9C  ECF2  F096         	call	___almod	;wreg free
 26946  010AA0  0100               	movlb	0	; () banked
 26947  010AA2  5160               	movf	?___almod& (0+255),w,b
 26948  010AA4  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 26949                           
 26950                           ; BSR set to: 0
 26951                           ;display.c: 219: if(last_digit<0)
 26952  010AA6  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 26953                           
 26954                           ; BSR set to: 0
 26955                           ;display.c: 220: last_digit = -last_digit;
 26956  010AA8  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 26957                           
 26958                           ; BSR set to: 0
 26959                           ;display.c: 221: text[length] = last_digit + 0x30;
 26960                           
 26961                           ; BSR set to: 0
 26962  010AAA  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 26963  010AAC  0D01               	mullw	1
 26964  010AAE  50F3               	movf	prodl,w,c
 26965  010AB0  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 26966  010AB2  6ED9               	movwf	fsr2l,c
 26967  010AB4  50F4               	movf	prodh,w,c
 26968  010AB6  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 26969  010AB8  6EDA               	movwf	fsr2h,c
 26970  010ABA  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 26971  010ABC  0F30               	addlw	48
 26972  010ABE  6EDF               	movwf	indf2,c
 26973                           
 26974                           ; BSR set to: 0
 26975                           ;display.c: 222: text[length+1] = 0x00;
 26976  010AC0  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 26977  010AC2  6FB4               	movwf	??__display_itoa_long& (0+255),b
 26978  010AC4  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 26979  010AC6  0E01               	movlw	1
 26980  010AC8  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 26981  010ACA  0E00               	movlw	0
 26982  010ACC  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 26983  010ACE  51B4               	movf	??__display_itoa_long& (0+255),w,b
 26984  010AD0  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 26985  010AD2  6ED9               	movwf	fsr2l,c
 26986  010AD4  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 26987  010AD6  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 26988  010AD8  6EDA               	movwf	fsr2h,c
 26989  010ADA  0E00               	movlw	0
 26990  010ADC  6EDF               	movwf	indf2,c
 26991  010ADE  0012               	return	
 26992  010AE0                     __end_of__display_itoa_long:
 26993                           	opt stack 0
 26994                           tblptru	equ	0xFF8
 26995                           tblptrh	equ	0xFF7
 26996                           tblptrl	equ	0xFF6
 26997                           tablat	equ	0xFF5
 26998                           prodh	equ	0xFF4
 26999                           prodl	equ	0xFF3
 27000                           intcon	equ	0xFF2
 27001                           postinc0	equ	0xFEE
 27002                           wreg	equ	0xFE8
 27003                           indf1	equ	0xFE7
 27004                           postinc1	equ	0xFE6
 27005                           postdec1	equ	0xFE5
 27006                           plusw1	equ	0xFE3
 27007                           fsr1h	equ	0xFE2
 27008                           fsr1l	equ	0xFE1
 27009                           indf2	equ	0xFDF
 27010                           postinc2	equ	0xFDE
 27011                           postdec2	equ	0xFDD
 27012                           plusw2	equ	0xFDB
 27013                           fsr2h	equ	0xFDA
 27014                           fsr2l	equ	0xFD9
 27015                           status	equ	0xFD8
 27016                           
 27017 ;; *************** function __display_itoa *****************
 27018 ;; Defined at:
 27019 ;;		line 134 in file "display.c"
 27020 ;; Parameters:    Size  Location     Type
 27021 ;;  value           2   53[BANK0 ] int 
 27022 ;;  decimals        1   55[BANK0 ] unsigned char 
 27023 ;;  text            2   56[BANK0 ] PTR unsigned char 
 27024 ;;		 -> display_prepare@temp(10), display_content(80), 
 27025 ;; Auto vars:     Size  Location     Type
 27026 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 27027 ;;  pos             1   76[BANK0 ] unsigned char 
 27028 ;;  missing         1   75[BANK0 ] char 
 27029 ;;  len             1   74[BANK0 ] unsigned char 
 27030 ;; Return value:  Size  Location     Type
 27031 ;;                  1    wreg      void 
 27032 ;; Registers used:
 27033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27034 ;; Tracked objects:
 27035 ;;		On entry : 0/0
 27036 ;;		On exit  : 0/0
 27037 ;;		Unchanged: 0/0
 27038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27039 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27040 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27041 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27042 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27043 ;;Total ram usage:       24 bytes
 27044 ;; Hardware stack levels used:    1
 27045 ;; Hardware stack levels required when called:   13
 27046 ;; This function calls:
 27047 ;;		_itoa
 27048 ;;		_strlen
 27049 ;; This function is called by:
 27050 ;;		__display_itoa_long
 27051 ;;		_display_prepare
 27052 ;; This function uses a non-reentrant model
 27053 ;;
 27054                           
 27055                           	psect	text107
 27056  00EA96                     __ptext107:
 27057                           	opt stack 0
 27058  00EA96                     __display_itoa:
 27059                           	opt stack 15
 27060                           
 27061                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 27062                           
 27063                           ;incstack = 0
 27064  00EA96  0EA0               	movlw	low __display_itoa@tmp
 27065  00EA98  0100               	movlb	0	; () banked
 27066  00EA9A  6F70               	movwf	itoa@buf& (0+255),b
 27067  00EA9C  0E00               	movlw	high __display_itoa@tmp
 27068  00EA9E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27069  00EAA0  C095  F072         	movff	__display_itoa@value,itoa@val
 27070  00EAA4  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 27071  00EAA8  0E00               	movlw	0
 27072  00EAAA  6F75               	movwf	(itoa@base+1)& (0+255),b
 27073  00EAAC  0E0A               	movlw	10
 27074  00EAAE  6F74               	movwf	itoa@base& (0+255),b
 27075  00EAB0  EC68  F0A7         	call	_itoa	;wreg free
 27076                           
 27077                           ;display.c: 141: len = strlen(tmp);
 27078  00EAB4  0EA0               	movlw	low __display_itoa@tmp
 27079  00EAB6  0100               	movlb	0	; () banked
 27080  00EAB8  6F60               	movwf	strlen@s& (0+255),b
 27081  00EABA  0E00               	movlw	high __display_itoa@tmp
 27082  00EABC  6F61               	movwf	(strlen@s+1)& (0+255),b
 27083  00EABE  EC0E  F0A8         	call	_strlen	;wreg free
 27084  00EAC2  0100               	movlb	0	; () banked
 27085  00EAC4  5160               	movf	?_strlen& (0+255),w,b
 27086  00EAC6  6FAA               	movwf	__display_itoa@len& (0+255),b
 27087                           
 27088                           ; BSR set to: 0
 27089                           ;display.c: 143: if(value<0)
 27090  00EAC8  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 27091  00EACA  D054               	goto	l1331
 27092                           
 27093                           ; BSR set to: 0
 27094                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 27095  00EACC  51AA               	movf	__display_itoa@len& (0+255),w,b
 27096  00EACE  0800               	sublw	0
 27097  00EAD0  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 27098  00EAD2  0F02               	addlw	2
 27099  00EAD4  6FAB               	movwf	__display_itoa@missing& (0+255),b
 27100                           
 27101                           ;display.c: 146: if(missing>0)
 27102  00EAD6  51AB               	movf	__display_itoa@missing& (0+255),w,b
 27103  00EAD8  0A80               	xorlw	128
 27104  00EADA  0F7F               	addlw	-129
 27105  00EADC  A0D8               	btfss	status,0,c
 27106  00EADE  D090               	goto	l1338
 27107                           
 27108                           ; BSR set to: 0
 27109                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 27110  00EAE0  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 27111  00EAE4                     l15381:
 27112                           
 27113                           ; BSR set to: 0
 27114  00EAE4  29AC               	incf	__display_itoa@pos& (0+255),w,b
 27115  00EAE6  B4D8               	btfsc	status,2,c
 27116  00EAE8  D042               	goto	u14410
 27117                           
 27118                           ; BSR set to: 0
 27119                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 27120                           
 27121                           ; BSR set to: 0
 27122                           
 27123                           ; BSR set to: 0
 27124  00EAEA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27125  00EAEC  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 27126  00EAEE  D004               	goto	u14400
 27127  00EAF0  0AFF               	xorlw	255
 27128  00EAF2  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 27129  00EAF4  B0D8               	btfsc	status,0,c
 27130  00EAF6  D02A               	goto	l1335
 27131  00EAF8                     u14400:
 27132                           
 27133                           ; BSR set to: 0
 27134                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 27135  00EAF8  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 27136  00EAFC  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27137  00EAFE  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 27138  00EB00  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 27139  00EB02  1F9A               	comf	??__display_itoa& (0+255),f,b
 27140  00EB04  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 27141  00EB06  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 27142  00EB08  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 27143  00EB0A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27144  00EB0C  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 27145  00EB0E  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 27146  00EB10  519A               	movf	??__display_itoa& (0+255),w,b
 27147  00EB12  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 27148  00EB14  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27149  00EB16  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 27150  00EB18  0E01               	movlw	1
 27151  00EB1A  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 27152  00EB1C  0E00               	movlw	0
 27153  00EB1E  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 27154  00EB20  0EA0               	movlw	low __display_itoa@tmp
 27155  00EB22  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 27156  00EB24  6ED9               	movwf	fsr2l,c
 27157  00EB26  0E00               	movlw	high __display_itoa@tmp
 27158  00EB28  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 27159  00EB2A  6EDA               	movwf	fsr2h,c
 27160  00EB2C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27161  00EB2E  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 27162  00EB30  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 27163  00EB32  0E01               	movlw	1
 27164  00EB34  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 27165  00EB36  0E00               	movlw	0
 27166  00EB38  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 27167  00EB3A  0EA0               	movlw	low __display_itoa@tmp
 27168  00EB3C  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 27169  00EB3E  6EE1               	movwf	fsr1l,c
 27170  00EB40  0E00               	movlw	high __display_itoa@tmp
 27171  00EB42  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 27172  00EB44  6EE2               	movwf	fsr1h,c
 27173  00EB46  CFDF FFE7          	movff	indf2,indf1
 27174                           
 27175                           ;display.c: 153: }
 27176  00EB4A  D00F               	goto	l1336
 27177  00EB4C                     l1335:
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 27181                           
 27182                           ; BSR set to: 0
 27183  00EB4C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27184  00EB4E  6F9A               	movwf	??__display_itoa& (0+255),b
 27185  00EB50  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27186  00EB52  0E01               	movlw	1
 27187  00EB54  279A               	addwf	??__display_itoa& (0+255),f,b
 27188  00EB56  0E00               	movlw	0
 27189  00EB58  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 27190  00EB5A  0EA0               	movlw	low __display_itoa@tmp
 27191  00EB5C  259A               	addwf	??__display_itoa& (0+255),w,b
 27192  00EB5E  6ED9               	movwf	fsr2l,c
 27193  00EB60  0E00               	movlw	high __display_itoa@tmp
 27194  00EB62  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 27195  00EB64  6EDA               	movwf	fsr2h,c
 27196  00EB66  0E30               	movlw	48
 27197  00EB68  6EDF               	movwf	indf2,c
 27198  00EB6A                     l1336:
 27199                           
 27200                           ; BSR set to: 0
 27201                           
 27202                           ; BSR set to: 0
 27203  00EB6A  07AC               	decf	__display_itoa@pos& (0+255),f,b
 27204  00EB6C  D7BB               	goto	l15381
 27205  00EB6E                     u14410:
 27206                           
 27207                           ; BSR set to: 0
 27208                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 27209                           
 27210                           ; BSR set to: 0
 27211  00EB6E  5197               	movf	__display_itoa@decimals& (0+255),w,b
 27212  00EB70  0F02               	addlw	2
 27213  00EB72  D045               	goto	L38
 27214  00EB74                     l1331:
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 27218                           
 27219                           ; BSR set to: 0
 27220  00EB74  51AA               	movf	__display_itoa@len& (0+255),w,b
 27221  00EB76  0800               	sublw	0
 27222  00EB78  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 27223  00EB7A  6F9A               	movwf	??__display_itoa& (0+255),b
 27224  00EB7C  299A               	incf	??__display_itoa& (0+255),w,b
 27225  00EB7E  6FAB               	movwf	__display_itoa@missing& (0+255),b
 27226                           
 27227                           ;display.c: 165: if(missing>0)
 27228  00EB80  51AB               	movf	__display_itoa@missing& (0+255),w,b
 27229  00EB82  0A80               	xorlw	128
 27230  00EB84  0F7F               	addlw	-129
 27231  00EB86  A0D8               	btfss	status,0,c
 27232  00EB88  D03B               	goto	l1338
 27233                           
 27234                           ; BSR set to: 0
 27235                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 27236  00EB8A  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 27237  00EB8E                     l15401:
 27238                           
 27239                           ; BSR set to: 0
 27240  00EB8E  29AC               	incf	__display_itoa@pos& (0+255),w,b
 27241  00EB90  B4D8               	btfsc	status,2,c
 27242  00EB92  D034               	goto	u14450
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 27246                           
 27247                           ; BSR set to: 0
 27248                           
 27249                           ; BSR set to: 0
 27250  00EB94  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27251  00EB96  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 27252  00EB98  D004               	goto	u14440
 27253  00EB9A  0AFF               	xorlw	255
 27254  00EB9C  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 27255  00EB9E  B0D8               	btfsc	status,0,c
 27256  00EBA0  D021               	goto	l1341
 27257  00EBA2                     u14440:
 27258                           
 27259                           ; BSR set to: 0
 27260                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 27261  00EBA2  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 27262  00EBA6  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27263  00EBA8  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 27264  00EBAA  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 27265  00EBAC  1F9A               	comf	??__display_itoa& (0+255),f,b
 27266  00EBAE  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 27267  00EBB0  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 27268  00EBB2  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 27269  00EBB4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27270  00EBB6  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 27271  00EBB8  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 27272  00EBBA  519A               	movf	??__display_itoa& (0+255),w,b
 27273  00EBBC  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 27274  00EBBE  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27275  00EBC0  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 27276  00EBC2  0EA0               	movlw	low __display_itoa@tmp
 27277  00EBC4  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 27278  00EBC6  6ED9               	movwf	fsr2l,c
 27279  00EBC8  0E00               	movlw	high __display_itoa@tmp
 27280  00EBCA  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 27281  00EBCC  6EDA               	movwf	fsr2h,c
 27282  00EBCE  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27283  00EBD0  0D01               	mullw	1
 27284  00EBD2  0EA0               	movlw	low __display_itoa@tmp
 27285  00EBD4  24F3               	addwf	prodl,w,c
 27286  00EBD6  6EE1               	movwf	fsr1l,c
 27287  00EBD8  0E00               	movlw	high __display_itoa@tmp
 27288  00EBDA  20F4               	addwfc	prodh,w,c
 27289  00EBDC  6EE2               	movwf	fsr1h,c
 27290  00EBDE  CFDF FFE7          	movff	indf2,indf1
 27291                           
 27292                           ;display.c: 172: }
 27293  00EBE2  D00A               	goto	l1342
 27294  00EBE4                     l1341:
 27295                           
 27296                           ; BSR set to: 0
 27297                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 27298                           
 27299                           ; BSR set to: 0
 27300  00EBE4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27301  00EBE6  0D01               	mullw	1
 27302  00EBE8  0EA0               	movlw	low __display_itoa@tmp
 27303  00EBEA  24F3               	addwf	prodl,w,c
 27304  00EBEC  6ED9               	movwf	fsr2l,c
 27305  00EBEE  0E00               	movlw	high __display_itoa@tmp
 27306  00EBF0  20F4               	addwfc	prodh,w,c
 27307  00EBF2  6EDA               	movwf	fsr2h,c
 27308  00EBF4  0E30               	movlw	48
 27309  00EBF6  6EDF               	movwf	indf2,c
 27310  00EBF8                     l1342:
 27311                           
 27312                           ; BSR set to: 0
 27313                           
 27314                           ; BSR set to: 0
 27315  00EBF8  07AC               	decf	__display_itoa@pos& (0+255),f,b
 27316  00EBFA  D7C9               	goto	l15401
 27317  00EBFC                     u14450:
 27318                           
 27319                           ; BSR set to: 0
 27320                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 27321                           
 27322                           ; BSR set to: 0
 27323  00EBFC  2997               	incf	__display_itoa@decimals& (0+255),w,b
 27324  00EBFE                     L38:
 27325  00EBFE  6FAA               	movwf	__display_itoa@len& (0+255),b
 27326  00EC00                     l1338:
 27327                           
 27328                           ; BSR set to: 0
 27329                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 27330                           
 27331                           ; BSR set to: 0
 27332  00EC00  5197               	movf	__display_itoa@decimals& (0+255),w,b
 27333  00EC02  0800               	sublw	0
 27334  00EC04  25AA               	addwf	__display_itoa@len& (0+255),w,b
 27335  00EC06  6F9A               	movwf	??__display_itoa& (0+255),b
 27336  00EC08  059A               	decf	??__display_itoa& (0+255),w,b
 27337  00EC0A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27338                           
 27339                           ; BSR set to: 0
 27340                           ;display.c: 184: for(pos=0;pos<len;++pos)
 27341  00EC0C  0E00               	movlw	0
 27342  00EC0E  6FAC               	movwf	__display_itoa@pos& (0+255),b
 27343  00EC10  D023               	goto	l1343
 27344  00EC12                     
 27345                           ; BSR set to: 0
 27346                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 27347                           
 27348                           ; BSR set to: 0
 27349  00EC12  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27350  00EC14  0D01               	mullw	1
 27351  00EC16  0EA0               	movlw	low __display_itoa@tmp
 27352  00EC18  24F3               	addwf	prodl,w,c
 27353  00EC1A  6ED9               	movwf	fsr2l,c
 27354  00EC1C  0E00               	movlw	high __display_itoa@tmp
 27355  00EC1E  20F4               	addwfc	prodh,w,c
 27356  00EC20  6EDA               	movwf	fsr2h,c
 27357  00EC22  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27358  00EC24  0D01               	mullw	1
 27359  00EC26  50F3               	movf	prodl,w,c
 27360  00EC28  2598               	addwf	__display_itoa@text& (0+255),w,b
 27361  00EC2A  6EE1               	movwf	fsr1l,c
 27362  00EC2C  50F4               	movf	prodh,w,c
 27363  00EC2E  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27364  00EC30  6EE2               	movwf	fsr1h,c
 27365  00EC32  CFDF FFE7          	movff	indf2,indf1
 27366                           
 27367                           ; BSR set to: 0
 27368                           ;display.c: 187: if(pos==decimals)
 27369  00EC36  5197               	movf	__display_itoa@decimals& (0+255),w,b
 27370  00EC38  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 27371  00EC3A  A4D8               	btfss	status,2,c
 27372  00EC3C  D00C               	goto	l1345
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;display.c: 188: {;display.c: 190: ++pos;
 27376  00EC3E  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 27377                           
 27378                           ; BSR set to: 0
 27379                           ;display.c: 191: text[pos] = '.';
 27380  00EC40  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27381  00EC42  0D01               	mullw	1
 27382  00EC44  50F3               	movf	prodl,w,c
 27383  00EC46  2598               	addwf	__display_itoa@text& (0+255),w,b
 27384  00EC48  6ED9               	movwf	fsr2l,c
 27385  00EC4A  50F4               	movf	prodh,w,c
 27386  00EC4C  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27387  00EC4E  6EDA               	movwf	fsr2h,c
 27388  00EC50  0E2E               	movlw	46
 27389  00EC52  6EDF               	movwf	indf2,c
 27390                           
 27391                           ;display.c: 192: break;
 27392  00EC54  D01E               	goto	l1347
 27393  00EC56                     l1345:
 27394                           
 27395                           ; BSR set to: 0
 27396                           
 27397                           ; BSR set to: 0
 27398  00EC56  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 27399  00EC58                     l1343:
 27400                           
 27401                           ; BSR set to: 0
 27402                           
 27403                           ; BSR set to: 0
 27404  00EC58  51AA               	movf	__display_itoa@len& (0+255),w,b
 27405  00EC5A  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 27406  00EC5C  B0D8               	btfsc	status,0,c
 27407  00EC5E  D019               	goto	l1347
 27408  00EC60  D7D8               	goto	l1344
 27409  00EC62                     
 27410                           ; BSR set to: 0
 27411                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 27412                           
 27413                           ; BSR set to: 0
 27414  00EC62  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27415  00EC64  0D01               	mullw	1
 27416  00EC66  0EA0               	movlw	low __display_itoa@tmp
 27417  00EC68  24F3               	addwf	prodl,w,c
 27418  00EC6A  6ED9               	movwf	fsr2l,c
 27419  00EC6C  0E00               	movlw	high __display_itoa@tmp
 27420  00EC6E  20F4               	addwfc	prodh,w,c
 27421  00EC70  6EDA               	movwf	fsr2h,c
 27422  00EC72  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27423  00EC74  6F9A               	movwf	??__display_itoa& (0+255),b
 27424  00EC76  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27425  00EC78  0E01               	movlw	1
 27426  00EC7A  279A               	addwf	??__display_itoa& (0+255),f,b
 27427  00EC7C  0E00               	movlw	0
 27428  00EC7E  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 27429  00EC80  519A               	movf	??__display_itoa& (0+255),w,b
 27430  00EC82  2598               	addwf	__display_itoa@text& (0+255),w,b
 27431  00EC84  6EE1               	movwf	fsr1l,c
 27432  00EC86  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27433  00EC88  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27434  00EC8A  6EE2               	movwf	fsr1h,c
 27435  00EC8C  CFDF FFE7          	movff	indf2,indf1
 27436                           
 27437                           ; BSR set to: 0
 27438  00EC90  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 27439  00EC92                     l1347:
 27440                           
 27441                           ; BSR set to: 0
 27442                           
 27443                           ; BSR set to: 0
 27444  00EC92  51AA               	movf	__display_itoa@len& (0+255),w,b
 27445  00EC94  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 27446  00EC96  A0D8               	btfss	status,0,c
 27447  00EC98  D7E4               	goto	l1348
 27448                           
 27449                           ; BSR set to: 0
 27450                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 27451                           
 27452                           ; BSR set to: 0
 27453  00EC9A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27454  00EC9C  6F9A               	movwf	??__display_itoa& (0+255),b
 27455  00EC9E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27456  00ECA0  0E01               	movlw	1
 27457  00ECA2  279A               	addwf	??__display_itoa& (0+255),f,b
 27458  00ECA4  0E00               	movlw	0
 27459  00ECA6  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 27460  00ECA8  519A               	movf	??__display_itoa& (0+255),w,b
 27461  00ECAA  2598               	addwf	__display_itoa@text& (0+255),w,b
 27462  00ECAC  6ED9               	movwf	fsr2l,c
 27463  00ECAE  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27464  00ECB0  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27465  00ECB2  6EDA               	movwf	fsr2h,c
 27466  00ECB4  0E00               	movlw	0
 27467  00ECB6  6EDF               	movwf	indf2,c
 27468                           
 27469                           ; BSR set to: 0
 27470  00ECB8  0012               	return		;funcret
 27471  00ECBA                     __end_of__display_itoa:
 27472                           	opt stack 0
 27473                           tblptru	equ	0xFF8
 27474                           tblptrh	equ	0xFF7
 27475                           tblptrl	equ	0xFF6
 27476                           tablat	equ	0xFF5
 27477                           prodh	equ	0xFF4
 27478                           prodl	equ	0xFF3
 27479                           intcon	equ	0xFF2
 27480                           postinc0	equ	0xFEE
 27481                           wreg	equ	0xFE8
 27482                           indf1	equ	0xFE7
 27483                           postinc1	equ	0xFE6
 27484                           postdec1	equ	0xFE5
 27485                           plusw1	equ	0xFE3
 27486                           fsr1h	equ	0xFE2
 27487                           fsr1l	equ	0xFE1
 27488                           indf2	equ	0xFDF
 27489                           postinc2	equ	0xFDE
 27490                           postdec2	equ	0xFDD
 27491                           plusw2	equ	0xFDB
 27492                           fsr2h	equ	0xFDA
 27493                           fsr2l	equ	0xFD9
 27494                           status	equ	0xFD8
 27495                           
 27496 ;; *************** function _strlen *****************
 27497 ;; Defined at:
 27498 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 27499 ;; Parameters:    Size  Location     Type
 27500 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 27501 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 27502 ;; Auto vars:     Size  Location     Type
 27503 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 27504 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 27505 ;; Return value:  Size  Location     Type
 27506 ;;                  2    0[BANK0 ] unsigned int 
 27507 ;; Registers used:
 27508 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27509 ;; Tracked objects:
 27510 ;;		On entry : 0/0
 27511 ;;		On exit  : 0/0
 27512 ;;		Unchanged: 0/0
 27513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27517 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27518 ;;Total ram usage:        6 bytes
 27519 ;; Hardware stack levels used:    1
 27520 ;; Hardware stack levels required when called:   10
 27521 ;; This function calls:
 27522 ;;		Nothing
 27523 ;; This function is called by:
 27524 ;;		__display_padded_itoa
 27525 ;;		__display_itoa
 27526 ;;		__display_itoa_long
 27527 ;;		_display_prepare
 27528 ;; This function uses a non-reentrant model
 27529 ;;
 27530                           
 27531                           	psect	text108
 27532  01501C                     __ptext108:
 27533                           	opt stack 0
 27534  01501C                     _strlen:
 27535                           	opt stack 19
 27536                           
 27537                           ; BSR set to: 0
 27538                           ;incstack = 0
 27539  01501C  C060  F064         	movff	strlen@s,strlen@cp
 27540  015020  C061  F065         	movff	strlen@s+1,strlen@cp+1
 27541  015024  D003               	goto	l3745
 27542  015026  0100               	movlb	0	; () banked
 27543  015028  4B64               	infsnz	strlen@cp& (0+255),f,b
 27544  01502A  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 27545  01502C                     l3745:
 27546                           
 27547                           ; BSR set to: 0
 27548  01502C  C064  FFD9         	movff	strlen@cp,fsr2l
 27549  015030  C065  FFDA         	movff	strlen@cp+1,fsr2h
 27550  015034  50DF               	movf	indf2,w,c
 27551  015036  A4D8               	btfss	status,2,c
 27552  015038  D7F6               	goto	l3746
 27553  01503A  C060  F062         	movff	strlen@s,??_strlen
 27554  01503E  C061  F063         	movff	strlen@s+1,??_strlen+1
 27555  015042  0100               	movlb	0	; () banked
 27556  015044  1F62               	comf	??_strlen& (0+255),f,b
 27557  015046  1F63               	comf	(??_strlen+1)& (0+255),f,b
 27558  015048  4B62               	infsnz	??_strlen& (0+255),f,b
 27559  01504A  2B63               	incf	(??_strlen+1)& (0+255),f,b
 27560  01504C  5164               	movf	strlen@cp& (0+255),w,b
 27561  01504E  2562               	addwf	??_strlen& (0+255),w,b
 27562  015050  6F60               	movwf	?_strlen& (0+255),b
 27563  015052  5165               	movf	(strlen@cp+1)& (0+255),w,b
 27564  015054  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 27565  015056  6F61               	movwf	(?_strlen+1)& (0+255),b
 27566  015058  0012               	return	
 27567  01505A                     __end_of_strlen:
 27568                           	opt stack 0
 27569                           tblptru	equ	0xFF8
 27570                           tblptrh	equ	0xFF7
 27571                           tblptrl	equ	0xFF6
 27572                           tablat	equ	0xFF5
 27573                           prodh	equ	0xFF4
 27574                           prodl	equ	0xFF3
 27575                           intcon	equ	0xFF2
 27576                           postinc0	equ	0xFEE
 27577                           wreg	equ	0xFE8
 27578                           indf1	equ	0xFE7
 27579                           postinc1	equ	0xFE6
 27580                           postdec1	equ	0xFE5
 27581                           plusw1	equ	0xFE3
 27582                           fsr1h	equ	0xFE2
 27583                           fsr1l	equ	0xFE1
 27584                           indf2	equ	0xFDF
 27585                           postinc2	equ	0xFDE
 27586                           postdec2	equ	0xFDD
 27587                           plusw2	equ	0xFDB
 27588                           fsr2h	equ	0xFDA
 27589                           fsr2l	equ	0xFD9
 27590                           status	equ	0xFD8
 27591                           
 27592 ;; *************** function _itoa *****************
 27593 ;; Defined at:
 27594 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 27595 ;; Parameters:    Size  Location     Type
 27596 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 27597 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 27598 ;;  val             2   18[BANK0 ] int 
 27599 ;;  base            2   20[BANK0 ] int 
 27600 ;; Auto vars:     Size  Location     Type
 27601 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 27602 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 27603 ;; Return value:  Size  Location     Type
 27604 ;;                  2   16[BANK0 ] PTR unsigned char 
 27605 ;; Registers used:
 27606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27607 ;; Tracked objects:
 27608 ;;		On entry : 0/0
 27609 ;;		On exit  : 0/0
 27610 ;;		Unchanged: 0/0
 27611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27615 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27616 ;;Total ram usage:        8 bytes
 27617 ;; Hardware stack levels used:    1
 27618 ;; Hardware stack levels required when called:   12
 27619 ;; This function calls:
 27620 ;;		_utoa
 27621 ;; This function is called by:
 27622 ;;		__display_padded_itoa
 27623 ;;		__display_itoa
 27624 ;;		__display_itoa_u16
 27625 ;; This function uses a non-reentrant model
 27626 ;;
 27627                           
 27628                           	psect	text109
 27629  014ED0                     __ptext109:
 27630                           	opt stack 0
 27631  014ED0                     _itoa:
 27632                           	opt stack 14
 27633                           
 27634                           ; BSR set to: 0
 27635                           ;incstack = 0
 27636  014ED0  C070  F076         	movff	itoa@buf,itoa@cp
 27637  014ED4  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 27638  014ED8  0100               	movlb	0	; () banked
 27639  014EDA  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 27640  014EDC  D00C               	goto	l3697
 27641                           
 27642                           ; BSR set to: 0
 27643  014EDE  C070  FFD9         	movff	itoa@buf,fsr2l
 27644  014EE2  C071  FFDA         	movff	itoa@buf+1,fsr2h
 27645  014EE6  0E2D               	movlw	45
 27646  014EE8  6EDF               	movwf	indf2,c
 27647                           
 27648                           ; BSR set to: 0
 27649  014EEA  4B70               	infsnz	itoa@buf& (0+255),f,b
 27650  014EEC  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 27651                           
 27652                           ; BSR set to: 0
 27653  014EEE  6D72               	negf	itoa@val& (0+255),b
 27654  014EF0  1F73               	comf	(itoa@val+1)& (0+255),f,b
 27655  014EF2  B0D8               	btfsc	status,0,c
 27656  014EF4  2B73               	incf	(itoa@val+1)& (0+255),f,b
 27657  014EF6                     l3697:
 27658                           
 27659                           ; BSR set to: 0
 27660                           
 27661                           ; BSR set to: 0
 27662  014EF6  C070  F067         	movff	itoa@buf,utoa@buf
 27663  014EFA  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 27664  014EFE  C072  F069         	movff	itoa@val,utoa@val
 27665  014F02  C073  F06A         	movff	itoa@val+1,utoa@val+1
 27666  014F06  C074  F06B         	movff	itoa@base,utoa@base
 27667  014F0A  C075  F06C         	movff	itoa@base+1,utoa@base+1
 27668  014F0E  EC9E  F097         	call	_utoa	;wreg free
 27669  014F12  0012               	return	
 27670  014F14                     __end_of_itoa:
 27671                           	opt stack 0
 27672                           tblptru	equ	0xFF8
 27673                           tblptrh	equ	0xFF7
 27674                           tblptrl	equ	0xFF6
 27675                           tablat	equ	0xFF5
 27676                           prodh	equ	0xFF4
 27677                           prodl	equ	0xFF3
 27678                           intcon	equ	0xFF2
 27679                           postinc0	equ	0xFEE
 27680                           wreg	equ	0xFE8
 27681                           indf1	equ	0xFE7
 27682                           postinc1	equ	0xFE6
 27683                           postdec1	equ	0xFE5
 27684                           plusw1	equ	0xFE3
 27685                           fsr1h	equ	0xFE2
 27686                           fsr1l	equ	0xFE1
 27687                           indf2	equ	0xFDF
 27688                           postinc2	equ	0xFDE
 27689                           postdec2	equ	0xFDD
 27690                           plusw2	equ	0xFDB
 27691                           fsr2h	equ	0xFDA
 27692                           fsr2l	equ	0xFD9
 27693                           status	equ	0xFD8
 27694                           
 27695 ;; *************** function _utoa *****************
 27696 ;; Defined at:
 27697 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 27698 ;; Parameters:    Size  Location     Type
 27699 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 27700 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 27701 ;;  val             2    9[BANK0 ] unsigned int 
 27702 ;;  base            2   11[BANK0 ] int 
 27703 ;; Auto vars:     Size  Location     Type
 27704 ;;  v               2   13[BANK0 ] unsigned int 
 27705 ;;  c               1   15[BANK0 ] unsigned char 
 27706 ;; Return value:  Size  Location     Type
 27707 ;;                  2    7[BANK0 ] PTR unsigned char 
 27708 ;; Registers used:
 27709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27710 ;; Tracked objects:
 27711 ;;		On entry : 0/0
 27712 ;;		On exit  : 0/0
 27713 ;;		Unchanged: 0/0
 27714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27715 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27716 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27718 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27719 ;;Total ram usage:        9 bytes
 27720 ;; Hardware stack levels used:    1
 27721 ;; Hardware stack levels required when called:   11
 27722 ;; This function calls:
 27723 ;;		___lwdiv
 27724 ;;		___lwmod
 27725 ;; This function is called by:
 27726 ;;		_itoa
 27727 ;; This function uses a non-reentrant model
 27728 ;;
 27729                           
 27730                           	psect	text110
 27731  012F3C                     __ptext110:
 27732                           	opt stack 0
 27733  012F3C                     _utoa:
 27734                           	opt stack 14
 27735                           
 27736                           ;incstack = 0
 27737  012F3C  C069  F06D         	movff	utoa@val,utoa@v
 27738  012F40  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 27739  012F44  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 27740  012F48  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 27741  012F4C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 27742  012F50  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 27743  012F54  ECFE  F0A4         	call	___lwdiv	;wreg free
 27744  012F58  C060  F06D         	movff	?___lwdiv,utoa@v
 27745  012F5C  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 27746  012F60  0100               	movlb	0	; () banked
 27747  012F62  4B67               	infsnz	utoa@buf& (0+255),f,b
 27748  012F64  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 27749                           
 27750                           ; BSR set to: 0
 27751  012F66  516D               	movf	utoa@v& (0+255),w,b
 27752  012F68  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 27753  012F6A  A4D8               	btfss	status,2,c
 27754  012F6C  D7EB               	goto	l3701
 27755                           
 27756                           ; BSR set to: 0
 27757                           
 27758                           ; BSR set to: 0
 27759  012F6E  C067  FFD9         	movff	utoa@buf,fsr2l
 27760  012F72  C068  FFDA         	movff	utoa@buf+1,fsr2h
 27761  012F76  0E00               	movlw	0
 27762  012F78  6EDF               	movwf	indf2,c
 27763                           
 27764                           ; BSR set to: 0
 27765  012F7A  0767               	decf	utoa@buf& (0+255),f,b
 27766  012F7C  A0D8               	btfss	status,0,c
 27767  012F7E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 27768  012F80                     
 27769                           ; BSR set to: 0
 27770                           
 27771                           ; BSR set to: 0
 27772  012F80  C069  F060         	movff	utoa@val,___lwmod@dividend
 27773  012F84  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 27774  012F88  C06B  F062         	movff	utoa@base,___lwmod@divisor
 27775  012F8C  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 27776  012F90  EC8A  F0A7         	call	___lwmod	;wreg free
 27777  012F94  0100               	movlb	0	; () banked
 27778  012F96  5160               	movf	?___lwmod& (0+255),w,b
 27779  012F98  6F6F               	movwf	utoa@c& (0+255),b
 27780                           
 27781                           ; BSR set to: 0
 27782  012F9A  C069  F060         	movff	utoa@val,___lwdiv@dividend
 27783  012F9E  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 27784  012FA2  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 27785  012FA6  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 27786  012FAA  ECFE  F0A4         	call	___lwdiv	;wreg free
 27787  012FAE  C060  F069         	movff	?___lwdiv,utoa@val
 27788  012FB2  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 27789  012FB6  0E09               	movlw	9
 27790  012FB8  0100               	movlb	0	; () banked
 27791  012FBA  656F               	cpfsgt	utoa@c& (0+255),b
 27792  012FBC  D002               	goto	l3704
 27793                           
 27794                           ; BSR set to: 0
 27795  012FBE  0E07               	movlw	7
 27796  012FC0  276F               	addwf	utoa@c& (0+255),f,b
 27797  012FC2                     l3704:
 27798                           
 27799                           ; BSR set to: 0
 27800  012FC2  0E30               	movlw	48
 27801  012FC4  276F               	addwf	utoa@c& (0+255),f,b
 27802                           
 27803                           ; BSR set to: 0
 27804  012FC6  C067  FFD9         	movff	utoa@buf,fsr2l
 27805  012FCA  C068  FFDA         	movff	utoa@buf+1,fsr2h
 27806  012FCE  C06F  FFDF         	movff	utoa@c,indf2
 27807                           
 27808                           ; BSR set to: 0
 27809  012FD2  0767               	decf	utoa@buf& (0+255),f,b
 27810  012FD4  A0D8               	btfss	status,0,c
 27811  012FD6  0768               	decf	(utoa@buf+1)& (0+255),f,b
 27812                           
 27813                           ; BSR set to: 0
 27814  012FD8  5169               	movf	utoa@val& (0+255),w,b
 27815  012FDA  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 27816  012FDC  A4D8               	btfss	status,2,c
 27817  012FDE  D7D0               	goto	l3703
 27818                           
 27819                           ; BSR set to: 0
 27820                           ;	Return value of _utoa is never used
 27821                           
 27822                           ; BSR set to: 0
 27823  012FE0  4B67               	infsnz	utoa@buf& (0+255),f,b
 27824  012FE2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 27825  012FE4  0012               	return	
 27826  012FE6                     __end_of_utoa:
 27827                           	opt stack 0
 27828                           tblptru	equ	0xFF8
 27829                           tblptrh	equ	0xFF7
 27830                           tblptrl	equ	0xFF6
 27831                           tablat	equ	0xFF5
 27832                           prodh	equ	0xFF4
 27833                           prodl	equ	0xFF3
 27834                           intcon	equ	0xFF2
 27835                           postinc0	equ	0xFEE
 27836                           wreg	equ	0xFE8
 27837                           indf1	equ	0xFE7
 27838                           postinc1	equ	0xFE6
 27839                           postdec1	equ	0xFE5
 27840                           plusw1	equ	0xFE3
 27841                           fsr1h	equ	0xFE2
 27842                           fsr1l	equ	0xFE1
 27843                           indf2	equ	0xFDF
 27844                           postinc2	equ	0xFDE
 27845                           postdec2	equ	0xFDD
 27846                           plusw2	equ	0xFDB
 27847                           fsr2h	equ	0xFDA
 27848                           fsr2l	equ	0xFD9
 27849                           status	equ	0xFD8
 27850                           
 27851 ;; *************** function ___lwmod *****************
 27852 ;; Defined at:
 27853 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 27854 ;; Parameters:    Size  Location     Type
 27855 ;;  dividend        2    0[BANK0 ] unsigned int 
 27856 ;;  divisor         2    2[BANK0 ] unsigned int 
 27857 ;; Auto vars:     Size  Location     Type
 27858 ;;  counter         1    4[BANK0 ] unsigned char 
 27859 ;; Return value:  Size  Location     Type
 27860 ;;                  2    0[BANK0 ] unsigned int 
 27861 ;; Registers used:
 27862 ;;		wreg, status,2, status,0
 27863 ;; Tracked objects:
 27864 ;;		On entry : 0/0
 27865 ;;		On exit  : 0/0
 27866 ;;		Unchanged: 0/0
 27867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27871 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27872 ;;Total ram usage:        5 bytes
 27873 ;; Hardware stack levels used:    1
 27874 ;; Hardware stack levels required when called:   10
 27875 ;; This function calls:
 27876 ;;		Nothing
 27877 ;; This function is called by:
 27878 ;;		_utoa
 27879 ;; This function uses a non-reentrant model
 27880 ;;
 27881                           
 27882                           	psect	text111
 27883  014F14                     __ptext111:
 27884                           	opt stack 0
 27885  014F14                     ___lwmod:
 27886                           	opt stack 14
 27887                           
 27888                           ; BSR set to: 0
 27889                           ;incstack = 0
 27890  014F14  0100               	movlb	0	; () banked
 27891  014F16  5162               	movf	___lwmod@divisor& (0+255),w,b
 27892  014F18  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 27893  014F1A  B4D8               	btfsc	status,2,c
 27894  014F1C  D018               	goto	l3494
 27895                           
 27896                           ; BSR set to: 0
 27897  014F1E  0E01               	movlw	1
 27898  014F20  6F64               	movwf	___lwmod@counter& (0+255),b
 27899  014F22  D004               	goto	l3489
 27900  014F24                     
 27901                           ; BSR set to: 0
 27902                           
 27903                           ; BSR set to: 0
 27904  014F24  90D8               	bcf	status,0,c
 27905  014F26  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 27906  014F28  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 27907  014F2A  2B64               	incf	___lwmod@counter& (0+255),f,b
 27908  014F2C                     l3489:
 27909                           
 27910                           ; BSR set to: 0
 27911                           
 27912                           ; BSR set to: 0
 27913  014F2C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 27914  014F2E  D7FA               	goto	l3490
 27915  014F30                     u11320:
 27916                           
 27917                           ; BSR set to: 0
 27918                           
 27919                           ; BSR set to: 0
 27920                           
 27921                           ; BSR set to: 0
 27922  014F30  5162               	movf	___lwmod@divisor& (0+255),w,b
 27923  014F32  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 27924  014F34  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27925  014F36  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 27926  014F38  A0D8               	btfss	status,0,c
 27927  014F3A  D004               	goto	l3493
 27928                           
 27929                           ; BSR set to: 0
 27930  014F3C  5162               	movf	___lwmod@divisor& (0+255),w,b
 27931  014F3E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 27932  014F40  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27933  014F42  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 27934  014F44                     l3493:
 27935                           
 27936                           ; BSR set to: 0
 27937                           
 27938                           ; BSR set to: 0
 27939  014F44  90D8               	bcf	status,0,c
 27940  014F46  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 27941  014F48  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 27942                           
 27943                           ; BSR set to: 0
 27944  014F4A  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 27945  014F4C  D7F1               	goto	u11320
 27946  014F4E                     l3494:
 27947                           
 27948                           ; BSR set to: 0
 27949                           
 27950                           ; BSR set to: 0
 27951  014F4E  C060  F060         	movff	___lwmod@dividend,?___lwmod
 27952  014F52  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 27953                           
 27954                           ; BSR set to: 0
 27955  014F56  0012               	return		;funcret
 27956  014F58                     __end_of___lwmod:
 27957                           	opt stack 0
 27958                           tblptru	equ	0xFF8
 27959                           tblptrh	equ	0xFF7
 27960                           tblptrl	equ	0xFF6
 27961                           tablat	equ	0xFF5
 27962                           prodh	equ	0xFF4
 27963                           prodl	equ	0xFF3
 27964                           intcon	equ	0xFF2
 27965                           postinc0	equ	0xFEE
 27966                           wreg	equ	0xFE8
 27967                           indf1	equ	0xFE7
 27968                           postinc1	equ	0xFE6
 27969                           postdec1	equ	0xFE5
 27970                           plusw1	equ	0xFE3
 27971                           fsr1h	equ	0xFE2
 27972                           fsr1l	equ	0xFE1
 27973                           indf2	equ	0xFDF
 27974                           postinc2	equ	0xFDE
 27975                           postdec2	equ	0xFDD
 27976                           plusw2	equ	0xFDB
 27977                           fsr2h	equ	0xFDA
 27978                           fsr2l	equ	0xFD9
 27979                           status	equ	0xFD8
 27980                           
 27981 ;; *************** function ___lwdiv *****************
 27982 ;; Defined at:
 27983 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 27984 ;; Parameters:    Size  Location     Type
 27985 ;;  dividend        2    0[BANK0 ] unsigned int 
 27986 ;;  divisor         2    2[BANK0 ] unsigned int 
 27987 ;; Auto vars:     Size  Location     Type
 27988 ;;  quotient        2    4[BANK0 ] unsigned int 
 27989 ;;  counter         1    6[BANK0 ] unsigned char 
 27990 ;; Return value:  Size  Location     Type
 27991 ;;                  2    0[BANK0 ] unsigned int 
 27992 ;; Registers used:
 27993 ;;		wreg, status,2, status,0
 27994 ;; Tracked objects:
 27995 ;;		On entry : 0/0
 27996 ;;		On exit  : 0/0
 27997 ;;		Unchanged: 0/0
 27998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27999 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28000 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28002 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28003 ;;Total ram usage:        7 bytes
 28004 ;; Hardware stack levels used:    1
 28005 ;; Hardware stack levels required when called:   10
 28006 ;; This function calls:
 28007 ;;		Nothing
 28008 ;; This function is called by:
 28009 ;;		_utoa
 28010 ;; This function uses a non-reentrant model
 28011 ;;
 28012                           
 28013                           	psect	text112
 28014  0149FC                     __ptext112:
 28015                           	opt stack 0
 28016  0149FC                     ___lwdiv:
 28017                           	opt stack 14
 28018                           
 28019                           ; BSR set to: 0
 28020                           ;incstack = 0
 28021  0149FC  0E00               	movlw	0
 28022  0149FE  0100               	movlb	0	; () banked
 28023  014A00  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28024  014A02  0E00               	movlw	0
 28025  014A04  6F64               	movwf	___lwdiv@quotient& (0+255),b
 28026                           
 28027                           ; BSR set to: 0
 28028  014A06  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28029  014A08  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28030  014A0A  B4D8               	btfsc	status,2,c
 28031  014A0C  D01C               	goto	l3484
 28032                           
 28033                           ; BSR set to: 0
 28034  014A0E  0E01               	movlw	1
 28035  014A10  6F66               	movwf	___lwdiv@counter& (0+255),b
 28036  014A12  D004               	goto	l3479
 28037  014A14                     
 28038                           ; BSR set to: 0
 28039                           
 28040                           ; BSR set to: 0
 28041  014A14  90D8               	bcf	status,0,c
 28042  014A16  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 28043  014A18  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28044  014A1A  2B66               	incf	___lwdiv@counter& (0+255),f,b
 28045  014A1C                     l3479:
 28046                           
 28047                           ; BSR set to: 0
 28048                           
 28049                           ; BSR set to: 0
 28050  014A1C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28051  014A1E  D7FA               	goto	l3480
 28052  014A20                     u11290:
 28053                           
 28054                           ; BSR set to: 0
 28055                           
 28056                           ; BSR set to: 0
 28057                           
 28058                           ; BSR set to: 0
 28059  014A20  90D8               	bcf	status,0,c
 28060  014A22  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 28061  014A24  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 28062                           
 28063                           ; BSR set to: 0
 28064  014A26  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28065  014A28  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 28066  014A2A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28067  014A2C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 28068  014A2E  A0D8               	btfss	status,0,c
 28069  014A30  D005               	goto	l3483
 28070                           
 28071                           ; BSR set to: 0
 28072  014A32  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28073  014A34  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 28074  014A36  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28075  014A38  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 28076                           
 28077                           ; BSR set to: 0
 28078  014A3A  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 28079  014A3C                     l3483:
 28080                           
 28081                           ; BSR set to: 0
 28082                           
 28083                           ; BSR set to: 0
 28084  014A3C  90D8               	bcf	status,0,c
 28085  014A3E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 28086  014A40  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 28087                           
 28088                           ; BSR set to: 0
 28089  014A42  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 28090  014A44  D7ED               	goto	u11290
 28091  014A46                     l3484:
 28092                           
 28093                           ; BSR set to: 0
 28094                           
 28095                           ; BSR set to: 0
 28096  014A46  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 28097  014A4A  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28098                           
 28099                           ; BSR set to: 0
 28100  014A4E  0012               	return		;funcret
 28101  014A50                     __end_of___lwdiv:
 28102                           	opt stack 0
 28103                           tblptru	equ	0xFF8
 28104                           tblptrh	equ	0xFF7
 28105                           tblptrl	equ	0xFF6
 28106                           tablat	equ	0xFF5
 28107                           prodh	equ	0xFF4
 28108                           prodl	equ	0xFF3
 28109                           intcon	equ	0xFF2
 28110                           postinc0	equ	0xFEE
 28111                           wreg	equ	0xFE8
 28112                           indf1	equ	0xFE7
 28113                           postinc1	equ	0xFE6
 28114                           postdec1	equ	0xFE5
 28115                           plusw1	equ	0xFE3
 28116                           fsr1h	equ	0xFE2
 28117                           fsr1l	equ	0xFE1
 28118                           indf2	equ	0xFDF
 28119                           postinc2	equ	0xFDE
 28120                           postdec2	equ	0xFDD
 28121                           plusw2	equ	0xFDB
 28122                           fsr2h	equ	0xFDA
 28123                           fsr2l	equ	0xFD9
 28124                           status	equ	0xFD8
 28125                           
 28126 ;; *************** function ___almod *****************
 28127 ;; Defined at:
 28128 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 28129 ;; Parameters:    Size  Location     Type
 28130 ;;  dividend        4    0[BANK0 ] long 
 28131 ;;  divisor         4    4[BANK0 ] long 
 28132 ;; Auto vars:     Size  Location     Type
 28133 ;;  sign            1    9[BANK0 ] unsigned char 
 28134 ;;  counter         1    8[BANK0 ] unsigned char 
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  4    0[BANK0 ] long 
 28137 ;; Registers used:
 28138 ;;		wreg, status,2, status,0
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/0
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28144 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28147 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28148 ;;Total ram usage:       10 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:   10
 28151 ;; This function calls:
 28152 ;;		Nothing
 28153 ;; This function is called by:
 28154 ;;		__display_itoa_long
 28155 ;; This function uses a non-reentrant model
 28156 ;;
 28157                           
 28158                           	psect	text113
 28159  012DE4                     __ptext113:
 28160                           	opt stack 0
 28161  012DE4                     ___almod:
 28162                           	opt stack 18
 28163                           
 28164                           ; BSR set to: 0
 28165                           ;incstack = 0
 28166  012DE4  0E00               	movlw	0
 28167  012DE6  0100               	movlb	0	; () banked
 28168  012DE8  6F69               	movwf	___almod@sign& (0+255),b
 28169                           
 28170                           ; BSR set to: 0
 28171  012DEA  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 28172  012DEC  D00A               	goto	l3081
 28173                           
 28174                           ; BSR set to: 0
 28175  012DEE  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 28176  012DF0  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 28177  012DF2  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 28178  012DF4  6D60               	negf	___almod@dividend& (0+255),b
 28179  012DF6  0E00               	movlw	0
 28180  012DF8  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 28181  012DFA  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 28182  012DFC  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 28183                           
 28184                           ; BSR set to: 0
 28185  012DFE  0E01               	movlw	1
 28186  012E00  6F69               	movwf	___almod@sign& (0+255),b
 28187  012E02                     l3081:
 28188                           
 28189                           ; BSR set to: 0
 28190                           
 28191                           ; BSR set to: 0
 28192  012E02  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 28193  012E04  D008               	goto	l3082
 28194                           
 28195                           ; BSR set to: 0
 28196  012E06  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 28197  012E08  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 28198  012E0A  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 28199  012E0C  6D64               	negf	___almod@divisor& (0+255),b
 28200  012E0E  0E00               	movlw	0
 28201  012E10  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 28202  012E12  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 28203  012E14  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 28204  012E16                     l3082:
 28205                           
 28206                           ; BSR set to: 0
 28207                           
 28208                           ; BSR set to: 0
 28209  012E16  5164               	movf	___almod@divisor& (0+255),w,b
 28210  012E18  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 28211  012E1A  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 28212  012E1C  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 28213  012E1E  B4D8               	btfsc	status,2,c
 28214  012E20  D024               	goto	l3089
 28215                           
 28216                           ; BSR set to: 0
 28217  012E22  0E01               	movlw	1
 28218  012E24  6F68               	movwf	___almod@counter& (0+255),b
 28219  012E26  D006               	goto	l3084
 28220  012E28                     
 28221                           ; BSR set to: 0
 28222                           
 28223                           ; BSR set to: 0
 28224  012E28  90D8               	bcf	status,0,c
 28225  012E2A  3764               	rlcf	___almod@divisor& (0+255),f,b
 28226  012E2C  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 28227  012E2E  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 28228  012E30  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 28229  012E32  2B68               	incf	___almod@counter& (0+255),f,b
 28230  012E34                     l3084:
 28231                           
 28232                           ; BSR set to: 0
 28233                           
 28234                           ; BSR set to: 0
 28235  012E34  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 28236  012E36  D7F8               	goto	l3085
 28237  012E38                     u15300:
 28238                           
 28239                           ; BSR set to: 0
 28240                           
 28241                           ; BSR set to: 0
 28242                           
 28243                           ; BSR set to: 0
 28244  012E38  5164               	movf	___almod@divisor& (0+255),w,b
 28245  012E3A  5D60               	subwf	___almod@dividend& (0+255),w,b
 28246  012E3C  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 28247  012E3E  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 28248  012E40  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 28249  012E42  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 28250  012E44  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 28251  012E46  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 28252  012E48  A0D8               	btfss	status,0,c
 28253  012E4A  D008               	goto	l3088
 28254                           
 28255                           ; BSR set to: 0
 28256  012E4C  5164               	movf	___almod@divisor& (0+255),w,b
 28257  012E4E  5F60               	subwf	___almod@dividend& (0+255),f,b
 28258  012E50  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 28259  012E52  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 28260  012E54  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 28261  012E56  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 28262  012E58  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 28263  012E5A  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 28264  012E5C                     l3088:
 28265                           
 28266                           ; BSR set to: 0
 28267                           
 28268                           ; BSR set to: 0
 28269  012E5C  90D8               	bcf	status,0,c
 28270  012E5E  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 28271  012E60  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 28272  012E62  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 28273  012E64  3364               	rrcf	___almod@divisor& (0+255),f,b
 28274                           
 28275                           ; BSR set to: 0
 28276  012E66  2F68               	decfsz	___almod@counter& (0+255),f,b
 28277  012E68  D7E7               	goto	u15300
 28278  012E6A                     l3089:
 28279                           
 28280                           ; BSR set to: 0
 28281                           
 28282                           ; BSR set to: 0
 28283                           
 28284                           ; BSR set to: 0
 28285  012E6A  5169               	movf	___almod@sign& (0+255),w,b
 28286  012E6C  B4D8               	btfsc	status,2,c
 28287  012E6E  D008               	goto	l3090
 28288                           
 28289                           ; BSR set to: 0
 28290  012E70  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 28291  012E72  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 28292  012E74  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 28293  012E76  6D60               	negf	___almod@dividend& (0+255),b
 28294  012E78  0E00               	movlw	0
 28295  012E7A  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 28296  012E7C  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 28297  012E7E  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 28298  012E80                     l3090:
 28299                           
 28300                           ; BSR set to: 0
 28301                           
 28302                           ; BSR set to: 0
 28303  012E80  C060  F060         	movff	___almod@dividend,?___almod
 28304  012E84  C061  F061         	movff	___almod@dividend+1,?___almod+1
 28305  012E88  C062  F062         	movff	___almod@dividend+2,?___almod+2
 28306  012E8C  C063  F063         	movff	___almod@dividend+3,?___almod+3
 28307  012E90  0012               	return	
 28308  012E92                     __end_of___almod:
 28309                           	opt stack 0
 28310                           tblptru	equ	0xFF8
 28311                           tblptrh	equ	0xFF7
 28312                           tblptrl	equ	0xFF6
 28313                           tablat	equ	0xFF5
 28314                           prodh	equ	0xFF4
 28315                           prodl	equ	0xFF3
 28316                           intcon	equ	0xFF2
 28317                           postinc0	equ	0xFEE
 28318                           wreg	equ	0xFE8
 28319                           indf1	equ	0xFE7
 28320                           postinc1	equ	0xFE6
 28321                           postdec1	equ	0xFE5
 28322                           plusw1	equ	0xFE3
 28323                           fsr1h	equ	0xFE2
 28324                           fsr1l	equ	0xFE1
 28325                           indf2	equ	0xFDF
 28326                           postinc2	equ	0xFDE
 28327                           postdec2	equ	0xFDD
 28328                           plusw2	equ	0xFDB
 28329                           fsr2h	equ	0xFDA
 28330                           fsr2l	equ	0xFD9
 28331                           status	equ	0xFD8
 28332                           
 28333 ;; *************** function ___aldiv *****************
 28334 ;; Defined at:
 28335 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 28336 ;; Parameters:    Size  Location     Type
 28337 ;;  dividend        4    0[BANK0 ] long 
 28338 ;;  divisor         4    4[BANK0 ] long 
 28339 ;; Auto vars:     Size  Location     Type
 28340 ;;  quotient        4   10[BANK0 ] long 
 28341 ;;  sign            1    9[BANK0 ] unsigned char 
 28342 ;;  counter         1    8[BANK0 ] unsigned char 
 28343 ;; Return value:  Size  Location     Type
 28344 ;;                  4    0[BANK0 ] long 
 28345 ;; Registers used:
 28346 ;;		wreg, status,2, status,0
 28347 ;; Tracked objects:
 28348 ;;		On entry : 0/0
 28349 ;;		On exit  : 0/0
 28350 ;;		Unchanged: 0/0
 28351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28352 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28353 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28355 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28356 ;;Total ram usage:       14 bytes
 28357 ;; Hardware stack levels used:    1
 28358 ;; Hardware stack levels required when called:   10
 28359 ;; This function calls:
 28360 ;;		Nothing
 28361 ;; This function is called by:
 28362 ;;		__display_itoa_long
 28363 ;; This function uses a non-reentrant model
 28364 ;;
 28365                           
 28366                           	psect	text114
 28367  0125C2                     __ptext114:
 28368                           	opt stack 0
 28369  0125C2                     ___aldiv:
 28370                           	opt stack 18
 28371                           
 28372                           ; BSR set to: 0
 28373                           ;incstack = 0
 28374  0125C2  0E00               	movlw	0
 28375  0125C4  0100               	movlb	0	; () banked
 28376  0125C6  6F69               	movwf	___aldiv@sign& (0+255),b
 28377                           
 28378                           ; BSR set to: 0
 28379  0125C8  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 28380  0125CA  D00A               	goto	l3068
 28381                           
 28382                           ; BSR set to: 0
 28383  0125CC  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 28384  0125CE  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 28385  0125D0  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 28386  0125D2  6D64               	negf	___aldiv@divisor& (0+255),b
 28387  0125D4  0E00               	movlw	0
 28388  0125D6  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 28389  0125D8  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 28390  0125DA  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 28391                           
 28392                           ; BSR set to: 0
 28393  0125DC  0E01               	movlw	1
 28394  0125DE  6F69               	movwf	___aldiv@sign& (0+255),b
 28395  0125E0                     l3068:
 28396                           
 28397                           ; BSR set to: 0
 28398                           
 28399                           ; BSR set to: 0
 28400  0125E0  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 28401  0125E2  D00A               	goto	l3069
 28402                           
 28403                           ; BSR set to: 0
 28404  0125E4  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 28405  0125E6  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 28406  0125E8  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 28407  0125EA  6D60               	negf	___aldiv@dividend& (0+255),b
 28408  0125EC  0E00               	movlw	0
 28409  0125EE  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 28410  0125F0  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 28411  0125F2  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 28412                           
 28413                           ; BSR set to: 0
 28414  0125F4  0E01               	movlw	1
 28415  0125F6  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 28416  0125F8                     l3069:
 28417                           
 28418                           ; BSR set to: 0
 28419                           
 28420                           ; BSR set to: 0
 28421  0125F8  0E00               	movlw	0
 28422  0125FA  6F6A               	movwf	___aldiv@quotient& (0+255),b
 28423  0125FC  0E00               	movlw	0
 28424  0125FE  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 28425  012600  0E00               	movlw	0
 28426  012602  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 28427  012604  0E00               	movlw	0
 28428  012606  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 28429                           
 28430                           ; BSR set to: 0
 28431  012608  5164               	movf	___aldiv@divisor& (0+255),w,b
 28432  01260A  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 28433  01260C  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 28434  01260E  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 28435  012610  B4D8               	btfsc	status,2,c
 28436  012612  D02A               	goto	l3076
 28437                           
 28438                           ; BSR set to: 0
 28439  012614  0E01               	movlw	1
 28440  012616  6F68               	movwf	___aldiv@counter& (0+255),b
 28441  012618  D006               	goto	l3071
 28442  01261A                     
 28443                           ; BSR set to: 0
 28444                           
 28445                           ; BSR set to: 0
 28446  01261A  90D8               	bcf	status,0,c
 28447  01261C  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 28448  01261E  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 28449  012620  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 28450  012622  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 28451  012624  2B68               	incf	___aldiv@counter& (0+255),f,b
 28452  012626                     l3071:
 28453                           
 28454                           ; BSR set to: 0
 28455                           
 28456                           ; BSR set to: 0
 28457  012626  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 28458  012628  D7F8               	goto	l3072
 28459  01262A                     u15240:
 28460                           
 28461                           ; BSR set to: 0
 28462                           
 28463                           ; BSR set to: 0
 28464                           
 28465                           ; BSR set to: 0
 28466  01262A  90D8               	bcf	status,0,c
 28467  01262C  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 28468  01262E  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 28469  012630  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 28470  012632  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 28471                           
 28472                           ; BSR set to: 0
 28473  012634  5164               	movf	___aldiv@divisor& (0+255),w,b
 28474  012636  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 28475  012638  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 28476  01263A  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 28477  01263C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 28478  01263E  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 28479  012640  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 28480  012642  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 28481  012644  A0D8               	btfss	status,0,c
 28482  012646  D009               	goto	l3075
 28483                           
 28484                           ; BSR set to: 0
 28485  012648  5164               	movf	___aldiv@divisor& (0+255),w,b
 28486  01264A  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 28487  01264C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 28488  01264E  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 28489  012650  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 28490  012652  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 28491  012654  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 28492  012656  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 28493                           
 28494                           ; BSR set to: 0
 28495  012658  816A               	bsf	___aldiv@quotient& (0+255),0,b
 28496  01265A                     l3075:
 28497                           
 28498                           ; BSR set to: 0
 28499                           
 28500                           ; BSR set to: 0
 28501  01265A  90D8               	bcf	status,0,c
 28502  01265C  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 28503  01265E  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 28504  012660  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 28505  012662  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 28506                           
 28507                           ; BSR set to: 0
 28508  012664  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 28509  012666  D7E1               	goto	u15240
 28510  012668                     l3076:
 28511                           
 28512                           ; BSR set to: 0
 28513                           
 28514                           ; BSR set to: 0
 28515                           
 28516                           ; BSR set to: 0
 28517  012668  5169               	movf	___aldiv@sign& (0+255),w,b
 28518  01266A  B4D8               	btfsc	status,2,c
 28519  01266C  D008               	goto	l3077
 28520                           
 28521                           ; BSR set to: 0
 28522  01266E  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 28523  012670  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 28524  012672  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 28525  012674  6D6A               	negf	___aldiv@quotient& (0+255),b
 28526  012676  0E00               	movlw	0
 28527  012678  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 28528  01267A  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 28529  01267C  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 28530  01267E                     l3077:
 28531                           
 28532                           ; BSR set to: 0
 28533                           
 28534                           ; BSR set to: 0
 28535  01267E  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 28536  012682  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 28537  012686  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 28538  01268A  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 28539  01268E  0012               	return	
 28540  012690                     __end_of___aldiv:
 28541                           	opt stack 0
 28542                           tblptru	equ	0xFF8
 28543                           tblptrh	equ	0xFF7
 28544                           tblptrl	equ	0xFF6
 28545                           tablat	equ	0xFF5
 28546                           prodh	equ	0xFF4
 28547                           prodl	equ	0xFF3
 28548                           intcon	equ	0xFF2
 28549                           postinc0	equ	0xFEE
 28550                           wreg	equ	0xFE8
 28551                           indf1	equ	0xFE7
 28552                           postinc1	equ	0xFE6
 28553                           postdec1	equ	0xFE5
 28554                           plusw1	equ	0xFE3
 28555                           fsr1h	equ	0xFE2
 28556                           fsr1l	equ	0xFE1
 28557                           indf2	equ	0xFDF
 28558                           postinc2	equ	0xFDE
 28559                           postdec2	equ	0xFDD
 28560                           plusw2	equ	0xFDB
 28561                           fsr2h	equ	0xFDA
 28562                           fsr2l	equ	0xFD9
 28563                           status	equ	0xFD8
 28564                           
 28565 ;; *************** function __display_clear *****************
 28566 ;; Defined at:
 28567 ;;		line 85 in file "display.c"
 28568 ;; Parameters:    Size  Location     Type
 28569 ;;		None
 28570 ;; Auto vars:     Size  Location     Type
 28571 ;;  col             1    3[BANK0 ] unsigned char 
 28572 ;;  row             1    2[BANK0 ] unsigned char 
 28573 ;; Return value:  Size  Location     Type
 28574 ;;                  1    wreg      void 
 28575 ;; Registers used:
 28576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28577 ;; Tracked objects:
 28578 ;;		On entry : 0/0
 28579 ;;		On exit  : 0/0
 28580 ;;		Unchanged: 0/0
 28581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28586 ;;Total ram usage:        4 bytes
 28587 ;; Hardware stack levels used:    1
 28588 ;; Hardware stack levels required when called:   10
 28589 ;; This function calls:
 28590 ;;		Nothing
 28591 ;; This function is called by:
 28592 ;;		_display_prepare
 28593 ;; This function uses a non-reentrant model
 28594 ;;
 28595                           
 28596                           	psect	text115
 28597  014D6C                     __ptext115:
 28598                           	opt stack 0
 28599  014D6C                     __display_clear:
 28600                           	opt stack 19
 28601                           
 28602                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 28603                           
 28604                           ; BSR set to: 0
 28605                           ;incstack = 0
 28606  014D6C  0E00               	movlw	0
 28607  014D6E  0100               	movlb	0	; () banked
 28608  014D70  6F62               	movwf	__display_clear@row& (0+255),b
 28609  014D72                     l16943:
 28610                           
 28611                           ; BSR set to: 0
 28612  014D72  0E03               	movlw	3
 28613  014D74  6562               	cpfsgt	__display_clear@row& (0+255),b
 28614  014D76  D001               	goto	l1310
 28615  014D78  0012               	return	
 28616  014D7A                     l1310:
 28617                           
 28618                           ; BSR set to: 0
 28619                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 28620                           
 28621                           ; BSR set to: 0
 28622  014D7A  0E00               	movlw	0
 28623  014D7C  6F63               	movwf	__display_clear@col& (0+255),b
 28624  014D7E                     l16949:
 28625                           
 28626                           ; BSR set to: 0
 28627  014D7E  0E13               	movlw	19
 28628  014D80  6563               	cpfsgt	__display_clear@col& (0+255),b
 28629  014D82  D001               	goto	l1312
 28630  014D84  D016               	goto	u16550
 28631  014D86                     l1312:
 28632                           
 28633                           ; BSR set to: 0
 28634                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 28635                           
 28636                           ; BSR set to: 0
 28637  014D86  5162               	movf	__display_clear@row& (0+255),w,b
 28638  014D88  0D14               	mullw	20
 28639  014D8A  0E34               	movlw	low _display_content
 28640  014D8C  6F60               	movwf	??__display_clear& (0+255),b
 28641  014D8E  0E02               	movlw	high _display_content
 28642  014D90  6F61               	movwf	(??__display_clear+1)& (0+255),b
 28643  014D92  50F3               	movf	prodl,w,c
 28644  014D94  2760               	addwf	??__display_clear& (0+255),f,b
 28645  014D96  50F4               	movf	prodh,w,c
 28646  014D98  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 28647  014D9A  5163               	movf	__display_clear@col& (0+255),w,b
 28648  014D9C  0D01               	mullw	1
 28649  014D9E  50F3               	movf	prodl,w,c
 28650  014DA0  2560               	addwf	??__display_clear& (0+255),w,b
 28651  014DA2  6ED9               	movwf	fsr2l,c
 28652  014DA4  50F4               	movf	prodh,w,c
 28653  014DA6  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 28654  014DA8  6EDA               	movwf	fsr2h,c
 28655  014DAA  0E20               	movlw	32
 28656  014DAC  6EDF               	movwf	indf2,c
 28657                           
 28658                           ; BSR set to: 0
 28659  014DAE  2B63               	incf	__display_clear@col& (0+255),f,b
 28660  014DB0  D7E6               	goto	l16949
 28661  014DB2                     u16550:
 28662                           
 28663                           ; BSR set to: 0
 28664                           
 28665                           ; BSR set to: 0
 28666  014DB2  2B62               	incf	__display_clear@row& (0+255),f,b
 28667  014DB4  D7DE               	goto	l16943
 28668  014DB6                     __end_of__display_clear:
 28669                           	opt stack 0
 28670                           tblptru	equ	0xFF8
 28671                           tblptrh	equ	0xFF7
 28672                           tblptrl	equ	0xFF6
 28673                           tablat	equ	0xFF5
 28674                           prodh	equ	0xFF4
 28675                           prodl	equ	0xFF3
 28676                           intcon	equ	0xFF2
 28677                           postinc0	equ	0xFEE
 28678                           wreg	equ	0xFE8
 28679                           indf1	equ	0xFE7
 28680                           postinc1	equ	0xFE6
 28681                           postdec1	equ	0xFE5
 28682                           plusw1	equ	0xFE3
 28683                           fsr1h	equ	0xFE2
 28684                           fsr1l	equ	0xFE1
 28685                           indf2	equ	0xFDF
 28686                           postinc2	equ	0xFDE
 28687                           postdec2	equ	0xFDD
 28688                           plusw2	equ	0xFDB
 28689                           fsr2h	equ	0xFDA
 28690                           fsr2l	equ	0xFD9
 28691                           status	equ	0xFD8
 28692                           
 28693 ;; *************** function _adc_read_temperature *****************
 28694 ;; Defined at:
 28695 ;;		line 44 in file "adc.c"
 28696 ;; Parameters:    Size  Location     Type
 28697 ;;		None
 28698 ;; Auto vars:     Size  Location     Type
 28699 ;;  temperature     4   43[BANK0 ] float 
 28700 ;;  adc_result      2   41[BANK0 ] unsigned int 
 28701 ;; Return value:  Size  Location     Type
 28702 ;;                  1    wreg      void 
 28703 ;; Registers used:
 28704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28705 ;; Tracked objects:
 28706 ;;		On entry : 0/0
 28707 ;;		On exit  : 0/0
 28708 ;;		Unchanged: 0/0
 28709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28711 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28713 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28714 ;;Total ram usage:        8 bytes
 28715 ;; Hardware stack levels used:    1
 28716 ;; Hardware stack levels required when called:   11
 28717 ;; This function calls:
 28718 ;;		___fladd
 28719 ;;		___flmul
 28720 ;;		___flneg
 28721 ;;		___fltol
 28722 ;;		___xxtofl
 28723 ;; This function is called by:
 28724 ;;		_main
 28725 ;; This function uses a non-reentrant model
 28726 ;;
 28727                           
 28728                           	psect	text116
 28729  00F094                     __ptext116:
 28730                           	opt stack 0
 28731  00F094                     _adc_read_temperature:
 28732                           	opt stack 19
 28733                           
 28734                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;incstack = 0
 28738  00F094  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 28739  00F098  0100               	movlb	0	; () banked
 28740  00F09A  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 28741                           
 28742                           ; BSR set to: 0
 28743                           ;adc.c: 51: adc_result <<= 8;
 28744  00F09C  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 28745  00F09E  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 28746  00F0A0  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 28747                           
 28748                           ; BSR set to: 0
 28749                           ;adc.c: 52: adc_result |= ADRESL;
 28750  00F0A2  50C3               	movf	4035,w,c	;volatile
 28751  00F0A4  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 28752                           
 28753                           ; BSR set to: 0
 28754                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 28755  00F0A6  0102               	movlb	2	; () banked
 28756  00F0A8  511F               	movf	_params& (0+255),w,b
 28757  00F0AA  0D02               	mullw	2
 28758  00F0AC  0E20               	movlw	low (_params+1)
 28759  00F0AE  24F3               	addwf	prodl,w,c
 28760  00F0B0  6ED9               	movwf	fsr2l,c
 28761  00F0B2  0E02               	movlw	high (_params+1)
 28762  00F0B4  20F4               	addwfc	prodh,w,c
 28763  00F0B6  6EDA               	movwf	fsr2h,c
 28764  00F0B8  0100               	movlb	0	; () banked
 28765  00F0BA  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 28766  00F0BC  26DE               	addwf	postinc2,f,c
 28767  00F0BE  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 28768  00F0C0  22DD               	addwfc	postdec2,f,c
 28769                           
 28770                           ; BSR set to: 0
 28771                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 28772  00F0C2  0102               	movlb	2	; () banked
 28773  00F0C4  511F               	movf	_params& (0+255),w,b
 28774  00F0C6  0D01               	mullw	1
 28775  00F0C8  0E24               	movlw	low (_params+5)
 28776  00F0CA  24F3               	addwf	prodl,w,c
 28777  00F0CC  6ED9               	movwf	fsr2l,c
 28778  00F0CE  0E02               	movlw	high (_params+5)
 28779  00F0D0  20F4               	addwfc	prodh,w,c
 28780  00F0D2  6EDA               	movwf	fsr2h,c
 28781  00F0D4  2ADF               	incf	indf2,f,c
 28782                           
 28783                           ; BSR set to: 2
 28784                           ;adc.c: 59: ADCON0bits.GO = 1;
 28785  00F0D6  82C2               	bsf	4034,1,c	;volatile
 28786                           
 28787                           ; BSR set to: 2
 28788                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 28789  00F0D8  511F               	movf	_params& (0+255),w,b
 28790  00F0DA  0D01               	mullw	1
 28791  00F0DC  0E24               	movlw	low (_params+5)
 28792  00F0DE  24F3               	addwf	prodl,w,c
 28793  00F0E0  6ED9               	movwf	fsr2l,c
 28794  00F0E2  0E02               	movlw	high (_params+5)
 28795  00F0E4  20F4               	addwfc	prodh,w,c
 28796  00F0E6  6EDA               	movwf	fsr2h,c
 28797  00F0E8  0E08               	movlw	8
 28798  00F0EA  18DE               	xorwf	postinc2,w,c
 28799  00F0EC  A4D8               	btfss	status,2,c
 28800  00F0EE  D0AF               	goto	l2868
 28801                           
 28802                           ; BSR set to: 2
 28803                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 28804  00F0F0  511F               	movf	_params& (0+255),w,b
 28805  00F0F2  0D02               	mullw	2
 28806  00F0F4  0E20               	movlw	low (_params+1)
 28807  00F0F6  24F3               	addwf	prodl,w,c
 28808  00F0F8  6ED9               	movwf	fsr2l,c
 28809  00F0FA  0E02               	movlw	high (_params+1)
 28810  00F0FC  20F4               	addwfc	prodh,w,c
 28811  00F0FE  6EDA               	movwf	fsr2h,c
 28812  00F100  CFDE F087          	movff	postinc2,??_adc_read_temperature
 28813  00F104  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 28814  00F108  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 28815  00F10C  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 28816  00F110  0100               	movlb	0	; () banked
 28817  00F112  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 28818  00F114  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 28819  00F116  0E00               	movlw	0
 28820  00F118  ECA3  F07F         	call	___xxtofl
 28821  00F11C  C060  F06E         	movff	?___xxtofl,___flneg@f1
 28822  00F120  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 28823  00F124  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 28824  00F128  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 28825  00F12C  EC8D  F0A9         	call	___flneg	;wreg free
 28826  00F130  C06E  F072         	movff	?___flneg,___fladd@b
 28827  00F134  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 28828  00F138  C070  F074         	movff	?___flneg+2,___fladd@b+2
 28829  00F13C  C071  F075         	movff	?___flneg+3,___fladd@b+3
 28830  00F140  0E00               	movlw	0
 28831  00F142  0100               	movlb	0	; () banked
 28832  00F144  6F76               	movwf	___fladd@a& (0+255),b
 28833  00F146  0E90               	movlw	144
 28834  00F148  6F77               	movwf	(___fladd@a+1)& (0+255),b
 28835  00F14A  0EA4               	movlw	164
 28836  00F14C  6F78               	movwf	(___fladd@a+2)& (0+255),b
 28837  00F14E  0E46               	movlw	70
 28838  00F150  6F79               	movwf	(___fladd@a+3)& (0+255),b
 28839  00F152  EC95  F069         	call	___fladd	;wreg free
 28840  00F156  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 28841  00F15A  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 28842  00F15E  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 28843  00F162  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 28844                           
 28845                           ;adc.c: 68: temperature *= 0.7405;
 28846  00F166  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 28847  00F16A  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 28848  00F16E  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 28849  00F172  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 28850  00F176  0E68               	movlw	104
 28851  00F178  0100               	movlb	0	; () banked
 28852  00F17A  6F72               	movwf	___flmul@a& (0+255),b
 28853  00F17C  0E91               	movlw	145
 28854  00F17E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 28855  00F180  0E3D               	movlw	61
 28856  00F182  6F74               	movwf	(___flmul@a+2)& (0+255),b
 28857  00F184  0E3F               	movlw	63
 28858  00F186  6F75               	movwf	(___flmul@a+3)& (0+255),b
 28859  00F188  ECEC  F067         	call	___flmul	;wreg free
 28860  00F18C  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 28861  00F190  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 28862  00F194  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 28863  00F198  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 28864                           
 28865                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 28866  00F19C  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 28867  00F1A0  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 28868  00F1A4  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 28869  00F1A8  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 28870  00F1AC  EC88  F08F         	call	___fltol	;wreg free
 28871  00F1B0  0102               	movlb	2	; () banked
 28872  00F1B2  511F               	movf	_params& (0+255),w,b
 28873  00F1B4  0D02               	mullw	2
 28874  00F1B6  0E98               	movlw	low (_os+39)
 28875  00F1B8  24F3               	addwf	prodl,w,c
 28876  00F1BA  6ED9               	movwf	fsr2l,c
 28877  00F1BC  0E01               	movlw	high (_os+39)
 28878  00F1BE  20F4               	addwfc	prodh,w,c
 28879  00F1C0  6EDA               	movwf	fsr2h,c
 28880  00F1C2  0100               	movlb	0	; () banked
 28881  00F1C4  C060  FFDE         	movff	?___fltol,postinc2
 28882  00F1C8  C061  FFDD         	movff	?___fltol+1,postdec2
 28883                           
 28884                           ; BSR set to: 0
 28885                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 28886  00F1CC  0102               	movlb	2	; () banked
 28887  00F1CE  511F               	movf	_params& (0+255),w,b
 28888  00F1D0  0D02               	mullw	2
 28889  00F1D2  0E20               	movlw	low (_params+1)
 28890  00F1D4  24F3               	addwf	prodl,w,c
 28891  00F1D6  6ED9               	movwf	fsr2l,c
 28892  00F1D8  0E02               	movlw	high (_params+1)
 28893  00F1DA  20F4               	addwfc	prodh,w,c
 28894  00F1DC  6EDA               	movwf	fsr2h,c
 28895  00F1DE  0E00               	movlw	0
 28896  00F1E0  6EDE               	movwf	postinc2,c
 28897  00F1E2  0E00               	movlw	0
 28898  00F1E4  6EDD               	movwf	postdec2,c
 28899                           
 28900                           ; BSR set to: 2
 28901                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 28902  00F1E6  511F               	movf	_params& (0+255),w,b
 28903  00F1E8  0D01               	mullw	1
 28904  00F1EA  0E24               	movlw	low (_params+5)
 28905  00F1EC  24F3               	addwf	prodl,w,c
 28906  00F1EE  6ED9               	movwf	fsr2l,c
 28907  00F1F0  0E02               	movlw	high (_params+5)
 28908  00F1F2  20F4               	addwfc	prodh,w,c
 28909  00F1F4  6EDA               	movwf	fsr2h,c
 28910  00F1F6  0E00               	movlw	0
 28911  00F1F8  6EDF               	movwf	indf2,c
 28912                           
 28913                           ; BSR set to: 2
 28914                           ;adc.c: 78: if(os.fan_on)
 28915  00F1FA  0101               	movlb	1	; () banked
 28916  00F1FC  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 28917  00F1FE  B4D8               	btfsc	status,2,c
 28918  00F200  D013               	goto	l2865
 28919                           
 28920                           ; BSR set to: 1
 28921                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 28922  00F202  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 28923  00F204  D006               	goto	u18180
 28924  00F206  0E60               	movlw	96
 28925  00F208  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 28926  00F20A  0E09               	movlw	9
 28927  00F20C  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 28928  00F20E  B0D8               	btfsc	status,0,c
 28929  00F210  D01E               	goto	l2868
 28930  00F212                     u18180:
 28931                           
 28932                           ; BSR set to: 1
 28933  00F212  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 28934  00F214  D006               	goto	u18190
 28935  00F216  0E60               	movlw	96
 28936  00F218  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 28937  00F21A  0E09               	movlw	9
 28938  00F21C  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 28939  00F21E  B0D8               	btfsc	status,0,c
 28940  00F220  D016               	goto	l2868
 28941  00F222                     u18190:
 28942                           
 28943                           ; BSR set to: 1
 28944                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 28945  00F222  9C8B               	bcf	3979,6,c	;volatile
 28946                           
 28947                           ; BSR set to: 1
 28948                           ;adc.c: 83: os.fan_on = 0;
 28949  00F224  0E00               	movlw	0
 28950  00F226  D012               	goto	L39
 28951  00F228                     l2865:
 28952                           
 28953                           ; BSR set to: 1
 28954                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 28955                           
 28956                           ; BSR set to: 1
 28957  00F228  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 28958  00F22A  D006               	goto	u18200
 28959  00F22C  0EC5               	movlw	197
 28960  00F22E  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 28961  00F230  0E09               	movlw	9
 28962  00F232  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 28963  00F234  B0D8               	btfsc	status,0,c
 28964  00F236  D008               	goto	u18210
 28965  00F238                     u18200:
 28966                           
 28967                           ; BSR set to: 1
 28968  00F238  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 28969  00F23A  D009               	goto	l2868
 28970  00F23C  0EC5               	movlw	197
 28971  00F23E  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 28972  00F240  0E09               	movlw	9
 28973  00F242  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 28974  00F244  A0D8               	btfss	status,0,c
 28975  00F246  D003               	goto	l2868
 28976  00F248                     u18210:
 28977                           
 28978                           ; BSR set to: 1
 28979                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 28980  00F248  8C8B               	bsf	3979,6,c	;volatile
 28981                           
 28982                           ; BSR set to: 1
 28983                           ;adc.c: 91: os.fan_on = 1;
 28984  00F24A  0E01               	movlw	1
 28985  00F24C                     L39:
 28986  00F24C  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 28987  00F24E                     l2868:
 28988                           
 28989                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 28990                           
 28991                           ; BSR set to: 1
 28992                           
 28993                           ; BSR set to: 1
 28994  00F24E  0102               	movlb	2	; () banked
 28995  00F250  511F               	movf	_params& (0+255),w,b
 28996  00F252  A4D8               	btfss	status,2,c
 28997  00F254  D007               	goto	l2871
 28998                           
 28999                           ; BSR set to: 2
 29000                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 29001  00F256  50C2               	movf	4034,w,c	;volatile
 29002  00F258  0BC3               	andlw	-61
 29003  00F25A  092C               	iorlw	44
 29004  00F25C  6EC2               	movwf	4034,c	;volatile
 29005                           
 29006                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 29007  00F25E  0E01               	movlw	1
 29008  00F260  6F1F               	movwf	_params& (0+255),b
 29009                           
 29010                           ;adc.c: 101: }
 29011  00F262  0012               	return	
 29012  00F264                     l2871:
 29013                           
 29014                           ; BSR set to: 2
 29015                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 29016                           
 29017                           ; BSR set to: 2
 29018  00F264  50C2               	movf	4034,w,c	;volatile
 29019  00F266  0BC3               	andlw	-61
 29020  00F268  0924               	iorlw	36
 29021  00F26A  6EC2               	movwf	4034,c	;volatile
 29022                           
 29023                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 29024  00F26C  0E00               	movlw	0
 29025  00F26E  6F1F               	movwf	_params& (0+255),b
 29026  00F270  0012               	return	
 29027  00F272                     __end_of_adc_read_temperature:
 29028                           	opt stack 0
 29029                           tblptru	equ	0xFF8
 29030                           tblptrh	equ	0xFF7
 29031                           tblptrl	equ	0xFF6
 29032                           tablat	equ	0xFF5
 29033                           prodh	equ	0xFF4
 29034                           prodl	equ	0xFF3
 29035                           intcon	equ	0xFF2
 29036                           postinc0	equ	0xFEE
 29037                           wreg	equ	0xFE8
 29038                           indf1	equ	0xFE7
 29039                           postinc1	equ	0xFE6
 29040                           postdec1	equ	0xFE5
 29041                           plusw1	equ	0xFE3
 29042                           fsr1h	equ	0xFE2
 29043                           fsr1l	equ	0xFE1
 29044                           indf2	equ	0xFDF
 29045                           postinc2	equ	0xFDE
 29046                           postdec2	equ	0xFDD
 29047                           plusw2	equ	0xFDB
 29048                           fsr2h	equ	0xFDA
 29049                           fsr2l	equ	0xFD9
 29050                           status	equ	0xFD8
 29051                           
 29052 ;; *************** function ___flneg *****************
 29053 ;; Defined at:
 29054 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 29055 ;; Parameters:    Size  Location     Type
 29056 ;;  f1              4   14[BANK0 ] void 
 29057 ;; Auto vars:     Size  Location     Type
 29058 ;;		None
 29059 ;; Return value:  Size  Location     Type
 29060 ;;                  4   14[BANK0 ] void 
 29061 ;; Registers used:
 29062 ;;		wreg, status,2, status,0
 29063 ;; Tracked objects:
 29064 ;;		On entry : 0/0
 29065 ;;		On exit  : 0/0
 29066 ;;		Unchanged: 0/0
 29067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29071 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29072 ;;Total ram usage:        4 bytes
 29073 ;; Hardware stack levels used:    1
 29074 ;; Hardware stack levels required when called:   10
 29075 ;; This function calls:
 29076 ;;		Nothing
 29077 ;; This function is called by:
 29078 ;;		_adc_read_temperature
 29079 ;; This function uses a non-reentrant model
 29080 ;;
 29081                           
 29082                           	psect	text117
 29083  01531A                     __ptext117:
 29084                           	opt stack 0
 29085  01531A                     ___flneg:
 29086                           	opt stack 19
 29087                           
 29088                           ; BSR set to: 2
 29089                           ;incstack = 0
 29090  01531A  0100               	movlb	0	; () banked
 29091  01531C  516E               	movf	___flneg@f1& (0+255),w,b
 29092  01531E  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 29093  015320  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 29094  015322  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 29095  015324  B4D8               	btfsc	status,2,c
 29096  015326  D008               	goto	l3264
 29097                           
 29098                           ; BSR set to: 0
 29099  015328  0E00               	movlw	0
 29100  01532A  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 29101  01532C  0E00               	movlw	0
 29102  01532E  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 29103  015330  0E00               	movlw	0
 29104  015332  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 29105  015334  0E80               	movlw	128
 29106  015336  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 29107  015338                     l3264:
 29108                           
 29109                           ; BSR set to: 0
 29110                           
 29111                           ; BSR set to: 0
 29112  015338  C06E  F06E         	movff	___flneg@f1,?___flneg
 29113  01533C  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 29114  015340  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 29115  015344  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 29116  015348  0012               	return	
 29117  01534A                     __end_of___flneg:
 29118                           	opt stack 0
 29119                           tblptru	equ	0xFF8
 29120                           tblptrh	equ	0xFF7
 29121                           tblptrl	equ	0xFF6
 29122                           tablat	equ	0xFF5
 29123                           prodh	equ	0xFF4
 29124                           prodl	equ	0xFF3
 29125                           intcon	equ	0xFF2
 29126                           postinc0	equ	0xFEE
 29127                           wreg	equ	0xFE8
 29128                           indf1	equ	0xFE7
 29129                           postinc1	equ	0xFE6
 29130                           postdec1	equ	0xFE5
 29131                           plusw1	equ	0xFE3
 29132                           fsr1h	equ	0xFE2
 29133                           fsr1l	equ	0xFE1
 29134                           indf2	equ	0xFDF
 29135                           postinc2	equ	0xFDE
 29136                           postdec2	equ	0xFDD
 29137                           plusw2	equ	0xFDB
 29138                           fsr2h	equ	0xFDA
 29139                           fsr2l	equ	0xFD9
 29140                           status	equ	0xFD8
 29141                           
 29142 ;; *************** function ___fladd *****************
 29143 ;; Defined at:
 29144 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 29145 ;; Parameters:    Size  Location     Type
 29146 ;;  b               4   18[BANK0 ] void 
 29147 ;;  a               4   22[BANK0 ] void 
 29148 ;; Auto vars:     Size  Location     Type
 29149 ;;  grs             1   37[BANK0 ] unsigned char 
 29150 ;;  bexp            1   36[BANK0 ] unsigned char 
 29151 ;;  aexp            1   35[BANK0 ] unsigned char 
 29152 ;;  signs           1   34[BANK0 ] unsigned char 
 29153 ;; Return value:  Size  Location     Type
 29154 ;;                  4   18[BANK0 ] unsigned char 
 29155 ;; Registers used:
 29156 ;;		wreg, status,2, status,0
 29157 ;; Tracked objects:
 29158 ;;		On entry : 0/0
 29159 ;;		On exit  : 0/0
 29160 ;;		Unchanged: 0/0
 29161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29163 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29164 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29165 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29166 ;;Total ram usage:       20 bytes
 29167 ;; Hardware stack levels used:    1
 29168 ;; Hardware stack levels required when called:   10
 29169 ;; This function calls:
 29170 ;;		Nothing
 29171 ;; This function is called by:
 29172 ;;		_motor_divide_jump_to_nearest
 29173 ;;		_adc_read_temperature
 29174 ;; This function uses a non-reentrant model
 29175 ;;
 29176                           
 29177                           	psect	text118
 29178  00D32A                     __ptext118:
 29179                           	opt stack 0
 29180  00D32A                     ___fladd:
 29181                           	opt stack 18
 29182                           
 29183                           ; BSR set to: 0
 29184                           ;incstack = 0
 29185  00D32A  0100               	movlb	0	; () banked
 29186  00D32C  5175               	movf	(___fladd@b+3)& (0+255),w,b
 29187  00D32E  0B80               	andlw	128
 29188  00D330  6F82               	movwf	___fladd@signs& (0+255),b
 29189  00D332  5175               	movf	(___fladd@b+3)& (0+255),w,b
 29190  00D334  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 29191  00D336  6F84               	movwf	___fladd@bexp& (0+255),b
 29192                           
 29193                           ; BSR set to: 0
 29194  00D338  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 29195                           
 29196                           ; BSR set to: 0
 29197  00D33A  8184               	bsf	___fladd@bexp& (0+255),0,b
 29198                           
 29199                           ; BSR set to: 0
 29200                           
 29201                           ; BSR set to: 0
 29202  00D33C  5184               	movf	___fladd@bexp& (0+255),w,b
 29203  00D33E  B4D8               	btfsc	status,2,c
 29204  00D340  D00D               	goto	l3504
 29205                           
 29206                           ; BSR set to: 0
 29207  00D342  2984               	incf	___fladd@bexp& (0+255),w,b
 29208  00D344  A4D8               	btfss	status,2,c
 29209  00D346  D008               	goto	l3505
 29210                           
 29211                           ; BSR set to: 0
 29212  00D348  0E00               	movlw	0
 29213  00D34A  6F72               	movwf	___fladd@b& (0+255),b
 29214  00D34C  0E00               	movlw	0
 29215  00D34E  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29216  00D350  0E00               	movlw	0
 29217  00D352  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29218  00D354  0E00               	movlw	0
 29219  00D356  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29220  00D358                     l3505:
 29221                           
 29222                           ; BSR set to: 0
 29223                           
 29224                           ; BSR set to: 0
 29225  00D358  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 29226  00D35A  D006               	goto	L40
 29227  00D35C                     l3504:
 29228                           
 29229                           ; BSR set to: 0
 29230                           
 29231                           ; BSR set to: 0
 29232  00D35C  0E00               	movlw	0
 29233  00D35E  6F72               	movwf	___fladd@b& (0+255),b
 29234  00D360  0E00               	movlw	0
 29235  00D362  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29236  00D364  0E00               	movlw	0
 29237  00D366  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29238  00D368                     L40:
 29239  00D368  0E00               	movlw	0
 29240  00D36A  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29241                           
 29242                           ; BSR set to: 0
 29243                           
 29244                           ; BSR set to: 0
 29245  00D36C  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29246  00D36E  0B80               	andlw	128
 29247  00D370  6F83               	movwf	___fladd@aexp& (0+255),b
 29248                           
 29249                           ; BSR set to: 0
 29250  00D372  5182               	movf	___fladd@signs& (0+255),w,b
 29251  00D374  1983               	xorwf	___fladd@aexp& (0+255),w,b
 29252  00D376  A4D8               	btfss	status,2,c
 29253                           
 29254                           ; BSR set to: 0
 29255  00D378  8D82               	bsf	___fladd@signs& (0+255),6,b
 29256                           
 29257                           ; BSR set to: 0
 29258                           
 29259                           ; BSR set to: 0
 29260  00D37A  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29261  00D37C  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 29262  00D37E  6F83               	movwf	___fladd@aexp& (0+255),b
 29263                           
 29264                           ; BSR set to: 0
 29265  00D380  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 29266                           
 29267                           ; BSR set to: 0
 29268  00D382  8183               	bsf	___fladd@aexp& (0+255),0,b
 29269                           
 29270                           ; BSR set to: 0
 29271                           
 29272                           ; BSR set to: 0
 29273  00D384  5183               	movf	___fladd@aexp& (0+255),w,b
 29274  00D386  B4D8               	btfsc	status,2,c
 29275  00D388  D00D               	goto	l3509
 29276                           
 29277                           ; BSR set to: 0
 29278  00D38A  2983               	incf	___fladd@aexp& (0+255),w,b
 29279  00D38C  A4D8               	btfss	status,2,c
 29280  00D38E  D008               	goto	l3510
 29281                           
 29282                           ; BSR set to: 0
 29283  00D390  0E00               	movlw	0
 29284  00D392  6F76               	movwf	___fladd@a& (0+255),b
 29285  00D394  0E00               	movlw	0
 29286  00D396  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29287  00D398  0E00               	movlw	0
 29288  00D39A  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29289  00D39C  0E00               	movlw	0
 29290  00D39E  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29291  00D3A0                     l3510:
 29292                           
 29293                           ; BSR set to: 0
 29294                           
 29295                           ; BSR set to: 0
 29296  00D3A0  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 29297  00D3A2  D006               	goto	L41
 29298  00D3A4                     l3509:
 29299                           
 29300                           ; BSR set to: 0
 29301                           
 29302                           ; BSR set to: 0
 29303  00D3A4  0E00               	movlw	0
 29304  00D3A6  6F76               	movwf	___fladd@a& (0+255),b
 29305  00D3A8  0E00               	movlw	0
 29306  00D3AA  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29307  00D3AC  0E00               	movlw	0
 29308  00D3AE  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29309  00D3B0                     L41:
 29310  00D3B0  0E00               	movlw	0
 29311  00D3B2  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29312                           
 29313                           ; BSR set to: 0
 29314                           
 29315                           ; BSR set to: 0
 29316  00D3B4  5184               	movf	___fladd@bexp& (0+255),w,b
 29317  00D3B6  5D83               	subwf	___fladd@aexp& (0+255),w,b
 29318  00D3B8  B0D8               	btfsc	status,0,c
 29319  00D3BA  D022               	goto	l3512
 29320                           
 29321                           ; BSR set to: 0
 29322  00D3BC  AD82               	btfss	___fladd@signs& (0+255),6,b
 29323  00D3BE  D002               	goto	l3513
 29324                           
 29325                           ; BSR set to: 0
 29326  00D3C0  0E80               	movlw	128
 29327  00D3C2  1B82               	xorwf	___fladd@signs& (0+255),f,b
 29328  00D3C4                     l3513:
 29329                           
 29330                           ; BSR set to: 0
 29331                           
 29332                           ; BSR set to: 0
 29333  00D3C4  C084  F085         	movff	___fladd@bexp,___fladd@grs
 29334                           
 29335                           ; BSR set to: 0
 29336  00D3C8  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 29337                           
 29338                           ; BSR set to: 0
 29339  00D3CC  C085  F083         	movff	___fladd@grs,___fladd@aexp
 29340                           
 29341                           ; BSR set to: 0
 29342  00D3D0  C072  F085         	movff	___fladd@b,___fladd@grs
 29343                           
 29344                           ; BSR set to: 0
 29345  00D3D4  C076  F072         	movff	___fladd@a,___fladd@b
 29346                           
 29347                           ; BSR set to: 0
 29348  00D3D8  C085  F076         	movff	___fladd@grs,___fladd@a
 29349                           
 29350                           ; BSR set to: 0
 29351  00D3DC  C073  F085         	movff	___fladd@b+1,___fladd@grs
 29352                           
 29353                           ; BSR set to: 0
 29354  00D3E0  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 29355                           
 29356                           ; BSR set to: 0
 29357  00D3E4  C085  F077         	movff	___fladd@grs,___fladd@a+1
 29358                           
 29359                           ; BSR set to: 0
 29360  00D3E8  C074  F085         	movff	___fladd@b+2,___fladd@grs
 29361                           
 29362                           ; BSR set to: 0
 29363  00D3EC  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 29364                           
 29365                           ; BSR set to: 0
 29366  00D3F0  C085  F078         	movff	___fladd@grs,___fladd@a+2
 29367                           
 29368                           ; BSR set to: 0
 29369  00D3F4  C075  F085         	movff	___fladd@b+3,___fladd@grs
 29370                           
 29371                           ; BSR set to: 0
 29372  00D3F8  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 29373                           
 29374                           ; BSR set to: 0
 29375  00D3FC  C085  F079         	movff	___fladd@grs,___fladd@a+3
 29376  00D400                     l3512:
 29377                           
 29378                           ; BSR set to: 0
 29379                           
 29380                           ; BSR set to: 0
 29381  00D400  0E00               	movlw	0
 29382  00D402  6F85               	movwf	___fladd@grs& (0+255),b
 29383                           
 29384                           ; BSR set to: 0
 29385  00D404  5184               	movf	___fladd@bexp& (0+255),w,b
 29386  00D406  6F7A               	movwf	??___fladd& (0+255),b
 29387  00D408  6B7B               	clrf	(??___fladd+1)& (0+255),b
 29388  00D40A  1F7A               	comf	??___fladd& (0+255),f,b
 29389  00D40C  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 29390  00D40E  4B7A               	infsnz	??___fladd& (0+255),f,b
 29391  00D410  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 29392  00D412  5183               	movf	___fladd@aexp& (0+255),w,b
 29393  00D414  6F7C               	movwf	(??___fladd+2)& (0+255),b
 29394  00D416  6B7D               	clrf	(??___fladd+3)& (0+255),b
 29395  00D418  517A               	movf	??___fladd& (0+255),w,b
 29396  00D41A  277C               	addwf	(??___fladd+2)& (0+255),f,b
 29397  00D41C  517B               	movf	(??___fladd+1)& (0+255),w,b
 29398  00D41E  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 29399  00D420  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 29400  00D422  D02C               	goto	l3516
 29401  00D424  517D               	movf	(??___fladd+3)& (0+255),w,b
 29402  00D426  E104               	bnz	u15420
 29403  00D428  0E1A               	movlw	26
 29404  00D42A  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 29405  00D42C  A0D8               	btfss	status,0,c
 29406  00D42E  D026               	goto	l3516
 29407  00D430                     u15420:
 29408                           
 29409                           ; BSR set to: 0
 29410  00D430  5172               	movf	___fladd@b& (0+255),w,b
 29411  00D432  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 29412  00D434  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 29413  00D436  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 29414  00D438  B4D8               	btfsc	status,2,c
 29415  00D43A  D002               	goto	u15430
 29416  00D43C  0E01               	movlw	1
 29417  00D43E  D001               	goto	u15440
 29418  00D440                     u15430:
 29419  00D440  0E00               	movlw	0
 29420  00D442                     u15440:
 29421  00D442  6F85               	movwf	___fladd@grs& (0+255),b
 29422                           
 29423                           ; BSR set to: 0
 29424  00D444  0E00               	movlw	0
 29425  00D446  6F72               	movwf	___fladd@b& (0+255),b
 29426  00D448  0E00               	movlw	0
 29427  00D44A  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29428  00D44C  0E00               	movlw	0
 29429  00D44E  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29430  00D450  0E00               	movlw	0
 29431  00D452  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29432                           
 29433                           ; BSR set to: 0
 29434  00D454  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 29435  00D458  D015               	goto	u15470
 29436  00D45A                     l3517:
 29437                           
 29438                           ; BSR set to: 0
 29439  00D45A  A185               	btfss	___fladd@grs& (0+255),0,b
 29440  00D45C  D005               	goto	l3518
 29441                           
 29442                           ; BSR set to: 0
 29443  00D45E  90D8               	bcf	status,0,c
 29444  00D460  3185               	rrcf	___fladd@grs& (0+255),w,b
 29445  00D462  0901               	iorlw	1
 29446  00D464  6F85               	movwf	___fladd@grs& (0+255),b
 29447  00D466  D002               	goto	l3519
 29448  00D468                     l3518:
 29449                           
 29450                           ; BSR set to: 0
 29451                           
 29452                           ; BSR set to: 0
 29453  00D468  90D8               	bcf	status,0,c
 29454  00D46A  3385               	rrcf	___fladd@grs& (0+255),f,b
 29455  00D46C                     l3519:
 29456                           
 29457                           ; BSR set to: 0
 29458                           
 29459                           ; BSR set to: 0
 29460  00D46C  B172               	btfsc	___fladd@b& (0+255),0,b
 29461                           
 29462                           ; BSR set to: 0
 29463  00D46E  8F85               	bsf	___fladd@grs& (0+255),7,b
 29464                           
 29465                           ; BSR set to: 0
 29466                           
 29467                           ; BSR set to: 0
 29468  00D470  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 29469  00D472  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 29470  00D474  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 29471  00D476  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 29472  00D478  3372               	rrcf	___fladd@b& (0+255),f,b
 29473                           
 29474                           ; BSR set to: 0
 29475  00D47A  2B84               	incf	___fladd@bexp& (0+255),f,b
 29476  00D47C                     l3516:
 29477                           
 29478                           ; BSR set to: 0
 29479  00D47C  5183               	movf	___fladd@aexp& (0+255),w,b
 29480  00D47E  5D84               	subwf	___fladd@bexp& (0+255),w,b
 29481  00D480  A0D8               	btfss	status,0,c
 29482  00D482  D7EB               	goto	l3517
 29483  00D484                     u15470:
 29484                           
 29485                           ; BSR set to: 0
 29486                           
 29487                           ; BSR set to: 0
 29488  00D484  BD82               	btfsc	___fladd@signs& (0+255),6,b
 29489  00D486  D028               	goto	l3522
 29490                           
 29491                           ; BSR set to: 0
 29492  00D488  5184               	movf	___fladd@bexp& (0+255),w,b
 29493  00D48A  A4D8               	btfss	status,2,c
 29494  00D48C  D009               	goto	l3523
 29495                           
 29496                           ; BSR set to: 0
 29497  00D48E  0E00               	movlw	0
 29498  00D490  6F72               	movwf	?___fladd& (0+255),b
 29499  00D492  0E00               	movlw	0
 29500  00D494  6F73               	movwf	(?___fladd+1)& (0+255),b
 29501  00D496  0E00               	movlw	0
 29502  00D498  6F74               	movwf	(?___fladd+2)& (0+255),b
 29503  00D49A  0E00               	movlw	0
 29504  00D49C  6F75               	movwf	(?___fladd+3)& (0+255),b
 29505                           
 29506                           ; BSR set to: 0
 29507  00D49E  0012               	return	
 29508  00D4A0                     l3523:
 29509                           
 29510                           ; BSR set to: 0
 29511                           
 29512                           ; BSR set to: 0
 29513  00D4A0  5176               	movf	___fladd@a& (0+255),w,b
 29514  00D4A2  2772               	addwf	___fladd@b& (0+255),f,b
 29515  00D4A4  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29516  00D4A6  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 29517  00D4A8  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29518  00D4AA  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 29519  00D4AC  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29520  00D4AE  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 29521                           
 29522                           ; BSR set to: 0
 29523  00D4B0  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 29524  00D4B2  D082               	goto	u15600
 29525                           
 29526                           ; BSR set to: 0
 29527  00D4B4  A185               	btfss	___fladd@grs& (0+255),0,b
 29528  00D4B6  D005               	goto	l3526
 29529                           
 29530                           ; BSR set to: 0
 29531  00D4B8  90D8               	bcf	status,0,c
 29532  00D4BA  3185               	rrcf	___fladd@grs& (0+255),w,b
 29533  00D4BC  0901               	iorlw	1
 29534  00D4BE  6F85               	movwf	___fladd@grs& (0+255),b
 29535  00D4C0  D002               	goto	l3527
 29536  00D4C2                     l3526:
 29537                           
 29538                           ; BSR set to: 0
 29539                           
 29540                           ; BSR set to: 0
 29541  00D4C2  90D8               	bcf	status,0,c
 29542  00D4C4  3385               	rrcf	___fladd@grs& (0+255),f,b
 29543  00D4C6                     l3527:
 29544                           
 29545                           ; BSR set to: 0
 29546                           
 29547                           ; BSR set to: 0
 29548  00D4C6  B172               	btfsc	___fladd@b& (0+255),0,b
 29549                           
 29550                           ; BSR set to: 0
 29551  00D4C8  8F85               	bsf	___fladd@grs& (0+255),7,b
 29552                           
 29553                           ; BSR set to: 0
 29554                           
 29555                           ; BSR set to: 0
 29556  00D4CA  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 29557  00D4CC  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 29558  00D4CE  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 29559  00D4D0  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 29560  00D4D2  3372               	rrcf	___fladd@b& (0+255),f,b
 29561                           
 29562                           ; BSR set to: 0
 29563  00D4D4  2B84               	incf	___fladd@bexp& (0+255),f,b
 29564                           
 29565                           ; BSR set to: 0
 29566  00D4D6  D070               	goto	u15600
 29567  00D4D8                     l3522:
 29568                           
 29569                           ; BSR set to: 0
 29570                           
 29571                           ; BSR set to: 0
 29572  00D4D8  5176               	movf	___fladd@a& (0+255),w,b
 29573  00D4DA  5D72               	subwf	___fladd@b& (0+255),w,b
 29574  00D4DC  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29575  00D4DE  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 29576  00D4E0  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29577  00D4E2  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 29578  00D4E4  5175               	movf	(___fladd@b+3)& (0+255),w,b
 29579  00D4E6  0A80               	xorlw	128
 29580  00D4E8  6F7A               	movwf	??___fladd& (0+255),b
 29581  00D4EA  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29582  00D4EC  0A80               	xorlw	128
 29583  00D4EE  597A               	subwfb	??___fladd& (0+255),w,b
 29584  00D4F0  B0D8               	btfsc	status,0,c
 29585  00D4F2  D036               	goto	l3530
 29586                           
 29587                           ; BSR set to: 0
 29588  00D4F4  C072  F07A         	movff	___fladd@b,??___fladd
 29589  00D4F8  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 29590  00D4FC  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 29591  00D500  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 29592  00D504  1F7A               	comf	??___fladd& (0+255),f,b
 29593  00D506  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 29594  00D508  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 29595  00D50A  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 29596  00D50C  2B7A               	incf	??___fladd& (0+255),f,b
 29597  00D50E  0E00               	movlw	0
 29598  00D510  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 29599  00D512  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 29600  00D514  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 29601  00D516  5176               	movf	___fladd@a& (0+255),w,b
 29602  00D518  257A               	addwf	??___fladd& (0+255),w,b
 29603  00D51A  6F7E               	movwf	(??___fladd+4)& (0+255),b
 29604  00D51C  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29605  00D51E  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 29606  00D520  6F7F               	movwf	(??___fladd+5)& (0+255),b
 29607  00D522  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29608  00D524  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 29609  00D526  6F80               	movwf	(??___fladd+6)& (0+255),b
 29610  00D528  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29611  00D52A  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 29612  00D52C  6F81               	movwf	(??___fladd+7)& (0+255),b
 29613  00D52E  0EFF               	movlw	255
 29614  00D530  257E               	addwf	(??___fladd+4)& (0+255),w,b
 29615  00D532  6F72               	movwf	___fladd@b& (0+255),b
 29616  00D534  0EFF               	movlw	255
 29617  00D536  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 29618  00D538  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29619  00D53A  0EFF               	movlw	255
 29620  00D53C  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 29621  00D53E  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29622  00D540  0EFF               	movlw	255
 29623  00D542  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 29624  00D544  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29625  00D546  0E80               	movlw	128
 29626  00D548  1B82               	xorwf	___fladd@signs& (0+255),f,b
 29627                           
 29628                           ; BSR set to: 0
 29629  00D54A  6D85               	negf	___fladd@grs& (0+255),b
 29630                           
 29631                           ; BSR set to: 0
 29632  00D54C  5185               	movf	___fladd@grs& (0+255),w,b
 29633  00D54E  A4D8               	btfss	status,2,c
 29634  00D550  D00F               	goto	l3532
 29635                           
 29636                           ; BSR set to: 0
 29637  00D552  0E01               	movlw	1
 29638  00D554  2772               	addwf	___fladd@b& (0+255),f,b
 29639  00D556  0E00               	movlw	0
 29640  00D558  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 29641  00D55A  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 29642  00D55C  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 29643                           
 29644                           ; BSR set to: 0
 29645  00D55E  D008               	goto	l3532
 29646  00D560                     l3530:
 29647                           
 29648                           ; BSR set to: 0
 29649                           
 29650                           ; BSR set to: 0
 29651  00D560  5176               	movf	___fladd@a& (0+255),w,b
 29652  00D562  5F72               	subwf	___fladd@b& (0+255),f,b
 29653  00D564  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29654  00D566  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 29655  00D568  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29656  00D56A  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 29657  00D56C  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29658  00D56E  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 29659  00D570                     l3532:
 29660                           
 29661                           ; BSR set to: 0
 29662  00D570  5172               	movf	___fladd@b& (0+255),w,b
 29663  00D572  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 29664  00D574  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 29665  00D576  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 29666  00D578  A4D8               	btfss	status,2,c
 29667  00D57A  D01C               	goto	l3539
 29668                           
 29669                           ; BSR set to: 0
 29670  00D57C  5185               	movf	___fladd@grs& (0+255),w,b
 29671  00D57E  A4D8               	btfss	status,2,c
 29672  00D580  D019               	goto	l3539
 29673                           
 29674                           ; BSR set to: 0
 29675  00D582  0E00               	movlw	0
 29676  00D584  6F72               	movwf	?___fladd& (0+255),b
 29677  00D586  0E00               	movlw	0
 29678  00D588  6F73               	movwf	(?___fladd+1)& (0+255),b
 29679  00D58A  0E00               	movlw	0
 29680  00D58C  6F74               	movwf	(?___fladd+2)& (0+255),b
 29681  00D58E  0E00               	movlw	0
 29682  00D590  6F75               	movwf	(?___fladd+3)& (0+255),b
 29683                           
 29684                           ; BSR set to: 0
 29685  00D592  0012               	return	
 29686  00D594                     
 29687                           ; BSR set to: 0
 29688                           
 29689                           ; BSR set to: 0
 29690  00D594  90D8               	bcf	status,0,c
 29691  00D596  3772               	rlcf	___fladd@b& (0+255),f,b
 29692  00D598  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 29693  00D59A  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 29694  00D59C  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 29695                           
 29696                           ; BSR set to: 0
 29697  00D59E  BF85               	btfsc	___fladd@grs& (0+255),7,b
 29698                           
 29699                           ; BSR set to: 0
 29700  00D5A0  8172               	bsf	___fladd@b& (0+255),0,b
 29701                           
 29702                           ; BSR set to: 0
 29703                           
 29704                           ; BSR set to: 0
 29705  00D5A2  A185               	btfss	___fladd@grs& (0+255),0,b
 29706  00D5A4  D002               	goto	l3537
 29707                           
 29708                           ; BSR set to: 0
 29709  00D5A6  80D8               	bsf	status,0,c
 29710  00D5A8  D001               	goto	L42
 29711  00D5AA                     l3537:
 29712                           
 29713                           ; BSR set to: 0
 29714                           
 29715                           ; BSR set to: 0
 29716  00D5AA  90D8               	bcf	status,0,c
 29717  00D5AC                     L42:
 29718  00D5AC  3785               	rlcf	___fladd@grs& (0+255),f,b
 29719                           
 29720                           ; BSR set to: 0
 29721                           
 29722                           ; BSR set to: 0
 29723  00D5AE  5184               	movf	___fladd@bexp& (0+255),w,b
 29724  00D5B0  A4D8               	btfss	status,2,c
 29725                           
 29726                           ; BSR set to: 0
 29727  00D5B2  0784               	decf	___fladd@bexp& (0+255),f,b
 29728  00D5B4                     l3539:
 29729                           
 29730                           ; BSR set to: 0
 29731                           
 29732                           ; BSR set to: 0
 29733                           
 29734                           ; BSR set to: 0
 29735  00D5B4  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 29736  00D5B6  D7EE               	goto	l3535
 29737  00D5B8                     u15600:
 29738                           
 29739                           ; BSR set to: 0
 29740                           
 29741                           ; BSR set to: 0
 29742                           
 29743                           ; BSR set to: 0
 29744  00D5B8  0E00               	movlw	0
 29745  00D5BA  6F83               	movwf	___fladd@aexp& (0+255),b
 29746                           
 29747                           ; BSR set to: 0
 29748  00D5BC  AF85               	btfss	___fladd@grs& (0+255),7,b
 29749  00D5BE  D00A               	goto	l3544
 29750                           
 29751                           ; BSR set to: 0
 29752  00D5C0  C085  F07A         	movff	___fladd@grs,??___fladd
 29753  00D5C4  0E7F               	movlw	127
 29754  00D5C6  177A               	andwf	??___fladd& (0+255),f,b
 29755  00D5C8  A4D8               	btfss	status,2,c
 29756  00D5CA  D002               	goto	u15630
 29757                           
 29758                           ; BSR set to: 0
 29759                           
 29760                           ; BSR set to: 0
 29761  00D5CC  A172               	btfss	___fladd@b& (0+255),0,b
 29762  00D5CE  D002               	goto	l3544
 29763  00D5D0                     u15630:
 29764                           
 29765                           ; BSR set to: 0
 29766  00D5D0  0E01               	movlw	1
 29767  00D5D2  6F83               	movwf	___fladd@aexp& (0+255),b
 29768  00D5D4                     l3544:
 29769                           
 29770                           ; BSR set to: 0
 29771                           
 29772                           ; BSR set to: 0
 29773                           
 29774                           ; BSR set to: 0
 29775  00D5D4  5183               	movf	___fladd@aexp& (0+255),w,b
 29776  00D5D6  B4D8               	btfsc	status,2,c
 29777  00D5D8  D020               	goto	l3547
 29778                           
 29779                           ; BSR set to: 0
 29780  00D5DA  0E01               	movlw	1
 29781  00D5DC  2772               	addwf	___fladd@b& (0+255),f,b
 29782  00D5DE  0E00               	movlw	0
 29783  00D5E0  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 29784  00D5E2  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 29785  00D5E4  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 29786                           
 29787                           ; BSR set to: 0
 29788  00D5E6  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 29789  00D5E8  D018               	goto	l3547
 29790                           
 29791                           ; BSR set to: 0
 29792  00D5EA  C072  F07A         	movff	___fladd@b,??___fladd
 29793  00D5EE  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 29794  00D5F2  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 29795  00D5F6  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 29796  00D5FA  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 29797  00D5FC  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 29798  00D5FE  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 29799  00D600  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 29800  00D602  337A               	rrcf	??___fladd& (0+255),f,b
 29801  00D604  C07A  F072         	movff	??___fladd,___fladd@b
 29802  00D608  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 29803  00D60C  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 29804  00D610  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 29805  00D614  2984               	incf	___fladd@bexp& (0+255),w,b
 29806  00D616  A4D8               	btfss	status,2,c
 29807                           
 29808                           ; BSR set to: 0
 29809  00D618  2B84               	incf	___fladd@bexp& (0+255),f,b
 29810  00D61A                     l3547:
 29811                           
 29812                           ; BSR set to: 0
 29813                           
 29814                           ; BSR set to: 0
 29815                           
 29816                           ; BSR set to: 0
 29817                           
 29818                           ; BSR set to: 0
 29819  00D61A  2984               	incf	___fladd@bexp& (0+255),w,b
 29820  00D61C  B4D8               	btfsc	status,2,c
 29821  00D61E  D003               	goto	u15680
 29822                           
 29823                           ; BSR set to: 0
 29824  00D620  5184               	movf	___fladd@bexp& (0+255),w,b
 29825  00D622  A4D8               	btfss	status,2,c
 29826  00D624  D00D               	goto	l3551
 29827  00D626                     u15680:
 29828                           
 29829                           ; BSR set to: 0
 29830                           
 29831                           ; BSR set to: 0
 29832  00D626  0E00               	movlw	0
 29833  00D628  6F72               	movwf	___fladd@b& (0+255),b
 29834  00D62A  0E00               	movlw	0
 29835  00D62C  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29836  00D62E  0E00               	movlw	0
 29837  00D630  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29838  00D632  0E00               	movlw	0
 29839  00D634  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29840  00D636  5184               	movf	___fladd@bexp& (0+255),w,b
 29841  00D638  A4D8               	btfss	status,2,c
 29842  00D63A  D002               	goto	l3551
 29843                           
 29844                           ; BSR set to: 0
 29845  00D63C  0E00               	movlw	0
 29846  00D63E  6F82               	movwf	___fladd@signs& (0+255),b
 29847  00D640                     l3551:
 29848                           
 29849                           ; BSR set to: 0
 29850                           
 29851                           ; BSR set to: 0
 29852                           
 29853                           ; BSR set to: 0
 29854  00D640  A184               	btfss	___fladd@bexp& (0+255),0,b
 29855  00D642  D002               	goto	l3552
 29856                           
 29857                           ; BSR set to: 0
 29858  00D644  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 29859  00D646  D001               	goto	l3553
 29860  00D648                     l3552:
 29861                           
 29862                           ; BSR set to: 0
 29863                           
 29864                           ; BSR set to: 0
 29865  00D648  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 29866  00D64A                     l3553:
 29867                           
 29868                           ; BSR set to: 0
 29869                           
 29870                           ; BSR set to: 0
 29871  00D64A  90D8               	bcf	status,0,c
 29872  00D64C  3184               	rrcf	___fladd@bexp& (0+255),w,b
 29873  00D64E  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29874                           
 29875                           ; BSR set to: 0
 29876  00D650  BF82               	btfsc	___fladd@signs& (0+255),7,b
 29877                           
 29878                           ; BSR set to: 0
 29879  00D652  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 29880                           
 29881                           ; BSR set to: 0
 29882                           
 29883                           ; BSR set to: 0
 29884  00D654  C072  F072         	movff	___fladd@b,?___fladd
 29885  00D658  C073  F073         	movff	___fladd@b+1,?___fladd+1
 29886  00D65C  C074  F074         	movff	___fladd@b+2,?___fladd+2
 29887  00D660  C075  F075         	movff	___fladd@b+3,?___fladd+3
 29888  00D664  0012               	return	
 29889  00D666                     __end_of___fladd:
 29890                           	opt stack 0
 29891                           tblptru	equ	0xFF8
 29892                           tblptrh	equ	0xFF7
 29893                           tblptrl	equ	0xFF6
 29894                           tablat	equ	0xFF5
 29895                           prodh	equ	0xFF4
 29896                           prodl	equ	0xFF3
 29897                           intcon	equ	0xFF2
 29898                           postinc0	equ	0xFEE
 29899                           wreg	equ	0xFE8
 29900                           indf1	equ	0xFE7
 29901                           postinc1	equ	0xFE6
 29902                           postdec1	equ	0xFE5
 29903                           plusw1	equ	0xFE3
 29904                           fsr1h	equ	0xFE2
 29905                           fsr1l	equ	0xFE1
 29906                           indf2	equ	0xFDF
 29907                           postinc2	equ	0xFDE
 29908                           postdec2	equ	0xFDD
 29909                           plusw2	equ	0xFDB
 29910                           fsr2h	equ	0xFDA
 29911                           fsr2l	equ	0xFD9
 29912                           status	equ	0xFD8
 29913                           
 29914 ;; *************** function _USBDeviceInit *****************
 29915 ;; Defined at:
 29916 ;;		line 277 in file "usb_device.c"
 29917 ;; Parameters:    Size  Location     Type
 29918 ;;		None
 29919 ;; Auto vars:     Size  Location     Type
 29920 ;;  i               1    8[BANK0 ] unsigned char 
 29921 ;; Return value:  Size  Location     Type
 29922 ;;                  1    wreg      void 
 29923 ;; Registers used:
 29924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29925 ;; Tracked objects:
 29926 ;;		On entry : 0/0
 29927 ;;		On exit  : 0/0
 29928 ;;		Unchanged: 0/0
 29929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29934 ;;Total ram usage:        1 bytes
 29935 ;; Hardware stack levels used:    1
 29936 ;; Hardware stack levels required when called:   11
 29937 ;; This function calls:
 29938 ;;		_memset
 29939 ;; This function is called by:
 29940 ;;		_main
 29941 ;; This function uses a non-reentrant model
 29942 ;;
 29943                           
 29944                           	psect	text119
 29945  00FB6E                     __ptext119:
 29946                           	opt stack 0
 29947  00FB6E                     _USBDeviceInit:
 29948                           	opt stack 19
 29949                           
 29950                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;incstack = 0
 29954  00FB6E  98A0               	bcf	4000,4,c	;volatile
 29955                           
 29956                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 29957  00FB70  0E00               	movlw	0
 29958  00FB72  6E63               	movwf	3939,c	;volatile
 29959                           
 29960                           ;usb_device.c: 291: {UIR = 0;};
 29961  00FB74  0E00               	movlw	0
 29962  00FB76  6E62               	movwf	3938,c	;volatile
 29963                           
 29964                           ;usb_device.c: 294: UEP0 = 0;
 29965  00FB78  0E00               	movlw	0
 29966  00FB7A  010F               	movlb	15	; () banked
 29967  00FB7C  6F26               	movwf	38,b	;volatile
 29968                           
 29969                           ; BSR set to: 15
 29970                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 29971  00FB7E  0E27               	movlw	39
 29972  00FB80  0100               	movlb	0	; () banked
 29973  00FB82  6F60               	movwf	memset@p1& (0+255),b
 29974  00FB84  0E0F               	movlw	15
 29975  00FB86  6F61               	movwf	(memset@p1+1)& (0+255),b
 29976  00FB88  0E00               	movlw	0
 29977  00FB8A  6F63               	movwf	(memset@c+1)& (0+255),b
 29978  00FB8C  0E00               	movlw	0
 29979  00FB8E  6F62               	movwf	memset@c& (0+255),b
 29980  00FB90  0E00               	movlw	0
 29981  00FB92  6F65               	movwf	(memset@n+1)& (0+255),b
 29982  00FB94  0E02               	movlw	2
 29983  00FB96  6F64               	movwf	memset@n& (0+255),b
 29984  00FB98  ECA5  F0A9         	call	_memset	;wreg free
 29985                           
 29986                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 29987  00FB9C  0E16               	movlw	22
 29988  00FB9E  010F               	movlb	15	; () banked
 29989  00FBA0  6F39               	movwf	57,b	;volatile
 29990                           
 29991                           ; BSR set to: 15
 29992  00FBA2  0E9F               	movlw	159
 29993  00FBA4  6F37               	movwf	55,b	;volatile
 29994                           
 29995                           ; BSR set to: 15
 29996  00FBA6  0E7B               	movlw	123
 29997  00FBA8  6F36               	movwf	54,b	;volatile
 29998                           
 29999                           ; BSR set to: 15
 30000                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 30001  00FBAA  0E00               	movlw	0
 30002  00FBAC  0100               	movlb	0	; () banked
 30003  00FBAE  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30004  00FBB0                     l17275:
 30005                           
 30006                           ; BSR set to: 0
 30007  00FBB0  0E0B               	movlw	11
 30008  00FBB2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30009  00FBB4  D001               	goto	l145
 30010  00FBB6  D00E               	goto	u16790
 30011  00FBB8                     l145:
 30012                           
 30013                           ; BSR set to: 0
 30014                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 30015                           
 30016                           ; BSR set to: 0
 30017  00FBB8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30018  00FBBA  0D04               	mullw	4
 30019  00FBBC  0E00               	movlw	0
 30020  00FBBE  24F3               	addwf	prodl,w,c
 30021  00FBC0  6ED9               	movwf	fsr2l,c
 30022  00FBC2  0E0D               	movlw	13
 30023  00FBC4  20F4               	addwfc	prodh,w,c
 30024  00FBC6  6EDA               	movwf	fsr2h,c
 30025  00FBC8  6ADE               	clrf	postinc2,c
 30026  00FBCA  6ADE               	clrf	postinc2,c
 30027  00FBCC  6ADE               	clrf	postinc2,c
 30028  00FBCE  6ADD               	clrf	postdec2,c
 30029                           
 30030                           ; BSR set to: 0
 30031  00FBD0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30032  00FBD2  D7EE               	goto	l17275
 30033  00FBD4                     u16790:
 30034                           
 30035                           ; BSR set to: 0
 30036                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 30037  00FBD4  8C65               	bsf	3941,6,c	;volatile
 30038                           
 30039                           ; BSR set to: 0
 30040                           ;usb_device.c: 316: UADDR = 0x00;
 30041  00FBD6  0E00               	movlw	0
 30042  00FBD8  010F               	movlb	15	; () banked
 30043  00FBDA  6F38               	movwf	56,b	;volatile
 30044                           
 30045                           ; BSR set to: 15
 30046                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 30047  00FBDC  9865               	bcf	3941,4,c	;volatile
 30048                           
 30049                           ; BSR set to: 15
 30050                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 30051  00FBDE  9C65               	bcf	3941,6,c	;volatile
 30052  00FBE0                     
 30053                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 30054                           
 30055                           ; BSR set to: 15
 30056  00FBE0  9662               	bcf	3938,3,c	;volatile
 30057                           
 30058                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 30059  00FBE2  0E00               	movlw	0
 30060  00FBE4  6E55               	movwf	_inPipes+3,c	;volatile
 30061                           
 30062                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 30063  00FBE6  0E00               	movlw	0
 30064  00FBE8  0101               	movlb	1	; () banked
 30065  00FBEA  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 30066                           
 30067                           ; BSR set to: 1
 30068                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 30069  00FBEC  0E00               	movlw	0
 30070  00FBEE  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 30071  00FBF0  0E00               	movlw	0
 30072  00FBF2  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 30073                           
 30074                           ; BSR set to: 1
 30075                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 30076  00FBF4  B662               	btfsc	3938,3,c	;volatile
 30077  00FBF6  D7F4               	goto	l147
 30078                           
 30079                           ; BSR set to: 1
 30080                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 30081                           
 30082                           ; BSR set to: 1
 30083  00FBF8  0E01               	movlw	1
 30084  00FBFA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 30085                           
 30086                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 30087  00FBFC  0E01               	movlw	1
 30088  00FBFE  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 30089                           
 30090                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 30091  00FC00  0E00               	movlw	0
 30092  00FC02  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 30093                           
 30094                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 30095  00FC04  0E00               	movlw	0
 30096  00FC06  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 30097                           
 30098                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 30099  00FC08  0E00               	movlw	0
 30100  00FC0A  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 30101                           
 30102                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 30103  00FC0C  0E00               	movlw	0
 30104  00FC0E  0100               	movlb	0	; () banked
 30105  00FC10  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30106  00FC12                     l17303:
 30107                           
 30108                           ; BSR set to: 0
 30109  00FC12  0E02               	movlw	2
 30110  00FC14  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30111  00FC16  D001               	goto	l149
 30112  00FC18  D02E               	goto	u16820
 30113  00FC1A                     l149:
 30114                           
 30115                           ; BSR set to: 0
 30116                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 30117                           
 30118                           ; BSR set to: 0
 30119  00FC1A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30120  00FC1C  0D02               	mullw	2
 30121  00FC1E  0E1B               	movlw	low _pBDTEntryIn
 30122  00FC20  24F3               	addwf	prodl,w,c
 30123  00FC22  6ED9               	movwf	fsr2l,c
 30124  00FC24  0E01               	movlw	high _pBDTEntryIn
 30125  00FC26  20F4               	addwfc	prodh,w,c
 30126  00FC28  6EDA               	movwf	fsr2h,c
 30127  00FC2A  0E00               	movlw	0
 30128  00FC2C  6EDE               	movwf	postinc2,c
 30129  00FC2E  0E00               	movlw	0
 30130  00FC30  6EDD               	movwf	postdec2,c
 30131                           
 30132                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 30133  00FC32  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30134  00FC34  0D02               	mullw	2
 30135  00FC36  0E21               	movlw	low _pBDTEntryOut
 30136  00FC38  24F3               	addwf	prodl,w,c
 30137  00FC3A  6ED9               	movwf	fsr2l,c
 30138  00FC3C  0E01               	movlw	high _pBDTEntryOut
 30139  00FC3E  20F4               	addwfc	prodh,w,c
 30140  00FC40  6EDA               	movwf	fsr2h,c
 30141  00FC42  0E00               	movlw	0
 30142  00FC44  6EDE               	movwf	postinc2,c
 30143  00FC46  0E00               	movlw	0
 30144  00FC48  6EDD               	movwf	postdec2,c
 30145                           
 30146                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 30147  00FC4A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30148  00FC4C  0D01               	mullw	1
 30149  00FC4E  0E3C               	movlw	low _ep_data_in
 30150  00FC50  24F3               	addwf	prodl,w,c
 30151  00FC52  6ED9               	movwf	fsr2l,c
 30152  00FC54  0E01               	movlw	high _ep_data_in
 30153  00FC56  20F4               	addwfc	prodh,w,c
 30154  00FC58  6EDA               	movwf	fsr2h,c
 30155  00FC5A  0E00               	movlw	0
 30156  00FC5C  6EDF               	movwf	indf2,c
 30157                           
 30158                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 30159  00FC5E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30160  00FC60  0D01               	mullw	1
 30161  00FC62  0E39               	movlw	low _ep_data_out
 30162  00FC64  24F3               	addwf	prodl,w,c
 30163  00FC66  6ED9               	movwf	fsr2l,c
 30164  00FC68  0E01               	movlw	high _ep_data_out
 30165  00FC6A  20F4               	addwfc	prodh,w,c
 30166  00FC6C  6EDA               	movwf	fsr2h,c
 30167  00FC6E  0E00               	movlw	0
 30168  00FC70  6EDF               	movwf	indf2,c
 30169                           
 30170                           ; BSR set to: 0
 30171  00FC72  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30172  00FC74  D7CE               	goto	l17303
 30173  00FC76                     u16820:
 30174                           
 30175                           ; BSR set to: 0
 30176                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 30177                           
 30178                           ; BSR set to: 0
 30179  00FC76  0E08               	movlw	8
 30180  00FC78  0101               	movlb	1	; () banked
 30181  00FC7A  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 30182  00FC7C  0E0D               	movlw	13
 30183  00FC7E  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 30184                           
 30185                           ; BSR set to: 1
 30186                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 30187  00FC80  0E16               	movlw	22
 30188  00FC82  010F               	movlb	15	; () banked
 30189  00FC84  6F26               	movwf	38,b	;volatile
 30190                           
 30191                           ; BSR set to: 15
 30192                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 30193  00FC86  0E0D               	movlw	13
 30194  00FC88  010D               	movlb	13	; () banked
 30195  00FC8A  6F03               	movwf	3,b	;volatile
 30196  00FC8C  0E30               	movlw	48
 30197  00FC8E  6F02               	movwf	2,b	;volatile
 30198                           
 30199                           ; BSR set to: 13
 30200                           ;usb_device.c: 359: BDT[0].CNT = 8;
 30201  00FC90  0E08               	movlw	8
 30202  00FC92  6F01               	movwf	1,b	;volatile
 30203                           
 30204                           ; BSR set to: 13
 30205                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 30206  00FC94  0E04               	movlw	4
 30207  00FC96  6F00               	movwf	0,b	;volatile
 30208                           
 30209                           ; BSR set to: 13
 30210                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 30211  00FC98  8F00               	bsf	0,7,b	;volatile
 30212                           
 30213                           ; BSR set to: 13
 30214                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 30215  00FC9A  0E00               	movlw	0
 30216  00FC9C  0101               	movlb	1	; () banked
 30217  00FC9E  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 30218                           
 30219                           ; BSR set to: 1
 30220                           ;usb_device.c: 366: USB1msTickCount = 0;
 30221  00FCA0  0E00               	movlw	0
 30222  00FCA2  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 30223  00FCA4  0E00               	movlw	0
 30224  00FCA6  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 30225  00FCA8  0E00               	movlw	0
 30226  00FCAA  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 30227  00FCAC  0E00               	movlw	0
 30228  00FCAE  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 30229                           
 30230                           ; BSR set to: 1
 30231                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 30232  00FCB0  0E00               	movlw	0
 30233  00FCB2  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 30234                           
 30235                           ; BSR set to: 1
 30236                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 30237  00FCB4  0E00               	movlw	0
 30238  00FCB6  6E5E               	movwf	_USBDeviceState,c	;volatile
 30239                           
 30240                           ; BSR set to: 1
 30241  00FCB8  0012               	return		;funcret
 30242  00FCBA                     __end_of_USBDeviceInit:
 30243                           	opt stack 0
 30244                           tblptru	equ	0xFF8
 30245                           tblptrh	equ	0xFF7
 30246                           tblptrl	equ	0xFF6
 30247                           tablat	equ	0xFF5
 30248                           prodh	equ	0xFF4
 30249                           prodl	equ	0xFF3
 30250                           intcon	equ	0xFF2
 30251                           postinc0	equ	0xFEE
 30252                           wreg	equ	0xFE8
 30253                           indf1	equ	0xFE7
 30254                           postinc1	equ	0xFE6
 30255                           postdec1	equ	0xFE5
 30256                           plusw1	equ	0xFE3
 30257                           fsr1h	equ	0xFE2
 30258                           fsr1l	equ	0xFE1
 30259                           indf2	equ	0xFDF
 30260                           postinc2	equ	0xFDE
 30261                           postdec2	equ	0xFDD
 30262                           plusw2	equ	0xFDB
 30263                           fsr2h	equ	0xFDA
 30264                           fsr2l	equ	0xFD9
 30265                           status	equ	0xFD8
 30266                           
 30267 ;; *************** function _memset *****************
 30268 ;; Defined at:
 30269 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 30270 ;; Parameters:    Size  Location     Type
 30271 ;;  p1              2    0[BANK0 ] PTR void 
 30272 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30273 ;;  c               2    2[BANK0 ] int 
 30274 ;;  n               2    4[BANK0 ] unsigned int 
 30275 ;; Auto vars:     Size  Location     Type
 30276 ;;  p               2    6[BANK0 ] PTR unsigned char 
 30277 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30278 ;; Return value:  Size  Location     Type
 30279 ;;                  2    0[BANK0 ] PTR void 
 30280 ;; Registers used:
 30281 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30282 ;; Tracked objects:
 30283 ;;		On entry : 0/0
 30284 ;;		On exit  : 0/0
 30285 ;;		Unchanged: 0/0
 30286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30287 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30288 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30290 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30291 ;;Total ram usage:        8 bytes
 30292 ;; Hardware stack levels used:    1
 30293 ;; Hardware stack levels required when called:   10
 30294 ;; This function calls:
 30295 ;;		Nothing
 30296 ;; This function is called by:
 30297 ;;		_USBDeviceInit
 30298 ;; This function uses a non-reentrant model
 30299 ;;
 30300                           
 30301                           	psect	text120
 30302  01534A                     __ptext120:
 30303                           	opt stack 0
 30304  01534A                     _memset:
 30305                           	opt stack 19
 30306                           
 30307                           ; BSR set to: 1
 30308                           ;incstack = 0
 30309  01534A  C060  F066         	movff	memset@p1,memset@p
 30310  01534E  C061  F067         	movff	memset@p1+1,memset@p+1
 30311  015352  D009               	goto	l3729
 30312  015354                     l16407:
 30313  015354  C066  FFD9         	movff	memset@p,fsr2l
 30314  015358  C067  FFDA         	movff	memset@p+1,fsr2h
 30315  01535C  C062  FFDF         	movff	memset@c,indf2
 30316  015360  0100               	movlb	0	; () banked
 30317  015362  4B66               	infsnz	memset@p& (0+255),f,b
 30318  015364  2B67               	incf	(memset@p+1)& (0+255),f,b
 30319  015366                     l3729:
 30320                           
 30321                           ; BSR set to: 0
 30322  015366  0100               	movlb	0	; () banked
 30323  015368  0764               	decf	memset@n& (0+255),f,b
 30324  01536A  A0D8               	btfss	status,0,c
 30325  01536C  0765               	decf	(memset@n+1)& (0+255),f,b
 30326  01536E  2964               	incf	memset@n& (0+255),w,b
 30327  015370  E1F1               	bnz	l16407
 30328  015372  2965               	incf	(memset@n+1)& (0+255),w,b
 30329  015374  B4D8               	btfsc	status,2,c
 30330  015376  0012               	return	
 30331  015378  D7ED               	goto	l3730
 30332  01537A                     __end_of_memset:
 30333                           	opt stack 0
 30334                           tblptru	equ	0xFF8
 30335                           tblptrh	equ	0xFF7
 30336                           tblptrl	equ	0xFF6
 30337                           tablat	equ	0xFF5
 30338                           prodh	equ	0xFF4
 30339                           prodl	equ	0xFF3
 30340                           intcon	equ	0xFF2
 30341                           postinc0	equ	0xFEE
 30342                           wreg	equ	0xFE8
 30343                           indf1	equ	0xFE7
 30344                           postinc1	equ	0xFE6
 30345                           postdec1	equ	0xFE5
 30346                           plusw1	equ	0xFE3
 30347                           fsr1h	equ	0xFE2
 30348                           fsr1l	equ	0xFE1
 30349                           indf2	equ	0xFDF
 30350                           postinc2	equ	0xFDE
 30351                           postdec2	equ	0xFDD
 30352                           plusw2	equ	0xFDB
 30353                           fsr2h	equ	0xFDA
 30354                           fsr2l	equ	0xFD9
 30355                           status	equ	0xFD8
 30356                           
 30357 ;; *************** function _USBDeviceAttach *****************
 30358 ;; Defined at:
 30359 ;;		line 1354 in file "usb_device.c"
 30360 ;; Parameters:    Size  Location     Type
 30361 ;;		None
 30362 ;; Auto vars:     Size  Location     Type
 30363 ;;		None
 30364 ;; Return value:  Size  Location     Type
 30365 ;;                  1    wreg      void 
 30366 ;; Registers used:
 30367 ;;		wreg, status,2
 30368 ;; Tracked objects:
 30369 ;;		On entry : 0/0
 30370 ;;		On exit  : 0/0
 30371 ;;		Unchanged: 0/0
 30372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30377 ;;Total ram usage:        0 bytes
 30378 ;; Hardware stack levels used:    1
 30379 ;; Hardware stack levels required when called:   10
 30380 ;; This function calls:
 30381 ;;		Nothing
 30382 ;; This function is called by:
 30383 ;;		_main
 30384 ;; This function uses a non-reentrant model
 30385 ;;
 30386                           
 30387                           	psect	text121
 30388  0152B8                     __ptext121:
 30389                           	opt stack 0
 30390  0152B8                     _USBDeviceAttach:
 30391                           	opt stack 20
 30392                           
 30393                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 30394                           
 30395                           ; BSR set to: 0
 30396                           ;incstack = 0
 30397  0152B8  505E               	movf	_USBDeviceState,w,c	;volatile
 30398  0152BA  A4D8               	btfss	status,2,c
 30399  0152BC  0012               	return	
 30400                           
 30401                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 30402  0152BE  0E00               	movlw	0
 30403  0152C0  6E65               	movwf	3941,c	;volatile
 30404                           
 30405                           ;usb_device.c: 1365: UIE = 0;
 30406  0152C2  0E00               	movlw	0
 30407  0152C4  010F               	movlb	15	; () banked
 30408  0152C6  6F36               	movwf	54,b	;volatile
 30409                           
 30410                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 30411  0152C8  0E16               	movlw	22
 30412  0152CA  6F39               	movwf	57,b	;volatile
 30413  0152CC  0E9F               	movlw	159
 30414  0152CE  6F37               	movwf	55,b	;volatile
 30415  0152D0  0E7B               	movlw	123
 30416  0152D2  6F36               	movwf	54,b	;volatile
 30417                           
 30418                           ; BSR set to: 15
 30419                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 30420  0152D4  8ED0               	bsf	4048,7,c	;volatile
 30421                           
 30422                           ; BSR set to: 15
 30423  0152D6  88A2               	bsf	4002,4,c	;volatile
 30424                           
 30425                           ; BSR set to: 15
 30426  0152D8  88A0               	bsf	4000,4,c	;volatile
 30427                           
 30428                           ; BSR set to: 15
 30429  0152DA  8EF2               	bsf	intcon,7,c	;volatile
 30430                           
 30431                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 30432  0152DC  D001               	goto	l206
 30433  0152DE                     l207:
 30434  0152DE  8665               	bsf	3941,3,c	;volatile
 30435  0152E0                     l206:
 30436  0152E0  A665               	btfss	3941,3,c	;volatile
 30437  0152E2  D7FD               	goto	l207
 30438                           
 30439                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 30440  0152E4  0E01               	movlw	1
 30441  0152E6  6E5E               	movwf	_USBDeviceState,c	;volatile
 30442  0152E8  0012               	return	
 30443  0152EA                     __end_of_USBDeviceAttach:
 30444                           	opt stack 0
 30445                           tblptru	equ	0xFF8
 30446                           tblptrh	equ	0xFF7
 30447                           tblptrl	equ	0xFF6
 30448                           tablat	equ	0xFF5
 30449                           prodh	equ	0xFF4
 30450                           prodl	equ	0xFF3
 30451                           intcon	equ	0xFF2
 30452                           postinc0	equ	0xFEE
 30453                           wreg	equ	0xFE8
 30454                           indf1	equ	0xFE7
 30455                           postinc1	equ	0xFE6
 30456                           postdec1	equ	0xFE5
 30457                           plusw1	equ	0xFE3
 30458                           fsr1h	equ	0xFE2
 30459                           fsr1l	equ	0xFE1
 30460                           indf2	equ	0xFDF
 30461                           postinc2	equ	0xFDE
 30462                           postdec2	equ	0xFDD
 30463                           plusw2	equ	0xFDB
 30464                           fsr2h	equ	0xFDA
 30465                           fsr2l	equ	0xFD9
 30466                           status	equ	0xFD8
 30467                           
 30468 ;; *************** function _SYSTEM_Initialize *****************
 30469 ;; Defined at:
 30470 ;;		line 39 in file "system.c"
 30471 ;; Parameters:    Size  Location     Type
 30472 ;;  state           1    wreg     enum E6623
 30473 ;; Auto vars:     Size  Location     Type
 30474 ;;  state           1    4[BANK0 ] enum E6623
 30475 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 30476 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 30477 ;; Return value:  Size  Location     Type
 30478 ;;                  1    wreg      void 
 30479 ;; Registers used:
 30480 ;;		wreg, status,2, status,0
 30481 ;; Tracked objects:
 30482 ;;		On entry : 0/0
 30483 ;;		On exit  : 0/0
 30484 ;;		Unchanged: 0/0
 30485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30487 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30489 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30490 ;;Total ram usage:        5 bytes
 30491 ;; Hardware stack levels used:    1
 30492 ;; Hardware stack levels required when called:   10
 30493 ;; This function calls:
 30494 ;;		Nothing
 30495 ;; This function is called by:
 30496 ;;		_main
 30497 ;; This function uses a non-reentrant model
 30498 ;;
 30499                           
 30500                           	psect	text122
 30501  0145E2                     __ptext122:
 30502                           	opt stack 0
 30503  0145E2                     _SYSTEM_Initialize:
 30504                           	opt stack 20
 30505                           
 30506                           ;incstack = 0
 30507                           ;SYSTEM_Initialize@state stored from wreg
 30508  0145E2  0100               	movlb	0	; () banked
 30509  0145E4  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 30510                           
 30511                           ;system.c: 41: switch(state)
 30512  0145E6  D01E               	goto	l897
 30513  0145E8                     
 30514                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 30515  0145E8  0E02               	movlw	2
 30516  0145EA  0100               	movlb	0	; () banked
 30517  0145EC  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 30518  0145EE  0E58               	movlw	88
 30519  0145F0  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 30520                           
 30521                           ; BSR set to: 0
 30522                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 30523  0145F2  8C9B               	bsf	3995,6,c	;volatile
 30524  0145F4                     l17455:
 30525                           
 30526                           ; BSR set to: 0
 30527  0145F4  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 30528  0145F6  A0D8               	btfss	status,0,c
 30529  0145F8  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 30530  0145FA  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 30531  0145FC  E1FB               	bnz	l17455
 30532  0145FE  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 30533  014600  B4D8               	btfsc	status,2,c
 30534  014602  0012               	return	
 30535  014604  D7F7               	goto	l900
 30536  014606                     
 30537                           ; BSR set to: 0
 30538                           ;system.c: 78: OSCCON = 0x70;
 30539                           
 30540                           ; BSR set to: 0
 30541  014606  0E70               	movlw	112
 30542  014608  6ED3               	movwf	4051,c	;volatile
 30543                           
 30544                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 30545  01460A  0E03               	movlw	3
 30546  01460C  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 30547  01460E  0E20               	movlw	32
 30548  014610  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 30549  014612                     l17459:
 30550                           
 30551                           ; BSR set to: 0
 30552  014612  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 30553  014614  A0D8               	btfss	status,0,c
 30554  014616  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 30555  014618  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 30556  01461A  E1FB               	bnz	l17459
 30557  01461C  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 30558  01461E  B4D8               	btfsc	status,2,c
 30559  014620  0012               	return	
 30560  014622  D7F7               	goto	l906
 30561  014624                     l897:
 30562                           
 30563                           ; BSR set to: 0
 30564  014624  0100               	movlb	0	; () banked
 30565  014626  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 30566                           
 30567                           ; Switch size 1, requested type "space"
 30568                           ; Number of cases is 3, Range of values is 0 to 2
 30569                           ; switch strategies available:
 30570                           ; Name         Instructions Cycles
 30571                           ; simple_byte           10     6 (average)
 30572                           ;	Chosen strategy is simple_byte
 30573  014628  0A00               	xorlw	0	; case 0
 30574  01462A  B4D8               	btfsc	status,2,c
 30575  01462C  D7DD               	goto	l898
 30576  01462E  0A01               	xorlw	1	; case 1
 30577  014630  B4D8               	btfsc	status,2,c
 30578  014632  0012               	return	
 30579  014634  0A03               	xorlw	3	; case 2
 30580  014636  A4D8               	btfss	status,2,c
 30581  014638  0012               	return	
 30582  01463A  D7E5               	goto	l904
 30583  01463C                     __end_of_SYSTEM_Initialize:
 30584                           	opt stack 0
 30585                           tblptru	equ	0xFF8
 30586                           tblptrh	equ	0xFF7
 30587                           tblptrl	equ	0xFF6
 30588                           tablat	equ	0xFF5
 30589                           prodh	equ	0xFF4
 30590                           prodl	equ	0xFF3
 30591                           intcon	equ	0xFF2
 30592                           postinc0	equ	0xFEE
 30593                           wreg	equ	0xFE8
 30594                           indf1	equ	0xFE7
 30595                           postinc1	equ	0xFE6
 30596                           postdec1	equ	0xFE5
 30597                           plusw1	equ	0xFE3
 30598                           fsr1h	equ	0xFE2
 30599                           fsr1l	equ	0xFE1
 30600                           indf2	equ	0xFDF
 30601                           postinc2	equ	0xFDE
 30602                           postdec2	equ	0xFDD
 30603                           plusw2	equ	0xFDB
 30604                           fsr2h	equ	0xFDA
 30605                           fsr2l	equ	0xFD9
 30606                           status	equ	0xFD8
 30607                           
 30608 ;; *************** function _APP_DeviceMSDTasks *****************
 30609 ;; Defined at:
 30610 ;;		line 110 in file "app_device_msd.c"
 30611 ;; Parameters:    Size  Location     Type
 30612 ;;		None
 30613 ;; Auto vars:     Size  Location     Type
 30614 ;;		None
 30615 ;; Return value:  Size  Location     Type
 30616 ;;                  1    wreg      void 
 30617 ;; Registers used:
 30618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30619 ;; Tracked objects:
 30620 ;;		On entry : 0/0
 30621 ;;		On exit  : 0/0
 30622 ;;		Unchanged: 0/0
 30623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30628 ;;Total ram usage:        0 bytes
 30629 ;; Hardware stack levels used:    1
 30630 ;; Hardware stack levels required when called:   21
 30631 ;; This function calls:
 30632 ;;		_MSDTasks
 30633 ;; This function is called by:
 30634 ;;		_main
 30635 ;; This function uses a non-reentrant model
 30636 ;;
 30637                           
 30638                           	psect	text123
 30639  015806                     __ptext123:
 30640                           	opt stack 0
 30641  015806                     _APP_DeviceMSDTasks:
 30642                           	opt stack 9
 30643                           
 30644                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 30645                           
 30646                           ; BSR set to: 0
 30647                           ;incstack = 0
 30648  015806  0E20               	movlw	32
 30649  015808  605E               	cpfslt	_USBDeviceState,c	;volatile
 30650  01580A  D001               	goto	l986
 30651  01580C  0012               	return	
 30652  01580E                     l986:
 30653                           
 30654                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 30655  01580E  B265               	btfsc	3941,1,c	;volatile
 30656  015810  0012               	return	
 30657                           
 30658                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 30659                           
 30660                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 30661  015812  ECE9  F071         	call	_MSDTasks	;wreg free
 30662  015816  0012               	return		;funcret
 30663  015818                     __end_of_APP_DeviceMSDTasks:
 30664                           	opt stack 0
 30665                           tblptru	equ	0xFF8
 30666                           tblptrh	equ	0xFF7
 30667                           tblptrl	equ	0xFF6
 30668                           tablat	equ	0xFF5
 30669                           prodh	equ	0xFF4
 30670                           prodl	equ	0xFF3
 30671                           intcon	equ	0xFF2
 30672                           postinc0	equ	0xFEE
 30673                           wreg	equ	0xFE8
 30674                           indf1	equ	0xFE7
 30675                           postinc1	equ	0xFE6
 30676                           postdec1	equ	0xFE5
 30677                           plusw1	equ	0xFE3
 30678                           fsr1h	equ	0xFE2
 30679                           fsr1l	equ	0xFE1
 30680                           indf2	equ	0xFDF
 30681                           postinc2	equ	0xFDE
 30682                           postdec2	equ	0xFDD
 30683                           plusw2	equ	0xFDB
 30684                           fsr2h	equ	0xFDA
 30685                           fsr2l	equ	0xFD9
 30686                           status	equ	0xFD8
 30687                           
 30688 ;; *************** function _MSDTasks *****************
 30689 ;; Defined at:
 30690 ;;		line 335 in file "usb_device_msd.c"
 30691 ;; Parameters:    Size  Location     Type
 30692 ;;		None
 30693 ;; Auto vars:     Size  Location     Type
 30694 ;;  i               1   81[BANK0 ] unsigned char 
 30695 ;; Return value:  Size  Location     Type
 30696 ;;                  1    wreg      unsigned char 
 30697 ;; Registers used:
 30698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30699 ;; Tracked objects:
 30700 ;;		On entry : 0/0
 30701 ;;		On exit  : 0/0
 30702 ;;		Unchanged: 0/0
 30703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30705 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30706 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30707 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30708 ;;Total ram usage:        6 bytes
 30709 ;; Hardware stack levels used:    1
 30710 ;; Hardware stack levels required when called:   20
 30711 ;; This function calls:
 30712 ;;		_MSDProcessCommand
 30713 ;;		_USBStallEndpoint
 30714 ;;		_USBTransferOnePacket
 30715 ;; This function is called by:
 30716 ;;		_APP_DeviceMSDTasks
 30717 ;; This function uses a non-reentrant model
 30718 ;;
 30719                           
 30720                           	psect	text124
 30721  00E3D2                     __ptext124:
 30722                           	opt stack 0
 30723  00E3D2                     _MSDTasks:
 30724                           	opt stack 9
 30725                           
 30726                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 30727                           
 30728                           ;incstack = 0
 30729  00E3D2  0E20               	movlw	32
 30730  00E3D4  185E               	xorwf	_USBDeviceState,w,c	;volatile
 30731  00E3D6  A4D8               	btfss	status,2,c
 30732  00E3D8  0012               	return	
 30733                           
 30734                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 30735                           
 30736                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 30737  00E3DA  98A0               	bcf	4000,4,c	;volatile
 30738                           
 30739                           ;usb_device_msd.c: 357: switch(MSD_State)
 30740  00E3DC  D11E               	goto	l570
 30741  00E3DE                     
 30742                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 30743  00E3DE  0101               	movlb	1	; () banked
 30744  00E3E0  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 30745  00E3E2  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 30746  00E3E4  B4D8               	btfsc	status,2,c
 30747  00E3E6  D006               	goto	u15860
 30748                           
 30749                           ; BSR set to: 1
 30750  00E3E8  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 30751  00E3EC  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 30752  00E3F0  BEDF               	btfsc	indf2,7,c
 30753  00E3F2  D122               	goto	l586
 30754  00E3F4                     u15860:
 30755                           
 30756                           ; BSR set to: 1
 30757                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 30758                           
 30759                           ; BSR set to: 1
 30760  00E3F4  0E00               	movlw	0
 30761  00E3F6  0100               	movlb	0	; () banked
 30762  00E3F8  6FB1               	movwf	MSDTasks@i& (0+255),b
 30763  00E3FA                     l16493:
 30764                           
 30765                           ; BSR set to: 0
 30766  00E3FA  0E1E               	movlw	30
 30767  00E3FC  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 30768  00E3FE  D001               	goto	l575
 30769  00E400  D014               	goto	u15880
 30770  00E402                     l575:
 30771                           
 30772                           ; BSR set to: 0
 30773                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 30774                           
 30775                           ; BSR set to: 0
 30776  00E402  51B1               	movf	MSDTasks@i& (0+255),w,b
 30777  00E404  0D01               	mullw	1
 30778  00E406  0E40               	movlw	64
 30779  00E408  24F3               	addwf	prodl,w,c
 30780  00E40A  6ED9               	movwf	fsr2l,c
 30781  00E40C  0E0D               	movlw	13
 30782  00E40E  20F4               	addwfc	prodh,w,c
 30783  00E410  6EDA               	movwf	fsr2h,c
 30784  00E412  51B1               	movf	MSDTasks@i& (0+255),w,b
 30785  00E414  0D01               	mullw	1
 30786  00E416  0E00               	movlw	low _gblCBW
 30787  00E418  24F3               	addwf	prodl,w,c
 30788  00E41A  6EE1               	movwf	fsr1l,c
 30789  00E41C  0E02               	movlw	high _gblCBW
 30790  00E41E  20F4               	addwfc	prodh,w,c
 30791  00E420  6EE2               	movwf	fsr1h,c
 30792  00E422  CFDF FFE7          	movff	indf2,indf1
 30793                           
 30794                           ; BSR set to: 0
 30795  00E426  2BB1               	incf	MSDTasks@i& (0+255),f,b
 30796  00E428  D7E8               	goto	l16493
 30797  00E42A                     u15880:
 30798                           
 30799                           ; BSR set to: 0
 30800                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 30801                           
 30802                           ; BSR set to: 0
 30803  00E42A  0101               	movlb	1	; () banked
 30804  00E42C  EE20 F001          	lfsr	2,1
 30805  00E430  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 30806  00E432  26D9               	addwf	fsr2l,f,c
 30807  00E434  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 30808  00E436  22DA               	addwfc	fsr2h,f,c
 30809  00E438  0E1F               	movlw	31
 30810  00E43A  18DE               	xorwf	postinc2,w,c
 30811  00E43C  A4D8               	btfss	status,2,c
 30812  00E43E  D077               	goto	l577
 30813                           
 30814                           ; BSR set to: 1
 30815  00E440  0E55               	movlw	85
 30816  00E442  0102               	movlb	2	; () banked
 30817  00E444  1900               	xorwf	_gblCBW& (0+255),w,b
 30818  00E446  E173               	bnz	l577
 30819  00E448  0E53               	movlw	83
 30820  00E44A  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 30821  00E44C  E170               	bnz	l577
 30822  00E44E  0E42               	movlw	66
 30823  00E450  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 30824  00E452  E16D               	bnz	l577
 30825  00E454  0E43               	movlw	67
 30826  00E456  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 30827  00E458  A4D8               	btfss	status,2,c
 30828  00E45A  D069               	goto	l577
 30829                           
 30830                           ; BSR set to: 2
 30831                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 30832  00E45C  0E01               	movlw	1
 30833  00E45E  0101               	movlb	1	; () banked
 30834  00E460  6F5B               	movwf	_MSDCBWValid& (0+255),b
 30835                           
 30836                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 30837  00E462  0102               	movlb	2	; () banked
 30838  00E464  510D               	movf	(_gblCBW+13)& (0+255),w,b
 30839  00E466  A4D8               	btfss	status,2,c
 30840  00E468  D055               	goto	l578
 30841                           
 30842                           ; BSR set to: 2
 30843  00E46A  0E11               	movlw	17
 30844  00E46C  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 30845  00E46E  D052               	goto	l578
 30846                           
 30847                           ; BSR set to: 2
 30848  00E470  510E               	movf	(_gblCBW+14)& (0+255),w,b
 30849  00E472  B4D8               	btfsc	status,2,c
 30850  00E474  D04F               	goto	l578
 30851                           
 30852                           ; BSR set to: 2
 30853  00E476  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 30854  00E47A  0E3F               	movlw	63
 30855  00E47C  0100               	movlb	0	; () banked
 30856  00E47E  17AC               	andwf	??_MSDTasks& (0+255),f,b
 30857  00E480  A4D8               	btfss	status,2,c
 30858  00E482  D048               	goto	l578
 30859                           
 30860                           ; BSR set to: 0
 30861                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 30862  00E484  0E55               	movlw	85
 30863  00E486  010D               	movlb	13	; () banked
 30864  00E488  6F80               	movwf	128,b	;volatile
 30865  00E48A  0E53               	movlw	83
 30866  00E48C  6F81               	movwf	129,b	;volatile
 30867  00E48E  0E42               	movlw	66
 30868  00E490  6F82               	movwf	130,b	;volatile
 30869  00E492  0E53               	movlw	83
 30870  00E494  6F83               	movwf	131,b	;volatile
 30871                           
 30872                           ; BSR set to: 13
 30873                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 30874  00E496  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 30875  00E49A  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 30876  00E49E  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 30877  00E4A2  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 30878                           
 30879                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 30880  00E4A6  0E00               	movlw	0
 30881  00E4A8  6F88               	movwf	136,b	;volatile
 30882  00E4AA  0E00               	movlw	0
 30883  00E4AC  6F89               	movwf	137,b	;volatile
 30884  00E4AE  0E00               	movlw	0
 30885  00E4B0  6F8A               	movwf	138,b	;volatile
 30886  00E4B2  0E00               	movlw	0
 30887  00E4B4  6F8B               	movwf	139,b	;volatile
 30888                           
 30889                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 30890  00E4B6  0E00               	movlw	0
 30891  00E4B8  6F8C               	movwf	140,b	;volatile
 30892                           
 30893                           ; BSR set to: 13
 30894                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 30895  00E4BA  0101               	movlb	1	; () banked
 30896  00E4BC  6962               	setf	_MSDCommandState& (0+255),b
 30897                           
 30898                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 30899  00E4BE  0E00               	movlw	0
 30900  00E4C0  6F61               	movwf	_MSDReadState& (0+255),b
 30901                           
 30902                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 30903  00E4C2  0E00               	movlw	0
 30904  00E4C4  6F60               	movwf	_MSDWriteState& (0+255),b
 30905                           
 30906                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 30907  00E4C6  0E00               	movlw	0
 30908  00E4C8  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 30909                           
 30910                           ; BSR set to: 1
 30911                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 30912  00E4CA  0E03               	movlw	3
 30913  00E4CC  0102               	movlb	2	; () banked
 30914  00E4CE  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 30915  00E4D0  B4D8               	btfsc	status,2,c
 30916  00E4D2  D009               	goto	l579
 30917                           
 30918                           ; BSR set to: 2
 30919                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 30920  00E4D4  0101               	movlb	1	; () banked
 30921  00E4D6  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 30922  00E4D8  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 30923  00E4DA  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 30924  00E4DC  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 30925                           
 30926                           ; BSR set to: 1
 30927                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 30928  00E4DE  0E00               	movlw	0
 30929  00E4E0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 30930                           
 30931                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 30932  00E4E2  0E00               	movlw	0
 30933  00E4E4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 30934  00E4E6                     l579:
 30935                           
 30936                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 30937                           
 30938                           ; BSR set to: 1
 30939  00E4E6  0102               	movlb	2	; () banked
 30940  00E4E8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 30941  00E4EA  D002               	goto	l580
 30942                           
 30943                           ; BSR set to: 2
 30944                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 30945  00E4EC  0E01               	movlw	1
 30946  00E4EE  D001               	goto	L44
 30947  00E4F0                     l580:
 30948                           
 30949                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 30950                           
 30951                           ; BSR set to: 1
 30952  00E4F0  0E02               	movlw	2
 30953  00E4F2                     L44:
 30954  00E4F2  0101               	movlb	1	; () banked
 30955  00E4F4  6F63               	movwf	_MSD_State& (0+255),b
 30956                           
 30957                           ; BSR set to: 1
 30958                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 30959                           
 30960                           ; BSR set to: 1
 30961  00E4F6  0102               	movlb	2	; () banked
 30962  00E4F8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 30963  00E4FA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 30964  00E4FC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 30965  00E4FE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 30966  00E500  B4D8               	btfsc	status,2,c
 30967  00E502  D002               	goto	l582
 30968                           
 30969                           ; BSR set to: 2
 30970                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 30971  00E504  0E00               	movlw	0
 30972  00E506  D001               	goto	L45
 30973  00E508                     l582:
 30974                           
 30975                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 30976                           
 30977                           ; BSR set to: 1
 30978  00E508  0E01               	movlw	1
 30979  00E50A                     L45:
 30980  00E50A  0101               	movlb	1	; () banked
 30981  00E50C  6F5C               	movwf	_MSDHostNoData& (0+255),b
 30982                           
 30983                           ; BSR set to: 1
 30984                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 30985                           
 30986                           ; BSR set to: 1
 30987  00E50E  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 30988                           
 30989                           ;usb_device_msd.c: 454: }
 30990  00E512  D092               	goto	l586
 30991  00E514                     l578:
 30992                           
 30993                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 30994                           
 30995                           ; BSR set to: 1
 30996  00E514  0E01               	movlw	1
 30997  00E516  0100               	movlb	0	; () banked
 30998  00E518  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30999  00E51A  0E02               	movlw	2
 31000  00E51C  EC7E  F086         	call	_USBStallEndpoint
 31001                           
 31002                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 31003  00E520  0E00               	movlw	0
 31004  00E522  0100               	movlb	0	; () banked
 31005  00E524  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31006  00E526  0E02               	movlw	2
 31007  00E528  EC7E  F086         	call	_USBStallEndpoint
 31008                           
 31009                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 31010  00E52C  D085               	goto	l586
 31011  00E52E                     l577:
 31012                           
 31013                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 31014  00E52E  0E01               	movlw	1
 31015  00E530  0100               	movlb	0	; () banked
 31016  00E532  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31017  00E534  0E02               	movlw	2
 31018  00E536  EC7E  F086         	call	_USBStallEndpoint
 31019                           
 31020                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 31021  00E53A  0E00               	movlw	0
 31022  00E53C  0100               	movlb	0	; () banked
 31023  00E53E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31024  00E540  0E02               	movlw	2
 31025  00E542  EC7E  F086         	call	_USBStallEndpoint
 31026                           
 31027                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 31028  00E546  0E00               	movlw	0
 31029  00E548  0101               	movlb	1	; () banked
 31030  00E54A  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31031                           
 31032                           ; BSR set to: 1
 31033                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 31034                           
 31035                           ; BSR set to: 1
 31036  00E54C  D075               	goto	l586
 31037  00E54E                     
 31038                           ; BSR set to: 1
 31039                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31040                           
 31041                           ; BSR set to: 1
 31042  00E54E  EC80  F081         	call	_MSDProcessCommand	;wreg free
 31043  00E552  0AFF               	xorlw	255
 31044  00E554  A4D8               	btfss	status,2,c
 31045  00E556  D070               	goto	l586
 31046  00E558  D011               	goto	l591
 31047  00E55A                     
 31048                           ; BSR set to: 1
 31049                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31050                           
 31051                           ; BSR set to: 1
 31052  00E55A  EC80  F081         	call	_MSDProcessCommand	;wreg free
 31053  00E55E  0AFF               	xorlw	255
 31054  00E560  A4D8               	btfss	status,2,c
 31055  00E562  D06A               	goto	l586
 31056                           
 31057                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 31058  00E564  010D               	movlb	13	; () banked
 31059  00E566  518C               	movf	140,w,b	;volatile
 31060  00E568  A4D8               	btfss	status,2,c
 31061  00E56A  D008               	goto	l591
 31062                           
 31063                           ; BSR set to: 13
 31064  00E56C  5188               	movf	136,w,b	;volatile
 31065  00E56E  1189               	iorwf	137,w,b	;volatile
 31066  00E570  118A               	iorwf	138,w,b	;volatile
 31067  00E572  118B               	iorwf	139,w,b	;volatile
 31068  00E574  B4D8               	btfsc	status,2,c
 31069  00E576  D002               	goto	l591
 31070                           
 31071                           ; BSR set to: 13
 31072                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 31073  00E578  0E02               	movlw	2
 31074  00E57A  6F8C               	movwf	140,b	;volatile
 31075  00E57C                     l591:
 31076                           
 31077                           ; BSR set to: 13
 31078                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 31079  00E57C  0E03               	movlw	3
 31080  00E57E  D03E               	goto	L43
 31081  00E580                     
 31082                           ; BSR set to: 1
 31083                           
 31084                           ; BSR set to: 1
 31085  00E580  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 31086  00E584  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 31087                           
 31088                           ; BSR set to: 1
 31089                           
 31090                           ; BSR set to: 1
 31091                           
 31092                           ; BSR set to: 1
 31093  00E588  0100               	movlb	0	; () banked
 31094  00E58A  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 31095  00E58C  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 31096  00E58E  B4D8               	btfsc	status,2,c
 31097  00E590  D00A               	goto	l593
 31098                           
 31099                           ; BSR set to: 0
 31100  00E592  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 31101  00E596  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 31102                           
 31103                           ; BSR set to: 0
 31104                           
 31105                           ; BSR set to: 0
 31106                           
 31107                           ; BSR set to: 0
 31108                           
 31109                           ; BSR set to: 0
 31110  00E59A  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 31111  00E59E  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 31112  00E5A2  BEDF               	btfsc	indf2,7,c
 31113  00E5A4  D049               	goto	l586
 31114  00E5A6                     l593:
 31115                           
 31116                           ; BSR set to: 0
 31117                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 31118                           
 31119                           ; BSR set to: 0
 31120  00E5A6  0E01               	movlw	1
 31121  00E5A8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31122  00E5AA  0E80               	movlw	128
 31123  00E5AC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31124  00E5AE  0E0D               	movlw	13
 31125  00E5B0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31126  00E5B2  0E0D               	movlw	13
 31127  00E5B4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31128  00E5B6  0E02               	movlw	2
 31129  00E5B8  EC03  F087         	call	_USBTransferOnePacket
 31130  00E5BC  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31131  00E5C0  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31132                           
 31133                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31134  00E5C4  0101               	movlb	1	; () banked
 31135  00E5C6  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31136  00E5C8  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31137  00E5CA  B4D8               	btfsc	status,2,c
 31138  00E5CC  D006               	goto	u16050
 31139                           
 31140                           ; BSR set to: 1
 31141  00E5CE  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31142  00E5D2  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31143  00E5D6  BEDF               	btfsc	indf2,7,c
 31144  00E5D8  D010               	goto	l602
 31145  00E5DA                     u16050:
 31146                           
 31147                           ; BSR set to: 1
 31148                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 31149                           
 31150                           ; BSR set to: 1
 31151  00E5DA  0E00               	movlw	0
 31152  00E5DC  0100               	movlb	0	; () banked
 31153  00E5DE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31154  00E5E0  0E40               	movlw	64
 31155  00E5E2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31156  00E5E4  0E0D               	movlw	13
 31157  00E5E6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31158  00E5E8  0E40               	movlw	64
 31159  00E5EA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31160  00E5EC  0E02               	movlw	2
 31161  00E5EE  EC03  F087         	call	_USBTransferOnePacket
 31162  00E5F2  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31163  00E5F6  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31164  00E5FA                     l602:
 31165                           
 31166                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 31167  00E5FA  0E00               	movlw	0
 31168  00E5FC                     L43:
 31169  00E5FC  0101               	movlb	1	; () banked
 31170  00E5FE  6F63               	movwf	_MSD_State& (0+255),b
 31171                           
 31172                           ;usb_device_msd.c: 513: break;
 31173  00E600  D01B               	goto	l586
 31174  00E602                     
 31175                           ; BSR set to: 1
 31176                           ;usb_device_msd.c: 518: MSD_State=0x00;
 31177                           
 31178                           ; BSR set to: 1
 31179  00E602  0E00               	movlw	0
 31180  00E604  6F63               	movwf	_MSD_State& (0+255),b
 31181                           
 31182                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 31183  00E606  0E02               	movlw	2
 31184  00E608  010D               	movlb	13	; () banked
 31185  00E60A  6F8C               	movwf	140,b	;volatile
 31186                           
 31187                           ; BSR set to: 13
 31188                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 31189  00E60C  0E00               	movlw	0
 31190  00E60E  0100               	movlb	0	; () banked
 31191  00E610  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31192  00E612  0E02               	movlw	2
 31193  00E614  EC7E  F086         	call	_USBStallEndpoint
 31194                           
 31195                           ;usb_device_msd.c: 521: }
 31196  00E618  D00F               	goto	l586
 31197  00E61A                     l570:
 31198  00E61A  0101               	movlb	1	; () banked
 31199  00E61C  5163               	movf	_MSD_State& (0+255),w,b
 31200                           
 31201                           ; Switch size 1, requested type "space"
 31202                           ; Number of cases is 4, Range of values is 0 to 3
 31203                           ; switch strategies available:
 31204                           ; Name         Instructions Cycles
 31205                           ; simple_byte           13     7 (average)
 31206                           ;	Chosen strategy is simple_byte
 31207  00E61E  0A00               	xorlw	0	; case 0
 31208  00E620  B4D8               	btfsc	status,2,c
 31209  00E622  D6DD               	goto	l571
 31210  00E624  0A01               	xorlw	1	; case 1
 31211  00E626  B4D8               	btfsc	status,2,c
 31212  00E628  D792               	goto	l587
 31213  00E62A  0A03               	xorlw	3	; case 2
 31214  00E62C  B4D8               	btfsc	status,2,c
 31215  00E62E  D795               	goto	l589
 31216  00E630  0A01               	xorlw	1	; case 3
 31217  00E632  B4D8               	btfsc	status,2,c
 31218  00E634  D7A5               	goto	l592
 31219  00E636  D7E5               	goto	l605
 31220  00E638                     l586:
 31221                           
 31222                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 31223  00E638  88A0               	bsf	4000,4,c	;volatile
 31224                           
 31225                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 31226  00E63A  0012               	return		;funcret
 31227  00E63C                     __end_of_MSDTasks:
 31228                           	opt stack 0
 31229                           tblptru	equ	0xFF8
 31230                           tblptrh	equ	0xFF7
 31231                           tblptrl	equ	0xFF6
 31232                           tablat	equ	0xFF5
 31233                           prodh	equ	0xFF4
 31234                           prodl	equ	0xFF3
 31235                           intcon	equ	0xFF2
 31236                           postinc0	equ	0xFEE
 31237                           wreg	equ	0xFE8
 31238                           indf1	equ	0xFE7
 31239                           postinc1	equ	0xFE6
 31240                           postdec1	equ	0xFE5
 31241                           plusw1	equ	0xFE3
 31242                           fsr1h	equ	0xFE2
 31243                           fsr1l	equ	0xFE1
 31244                           indf2	equ	0xFDF
 31245                           postinc2	equ	0xFDE
 31246                           postdec2	equ	0xFDD
 31247                           plusw2	equ	0xFDB
 31248                           fsr2h	equ	0xFDA
 31249                           fsr2l	equ	0xFD9
 31250                           status	equ	0xFD8
 31251                           
 31252 ;; *************** function _MSDProcessCommand *****************
 31253 ;; Defined at:
 31254 ;;		line 553 in file "usb_device_msd.c"
 31255 ;; Parameters:    Size  Location     Type
 31256 ;;		None
 31257 ;; Auto vars:     Size  Location     Type
 31258 ;;		None
 31259 ;; Return value:  Size  Location     Type
 31260 ;;                  1    wreg      unsigned char 
 31261 ;; Registers used:
 31262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31263 ;; Tracked objects:
 31264 ;;		On entry : 0/0
 31265 ;;		On exit  : 0/0
 31266 ;;		Unchanged: 0/0
 31267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31270 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31271 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31272 ;;Total ram usage:        5 bytes
 31273 ;; Hardware stack levels used:    1
 31274 ;; Hardware stack levels required when called:   19
 31275 ;; This function calls:
 31276 ;;		_ExternalFlash_MediaDetect
 31277 ;;		_ExternalFlash_MediaInitialize
 31278 ;;		_MSDProcessCommandMediaAbsent
 31279 ;;		_MSDProcessCommandMediaPresent
 31280 ;; This function is called by:
 31281 ;;		_MSDTasks
 31282 ;; This function uses a non-reentrant model
 31283 ;;
 31284                           
 31285                           	psect	text125
 31286  010300                     __ptext125:
 31287                           	opt stack 0
 31288  010300                     _MSDProcessCommand:
 31289                           	opt stack 9
 31290                           
 31291                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 31292                           
 31293                           ;incstack = 0
 31294  010300  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 31295  010304  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 31296  010308  EE22  F092         	lfsr	2,_LUN+9
 31297  01030C  D801               	call	u14178
 31298  01030E  D00A               	goto	u14179
 31299  010310                     u14178:
 31300  010310  0005               	push	
 31301  010312  6EFA               	movwf	pclath,c
 31302  010314  50DE               	movf	postinc2,w,c
 31303  010316  6EFD               	movwf	tosl,c
 31304  010318  50DE               	movf	postinc2,w,c
 31305  01031A  6EFE               	movwf	tosh,c
 31306  01031C  50DE               	movf	postinc2,w,c
 31307  01031E  6EFF               	movwf	tosu,c
 31308  010320  50FA               	movf	pclath,w,c
 31309  010322  0012               	return		;indir
 31310  010324                     u14179:
 31311  010324  0900               	iorlw	0
 31312  010326  B4D8               	btfsc	status,2,c
 31313  010328  D00C               	goto	u14190
 31314  01032A  0102               	movlb	2	; () banked
 31315  01032C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31316  01032E  0D01               	mullw	1
 31317  010330  0E5D               	movlw	low _SoftDetach
 31318  010332  24F3               	addwf	prodl,w,c
 31319  010334  6ED9               	movwf	fsr2l,c
 31320  010336  0E01               	movlw	high _SoftDetach
 31321  010338  20F4               	addwfc	prodh,w,c
 31322  01033A  6EDA               	movwf	fsr2h,c
 31323  01033C  04DE               	decf	postinc2,w,c
 31324  01033E  A4D8               	btfss	status,2,c
 31325  010340  D01D               	goto	l608
 31326  010342                     u14190:
 31327                           
 31328                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 31329                           
 31330                           ; BSR set to: 2
 31331  010342  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31332  010346  0E01               	movlw	1
 31333  010348  0100               	movlb	0	; () banked
 31334  01034A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31335  01034C  0E00               	movlw	0
 31336  01034E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31337  010350  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31338  010352  D003               	goto	u14204
 31339  010354                     u14205:
 31340  010354  90D8               	bcf	status,0,c
 31341  010356  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31342  010358  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31343  01035A                     u14204:
 31344  01035A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31345  01035C  D7FB               	goto	u14205
 31346  01035E  0100               	movlb	0	; () banked
 31347  010360  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 31348  010362  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 31349  010364  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 31350  010366  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 31351  010368  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 31352  01036A  0101               	movlb	1	; () banked
 31353  01036C  1747               	andwf	_gblMediaPresent& (0+255),f,b
 31354  01036E  0100               	movlb	0	; () banked
 31355  010370  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 31356  010372  0101               	movlb	1	; () banked
 31357  010374  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 31358                           
 31359                           ; BSR set to: 1
 31360                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 31361  010376  EC47  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31362                           
 31363                           ;usb_device_msd.c: 563: }
 31364  01037A  D058               	goto	l615
 31365  01037C                     l608:
 31366                           
 31367                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 31368  01037C  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31369  010380  0E01               	movlw	1
 31370  010382  0100               	movlb	0	; () banked
 31371  010384  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31372  010386  0E00               	movlw	0
 31373  010388  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31374  01038A  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31375  01038C  D003               	goto	u14214
 31376  01038E                     u14215:
 31377  01038E  90D8               	bcf	status,0,c
 31378  010390  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31379  010392  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31380  010394                     u14214:
 31381  010394  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31382  010396  D7FB               	goto	u14215
 31383  010398  0101               	movlb	1	; () banked
 31384  01039A  5147               	movf	_gblMediaPresent& (0+255),w,b
 31385  01039C  0100               	movlb	0	; () banked
 31386  01039E  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 31387  0103A0  0101               	movlb	1	; () banked
 31388  0103A2  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 31389  0103A4  0100               	movlb	0	; () banked
 31390  0103A6  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 31391  0103A8  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31392  0103AA  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 31393  0103AC  A4D8               	btfss	status,2,c
 31394  0103AE  D03C               	goto	l612
 31395                           
 31396                           ; BSR set to: 0
 31397                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 31398  0103B0  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 31399  0103B4  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 31400  0103B8  D801               	call	u14238
 31401  0103BA  D00B               	goto	u14239
 31402  0103BC                     u14238:
 31403  0103BC  0005               	push	
 31404  0103BE  6EFA               	movwf	pclath,c
 31405  0103C0  0102               	movlb	2	; () banked
 31406  0103C2  5189               	movf	_LUN& (0+255),w,b
 31407  0103C4  6EFD               	movwf	tosl,c
 31408  0103C6  518A               	movf	(_LUN+1)& (0+255),w,b
 31409  0103C8  6EFE               	movwf	tosh,c
 31410  0103CA  518B               	movf	(_LUN+2)& (0+255),w,b
 31411  0103CC  6EFF               	movwf	tosu,c
 31412  0103CE  50FA               	movf	pclath,w,c
 31413  0103D0  0012               	return		;indir
 31414  0103D2                     u14239:
 31415  0103D2  0100               	movlb	0	; () banked
 31416  0103D4  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 31417  0103D6  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 31418  0103D8  B4D8               	btfsc	status,2,c
 31419  0103DA  D023               	goto	l613
 31420                           
 31421                           ; BSR set to: 0
 31422                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 31423  0103DC  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31424  0103E0  0E01               	movlw	1
 31425  0103E2  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31426  0103E4  0E00               	movlw	0
 31427  0103E6  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31428  0103E8  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31429  0103EA  D003               	goto	u14254
 31430  0103EC                     u14255:
 31431  0103EC  90D8               	bcf	status,0,c
 31432  0103EE  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31433  0103F0  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31434  0103F2                     u14254:
 31435  0103F2  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31436  0103F4  D7FB               	goto	u14255
 31437  0103F6  0100               	movlb	0	; () banked
 31438  0103F8  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31439  0103FA  0101               	movlb	1	; () banked
 31440  0103FC  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 31441  0103FE  0100               	movlb	0	; () banked
 31442  010400  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 31443  010402  0101               	movlb	1	; () banked
 31444  010404  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 31445                           
 31446                           ; BSR set to: 1
 31447                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 31448  010406  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 31449  010408  0BF0               	andlw	-16
 31450  01040A  0906               	iorlw	6
 31451  01040C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 31452                           
 31453                           ; BSR set to: 1
 31454                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 31455  01040E  0E28               	movlw	40
 31456  010410  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31457                           
 31458                           ; BSR set to: 1
 31459                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 31460  010412  0E00               	movlw	0
 31461  010414  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31462                           
 31463                           ; BSR set to: 1
 31464                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 31465  010416  0E01               	movlw	1
 31466  010418  010D               	movlb	13	; () banked
 31467  01041A  6F8C               	movwf	140,b	;volatile
 31468                           
 31469                           ; BSR set to: 13
 31470                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 31471  01041C  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31472                           
 31473                           ;usb_device_msd.c: 589: }
 31474  010420  D005               	goto	l615
 31475  010422                     l613:
 31476                           
 31477                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 31478  010422  EC47  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31479                           
 31480                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 31481  010426  D002               	goto	l615
 31482  010428                     l612:
 31483                           
 31484                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 31485  010428  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31486  01042C                     l615:
 31487                           
 31488                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 31489  01042C  0101               	movlb	1	; () banked
 31490  01042E  5162               	movf	_MSDCommandState& (0+255),w,b
 31491  010430  0012               	return	
 31492  010432                     __end_of_MSDProcessCommand:
 31493                           	opt stack 0
 31494                           tosu	equ	0xFFF
 31495                           tosh	equ	0xFFE
 31496                           tosl	equ	0xFFD
 31497                           pclath	equ	0xFFA
 31498                           tblptru	equ	0xFF8
 31499                           tblptrh	equ	0xFF7
 31500                           tblptrl	equ	0xFF6
 31501                           tablat	equ	0xFF5
 31502                           prodh	equ	0xFF4
 31503                           prodl	equ	0xFF3
 31504                           intcon	equ	0xFF2
 31505                           postinc0	equ	0xFEE
 31506                           wreg	equ	0xFE8
 31507                           indf1	equ	0xFE7
 31508                           postinc1	equ	0xFE6
 31509                           postdec1	equ	0xFE5
 31510                           plusw1	equ	0xFE3
 31511                           fsr1h	equ	0xFE2
 31512                           fsr1l	equ	0xFE1
 31513                           indf2	equ	0xFDF
 31514                           postinc2	equ	0xFDE
 31515                           postdec2	equ	0xFDD
 31516                           plusw2	equ	0xFDB
 31517                           fsr2h	equ	0xFDA
 31518                           fsr2l	equ	0xFD9
 31519                           status	equ	0xFD8
 31520                           
 31521 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 31522 ;; Defined at:
 31523 ;;		line 635 in file "usb_device_msd.c"
 31524 ;; Parameters:    Size  Location     Type
 31525 ;;		None
 31526 ;; Auto vars:     Size  Location     Type
 31527 ;;		None
 31528 ;; Return value:  Size  Location     Type
 31529 ;;                  1    wreg      void 
 31530 ;; Registers used:
 31531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31532 ;; Tracked objects:
 31533 ;;		On entry : 0/0
 31534 ;;		On exit  : 0/0
 31535 ;;		Unchanged: 0/0
 31536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31541 ;;Total ram usage:        0 bytes
 31542 ;; Hardware stack levels used:    1
 31543 ;; Hardware stack levels required when called:   18
 31544 ;; This function calls:
 31545 ;;		_MSDErrorHandler
 31546 ;;		_MSDProcessCommandMediaPresent
 31547 ;;		_ResetSenseData
 31548 ;; This function is called by:
 31549 ;;		_MSDProcessCommand
 31550 ;; This function uses a non-reentrant model
 31551 ;;
 31552                           
 31553                           	psect	text126
 31554  01428E                     __ptext126:
 31555                           	opt stack 0
 31556  01428E                     _MSDProcessCommandMediaAbsent:
 31557                           	opt stack 9
 31558                           
 31559                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 31560                           
 31561                           ; BSR set to: 1
 31562                           ;incstack = 0
 31563  01428E  D01E               	goto	l619
 31564  014290                     
 31565                           ;usb_device_msd.c: 646: ResetSenseData();
 31566  014290  EC78  F0A1         	call	_ResetSenseData	;wreg free
 31567                           
 31568                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 31569  014294  0101               	movlb	1	; () banked
 31570  014296  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 31571  014298  0BF0               	andlw	-16
 31572  01429A  0902               	iorlw	2
 31573  01429C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 31574                           
 31575                           ; BSR set to: 1
 31576                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 31577  01429E  0E3A               	movlw	58
 31578  0142A0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31579                           
 31580                           ; BSR set to: 1
 31581                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 31582  0142A2  0E00               	movlw	0
 31583  0142A4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31584                           
 31585                           ; BSR set to: 1
 31586                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 31587  0142A6  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31588                           
 31589                           ;usb_device_msd.c: 655: break;
 31590  0142AA  0012               	return	
 31591  0142AC                     
 31592                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 31593  0142AC  0E01               	movlw	1
 31594  0142AE  010D               	movlb	13	; () banked
 31595  0142B0  6F8C               	movwf	140,b	;volatile
 31596                           
 31597                           ; BSR set to: 13
 31598                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 31599  0142B2  0101               	movlb	1	; () banked
 31600  0142B4  6962               	setf	_MSDCommandState& (0+255),b
 31601                           
 31602                           ;usb_device_msd.c: 665: break;
 31603  0142B6  0012               	return	
 31604  0142B8                     
 31605                           ; BSR set to: 1
 31606                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 31607                           
 31608                           ; BSR set to: 1
 31609  0142B8  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31610                           
 31611                           ;usb_device_msd.c: 671: break;
 31612  0142BC  0012               	return	
 31613  0142BE                     
 31614                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 31615  0142BE  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31616                           
 31617                           ;usb_device_msd.c: 677: break;
 31618  0142C2  0012               	return	
 31619  0142C4                     
 31620                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 31621  0142C4  0E7F               	movlw	127
 31622  0142C6  EC44  F083         	call	_MSDErrorHandler
 31623                           
 31624                           ;usb_device_msd.c: 685: }
 31625                           
 31626                           ;usb_device_msd.c: 684: break;
 31627  0142CA  0012               	return	
 31628  0142CC                     l619:
 31629  0142CC  0101               	movlb	1	; () banked
 31630  0142CE  5162               	movf	_MSDCommandState& (0+255),w,b
 31631                           
 31632                           ; Switch size 1, requested type "space"
 31633                           ; Number of cases is 5, Range of values is 0 to 253
 31634                           ; switch strategies available:
 31635                           ; Name         Instructions Cycles
 31636                           ; simple_byte           16     9 (average)
 31637                           ;	Chosen strategy is simple_byte
 31638  0142D0  0A00               	xorlw	0	; case 0
 31639  0142D2  B4D8               	btfsc	status,2,c
 31640  0142D4  D7EB               	goto	l622
 31641  0142D6  0A03               	xorlw	3	; case 3
 31642  0142D8  B4D8               	btfsc	status,2,c
 31643  0142DA  D7DA               	goto	l620
 31644  0142DC  0A11               	xorlw	17	; case 18
 31645  0142DE  B4D8               	btfsc	status,2,c
 31646  0142E0  D7EB               	goto	l624
 31647  0142E2  0A0C               	xorlw	12	; case 30
 31648  0142E4  B4D8               	btfsc	status,2,c
 31649  0142E6  D7E2               	goto	l622
 31650  0142E8  0AE3               	xorlw	227	; case 253
 31651  0142EA  B4D8               	btfsc	status,2,c
 31652  0142EC  D7E8               	goto	l625
 31653  0142EE  D7EA               	goto	l626
 31654  0142F0                     __end_of_MSDProcessCommandMediaAbsent:
 31655                           	opt stack 0
 31656                           tosu	equ	0xFFF
 31657                           tosh	equ	0xFFE
 31658                           tosl	equ	0xFFD
 31659                           pclath	equ	0xFFA
 31660                           tblptru	equ	0xFF8
 31661                           tblptrh	equ	0xFF7
 31662                           tblptrl	equ	0xFF6
 31663                           tablat	equ	0xFF5
 31664                           prodh	equ	0xFF4
 31665                           prodl	equ	0xFF3
 31666                           intcon	equ	0xFF2
 31667                           postinc0	equ	0xFEE
 31668                           wreg	equ	0xFE8
 31669                           indf1	equ	0xFE7
 31670                           postinc1	equ	0xFE6
 31671                           postdec1	equ	0xFE5
 31672                           plusw1	equ	0xFE3
 31673                           fsr1h	equ	0xFE2
 31674                           fsr1l	equ	0xFE1
 31675                           indf2	equ	0xFDF
 31676                           postinc2	equ	0xFDE
 31677                           postdec2	equ	0xFDD
 31678                           plusw2	equ	0xFDB
 31679                           fsr2h	equ	0xFDA
 31680                           fsr2l	equ	0xFD9
 31681                           status	equ	0xFD8
 31682                           
 31683 ;; *************** function _MSDProcessCommandMediaPresent *****************
 31684 ;; Defined at:
 31685 ;;		line 712 in file "usb_device_msd.c"
 31686 ;; Parameters:    Size  Location     Type
 31687 ;;		None
 31688 ;; Auto vars:     Size  Location     Type
 31689 ;;  capacity        4   66[BANK0 ] struct .
 31690 ;;  sectorSize      4   62[BANK0 ] struct .
 31691 ;;  i               1   70[BANK0 ] unsigned char 
 31692 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 31693 ;; Return value:  Size  Location     Type
 31694 ;;                  1    wreg      void 
 31695 ;; Registers used:
 31696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31697 ;; Tracked objects:
 31698 ;;		On entry : 0/0
 31699 ;;		On exit  : 0/0
 31700 ;;		Unchanged: 0/0
 31701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31703 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31705 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31706 ;;Total ram usage:       14 bytes
 31707 ;; Hardware stack levels used:    1
 31708 ;; Hardware stack levels required when called:   17
 31709 ;; This function calls:
 31710 ;;		_ExternalFlash_CapacityRead
 31711 ;;		_ExternalFlash_SectorSizeRead
 31712 ;;		_ExternalFlash_WriteProtectStateGet
 31713 ;;		_MSDCheckForErrorCases
 31714 ;;		_MSDComputeDeviceInAndResidue
 31715 ;;		_MSDErrorHandler
 31716 ;;		_MSDReadHandler
 31717 ;;		_MSDWriteHandler
 31718 ;;		_ResetSenseData
 31719 ;;		_USBTransferOnePacket
 31720 ;;		_memcpy
 31721 ;; This function is called by:
 31722 ;;		_MSDProcessCommand
 31723 ;;		_MSDProcessCommandMediaAbsent
 31724 ;; This function uses a non-reentrant model
 31725 ;;
 31726                           
 31727                           	psect	text127
 31728  00BDBC                     __ptext127:
 31729                           	opt stack 0
 31730  00BDBC                     _MSDProcessCommandMediaPresent:
 31731                           	opt stack 10
 31732                           
 31733                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 31734                           
 31735                           ;incstack = 0
 31736  00BDBC  D1D0               	goto	l630
 31737  00BDBE                     
 31738                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 31739  00BDBE  EC55  F077         	call	_MSDReadHandler	;wreg free
 31740  00BDC2  0900               	iorlw	0
 31741  00BDC4  A4D8               	btfss	status,2,c
 31742  00BDC6  0012               	return	
 31743                           
 31744                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 31745  00BDC8  0101               	movlb	1	; () banked
 31746  00BDCA  6962               	setf	_MSDCommandState& (0+255),b
 31747                           
 31748                           ; BSR set to: 1
 31749                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 31750  00BDCC  0012               	return	
 31751  00BDCE                     
 31752                           ; BSR set to: 1
 31753                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 31754                           
 31755                           ; BSR set to: 1
 31756  00BDCE  EC33  F06B         	call	_MSDWriteHandler	;wreg free
 31757  00BDD2  0900               	iorlw	0
 31758  00BDD4  A4D8               	btfss	status,2,c
 31759  00BDD6  0012               	return	
 31760                           
 31761                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 31762  00BDD8  0101               	movlb	1	; () banked
 31763  00BDDA  6962               	setf	_MSDCommandState& (0+255),b
 31764                           
 31765                           ; BSR set to: 1
 31766                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 31767  00BDDC  0012               	return	
 31768  00BDDE                     
 31769                           ; BSR set to: 1
 31770                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 31771                           
 31772                           ; BSR set to: 1
 31773  00BDDE  055C               	decf	_MSDHostNoData& (0+255),w,b
 31774  00BDE0  A4D8               	btfss	status,2,c
 31775  00BDE2  D002               	goto	l637
 31776                           
 31777                           ; BSR set to: 1
 31778                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 31779  00BDE4  6962               	setf	_MSDCommandState& (0+255),b
 31780                           
 31781                           ;usb_device_msd.c: 751: break;
 31782  00BDE6  0012               	return	
 31783  00BDE8                     l637:
 31784                           
 31785                           ; BSR set to: 1
 31786                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 31787  00BDE8  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 31788                           
 31789                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 31790  00BDEC  C213  F145         	movff	_gblCBW+19,_TransferLength
 31791                           
 31792                           ; BSR set to: 1
 31793                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 31794  00BDF0  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 31795  00BDF4  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 31796  00BDF8  0100               	movlb	0	; () banked
 31797  00BDFA  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 31798  00BDFC  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 31799  00BDFE  EC5E  F084         	call	_MSDCheckForErrorCases	;wreg free
 31800  00BE02  0900               	iorlw	0
 31801  00BE04  A4D8               	btfss	status,2,c
 31802  00BE06  0012               	return	
 31803                           
 31804                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 31805                           
 31806                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 31807  00BE08  0E00               	movlw	0
 31808  00BE0A  0100               	movlb	0	; () banked
 31809  00BE0C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31810  00BE0E  0E24               	movlw	36
 31811  00BE10  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31812  00BE12  EC72  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31813                           
 31814                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 31815  00BE16  0E00               	movlw	0
 31816  00BE18  0100               	movlb	0	; () banked
 31817  00BE1A  6F60               	movwf	memcpy@d1& (0+255),b
 31818  00BE1C  0E06               	movlw	6
 31819  00BE1E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31820  00BE20  0E60               	movlw	low _inq_resp
 31821  00BE22  6F62               	movwf	memcpy@s1& (0+255),b
 31822  00BE24  0EA1               	movlw	high _inq_resp
 31823  00BE26  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31824  00BE28  0E00               	movlw	0
 31825  00BE2A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31826  00BE2C  0E24               	movlw	36
 31827  00BE2E  6F64               	movwf	memcpy@n& (0+255),b
 31828  00BE30  ECDA  F0A1         	call	_memcpy	;wreg free
 31829                           
 31830                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 31831  00BE34  0EFD               	movlw	253
 31832  00BE36  0101               	movlb	1	; () banked
 31833  00BE38  6F62               	movwf	_MSDCommandState& (0+255),b
 31834                           
 31835                           ;usb_device_msd.c: 773: break;
 31836  00BE3A  0012               	return	
 31837  00BE3C                     
 31838                           ; BSR set to: 1
 31839                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 31840                           
 31841                           ; BSR set to: 1
 31842  00BE3C  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 31843  00BE40  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 31844  00BE44  EE22  F08C         	lfsr	2,_LUN+3
 31845  00BE48  D801               	call	u12508
 31846  00BE4A  D00A               	goto	u12509
 31847  00BE4C                     u12508:
 31848  00BE4C  0005               	push	
 31849  00BE4E  6EFA               	movwf	pclath,c
 31850  00BE50  50DE               	movf	postinc2,w,c
 31851  00BE52  6EFD               	movwf	tosl,c
 31852  00BE54  50DE               	movf	postinc2,w,c
 31853  00BE56  6EFE               	movwf	tosh,c
 31854  00BE58  50DE               	movf	postinc2,w,c
 31855  00BE5A  6EFF               	movwf	tosu,c
 31856  00BE5C  50FA               	movf	pclath,w,c
 31857  00BE5E  0012               	return		;indir
 31858  00BE60                     u12509:
 31859  00BE60  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 31860  00BE64  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 31861  00BE68  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 31862  00BE6C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 31863                           
 31864                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 31865  00BE70  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 31866  00BE74  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 31867  00BE78  EE22  F08F         	lfsr	2,_LUN+6
 31868  00BE7C  D801               	call	u12518
 31869  00BE7E  D00A               	goto	u12519
 31870  00BE80                     u12518:
 31871  00BE80  0005               	push	
 31872  00BE82  6EFA               	movwf	pclath,c
 31873  00BE84  50DE               	movf	postinc2,w,c
 31874  00BE86  6EFD               	movwf	tosl,c
 31875  00BE88  50DE               	movf	postinc2,w,c
 31876  00BE8A  6EFE               	movwf	tosh,c
 31877  00BE8C  50DE               	movf	postinc2,w,c
 31878  00BE8E  6EFF               	movwf	tosu,c
 31879  00BE90  50FA               	movf	pclath,w,c
 31880  00BE92  0012               	return		;indir
 31881  00BE94                     u12519:
 31882  00BE94  0100               	movlb	0	; () banked
 31883  00BE96  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 31884  00BE9A  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 31885  00BE9E  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 31886  00BEA0  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 31887                           
 31888                           ; BSR set to: 0
 31889                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 31890  00BEA2  EE26 F000          	lfsr	2,1536
 31891  00BEA6  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 31892                           
 31893                           ; BSR set to: 0
 31894                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 31895  00BEAA  EE26 F001          	lfsr	2,1537	;volatile
 31896  00BEAE  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 31897                           
 31898                           ; BSR set to: 0
 31899                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 31900  00BEB2  EE26 F002          	lfsr	2,1538	;volatile
 31901  00BEB6  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 31902                           
 31903                           ; BSR set to: 0
 31904                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 31905  00BEBA  EE26 F003          	lfsr	2,1539	;volatile
 31906  00BEBE  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 31907                           
 31908                           ; BSR set to: 0
 31909                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 31910  00BEC2  EE26 F004          	lfsr	2,1540	;volatile
 31911  00BEC6  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 31912                           
 31913                           ; BSR set to: 0
 31914                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 31915  00BECA  EE26 F005          	lfsr	2,1541	;volatile
 31916  00BECE  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 31917                           
 31918                           ; BSR set to: 0
 31919                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 31920  00BED2  EE26 F006          	lfsr	2,1542	;volatile
 31921  00BED6  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 31922                           
 31923                           ; BSR set to: 0
 31924                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 31925  00BEDA  EE26 F007          	lfsr	2,1543	;volatile
 31926  00BEDE  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 31927                           
 31928                           ; BSR set to: 0
 31929                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 31930  00BEE2  0E00               	movlw	0
 31931  00BEE4  0101               	movlb	1	; () banked
 31932  00BEE6  6F46               	movwf	(_TransferLength+1)& (0+255),b
 31933  00BEE8  0E08               	movlw	8
 31934  00BEEA  6F45               	movwf	_TransferLength& (0+255),b
 31935                           
 31936                           ; BSR set to: 1
 31937                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 31938  00BEEC  0E00               	movlw	0
 31939  00BEEE  0100               	movlb	0	; () banked
 31940  00BEF0  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31941  00BEF2  0E08               	movlw	8
 31942  00BEF4  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31943  00BEF6  EC72  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31944                           
 31945                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 31946  00BEFA  0EFD               	movlw	253
 31947  00BEFC  0101               	movlb	1	; () banked
 31948  00BEFE  6F62               	movwf	_MSDCommandState& (0+255),b
 31949                           
 31950                           ;usb_device_msd.c: 802: break;
 31951  00BF00  0012               	return	
 31952  00BF02                     
 31953                           ; BSR set to: 1
 31954                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 31955                           
 31956                           ; BSR set to: 1
 31957  00BF02  055C               	decf	_MSDHostNoData& (0+255),w,b
 31958  00BF04  A4D8               	btfss	status,2,c
 31959  00BF06  D002               	goto	l641
 31960                           
 31961                           ; BSR set to: 1
 31962                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 31963  00BF08  6962               	setf	_MSDCommandState& (0+255),b
 31964                           
 31965                           ;usb_device_msd.c: 814: break;
 31966  00BF0A  0012               	return	
 31967  00BF0C                     l641:
 31968                           
 31969                           ; BSR set to: 1
 31970                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 31971                           
 31972                           ; BSR set to: 1
 31973  00BF0C  0E00               	movlw	0
 31974  00BF0E  6F46               	movwf	(_TransferLength+1)& (0+255),b
 31975  00BF10  0E12               	movlw	18
 31976  00BF12  6F45               	movwf	_TransferLength& (0+255),b
 31977                           
 31978                           ; BSR set to: 1
 31979                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 31980  00BF14  0E00               	movlw	0
 31981  00BF16  0100               	movlb	0	; () banked
 31982  00BF18  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31983  00BF1A  0E12               	movlw	18
 31984  00BF1C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31985  00BF1E  EC72  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31986                           
 31987                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 31988  00BF22  0E00               	movlw	0
 31989  00BF24  0100               	movlb	0	; () banked
 31990  00BF26  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 31991  00BF28                     l13681:
 31992                           
 31993                           ; BSR set to: 0
 31994  00BF28  0E11               	movlw	17
 31995  00BF2A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 31996  00BF2C  D001               	goto	l642
 31997  00BF2E  D014               	goto	u12540
 31998  00BF30                     l642:
 31999                           
 32000                           ; BSR set to: 0
 32001                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32002                           
 32003                           ; BSR set to: 0
 32004  00BF30  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32005  00BF32  0D01               	mullw	1
 32006  00BF34  0E00               	movlw	low _gblSenseData
 32007  00BF36  24F3               	addwf	prodl,w,c
 32008  00BF38  6ED9               	movwf	fsr2l,c
 32009  00BF3A  0E01               	movlw	high _gblSenseData
 32010  00BF3C  20F4               	addwfc	prodh,w,c
 32011  00BF3E  6EDA               	movwf	fsr2h,c
 32012  00BF40  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32013  00BF42  0D01               	mullw	1
 32014  00BF44  0E00               	movlw	0
 32015  00BF46  24F3               	addwf	prodl,w,c
 32016  00BF48  6EE1               	movwf	fsr1l,c
 32017  00BF4A  0E06               	movlw	6
 32018  00BF4C  20F4               	addwfc	prodh,w,c
 32019  00BF4E  6EE2               	movwf	fsr1h,c
 32020  00BF50  CFDF FFE7          	movff	indf2,indf1
 32021                           
 32022                           ; BSR set to: 0
 32023  00BF54  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32024  00BF56  D7E8               	goto	l13681
 32025  00BF58                     u12540:
 32026                           
 32027                           ; BSR set to: 0
 32028                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32029                           
 32030                           ; BSR set to: 0
 32031  00BF58  0EFD               	movlw	253
 32032  00BF5A  0101               	movlb	1	; () banked
 32033  00BF5C  6F62               	movwf	_MSDCommandState& (0+255),b
 32034                           
 32035                           ;usb_device_msd.c: 827: break;
 32036  00BF5E  0012               	return	
 32037  00BF60                     l644:
 32038                           
 32039                           ; BSR set to: 1
 32040                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32041  00BF60  0E03               	movlw	3
 32042  00BF62  CFE8 F600          	movff	wreg,1536
 32043                           
 32044                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32045  00BF66  0E00               	movlw	0
 32046  00BF68  CFE8 F601          	movff	wreg,1537	;volatile
 32047                           
 32048                           ; BSR set to: 1
 32049                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32050  00BF6C  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32051  00BF70  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32052  00BF74  EE22  F098         	lfsr	2,_LUN+15
 32053  00BF78  D801               	call	u12558
 32054  00BF7A  D00A               	goto	u12559
 32055  00BF7C                     u12558:
 32056  00BF7C  0005               	push	
 32057  00BF7E  6EFA               	movwf	pclath,c
 32058  00BF80  50DE               	movf	postinc2,w,c
 32059  00BF82  6EFD               	movwf	tosl,c
 32060  00BF84  50DE               	movf	postinc2,w,c
 32061  00BF86  6EFE               	movwf	tosh,c
 32062  00BF88  50DE               	movf	postinc2,w,c
 32063  00BF8A  6EFF               	movwf	tosu,c
 32064  00BF8C  50FA               	movf	pclath,w,c
 32065  00BF8E  0012               	return		;indir
 32066  00BF90                     u12559:
 32067  00BF90  0900               	iorlw	0
 32068  00BF92  A4D8               	btfss	status,2,c
 32069  00BF94  D005               	goto	l646
 32070  00BF96  0E00               	movlw	0
 32071  00BF98  0100               	movlb	0	; () banked
 32072  00BF9A  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 32073  00BF9C  0E00               	movlw	0
 32074  00BF9E  D004               	goto	L46
 32075  00BFA0                     l646:
 32076                           
 32077                           ; BSR set to: 0
 32078  00BFA0  0E00               	movlw	0
 32079  00BFA2  0100               	movlb	0	; () banked
 32080  00BFA4  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 32081  00BFA6  0E80               	movlw	128
 32082  00BFA8                     L46:
 32083  00BFA8  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 32084                           
 32085                           ; BSR set to: 0
 32086                           
 32087                           ; BSR set to: 0
 32088  00BFAA  EE26 F002          	lfsr	2,1538	;volatile
 32089  00BFAE  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 32090                           
 32091                           ; BSR set to: 0
 32092                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 32093  00BFB2  0E00               	movlw	0
 32094  00BFB4  CFE8 F603          	movff	wreg,1539	;volatile
 32095                           
 32096                           ; BSR set to: 0
 32097                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 32098  00BFB8  0E00               	movlw	0
 32099  00BFBA  0101               	movlb	1	; () banked
 32100  00BFBC  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32101  00BFBE  0E04               	movlw	4
 32102  00BFC0  6F45               	movwf	_TransferLength& (0+255),b
 32103                           
 32104                           ; BSR set to: 1
 32105                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 32106  00BFC2  0E00               	movlw	0
 32107  00BFC4  0100               	movlb	0	; () banked
 32108  00BFC6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32109  00BFC8  0E04               	movlw	4
 32110  00BFCA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32111  00BFCC  EC72  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32112                           
 32113                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 32114  00BFD0  0EFD               	movlw	253
 32115  00BFD2  0101               	movlb	1	; () banked
 32116  00BFD4  6F62               	movwf	_MSDCommandState& (0+255),b
 32117                           
 32118                           ;usb_device_msd.c: 839: break;
 32119  00BFD6  0012               	return	
 32120  00BFD8                     
 32121                           ; BSR set to: 1
 32122                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 32123                           
 32124                           ; BSR set to: 1
 32125  00BFD8  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32126  00BFDA  0BF0               	andlw	-16
 32127  00BFDC  0905               	iorlw	5
 32128  00BFDE  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32129                           
 32130                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 32131  00BFE0  0E20               	movlw	32
 32132  00BFE2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32133                           
 32134                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 32135  00BFE4  0E00               	movlw	0
 32136  00BFE6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32137                           
 32138                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 32139  00BFE8  0E01               	movlw	1
 32140  00BFEA  010D               	movlb	13	; () banked
 32141  00BFEC  6F8C               	movwf	140,b	;volatile
 32142                           
 32143                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 32144  00BFEE  0E00               	movlw	0
 32145  00BFF0  6F88               	movwf	136,b	;volatile
 32146  00BFF2  0E00               	movlw	0
 32147  00BFF4  6F89               	movwf	137,b	;volatile
 32148  00BFF6  0E00               	movlw	0
 32149  00BFF8  6F8A               	movwf	138,b	;volatile
 32150  00BFFA  0E00               	movlw	0
 32151  00BFFC  6F8B               	movwf	139,b	;volatile
 32152                           
 32153                           ; BSR set to: 13
 32154                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 32155  00BFFE  0101               	movlb	1	; () banked
 32156  00C000  6962               	setf	_MSDCommandState& (0+255),b
 32157                           
 32158                           ;usb_device_msd.c: 848: break;
 32159  00C002  0012               	return	
 32160  00C004                     
 32161                           ; BSR set to: 1
 32162                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 32163                           
 32164                           ; BSR set to: 1
 32165  00C004  0E00               	movlw	0
 32166  00C006  0100               	movlb	0	; () banked
 32167  00C008  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 32168  00C00A  0E00               	movlw	0
 32169  00C00C  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 32170  00C00E  0E00               	movlw	0
 32171  00C010  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32172  00C012  0E00               	movlw	0
 32173  00C014  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32174  00C016  EC5E  F084         	call	_MSDCheckForErrorCases	;wreg free
 32175  00C01A  0900               	iorlw	0
 32176  00C01C  A4D8               	btfss	status,2,c
 32177  00C01E  0012               	return	
 32178                           
 32179                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 32180                           
 32181                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 32182  00C020  0101               	movlb	1	; () banked
 32183  00C022  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32184  00C024  0B0F               	andlw	15
 32185  00C026  0A06               	xorlw	6
 32186  00C028  A4D8               	btfss	status,2,c
 32187  00C02A  D007               	goto	l652
 32188                           
 32189                           ; BSR set to: 1
 32190  00C02C  010D               	movlb	13	; () banked
 32191  00C02E  058C               	decf	140,w,b	;volatile
 32192  00C030  A4D8               	btfss	status,2,c
 32193  00C032  D003               	goto	l652
 32194                           
 32195                           ; BSR set to: 13
 32196                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 32197  00C034  0101               	movlb	1	; () banked
 32198  00C036  6962               	setf	_MSDCommandState& (0+255),b
 32199                           
 32200                           ;usb_device_msd.c: 870: }
 32201  00C038  0012               	return	
 32202  00C03A                     l652:
 32203                           
 32204                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 32205                           
 32206                           ; BSR set to: 1
 32207  00C03A  EC78  F0A1         	call	_ResetSenseData	;wreg free
 32208                           
 32209                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 32210  00C03E  0E00               	movlw	0
 32211  00C040  010D               	movlb	13	; () banked
 32212  00C042  6F88               	movwf	136,b	;volatile
 32213  00C044  0E00               	movlw	0
 32214  00C046  6F89               	movwf	137,b	;volatile
 32215  00C048  0E00               	movlw	0
 32216  00C04A  6F8A               	movwf	138,b	;volatile
 32217  00C04C  0E00               	movlw	0
 32218  00C04E  6F8B               	movwf	139,b	;volatile
 32219                           
 32220                           ; BSR set to: 13
 32221                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 32222  00C050  0101               	movlb	1	; () banked
 32223  00C052  6962               	setf	_MSDCommandState& (0+255),b
 32224                           
 32225                           ; BSR set to: 1
 32226                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 32227  00C054  0012               	return	
 32228  00C056                     
 32229                           ; BSR set to: 1
 32230                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 32231                           
 32232                           ; BSR set to: 1
 32233                           
 32234                           ; BSR set to: 1
 32235  00C056  0E00               	movlw	0
 32236  00C058  010D               	movlb	13	; () banked
 32237  00C05A  6F88               	movwf	136,b	;volatile
 32238  00C05C  0E00               	movlw	0
 32239  00C05E  6F89               	movwf	137,b	;volatile
 32240  00C060  0E00               	movlw	0
 32241  00C062  6F8A               	movwf	138,b	;volatile
 32242  00C064  0E00               	movlw	0
 32243  00C066  6F8B               	movwf	139,b	;volatile
 32244                           
 32245                           ; BSR set to: 13
 32246                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 32247  00C068  0101               	movlb	1	; () banked
 32248  00C06A  6962               	setf	_MSDCommandState& (0+255),b
 32249                           
 32250                           ;usb_device_msd.c: 885: break;
 32251  00C06C  0012               	return	
 32252  00C06E                     
 32253                           ; BSR set to: 1
 32254                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 32255                           
 32256                           ; BSR set to: 1
 32257  00C06E  5149               	movf	_USBMSDInHandle& (0+255),w,b
 32258  00C070  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32259  00C072  B4D8               	btfsc	status,2,c
 32260  00C074  D006               	goto	u12610
 32261                           
 32262                           ; BSR set to: 1
 32263  00C076  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 32264  00C07A  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32265  00C07E  BEDF               	btfsc	indf2,7,c
 32266  00C080  0012               	return	
 32267  00C082                     u12610:
 32268                           
 32269                           ; BSR set to: 1
 32270                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 32271                           
 32272                           ; BSR set to: 1
 32273  00C082  0102               	movlb	2	; () banked
 32274  00C084  510B               	movf	(_gblCBW+11)& (0+255),w,b
 32275  00C086  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 32276  00C088  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 32277  00C08A  E104               	bnz	u12620
 32278  00C08C  0E40               	movlw	64
 32279  00C08E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 32280  00C090  A0D8               	btfss	status,0,c
 32281  00C092  D00B               	goto	l660
 32282  00C094                     u12620:
 32283                           
 32284                           ; BSR set to: 2
 32285                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 32286  00C094  0E40               	movlw	64
 32287  00C096  0100               	movlb	0	; () banked
 32288  00C098  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 32289                           
 32290                           ; BSR set to: 0
 32291                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 32292  00C09A  0E40               	movlw	64
 32293  00C09C  0102               	movlb	2	; () banked
 32294  00C09E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 32295  00C0A0  0E00               	movlw	0
 32296  00C0A2  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 32297  00C0A4  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 32298  00C0A6  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 32299                           
 32300                           ;usb_device_msd.c: 900: }
 32301  00C0A8  D00A               	goto	l661
 32302  00C0AA                     l660:
 32303                           
 32304                           ; BSR set to: 2
 32305                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 32306  00C0AA  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 32307                           
 32308                           ; BSR set to: 2
 32309                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 32310  00C0AE  0E00               	movlw	0
 32311  00C0B0  6F08               	movwf	(_gblCBW+8)& (0+255),b
 32312  00C0B2  0E00               	movlw	0
 32313  00C0B4  6F09               	movwf	(_gblCBW+9)& (0+255),b
 32314  00C0B6  0E00               	movlw	0
 32315  00C0B8  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 32316  00C0BA  0E00               	movlw	0
 32317  00C0BC  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 32318  00C0BE                     l661:
 32319                           
 32320                           ; BSR set to: 2
 32321                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 32322                           
 32323                           ; BSR set to: 2
 32324  00C0BE  0100               	movlb	0	; () banked
 32325  00C0C0  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32326  00C0C2  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 32327  00C0C4  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 32328  00C0C6  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 32329  00C0C8  0101               	movlb	1	; () banked
 32330  00C0CA  5D45               	subwf	_TransferLength& (0+255),w,b
 32331  00C0CC  0100               	movlb	0	; () banked
 32332  00C0CE  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 32333  00C0D0  0101               	movlb	1	; () banked
 32334  00C0D2  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 32335  00C0D4  A0D8               	btfss	status,0,c
 32336  00C0D6  D007               	goto	l662
 32337                           
 32338                           ; BSR set to: 1
 32339                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 32340  00C0D8  0100               	movlb	0	; () banked
 32341  00C0DA  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32342  00C0DC  0101               	movlb	1	; () banked
 32343  00C0DE  5F45               	subwf	_TransferLength& (0+255),f,b
 32344  00C0E0  0E00               	movlw	0
 32345  00C0E2  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 32346                           
 32347                           ;usb_device_msd.c: 918: }
 32348  00C0E4  D01E               	goto	u12650
 32349  00C0E6                     l662:
 32350                           
 32351                           ; BSR set to: 1
 32352                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 32353                           
 32354                           ; BSR set to: 1
 32355  00C0E6  0E00               	movlw	0
 32356  00C0E8  0100               	movlb	0	; () banked
 32357  00C0EA  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32358  00C0EC  D016               	goto	l664
 32359  00C0EE                     
 32360                           ; BSR set to: 0
 32361                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 32362                           
 32363                           ; BSR set to: 0
 32364  00C0EE  0101               	movlb	1	; () banked
 32365  00C0F0  5145               	movf	_TransferLength& (0+255),w,b
 32366  00C0F2  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 32367  00C0F4  B4D8               	btfsc	status,2,c
 32368  00C0F6  D004               	goto	l666
 32369                           
 32370                           ; BSR set to: 1
 32371                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 32372  00C0F8  0745               	decf	_TransferLength& (0+255),f,b
 32373  00C0FA  A0D8               	btfss	status,0,c
 32374  00C0FC  0746               	decf	(_TransferLength+1)& (0+255),f,b
 32375                           
 32376                           ;usb_device_msd.c: 932: }
 32377  00C0FE  D00B               	goto	l667
 32378  00C100                     l666:
 32379                           
 32380                           ; BSR set to: 1
 32381                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 32382                           
 32383                           ; BSR set to: 1
 32384  00C100  0100               	movlb	0	; () banked
 32385  00C102  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32386  00C104  0D01               	mullw	1
 32387  00C106  0E00               	movlw	0
 32388  00C108  24F3               	addwf	prodl,w,c
 32389  00C10A  6ED9               	movwf	fsr2l,c
 32390  00C10C  0E06               	movlw	6
 32391  00C10E  20F4               	addwfc	prodh,w,c
 32392  00C110  6EDA               	movwf	fsr2h,c
 32393  00C112  0E00               	movlw	0
 32394  00C114  6EDF               	movwf	indf2,c
 32395  00C116                     l667:
 32396                           
 32397                           ; BSR set to: 0
 32398  00C116  0100               	movlb	0	; () banked
 32399  00C118  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32400  00C11A                     l664:
 32401                           
 32402                           ; BSR set to: 0
 32403                           
 32404                           ; BSR set to: 0
 32405  00C11A  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32406  00C11C  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32407  00C11E  A0D8               	btfss	status,0,c
 32408  00C120  D7E6               	goto	l665
 32409  00C122                     u12650:
 32410                           
 32411                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 32412                           
 32413                           ; BSR set to: 0
 32414                           
 32415                           ; BSR set to: 0
 32416  00C122  0E01               	movlw	1
 32417  00C124  0100               	movlb	0	; () banked
 32418  00C126  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32419  00C128  0E00               	movlw	0
 32420  00C12A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32421  00C12C  0E06               	movlw	6
 32422  00C12E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32423  00C130  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 32424  00C134  0E02               	movlw	2
 32425  00C136  EC03  F087         	call	_USBTransferOnePacket
 32426  00C13A  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32427  00C13E  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32428                           
 32429                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 32430  00C142  0102               	movlb	2	; () banked
 32431  00C144  5108               	movf	(_gblCBW+8)& (0+255),w,b
 32432  00C146  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 32433  00C148  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 32434  00C14A  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 32435  00C14C  A4D8               	btfss	status,2,c
 32436  00C14E  0012               	return	
 32437                           
 32438                           ; BSR set to: 2
 32439                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 32440  00C150  0101               	movlb	1	; () banked
 32441  00C152  6962               	setf	_MSDCommandState& (0+255),b
 32442                           
 32443                           ; BSR set to: 1
 32444                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 32445                           
 32446                           ; BSR set to: 1
 32447                           
 32448                           ;usb_device_msd.c: 949: break;
 32449  00C154  0012               	return	
 32450  00C156                     
 32451                           ; BSR set to: 1
 32452                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 32453                           
 32454                           ; BSR set to: 1
 32455                           
 32456                           ;usb_device_msd.c: 954: default:
 32457                           
 32458                           ; BSR set to: 1
 32459  00C156  0E7F               	movlw	127
 32460  00C158  EC44  F083         	call	_MSDErrorHandler
 32461                           
 32462                           ;usb_device_msd.c: 960: }
 32463                           
 32464                           ;usb_device_msd.c: 959: break;
 32465  00C15C  0012               	return	
 32466  00C15E                     l630:
 32467  00C15E  0101               	movlb	1	; () banked
 32468  00C160  5162               	movf	_MSDCommandState& (0+255),w,b
 32469                           
 32470                           ; Switch size 1, requested type "space"
 32471                           ; Number of cases is 12, Range of values is 0 to 254
 32472                           ; switch strategies available:
 32473                           ; Name         Instructions Cycles
 32474                           ; simple_byte           37    19 (average)
 32475                           ;	Chosen strategy is simple_byte
 32476  00C162  0A00               	xorlw	0	; case 0
 32477  00C164  B4D8               	btfsc	status,2,c
 32478  00C166  D74E               	goto	l650
 32479  00C168  0A03               	xorlw	3	; case 3
 32480  00C16A  B4D8               	btfsc	status,2,c
 32481  00C16C  D6CA               	goto	l640
 32482  00C16E  0A11               	xorlw	17	; case 18
 32483  00C170  B4D8               	btfsc	status,2,c
 32484  00C172  D635               	goto	l636
 32485  00C174  0A08               	xorlw	8	; case 26
 32486  00C176  B4D8               	btfsc	status,2,c
 32487  00C178  D6F3               	goto	l644
 32488  00C17A  0A01               	xorlw	1	; case 27
 32489  00C17C  B4D8               	btfsc	status,2,c
 32490  00C17E  D76B               	goto	l654
 32491  00C180  0A05               	xorlw	5	; case 30
 32492  00C182  B4D8               	btfsc	status,2,c
 32493  00C184  D729               	goto	l649
 32494  00C186  0A3B               	xorlw	59	; case 37
 32495  00C188  B4D8               	btfsc	status,2,c
 32496  00C18A  D658               	goto	l639
 32497  00C18C  0A0D               	xorlw	13	; case 40
 32498  00C18E  B4D8               	btfsc	status,2,c
 32499  00C190  D616               	goto	l631
 32500  00C192  0A02               	xorlw	2	; case 42
 32501  00C194  B4D8               	btfsc	status,2,c
 32502  00C196  D61B               	goto	l634
 32503  00C198  0A05               	xorlw	5	; case 47
 32504  00C19A  B4D8               	btfsc	status,2,c
 32505  00C19C  D75C               	goto	l654
 32506  00C19E  0AD2               	xorlw	210	; case 253
 32507  00C1A0  B4D8               	btfsc	status,2,c
 32508  00C1A2  D765               	goto	l656
 32509  00C1A4  0A03               	xorlw	3	; case 254
 32510  00C1A6  D7D7               	goto	l670
 32511  00C1A8                     __end_of_MSDProcessCommandMediaPresent:
 32512                           	opt stack 0
 32513                           tosu	equ	0xFFF
 32514                           tosh	equ	0xFFE
 32515                           tosl	equ	0xFFD
 32516                           pclath	equ	0xFFA
 32517                           tblptru	equ	0xFF8
 32518                           tblptrh	equ	0xFF7
 32519                           tblptrl	equ	0xFF6
 32520                           tablat	equ	0xFF5
 32521                           prodh	equ	0xFF4
 32522                           prodl	equ	0xFF3
 32523                           intcon	equ	0xFF2
 32524                           postinc0	equ	0xFEE
 32525                           wreg	equ	0xFE8
 32526                           indf1	equ	0xFE7
 32527                           postinc1	equ	0xFE6
 32528                           postdec1	equ	0xFE5
 32529                           plusw1	equ	0xFE3
 32530                           fsr1h	equ	0xFE2
 32531                           fsr1l	equ	0xFE1
 32532                           indf2	equ	0xFDF
 32533                           postinc2	equ	0xFDE
 32534                           postdec2	equ	0xFDD
 32535                           plusw2	equ	0xFDB
 32536                           fsr2h	equ	0xFDA
 32537                           fsr2l	equ	0xFD9
 32538                           status	equ	0xFD8
 32539                           
 32540 ;; *************** function _MSDWriteHandler *****************
 32541 ;; Defined at:
 32542 ;;		line 1188 in file "usb_device_msd.c"
 32543 ;; Parameters:    Size  Location     Type
 32544 ;;		None
 32545 ;; Auto vars:     Size  Location     Type
 32546 ;;		None
 32547 ;; Return value:  Size  Location     Type
 32548 ;;                  1    wreg      unsigned char 
 32549 ;; Registers used:
 32550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32551 ;; Tracked objects:
 32552 ;;		On entry : 0/0
 32553 ;;		On exit  : 0/0
 32554 ;;		Unchanged: 0/0
 32555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32558 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32559 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32560 ;;Total ram usage:        5 bytes
 32561 ;; Hardware stack levels used:    1
 32562 ;; Hardware stack levels required when called:   16
 32563 ;; This function calls:
 32564 ;;		_ExternalFlash_SectorWrite
 32565 ;;		_ExternalFlash_WriteProtectStateGet
 32566 ;;		_MSDCheckForErrorCases
 32567 ;;		_USBStallEndpoint
 32568 ;;		_USBTransferOnePacket
 32569 ;; This function is called by:
 32570 ;;		_MSDProcessCommandMediaPresent
 32571 ;; This function uses a non-reentrant model
 32572 ;;
 32573                           
 32574                           	psect	text128
 32575  00D666                     __ptext128:
 32576                           	opt stack 0
 32577  00D666                     _MSDWriteHandler:
 32578                           	opt stack 10
 32579                           
 32580                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 32581                           
 32582                           ;incstack = 0
 32583  00D666  D160               	goto	l700
 32584  00D668                     l701:
 32585                           
 32586                           ; BSR set to: 1
 32587                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 32588  00D668  C211  F12E         	movff	_gblCBW+17,_LBA+3
 32589                           
 32590                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 32591  00D66C  C212  F12D         	movff	_gblCBW+18,_LBA+2
 32592                           
 32593                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 32594  00D670  C213  F12C         	movff	_gblCBW+19,_LBA+1
 32595                           
 32596                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 32597  00D674  C214  F12B         	movff	_gblCBW+20,_LBA
 32598                           
 32599                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 32600  00D678  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 32601                           
 32602                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 32603  00D67C  C217  F145         	movff	_gblCBW+23,_TransferLength
 32604                           
 32605                           ; BSR set to: 1
 32606                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 32607  00D680  5145               	movf	_TransferLength& (0+255),w,b
 32608  00D682  0100               	movlb	0	; () banked
 32609  00D684  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32610  00D686  0101               	movlb	1	; () banked
 32611  00D688  5146               	movf	(_TransferLength+1)& (0+255),w,b
 32612  00D68A  0100               	movlb	0	; () banked
 32613  00D68C  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 32614  00D68E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32615  00D690  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32616  00D692  0E09               	movlw	9
 32617  00D694                     u11575:
 32618  00D694  90D8               	bcf	status,0,c
 32619  00D696  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 32620  00D698  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 32621  00D69A  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 32622  00D69C  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 32623  00D69E  2EE8               	decfsz	wreg,f,c
 32624  00D6A0  D7F9               	goto	u11575
 32625  00D6A2  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 32626  00D6A6  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 32627  00D6AA  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 32628  00D6AE  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 32629  00D6B2  EC5E  F084         	call	_MSDCheckForErrorCases	;wreg free
 32630  00D6B6  0900               	iorlw	0
 32631  00D6B8  A4D8               	btfss	status,2,c
 32632  00D6BA  D148               	goto	l703
 32633                           
 32634                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 32635                           
 32636                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 32637  00D6BC  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32638  00D6C0  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32639  00D6C4  EE22  F098         	lfsr	2,_LUN+15
 32640  00D6C8  D801               	call	u11598
 32641  00D6CA  D00A               	goto	u11599
 32642  00D6CC                     u11598:
 32643  00D6CC  0005               	push	
 32644  00D6CE  6EFA               	movwf	pclath,c
 32645  00D6D0  50DE               	movf	postinc2,w,c
 32646  00D6D2  6EFD               	movwf	tosl,c
 32647  00D6D4  50DE               	movf	postinc2,w,c
 32648  00D6D6  6EFE               	movwf	tosh,c
 32649  00D6D8  50DE               	movf	postinc2,w,c
 32650  00D6DA  6EFF               	movwf	tosu,c
 32651  00D6DC  50FA               	movf	pclath,w,c
 32652  00D6DE  0012               	return		;indir
 32653  00D6E0                     u11599:
 32654  00D6E0  0900               	iorlw	0
 32655  00D6E2  B4D8               	btfsc	status,2,c
 32656  00D6E4  D017               	goto	l704
 32657                           
 32658                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 32659  00D6E6  0E01               	movlw	1
 32660  00D6E8  010D               	movlb	13	; () banked
 32661  00D6EA  6F8C               	movwf	140,b	;volatile
 32662                           
 32663                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 32664  00D6EC  0101               	movlb	1	; () banked
 32665  00D6EE  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32666  00D6F0  0BF0               	andlw	-16
 32667  00D6F2  0907               	iorlw	7
 32668  00D6F4  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32669                           
 32670                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 32671  00D6F6  0E27               	movlw	39
 32672  00D6F8  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32673                           
 32674                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 32675  00D6FA  0E00               	movlw	0
 32676  00D6FC  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32677                           
 32678                           ; BSR set to: 1
 32679                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 32680  00D6FE  0E00               	movlw	0
 32681  00D700  0100               	movlb	0	; () banked
 32682  00D702  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32683  00D704  0E02               	movlw	2
 32684  00D706  EC7E  F086         	call	_USBStallEndpoint
 32685                           
 32686                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 32687  00D70A  0E00               	movlw	0
 32688  00D70C  0101               	movlb	1	; () banked
 32689  00D70E  6F60               	movwf	_MSDWriteState& (0+255),b
 32690                           
 32691                           ; BSR set to: 1
 32692                           ;usb_device_msd.c: 1228: return MSDWriteState;
 32693  00D710  5160               	movf	_MSDWriteState& (0+255),w,b
 32694                           
 32695                           ; BSR set to: 1
 32696  00D712  0012               	return	
 32697  00D714                     l704:
 32698                           
 32699                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 32700                           
 32701                           ; BSR set to: 1
 32702  00D714  0E01               	movlw	1
 32703  00D716  0101               	movlb	1	; () banked
 32704  00D718  6F63               	movwf	_MSD_State& (0+255),b
 32705  00D71A                     
 32706                           ; BSR set to: 1
 32707                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 32708                           
 32709                           ; BSR set to: 1
 32710  00D71A  5145               	movf	_TransferLength& (0+255),w,b
 32711  00D71C  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 32712  00D71E  A4D8               	btfss	status,2,c
 32713  00D720  D002               	goto	l707
 32714                           
 32715                           ; BSR set to: 1
 32716                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 32717  00D722  0E00               	movlw	0
 32718  00D724  D0FF               	goto	L50
 32719  00D726                     l707:
 32720                           
 32721                           ; BSR set to: 1
 32722                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 32723                           
 32724                           ; BSR set to: 1
 32725  00D726  0E03               	movlw	3
 32726  00D728  6F60               	movwf	_MSDWriteState& (0+255),b
 32727                           
 32728                           ; BSR set to: 1
 32729                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 32730  00D72A  0E00               	movlw	0
 32731  00D72C  6F4D               	movwf	_ptrNextData& (0+255),b
 32732  00D72E  0E06               	movlw	6
 32733  00D730  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 32734                           
 32735                           ; BSR set to: 1
 32736                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 32737  00D732  0E00               	movlw	0
 32738  00D734  010D               	movlb	13	; () banked
 32739  00D736  6F88               	movwf	136,b	;volatile
 32740  00D738  0E02               	movlw	2
 32741  00D73A  6F89               	movwf	137,b	;volatile
 32742  00D73C  0E00               	movlw	0
 32743  00D73E  6F8A               	movwf	138,b	;volatile
 32744  00D740  0E00               	movlw	0
 32745  00D742  6F8B               	movwf	139,b	;volatile
 32746  00D744                     l708:
 32747                           
 32748                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 32749  00D744  010D               	movlb	13	; () banked
 32750  00D746  5188               	movf	136,w,b	;volatile
 32751  00D748  1189               	iorwf	137,w,b	;volatile
 32752  00D74A  118A               	iorwf	138,w,b	;volatile
 32753  00D74C  118B               	iorwf	139,w,b	;volatile
 32754  00D74E  B4D8               	btfsc	status,2,c
 32755  00D750  D01F               	goto	l709
 32756                           
 32757                           ; BSR set to: 13
 32758                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 32759  00D752  0101               	movlb	1	; () banked
 32760  00D754  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32761  00D756  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32762  00D758  B4D8               	btfsc	status,2,c
 32763  00D75A  D006               	goto	l710
 32764                           
 32765                           ; BSR set to: 1
 32766  00D75C  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32767  00D760  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32768  00D764  BEDF               	btfsc	indf2,7,c
 32769  00D766  D0F2               	goto	l703
 32770  00D768                     l710:
 32771                           
 32772                           ; BSR set to: 1
 32773                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 32774                           
 32775                           ; BSR set to: 1
 32776  00D768  0E00               	movlw	0
 32777  00D76A  0100               	movlb	0	; () banked
 32778  00D76C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32779  00D76E  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 32780  00D772  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 32781  00D776  0E40               	movlw	64
 32782  00D778  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32783  00D77A  0E02               	movlw	2
 32784  00D77C  EC03  F087         	call	_USBTransferOnePacket
 32785  00D780  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32786  00D784  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32787                           
 32788                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 32789  00D788  0E04               	movlw	4
 32790  00D78A  0101               	movlb	1	; () banked
 32791  00D78C  6F60               	movwf	_MSDWriteState& (0+255),b
 32792                           
 32793                           ;usb_device_msd.c: 1260: }
 32794  00D78E  D023               	goto	l711
 32795  00D790                     l709:
 32796                           
 32797                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 32798                           
 32799                           ; BSR set to: 1
 32800  00D790  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32801  00D794  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32802  00D798  EE22  F098         	lfsr	2,_LUN+15
 32803  00D79C  D801               	call	u11658
 32804  00D79E  D00A               	goto	u11659
 32805  00D7A0                     u11658:
 32806  00D7A0  0005               	push	
 32807  00D7A2  6EFA               	movwf	pclath,c
 32808  00D7A4  50DE               	movf	postinc2,w,c
 32809  00D7A6  6EFD               	movwf	tosl,c
 32810  00D7A8  50DE               	movf	postinc2,w,c
 32811  00D7AA  6EFE               	movwf	tosh,c
 32812  00D7AC  50DE               	movf	postinc2,w,c
 32813  00D7AE  6EFF               	movwf	tosu,c
 32814  00D7B0  50FA               	movf	pclath,w,c
 32815  00D7B2  0012               	return		;indir
 32816  00D7B4                     u11659:
 32817  00D7B4  0900               	iorlw	0
 32818  00D7B6  B4D8               	btfsc	status,2,c
 32819  00D7B8  D00C               	goto	l712
 32820                           
 32821                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 32822  00D7BA  0E01               	movlw	1
 32823  00D7BC  010D               	movlb	13	; () banked
 32824  00D7BE  6F8C               	movwf	140,b	;volatile
 32825                           
 32826                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 32827  00D7C0  0101               	movlb	1	; () banked
 32828  00D7C2  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32829  00D7C4  0BF0               	andlw	-16
 32830  00D7C6  0902               	iorlw	2
 32831  00D7C8  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32832                           
 32833                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 32834  00D7CA  0E27               	movlw	39
 32835  00D7CC  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32836                           
 32837                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 32838  00D7CE  0E00               	movlw	0
 32839  00D7D0  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32840  00D7D2                     l712:
 32841                           
 32842                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 32843  00D7D2  0E02               	movlw	2
 32844  00D7D4  D0A6               	goto	L95
 32845  00D7D6                     l711:
 32846                           
 32847                           ; BSR set to: 1
 32848                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 32849                           
 32850                           ; BSR set to: 1
 32851                           
 32852                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 32853                           
 32854                           ; BSR set to: 1
 32855  00D7D6  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32856  00D7D8  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32857  00D7DA  B4D8               	btfsc	status,2,c
 32858  00D7DC  D006               	goto	l714
 32859                           
 32860                           ; BSR set to: 1
 32861  00D7DE  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32862  00D7E2  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32863  00D7E6  BEDF               	btfsc	indf2,7,c
 32864  00D7E8  D0B1               	goto	l703
 32865  00D7EA                     l714:
 32866                           
 32867                           ; BSR set to: 1
 32868                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 32869                           
 32870                           ; BSR set to: 1
 32871  00D7EA  EE20 F001          	lfsr	2,1
 32872  00D7EE  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32873  00D7F0  26D9               	addwf	fsr2l,f,c
 32874  00D7F2  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 32875  00D7F4  22DA               	addwfc	fsr2h,f,c
 32876  00D7F6  50DF               	movf	indf2,w,c
 32877  00D7F8  0100               	movlb	0	; () banked
 32878  00D7FA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32879  00D7FC  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32880  00D800  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32881  00D802  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32882  00D804  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32883  00D806  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32884  00D808  0102               	movlb	2	; () banked
 32885  00D80A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 32886  00D80C  0100               	movlb	0	; () banked
 32887  00D80E  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32888  00D810  0102               	movlb	2	; () banked
 32889  00D812  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 32890  00D814  0100               	movlb	0	; () banked
 32891  00D816  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32892  00D818  0102               	movlb	2	; () banked
 32893  00D81A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 32894  00D81C  0100               	movlb	0	; () banked
 32895  00D81E  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32896  00D820  0102               	movlb	2	; () banked
 32897  00D822  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 32898                           
 32899                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 32900  00D824  0101               	movlb	1	; () banked
 32901  00D826  EE20 F001          	lfsr	2,1
 32902  00D82A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32903  00D82C  26D9               	addwf	fsr2l,f,c
 32904  00D82E  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 32905  00D830  22DA               	addwfc	fsr2h,f,c
 32906  00D832  50DF               	movf	indf2,w,c
 32907  00D834  0100               	movlb	0	; () banked
 32908  00D836  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32909  00D838  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32910  00D83C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32911  00D83E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32912  00D840  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32913  00D842  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32914  00D844  010D               	movlb	13	; () banked
 32915  00D846  5F88               	subwf	136,f,b	;volatile
 32916  00D848  0100               	movlb	0	; () banked
 32917  00D84A  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32918  00D84C  010D               	movlb	13	; () banked
 32919  00D84E  5B89               	subwfb	137,f,b	;volatile
 32920  00D850  0100               	movlb	0	; () banked
 32921  00D852  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32922  00D854  010D               	movlb	13	; () banked
 32923  00D856  5B8A               	subwfb	138,f,b	;volatile
 32924  00D858  0100               	movlb	0	; () banked
 32925  00D85A  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32926  00D85C  010D               	movlb	13	; () banked
 32927  00D85E  5B8B               	subwfb	139,f,b	;volatile
 32928                           
 32929                           ; BSR set to: 13
 32930                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 32931  00D860  0E40               	movlw	64
 32932  00D862  0101               	movlb	1	; () banked
 32933  00D864  274D               	addwf	_ptrNextData& (0+255),f,b
 32934  00D866  0E00               	movlw	0
 32935  00D868  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 32936                           
 32937                           ; BSR set to: 1
 32938                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 32939  00D86A  0E03               	movlw	3
 32940  00D86C  D05B               	goto	L50
 32941  00D86E                     
 32942                           ; BSR set to: 1
 32943                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 32944                           
 32945                           ; BSR set to: 1
 32946  00D86E  010D               	movlb	13	; () banked
 32947  00D870  518C               	movf	140,w,b	;volatile
 32948  00D872  A4D8               	btfss	status,2,c
 32949  00D874  D040               	goto	l719
 32950                           
 32951                           ; BSR set to: 13
 32952                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 32953  00D876  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 32954  00D87A  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 32955  00D87E  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 32956  00D882  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 32957  00D886  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 32958  00D88A  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 32959  00D88E  0E00               	movlw	0
 32960  00D890  0100               	movlb	0	; () banked
 32961  00D892  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 32962  00D894  0E06               	movlw	6
 32963  00D896  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 32964  00D898  0101               	movlb	1	; () banked
 32965  00D89A  512B               	movf	_LBA& (0+255),w,b
 32966  00D89C  112C               	iorwf	(_LBA+1)& (0+255),w,b
 32967  00D89E  112D               	iorwf	(_LBA+2)& (0+255),w,b
 32968  00D8A0  112E               	iorwf	(_LBA+3)& (0+255),w,b
 32969  00D8A2  A4D8               	btfss	status,2,c
 32970  00D8A4  D002               	goto	u11700
 32971  00D8A6  0E01               	movlw	1
 32972  00D8A8  D001               	goto	u11710
 32973  00D8AA                     u11700:
 32974  00D8AA  0E00               	movlw	0
 32975  00D8AC                     u11710:
 32976  00D8AC  0100               	movlb	0	; () banked
 32977  00D8AE  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 32978  00D8B0  EE22  F09B         	lfsr	2,_LUN+18
 32979  00D8B4  D801               	call	u11728
 32980  00D8B6  D00A               	goto	u11729
 32981  00D8B8                     u11728:
 32982  00D8B8  0005               	push	
 32983  00D8BA  6EFA               	movwf	pclath,c
 32984  00D8BC  50DE               	movf	postinc2,w,c
 32985  00D8BE  6EFD               	movwf	tosl,c
 32986  00D8C0  50DE               	movf	postinc2,w,c
 32987  00D8C2  6EFE               	movwf	tosh,c
 32988  00D8C4  50DE               	movf	postinc2,w,c
 32989  00D8C6  6EFF               	movwf	tosu,c
 32990  00D8C8  50FA               	movf	pclath,w,c
 32991  00D8CA  0012               	return		;indir
 32992  00D8CC                     u11729:
 32993  00D8CC  06E8               	decf	wreg,f,c
 32994  00D8CE  B4D8               	btfsc	status,2,c
 32995  00D8D0  D012               	goto	l719
 32996                           
 32997                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 32998  00D8D2  0E64               	movlw	100
 32999  00D8D4  0101               	movlb	1	; () banked
 33000  00D8D6  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 33001  00D8D8  D002               	goto	l718
 33002                           
 33003                           ; BSR set to: 1
 33004                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33005  00D8DA  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 33006                           
 33007                           ;usb_device_msd.c: 1314: break;
 33008  00D8DC  D037               	goto	l703
 33009  00D8DE                     l718:
 33010                           
 33011                           ; BSR set to: 1
 33012                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 33013                           
 33014                           ; BSR set to: 1
 33015  00D8DE  0E01               	movlw	1
 33016  00D8E0  010D               	movlb	13	; () banked
 33017  00D8E2  6F8C               	movwf	140,b	;volatile
 33018                           
 33019                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33020  00D8E4  0101               	movlb	1	; () banked
 33021  00D8E6  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33022  00D8E8  0BF0               	andlw	-16
 33023  00D8EA  0903               	iorlw	3
 33024  00D8EC  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33025                           
 33026                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33027  00D8EE  0E00               	movlw	0
 33028  00D8F0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33029                           
 33030                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33031  00D8F2  0E00               	movlw	0
 33032  00D8F4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33033  00D8F6                     l719:
 33034                           
 33035                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 33036                           
 33037                           ; BSR set to: 1
 33038                           
 33039                           ; BSR set to: 1
 33040                           
 33041                           ; BSR set to: 1
 33042  00D8F6  0E01               	movlw	1
 33043  00D8F8  0101               	movlb	1	; () banked
 33044  00D8FA  272B               	addwf	_LBA& (0+255),f,b
 33045  00D8FC  0E00               	movlw	0
 33046  00D8FE  232C               	addwfc	(_LBA+1)& (0+255),f,b
 33047  00D900  232D               	addwfc	(_LBA+2)& (0+255),f,b
 33048  00D902  232E               	addwfc	(_LBA+3)& (0+255),f,b
 33049                           
 33050                           ; BSR set to: 1
 33051                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33052  00D904  0745               	decf	_TransferLength& (0+255),f,b
 33053  00D906  A0D8               	btfss	status,0,c
 33054  00D908  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33055                           
 33056                           ; BSR set to: 1
 33057                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 33058  00D90A  0E01               	movlw	1
 33059  00D90C  D00B               	goto	L50
 33060  00D90E                     
 33061                           ; BSR set to: 1
 33062                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 33063                           
 33064                           ; BSR set to: 1
 33065  00D90E  0E02               	movlw	2
 33066  00D910  010D               	movlb	13	; () banked
 33067  00D912  6F8C               	movwf	140,b	;volatile
 33068                           
 33069                           ; BSR set to: 13
 33070                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 33071  00D914  0E00               	movlw	0
 33072  00D916  0100               	movlb	0	; () banked
 33073  00D918  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33074  00D91A  0E02               	movlw	2
 33075  00D91C  EC7E  F086         	call	_USBStallEndpoint
 33076                           
 33077                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 33078  00D920  0E00               	movlw	0
 33079  00D922                     L95:
 33080  00D922  0101               	movlb	1	; () banked
 33081  00D924                     L50:
 33082  00D924  6F60               	movwf	_MSDWriteState& (0+255),b
 33083                           
 33084                           ; BSR set to: 1
 33085                           ;usb_device_msd.c: 1345: }
 33086                           
 33087                           ;usb_device_msd.c: 1344: break;
 33088  00D926  D012               	goto	l703
 33089  00D928                     l700:
 33090                           
 33091                           ; BSR set to: 1
 33092  00D928  0101               	movlb	1	; () banked
 33093  00D92A  5160               	movf	_MSDWriteState& (0+255),w,b
 33094                           
 33095                           ; Switch size 1, requested type "space"
 33096                           ; Number of cases is 5, Range of values is 0 to 4
 33097                           ; switch strategies available:
 33098                           ; Name         Instructions Cycles
 33099                           ; simple_byte           16     9 (average)
 33100                           ;	Chosen strategy is simple_byte
 33101  00D92C  0A00               	xorlw	0	; case 0
 33102  00D92E  B4D8               	btfsc	status,2,c
 33103  00D930  D69B               	goto	l701
 33104  00D932  0A01               	xorlw	1	; case 1
 33105  00D934  B4D8               	btfsc	status,2,c
 33106  00D936  D6F1               	goto	l706
 33107  00D938  0A03               	xorlw	3	; case 2
 33108  00D93A  B4D8               	btfsc	status,2,c
 33109  00D93C  D798               	goto	l715
 33110  00D93E  0A01               	xorlw	1	; case 3
 33111  00D940  B4D8               	btfsc	status,2,c
 33112  00D942  D700               	goto	l708
 33113  00D944  0A07               	xorlw	7	; case 4
 33114  00D946  B4D8               	btfsc	status,2,c
 33115  00D948  D746               	goto	l711
 33116  00D94A  D7E1               	goto	l720
 33117  00D94C                     l703:
 33118                           
 33119                           ;usb_device_msd.c: 1347: return MSDWriteState;
 33120                           
 33121                           ; BSR set to: 1
 33122  00D94C  0101               	movlb	1	; () banked
 33123  00D94E  5160               	movf	_MSDWriteState& (0+255),w,b
 33124  00D950  0012               	return	
 33125  00D952                     __end_of_MSDWriteHandler:
 33126                           	opt stack 0
 33127                           tosu	equ	0xFFF
 33128                           tosh	equ	0xFFE
 33129                           tosl	equ	0xFFD
 33130                           pclath	equ	0xFFA
 33131                           tblptru	equ	0xFF8
 33132                           tblptrh	equ	0xFF7
 33133                           tblptrl	equ	0xFF6
 33134                           tablat	equ	0xFF5
 33135                           prodh	equ	0xFF4
 33136                           prodl	equ	0xFF3
 33137                           intcon	equ	0xFF2
 33138                           postinc0	equ	0xFEE
 33139                           wreg	equ	0xFE8
 33140                           indf1	equ	0xFE7
 33141                           postinc1	equ	0xFE6
 33142                           postdec1	equ	0xFE5
 33143                           plusw1	equ	0xFE3
 33144                           fsr1h	equ	0xFE2
 33145                           fsr1l	equ	0xFE1
 33146                           indf2	equ	0xFDF
 33147                           postinc2	equ	0xFDE
 33148                           postdec2	equ	0xFDD
 33149                           plusw2	equ	0xFDB
 33150                           fsr2h	equ	0xFDA
 33151                           fsr2l	equ	0xFD9
 33152                           status	equ	0xFD8
 33153                           
 33154 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 33155 ;; Defined at:
 33156 ;;		line 34 in file "external_flash.c"
 33157 ;; Parameters:    Size  Location     Type
 33158 ;;  config          2    0[BANK0 ] PTR void 
 33159 ;;		 -> NULL(0), 
 33160 ;; Auto vars:     Size  Location     Type
 33161 ;;		None
 33162 ;; Return value:  Size  Location     Type
 33163 ;;                  1    wreg      unsigned char 
 33164 ;; Registers used:
 33165 ;;		wreg
 33166 ;; Tracked objects:
 33167 ;;		On entry : 0/0
 33168 ;;		On exit  : 0/0
 33169 ;;		Unchanged: 0/0
 33170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33175 ;;Total ram usage:        2 bytes
 33176 ;; Hardware stack levels used:    1
 33177 ;; Hardware stack levels required when called:   10
 33178 ;; This function calls:
 33179 ;;		Nothing
 33180 ;; This function is called by:
 33181 ;;		_MSDWriteHandler
 33182 ;;		_MSDProcessCommandMediaPresent
 33183 ;; This function uses a non-reentrant model
 33184 ;;
 33185                           
 33186                           	psect	text129
 33187  0158F4                     __ptext129:
 33188                           	opt stack 0
 33189  0158F4                     _ExternalFlash_WriteProtectStateGet:
 33190                           	opt stack 15
 33191                           
 33192                           ;external_flash.c: 37: return 0;
 33193                           
 33194                           ; BSR set to: 1
 33195                           ;incstack = 0
 33196  0158F4  0E00               	movlw	0
 33197  0158F6  0012               	return	
 33198  0158F8                     __end_of_ExternalFlash_WriteProtectStateGet:
 33199                           	opt stack 0
 33200                           tosu	equ	0xFFF
 33201                           tosh	equ	0xFFE
 33202                           tosl	equ	0xFFD
 33203                           pclath	equ	0xFFA
 33204                           tblptru	equ	0xFF8
 33205                           tblptrh	equ	0xFF7
 33206                           tblptrl	equ	0xFF6
 33207                           tablat	equ	0xFF5
 33208                           prodh	equ	0xFF4
 33209                           prodl	equ	0xFF3
 33210                           intcon	equ	0xFF2
 33211                           postinc0	equ	0xFEE
 33212                           wreg	equ	0xFE8
 33213                           indf1	equ	0xFE7
 33214                           postinc1	equ	0xFE6
 33215                           postdec1	equ	0xFE5
 33216                           plusw1	equ	0xFE3
 33217                           fsr1h	equ	0xFE2
 33218                           fsr1l	equ	0xFE1
 33219                           indf2	equ	0xFDF
 33220                           postinc2	equ	0xFDE
 33221                           postdec2	equ	0xFDD
 33222                           plusw2	equ	0xFDB
 33223                           fsr2h	equ	0xFDA
 33224                           fsr2l	equ	0xFD9
 33225                           status	equ	0xFD8
 33226                           
 33227 ;; *************** function _ExternalFlash_SectorWrite *****************
 33228 ;; Defined at:
 33229 ;;		line 56 in file "external_flash.c"
 33230 ;; Parameters:    Size  Location     Type
 33231 ;;  config          2   36[BANK0 ] PTR void 
 33232 ;;		 -> NULL(0), 
 33233 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 33234 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 33235 ;;		 -> msd_buffer(512), 
 33236 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 33237 ;; Auto vars:     Size  Location     Type
 33238 ;;  page            2   45[BANK0 ] unsigned int 
 33239 ;; Return value:  Size  Location     Type
 33240 ;;                  1    wreg      unsigned char 
 33241 ;; Registers used:
 33242 ;;		wreg, status,2, status,0, cstack
 33243 ;; Tracked objects:
 33244 ;;		On entry : 0/0
 33245 ;;		On exit  : 0/0
 33246 ;;		Unchanged: 0/0
 33247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33248 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33251 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33252 ;;Total ram usage:       11 bytes
 33253 ;; Hardware stack levels used:    1
 33254 ;; Hardware stack levels required when called:   15
 33255 ;; This function calls:
 33256 ;;		_flash_sector_write
 33257 ;; This function is called by:
 33258 ;;		_MSDWriteHandler
 33259 ;; This function uses a non-reentrant model
 33260 ;;
 33261                           
 33262                           	psect	text130
 33263  0151E8                     __ptext130:
 33264                           	opt stack 0
 33265  0151E8                     _ExternalFlash_SectorWrite:
 33266                           	opt stack 10
 33267                           
 33268                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 33269                           
 33270                           ;incstack = 0
 33271  0151E8  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 33272  0151EC  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 33273                           
 33274                           ;external_flash.c: 61: if(sector_addr >= 8192)
 33275  0151F0  0100               	movlb	0	; () banked
 33276  0151F2  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 33277  0151F4  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 33278  0151F6  E104               	bnz	u11100
 33279  0151F8  0E20               	movlw	32
 33280  0151FA  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 33281  0151FC  A0D8               	btfss	status,0,c
 33282  0151FE  D002               	goto	l1681
 33283  015200                     u11100:
 33284                           
 33285                           ; BSR set to: 0
 33286                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 33287  015200  0E00               	movlw	0
 33288                           
 33289                           ; BSR set to: 0
 33290  015202  0012               	return	
 33291  015204                     l1681:
 33292                           
 33293                           ; BSR set to: 0
 33294                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 33295                           
 33296                           ; BSR set to: 0
 33297  015204  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 33298  015208  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 33299  01520C  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 33300  015210  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 33301  015214  ECF3  F0A5         	call	_flash_sector_write	;wreg free
 33302                           
 33303                           ;external_flash.c: 69: return 1;
 33304  015218  0E01               	movlw	1
 33305  01521A  0012               	return	
 33306  01521C                     __end_of_ExternalFlash_SectorWrite:
 33307                           	opt stack 0
 33308                           tosu	equ	0xFFF
 33309                           tosh	equ	0xFFE
 33310                           tosl	equ	0xFFD
 33311                           pclath	equ	0xFFA
 33312                           tblptru	equ	0xFF8
 33313                           tblptrh	equ	0xFF7
 33314                           tblptrl	equ	0xFF6
 33315                           tablat	equ	0xFF5
 33316                           prodh	equ	0xFF4
 33317                           prodl	equ	0xFF3
 33318                           intcon	equ	0xFF2
 33319                           postinc0	equ	0xFEE
 33320                           wreg	equ	0xFE8
 33321                           indf1	equ	0xFE7
 33322                           postinc1	equ	0xFE6
 33323                           postdec1	equ	0xFE5
 33324                           plusw1	equ	0xFE3
 33325                           fsr1h	equ	0xFE2
 33326                           fsr1l	equ	0xFE1
 33327                           indf2	equ	0xFDF
 33328                           postinc2	equ	0xFDE
 33329                           postdec2	equ	0xFDD
 33330                           plusw2	equ	0xFDB
 33331                           fsr2h	equ	0xFDA
 33332                           fsr2l	equ	0xFD9
 33333                           status	equ	0xFD8
 33334                           
 33335 ;; *************** function _flash_sector_write *****************
 33336 ;; Defined at:
 33337 ;;		line 434 in file "flash.c"
 33338 ;; Parameters:    Size  Location     Type
 33339 ;;  page            2   31[BANK0 ] unsigned int 
 33340 ;;  data            2   33[BANK0 ] PTR unsigned char 
 33341 ;;		 -> buffer(512), msd_buffer(512), 
 33342 ;; Auto vars:     Size  Location     Type
 33343 ;;  match           1   35[BANK0 ] enum E7013
 33344 ;; Return value:  Size  Location     Type
 33345 ;;                  1    wreg      void 
 33346 ;; Registers used:
 33347 ;;		wreg, status,2, status,0, cstack
 33348 ;; Tracked objects:
 33349 ;;		On entry : 0/0
 33350 ;;		On exit  : 0/0
 33351 ;;		Unchanged: 0/0
 33352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33356 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33357 ;;Total ram usage:        5 bytes
 33358 ;; Hardware stack levels used:    1
 33359 ;; Hardware stack levels required when called:   14
 33360 ;; This function calls:
 33361 ;;		__flash_compare_page_to_buffer
 33362 ;;		__flash_write_page_from_buffer
 33363 ;;		__flash_write_to_buffer
 33364 ;; This function is called by:
 33365 ;;		_ExternalFlash_SectorWrite
 33366 ;;		__make_cluster_chain
 33367 ;;		_fat_restore_mbr_fbr
 33368 ;;		_fat_format
 33369 ;; This function uses a non-reentrant model
 33370 ;;
 33371                           
 33372                           	psect	text131
 33373  014BE6                     __ptext131:
 33374                           	opt stack 0
 33375  014BE6                     _flash_sector_write:
 33376                           	opt stack 13
 33377                           
 33378                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 33379                           
 33380                           ;incstack = 0
 33381  014BE6  0E00               	movlw	0
 33382  014BE8  0100               	movlb	0	; () banked
 33383  014BEA  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 33384  014BEC  0E00               	movlw	0
 33385  014BEE  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 33386  014BF0  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 33387  014BF4  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 33388  014BF8  0E02               	movlw	2
 33389  014BFA  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 33390  014BFC  0E00               	movlw	0
 33391  014BFE  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 33392  014C00  0E00               	movlw	0
 33393  014C02  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 33394  014C04  EC52  F0A5         	call	__flash_write_to_buffer	;wreg free
 33395                           
 33396                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33397  014C08  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 33398  014C0C  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 33399  014C10  0E00               	movlw	0
 33400  014C12  0100               	movlb	0	; () banked
 33401  014C14  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 33402  014C16  EC3B  F09E         	call	__flash_compare_page_to_buffer	;wreg free
 33403  014C1A  0100               	movlb	0	; () banked
 33404  014C1C  6F83               	movwf	flash_sector_write@match& (0+255),b
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 33408  014C1E  0583               	decf	flash_sector_write@match& (0+255),w,b
 33409  014C20  A4D8               	btfss	status,2,c
 33410  014C22  0012               	return	
 33411                           
 33412                           ; BSR set to: 0
 33413                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33414  014C24  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 33415  014C28  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 33416  014C2C  0E00               	movlw	0
 33417  014C2E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 33418  014C30  EC1E  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 33419  014C34  0012               	return	
 33420  014C36                     __end_of_flash_sector_write:
 33421                           	opt stack 0
 33422                           tosu	equ	0xFFF
 33423                           tosh	equ	0xFFE
 33424                           tosl	equ	0xFFD
 33425                           pclath	equ	0xFFA
 33426                           tblptru	equ	0xFF8
 33427                           tblptrh	equ	0xFF7
 33428                           tblptrl	equ	0xFF6
 33429                           tablat	equ	0xFF5
 33430                           prodh	equ	0xFF4
 33431                           prodl	equ	0xFF3
 33432                           intcon	equ	0xFF2
 33433                           postinc0	equ	0xFEE
 33434                           wreg	equ	0xFE8
 33435                           indf1	equ	0xFE7
 33436                           postinc1	equ	0xFE6
 33437                           postdec1	equ	0xFE5
 33438                           plusw1	equ	0xFE3
 33439                           fsr1h	equ	0xFE2
 33440                           fsr1l	equ	0xFE1
 33441                           indf2	equ	0xFDF
 33442                           postinc2	equ	0xFDE
 33443                           postdec2	equ	0xFDD
 33444                           plusw2	equ	0xFDB
 33445                           fsr2h	equ	0xFDA
 33446                           fsr2l	equ	0xFD9
 33447                           status	equ	0xFD8
 33448                           
 33449 ;; *************** function __flash_write_to_buffer *****************
 33450 ;; Defined at:
 33451 ;;		line 236 in file "flash.c"
 33452 ;; Parameters:    Size  Location     Type
 33453 ;;  start           2   19[BANK0 ] unsigned int 
 33454 ;;  data            2   21[BANK0 ] PTR unsigned char 
 33455 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 33456 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 33457 ;;  data_length     2   23[BANK0 ] unsigned int 
 33458 ;;  buffer          1   25[BANK0 ] enum E7009
 33459 ;; Auto vars:     Size  Location     Type
 33460 ;;  command         4   26[BANK0 ] unsigned char [4]
 33461 ;; Return value:  Size  Location     Type
 33462 ;;                  1    wreg      void 
 33463 ;; Registers used:
 33464 ;;		wreg, status,2, status,0, cstack
 33465 ;; Tracked objects:
 33466 ;;		On entry : 0/0
 33467 ;;		On exit  : 0/0
 33468 ;;		Unchanged: 0/0
 33469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33470 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33473 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33474 ;;Total ram usage:       11 bytes
 33475 ;; Hardware stack levels used:    1
 33476 ;; Hardware stack levels required when called:   13
 33477 ;; This function calls:
 33478 ;;		__flash_is_busy
 33479 ;;		_spi_tx_tx
 33480 ;; This function is called by:
 33481 ;;		_flash_sector_write
 33482 ;;		_flash_partial_write
 33483 ;;		_flash_write_to_buffer
 33484 ;; This function uses a non-reentrant model
 33485 ;;
 33486                           
 33487                           	psect	text132
 33488  014AA4                     __ptext132:
 33489                           	opt stack 0
 33490  014AA4                     __flash_write_to_buffer:
 33491                           	opt stack 13
 33492                           
 33493                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 33494                           
 33495                           ;incstack = 0
 33496  014AA4  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 33497  014AA8  0900               	iorlw	0
 33498  014AAA  A4D8               	btfss	status,2,c
 33499  014AAC  D7FB               	goto	__flash_write_to_buffer
 33500                           
 33501                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 33502  014AAE  0100               	movlb	0	; () banked
 33503  014AB0  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 33504  014AB2  A4D8               	btfss	status,2,c
 33505  014AB4  D002               	goto	l1567
 33506                           
 33507                           ; BSR set to: 0
 33508                           ;flash.c: 245: command[0] = 0x84;
 33509  014AB6  0E84               	movlw	132
 33510  014AB8  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 33511  014ABA                     l1567:
 33512                           
 33513                           ; BSR set to: 0
 33514                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 33515                           
 33516                           ; BSR set to: 0
 33517  014ABA  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 33518  014ABC  A4D8               	btfss	status,2,c
 33519  014ABE  D002               	goto	l1568
 33520                           
 33521                           ; BSR set to: 0
 33522                           ;flash.c: 247: command[0] = 0x87;
 33523  014AC0  0E87               	movlw	135
 33524  014AC2  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 33525  014AC4                     l1568:
 33526                           
 33527                           ; BSR set to: 0
 33528                           ;flash.c: 249: command[1] = 0x00;
 33529  014AC4  0E00               	movlw	0
 33530  014AC6  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 33531                           
 33532                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 33533  014AC8  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 33534  014ACA  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 33535                           
 33536                           ; BSR set to: 0
 33537                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 33538  014ACC  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 33539                           
 33540                           ; BSR set to: 0
 33541                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 33542  014AD0  0E7A               	movlw	low __flash_write_to_buffer@command
 33543  014AD2  6F60               	movwf	spi_tx_tx@command& (0+255),b
 33544  014AD4  0E00               	movlw	high __flash_write_to_buffer@command
 33545  014AD6  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 33546  014AD8  0E00               	movlw	0
 33547  014ADA  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 33548  014ADC  0E04               	movlw	4
 33549  014ADE  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 33550  014AE0  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 33551  014AE4  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 33552  014AE8  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 33553  014AEC  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 33554  014AF0  ECE2  F09B         	call	_spi_tx_tx	;wreg free
 33555  014AF4  0012               	return		;funcret
 33556  014AF6                     __end_of__flash_write_to_buffer:
 33557                           	opt stack 0
 33558                           tosu	equ	0xFFF
 33559                           tosh	equ	0xFFE
 33560                           tosl	equ	0xFFD
 33561                           pclath	equ	0xFFA
 33562                           tblptru	equ	0xFF8
 33563                           tblptrh	equ	0xFF7
 33564                           tblptrl	equ	0xFF6
 33565                           tablat	equ	0xFF5
 33566                           prodh	equ	0xFF4
 33567                           prodl	equ	0xFF3
 33568                           intcon	equ	0xFF2
 33569                           postinc0	equ	0xFEE
 33570                           wreg	equ	0xFE8
 33571                           indf1	equ	0xFE7
 33572                           postinc1	equ	0xFE6
 33573                           postdec1	equ	0xFE5
 33574                           plusw1	equ	0xFE3
 33575                           fsr1h	equ	0xFE2
 33576                           fsr1l	equ	0xFE1
 33577                           indf2	equ	0xFDF
 33578                           postinc2	equ	0xFDE
 33579                           postdec2	equ	0xFDD
 33580                           plusw2	equ	0xFDB
 33581                           fsr2h	equ	0xFDA
 33582                           fsr2l	equ	0xFD9
 33583                           status	equ	0xFD8
 33584                           
 33585 ;; *************** function _spi_tx_tx *****************
 33586 ;; Defined at:
 33587 ;;		line 146 in file "spi.c"
 33588 ;; Parameters:    Size  Location     Type
 33589 ;;  command         2    0[BANK0 ] PTR unsigned char 
 33590 ;;		 -> _flash_write_to_buffer@command(4), 
 33591 ;;  command_leng    2    2[BANK0 ] unsigned int 
 33592 ;;  data            2    4[BANK0 ] PTR unsigned char 
 33593 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 33594 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 33595 ;;  data_length     2    6[BANK0 ] unsigned int 
 33596 ;; Auto vars:     Size  Location     Type
 33597 ;;		None
 33598 ;; Return value:  Size  Location     Type
 33599 ;;                  1    wreg      void 
 33600 ;; Registers used:
 33601 ;;		wreg, status,2, status,0
 33602 ;; Tracked objects:
 33603 ;;		On entry : 0/0
 33604 ;;		On exit  : 0/0
 33605 ;;		Unchanged: 0/0
 33606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33607 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33610 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33611 ;;Total ram usage:       12 bytes
 33612 ;; Hardware stack levels used:    1
 33613 ;; Hardware stack levels required when called:   10
 33614 ;; This function calls:
 33615 ;;		Nothing
 33616 ;; This function is called by:
 33617 ;;		__flash_write_to_buffer
 33618 ;; This function uses a non-reentrant model
 33619 ;;
 33620                           
 33621                           	psect	text133
 33622  0137C4                     __ptext133:
 33623                           	opt stack 0
 33624  0137C4                     _spi_tx_tx:
 33625                           	opt stack 15
 33626                           
 33627                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 33628                           
 33629                           ;incstack = 0
 33630  0137C4  9E88               	bcf	3976,7,c	;volatile
 33631                           
 33632                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 33633  0137C6  9C88               	bcf	3976,6,c	;volatile
 33634                           
 33635                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 33636  0137C8  8A88               	bsf	3976,5,c	;volatile
 33637                           
 33638                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 33639  0137CA  9888               	bcf	3976,4,c	;volatile
 33640                           
 33641                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 33642  0137CC  9688               	bcf	3976,3,c	;volatile
 33643                           
 33644                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 33645  0137CE  8488               	bsf	3976,2,c	;volatile
 33646                           
 33647                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 33648  0137D0  9288               	bcf	3976,1,c	;volatile
 33649                           
 33650                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 33651  0137D2  9886               	bcf	3974,4,c	;volatile
 33652  0137D4  9A86               	bcf	3974,5,c	;volatile
 33653  0137D6  9C86               	bcf	3974,6,c	;volatile
 33654  0137D8  9E86               	bcf	3974,7,c	;volatile
 33655                           
 33656                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 33657  0137DA  9086               	bcf	3974,0,c	;volatile
 33658  0137DC  9286               	bcf	3974,1,c	;volatile
 33659  0137DE  9486               	bcf	3974,2,c	;volatile
 33660  0137E0  9686               	bcf	3974,3,c	;volatile
 33661                           
 33662                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33663  0137E2  0100               	movlb	0	; () banked
 33664  0137E4  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 33665  0137E6  6E6A               	movwf	3946,c	;volatile
 33666                           
 33667                           ; BSR set to: 0
 33668                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33669  0137E8  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 33670                           
 33671                           ; BSR set to: 0
 33672                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33673  0137EC  0EFF               	movlw	255
 33674  0137EE  6F68               	movwf	??_spi_tx_tx& (0+255),b
 33675  0137F0  0EFF               	movlw	255
 33676  0137F2  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 33677  0137F4  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 33678  0137F8  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 33679  0137FC  5168               	movf	??_spi_tx_tx& (0+255),w,b
 33680  0137FE  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 33681  013800  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 33682  013802  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 33683  013804  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33684  013808  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 33685  01380A  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 33686  01380C  6E66               	movwf	3942,c	;volatile
 33687                           
 33688                           ; BSR set to: 0
 33689                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33690  01380E  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 33691  013810  6E67               	movwf	3943,c	;volatile
 33692                           
 33693                           ; BSR set to: 0
 33694                           ;spi.c: 174: LATDbits.LD7 = 0;
 33695  013812  9E8C               	bcf	3980,7,c	;volatile
 33696                           
 33697                           ; BSR set to: 0
 33698                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 33699  013814  8088               	bsf	3976,0,c	;volatile
 33700  013816                     
 33701                           ; BSR set to: 0
 33702  013816  B088               	btfsc	3976,0,c	;volatile
 33703  013818  D7FE               	goto	l2183
 33704                           
 33705                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33706  01381A  0100               	movlb	0	; () banked
 33707  01381C  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 33708  01381E  6E6A               	movwf	3946,c	;volatile
 33709                           
 33710                           ; BSR set to: 0
 33711                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33712  013820  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 33713                           
 33714                           ; BSR set to: 0
 33715                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33716  013824  0EFF               	movlw	255
 33717  013826  6F68               	movwf	??_spi_tx_tx& (0+255),b
 33718  013828  0EFF               	movlw	255
 33719  01382A  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 33720  01382C  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 33721  013830  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 33722  013834  5168               	movf	??_spi_tx_tx& (0+255),w,b
 33723  013836  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 33724  013838  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 33725  01383A  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 33726  01383C  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33727  013840  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 33728  013842  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 33729  013844  6E66               	movwf	3942,c	;volatile
 33730                           
 33731                           ; BSR set to: 0
 33732                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33733  013846  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 33734  013848  6E67               	movwf	3943,c	;volatile
 33735                           
 33736                           ; BSR set to: 0
 33737                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 33738  01384A  8088               	bsf	3976,0,c	;volatile
 33739  01384C                     
 33740                           ; BSR set to: 0
 33741  01384C  B088               	btfsc	3976,0,c	;volatile
 33742  01384E  D7FE               	goto	l2186
 33743                           
 33744                           ;spi.c: 193: LATDbits.LD7 = 1;
 33745  013850  8E8C               	bsf	3980,7,c	;volatile
 33746  013852  0012               	return		;funcret
 33747  013854                     __end_of_spi_tx_tx:
 33748                           	opt stack 0
 33749                           tosu	equ	0xFFF
 33750                           tosh	equ	0xFFE
 33751                           tosl	equ	0xFFD
 33752                           pclath	equ	0xFFA
 33753                           tblptru	equ	0xFF8
 33754                           tblptrh	equ	0xFF7
 33755                           tblptrl	equ	0xFF6
 33756                           tablat	equ	0xFF5
 33757                           prodh	equ	0xFF4
 33758                           prodl	equ	0xFF3
 33759                           intcon	equ	0xFF2
 33760                           postinc0	equ	0xFEE
 33761                           wreg	equ	0xFE8
 33762                           indf1	equ	0xFE7
 33763                           postinc1	equ	0xFE6
 33764                           postdec1	equ	0xFE5
 33765                           plusw1	equ	0xFE3
 33766                           fsr1h	equ	0xFE2
 33767                           fsr1l	equ	0xFE1
 33768                           indf2	equ	0xFDF
 33769                           postinc2	equ	0xFDE
 33770                           postdec2	equ	0xFDD
 33771                           plusw2	equ	0xFDB
 33772                           fsr2h	equ	0xFDA
 33773                           fsr2l	equ	0xFD9
 33774                           status	equ	0xFD8
 33775                           
 33776 ;; *************** function __flash_write_page_from_buffer *****************
 33777 ;; Defined at:
 33778 ;;		line 258 in file "flash.c"
 33779 ;; Parameters:    Size  Location     Type
 33780 ;;  page            2   19[BANK0 ] unsigned int 
 33781 ;;  buffer          1   21[BANK0 ] enum E7009
 33782 ;; Auto vars:     Size  Location     Type
 33783 ;;  command         4   25[BANK0 ] unsigned char [4]
 33784 ;; Return value:  Size  Location     Type
 33785 ;;                  1    wreg      void 
 33786 ;; Registers used:
 33787 ;;		wreg, status,2, status,0, cstack
 33788 ;; Tracked objects:
 33789 ;;		On entry : 0/0
 33790 ;;		On exit  : 0/0
 33791 ;;		Unchanged: 0/0
 33792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33793 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33794 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33795 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33796 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33797 ;;Total ram usage:       10 bytes
 33798 ;; Hardware stack levels used:    1
 33799 ;; Hardware stack levels required when called:   13
 33800 ;; This function calls:
 33801 ;;		__flash_is_busy
 33802 ;;		_spi_tx
 33803 ;; This function is called by:
 33804 ;;		_flash_sector_write
 33805 ;;		_flash_partial_write
 33806 ;;		_flash_write_page_from_buffer
 33807 ;; This function uses a non-reentrant model
 33808 ;;
 33809                           
 33810                           	psect	text134
 33811  01463C                     __ptext134:
 33812                           	opt stack 0
 33813  01463C                     __flash_write_page_from_buffer:
 33814                           	opt stack 13
 33815                           
 33816                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 33817                           
 33818                           ;incstack = 0
 33819  01463C  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 33820  014640  0900               	iorlw	0
 33821  014642  A4D8               	btfss	status,2,c
 33822  014644  D7FB               	goto	__flash_write_page_from_buffer
 33823                           
 33824                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 33825  014646  0100               	movlb	0	; () banked
 33826  014648  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 33827  01464A  A4D8               	btfss	status,2,c
 33828  01464C  D002               	goto	l1575
 33829                           
 33830                           ; BSR set to: 0
 33831                           ;flash.c: 267: command[0] = 0x83;
 33832  01464E  0E83               	movlw	131
 33833  014650  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 33834  014652                     l1575:
 33835                           
 33836                           ; BSR set to: 0
 33837                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 33838                           
 33839                           ; BSR set to: 0
 33840  014652  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 33841  014654  A4D8               	btfss	status,2,c
 33842  014656  D002               	goto	l1576
 33843                           
 33844                           ; BSR set to: 0
 33845                           ;flash.c: 269: command[0] = 0x86;
 33846  014658  0E86               	movlw	134
 33847  01465A  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 33848  01465C                     l1576:
 33849                           
 33850                           ; BSR set to: 0
 33851                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33852                           
 33853                           ; BSR set to: 0
 33854  01465C  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33855  014660  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33856  014664  0E07               	movlw	7
 33857  014666  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 33858  014668                     u9905:
 33859  014668  90D8               	bcf	status,0,c
 33860  01466A  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 33861  01466C  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 33862  01466E  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 33863  014670  D7FB               	goto	u9905
 33864  014672  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 33865  014674  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 33866                           
 33867                           ; BSR set to: 0
 33868                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 33869  014676  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 33870  014678  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 33871  01467A  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 33872                           
 33873                           ;flash.c: 273: command[3] = 0x00;
 33874  01467C  0E00               	movlw	0
 33875  01467E  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 33876                           
 33877                           ; BSR set to: 0
 33878                           ;flash.c: 276: spi_tx(command, 4);
 33879  014680  0E79               	movlw	low __flash_write_page_from_buffer@command
 33880  014682  6F60               	movwf	spi_tx@data& (0+255),b
 33881  014684  0E00               	movlw	high __flash_write_page_from_buffer@command
 33882  014686  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 33883  014688  0E00               	movlw	0
 33884  01468A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 33885  01468C  0E04               	movlw	4
 33886  01468E  6F62               	movwf	spi_tx@length& (0+255),b
 33887  014690  EC4B  F0A3         	call	_spi_tx	;wreg free
 33888  014694  0012               	return		;funcret
 33889  014696                     __end_of__flash_write_page_from_buffer:
 33890                           	opt stack 0
 33891                           tosu	equ	0xFFF
 33892                           tosh	equ	0xFFE
 33893                           tosl	equ	0xFFD
 33894                           pclath	equ	0xFFA
 33895                           tblptru	equ	0xFF8
 33896                           tblptrh	equ	0xFF7
 33897                           tblptrl	equ	0xFF6
 33898                           tablat	equ	0xFF5
 33899                           prodh	equ	0xFF4
 33900                           prodl	equ	0xFF3
 33901                           intcon	equ	0xFF2
 33902                           postinc0	equ	0xFEE
 33903                           wreg	equ	0xFE8
 33904                           indf1	equ	0xFE7
 33905                           postinc1	equ	0xFE6
 33906                           postdec1	equ	0xFE5
 33907                           plusw1	equ	0xFE3
 33908                           fsr1h	equ	0xFE2
 33909                           fsr1l	equ	0xFE1
 33910                           indf2	equ	0xFDF
 33911                           postinc2	equ	0xFDE
 33912                           postdec2	equ	0xFDD
 33913                           plusw2	equ	0xFDB
 33914                           fsr2h	equ	0xFDA
 33915                           fsr2l	equ	0xFD9
 33916                           status	equ	0xFD8
 33917                           
 33918 ;; *************** function __flash_compare_page_to_buffer *****************
 33919 ;; Defined at:
 33920 ;;		line 176 in file "flash.c"
 33921 ;; Parameters:    Size  Location     Type
 33922 ;;  page            2   19[BANK0 ] unsigned int 
 33923 ;;  buffer          1   21[BANK0 ] enum E7009
 33924 ;; Auto vars:     Size  Location     Type
 33925 ;;  command         4   27[BANK0 ] unsigned char [4]
 33926 ;;  status          2   25[BANK0 ] unsigned int 
 33927 ;; Return value:  Size  Location     Type
 33928 ;;                  1    wreg      enum E7013
 33929 ;; Registers used:
 33930 ;;		wreg, status,2, status,0, cstack
 33931 ;; Tracked objects:
 33932 ;;		On entry : 0/0
 33933 ;;		On exit  : 0/0
 33934 ;;		Unchanged: 0/0
 33935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33936 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33937 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33938 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33939 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33940 ;;Total ram usage:       12 bytes
 33941 ;; Hardware stack levels used:    1
 33942 ;; Hardware stack levels required when called:   13
 33943 ;; This function calls:
 33944 ;;		__flash_get_status
 33945 ;;		__flash_is_busy
 33946 ;;		_spi_tx
 33947 ;; This function is called by:
 33948 ;;		_flash_sector_write
 33949 ;;		_flash_partial_write
 33950 ;; This function uses a non-reentrant model
 33951 ;;
 33952                           
 33953                           	psect	text135
 33954  013C76                     __ptext135:
 33955                           	opt stack 0
 33956  013C76                     __flash_compare_page_to_buffer:
 33957                           	opt stack 13
 33958                           
 33959                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 33960                           
 33961                           ;incstack = 0
 33962  013C76  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 33963  013C7A  0900               	iorlw	0
 33964  013C7C  A4D8               	btfss	status,2,c
 33965  013C7E  D7FB               	goto	__flash_compare_page_to_buffer
 33966                           
 33967                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 33968  013C80  0100               	movlb	0	; () banked
 33969  013C82  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 33970  013C84  A4D8               	btfss	status,2,c
 33971  013C86  D002               	goto	l1548
 33972                           
 33973                           ; BSR set to: 0
 33974                           ;flash.c: 186: command[0] = 0x60;
 33975  013C88  0E60               	movlw	96
 33976  013C8A  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 33977  013C8C                     l1548:
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 33981                           
 33982                           ; BSR set to: 0
 33983  013C8C  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 33984  013C8E  A4D8               	btfss	status,2,c
 33985  013C90  D002               	goto	l1549
 33986                           
 33987                           ; BSR set to: 0
 33988                           ;flash.c: 188: command[0] = 0x60;
 33989  013C92  0E60               	movlw	96
 33990  013C94  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 33991  013C96                     l1549:
 33992                           
 33993                           ; BSR set to: 0
 33994                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33995                           
 33996                           ; BSR set to: 0
 33997  013C96  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 33998  013C9A  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 33999  013C9E  0E07               	movlw	7
 34000  013CA0  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34001  013CA2                     u9815:
 34002  013CA2  90D8               	bcf	status,0,c
 34003  013CA4  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34004  013CA6  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34005  013CA8  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34006  013CAA  D7FB               	goto	u9815
 34007  013CAC  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34008  013CAE  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34009                           
 34010                           ; BSR set to: 0
 34011                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 34012  013CB0  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34013  013CB2  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34014  013CB4  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34015                           
 34016                           ;flash.c: 192: command[3] = 0x00;
 34017  013CB6  0E00               	movlw	0
 34018  013CB8  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34019                           
 34020                           ; BSR set to: 0
 34021                           ;flash.c: 195: spi_tx(command, 4);
 34022  013CBA  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34023  013CBC  6F60               	movwf	spi_tx@data& (0+255),b
 34024  013CBE  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34025  013CC0  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34026  013CC2  0E00               	movlw	0
 34027  013CC4  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34028  013CC6  0E04               	movlw	4
 34029  013CC8  6F62               	movwf	spi_tx@length& (0+255),b
 34030  013CCA  EC4B  F0A3         	call	_spi_tx	;wreg free
 34031  013CCE  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 34032  013CD2  0900               	iorlw	0
 34033  013CD4  A4D8               	btfss	status,2,c
 34034  013CD6  D7FB               	goto	l1551
 34035                           
 34036                           ;flash.c: 201: status = _flash_get_status();
 34037  013CD8  EC28  F0A9         	call	__flash_get_status	;wreg free
 34038  013CDC  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34039  013CE0  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34040                           
 34041                           ;flash.c: 204: if(status & 0b0000000001000000)
 34042  013CE4  0100               	movlb	0	; () banked
 34043  013CE6  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34044  013CE8  D002               	goto	l1553
 34045                           
 34046                           ; BSR set to: 0
 34047                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 34048  013CEA  0E01               	movlw	1
 34049                           
 34050                           ; BSR set to: 0
 34051                           ;flash.c: 208: }
 34052                           
 34053                           ; BSR set to: 0
 34054  013CEC  0012               	return	
 34055  013CEE                     l1553:
 34056                           
 34057                           ; BSR set to: 0
 34058                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 34059                           
 34060                           ; BSR set to: 0
 34061  013CEE  0E00               	movlw	0
 34062                           
 34063                           ; BSR set to: 0
 34064  013CF0  0012               	return	
 34065  013CF2                     __end_of__flash_compare_page_to_buffer:
 34066                           	opt stack 0
 34067                           tosu	equ	0xFFF
 34068                           tosh	equ	0xFFE
 34069                           tosl	equ	0xFFD
 34070                           pclath	equ	0xFFA
 34071                           tblptru	equ	0xFF8
 34072                           tblptrh	equ	0xFF7
 34073                           tblptrl	equ	0xFF6
 34074                           tablat	equ	0xFF5
 34075                           prodh	equ	0xFF4
 34076                           prodl	equ	0xFF3
 34077                           intcon	equ	0xFF2
 34078                           postinc0	equ	0xFEE
 34079                           wreg	equ	0xFE8
 34080                           indf1	equ	0xFE7
 34081                           postinc1	equ	0xFE6
 34082                           postdec1	equ	0xFE5
 34083                           plusw1	equ	0xFE3
 34084                           fsr1h	equ	0xFE2
 34085                           fsr1l	equ	0xFE1
 34086                           indf2	equ	0xFDF
 34087                           postinc2	equ	0xFDE
 34088                           postdec2	equ	0xFDD
 34089                           plusw2	equ	0xFDB
 34090                           fsr2h	equ	0xFDA
 34091                           fsr2l	equ	0xFD9
 34092                           status	equ	0xFD8
 34093                           
 34094 ;; *************** function _MSDReadHandler *****************
 34095 ;; Defined at:
 34096 ;;		line 1038 in file "usb_device_msd.c"
 34097 ;; Parameters:    Size  Location     Type
 34098 ;;		None
 34099 ;; Auto vars:     Size  Location     Type
 34100 ;;		None
 34101 ;; Return value:  Size  Location     Type
 34102 ;;                  1    wreg      unsigned char 
 34103 ;; Registers used:
 34104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34105 ;; Tracked objects:
 34106 ;;		On entry : 0/0
 34107 ;;		On exit  : 0/0
 34108 ;;		Unchanged: 0/0
 34109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34112 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34113 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34114 ;;Total ram usage:        4 bytes
 34115 ;; Hardware stack levels used:    1
 34116 ;; Hardware stack levels required when called:   16
 34117 ;; This function calls:
 34118 ;;		_ExternalFlash_SectorRead
 34119 ;;		_MSDCheckForErrorCases
 34120 ;;		_USBStallEndpoint
 34121 ;;		_USBTransferOnePacket
 34122 ;; This function is called by:
 34123 ;;		_MSDProcessCommandMediaPresent
 34124 ;; This function uses a non-reentrant model
 34125 ;;
 34126                           
 34127                           	psect	text136
 34128  00EEAA                     __ptext136:
 34129                           	opt stack 0
 34130  00EEAA                     _MSDReadHandler:
 34131                           	opt stack 10
 34132                           
 34133                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 34134                           
 34135                           ; BSR set to: 0
 34136                           ;incstack = 0
 34137  00EEAA  D0DF               	goto	l681
 34138  00EEAC                     l682:
 34139                           
 34140                           ; BSR set to: 1
 34141                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 34142  00EEAC  C211  F12E         	movff	_gblCBW+17,_LBA+3
 34143                           
 34144                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 34145  00EEB0  C212  F12D         	movff	_gblCBW+18,_LBA+2
 34146                           
 34147                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 34148  00EEB4  C213  F12C         	movff	_gblCBW+19,_LBA+1
 34149                           
 34150                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 34151  00EEB8  C214  F12B         	movff	_gblCBW+20,_LBA
 34152                           
 34153                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 34154  00EEBC  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 34155                           
 34156                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 34157  00EEC0  C217  F145         	movff	_gblCBW+23,_TransferLength
 34158                           
 34159                           ; BSR set to: 1
 34160                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 34161  00EEC4  5145               	movf	_TransferLength& (0+255),w,b
 34162  00EEC6  0100               	movlb	0	; () banked
 34163  00EEC8  6F95               	movwf	??_MSDReadHandler& (0+255),b
 34164  00EECA  0101               	movlb	1	; () banked
 34165  00EECC  5146               	movf	(_TransferLength+1)& (0+255),w,b
 34166  00EECE  0100               	movlb	0	; () banked
 34167  00EED0  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 34168  00EED2  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 34169  00EED4  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 34170  00EED6  0E09               	movlw	9
 34171  00EED8                     u11465:
 34172  00EED8  90D8               	bcf	status,0,c
 34173  00EEDA  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 34174  00EEDC  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 34175  00EEDE  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 34176  00EEE0  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 34177  00EEE2  2EE8               	decfsz	wreg,f,c
 34178  00EEE4  D7F9               	goto	u11465
 34179  00EEE6  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 34180  00EEEA  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 34181  00EEEE  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 34182  00EEF2  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 34183  00EEF6  EC5E  F084         	call	_MSDCheckForErrorCases	;wreg free
 34184  00EEFA  0900               	iorlw	0
 34185  00EEFC  A4D8               	btfss	status,2,c
 34186  00EEFE  D0C7               	goto	l684
 34187                           
 34188                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 34189                           
 34190                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 34191  00EF00  0E01               	movlw	1
 34192  00EF02  0101               	movlb	1	; () banked
 34193  00EF04  6F61               	movwf	_MSDReadState& (0+255),b
 34194  00EF06                     
 34195                           ; BSR set to: 1
 34196                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 34197                           
 34198                           ; BSR set to: 1
 34199  00EF06  5145               	movf	_TransferLength& (0+255),w,b
 34200  00EF08  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 34201  00EF0A  A4D8               	btfss	status,2,c
 34202  00EF0C  D002               	goto	l686
 34203                           
 34204                           ; BSR set to: 1
 34205                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 34206  00EF0E  0E00               	movlw	0
 34207  00EF10  D04A               	goto	L51
 34208  00EF12                     l686:
 34209                           
 34210                           ; BSR set to: 1
 34211                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 34212                           
 34213                           ; BSR set to: 1
 34214  00EF12  0745               	decf	_TransferLength& (0+255),f,b
 34215  00EF14  A0D8               	btfss	status,0,c
 34216  00EF16  0746               	decf	(_TransferLength+1)& (0+255),f,b
 34217                           
 34218                           ; BSR set to: 1
 34219                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 34220  00EF18  0E02               	movlw	2
 34221  00EF1A  6F61               	movwf	_MSDReadState& (0+255),b
 34222  00EF1C                     
 34223                           ; BSR set to: 1
 34224                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 34225                           
 34226                           ; BSR set to: 1
 34227  00EF1C  5149               	movf	_USBMSDInHandle& (0+255),w,b
 34228  00EF1E  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34229  00EF20  B4D8               	btfsc	status,2,c
 34230  00EF22  D006               	goto	l688
 34231                           
 34232                           ; BSR set to: 1
 34233  00EF24  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 34234  00EF28  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34235  00EF2C  BEDF               	btfsc	indf2,7,c
 34236  00EF2E  D0AF               	goto	l684
 34237  00EF30                     l688:
 34238                           
 34239                           ; BSR set to: 1
 34240                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 34241                           
 34242                           ; BSR set to: 1
 34243  00EF30  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 34244  00EF34  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 34245  00EF38  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 34246  00EF3C  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 34247  00EF40  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 34248  00EF44  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 34249  00EF48  0E00               	movlw	0
 34250  00EF4A  0100               	movlb	0	; () banked
 34251  00EF4C  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 34252  00EF4E  0E06               	movlw	6
 34253  00EF50  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 34254  00EF52  EE22  F095         	lfsr	2,_LUN+12
 34255  00EF56  D801               	call	u11518
 34256  00EF58  D00A               	goto	u11519
 34257  00EF5A                     u11518:
 34258  00EF5A  0005               	push	
 34259  00EF5C  6EFA               	movwf	pclath,c
 34260  00EF5E  50DE               	movf	postinc2,w,c
 34261  00EF60  6EFD               	movwf	tosl,c
 34262  00EF62  50DE               	movf	postinc2,w,c
 34263  00EF64  6EFE               	movwf	tosh,c
 34264  00EF66  50DE               	movf	postinc2,w,c
 34265  00EF68  6EFF               	movwf	tosu,c
 34266  00EF6A  50FA               	movf	pclath,w,c
 34267  00EF6C  0012               	return		;indir
 34268  00EF6E                     u11519:
 34269  00EF6E  06E8               	decf	wreg,f,c
 34270  00EF70  B4D8               	btfsc	status,2,c
 34271  00EF72  D01B               	goto	l691
 34272                           
 34273                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 34274  00EF74  0E64               	movlw	100
 34275  00EF76  0101               	movlb	1	; () banked
 34276  00EF78  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 34277  00EF7A  D002               	goto	l690
 34278                           
 34279                           ; BSR set to: 1
 34280                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 34281  00EF7C  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 34282                           
 34283                           ;usb_device_msd.c: 1088: break;
 34284  00EF7E  D087               	goto	l684
 34285  00EF80                     l690:
 34286                           
 34287                           ; BSR set to: 1
 34288                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 34289                           
 34290                           ; BSR set to: 1
 34291  00EF80  0E02               	movlw	2
 34292  00EF82  010D               	movlb	13	; () banked
 34293  00EF84  6F8C               	movwf	140,b	;volatile
 34294                           
 34295                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 34296  00EF86  0101               	movlb	1	; () banked
 34297  00EF88  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34298  00EF8A  0BF0               	andlw	-16
 34299  00EF8C  0903               	iorlw	3
 34300  00EF8E  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34301                           
 34302                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 34303  00EF90  0E00               	movlw	0
 34304  00EF92  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34305                           
 34306                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 34307  00EF94  0E00               	movlw	0
 34308  00EF96  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34309                           
 34310                           ; BSR set to: 1
 34311                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 34312  00EF98  0E01               	movlw	1
 34313  00EF9A  0100               	movlb	0	; () banked
 34314  00EF9C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34315  00EF9E  0E02               	movlw	2
 34316  00EFA0  EC7E  F086         	call	_USBStallEndpoint
 34317  00EFA4  D05F               	goto	l13073
 34318  00EFA6                     L51:
 34319  00EFA6  6F61               	movwf	_MSDReadState& (0+255),b
 34320                           
 34321                           ;usb_device_msd.c: 1109: break;
 34322  00EFA8  D072               	goto	l684
 34323  00EFAA                     l691:
 34324                           
 34325                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 34326                           
 34327                           ; BSR set to: 1
 34328                           
 34329                           ; BSR set to: 1
 34330  00EFAA  0E01               	movlw	1
 34331  00EFAC  0101               	movlb	1	; () banked
 34332  00EFAE  272B               	addwf	_LBA& (0+255),f,b
 34333  00EFB0  0E00               	movlw	0
 34334  00EFB2  232C               	addwfc	(_LBA+1)& (0+255),f,b
 34335  00EFB4  232D               	addwfc	(_LBA+2)& (0+255),f,b
 34336  00EFB6  232E               	addwfc	(_LBA+3)& (0+255),f,b
 34337                           
 34338                           ; BSR set to: 1
 34339                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 34340  00EFB8  0E00               	movlw	0
 34341  00EFBA  010D               	movlb	13	; () banked
 34342  00EFBC  6F88               	movwf	136,b	;volatile
 34343  00EFBE  0E02               	movlw	2
 34344  00EFC0  6F89               	movwf	137,b	;volatile
 34345  00EFC2  0E00               	movlw	0
 34346  00EFC4  6F8A               	movwf	138,b	;volatile
 34347  00EFC6  0E00               	movlw	0
 34348  00EFC8  6F8B               	movwf	139,b	;volatile
 34349                           
 34350                           ; BSR set to: 13
 34351                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 34352  00EFCA  0E00               	movlw	0
 34353  00EFCC  0101               	movlb	1	; () banked
 34354  00EFCE  6F4D               	movwf	_ptrNextData& (0+255),b
 34355  00EFD0  0E06               	movlw	6
 34356  00EFD2  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 34357                           
 34358                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 34359  00EFD4  0E03               	movlw	3
 34360  00EFD6  6F61               	movwf	_MSDReadState& (0+255),b
 34361  00EFD8                     
 34362                           ; BSR set to: 1
 34363                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 34364                           
 34365                           ; BSR set to: 1
 34366  00EFD8  010D               	movlb	13	; () banked
 34367  00EFDA  5188               	movf	136,w,b	;volatile
 34368  00EFDC  1189               	iorwf	137,w,b	;volatile
 34369  00EFDE  118A               	iorwf	138,w,b	;volatile
 34370  00EFE0  118B               	iorwf	139,w,b	;volatile
 34371  00EFE2  A4D8               	btfss	status,2,c
 34372  00EFE4  D002               	goto	l693
 34373                           
 34374                           ; BSR set to: 13
 34375                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 34376  00EFE6  0E01               	movlw	1
 34377  00EFE8  D03E               	goto	L53
 34378  00EFEA                     l693:
 34379                           
 34380                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 34381                           
 34382                           ; BSR set to: 1
 34383  00EFEA  0E04               	movlw	4
 34384  00EFEC  0101               	movlb	1	; () banked
 34385  00EFEE  6F61               	movwf	_MSDReadState& (0+255),b
 34386  00EFF0                     
 34387                           ; BSR set to: 1
 34388                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 34389                           
 34390                           ; BSR set to: 1
 34391  00EFF0  5149               	movf	_USBMSDInHandle& (0+255),w,b
 34392  00EFF2  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34393  00EFF4  B4D8               	btfsc	status,2,c
 34394  00EFF6  D006               	goto	l695
 34395                           
 34396                           ; BSR set to: 1
 34397  00EFF8  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 34398  00EFFC  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34399  00F000  BEDF               	btfsc	indf2,7,c
 34400  00F002  D045               	goto	l684
 34401  00F004                     l695:
 34402                           
 34403                           ; BSR set to: 1
 34404                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 34405                           
 34406                           ; BSR set to: 1
 34407  00F004  0E01               	movlw	1
 34408  00F006  0100               	movlb	0	; () banked
 34409  00F008  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34410  00F00A  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 34411  00F00E  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 34412  00F012  0E40               	movlw	64
 34413  00F014  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34414  00F016  0E02               	movlw	2
 34415  00F018  EC03  F087         	call	_USBTransferOnePacket
 34416  00F01C  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34417  00F020  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34418                           
 34419                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 34420  00F024  0E03               	movlw	3
 34421  00F026  0101               	movlb	1	; () banked
 34422  00F028  6F61               	movwf	_MSDReadState& (0+255),b
 34423                           
 34424                           ; BSR set to: 1
 34425                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 34426  00F02A  0E40               	movlw	64
 34427  00F02C  0102               	movlb	2	; () banked
 34428  00F02E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 34429  00F030  0E00               	movlw	0
 34430  00F032  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 34431  00F034  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 34432  00F036  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 34433                           
 34434                           ; BSR set to: 2
 34435                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 34436  00F038  0E40               	movlw	64
 34437  00F03A  010D               	movlb	13	; () banked
 34438  00F03C  5F88               	subwf	136,f,b	;volatile
 34439  00F03E  0E00               	movlw	0
 34440  00F040  5B89               	subwfb	137,f,b	;volatile
 34441  00F042  5B8A               	subwfb	138,f,b	;volatile
 34442  00F044  5B8B               	subwfb	139,f,b	;volatile
 34443                           
 34444                           ; BSR set to: 13
 34445                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 34446  00F046  0E40               	movlw	64
 34447  00F048  0101               	movlb	1	; () banked
 34448  00F04A  274D               	addwf	_ptrNextData& (0+255),f,b
 34449  00F04C  0E00               	movlw	0
 34450  00F04E  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 34451                           
 34452                           ;usb_device_msd.c: 1149: break;
 34453  00F050  D01E               	goto	l684
 34454  00F052                     
 34455                           ; BSR set to: 1
 34456                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 34457                           
 34458                           ; BSR set to: 1
 34459  00F052  0E02               	movlw	2
 34460  00F054  010D               	movlb	13	; () banked
 34461  00F056  6F8C               	movwf	140,b	;volatile
 34462                           
 34463                           ; BSR set to: 13
 34464                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 34465  00F058  0E01               	movlw	1
 34466  00F05A  0100               	movlb	0	; () banked
 34467  00F05C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34468  00F05E  0E02               	movlw	2
 34469  00F060  EC7E  F086         	call	_USBStallEndpoint
 34470  00F064                     l13073:
 34471                           
 34472                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 34473  00F064  0E00               	movlw	0
 34474  00F066                     L53:
 34475  00F066  0101               	movlb	1	; () banked
 34476  00F068  D79E               	goto	L51
 34477  00F06A                     l681:
 34478                           
 34479                           ; BSR set to: 1
 34480  00F06A  0101               	movlb	1	; () banked
 34481  00F06C  5161               	movf	_MSDReadState& (0+255),w,b
 34482                           
 34483                           ; Switch size 1, requested type "space"
 34484                           ; Number of cases is 5, Range of values is 0 to 4
 34485                           ; switch strategies available:
 34486                           ; Name         Instructions Cycles
 34487                           ; simple_byte           16     9 (average)
 34488                           ;	Chosen strategy is simple_byte
 34489  00F06E  0A00               	xorlw	0	; case 0
 34490  00F070  B4D8               	btfsc	status,2,c
 34491  00F072  D71C               	goto	l682
 34492  00F074  0A01               	xorlw	1	; case 1
 34493  00F076  B4D8               	btfsc	status,2,c
 34494  00F078  D746               	goto	l685
 34495  00F07A  0A03               	xorlw	3	; case 2
 34496  00F07C  B4D8               	btfsc	status,2,c
 34497  00F07E  D74E               	goto	l687
 34498  00F080  0A01               	xorlw	1	; case 3
 34499  00F082  B4D8               	btfsc	status,2,c
 34500  00F084  D7A9               	goto	l692
 34501  00F086  0A07               	xorlw	7	; case 4
 34502  00F088  B4D8               	btfsc	status,2,c
 34503  00F08A  D7B2               	goto	l694
 34504  00F08C  D7E2               	goto	l696
 34505  00F08E                     l684:
 34506                           
 34507                           ;usb_device_msd.c: 1161: return MSDReadState;
 34508                           
 34509                           ; BSR set to: 1
 34510  00F08E  0101               	movlb	1	; () banked
 34511  00F090  5161               	movf	_MSDReadState& (0+255),w,b
 34512  00F092  0012               	return	
 34513  00F094                     __end_of_MSDReadHandler:
 34514                           	opt stack 0
 34515                           tosu	equ	0xFFF
 34516                           tosh	equ	0xFFE
 34517                           tosl	equ	0xFFD
 34518                           pclath	equ	0xFFA
 34519                           tblptru	equ	0xFF8
 34520                           tblptrh	equ	0xFF7
 34521                           tblptrl	equ	0xFF6
 34522                           tablat	equ	0xFF5
 34523                           prodh	equ	0xFF4
 34524                           prodl	equ	0xFF3
 34525                           intcon	equ	0xFF2
 34526                           postinc0	equ	0xFEE
 34527                           wreg	equ	0xFE8
 34528                           indf1	equ	0xFE7
 34529                           postinc1	equ	0xFE6
 34530                           postdec1	equ	0xFE5
 34531                           plusw1	equ	0xFE3
 34532                           fsr1h	equ	0xFE2
 34533                           fsr1l	equ	0xFE1
 34534                           indf2	equ	0xFDF
 34535                           postinc2	equ	0xFDE
 34536                           postdec2	equ	0xFDD
 34537                           plusw2	equ	0xFDB
 34538                           fsr2h	equ	0xFDA
 34539                           fsr2l	equ	0xFD9
 34540                           status	equ	0xFD8
 34541                           
 34542 ;; *************** function _MSDCheckForErrorCases *****************
 34543 ;; Defined at:
 34544 ;;		line 1434 in file "usb_device_msd.c"
 34545 ;; Parameters:    Size  Location     Type
 34546 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 34547 ;; Auto vars:     Size  Location     Type
 34548 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 34549 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 34550 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 34551 ;; Return value:  Size  Location     Type
 34552 ;;                  1    wreg      unsigned char 
 34553 ;; Registers used:
 34554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34555 ;; Tracked objects:
 34556 ;;		On entry : 0/0
 34557 ;;		On exit  : 0/0
 34558 ;;		Unchanged: 0/0
 34559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34561 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34563 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34564 ;;Total ram usage:        7 bytes
 34565 ;; Hardware stack levels used:    1
 34566 ;; Hardware stack levels required when called:   12
 34567 ;; This function calls:
 34568 ;;		_MSDErrorHandler
 34569 ;; This function is called by:
 34570 ;;		_MSDProcessCommandMediaPresent
 34571 ;;		_MSDReadHandler
 34572 ;;		_MSDWriteHandler
 34573 ;; This function uses a non-reentrant model
 34574 ;;
 34575                           
 34576                           	psect	text137
 34577  0108BC                     __ptext137:
 34578                           	opt stack 0
 34579  0108BC                     _MSDCheckForErrorCases:
 34580                           	opt stack 13
 34581                           
 34582                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 34583                           
 34584                           ; BSR set to: 1
 34585                           ;incstack = 0
 34586  0108BC  0100               	movlb	0	; () banked
 34587  0108BE  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34588  0108C0  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34589  0108C2  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34590  0108C4  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34591  0108C6  A4D8               	btfss	status,2,c
 34592  0108C8  D002               	goto	l726
 34593                           
 34594                           ; BSR set to: 0
 34595                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 34596  0108CA  0E01               	movlw	1
 34597  0108CC  D001               	goto	L54
 34598  0108CE                     l726:
 34599                           
 34600                           ; BSR set to: 0
 34601                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 34602                           
 34603                           ; BSR set to: 0
 34604  0108CE  0E00               	movlw	0
 34605  0108D0                     L54:
 34606  0108D0  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 34607                           
 34608                           ; BSR set to: 0
 34609                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 34610                           
 34611                           ; BSR set to: 0
 34612  0108D2  0101               	movlb	1	; () banked
 34613  0108D4  055C               	decf	_MSDHostNoData& (0+255),w,b
 34614  0108D6  A4D8               	btfss	status,2,c
 34615  0108D8  D006               	goto	l728
 34616                           
 34617                           ; BSR set to: 1
 34618  0108DA  0100               	movlb	0	; () banked
 34619  0108DC  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34620  0108DE  A4D8               	btfss	status,2,c
 34621  0108E0  D002               	goto	l728
 34622                           
 34623                           ; BSR set to: 0
 34624                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 34625  0108E2  0E00               	movlw	0
 34626                           
 34627                           ; BSR set to: 0
 34628  0108E4  0012               	return	
 34629  0108E6                     l728:
 34630                           
 34631                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 34632                           
 34633                           ; BSR set to: 0
 34634  0108E6  0100               	movlb	0	; () banked
 34635  0108E8  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34636  0108EA  0102               	movlb	2	; () banked
 34637  0108EC  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 34638  0108EE  E120               	bnz	l12627
 34639  0108F0  0100               	movlb	0	; () banked
 34640  0108F2  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34641  0108F4  0102               	movlb	2	; () banked
 34642  0108F6  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 34643  0108F8  E11B               	bnz	l12627
 34644  0108FA  0100               	movlb	0	; () banked
 34645  0108FC  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34646  0108FE  0102               	movlb	2	; () banked
 34647  010900  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 34648  010902  E116               	bnz	l12627
 34649  010904  0100               	movlb	0	; () banked
 34650  010906  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34651  010908  0102               	movlb	2	; () banked
 34652  01090A  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 34653  01090C  A4D8               	btfss	status,2,c
 34654  01090E  D010               	goto	l734
 34655                           
 34656                           ; BSR set to: 2
 34657                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 34658  010910  0101               	movlb	1	; () banked
 34659  010912  0563               	decf	_MSD_State& (0+255),w,b
 34660  010914  A4D8               	btfss	status,2,c
 34661  010916  D006               	goto	l731
 34662                           
 34663                           ; BSR set to: 1
 34664                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 34665  010918  0E2A               	movlw	42
 34666  01091A  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34667  01091C  B4D8               	btfsc	status,2,c
 34668  01091E  D008               	goto	l734
 34669                           
 34670                           ; BSR set to: 1
 34671                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 34672  010920  0E00               	movlw	0
 34673                           
 34674                           ; BSR set to: 1
 34675  010922  0012               	return	
 34676  010924                     l731:
 34677                           
 34678                           ; BSR set to: 1
 34679                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 34680                           
 34681                           ; BSR set to: 1
 34682  010924  0E2A               	movlw	42
 34683  010926  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34684  010928  A4D8               	btfss	status,2,c
 34685  01092A  D002               	goto	l734
 34686                           
 34687                           ; BSR set to: 1
 34688                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 34689  01092C  0E00               	movlw	0
 34690                           
 34691                           ; BSR set to: 1
 34692  01092E  0012               	return	
 34693  010930                     l734:
 34694  010930                     l12627:
 34695                           
 34696                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 34697  010930  0102               	movlb	2	; () banked
 34698  010932  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34699  010934  0100               	movlb	0	; () banked
 34700  010936  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34701  010938  0102               	movlb	2	; () banked
 34702  01093A  5109               	movf	(_gblCBW+9)& (0+255),w,b
 34703  01093C  0100               	movlb	0	; () banked
 34704  01093E  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34705  010940  0102               	movlb	2	; () banked
 34706  010942  510A               	movf	(_gblCBW+10)& (0+255),w,b
 34707  010944  0100               	movlb	0	; () banked
 34708  010946  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34709  010948  0102               	movlb	2	; () banked
 34710  01094A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 34711  01094C  0100               	movlb	0	; () banked
 34712  01094E  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34713  010950  B0D8               	btfsc	status,0,c
 34714  010952  D002               	goto	l735
 34715                           
 34716                           ; BSR set to: 0
 34717                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 34718  010954  0E01               	movlw	1
 34719  010956  D001               	goto	L55
 34720  010958                     l735:
 34721                           
 34722                           ; BSR set to: 0
 34723                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 34724                           
 34725                           ; BSR set to: 0
 34726  010958  0E00               	movlw	0
 34727  01095A                     L55:
 34728  01095A  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 34729                           
 34730                           ; BSR set to: 0
 34731                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 34732                           
 34733                           ; BSR set to: 0
 34734  01095C  0E02               	movlw	2
 34735  01095E  0101               	movlb	1	; () banked
 34736  010960  1963               	xorwf	_MSD_State& (0+255),w,b
 34737  010962  A4D8               	btfss	status,2,c
 34738  010964  D017               	goto	l737
 34739                           
 34740                           ; BSR set to: 1
 34741                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 34742  010966  0E2A               	movlw	42
 34743  010968  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34744  01096A  B4D8               	btfsc	status,2,c
 34745  01096C  D006               	goto	l738
 34746                           
 34747                           ; BSR set to: 1
 34748  01096E  0100               	movlb	0	; () banked
 34749  010970  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34750  010972  A4D8               	btfss	status,2,c
 34751  010974  D002               	goto	l738
 34752  010976                     u10990:
 34753                           
 34754                           ; BSR set to: 0
 34755                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 34756  010976  0E05               	movlw	5
 34757  010978  D025               	goto	L60
 34758  01097A                     l738:
 34759                           
 34760                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 34761                           
 34762                           ; BSR set to: 0
 34763  01097A  0101               	movlb	1	; () banked
 34764  01097C  055C               	decf	_MSDHostNoData& (0+255),w,b
 34765  01097E  B4D8               	btfsc	status,2,c
 34766  010980  D014               	goto	u11040
 34767                           
 34768                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 34769                           
 34770                           ; BSR set to: 0
 34771                           
 34772                           ; BSR set to: 1
 34773                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 34774  010982  0100               	movlb	0	; () banked
 34775  010984  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34776  010986  B4D8               	btfsc	status,2,c
 34777  010988  D003               	goto	u11020
 34778                           
 34779                           ; BSR set to: 0
 34780                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 34781                           
 34782                           ; BSR set to: 0
 34783                           
 34784                           ; BSR set to: 0
 34785                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 34786  01098A  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 34787  01098C  A4D8               	btfss	status,2,c
 34788  01098E  D7F3               	goto	u10990
 34789  010990                     u11020:
 34790                           
 34791                           ; BSR set to: 0
 34792                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 34793  010990  0E04               	movlw	4
 34794  010992  D018               	goto	L60
 34795  010994                     l737:
 34796                           
 34797                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 34798                           
 34799                           ; BSR set to: 0
 34800  010994  0E2A               	movlw	42
 34801  010996  0101               	movlb	1	; () banked
 34802  010998  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34803  01099A  A4D8               	btfss	status,2,c
 34804  01099C  D002               	goto	l747
 34805                           
 34806                           ; BSR set to: 1
 34807                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 34808  01099E  0E03               	movlw	3
 34809  0109A0  D005               	goto	L59
 34810  0109A2                     l747:
 34811                           
 34812                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 34813                           
 34814                           ; BSR set to: 0
 34815  0109A2  0101               	movlb	1	; () banked
 34816  0109A4  055C               	decf	_MSDHostNoData& (0+255),w,b
 34817  0109A6  A4D8               	btfss	status,2,c
 34818  0109A8  D003               	goto	l749
 34819  0109AA                     u11040:
 34820                           
 34821                           ; BSR set to: 1
 34822                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 34823  0109AA  0E01               	movlw	1
 34824  0109AC                     L59:
 34825  0109AC  0100               	movlb	0	; () banked
 34826  0109AE  D00A               	goto	L60
 34827  0109B0                     l749:
 34828                           
 34829                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 34830                           
 34831                           ; BSR set to: 0
 34832  0109B0  0100               	movlb	0	; () banked
 34833  0109B2  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34834  0109B4  B4D8               	btfsc	status,2,c
 34835  0109B6  D003               	goto	u11060
 34836                           
 34837                           ; BSR set to: 0
 34838                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 34839                           
 34840                           ; BSR set to: 0
 34841                           
 34842                           ; BSR set to: 0
 34843                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 34844  0109B8  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 34845  0109BA  A4D8               	btfss	status,2,c
 34846  0109BC  D002               	goto	l753
 34847  0109BE                     u11060:
 34848                           
 34849                           ; BSR set to: 0
 34850                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 34851  0109BE  0E02               	movlw	2
 34852  0109C0  D001               	goto	L60
 34853  0109C2                     l753:
 34854                           
 34855                           ; BSR set to: 0
 34856                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 34857                           
 34858                           ; BSR set to: 0
 34859  0109C2  0E03               	movlw	3
 34860  0109C4                     L60:
 34861  0109C4  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 34862                           
 34863                           ; BSR set to: 0
 34864                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 34865                           
 34866                           ; BSR set to: 0
 34867                           
 34868                           ; BSR set to: 0
 34869                           
 34870                           ; BSR set to: 0
 34871                           
 34872                           ; BSR set to: 0
 34873                           
 34874                           ; BSR set to: 0
 34875  0109C6  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 34876  0109C8  EC44  F083         	call	_MSDErrorHandler
 34877                           
 34878                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 34879  0109CC  0100               	movlb	0	; () banked
 34880  0109CE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 34881  0109D0  0012               	return	
 34882  0109D2                     __end_of_MSDCheckForErrorCases:
 34883                           	opt stack 0
 34884                           tosu	equ	0xFFF
 34885                           tosh	equ	0xFFE
 34886                           tosl	equ	0xFFD
 34887                           pclath	equ	0xFFA
 34888                           tblptru	equ	0xFF8
 34889                           tblptrh	equ	0xFF7
 34890                           tblptrl	equ	0xFF6
 34891                           tablat	equ	0xFF5
 34892                           prodh	equ	0xFF4
 34893                           prodl	equ	0xFF3
 34894                           intcon	equ	0xFF2
 34895                           postinc0	equ	0xFEE
 34896                           wreg	equ	0xFE8
 34897                           indf1	equ	0xFE7
 34898                           postinc1	equ	0xFE6
 34899                           postdec1	equ	0xFE5
 34900                           plusw1	equ	0xFE3
 34901                           fsr1h	equ	0xFE2
 34902                           fsr1l	equ	0xFE1
 34903                           indf2	equ	0xFDF
 34904                           postinc2	equ	0xFDE
 34905                           postdec2	equ	0xFDD
 34906                           plusw2	equ	0xFDB
 34907                           fsr2h	equ	0xFDA
 34908                           fsr2l	equ	0xFD9
 34909                           status	equ	0xFD8
 34910                           
 34911 ;; *************** function _MSDErrorHandler *****************
 34912 ;; Defined at:
 34913 ;;		line 1577 in file "usb_device_msd.c"
 34914 ;; Parameters:    Size  Location     Type
 34915 ;;  ErrorCase       1    wreg     unsigned char 
 34916 ;; Auto vars:     Size  Location     Type
 34917 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 34918 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 34919 ;; Return value:  Size  Location     Type
 34920 ;;                  1    wreg      void 
 34921 ;; Registers used:
 34922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34923 ;; Tracked objects:
 34924 ;;		On entry : 0/0
 34925 ;;		On exit  : 0/0
 34926 ;;		Unchanged: 0/0
 34927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34932 ;;Total ram usage:        2 bytes
 34933 ;; Hardware stack levels used:    1
 34934 ;; Hardware stack levels required when called:   11
 34935 ;; This function calls:
 34936 ;;		_ResetSenseData
 34937 ;;		_USBStallEndpoint
 34938 ;; This function is called by:
 34939 ;;		_MSDProcessCommandMediaAbsent
 34940 ;;		_MSDProcessCommandMediaPresent
 34941 ;;		_MSDCheckForErrorCases
 34942 ;; This function uses a non-reentrant model
 34943 ;;
 34944                           
 34945                           	psect	text138
 34946  010688                     __ptext138:
 34947                           	opt stack 0
 34948  010688                     _MSDErrorHandler:
 34949                           	opt stack 13
 34950                           
 34951                           ;incstack = 0
 34952                           ;MSDErrorHandler@ErrorCase stored from wreg
 34953  010688  0100               	movlb	0	; () banked
 34954  01068A  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 34955                           
 34956                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 34957  01068C  0101               	movlb	1	; () banked
 34958  01068E  5149               	movf	_USBMSDInHandle& (0+255),w,b
 34959  010690  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34960  010692  B4D8               	btfsc	status,2,c
 34961  010694  D006               	goto	u10640
 34962                           
 34963                           ; BSR set to: 1
 34964  010696  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 34965  01069A  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34966  01069E  BEDF               	btfsc	indf2,7,c
 34967  0106A0  0012               	return	
 34968  0106A2                     u10640:
 34969                           
 34970                           ; BSR set to: 1
 34971                           
 34972                           ; BSR set to: 1
 34973  0106A2  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 34974  0106A4  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34975  0106A6  B4D8               	btfsc	status,2,c
 34976  0106A8  D006               	goto	l757
 34977                           
 34978                           ; BSR set to: 1
 34979  0106AA  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34980  0106AE  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34981  0106B2  BEDF               	btfsc	indf2,7,c
 34982  0106B4  0012               	return	
 34983  0106B6                     l757:
 34984                           
 34985                           ; BSR set to: 1
 34986                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 34987  0106B6  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 34988                           
 34989                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 34990  0106BA  6962               	setf	_MSDCommandState& (0+255),b
 34991                           
 34992                           ; BSR set to: 1
 34993                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 34994  0106BC  0E00               	movlw	0
 34995  0106BE  6F61               	movwf	_MSDReadState& (0+255),b
 34996                           
 34997                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 34998  0106C0  0E00               	movlw	0
 34999  0106C2  6F60               	movwf	_MSDWriteState& (0+255),b
 35000                           
 35001                           ; BSR set to: 1
 35002                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35003  0106C4  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 35004  0106C8  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 35005  0106CC  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 35006  0106D0  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 35007                           
 35008                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35009  0106D4  0E01               	movlw	1
 35010  0106D6  010D               	movlb	13	; () banked
 35011  0106D8  6F8C               	movwf	140,b	;volatile
 35012                           
 35013                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35014  0106DA  0E03               	movlw	3
 35015  0106DC  0101               	movlb	1	; () banked
 35016  0106DE  6F63               	movwf	_MSD_State& (0+255),b
 35017                           
 35018                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35019  0106E0  D04B               	goto	l763
 35020  0106E2                     
 35021                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35022                           
 35023                           ; BSR set to: 1
 35024  0106E2  0E02               	movlw	2
 35025  0106E4  010D               	movlb	13	; () banked
 35026  0106E6  6F8C               	movwf	140,b	;volatile
 35027                           
 35028                           ;usb_device_msd.c: 1607: break;
 35029  0106E8  0012               	return	
 35030  0106EA                     
 35031                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35032                           
 35033                           ; BSR set to: 13
 35034  0106EA  0E01               	movlw	1
 35035  0106EC  0100               	movlb	0	; () banked
 35036  0106EE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35037  0106F0  0E02               	movlw	2
 35038  0106F2  EC7E  F086         	call	_USBStallEndpoint
 35039                           
 35040                           ;usb_device_msd.c: 1611: break;
 35041  0106F6  0012               	return	
 35042  0106F8                     
 35043                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35044  0106F8  0E02               	movlw	2
 35045  0106FA  010D               	movlb	13	; () banked
 35046  0106FC  6F8C               	movwf	140,b	;volatile
 35047                           
 35048                           ; BSR set to: 13
 35049                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35050  0106FE  0E01               	movlw	1
 35051  010700  0100               	movlb	0	; () banked
 35052  010702  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35053  010704  0E02               	movlw	2
 35054  010706  EC7E  F086         	call	_USBStallEndpoint
 35055                           
 35056                           ;usb_device_msd.c: 1616: break;
 35057  01070A  0012               	return	
 35058  01070C                     
 35059                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 35060  01070C  0E00               	movlw	0
 35061  01070E  0100               	movlb	0	; () banked
 35062  010710  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35063  010712  0E02               	movlw	2
 35064  010714  EC7E  F086         	call	_USBStallEndpoint
 35065                           
 35066                           ;usb_device_msd.c: 1620: break;
 35067  010718  0012               	return	
 35068  01071A                     
 35069                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 35070  01071A  0E02               	movlw	2
 35071  01071C  010D               	movlb	13	; () banked
 35072  01071E  6F8C               	movwf	140,b	;volatile
 35073                           
 35074                           ; BSR set to: 13
 35075                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 35076  010720  0E00               	movlw	0
 35077  010722  0100               	movlb	0	; () banked
 35078  010724  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35079  010726  0E02               	movlw	2
 35080  010728  EC7E  F086         	call	_USBStallEndpoint
 35081                           
 35082                           ;usb_device_msd.c: 1625: break;
 35083  01072C  0012               	return	
 35084  01072E                     
 35085                           ;usb_device_msd.c: 1628: ResetSenseData();
 35086  01072E  EC78  F0A1         	call	_ResetSenseData	;wreg free
 35087                           
 35088                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 35089  010732  0101               	movlb	1	; () banked
 35090  010734  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35091  010736  0BF0               	andlw	-16
 35092  010738  0905               	iorlw	5
 35093  01073A  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35094                           
 35095                           ; BSR set to: 1
 35096                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 35097  01073C  0E20               	movlw	32
 35098  01073E  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35099                           
 35100                           ; BSR set to: 1
 35101                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 35102  010740  0E00               	movlw	0
 35103  010742  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35104                           
 35105                           ; BSR set to: 1
 35106                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 35107  010744  0E02               	movlw	2
 35108  010746  0100               	movlb	0	; () banked
 35109  010748  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 35110  01074A  A4D8               	btfss	status,2,c
 35111  01074C  D00E               	goto	l771
 35112                           
 35113                           ; BSR set to: 0
 35114  01074E  0102               	movlb	2	; () banked
 35115  010750  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35116  010752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35117  010754  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35118  010756  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35119  010758  B4D8               	btfsc	status,2,c
 35120  01075A  D007               	goto	l771
 35121                           
 35122                           ; BSR set to: 2
 35123                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 35124  01075C  0E00               	movlw	0
 35125  01075E  0100               	movlb	0	; () banked
 35126  010760  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35127  010762  0E02               	movlw	2
 35128  010764  EC7E  F086         	call	_USBStallEndpoint
 35129                           
 35130                           ;usb_device_msd.c: 1636: }
 35131  010768  0012               	return	
 35132  01076A                     l771:
 35133                           
 35134                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 35135  01076A  0E01               	movlw	1
 35136  01076C  0100               	movlb	0	; () banked
 35137  01076E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35138  010770  0E02               	movlw	2
 35139  010772  EC7E  F086         	call	_USBStallEndpoint
 35140                           
 35141                           ;usb_device_msd.c: 1644: }
 35142                           
 35143                           ;usb_device_msd.c: 1643: break;
 35144                           
 35145                           ;usb_device_msd.c: 1642: default:
 35146                           
 35147                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 35148  010776  0012               	return	
 35149  010778                     l763:
 35150  010778  0100               	movlb	0	; () banked
 35151  01077A  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 35152                           
 35153                           ; Switch size 1, requested type "space"
 35154                           ; Number of cases is 6, Range of values is 1 to 127
 35155                           ; switch strategies available:
 35156                           ; Name         Instructions Cycles
 35157                           ; simple_byte           19    10 (average)
 35158                           ;	Chosen strategy is simple_byte
 35159  01077C  0A01               	xorlw	1	; case 1
 35160  01077E  B4D8               	btfsc	status,2,c
 35161  010780  D7B0               	goto	l764
 35162  010782  0A03               	xorlw	3	; case 2
 35163  010784  B4D8               	btfsc	status,2,c
 35164  010786  D7B1               	goto	l766
 35165  010788  0A01               	xorlw	1	; case 3
 35166  01078A  B4D8               	btfsc	status,2,c
 35167  01078C  D7B5               	goto	l767
 35168  01078E  0A07               	xorlw	7	; case 4
 35169  010790  B4D8               	btfsc	status,2,c
 35170  010792  D7BC               	goto	l768
 35171  010794  0A01               	xorlw	1	; case 5
 35172  010796  B4D8               	btfsc	status,2,c
 35173  010798  D7C0               	goto	l769
 35174  01079A  0A7A               	xorlw	122	; case 127
 35175  01079C  A4D8               	btfss	status,2,c
 35176  01079E  0012               	return	
 35177  0107A0  D7C6               	goto	l770
 35178  0107A2                     __end_of_MSDErrorHandler:
 35179                           	opt stack 0
 35180                           tosu	equ	0xFFF
 35181                           tosh	equ	0xFFE
 35182                           tosl	equ	0xFFD
 35183                           pclath	equ	0xFFA
 35184                           tblptru	equ	0xFF8
 35185                           tblptrh	equ	0xFF7
 35186                           tblptrl	equ	0xFF6
 35187                           tablat	equ	0xFF5
 35188                           prodh	equ	0xFF4
 35189                           prodl	equ	0xFF3
 35190                           intcon	equ	0xFF2
 35191                           postinc0	equ	0xFEE
 35192                           wreg	equ	0xFE8
 35193                           indf1	equ	0xFE7
 35194                           postinc1	equ	0xFE6
 35195                           postdec1	equ	0xFE5
 35196                           plusw1	equ	0xFE3
 35197                           fsr1h	equ	0xFE2
 35198                           fsr1l	equ	0xFE1
 35199                           indf2	equ	0xFDF
 35200                           postinc2	equ	0xFDE
 35201                           postdec2	equ	0xFDD
 35202                           plusw2	equ	0xFDB
 35203                           fsr2h	equ	0xFDA
 35204                           fsr2l	equ	0xFD9
 35205                           status	equ	0xFD8
 35206                           
 35207 ;; *************** function _USBStallEndpoint *****************
 35208 ;; Defined at:
 35209 ;;		line 1073 in file "usb_device.c"
 35210 ;; Parameters:    Size  Location     Type
 35211 ;;  ep              1    wreg     unsigned char 
 35212 ;;  dir             1    0[BANK0 ] unsigned char 
 35213 ;; Auto vars:     Size  Location     Type
 35214 ;;  ep              1    5[BANK0 ] unsigned char 
 35215 ;;  p               2    6[BANK0 ] PTR struct __BDT
 35216 ;;		 -> BDT(48), 
 35217 ;; Return value:  Size  Location     Type
 35218 ;;                  1    wreg      void 
 35219 ;; Registers used:
 35220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35221 ;; Tracked objects:
 35222 ;;		On entry : 0/0
 35223 ;;		On exit  : 0/0
 35224 ;;		Unchanged: 0/0
 35225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35226 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35227 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35229 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35230 ;;Total ram usage:        8 bytes
 35231 ;; Hardware stack levels used:    1
 35232 ;; Hardware stack levels required when called:   10
 35233 ;; This function calls:
 35234 ;;		Nothing
 35235 ;; This function is called by:
 35236 ;;		_MSDTasks
 35237 ;;		_MSDReadHandler
 35238 ;;		_MSDWriteHandler
 35239 ;;		_MSDErrorHandler
 35240 ;; This function uses a non-reentrant model
 35241 ;;
 35242                           
 35243                           	psect	text139
 35244  010CFC                     __ptext139:
 35245                           	opt stack 0
 35246  010CFC                     _USBStallEndpoint:
 35247                           	opt stack 18
 35248                           
 35249                           ;incstack = 0
 35250                           ;USBStallEndpoint@ep stored from wreg
 35251  010CFC  0100               	movlb	0	; () banked
 35252  010CFE  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 35253                           
 35254                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 35255  010D00  0100               	movlb	0	; () banked
 35256  010D02  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35257  010D04  A4D8               	btfss	status,2,c
 35258  010D06  D02B               	goto	l192
 35259                           
 35260                           ; BSR set to: 0
 35261                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 35262  010D08  EE20 F001          	lfsr	2,1
 35263  010D0C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 35264  010D0E  26D9               	addwf	fsr2l,f,c
 35265  010D10  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35266  010D12  22DA               	addwfc	fsr2h,f,c
 35267  010D14  0E08               	movlw	8
 35268  010D16  6EDF               	movwf	indf2,c
 35269                           
 35270                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35271  010D18  EE20 F002          	lfsr	2,2
 35272  010D1C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 35273  010D1E  26D9               	addwf	fsr2l,f,c
 35274  010D20  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35275  010D22  22DA               	addwfc	fsr2h,f,c
 35276  010D24  0E30               	movlw	48
 35277  010D26  6EDE               	movwf	postinc2,c
 35278  010D28  0E0D               	movlw	13
 35279  010D2A  6EDD               	movwf	postdec2,c
 35280                           
 35281                           ; BSR set to: 0
 35282                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 35283  010D2C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35284  010D30  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35285  010D34  0E0C               	movlw	12
 35286  010D36  6EDF               	movwf	indf2,c
 35287                           
 35288                           ; BSR set to: 0
 35289                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35290  010D38  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35291  010D3C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35292  010D40  0E00               	movlw	0
 35293  010D42  8EDB               	bsf	plusw2,7,c
 35294                           
 35295                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 35296  010D44  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 35297  010D48  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35298  010D4C  0E04               	movlw	4
 35299  010D4E  6EDF               	movwf	indf2,c
 35300                           
 35301                           ; BSR set to: 0
 35302                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35303  010D50  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 35304  010D54  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35305  010D58  0E00               	movlw	0
 35306  010D5A  8EDB               	bsf	plusw2,7,c
 35307                           
 35308                           ;usb_device.c: 1089: }
 35309  010D5C  0012               	return	
 35310  010D5E                     l192:
 35311                           
 35312                           ; BSR set to: 0
 35313                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 35314                           
 35315                           ; BSR set to: 0
 35316  010D5E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35317  010D60  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 35318  010D62  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 35319  010D64  90D8               	bcf	status,0,c
 35320  010D66  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35321  010D68  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35322  010D6A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35323  010D6C  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 35324  010D6E  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 35325  010D70  90D8               	bcf	status,0,c
 35326  010D72  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35327  010D74  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35328  010D76  90D8               	bcf	status,0,c
 35329  010D78  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35330  010D7A  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35331  010D7C  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 35332  010D7E  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 35333  010D80  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 35334  010D82  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 35335  010D84  90D8               	bcf	status,0,c
 35336  010D86  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35337  010D88  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35338  010D8A  90D8               	bcf	status,0,c
 35339  010D8C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35340  010D8E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35341  010D90  0E00               	movlw	0
 35342  010D92  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 35343  010D94  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35344  010D96  0E0D               	movlw	13
 35345  010D98  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 35346  010D9A  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35347                           
 35348                           ; BSR set to: 0
 35349                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 35350  010D9C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35351  010DA0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35352  010DA4  0E00               	movlw	0
 35353  010DA6  84DB               	bsf	plusw2,2,c
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 35357  010DA8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35358  010DAC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35359  010DB0  0E00               	movlw	0
 35360  010DB2  8EDB               	bsf	plusw2,7,c
 35361                           
 35362                           ; BSR set to: 0
 35363                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 35364  010DB4  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35365  010DB6  0D04               	mullw	4
 35366  010DB8  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 35367  010DBC  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 35368  010DC0  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35369  010DC2  0D02               	mullw	2
 35370  010DC4  50F3               	movf	prodl,w,c
 35371  010DC6  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 35372  010DC8  50F4               	movf	prodh,w,c
 35373  010DCA  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 35374  010DCC  90D8               	bcf	status,0,c
 35375  010DCE  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35376  010DD0  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35377  010DD2  90D8               	bcf	status,0,c
 35378  010DD4  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35379  010DD6  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35380  010DD8  0E04               	movlw	4
 35381  010DDA  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 35382  010DDC  0E00               	movlw	0
 35383  010DDE  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 35384  010DE0  0E00               	movlw	0
 35385  010DE2  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 35386  010DE4  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35387  010DE6  0E0D               	movlw	13
 35388  010DE8  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 35389  010DEA  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35390                           
 35391                           ; BSR set to: 0
 35392                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 35393  010DEC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35394  010DF0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35395  010DF4  0E00               	movlw	0
 35396  010DF6  84DB               	bsf	plusw2,2,c
 35397                           
 35398                           ; BSR set to: 0
 35399                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 35400  010DF8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35401  010DFC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35402  010E00  0E00               	movlw	0
 35403  010E02  8EDB               	bsf	plusw2,7,c
 35404  010E04  0012               	return	
 35405  010E06                     __end_of_USBStallEndpoint:
 35406                           	opt stack 0
 35407                           tosu	equ	0xFFF
 35408                           tosh	equ	0xFFE
 35409                           tosl	equ	0xFFD
 35410                           pclath	equ	0xFFA
 35411                           tblptru	equ	0xFF8
 35412                           tblptrh	equ	0xFF7
 35413                           tblptrl	equ	0xFF6
 35414                           tablat	equ	0xFF5
 35415                           prodh	equ	0xFF4
 35416                           prodl	equ	0xFF3
 35417                           intcon	equ	0xFF2
 35418                           postinc0	equ	0xFEE
 35419                           wreg	equ	0xFE8
 35420                           indf1	equ	0xFE7
 35421                           postinc1	equ	0xFE6
 35422                           postdec1	equ	0xFE5
 35423                           plusw1	equ	0xFE3
 35424                           fsr1h	equ	0xFE2
 35425                           fsr1l	equ	0xFE1
 35426                           indf2	equ	0xFDF
 35427                           postinc2	equ	0xFDE
 35428                           postdec2	equ	0xFDD
 35429                           plusw2	equ	0xFDB
 35430                           fsr2h	equ	0xFDA
 35431                           fsr2l	equ	0xFD9
 35432                           status	equ	0xFD8
 35433                           
 35434 ;; *************** function _ResetSenseData *****************
 35435 ;; Defined at:
 35436 ;;		line 1373 in file "usb_device_msd.c"
 35437 ;; Parameters:    Size  Location     Type
 35438 ;;		None
 35439 ;; Auto vars:     Size  Location     Type
 35440 ;;		None
 35441 ;; Return value:  Size  Location     Type
 35442 ;;                  1    wreg      void 
 35443 ;; Registers used:
 35444 ;;		wreg, status,2
 35445 ;; Tracked objects:
 35446 ;;		On entry : 0/0
 35447 ;;		On exit  : 0/0
 35448 ;;		Unchanged: 0/0
 35449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35454 ;;Total ram usage:        0 bytes
 35455 ;; Hardware stack levels used:    1
 35456 ;; Hardware stack levels required when called:   10
 35457 ;; This function calls:
 35458 ;;		Nothing
 35459 ;; This function is called by:
 35460 ;;		_MSDProcessCommandMediaAbsent
 35461 ;;		_MSDProcessCommandMediaPresent
 35462 ;;		_MSDErrorHandler
 35463 ;; This function uses a non-reentrant model
 35464 ;;
 35465                           
 35466                           	psect	text140
 35467  0142F0                     __ptext140:
 35468                           	opt stack 0
 35469  0142F0                     _ResetSenseData:
 35470                           	opt stack 16
 35471                           
 35472                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 35473                           
 35474                           ; BSR set to: 0
 35475                           ;incstack = 0
 35476  0142F0  0101               	movlb	1	; () banked
 35477  0142F2  9100               	bcf	_gblSenseData& (0+255),0,b
 35478  0142F4  9300               	bcf	_gblSenseData& (0+255),1,b
 35479  0142F6  9500               	bcf	_gblSenseData& (0+255),2,b
 35480  0142F8  9700               	bcf	_gblSenseData& (0+255),3,b
 35481  0142FA  8900               	bsf	_gblSenseData& (0+255),4,b
 35482  0142FC  8B00               	bsf	_gblSenseData& (0+255),5,b
 35483  0142FE  8D00               	bsf	_gblSenseData& (0+255),6,b
 35484                           
 35485                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 35486  014300  9F00               	bcf	_gblSenseData& (0+255),7,b
 35487                           
 35488                           ; BSR set to: 1
 35489                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 35490  014302  0E00               	movlw	0
 35491  014304  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 35492                           
 35493                           ; BSR set to: 1
 35494                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 35495  014306  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 35496  014308  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 35497  01430A  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 35498  01430C  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 35499                           
 35500                           ; BSR set to: 1
 35501                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 35502  01430E  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 35503                           
 35504                           ; BSR set to: 1
 35505                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 35506  014310  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 35507                           
 35508                           ; BSR set to: 1
 35509                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 35510  014312  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 35511                           
 35512                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 35513  014314  0E00               	movlw	0
 35514  014316  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 35515                           
 35516                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 35517  014318  0E00               	movlw	0
 35518  01431A  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 35519                           
 35520                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 35521  01431C  0E00               	movlw	0
 35522  01431E  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 35523                           
 35524                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 35525  014320  0E00               	movlw	0
 35526  014322  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 35527                           
 35528                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 35529  014324  0E0A               	movlw	10
 35530  014326  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 35531                           
 35532                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 35533  014328  0E00               	movlw	0
 35534  01432A  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 35535  01432C  0E00               	movlw	0
 35536  01432E  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 35537  014330  0E00               	movlw	0
 35538  014332  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 35539  014334  0E00               	movlw	0
 35540  014336  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 35541                           
 35542                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 35543  014338  0E00               	movlw	0
 35544  01433A  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35545                           
 35546                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 35547  01433C  0E00               	movlw	0
 35548  01433E  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35549                           
 35550                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 35551  014340  0E00               	movlw	0
 35552  014342  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 35553                           
 35554                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 35555  014344  0E00               	movlw	0
 35556  014346  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 35557                           
 35558                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 35559  014348  0E00               	movlw	0
 35560  01434A  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 35561                           
 35562                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 35563  01434C  0E00               	movlw	0
 35564  01434E  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 35565                           
 35566                           ; BSR set to: 1
 35567  014350  0012               	return		;funcret
 35568  014352                     __end_of_ResetSenseData:
 35569                           	opt stack 0
 35570                           tosu	equ	0xFFF
 35571                           tosh	equ	0xFFE
 35572                           tosl	equ	0xFFD
 35573                           pclath	equ	0xFFA
 35574                           tblptru	equ	0xFF8
 35575                           tblptrh	equ	0xFF7
 35576                           tblptrl	equ	0xFF6
 35577                           tablat	equ	0xFF5
 35578                           prodh	equ	0xFF4
 35579                           prodl	equ	0xFF3
 35580                           intcon	equ	0xFF2
 35581                           postinc0	equ	0xFEE
 35582                           wreg	equ	0xFE8
 35583                           indf1	equ	0xFE7
 35584                           postinc1	equ	0xFE6
 35585                           postdec1	equ	0xFE5
 35586                           plusw1	equ	0xFE3
 35587                           fsr1h	equ	0xFE2
 35588                           fsr1l	equ	0xFE1
 35589                           indf2	equ	0xFDF
 35590                           postinc2	equ	0xFDE
 35591                           postdec2	equ	0xFDD
 35592                           plusw2	equ	0xFDB
 35593                           fsr2h	equ	0xFDA
 35594                           fsr2l	equ	0xFD9
 35595                           status	equ	0xFD8
 35596                           
 35597 ;; *************** function _ExternalFlash_SectorRead *****************
 35598 ;; Defined at:
 35599 ;;		line 40 in file "external_flash.c"
 35600 ;; Parameters:    Size  Location     Type
 35601 ;;  config          2   43[BANK0 ] PTR void 
 35602 ;;		 -> NULL(0), 
 35603 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 35604 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 35605 ;;		 -> msd_buffer(512), 
 35606 ;; Auto vars:     Size  Location     Type
 35607 ;;  page            2   51[BANK0 ] unsigned int 
 35608 ;; Return value:  Size  Location     Type
 35609 ;;                  1    wreg      unsigned char 
 35610 ;; Registers used:
 35611 ;;		wreg, status,2, status,0, cstack
 35612 ;; Tracked objects:
 35613 ;;		On entry : 0/0
 35614 ;;		On exit  : 0/0
 35615 ;;		Unchanged: 0/0
 35616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35617 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35618 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35620 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35621 ;;Total ram usage:       10 bytes
 35622 ;; Hardware stack levels used:    1
 35623 ;; Hardware stack levels required when called:   15
 35624 ;; This function calls:
 35625 ;;		_flash_sector_read
 35626 ;; This function is called by:
 35627 ;;		_MSDReadHandler
 35628 ;; This function uses a non-reentrant model
 35629 ;;
 35630                           
 35631                           	psect	text141
 35632  01521C                     __ptext141:
 35633                           	opt stack 0
 35634  01521C                     _ExternalFlash_SectorRead:
 35635                           	opt stack 10
 35636                           
 35637                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 35638                           
 35639                           ; BSR set to: 1
 35640                           ;incstack = 0
 35641  01521C  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 35642  015220  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 35643                           
 35644                           ;external_flash.c: 45: if(sector_addr >= 8192)
 35645  015224  0100               	movlb	0	; () banked
 35646  015226  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 35647  015228  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 35648  01522A  E104               	bnz	u11090
 35649  01522C  0E20               	movlw	32
 35650  01522E  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 35651  015230  A0D8               	btfss	status,0,c
 35652  015232  D002               	goto	l1677
 35653  015234                     u11090:
 35654                           
 35655                           ; BSR set to: 0
 35656                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 35657  015234  0E00               	movlw	0
 35658                           
 35659                           ; BSR set to: 0
 35660  015236  0012               	return	
 35661  015238                     l1677:
 35662                           
 35663                           ; BSR set to: 0
 35664                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 35665                           
 35666                           ; BSR set to: 0
 35667  015238  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 35668  01523C  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 35669  015240  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 35670  015244  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 35671  015248  ECC0  F0AA         	call	_flash_sector_read	;wreg free
 35672                           
 35673                           ;external_flash.c: 53: return 1;
 35674  01524C  0E01               	movlw	1
 35675  01524E  0012               	return	
 35676  015250                     __end_of_ExternalFlash_SectorRead:
 35677                           	opt stack 0
 35678                           tosu	equ	0xFFF
 35679                           tosh	equ	0xFFE
 35680                           tosl	equ	0xFFD
 35681                           pclath	equ	0xFFA
 35682                           tblptru	equ	0xFF8
 35683                           tblptrh	equ	0xFF7
 35684                           tblptrl	equ	0xFF6
 35685                           tablat	equ	0xFF5
 35686                           prodh	equ	0xFF4
 35687                           prodl	equ	0xFF3
 35688                           intcon	equ	0xFF2
 35689                           postinc0	equ	0xFEE
 35690                           wreg	equ	0xFE8
 35691                           indf1	equ	0xFE7
 35692                           postinc1	equ	0xFE6
 35693                           postdec1	equ	0xFE5
 35694                           plusw1	equ	0xFE3
 35695                           fsr1h	equ	0xFE2
 35696                           fsr1l	equ	0xFE1
 35697                           indf2	equ	0xFDF
 35698                           postinc2	equ	0xFDE
 35699                           postdec2	equ	0xFDD
 35700                           plusw2	equ	0xFDB
 35701                           fsr2h	equ	0xFDA
 35702                           fsr2l	equ	0xFD9
 35703                           status	equ	0xFD8
 35704                           
 35705 ;; *************** function _flash_sector_read *****************
 35706 ;; Defined at:
 35707 ;;		line 426 in file "flash.c"
 35708 ;; Parameters:    Size  Location     Type
 35709 ;;  page            2   39[BANK0 ] unsigned int 
 35710 ;;  data            2   41[BANK0 ] PTR unsigned char 
 35711 ;;		 -> buffer(512), msd_buffer(512), 
 35712 ;; Auto vars:     Size  Location     Type
 35713 ;;		None
 35714 ;; Return value:  Size  Location     Type
 35715 ;;                  1    wreg      void 
 35716 ;; Registers used:
 35717 ;;		wreg, status,2, status,0, cstack
 35718 ;; Tracked objects:
 35719 ;;		On entry : 0/0
 35720 ;;		On exit  : 0/0
 35721 ;;		Unchanged: 0/0
 35722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35726 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35727 ;;Total ram usage:        4 bytes
 35728 ;; Hardware stack levels used:    1
 35729 ;; Hardware stack levels required when called:   14
 35730 ;; This function calls:
 35731 ;;		__flash_partial_read
 35732 ;; This function is called by:
 35733 ;;		_ExternalFlash_SectorRead
 35734 ;;		__get_available_cluster
 35735 ;;		__find_nth_cluster
 35736 ;;		__make_cluster_chain
 35737 ;;		_fat_find_file
 35738 ;;		_fat_get_format_status
 35739 ;; This function uses a non-reentrant model
 35740 ;;
 35741                           
 35742                           	psect	text142
 35743  015580                     __ptext142:
 35744                           	opt stack 0
 35745  015580                     _flash_sector_read:
 35746                           	opt stack 13
 35747                           
 35748                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 35749                           
 35750                           ;incstack = 0
 35751  015580  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 35752  015584  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 35753  015588  0E00               	movlw	0
 35754  01558A  0100               	movlb	0	; () banked
 35755  01558C  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 35756  01558E  0E00               	movlw	0
 35757  015590  6F75               	movwf	__flash_partial_read@start& (0+255),b
 35758  015592  0E02               	movlw	2
 35759  015594  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 35760  015596  0E00               	movlw	0
 35761  015598  6F77               	movwf	__flash_partial_read@length& (0+255),b
 35762  01559A  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 35763  01559E  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 35764  0155A2  ECF3  F09E         	call	__flash_partial_read	;wreg free
 35765  0155A6  0012               	return		;funcret
 35766  0155A8                     __end_of_flash_sector_read:
 35767                           	opt stack 0
 35768                           tosu	equ	0xFFF
 35769                           tosh	equ	0xFFE
 35770                           tosl	equ	0xFFD
 35771                           pclath	equ	0xFFA
 35772                           tblptru	equ	0xFF8
 35773                           tblptrh	equ	0xFF7
 35774                           tblptrl	equ	0xFF6
 35775                           tablat	equ	0xFF5
 35776                           prodh	equ	0xFF4
 35777                           prodl	equ	0xFF3
 35778                           intcon	equ	0xFF2
 35779                           postinc0	equ	0xFEE
 35780                           wreg	equ	0xFE8
 35781                           indf1	equ	0xFE7
 35782                           postinc1	equ	0xFE6
 35783                           postdec1	equ	0xFE5
 35784                           plusw1	equ	0xFE3
 35785                           fsr1h	equ	0xFE2
 35786                           fsr1l	equ	0xFE1
 35787                           indf2	equ	0xFDF
 35788                           postinc2	equ	0xFDE
 35789                           postdec2	equ	0xFDD
 35790                           plusw2	equ	0xFDB
 35791                           fsr2h	equ	0xFDA
 35792                           fsr2l	equ	0xFD9
 35793                           status	equ	0xFD8
 35794                           
 35795 ;; *************** function __flash_partial_read *****************
 35796 ;; Defined at:
 35797 ;;		line 309 in file "flash.c"
 35798 ;; Parameters:    Size  Location     Type
 35799 ;;  page            2   19[BANK0 ] unsigned int 
 35800 ;;  start           2   21[BANK0 ] unsigned int 
 35801 ;;  length          2   23[BANK0 ] unsigned int 
 35802 ;;  data            2   25[BANK0 ] PTR unsigned char 
 35803 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 35804 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 35805 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 35806 ;; Auto vars:     Size  Location     Type
 35807 ;;  command         4   31[BANK0 ] unsigned char [4]
 35808 ;;  address         4   35[BANK0 ] unsigned long 
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1    wreg      void 
 35811 ;; Registers used:
 35812 ;;		wreg, status,2, status,0, cstack
 35813 ;; Tracked objects:
 35814 ;;		On entry : 0/0
 35815 ;;		On exit  : 0/0
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35818 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35819 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35821 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35822 ;;Total ram usage:       20 bytes
 35823 ;; Hardware stack levels used:    1
 35824 ;; Hardware stack levels required when called:   13
 35825 ;; This function calls:
 35826 ;;		__flash_is_busy
 35827 ;;		_spi_tx_rx
 35828 ;; This function is called by:
 35829 ;;		_flash_sector_read
 35830 ;;		_flash_partial_read
 35831 ;; This function uses a non-reentrant model
 35832 ;;
 35833                           
 35834                           	psect	text143
 35835  013DE6                     __ptext143:
 35836                           	opt stack 0
 35837  013DE6                     __flash_partial_read:
 35838                           	opt stack 13
 35839                           
 35840                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 35841                           
 35842                           ;incstack = 0
 35843  013DE6  EC1E  F0AB         	call	__flash_is_busy	;wreg free
 35844  013DEA  0900               	iorlw	0
 35845  013DEC  A4D8               	btfss	status,2,c
 35846  013DEE  D7FB               	goto	__flash_partial_read
 35847                           
 35848                           ;flash.c: 318: address = page;
 35849  013DF0  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 35850  013DF4  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 35851  013DF8  0100               	movlb	0	; () banked
 35852  013DFA  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 35853  013DFC  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 35854                           
 35855                           ; BSR set to: 0
 35856                           ;flash.c: 319: address <<= 9;
 35857  013DFE  0E09               	movlw	9
 35858  013E00                     u9925:
 35859  013E00  90D8               	bcf	status,0,c
 35860  013E02  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 35861  013E04  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 35862  013E06  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 35863  013E08  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 35864  013E0A  2EE8               	decfsz	wreg,f,c
 35865  013E0C  D7F9               	goto	u9925
 35866                           
 35867                           ; BSR set to: 0
 35868                           ;flash.c: 320: address |= start;
 35869  013E0E  5175               	movf	__flash_partial_read@start& (0+255),w,b
 35870  013E10  6F7B               	movwf	??__flash_partial_read& (0+255),b
 35871  013E12  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 35872  013E14  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 35873  013E16  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 35874  013E18  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 35875  013E1A  517B               	movf	??__flash_partial_read& (0+255),w,b
 35876  013E1C  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 35877  013E1E  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 35878  013E20  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 35879  013E22  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 35880  013E24  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 35881  013E26  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 35882  013E28  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 35883                           
 35884                           ; BSR set to: 0
 35885                           ;flash.c: 323: command[0] = 0x03;
 35886  013E2A  0E03               	movlw	3
 35887  013E2C  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 35888                           
 35889                           ; BSR set to: 0
 35890                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 35891  013E2E  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 35892                           
 35893                           ; BSR set to: 0
 35894                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 35895  013E32  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 35896  013E34  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 35897                           
 35898                           ; BSR set to: 0
 35899                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 35900  013E36  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 35901                           
 35902                           ; BSR set to: 0
 35903                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 35904  013E3A  0E7F               	movlw	low __flash_partial_read@command
 35905  013E3C  6F60               	movwf	spi_tx_rx@command& (0+255),b
 35906  013E3E  0E00               	movlw	high __flash_partial_read@command
 35907  013E40  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 35908  013E42  0E00               	movlw	0
 35909  013E44  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 35910  013E46  0E04               	movlw	4
 35911  013E48  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 35912  013E4A  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 35913  013E4E  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 35914  013E52  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 35915  013E56  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 35916  013E5A  ECD9  F099         	call	_spi_tx_rx	;wreg free
 35917  013E5E  0012               	return		;funcret
 35918  013E60                     __end_of__flash_partial_read:
 35919                           	opt stack 0
 35920                           tosu	equ	0xFFF
 35921                           tosh	equ	0xFFE
 35922                           tosl	equ	0xFFD
 35923                           pclath	equ	0xFFA
 35924                           tblptru	equ	0xFF8
 35925                           tblptrh	equ	0xFF7
 35926                           tblptrl	equ	0xFF6
 35927                           tablat	equ	0xFF5
 35928                           prodh	equ	0xFF4
 35929                           prodl	equ	0xFF3
 35930                           intcon	equ	0xFF2
 35931                           postinc0	equ	0xFEE
 35932                           wreg	equ	0xFE8
 35933                           indf1	equ	0xFE7
 35934                           postinc1	equ	0xFE6
 35935                           postdec1	equ	0xFE5
 35936                           plusw1	equ	0xFE3
 35937                           fsr1h	equ	0xFE2
 35938                           fsr1l	equ	0xFE1
 35939                           indf2	equ	0xFDF
 35940                           postinc2	equ	0xFDE
 35941                           postdec2	equ	0xFDD
 35942                           plusw2	equ	0xFDB
 35943                           fsr2h	equ	0xFDA
 35944                           fsr2l	equ	0xFD9
 35945                           status	equ	0xFD8
 35946                           
 35947 ;; *************** function __flash_is_busy *****************
 35948 ;; Defined at:
 35949 ;;		line 281 in file "flash.c"
 35950 ;; Parameters:    Size  Location     Type
 35951 ;;		None
 35952 ;; Auto vars:     Size  Location     Type
 35953 ;;  status          2   17[BANK0 ] unsigned int 
 35954 ;; Return value:  Size  Location     Type
 35955 ;;                  1    wreg      unsigned char 
 35956 ;; Registers used:
 35957 ;;		wreg, status,2, status,0, cstack
 35958 ;; Tracked objects:
 35959 ;;		On entry : 0/0
 35960 ;;		On exit  : 0/0
 35961 ;;		Unchanged: 0/0
 35962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35967 ;;Total ram usage:        2 bytes
 35968 ;; Hardware stack levels used:    1
 35969 ;; Hardware stack levels required when called:   12
 35970 ;; This function calls:
 35971 ;;		__flash_get_status
 35972 ;;		__flash_wakeup
 35973 ;; This function is called by:
 35974 ;;		__flash_set_page_size
 35975 ;;		__flash_copy_page_to_buffer
 35976 ;;		__flash_compare_page_to_buffer
 35977 ;;		__flash_write_to_buffer
 35978 ;;		__flash_write_page_from_buffer
 35979 ;;		__flash_partial_read
 35980 ;;		_flash_partial_write
 35981 ;;		__flash_erase_page
 35982 ;;		__flash_buffer_read
 35983 ;;		_flash_is_busy
 35984 ;;		_flash_set_power_state
 35985 ;; This function uses a non-reentrant model
 35986 ;;
 35987                           
 35988                           	psect	text144
 35989  01563C                     __ptext144:
 35990                           	opt stack 0
 35991  01563C                     __flash_is_busy:
 35992                           	opt stack 15
 35993                           
 35994                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 35995                           
 35996                           ;incstack = 0
 35997  01563C  0101               	movlb	1	; () banked
 35998  01563E  515A               	movf	_power_state& (0+255),w,b
 35999  015640  A4D8               	btfss	status,2,c
 36000                           
 36001                           ; BSR set to: 1
 36002                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 36003  015642  ECFC  F0A3         	call	__flash_wakeup	;wreg free
 36004                           
 36005                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 36006  015646  EC28  F0A9         	call	__flash_get_status	;wreg free
 36007  01564A  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 36008  01564E  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 36009                           
 36010                           ;flash.c: 295: if(status & 0b0000000010000000)
 36011  015652  0100               	movlb	0	; () banked
 36012  015654  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 36013  015656  D002               	goto	l1581
 36014                           
 36015                           ; BSR set to: 0
 36016                           ;flash.c: 296: {;flash.c: 298: return 0;
 36017  015658  0E00               	movlw	0
 36018                           
 36019                           ; BSR set to: 0
 36020                           ;flash.c: 299: }
 36021                           
 36022                           ; BSR set to: 0
 36023  01565A  0012               	return	
 36024  01565C                     l1581:
 36025                           
 36026                           ; BSR set to: 0
 36027                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 36028                           
 36029                           ; BSR set to: 0
 36030  01565C  0E01               	movlw	1
 36031                           
 36032                           ; BSR set to: 0
 36033  01565E  0012               	return	
 36034  015660                     __end_of__flash_is_busy:
 36035                           	opt stack 0
 36036                           tosu	equ	0xFFF
 36037                           tosh	equ	0xFFE
 36038                           tosl	equ	0xFFD
 36039                           pclath	equ	0xFFA
 36040                           tblptru	equ	0xFF8
 36041                           tblptrh	equ	0xFF7
 36042                           tblptrl	equ	0xFF6
 36043                           tablat	equ	0xFF5
 36044                           prodh	equ	0xFF4
 36045                           prodl	equ	0xFF3
 36046                           intcon	equ	0xFF2
 36047                           postinc0	equ	0xFEE
 36048                           wreg	equ	0xFE8
 36049                           indf1	equ	0xFE7
 36050                           postinc1	equ	0xFE6
 36051                           postdec1	equ	0xFE5
 36052                           plusw1	equ	0xFE3
 36053                           fsr1h	equ	0xFE2
 36054                           fsr1l	equ	0xFE1
 36055                           indf2	equ	0xFDF
 36056                           postinc2	equ	0xFDE
 36057                           postdec2	equ	0xFDD
 36058                           plusw2	equ	0xFDB
 36059                           fsr2h	equ	0xFDA
 36060                           fsr2l	equ	0xFD9
 36061                           status	equ	0xFD8
 36062                           
 36063 ;; *************** function __flash_wakeup *****************
 36064 ;; Defined at:
 36065 ;;		line 128 in file "flash.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;		None
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;  command         1    8[BANK0 ] unsigned char 
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  1    wreg      void 
 36072 ;; Registers used:
 36073 ;;		wreg, status,2, status,0, cstack
 36074 ;; Tracked objects:
 36075 ;;		On entry : 0/0
 36076 ;;		On exit  : 0/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36083 ;;Total ram usage:        1 bytes
 36084 ;; Hardware stack levels used:    1
 36085 ;; Hardware stack levels required when called:   11
 36086 ;; This function calls:
 36087 ;;		_spi_tx
 36088 ;; This function is called by:
 36089 ;;		__flash_is_busy
 36090 ;;		_flash_set_power_state
 36091 ;; This function uses a non-reentrant model
 36092 ;;
 36093                           
 36094                           	psect	text145
 36095  0147F8                     __ptext145:
 36096                           	opt stack 0
 36097  0147F8                     __flash_wakeup:
 36098                           	opt stack 15
 36099                           
 36100                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 36101                           
 36102                           ; BSR set to: 0
 36103                           ;incstack = 0
 36104  0147F8  D022               	goto	l1530
 36105  0147FA                     
 36106                           ;flash.c: 135: command = 0xAB;
 36107  0147FA  0EAB               	movlw	171
 36108  0147FC  0100               	movlb	0	; () banked
 36109  0147FE  6F68               	movwf	__flash_wakeup@command& (0+255),b
 36110                           
 36111                           ; BSR set to: 0
 36112                           ;flash.c: 136: spi_tx(&command, 1);
 36113  014800  0E68               	movlw	low __flash_wakeup@command
 36114  014802  6F60               	movwf	spi_tx@data& (0+255),b
 36115  014804  0E00               	movlw	high __flash_wakeup@command
 36116  014806  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 36117  014808  0E00               	movlw	0
 36118  01480A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 36119  01480C  0E01               	movlw	1
 36120  01480E  6F62               	movwf	spi_tx@length& (0+255),b
 36121  014810  EC4B  F0A3         	call	_spi_tx	;wreg free
 36122                           
 36123                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 36124  014814  0E17               	movlw	23
 36125  014816                     u19337:
 36126  014816  2EE8               	decfsz	wreg,f,c
 36127  014818  D7FE               	bra	u19337
 36128  01481A  F000               	nop	
 36129                           
 36130                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 36131  01481C  0E00               	movlw	0
 36132  01481E  0101               	movlb	1	; () banked
 36133  014820  6F5A               	movwf	_power_state& (0+255),b
 36134                           
 36135                           ;flash.c: 139: break;
 36136  014822  0012               	return	
 36137  014824                     l1533:
 36138                           
 36139                           ; BSR set to: 1
 36140                           ;flash.c: 144: LATDbits.LD7 = 0;
 36141  014824  9E8C               	bcf	3980,7,c	;volatile
 36142                           
 36143                           ; BSR set to: 1
 36144                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 36145  014826  0E0D               	movlw	13
 36146  014828                     u19347:
 36147  014828  2EE8               	decfsz	wreg,f,c
 36148  01482A  D7FE               	bra	u19347
 36149  01482C  F000               	nop	
 36150                           
 36151                           ;flash.c: 146: LATDbits.LD7 = 1;
 36152  01482E  8E8C               	bsf	3980,7,c	;volatile
 36153                           
 36154                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 36155  014830  0E50               	movlw	80
 36156  014832                     u19357:
 36157  014832  2EE8               	decfsz	wreg,f,c
 36158  014834  D7FE               	bra	u19357
 36159                           
 36160                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 36161  014836  0E00               	movlw	0
 36162  014838  0101               	movlb	1	; () banked
 36163  01483A  6F5A               	movwf	_power_state& (0+255),b
 36164                           
 36165                           ; BSR set to: 1
 36166                           ;flash.c: 150: }
 36167                           
 36168                           ;flash.c: 149: break;
 36169  01483C  0012               	return	
 36170  01483E                     l1530:
 36171                           
 36172                           ; BSR set to: 1
 36173  01483E  0101               	movlb	1	; () banked
 36174  014840  515A               	movf	_power_state& (0+255),w,b
 36175                           
 36176                           ; Switch size 1, requested type "space"
 36177                           ; Number of cases is 2, Range of values is 1 to 2
 36178                           ; switch strategies available:
 36179                           ; Name         Instructions Cycles
 36180                           ; simple_byte            7     4 (average)
 36181                           ;	Chosen strategy is simple_byte
 36182  014842  0A01               	xorlw	1	; case 1
 36183  014844  B4D8               	btfsc	status,2,c
 36184  014846  D7D9               	goto	l1531
 36185  014848  0A03               	xorlw	3	; case 2
 36186  01484A  A4D8               	btfss	status,2,c
 36187  01484C  0012               	return	
 36188  01484E  D7EA               	goto	l1533
 36189  014850                     __end_of__flash_wakeup:
 36190                           	opt stack 0
 36191                           tosu	equ	0xFFF
 36192                           tosh	equ	0xFFE
 36193                           tosl	equ	0xFFD
 36194                           pclath	equ	0xFFA
 36195                           tblptru	equ	0xFF8
 36196                           tblptrh	equ	0xFF7
 36197                           tblptrl	equ	0xFF6
 36198                           tablat	equ	0xFF5
 36199                           prodh	equ	0xFF4
 36200                           prodl	equ	0xFF3
 36201                           intcon	equ	0xFF2
 36202                           postinc0	equ	0xFEE
 36203                           wreg	equ	0xFE8
 36204                           indf1	equ	0xFE7
 36205                           postinc1	equ	0xFE6
 36206                           postdec1	equ	0xFE5
 36207                           plusw1	equ	0xFE3
 36208                           fsr1h	equ	0xFE2
 36209                           fsr1l	equ	0xFE1
 36210                           indf2	equ	0xFDF
 36211                           postinc2	equ	0xFDE
 36212                           postdec2	equ	0xFDD
 36213                           plusw2	equ	0xFDB
 36214                           fsr2h	equ	0xFDA
 36215                           fsr2l	equ	0xFD9
 36216                           status	equ	0xFD8
 36217                           
 36218 ;; *************** function _spi_tx *****************
 36219 ;; Defined at:
 36220 ;;		line 108 in file "spi.c"
 36221 ;; Parameters:    Size  Location     Type
 36222 ;;  data            2    0[BANK0 ] PTR unsigned char 
 36223 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 36224 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 36225 ;;  length          2    2[BANK0 ] unsigned int 
 36226 ;; Auto vars:     Size  Location     Type
 36227 ;;		None
 36228 ;; Return value:  Size  Location     Type
 36229 ;;                  1    wreg      void 
 36230 ;; Registers used:
 36231 ;;		wreg, status,2, status,0
 36232 ;; Tracked objects:
 36233 ;;		On entry : 0/0
 36234 ;;		On exit  : 0/0
 36235 ;;		Unchanged: 0/0
 36236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36239 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36240 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36241 ;;Total ram usage:        8 bytes
 36242 ;; Hardware stack levels used:    1
 36243 ;; Hardware stack levels required when called:   10
 36244 ;; This function calls:
 36245 ;;		Nothing
 36246 ;; This function is called by:
 36247 ;;		__flash_set_page_size
 36248 ;;		__flash_wakeup
 36249 ;;		__flash_copy_page_to_buffer
 36250 ;;		__flash_compare_page_to_buffer
 36251 ;;		__flash_write_page_from_buffer
 36252 ;;		__flash_erase_page
 36253 ;;		_flash_set_power_state
 36254 ;; This function uses a non-reentrant model
 36255 ;;
 36256                           
 36257                           	psect	text146
 36258  014696                     __ptext146:
 36259                           	opt stack 0
 36260  014696                     _spi_tx:
 36261                           	opt stack 17
 36262                           
 36263                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 36264                           
 36265                           ; BSR set to: 1
 36266                           ;incstack = 0
 36267  014696  9E88               	bcf	3976,7,c	;volatile
 36268                           
 36269                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 36270  014698  9C88               	bcf	3976,6,c	;volatile
 36271                           
 36272                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 36273  01469A  8A88               	bsf	3976,5,c	;volatile
 36274                           
 36275                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 36276  01469C  9888               	bcf	3976,4,c	;volatile
 36277                           
 36278                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 36279  01469E  9688               	bcf	3976,3,c	;volatile
 36280                           
 36281                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 36282  0146A0  8488               	bsf	3976,2,c	;volatile
 36283                           
 36284                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 36285  0146A2  9288               	bcf	3976,1,c	;volatile
 36286                           
 36287                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 36288  0146A4  9886               	bcf	3974,4,c	;volatile
 36289  0146A6  9A86               	bcf	3974,5,c	;volatile
 36290  0146A8  9C86               	bcf	3974,6,c	;volatile
 36291  0146AA  9E86               	bcf	3974,7,c	;volatile
 36292                           
 36293                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 36294  0146AC  9086               	bcf	3974,0,c	;volatile
 36295  0146AE  9286               	bcf	3974,1,c	;volatile
 36296  0146B0  9486               	bcf	3974,2,c	;volatile
 36297  0146B2  9686               	bcf	3974,3,c	;volatile
 36298                           
 36299                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36300  0146B4  0100               	movlb	0	; () banked
 36301  0146B6  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 36302  0146B8  6E6A               	movwf	3946,c	;volatile
 36303                           
 36304                           ; BSR set to: 0
 36305                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36306  0146BA  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 36307                           
 36308                           ; BSR set to: 0
 36309                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 36310  0146BE  0EFF               	movlw	255
 36311  0146C0  6F64               	movwf	??_spi_tx& (0+255),b
 36312  0146C2  0EFF               	movlw	255
 36313  0146C4  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 36314  0146C6  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 36315  0146CA  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 36316  0146CE  5164               	movf	??_spi_tx& (0+255),w,b
 36317  0146D0  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 36318  0146D2  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 36319  0146D4  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 36320  0146D6  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 36321  0146DA  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 36322  0146DC  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 36323  0146DE  6E66               	movwf	3942,c	;volatile
 36324                           
 36325                           ; BSR set to: 0
 36326                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 36327  0146E0  0562               	decf	spi_tx@length& (0+255),w,b
 36328  0146E2  6E67               	movwf	3943,c	;volatile
 36329                           
 36330                           ; BSR set to: 0
 36331                           ;spi.c: 136: LATDbits.LD7 = 0;
 36332  0146E4  9E8C               	bcf	3980,7,c	;volatile
 36333                           
 36334                           ; BSR set to: 0
 36335                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 36336  0146E6  8088               	bsf	3976,0,c	;volatile
 36337  0146E8                     
 36338                           ; BSR set to: 0
 36339  0146E8  B088               	btfsc	3976,0,c	;volatile
 36340  0146EA  D7FE               	goto	l2177
 36341                           
 36342                           ;spi.c: 139: LATDbits.LD7 = 1;
 36343  0146EC  8E8C               	bsf	3980,7,c	;volatile
 36344  0146EE  0012               	return		;funcret
 36345  0146F0                     __end_of_spi_tx:
 36346                           	opt stack 0
 36347                           tosu	equ	0xFFF
 36348                           tosh	equ	0xFFE
 36349                           tosl	equ	0xFFD
 36350                           pclath	equ	0xFFA
 36351                           tblptru	equ	0xFF8
 36352                           tblptrh	equ	0xFF7
 36353                           tblptrl	equ	0xFF6
 36354                           tablat	equ	0xFF5
 36355                           prodh	equ	0xFF4
 36356                           prodl	equ	0xFF3
 36357                           intcon	equ	0xFF2
 36358                           postinc0	equ	0xFEE
 36359                           wreg	equ	0xFE8
 36360                           indf1	equ	0xFE7
 36361                           postinc1	equ	0xFE6
 36362                           postdec1	equ	0xFE5
 36363                           plusw1	equ	0xFE3
 36364                           fsr1h	equ	0xFE2
 36365                           fsr1l	equ	0xFE1
 36366                           indf2	equ	0xFDF
 36367                           postinc2	equ	0xFDE
 36368                           postdec2	equ	0xFDD
 36369                           plusw2	equ	0xFDB
 36370                           fsr2h	equ	0xFDA
 36371                           fsr2l	equ	0xFD9
 36372                           status	equ	0xFD8
 36373                           
 36374 ;; *************** function __flash_get_status *****************
 36375 ;; Defined at:
 36376 ;;		line 117 in file "flash.c"
 36377 ;; Parameters:    Size  Location     Type
 36378 ;;		None
 36379 ;; Auto vars:     Size  Location     Type
 36380 ;;  status          2   15[BANK0 ] unsigned int 
 36381 ;;  command         1   14[BANK0 ] unsigned char 
 36382 ;; Return value:  Size  Location     Type
 36383 ;;                  2   12[BANK0 ] unsigned int 
 36384 ;; Registers used:
 36385 ;;		wreg, status,2, status,0, cstack
 36386 ;; Tracked objects:
 36387 ;;		On entry : 0/0
 36388 ;;		On exit  : 0/0
 36389 ;;		Unchanged: 0/0
 36390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36392 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36394 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36395 ;;Total ram usage:        5 bytes
 36396 ;; Hardware stack levels used:    1
 36397 ;; Hardware stack levels required when called:   11
 36398 ;; This function calls:
 36399 ;;		_spi_tx_rx
 36400 ;; This function is called by:
 36401 ;;		__flash_compare_page_to_buffer
 36402 ;;		__flash_is_busy
 36403 ;; This function uses a non-reentrant model
 36404 ;;
 36405                           
 36406                           	psect	text147
 36407  015250                     __ptext147:
 36408                           	opt stack 0
 36409  015250                     __flash_get_status:
 36410                           	opt stack 15
 36411                           
 36412                           ;flash.c: 121: uint8_t command = 0xD7;
 36413                           
 36414                           ;incstack = 0
 36415  015250  0ED7               	movlw	215
 36416  015252  0100               	movlb	0	; () banked
 36417  015254  6F6E               	movwf	__flash_get_status@command& (0+255),b
 36418                           
 36419                           ; BSR set to: 0
 36420                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 36421  015256  0E6E               	movlw	low __flash_get_status@command
 36422  015258  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36423  01525A  0E00               	movlw	high __flash_get_status@command
 36424  01525C  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36425  01525E  0E00               	movlw	0
 36426  015260  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36427  015262  0E01               	movlw	1
 36428  015264  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36429  015266  0E6F               	movlw	low __flash_get_status@status
 36430  015268  6F64               	movwf	spi_tx_rx@data& (0+255),b
 36431  01526A  0E00               	movlw	high __flash_get_status@status
 36432  01526C  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 36433  01526E  0E00               	movlw	0
 36434  015270  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 36435  015272  0E02               	movlw	2
 36436  015274  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 36437  015276  ECD9  F099         	call	_spi_tx_rx	;wreg free
 36438                           
 36439                           ;flash.c: 124: return status;
 36440  01527A  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 36441  01527E  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 36442  015282  0012               	return	
 36443  015284                     __end_of__flash_get_status:
 36444                           	opt stack 0
 36445                           tosu	equ	0xFFF
 36446                           tosh	equ	0xFFE
 36447                           tosl	equ	0xFFD
 36448                           pclath	equ	0xFFA
 36449                           tblptru	equ	0xFF8
 36450                           tblptrh	equ	0xFF7
 36451                           tblptrl	equ	0xFF6
 36452                           tablat	equ	0xFF5
 36453                           prodh	equ	0xFF4
 36454                           prodl	equ	0xFF3
 36455                           intcon	equ	0xFF2
 36456                           postinc0	equ	0xFEE
 36457                           wreg	equ	0xFE8
 36458                           indf1	equ	0xFE7
 36459                           postinc1	equ	0xFE6
 36460                           postdec1	equ	0xFE5
 36461                           plusw1	equ	0xFE3
 36462                           fsr1h	equ	0xFE2
 36463                           fsr1l	equ	0xFE1
 36464                           indf2	equ	0xFDF
 36465                           postinc2	equ	0xFDE
 36466                           postdec2	equ	0xFDD
 36467                           plusw2	equ	0xFDB
 36468                           fsr2h	equ	0xFDA
 36469                           fsr2l	equ	0xFD9
 36470                           status	equ	0xFD8
 36471                           
 36472 ;; *************** function _spi_tx_rx *****************
 36473 ;; Defined at:
 36474 ;;		line 199 in file "spi.c"
 36475 ;; Parameters:    Size  Location     Type
 36476 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36477 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 36478 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36479 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36480 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36481 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36482 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 36483 ;;  data_length     2    6[BANK0 ] unsigned int 
 36484 ;; Auto vars:     Size  Location     Type
 36485 ;;		None
 36486 ;; Return value:  Size  Location     Type
 36487 ;;                  1    wreg      void 
 36488 ;; Registers used:
 36489 ;;		wreg, status,2, status,0
 36490 ;; Tracked objects:
 36491 ;;		On entry : 0/0
 36492 ;;		On exit  : 0/0
 36493 ;;		Unchanged: 0/0
 36494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36495 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36498 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36499 ;;Total ram usage:       12 bytes
 36500 ;; Hardware stack levels used:    1
 36501 ;; Hardware stack levels required when called:   10
 36502 ;; This function calls:
 36503 ;;		Nothing
 36504 ;; This function is called by:
 36505 ;;		__flash_get_status
 36506 ;;		__flash_partial_read
 36507 ;;		__flash_buffer_read
 36508 ;; This function uses a non-reentrant model
 36509 ;;
 36510                           
 36511                           	psect	text148
 36512  0133B2                     __ptext148:
 36513                           	opt stack 0
 36514  0133B2                     _spi_tx_rx:
 36515                           	opt stack 15
 36516                           
 36517                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 36518                           
 36519                           ;incstack = 0
 36520  0133B2  9E88               	bcf	3976,7,c	;volatile
 36521                           
 36522                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 36523  0133B4  9C88               	bcf	3976,6,c	;volatile
 36524                           
 36525                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 36526  0133B6  8A88               	bsf	3976,5,c	;volatile
 36527                           
 36528                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 36529  0133B8  9888               	bcf	3976,4,c	;volatile
 36530                           
 36531                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 36532  0133BA  9688               	bcf	3976,3,c	;volatile
 36533                           
 36534                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 36535  0133BC  8488               	bsf	3976,2,c	;volatile
 36536                           
 36537                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 36538  0133BE  9288               	bcf	3976,1,c	;volatile
 36539                           
 36540                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 36541  0133C0  9886               	bcf	3974,4,c	;volatile
 36542  0133C2  9A86               	bcf	3974,5,c	;volatile
 36543  0133C4  9C86               	bcf	3974,6,c	;volatile
 36544  0133C6  9E86               	bcf	3974,7,c	;volatile
 36545                           
 36546                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 36547  0133C8  9086               	bcf	3974,0,c	;volatile
 36548  0133CA  9286               	bcf	3974,1,c	;volatile
 36549  0133CC  9486               	bcf	3974,2,c	;volatile
 36550  0133CE  9686               	bcf	3974,3,c	;volatile
 36551                           
 36552                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36553  0133D0  0100               	movlb	0	; () banked
 36554  0133D2  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 36555  0133D4  6E6A               	movwf	3946,c	;volatile
 36556                           
 36557                           ; BSR set to: 0
 36558                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36559  0133D6  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 36560                           
 36561                           ; BSR set to: 0
 36562                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36563  0133DA  0EFF               	movlw	255
 36564  0133DC  6F68               	movwf	??_spi_tx_rx& (0+255),b
 36565  0133DE  0EFF               	movlw	255
 36566  0133E0  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 36567  0133E2  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 36568  0133E6  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 36569  0133EA  5168               	movf	??_spi_tx_rx& (0+255),w,b
 36570  0133EC  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 36571  0133EE  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 36572  0133F0  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 36573  0133F2  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 36574  0133F6  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 36575  0133F8  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 36576  0133FA  6E66               	movwf	3942,c	;volatile
 36577                           
 36578                           ; BSR set to: 0
 36579                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36580  0133FC  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 36581  0133FE  6E67               	movwf	3943,c	;volatile
 36582                           
 36583                           ; BSR set to: 0
 36584                           ;spi.c: 227: LATDbits.LD7 = 0;
 36585  013400  9E8C               	bcf	3980,7,c	;volatile
 36586                           
 36587                           ; BSR set to: 0
 36588                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 36589  013402  8088               	bsf	3976,0,c	;volatile
 36590  013404                     
 36591                           ; BSR set to: 0
 36592  013404  B088               	btfsc	3976,0,c	;volatile
 36593  013406  D7FE               	goto	l2192
 36594                           
 36595                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 36596  013408  9A88               	bcf	3976,5,c	;volatile
 36597                           
 36598                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 36599  01340A  8888               	bsf	3976,4,c	;volatile
 36600                           
 36601                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 36602  01340C  9688               	bcf	3976,3,c	;volatile
 36603                           
 36604                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 36605  01340E  9488               	bcf	3976,2,c	;volatile
 36606                           
 36607                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36608  013410  0100               	movlb	0	; () banked
 36609  013412  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 36610  013414  6E68               	movwf	3944,c	;volatile
 36611                           
 36612                           ; BSR set to: 0
 36613                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36614  013416  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 36615                           
 36616                           ; BSR set to: 0
 36617                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36618  01341A  0EFF               	movlw	255
 36619  01341C  6F68               	movwf	??_spi_tx_rx& (0+255),b
 36620  01341E  0EFF               	movlw	255
 36621  013420  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 36622  013422  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 36623  013426  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 36624  01342A  5168               	movf	??_spi_tx_rx& (0+255),w,b
 36625  01342C  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 36626  01342E  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 36627  013430  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 36628  013432  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 36629  013436  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 36630  013438  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 36631  01343A  6E66               	movwf	3942,c	;volatile
 36632                           
 36633                           ; BSR set to: 0
 36634                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36635  01343C  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 36636  01343E  6E67               	movwf	3943,c	;volatile
 36637                           
 36638                           ; BSR set to: 0
 36639                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 36640  013440  8088               	bsf	3976,0,c	;volatile
 36641  013442                     
 36642                           ; BSR set to: 0
 36643  013442  B088               	btfsc	3976,0,c	;volatile
 36644  013444  D7FE               	goto	l2195
 36645                           
 36646                           ;spi.c: 254: LATDbits.LD7 = 1;
 36647  013446  8E8C               	bsf	3980,7,c	;volatile
 36648  013448  0012               	return		;funcret
 36649  01344A                     __end_of_spi_tx_rx:
 36650                           	opt stack 0
 36651                           tosu	equ	0xFFF
 36652                           tosh	equ	0xFFE
 36653                           tosl	equ	0xFFD
 36654                           pclath	equ	0xFFA
 36655                           tblptru	equ	0xFF8
 36656                           tblptrh	equ	0xFF7
 36657                           tblptrl	equ	0xFF6
 36658                           tablat	equ	0xFF5
 36659                           prodh	equ	0xFF4
 36660                           prodl	equ	0xFF3
 36661                           intcon	equ	0xFF2
 36662                           postinc0	equ	0xFEE
 36663                           wreg	equ	0xFE8
 36664                           indf1	equ	0xFE7
 36665                           postinc1	equ	0xFE6
 36666                           postdec1	equ	0xFE5
 36667                           plusw1	equ	0xFE3
 36668                           fsr1h	equ	0xFE2
 36669                           fsr1l	equ	0xFE1
 36670                           indf2	equ	0xFDF
 36671                           postinc2	equ	0xFDE
 36672                           postdec2	equ	0xFDD
 36673                           plusw2	equ	0xFDB
 36674                           fsr2h	equ	0xFDA
 36675                           fsr2l	equ	0xFD9
 36676                           status	equ	0xFD8
 36677                           
 36678 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 36679 ;; Defined at:
 36680 ;;		line 993 in file "usb_device_msd.c"
 36681 ;; Parameters:    Size  Location     Type
 36682 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 36683 ;; Auto vars:     Size  Location     Type
 36684 ;;		None
 36685 ;; Return value:  Size  Location     Type
 36686 ;;                  1    wreg      void 
 36687 ;; Registers used:
 36688 ;;		wreg, status,2, status,0
 36689 ;; Tracked objects:
 36690 ;;		On entry : 0/0
 36691 ;;		On exit  : 0/0
 36692 ;;		Unchanged: 0/0
 36693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36696 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36697 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36698 ;;Total ram usage:        6 bytes
 36699 ;; Hardware stack levels used:    1
 36700 ;; Hardware stack levels required when called:   10
 36701 ;; This function calls:
 36702 ;;		Nothing
 36703 ;; This function is called by:
 36704 ;;		_MSDProcessCommandMediaPresent
 36705 ;; This function uses a non-reentrant model
 36706 ;;
 36707                           
 36708                           	psect	text149
 36709  0128E4                     __ptext149:
 36710                           	opt stack 0
 36711  0128E4                     _MSDComputeDeviceInAndResidue:
 36712                           	opt stack 16
 36713                           
 36714                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 36715                           
 36716                           ;incstack = 0
 36717  0128E4  0100               	movlb	0	; () banked
 36718  0128E6  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 36719  0128E8  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 36720  0128EA  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 36721  0128EC  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 36722  0128EE  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 36723  0128F0  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 36724  0128F2  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 36725  0128F4  0102               	movlb	2	; () banked
 36726  0128F6  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 36727  0128F8  0100               	movlb	0	; () banked
 36728  0128FA  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 36729  0128FC  0102               	movlb	2	; () banked
 36730  0128FE  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 36731  012900  0100               	movlb	0	; () banked
 36732  012902  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 36733  012904  0102               	movlb	2	; () banked
 36734  012906  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 36735  012908  0100               	movlb	0	; () banked
 36736  01290A  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 36737  01290C  0102               	movlb	2	; () banked
 36738  01290E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 36739  012910  B0D8               	btfsc	status,0,c
 36740  012912  D00E               	goto	l675
 36741                           
 36742                           ; BSR set to: 2
 36743                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 36744  012914  0E00               	movlw	0
 36745  012916  010D               	movlb	13	; () banked
 36746  012918  6F88               	movwf	136,b	;volatile
 36747  01291A  0E00               	movlw	0
 36748  01291C  6F89               	movwf	137,b	;volatile
 36749  01291E  0E00               	movlw	0
 36750  012920  6F8A               	movwf	138,b	;volatile
 36751  012922  0E00               	movlw	0
 36752  012924  6F8B               	movwf	139,b	;volatile
 36753                           
 36754                           ; BSR set to: 13
 36755                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 36756  012926  C208  F145         	movff	_gblCBW+8,_TransferLength
 36757  01292A  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 36758                           
 36759                           ;usb_device_msd.c: 1002: }
 36760  01292E  0012               	return	
 36761  012930                     l675:
 36762                           
 36763                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 36764                           
 36765                           ; BSR set to: 13
 36766  012930  0101               	movlb	1	; () banked
 36767  012932  5145               	movf	_TransferLength& (0+255),w,b
 36768  012934  0100               	movlb	0	; () banked
 36769  012936  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 36770  012938  0101               	movlb	1	; () banked
 36771  01293A  5146               	movf	(_TransferLength+1)& (0+255),w,b
 36772  01293C  0100               	movlb	0	; () banked
 36773  01293E  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 36774  012940  B0D8               	btfsc	status,0,c
 36775  012942  D004               	goto	l677
 36776                           
 36777                           ; BSR set to: 0
 36778                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 36779  012944  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 36780  012948  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 36781  01294C                     l677:
 36782                           
 36783                           ; BSR set to: 0
 36784                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 36785                           
 36786                           ; BSR set to: 0
 36787  01294C  0101               	movlb	1	; () banked
 36788  01294E  5145               	movf	_TransferLength& (0+255),w,b
 36789  012950  0100               	movlb	0	; () banked
 36790  012952  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 36791  012954  0101               	movlb	1	; () banked
 36792  012956  5146               	movf	(_TransferLength+1)& (0+255),w,b
 36793  012958  0100               	movlb	0	; () banked
 36794  01295A  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 36795  01295C  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 36796  01295E  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 36797  012960  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 36798  012962  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 36799  012964  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 36800  012966  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 36801  012968  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 36802  01296A  0E00               	movlw	0
 36803  01296C  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 36804  01296E  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 36805  012970  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 36806  012972  0102               	movlb	2	; () banked
 36807  012974  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36808  012976  0100               	movlb	0	; () banked
 36809  012978  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 36810  01297A  010D               	movlb	13	; () banked
 36811  01297C  6F88               	movwf	136,b	;volatile
 36812  01297E  0102               	movlb	2	; () banked
 36813  012980  5109               	movf	(_gblCBW+9)& (0+255),w,b
 36814  012982  0100               	movlb	0	; () banked
 36815  012984  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 36816  012986  010D               	movlb	13	; () banked
 36817  012988  6F89               	movwf	137,b	;volatile
 36818  01298A  0102               	movlb	2	; () banked
 36819  01298C  510A               	movf	(_gblCBW+10)& (0+255),w,b
 36820  01298E  0100               	movlb	0	; () banked
 36821  012990  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 36822  012992  010D               	movlb	13	; () banked
 36823  012994  6F8A               	movwf	138,b	;volatile
 36824  012996  0102               	movlb	2	; () banked
 36825  012998  510B               	movf	(_gblCBW+11)& (0+255),w,b
 36826  01299A  0100               	movlb	0	; () banked
 36827  01299C  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 36828  01299E  010D               	movlb	13	; () banked
 36829  0129A0  6F8B               	movwf	139,b	;volatile
 36830  0129A2  0012               	return	
 36831  0129A4                     __end_of_MSDComputeDeviceInAndResidue:
 36832                           	opt stack 0
 36833                           tosu	equ	0xFFF
 36834                           tosh	equ	0xFFE
 36835                           tosl	equ	0xFFD
 36836                           pclath	equ	0xFFA
 36837                           tblptru	equ	0xFF8
 36838                           tblptrh	equ	0xFF7
 36839                           tblptrl	equ	0xFF6
 36840                           tablat	equ	0xFF5
 36841                           prodh	equ	0xFF4
 36842                           prodl	equ	0xFF3
 36843                           intcon	equ	0xFF2
 36844                           postinc0	equ	0xFEE
 36845                           wreg	equ	0xFE8
 36846                           indf1	equ	0xFE7
 36847                           postinc1	equ	0xFE6
 36848                           postdec1	equ	0xFE5
 36849                           plusw1	equ	0xFE3
 36850                           fsr1h	equ	0xFE2
 36851                           fsr1l	equ	0xFE1
 36852                           indf2	equ	0xFDF
 36853                           postinc2	equ	0xFDE
 36854                           postdec2	equ	0xFDD
 36855                           plusw2	equ	0xFDB
 36856                           fsr2h	equ	0xFDA
 36857                           fsr2l	equ	0xFD9
 36858                           status	equ	0xFD8
 36859                           
 36860 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 36861 ;; Defined at:
 36862 ;;		line 18 in file "external_flash.c"
 36863 ;; Parameters:    Size  Location     Type
 36864 ;;  config          2    0[BANK0 ] PTR void 
 36865 ;;		 -> NULL(0), 
 36866 ;; Auto vars:     Size  Location     Type
 36867 ;;		None
 36868 ;; Return value:  Size  Location     Type
 36869 ;;                  2    0[BANK0 ] unsigned int 
 36870 ;; Registers used:
 36871 ;;		wreg, status,2
 36872 ;; Tracked objects:
 36873 ;;		On entry : 0/0
 36874 ;;		On exit  : 0/0
 36875 ;;		Unchanged: 0/0
 36876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36881 ;;Total ram usage:        2 bytes
 36882 ;; Hardware stack levels used:    1
 36883 ;; Hardware stack levels required when called:   10
 36884 ;; This function calls:
 36885 ;;		Nothing
 36886 ;; This function is called by:
 36887 ;;		_MSDProcessCommandMediaPresent
 36888 ;; This function uses a non-reentrant model
 36889 ;;
 36890                           
 36891                           	psect	text150
 36892  01586E                     __ptext150:
 36893                           	opt stack 0
 36894  01586E                     _ExternalFlash_SectorSizeRead:
 36895                           	opt stack 16
 36896                           
 36897                           ;external_flash.c: 20: return 512;
 36898                           
 36899                           ; BSR set to: 13
 36900                           ;incstack = 0
 36901  01586E  0E02               	movlw	2
 36902  015870  0100               	movlb	0	; () banked
 36903  015872  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 36904  015874  0E00               	movlw	0
 36905  015876  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 36906  015878  0012               	return	
 36907  01587A                     __end_of_ExternalFlash_SectorSizeRead:
 36908                           	opt stack 0
 36909                           tosu	equ	0xFFF
 36910                           tosh	equ	0xFFE
 36911                           tosl	equ	0xFFD
 36912                           pclath	equ	0xFFA
 36913                           tblptru	equ	0xFF8
 36914                           tblptrh	equ	0xFF7
 36915                           tblptrl	equ	0xFF6
 36916                           tablat	equ	0xFF5
 36917                           prodh	equ	0xFF4
 36918                           prodl	equ	0xFF3
 36919                           intcon	equ	0xFF2
 36920                           postinc0	equ	0xFEE
 36921                           wreg	equ	0xFE8
 36922                           indf1	equ	0xFE7
 36923                           postinc1	equ	0xFE6
 36924                           postdec1	equ	0xFE5
 36925                           plusw1	equ	0xFE3
 36926                           fsr1h	equ	0xFE2
 36927                           fsr1l	equ	0xFE1
 36928                           indf2	equ	0xFDF
 36929                           postinc2	equ	0xFDE
 36930                           postdec2	equ	0xFDD
 36931                           plusw2	equ	0xFDB
 36932                           fsr2h	equ	0xFDA
 36933                           fsr2l	equ	0xFD9
 36934                           status	equ	0xFD8
 36935                           
 36936 ;; *************** function _ExternalFlash_CapacityRead *****************
 36937 ;; Defined at:
 36938 ;;		line 23 in file "external_flash.c"
 36939 ;; Parameters:    Size  Location     Type
 36940 ;;  config          2    0[BANK0 ] PTR void 
 36941 ;;		 -> NULL(0), 
 36942 ;; Auto vars:     Size  Location     Type
 36943 ;;		None
 36944 ;; Return value:  Size  Location     Type
 36945 ;;                  4    0[BANK0 ] unsigned long 
 36946 ;; Registers used:
 36947 ;;		wreg, status,2
 36948 ;; Tracked objects:
 36949 ;;		On entry : 0/0
 36950 ;;		On exit  : 0/0
 36951 ;;		Unchanged: 0/0
 36952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36957 ;;Total ram usage:        4 bytes
 36958 ;; Hardware stack levels used:    1
 36959 ;; Hardware stack levels required when called:   10
 36960 ;; This function calls:
 36961 ;;		Nothing
 36962 ;; This function is called by:
 36963 ;;		_MSDProcessCommandMediaPresent
 36964 ;; This function uses a non-reentrant model
 36965 ;;
 36966                           
 36967                           	psect	text151
 36968  0157F2                     __ptext151:
 36969                           	opt stack 0
 36970  0157F2                     _ExternalFlash_CapacityRead:
 36971                           	opt stack 16
 36972                           
 36973                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 36974                           
 36975                           ; BSR set to: 0
 36976                           ;incstack = 0
 36977  0157F2  0EFF               	movlw	255
 36978  0157F4  0100               	movlb	0	; () banked
 36979  0157F6  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 36980  0157F8  0E1F               	movlw	31
 36981  0157FA  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 36982  0157FC  0E00               	movlw	0
 36983  0157FE  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 36984  015800  0E00               	movlw	0
 36985  015802  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 36986  015804  0012               	return	
 36987  015806                     __end_of_ExternalFlash_CapacityRead:
 36988                           	opt stack 0
 36989                           tosu	equ	0xFFF
 36990                           tosh	equ	0xFFE
 36991                           tosl	equ	0xFFD
 36992                           pclath	equ	0xFFA
 36993                           tblptru	equ	0xFF8
 36994                           tblptrh	equ	0xFF7
 36995                           tblptrl	equ	0xFF6
 36996                           tablat	equ	0xFF5
 36997                           prodh	equ	0xFF4
 36998                           prodl	equ	0xFF3
 36999                           intcon	equ	0xFF2
 37000                           postinc0	equ	0xFEE
 37001                           wreg	equ	0xFE8
 37002                           indf1	equ	0xFE7
 37003                           postinc1	equ	0xFE6
 37004                           postdec1	equ	0xFE5
 37005                           plusw1	equ	0xFE3
 37006                           fsr1h	equ	0xFE2
 37007                           fsr1l	equ	0xFE1
 37008                           indf2	equ	0xFDF
 37009                           postinc2	equ	0xFDE
 37010                           postdec2	equ	0xFDD
 37011                           plusw2	equ	0xFDB
 37012                           fsr2h	equ	0xFDA
 37013                           fsr2l	equ	0xFD9
 37014                           status	equ	0xFD8
 37015                           
 37016 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37017 ;; Defined at:
 37018 ;;		line 10 in file "external_flash.c"
 37019 ;; Parameters:    Size  Location     Type
 37020 ;;  config          2    0[BANK0 ] PTR void 
 37021 ;;		 -> NULL(0), 
 37022 ;; Auto vars:     Size  Location     Type
 37023 ;;		None
 37024 ;; Return value:  Size  Location     Type
 37025 ;;                  2    0[BANK0 ] PTR struct .
 37026 ;; Registers used:
 37027 ;;		wreg, status,2, status,0
 37028 ;; Tracked objects:
 37029 ;;		On entry : 0/0
 37030 ;;		On exit  : 0/0
 37031 ;;		Unchanged: 0/0
 37032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37037 ;;Total ram usage:        2 bytes
 37038 ;; Hardware stack levels used:    1
 37039 ;; Hardware stack levels required when called:   10
 37040 ;; This function calls:
 37041 ;;		Nothing
 37042 ;; This function is called by:
 37043 ;;		_USBMSDInit
 37044 ;;		_MSDProcessCommand
 37045 ;; This function uses a non-reentrant model
 37046 ;;
 37047                           
 37048                           	psect	text152
 37049  0156C6                     __ptext152:
 37050                           	opt stack 0
 37051  0156C6                     _ExternalFlash_MediaInitialize:
 37052                           	opt stack 0
 37053                           
 37054                           ; BSR set to: 0
 37055                           ;Skip over the trampoline to the duplicate function for level 2
 37056  0156C6  B25F               	btfsc	btemp,1,c
 37057  0156C8  EFD5  F0AB         	goto	i2_ExternalFlash_MediaInitialize
 37058  0156CC                     _ExternalFlash_MediaInitialize$intlevel0:
 37059                           	opt stack 17
 37060                           
 37061                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 37062                           
 37063                           ;incstack = 0
 37064  0156CC  0102               	movlb	2	; () banked
 37065  0156CE  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 37066                           
 37067                           ; BSR set to: 2
 37068                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 37069  0156D0  0E02               	movlw	2
 37070  0156D2  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 37071  0156D4  0E00               	movlw	0
 37072  0156D6  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 37073                           
 37074                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 37075  0156D8  0E00               	movlw	0
 37076  0156DA  6F84               	movwf	_mediaInformation& (0+255),b
 37077                           
 37078                           ; BSR set to: 2
 37079                           ;external_flash.c: 15: return &mediaInformation;
 37080  0156DC  0E84               	movlw	low _mediaInformation
 37081  0156DE  0100               	movlb	0	; () banked
 37082  0156E0  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 37083  0156E2  0E02               	movlw	high _mediaInformation
 37084  0156E4  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 37085  0156E6  0012               	return	
 37086  0156E8                     __end_of_ExternalFlash_MediaInitialize:
 37087                           	opt stack 0
 37088                           tosu	equ	0xFFF
 37089                           tosh	equ	0xFFE
 37090                           tosl	equ	0xFFD
 37091                           pclath	equ	0xFFA
 37092                           tblptru	equ	0xFF8
 37093                           tblptrh	equ	0xFF7
 37094                           tblptrl	equ	0xFF6
 37095                           tablat	equ	0xFF5
 37096                           prodh	equ	0xFF4
 37097                           prodl	equ	0xFF3
 37098                           intcon	equ	0xFF2
 37099                           postinc0	equ	0xFEE
 37100                           wreg	equ	0xFE8
 37101                           indf1	equ	0xFE7
 37102                           postinc1	equ	0xFE6
 37103                           postdec1	equ	0xFE5
 37104                           plusw1	equ	0xFE3
 37105                           fsr1h	equ	0xFE2
 37106                           fsr1l	equ	0xFE1
 37107                           indf2	equ	0xFDF
 37108                           postinc2	equ	0xFDE
 37109                           postdec2	equ	0xFDD
 37110                           plusw2	equ	0xFDB
 37111                           fsr2h	equ	0xFDA
 37112                           fsr2l	equ	0xFD9
 37113                           status	equ	0xFD8
 37114                           
 37115 ;; *************** function _ExternalFlash_MediaDetect *****************
 37116 ;; Defined at:
 37117 ;;		line 29 in file "external_flash.c"
 37118 ;; Parameters:    Size  Location     Type
 37119 ;;  config          2    0[BANK0 ] PTR void 
 37120 ;;		 -> NULL(0), 
 37121 ;; Auto vars:     Size  Location     Type
 37122 ;;		None
 37123 ;; Return value:  Size  Location     Type
 37124 ;;                  1    wreg      unsigned char 
 37125 ;; Registers used:
 37126 ;;		wreg
 37127 ;; Tracked objects:
 37128 ;;		On entry : 0/0
 37129 ;;		On exit  : 0/0
 37130 ;;		Unchanged: 0/0
 37131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37136 ;;Total ram usage:        2 bytes
 37137 ;; Hardware stack levels used:    1
 37138 ;; Hardware stack levels required when called:   10
 37139 ;; This function calls:
 37140 ;;		Nothing
 37141 ;; This function is called by:
 37142 ;;		_USBMSDInit
 37143 ;;		_MSDProcessCommand
 37144 ;; This function uses a non-reentrant model
 37145 ;;
 37146                           
 37147                           	psect	text153
 37148  0158AE                     __ptext153:
 37149                           	opt stack 0
 37150  0158AE                     _ExternalFlash_MediaDetect:
 37151                           	opt stack 0
 37152                           
 37153                           ; BSR set to: 0
 37154                           ;Skip over the trampoline to the duplicate function for level 2
 37155  0158AE  B25F               	btfsc	btemp,1,c
 37156  0158B0  EF7C  F0AC         	goto	i2_ExternalFlash_MediaDetect
 37157  0158B4                     _ExternalFlash_MediaDetect$intlevel0:
 37158                           	opt stack 17
 37159                           
 37160                           ;external_flash.c: 31: return 1;
 37161                           
 37162                           ;incstack = 0
 37163  0158B4  0E01               	movlw	1
 37164  0158B6  0012               	return	
 37165  0158B8                     __end_of_ExternalFlash_MediaDetect:
 37166                           	opt stack 0
 37167                           tosu	equ	0xFFF
 37168                           tosh	equ	0xFFE
 37169                           tosl	equ	0xFFD
 37170                           pclath	equ	0xFFA
 37171                           tblptru	equ	0xFF8
 37172                           tblptrh	equ	0xFF7
 37173                           tblptrl	equ	0xFF6
 37174                           tablat	equ	0xFF5
 37175                           prodh	equ	0xFF4
 37176                           prodl	equ	0xFF3
 37177                           intcon	equ	0xFF2
 37178                           postinc0	equ	0xFEE
 37179                           wreg	equ	0xFE8
 37180                           indf1	equ	0xFE7
 37181                           postinc1	equ	0xFE6
 37182                           postdec1	equ	0xFE5
 37183                           plusw1	equ	0xFE3
 37184                           fsr1h	equ	0xFE2
 37185                           fsr1l	equ	0xFE1
 37186                           indf2	equ	0xFDF
 37187                           postinc2	equ	0xFDE
 37188                           postdec2	equ	0xFDD
 37189                           plusw2	equ	0xFDB
 37190                           fsr2h	equ	0xFDA
 37191                           fsr2l	equ	0xFD9
 37192                           status	equ	0xFD8
 37193                           
 37194 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 37195 ;; Defined at:
 37196 ;;		line 73 in file "app_device_custom_hid.c"
 37197 ;; Parameters:    Size  Location     Type
 37198 ;;		None
 37199 ;; Auto vars:     Size  Location     Type
 37200 ;;  idx             1    0        unsigned char 
 37201 ;; Return value:  Size  Location     Type
 37202 ;;                  1    wreg      void 
 37203 ;; Registers used:
 37204 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37205 ;; Tracked objects:
 37206 ;;		On entry : 0/0
 37207 ;;		On exit  : 0/0
 37208 ;;		Unchanged: 0/0
 37209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37214 ;;Total ram usage:        0 bytes
 37215 ;; Hardware stack levels used:    1
 37216 ;; Hardware stack levels required when called:   18
 37217 ;; This function calls:
 37218 ;;		_USBTransferOnePacket
 37219 ;;		_api_parse
 37220 ;;		_api_prepare
 37221 ;; This function is called by:
 37222 ;;		_main
 37223 ;; This function uses a non-reentrant model
 37224 ;;
 37225                           
 37226                           	psect	text154
 37227  013090                     __ptext154:
 37228                           	opt stack 0
 37229  013090                     _APP_DeviceCustomHIDTasks:
 37230                           	opt stack 12
 37231                           
 37232                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 37233                           
 37234                           ;incstack = 0
 37235  013090  0E20               	movlw	32
 37236  013092  605E               	cpfslt	_USBDeviceState,c	;volatile
 37237  013094  D001               	goto	l944
 37238  013096  0012               	return	
 37239  013098                     l944:
 37240                           
 37241                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 37242  013098  B265               	btfsc	3941,1,c	;volatile
 37243  01309A  0012               	return	
 37244                           
 37245                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 37246                           
 37247                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 37248  01309C  0101               	movlb	1	; () banked
 37249  01309E  5143               	movf	_USBOutHandle& (0+255),w,b
 37250  0130A0  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 37251  0130A2  B4D8               	btfsc	status,2,c
 37252  0130A4  D006               	goto	u17170
 37253                           
 37254                           ; BSR set to: 1
 37255  0130A6  C143  FFD9         	movff	_USBOutHandle,fsr2l
 37256  0130AA  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 37257  0130AE  BEDF               	btfsc	indf2,7,c
 37258  0130B0  0012               	return	
 37259  0130B2                     u17170:
 37260                           
 37261                           ; BSR set to: 1
 37262                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 37263                           
 37264                           ; BSR set to: 1
 37265  0130B2  5141               	movf	_USBInHandle& (0+255),w,b
 37266  0130B4  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37267  0130B6  B4D8               	btfsc	status,2,c
 37268  0130B8  D006               	goto	u17190
 37269                           
 37270                           ; BSR set to: 1
 37271  0130BA  C141  FFD9         	movff	_USBInHandle,fsr2l
 37272  0130BE  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 37273  0130C2  BEDF               	btfsc	indf2,7,c
 37274  0130C4  D01B               	goto	l950
 37275  0130C6                     u17190:
 37276                           
 37277                           ; BSR set to: 1
 37278                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 37279                           
 37280                           ; BSR set to: 1
 37281  0130C6  0E80               	movlw	low _ReceivedDataBuffer
 37282  0130C8  0100               	movlb	0	; () banked
 37283  0130CA  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 37284  0130CC  0E03               	movlw	high _ReceivedDataBuffer
 37285  0130CE  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 37286  0130D0  0E40               	movlw	low _ToSendDataBuffer
 37287  0130D2  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 37288  0130D4  0E03               	movlw	high _ToSendDataBuffer
 37289  0130D6  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 37290  0130D8  ECAA  F08E         	call	_api_prepare	;wreg free
 37291                           
 37292                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37293  0130DC  0E01               	movlw	1
 37294  0130DE  0100               	movlb	0	; () banked
 37295  0130E0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37296  0130E2  0E40               	movlw	low _ToSendDataBuffer
 37297  0130E4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37298  0130E6  0E03               	movlw	high _ToSendDataBuffer
 37299  0130E8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37300  0130EA  0E40               	movlw	64
 37301  0130EC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37302  0130EE  0E01               	movlw	1
 37303  0130F0  EC03  F087         	call	_USBTransferOnePacket
 37304  0130F4  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 37305  0130F8  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 37306  0130FC                     l950:
 37307                           
 37308                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 37309  0130FC  0E80               	movlw	low _ReceivedDataBuffer
 37310  0130FE  0100               	movlb	0	; () banked
 37311  013100  6FC6               	movwf	api_parse@inBuffer& (0+255),b
 37312  013102  0E03               	movlw	high _ReceivedDataBuffer
 37313  013104  6FC7               	movwf	(api_parse@inBuffer+1)& (0+255),b
 37314  013106  0E40               	movlw	64
 37315  013108  6FC8               	movwf	api_parse@receivedDataLength& (0+255),b
 37316  01310A  0E40               	movlw	low _ToSendDataBuffer
 37317  01310C  6FC9               	movwf	api_parse@outBuffer& (0+255),b
 37318  01310E  0E03               	movlw	high _ToSendDataBuffer
 37319  013110  6FCA               	movwf	(api_parse@outBuffer+1)& (0+255),b
 37320  013112  ECAF  F082         	call	_api_parse	;wreg free
 37321                           
 37322                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 37323  013116  0E00               	movlw	0
 37324  013118  0100               	movlb	0	; () banked
 37325  01311A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37326  01311C  0E80               	movlw	low _ReceivedDataBuffer
 37327  01311E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37328  013120  0E03               	movlw	high _ReceivedDataBuffer
 37329  013122  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37330  013124  0E40               	movlw	64
 37331  013126  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37332  013128  0E01               	movlw	1
 37333  01312A  EC03  F087         	call	_USBTransferOnePacket
 37334  01312E  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 37335  013132  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 37336  013136  0012               	return	
 37337  013138                     __end_of_APP_DeviceCustomHIDTasks:
 37338                           	opt stack 0
 37339                           tosu	equ	0xFFF
 37340                           tosh	equ	0xFFE
 37341                           tosl	equ	0xFFD
 37342                           pclath	equ	0xFFA
 37343                           tblptru	equ	0xFF8
 37344                           tblptrh	equ	0xFF7
 37345                           tblptrl	equ	0xFF6
 37346                           tablat	equ	0xFF5
 37347                           prodh	equ	0xFF4
 37348                           prodl	equ	0xFF3
 37349                           intcon	equ	0xFF2
 37350                           postinc0	equ	0xFEE
 37351                           wreg	equ	0xFE8
 37352                           indf1	equ	0xFE7
 37353                           postinc1	equ	0xFE6
 37354                           postdec1	equ	0xFE5
 37355                           plusw1	equ	0xFE3
 37356                           fsr1h	equ	0xFE2
 37357                           fsr1l	equ	0xFE1
 37358                           indf2	equ	0xFDF
 37359                           postinc2	equ	0xFDE
 37360                           postdec2	equ	0xFDD
 37361                           plusw2	equ	0xFDB
 37362                           fsr2h	equ	0xFDA
 37363                           fsr2l	equ	0xFD9
 37364                           status	equ	0xFD8
 37365                           
 37366 ;; *************** function _api_prepare *****************
 37367 ;; Defined at:
 37368 ;;		line 38 in file "api.c"
 37369 ;; Parameters:    Size  Location     Type
 37370 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 37371 ;;		 -> ReceivedDataBuffer(64), 
 37372 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 37373 ;;		 -> ToSendDataBuffer(64), 
 37374 ;; Auto vars:     Size  Location     Type
 37375 ;;  command         1   20[BANK0 ] enum E6715
 37376 ;; Return value:  Size  Location     Type
 37377 ;;                  1    wreg      void 
 37378 ;; Registers used:
 37379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37380 ;; Tracked objects:
 37381 ;;		On entry : 0/0
 37382 ;;		On exit  : 0/0
 37383 ;;		Unchanged: 0/0
 37384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37388 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37389 ;;Total ram usage:        5 bytes
 37390 ;; Hardware stack levels used:    1
 37391 ;; Hardware stack levels required when called:   12
 37392 ;; This function calls:
 37393 ;;		__fill_buffer_get_display
 37394 ;;		__fill_buffer_get_mode_details
 37395 ;;		__fill_buffer_get_status
 37396 ;;		_memcpy
 37397 ;; This function is called by:
 37398 ;;		_APP_DeviceCustomHIDTasks
 37399 ;; This function uses a non-reentrant model
 37400 ;;
 37401                           
 37402                           	psect	text155
 37403  011D54                     __ptext155:
 37404                           	opt stack 0
 37405  011D54                     _api_prepare:
 37406                           	opt stack 17
 37407                           
 37408                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 37409                           
 37410                           ;incstack = 0
 37411  011D54  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 37412  011D58  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 37413  011D5C  50DF               	movf	indf2,w,c
 37414  011D5E  0100               	movlb	0	; () banked
 37415  011D60  6F74               	movwf	api_prepare@command& (0+255),b
 37416                           
 37417                           ; BSR set to: 0
 37418                           ;api.c: 42: if(command>0x7F)
 37419  011D62  0E7F               	movlw	127
 37420  011D64  6574               	cpfsgt	api_prepare@command& (0+255),b
 37421  011D66  D051               	goto	l2243
 37422                           
 37423                           ; BSR set to: 0
 37424                           ;api.c: 49: outBuffer[0] = 0x99;
 37425                           
 37426                           ; BSR set to: 0
 37427                           
 37428                           ;api.c: 45: {;api.c: 48: default:
 37429                           
 37430                           ; BSR set to: 0
 37431                           ;api.c: 43: {;api.c: 44: switch(command)
 37432  011D68  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 37433  011D6C  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 37434  011D70  0E99               	movlw	153
 37435  011D72  6EDF               	movwf	indf2,c
 37436                           
 37437                           ; BSR set to: 0
 37438                           ;api.c: 50: outBuffer[1] = 0x99;
 37439  011D74  EE20 F001          	lfsr	2,1
 37440  011D78  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 37441  011D7A  26D9               	addwf	fsr2l,f,c
 37442  011D7C  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 37443  011D7E  22DA               	addwfc	fsr2h,f,c
 37444  011D80  0E99               	movlw	153
 37445  011D82  6EDF               	movwf	indf2,c
 37446                           
 37447                           ;api.c: 51: }
 37448  011D84  0012               	return	
 37449  011D86                     
 37450                           ; BSR set to: 0
 37451                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 37452                           
 37453                           ; BSR set to: 0
 37454  011D86  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 37455  011D8A  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 37456  011D8E  EC5D  F076         	call	__fill_buffer_get_status	;wreg free
 37457                           
 37458                           ;api.c: 65: break;
 37459  011D92  0012               	return	
 37460  011D94                     
 37461                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 37462  011D94  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 37463  011D98  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 37464  011D9C  0E00               	movlw	0
 37465  011D9E  0100               	movlb	0	; () banked
 37466  011DA0  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 37467  011DA2  EC30  F095         	call	__fill_buffer_get_display	;wreg free
 37468                           
 37469                           ;api.c: 70: break;
 37470  011DA6  0012               	return	
 37471  011DA8                     
 37472                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 37473  011DA8  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 37474  011DAC  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 37475  011DB0  0E01               	movlw	1
 37476  011DB2  0100               	movlb	0	; () banked
 37477  011DB4  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 37478  011DB6  EC30  F095         	call	__fill_buffer_get_display	;wreg free
 37479                           
 37480                           ;api.c: 75: break;
 37481  011DBA  0012               	return	
 37482  011DBC                     
 37483                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 37484  011DBC  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 37485  011DC0  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 37486  011DC4  EC39  F079         	call	__fill_buffer_get_mode_details	;wreg free
 37487                           
 37488                           ;api.c: 80: break;
 37489  011DC8  0012               	return	
 37490  011DCA                     
 37491                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 37492  011DCA  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 37493  011DCE  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 37494  011DD2  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 37495  011DD6  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 37496  011DDA  0E00               	movlw	0
 37497  011DDC  0100               	movlb	0	; () banked
 37498  011DDE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37499  011DE0  0E40               	movlw	64
 37500  011DE2  6F64               	movwf	memcpy@n& (0+255),b
 37501  011DE4  ECDA  F0A1         	call	_memcpy	;wreg free
 37502                           
 37503                           ;api.c: 85: break;
 37504  011DE8  0012               	return	
 37505  011DEA                     
 37506                           ;api.c: 88: outBuffer[0] = 0x99;
 37507  011DEA  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 37508  011DEE  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 37509  011DF2  0E99               	movlw	153
 37510  011DF4  6EDF               	movwf	indf2,c
 37511                           
 37512                           ;api.c: 89: outBuffer[1] = 0x99;
 37513  011DF6  0100               	movlb	0	; () banked
 37514  011DF8  EE20 F001          	lfsr	2,1
 37515  011DFC  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 37516  011DFE  26D9               	addwf	fsr2l,f,c
 37517  011E00  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 37518  011E02  22DA               	addwfc	fsr2h,f,c
 37519  011E04  0E99               	movlw	153
 37520  011E06  6EDF               	movwf	indf2,c
 37521                           
 37522                           ;api.c: 90: }
 37523  011E08  0012               	return	
 37524  011E0A                     l2243:
 37525                           
 37526                           ; BSR set to: 0
 37527                           
 37528                           ; BSR set to: 0
 37529  011E0A  5174               	movf	api_prepare@command& (0+255),w,b
 37530                           
 37531                           ; Switch size 1, requested type "space"
 37532                           ; Number of cases is 6, Range of values is 0 to 32
 37533                           ; switch strategies available:
 37534                           ; Name         Instructions Cycles
 37535                           ; simple_byte           19    10 (average)
 37536                           ;	Chosen strategy is simple_byte
 37537  011E0C  0A00               	xorlw	0	; case 0
 37538  011E0E  B4D8               	btfsc	status,2,c
 37539  011E10  0012               	return	
 37540  011E12  0A10               	xorlw	16	; case 16
 37541  011E14  B4D8               	btfsc	status,2,c
 37542  011E16  D7B7               	goto	l2246
 37543  011E18  0A01               	xorlw	1	; case 17
 37544  011E1A  B4D8               	btfsc	status,2,c
 37545  011E1C  D7BB               	goto	l2247
 37546  011E1E  0A03               	xorlw	3	; case 18
 37547  011E20  B4D8               	btfsc	status,2,c
 37548  011E22  D7C2               	goto	l2248
 37549  011E24  0A01               	xorlw	1	; case 19
 37550  011E26  B4D8               	btfsc	status,2,c
 37551  011E28  D7C9               	goto	l2249
 37552  011E2A  0A33               	xorlw	51	; case 32
 37553  011E2C  B4D8               	btfsc	status,2,c
 37554  011E2E  D7CD               	goto	l2250
 37555  011E30  D7DC               	goto	l2251
 37556  011E32                     __end_of_api_prepare:
 37557                           	opt stack 0
 37558                           tosu	equ	0xFFF
 37559                           tosh	equ	0xFFE
 37560                           tosl	equ	0xFFD
 37561                           pclath	equ	0xFFA
 37562                           tblptru	equ	0xFF8
 37563                           tblptrh	equ	0xFF7
 37564                           tblptrl	equ	0xFF6
 37565                           tablat	equ	0xFF5
 37566                           prodh	equ	0xFF4
 37567                           prodl	equ	0xFF3
 37568                           intcon	equ	0xFF2
 37569                           postinc0	equ	0xFEE
 37570                           wreg	equ	0xFE8
 37571                           indf1	equ	0xFE7
 37572                           postinc1	equ	0xFE6
 37573                           postdec1	equ	0xFE5
 37574                           plusw1	equ	0xFE3
 37575                           fsr1h	equ	0xFE2
 37576                           fsr1l	equ	0xFE1
 37577                           indf2	equ	0xFDF
 37578                           postinc2	equ	0xFDE
 37579                           postdec2	equ	0xFDD
 37580                           plusw2	equ	0xFDB
 37581                           fsr2h	equ	0xFDA
 37582                           fsr2l	equ	0xFD9
 37583                           status	equ	0xFD8
 37584                           
 37585 ;; *************** function __fill_buffer_get_status *****************
 37586 ;; Defined at:
 37587 ;;		line 171 in file "api.c"
 37588 ;; Parameters:    Size  Location     Type
 37589 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 37590 ;;		 -> ToSendDataBuffer(64), 
 37591 ;; Auto vars:     Size  Location     Type
 37592 ;;		None
 37593 ;; Return value:  Size  Location     Type
 37594 ;;                  1    wreg      void 
 37595 ;; Registers used:
 37596 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37597 ;; Tracked objects:
 37598 ;;		On entry : 0/0
 37599 ;;		On exit  : 0/0
 37600 ;;		Unchanged: 0/0
 37601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37606 ;;Total ram usage:        2 bytes
 37607 ;; Hardware stack levels used:    1
 37608 ;; Hardware stack levels required when called:   11
 37609 ;; This function calls:
 37610 ;;		_memcpy
 37611 ;; This function is called by:
 37612 ;;		_api_prepare
 37613 ;; This function uses a non-reentrant model
 37614 ;;
 37615                           
 37616                           	psect	text156
 37617  00ECBA                     __ptext156:
 37618                           	opt stack 0
 37619  00ECBA                     __fill_buffer_get_status:
 37620                           	opt stack 17
 37621                           
 37622                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 37623                           
 37624                           ;incstack = 0
 37625  00ECBA  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 37626  00ECBE  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 37627  00ECC2  0E10               	movlw	16
 37628  00ECC4  6EDF               	movwf	indf2,c
 37629                           
 37630                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 37631  00ECC6  0100               	movlb	0	; () banked
 37632  00ECC8  EE20 F001          	lfsr	2,1
 37633  00ECCC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37634  00ECCE  26D9               	addwf	fsr2l,f,c
 37635  00ECD0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37636  00ECD2  22DA               	addwfc	fsr2h,f,c
 37637  00ECD4  0EBC               	movlw	188
 37638  00ECD6  6EDF               	movwf	indf2,c
 37639                           
 37640                           ; BSR set to: 0
 37641                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 37642  00ECD8  EE20 F002          	lfsr	2,2
 37643  00ECDC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37644  00ECDE  26D9               	addwf	fsr2l,f,c
 37645  00ECE0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37646  00ECE2  22DA               	addwfc	fsr2h,f,c
 37647  00ECE4  0E26               	movlw	38
 37648  00ECE6  6EDF               	movwf	indf2,c
 37649                           
 37650                           ; BSR set to: 0
 37651                           ;api.c: 181: outBuffer[3] = 0x00;
 37652  00ECE8  EE20 F003          	lfsr	2,3
 37653  00ECEC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37654  00ECEE  26D9               	addwf	fsr2l,f,c
 37655  00ECF0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37656  00ECF2  22DA               	addwfc	fsr2h,f,c
 37657  00ECF4  0E00               	movlw	0
 37658  00ECF6  6EDF               	movwf	indf2,c
 37659                           
 37660                           ; BSR set to: 0
 37661                           ;api.c: 182: outBuffer[4] = 0x05;
 37662  00ECF8  EE20 F004          	lfsr	2,4
 37663  00ECFC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37664  00ECFE  26D9               	addwf	fsr2l,f,c
 37665  00ED00  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37666  00ED02  22DA               	addwfc	fsr2h,f,c
 37667  00ED04  0E05               	movlw	5
 37668  00ED06  6EDF               	movwf	indf2,c
 37669                           
 37670                           ; BSR set to: 0
 37671                           ;api.c: 183: outBuffer[5] = 0x07;
 37672  00ED08  EE20 F005          	lfsr	2,5
 37673  00ED0C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37674  00ED0E  26D9               	addwf	fsr2l,f,c
 37675  00ED10  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37676  00ED12  22DA               	addwfc	fsr2h,f,c
 37677  00ED14  0E07               	movlw	7
 37678  00ED16  6EDF               	movwf	indf2,c
 37679                           
 37680                           ; BSR set to: 0
 37681                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 37682  00ED18  EE20 F006          	lfsr	2,6
 37683  00ED1C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37684  00ED1E  26D9               	addwf	fsr2l,f,c
 37685  00ED20  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37686  00ED22  22DA               	addwfc	fsr2h,f,c
 37687  00ED24  C171  FFDF         	movff	_os,indf2	;volatile
 37688                           
 37689                           ; BSR set to: 0
 37690                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 37691  00ED28  EE20 F007          	lfsr	2,7
 37692  00ED2C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37693  00ED2E  26D9               	addwf	fsr2l,f,c
 37694  00ED30  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37695  00ED32  22DA               	addwfc	fsr2h,f,c
 37696  00ED34  C172  FFDF         	movff	_os+1,indf2	;volatile
 37697                           
 37698                           ; BSR set to: 0
 37699                           ;api.c: 188: outBuffer[8] = os.done;
 37700  00ED38  EE20 F008          	lfsr	2,8
 37701  00ED3C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37702  00ED3E  26D9               	addwf	fsr2l,f,c
 37703  00ED40  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37704  00ED42  22DA               	addwfc	fsr2h,f,c
 37705  00ED44  C173  FFDF         	movff	_os+2,indf2	;volatile
 37706                           
 37707                           ; BSR set to: 0
 37708                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 37709  00ED48  EE20 F009          	lfsr	2,9
 37710  00ED4C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37711  00ED4E  26D9               	addwf	fsr2l,f,c
 37712  00ED50  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37713  00ED52  22DA               	addwfc	fsr2h,f,c
 37714  00ED54  C174  FFDF         	movff	_os+3,indf2	;volatile
 37715                           
 37716                           ; BSR set to: 0
 37717                           ;api.c: 190: outBuffer[10] = os.button1;
 37718  00ED58  EE20 F00A          	lfsr	2,10
 37719  00ED5C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37720  00ED5E  26D9               	addwf	fsr2l,f,c
 37721  00ED60  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37722  00ED62  22DA               	addwfc	fsr2h,f,c
 37723  00ED64  C175  FFDF         	movff	_os+4,indf2	;volatile
 37724                           
 37725                           ; BSR set to: 0
 37726                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 37727  00ED68  EE20 F00B          	lfsr	2,11
 37728  00ED6C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37729  00ED6E  26D9               	addwf	fsr2l,f,c
 37730  00ED70  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37731  00ED72  22DA               	addwfc	fsr2h,f,c
 37732  00ED74  C176  FFDF         	movff	_os+5,indf2	;volatile
 37733                           
 37734                           ; BSR set to: 0
 37735                           ;api.c: 192: outBuffer[12] = os.button2;
 37736  00ED78  EE20 F00C          	lfsr	2,12
 37737  00ED7C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37738  00ED7E  26D9               	addwf	fsr2l,f,c
 37739  00ED80  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37740  00ED82  22DA               	addwfc	fsr2h,f,c
 37741  00ED84  C177  FFDF         	movff	_os+6,indf2	;volatile
 37742                           
 37743                           ; BSR set to: 0
 37744                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 37745  00ED88  0E0D               	movlw	13
 37746  00ED8A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37747  00ED8C  6F60               	movwf	memcpy@d1& (0+255),b
 37748  00ED8E  0E00               	movlw	0
 37749  00ED90  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37750  00ED92  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37751  00ED94  0E78               	movlw	low (_os+7)
 37752  00ED96  6F62               	movwf	memcpy@s1& (0+255),b
 37753  00ED98  0E01               	movlw	high (_os+7)
 37754  00ED9A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37755  00ED9C  0E00               	movlw	0
 37756  00ED9E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37757  00EDA0  0E04               	movlw	4
 37758  00EDA2  6F64               	movwf	memcpy@n& (0+255),b
 37759  00EDA4  ECDA  F0A1         	call	_memcpy	;wreg free
 37760                           
 37761                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 37762  00EDA8  0E11               	movlw	17
 37763  00EDAA  0100               	movlb	0	; () banked
 37764  00EDAC  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37765  00EDAE  6F60               	movwf	memcpy@d1& (0+255),b
 37766  00EDB0  0E00               	movlw	0
 37767  00EDB2  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37768  00EDB4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37769  00EDB6  0E7C               	movlw	low (_os+11)
 37770  00EDB8  6F62               	movwf	memcpy@s1& (0+255),b
 37771  00EDBA  0E01               	movlw	high (_os+11)
 37772  00EDBC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37773  00EDBE  0E00               	movlw	0
 37774  00EDC0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37775  00EDC2  0E04               	movlw	4
 37776  00EDC4  6F64               	movwf	memcpy@n& (0+255),b
 37777  00EDC6  ECDA  F0A1         	call	_memcpy	;wreg free
 37778                           
 37779                           ;api.c: 203: outBuffer[21] = os.displayState;
 37780  00EDCA  0100               	movlb	0	; () banked
 37781  00EDCC  EE20 F015          	lfsr	2,21
 37782  00EDD0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37783  00EDD2  26D9               	addwf	fsr2l,f,c
 37784  00EDD4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37785  00EDD6  22DA               	addwfc	fsr2h,f,c
 37786  00EDD8  C17E  FFDF         	movff	_os+13,indf2	;volatile
 37787                           
 37788                           ; BSR set to: 0
 37789                           ;api.c: 204: outBuffer[22] = os.beep_count;
 37790  00EDDC  EE20 F016          	lfsr	2,22
 37791  00EDE0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37792  00EDE2  26D9               	addwf	fsr2l,f,c
 37793  00EDE4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37794  00EDE6  22DA               	addwfc	fsr2h,f,c
 37795  00EDE8  C197  FFDF         	movff	_os+38,indf2	;volatile
 37796                           
 37797                           ; BSR set to: 0
 37798                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 37799  00EDEC  EE20 F017          	lfsr	2,23
 37800  00EDF0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37801  00EDF2  26D9               	addwf	fsr2l,f,c
 37802  00EDF4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37803  00EDF6  22DA               	addwfc	fsr2h,f,c
 37804  00EDF8  C198  FFDF         	movff	_os+39,indf2	;volatile
 37805                           
 37806                           ; BSR set to: 0
 37807                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 37808  00EDFC  EE20 F018          	lfsr	2,24
 37809  00EE00  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37810  00EE02  26D9               	addwf	fsr2l,f,c
 37811  00EE04  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37812  00EE06  22DA               	addwfc	fsr2h,f,c
 37813  00EE08  0101               	movlb	1	; () banked
 37814  00EE0A  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 37815  00EE0C  6EDF               	movwf	indf2,c
 37816                           
 37817                           ; BSR set to: 1
 37818                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 37819  00EE0E  0100               	movlb	0	; () banked
 37820  00EE10  EE20 F019          	lfsr	2,25
 37821  00EE14  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37822  00EE16  26D9               	addwf	fsr2l,f,c
 37823  00EE18  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37824  00EE1A  22DA               	addwfc	fsr2h,f,c
 37825  00EE1C  C19A  FFDF         	movff	_os+41,indf2	;volatile
 37826                           
 37827                           ; BSR set to: 0
 37828                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 37829  00EE20  EE20 F01A          	lfsr	2,26
 37830  00EE24  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37831  00EE26  26D9               	addwf	fsr2l,f,c
 37832  00EE28  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37833  00EE2A  22DA               	addwfc	fsr2h,f,c
 37834  00EE2C  0101               	movlb	1	; () banked
 37835  00EE2E  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 37836  00EE30  6EDF               	movwf	indf2,c
 37837                           
 37838                           ; BSR set to: 1
 37839                           ;api.c: 209: outBuffer[27] = os.fan_on;
 37840  00EE32  0100               	movlb	0	; () banked
 37841  00EE34  EE20 F01B          	lfsr	2,27
 37842  00EE38  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37843  00EE3A  26D9               	addwf	fsr2l,f,c
 37844  00EE3C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37845  00EE3E  22DA               	addwfc	fsr2h,f,c
 37846  00EE40  C19F  FFDF         	movff	_os+46,indf2	;volatile
 37847                           
 37848                           ; BSR set to: 0
 37849                           ;api.c: 210: outBuffer[28] = os.brake_on;
 37850  00EE44  EE20 F01C          	lfsr	2,28
 37851  00EE48  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37852  00EE4A  26D9               	addwf	fsr2l,f,c
 37853  00EE4C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37854  00EE4E  22DA               	addwfc	fsr2h,f,c
 37855  00EE50  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 37856                           
 37857                           ; BSR set to: 0
 37858                           ;api.c: 211: outBuffer[29] = os.busy;
 37859  00EE54  EE20 F01D          	lfsr	2,29
 37860  00EE58  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37861  00EE5A  26D9               	addwf	fsr2l,f,c
 37862  00EE5C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37863  00EE5E  22DA               	addwfc	fsr2h,f,c
 37864  00EE60  C17F  FFDF         	movff	_os+14,indf2	;volatile
 37865                           
 37866                           ; BSR set to: 0
 37867                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 37868  00EE64  EE20 F01E          	lfsr	2,30
 37869  00EE68  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37870  00EE6A  26D9               	addwf	fsr2l,f,c
 37871  00EE6C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37872  00EE6E  22DA               	addwfc	fsr2h,f,c
 37873  00EE70  C194  FFDF         	movff	_os+35,indf2	;volatile
 37874                           
 37875                           ; BSR set to: 0
 37876                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 37877  00EE74  EE20 F01F          	lfsr	2,31
 37878  00EE78  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37879  00EE7A  26D9               	addwf	fsr2l,f,c
 37880  00EE7C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37881  00EE7E  22DA               	addwfc	fsr2h,f,c
 37882  00EE80  0101               	movlb	1	; () banked
 37883  00EE82  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 37884  00EE84  6EDF               	movwf	indf2,c
 37885                           
 37886                           ; BSR set to: 1
 37887                           ;api.c: 228: memcpy(&outBuffer[42], &config, 22);
 37888  00EE86  0E2A               	movlw	42
 37889  00EE88  0100               	movlb	0	; () banked
 37890  00EE8A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37891  00EE8C  6F60               	movwf	memcpy@d1& (0+255),b
 37892  00EE8E  0E00               	movlw	0
 37893  00EE90  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37894  00EE92  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37895  00EE94  0EA1               	movlw	low _config
 37896  00EE96  6F62               	movwf	memcpy@s1& (0+255),b
 37897  00EE98  0E01               	movlw	high _config
 37898  00EE9A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37899  00EE9C  0E00               	movlw	0
 37900  00EE9E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37901  00EEA0  0E16               	movlw	22
 37902  00EEA2  6F64               	movwf	memcpy@n& (0+255),b
 37903  00EEA4  ECDA  F0A1         	call	_memcpy	;wreg free
 37904  00EEA8  0012               	return		;funcret
 37905  00EEAA                     __end_of__fill_buffer_get_status:
 37906                           	opt stack 0
 37907                           tosu	equ	0xFFF
 37908                           tosh	equ	0xFFE
 37909                           tosl	equ	0xFFD
 37910                           pclath	equ	0xFFA
 37911                           tblptru	equ	0xFF8
 37912                           tblptrh	equ	0xFF7
 37913                           tblptrl	equ	0xFF6
 37914                           tablat	equ	0xFF5
 37915                           prodh	equ	0xFF4
 37916                           prodl	equ	0xFF3
 37917                           intcon	equ	0xFF2
 37918                           postinc0	equ	0xFEE
 37919                           wreg	equ	0xFE8
 37920                           indf1	equ	0xFE7
 37921                           postinc1	equ	0xFE6
 37922                           postdec1	equ	0xFE5
 37923                           plusw1	equ	0xFE3
 37924                           fsr1h	equ	0xFE2
 37925                           fsr1l	equ	0xFE1
 37926                           indf2	equ	0xFDF
 37927                           postinc2	equ	0xFDE
 37928                           postdec2	equ	0xFDD
 37929                           plusw2	equ	0xFDB
 37930                           fsr2h	equ	0xFDA
 37931                           fsr2l	equ	0xFD9
 37932                           status	equ	0xFD8
 37933                           
 37934 ;; *************** function _memcpy *****************
 37935 ;; Defined at:
 37936 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 37937 ;; Parameters:    Size  Location     Type
 37938 ;;  d1              2    0[BANK0 ] PTR void 
 37939 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 37940 ;;		 -> msd_buffer(512), SetupPkt(8), 
 37941 ;;  s1              2    2[BANK0 ] PTR const void 
 37942 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 37943 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 37944 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 37945 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 37946 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 37947 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 37948 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 37949 ;;  n               2    4[BANK0 ] unsigned int 
 37950 ;; Auto vars:     Size  Location     Type
 37951 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 37952 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 37953 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 37954 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 37955 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 37956 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 37957 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 37958 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 37959 ;;  d               2    6[BANK0 ] PTR unsigned char 
 37960 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 37961 ;;		 -> msd_buffer(512), SetupPkt(8), 
 37962 ;;  tmp             1   10[BANK0 ] unsigned char 
 37963 ;; Return value:  Size  Location     Type
 37964 ;;                  2    0[BANK0 ] PTR void 
 37965 ;; Registers used:
 37966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37967 ;; Tracked objects:
 37968 ;;		On entry : 0/0
 37969 ;;		On exit  : 0/0
 37970 ;;		Unchanged: 0/0
 37971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37972 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37973 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37975 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37976 ;;Total ram usage:       11 bytes
 37977 ;; Hardware stack levels used:    1
 37978 ;; Hardware stack levels required when called:   10
 37979 ;; This function calls:
 37980 ;;		Nothing
 37981 ;; This function is called by:
 37982 ;;		_MSDProcessCommandMediaPresent
 37983 ;;		__display_start
 37984 ;;		_display_prepare
 37985 ;;		__flash_set_page_size
 37986 ;;		_fat_create_file
 37987 ;;		_api_prepare
 37988 ;;		__fill_buffer_get_status
 37989 ;; This function uses a non-reentrant model
 37990 ;;
 37991                           
 37992                           	psect	text157
 37993  0143B4                     __ptext157:
 37994                           	opt stack 0
 37995  0143B4                     _memcpy:
 37996                           	opt stack 17
 37997                           
 37998                           ;incstack = 0
 37999  0143B4  C062  F068         	movff	memcpy@s1,memcpy@s
 38000  0143B8  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 38001  0143BC  C060  F066         	movff	memcpy@d1,memcpy@d
 38002  0143C0  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 38003  0143C4  D01D               	goto	l3723
 38004  0143C6                     l12995:
 38005  0143C6  C068  FFF6         	movff	memcpy@s,tblptrl
 38006  0143CA  C069  FFF7         	movff	memcpy@s+1,tblptrh
 38007  0143CE  0E00               	movlw	low (__mediumconst shr (0+16))
 38008  0143D0  6EF8               	movwf	tblptru,c
 38009  0143D2  0E0E               	movlw	(high __ramtop+-1)
 38010  0143D4  64F7               	cpfsgt	tblptrh,c
 38011  0143D6  D003               	bra	u11447
 38012  0143D8  0008               	tblrd		*
 38013  0143DA  50F5               	movf	tablat,w,c
 38014  0143DC  D005               	bra	u11440
 38015  0143DE                     u11447:
 38016  0143DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 38017  0143E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 38018  0143E6  50EF               	movf	indf0,w,c
 38019  0143E8                     u11440:
 38020  0143E8  0100               	movlb	0	; () banked
 38021  0143EA  6F6A               	movwf	memcpy@tmp& (0+255),b
 38022                           
 38023                           ; BSR set to: 0
 38024  0143EC  4B68               	infsnz	memcpy@s& (0+255),f,b
 38025  0143EE  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 38026                           
 38027                           ; BSR set to: 0
 38028  0143F0  C066  FFD9         	movff	memcpy@d,fsr2l
 38029  0143F4  C067  FFDA         	movff	memcpy@d+1,fsr2h
 38030  0143F8  C06A  FFDF         	movff	memcpy@tmp,indf2
 38031                           
 38032                           ; BSR set to: 0
 38033  0143FC  4B66               	infsnz	memcpy@d& (0+255),f,b
 38034  0143FE  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 38035  014400                     l3723:
 38036                           
 38037                           ; BSR set to: 0
 38038  014400  0100               	movlb	0	; () banked
 38039  014402  0764               	decf	memcpy@n& (0+255),f,b
 38040  014404  A0D8               	btfss	status,0,c
 38041  014406  0765               	decf	(memcpy@n+1)& (0+255),f,b
 38042  014408  2964               	incf	memcpy@n& (0+255),w,b
 38043  01440A  E1DD               	bnz	l12995
 38044  01440C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 38045  01440E  B4D8               	btfsc	status,2,c
 38046  014410  0012               	return	
 38047  014412  D7D9               	goto	l3724
 38048  014414                     __end_of_memcpy:
 38049                           	opt stack 0
 38050                           tosu	equ	0xFFF
 38051                           tosh	equ	0xFFE
 38052                           tosl	equ	0xFFD
 38053                           pclath	equ	0xFFA
 38054                           tblptru	equ	0xFF8
 38055                           tblptrh	equ	0xFF7
 38056                           tblptrl	equ	0xFF6
 38057                           tablat	equ	0xFF5
 38058                           prodh	equ	0xFF4
 38059                           prodl	equ	0xFF3
 38060                           intcon	equ	0xFF2
 38061                           indf0	equ	0xFEF
 38062                           postinc0	equ	0xFEE
 38063                           fsr0h	equ	0xFEA
 38064                           fsr0l	equ	0xFE9
 38065                           wreg	equ	0xFE8
 38066                           indf1	equ	0xFE7
 38067                           postinc1	equ	0xFE6
 38068                           postdec1	equ	0xFE5
 38069                           plusw1	equ	0xFE3
 38070                           fsr1h	equ	0xFE2
 38071                           fsr1l	equ	0xFE1
 38072                           indf2	equ	0xFDF
 38073                           postinc2	equ	0xFDE
 38074                           postdec2	equ	0xFDD
 38075                           plusw2	equ	0xFDB
 38076                           fsr2h	equ	0xFDA
 38077                           fsr2l	equ	0xFD9
 38078                           status	equ	0xFD8
 38079                           
 38080 ;; *************** function __fill_buffer_get_mode_details *****************
 38081 ;; Defined at:
 38082 ;;		line 273 in file "api.c"
 38083 ;; Parameters:    Size  Location     Type
 38084 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 38085 ;;		 -> ToSendDataBuffer(64), 
 38086 ;; Auto vars:     Size  Location     Type
 38087 ;;		None
 38088 ;; Return value:  Size  Location     Type
 38089 ;;                  1    wreg      void 
 38090 ;; Registers used:
 38091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38092 ;; Tracked objects:
 38093 ;;		On entry : 0/0
 38094 ;;		On exit  : 0/0
 38095 ;;		Unchanged: 0/0
 38096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38100 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38101 ;;Total ram usage:        4 bytes
 38102 ;; Hardware stack levels used:    1
 38103 ;; Hardware stack levels required when called:   10
 38104 ;; This function calls:
 38105 ;;		Nothing
 38106 ;; This function is called by:
 38107 ;;		_api_prepare
 38108 ;; This function uses a non-reentrant model
 38109 ;;
 38110                           
 38111                           	psect	text158
 38112  00F272                     __ptext158:
 38113                           	opt stack 0
 38114  00F272                     __fill_buffer_get_mode_details:
 38115                           	opt stack 18
 38116                           
 38117                           ;api.c: 276: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 38118                           
 38119                           ; BSR set to: 0
 38120                           ;incstack = 0
 38121  00F272  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 38122  00F276  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 38123  00F27A  0E13               	movlw	19
 38124  00F27C  6EDF               	movwf	indf2,c
 38125                           
 38126                           ;api.c: 279: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38127  00F27E  0100               	movlb	0	; () banked
 38128  00F280  EE20 F001          	lfsr	2,1
 38129  00F284  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38130  00F286  26D9               	addwf	fsr2l,f,c
 38131  00F288  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38132  00F28A  22DA               	addwfc	fsr2h,f,c
 38133  00F28C  0EBC               	movlw	188
 38134  00F28E  6EDF               	movwf	indf2,c
 38135                           
 38136                           ; BSR set to: 0
 38137                           ;api.c: 280: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38138  00F290  EE20 F002          	lfsr	2,2
 38139  00F294  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38140  00F296  26D9               	addwf	fsr2l,f,c
 38141  00F298  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38142  00F29A  22DA               	addwfc	fsr2h,f,c
 38143  00F29C  0E26               	movlw	38
 38144  00F29E  6EDF               	movwf	indf2,c
 38145                           
 38146                           ; BSR set to: 0
 38147                           ;api.c: 283: outBuffer[3] = os.displayState;
 38148  00F2A0  EE20 F003          	lfsr	2,3
 38149  00F2A4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38150  00F2A6  26D9               	addwf	fsr2l,f,c
 38151  00F2A8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38152  00F2AA  22DA               	addwfc	fsr2h,f,c
 38153  00F2AC  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38154                           
 38155                           ;api.c: 285: switch(os.displayState & 0x0F)
 38156  00F2B0  D090               	goto	l2286
 38157  00F2B2                     
 38158                           ; BSR set to: 0
 38159                           ;api.c: 291: case DISPLAY_STATE_SETUP2:;api.c: 292: outBuffer[4] = os.setup_step_size;
 38160                           
 38161                           ; BSR set to: 0
 38162                           
 38163                           ; BSR set to: 0
 38164  00F2B2  EE20 F004          	lfsr	2,4
 38165  00F2B6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38166  00F2B8  26D9               	addwf	fsr2l,f,c
 38167  00F2BA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38168  00F2BC  22DA               	addwfc	fsr2h,f,c
 38169  00F2BE  C181  FFDF         	movff	_os+16,indf2	;volatile
 38170                           
 38171                           ;api.c: 293: break;
 38172  00F2C2  0012               	return	
 38173  00F2C4                     
 38174                           ; BSR set to: 0
 38175                           ;api.c: 296: case DISPLAY_STATE_DIVIDE2:;api.c: 298: outBuffer[4] = os.divide_step_size;
 38176                           
 38177                           ; BSR set to: 0
 38178                           
 38179                           ; BSR set to: 0
 38180  00F2C4  EE20 F004          	lfsr	2,4
 38181  00F2C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38182  00F2CA  26D9               	addwf	fsr2l,f,c
 38183  00F2CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38184  00F2CE  22DA               	addwfc	fsr2h,f,c
 38185  00F2D0  C186  FFDF         	movff	_os+21,indf2	;volatile
 38186                           
 38187                           ;api.c: 299: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 38188  00F2D4  EE20 F005          	lfsr	2,5
 38189  00F2D8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38190  00F2DA  26D9               	addwf	fsr2l,f,c
 38191  00F2DC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38192  00F2DE  22DA               	addwfc	fsr2h,f,c
 38193  00F2E0  0101               	movlb	1	; () banked
 38194  00F2E2  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 38195  00F2E4  6EDF               	movwf	indf2,c
 38196                           
 38197                           ;api.c: 300: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 38198  00F2E6  0100               	movlb	0	; () banked
 38199  00F2E8  EE20 F006          	lfsr	2,6
 38200  00F2EC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38201  00F2EE  26D9               	addwf	fsr2l,f,c
 38202  00F2F0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38203  00F2F2  22DA               	addwfc	fsr2h,f,c
 38204  00F2F4  C184  FFDF         	movff	_os+19,indf2	;volatile
 38205                           
 38206                           ;api.c: 301: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 38207  00F2F8  EE20 F007          	lfsr	2,7
 38208  00F2FC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38209  00F2FE  26D9               	addwf	fsr2l,f,c
 38210  00F300  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38211  00F302  22DA               	addwfc	fsr2h,f,c
 38212  00F304  0101               	movlb	1	; () banked
 38213  00F306  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 38214  00F308  6EDF               	movwf	indf2,c
 38215                           
 38216                           ;api.c: 302: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 38217  00F30A  0100               	movlb	0	; () banked
 38218  00F30C  EE20 F008          	lfsr	2,8
 38219  00F310  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38220  00F312  26D9               	addwf	fsr2l,f,c
 38221  00F314  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38222  00F316  22DA               	addwfc	fsr2h,f,c
 38223  00F318  C189  FFDF         	movff	_os+24,indf2	;volatile
 38224                           
 38225                           ;api.c: 303: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 38226  00F31C  EE20 F009          	lfsr	2,9
 38227  00F320  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38228  00F322  26D9               	addwf	fsr2l,f,c
 38229  00F324  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38230  00F326  22DA               	addwfc	fsr2h,f,c
 38231  00F328  0101               	movlb	1	; () banked
 38232  00F32A  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 38233  00F32C  6EDF               	movwf	indf2,c
 38234                           
 38235                           ;api.c: 304: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 38236  00F32E  0100               	movlb	0	; () banked
 38237  00F330  EE20 F00A          	lfsr	2,10
 38238  00F334  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38239  00F336  26D9               	addwf	fsr2l,f,c
 38240  00F338  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38241  00F33A  22DA               	addwfc	fsr2h,f,c
 38242  00F33C  C187  FFDF         	movff	_os+22,indf2	;volatile
 38243                           
 38244                           ;api.c: 305: break;
 38245  00F340  0012               	return	
 38246  00F342                     
 38247                           ; BSR set to: 0
 38248                           ;api.c: 308: case DISPLAY_STATE_ARC2:;api.c: 309: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 38249                           
 38250                           ; BSR set to: 0
 38251                           
 38252                           ; BSR set to: 0
 38253  00F342  EE20 F004          	lfsr	2,4
 38254  00F346  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38255  00F348  26D9               	addwf	fsr2l,f,c
 38256  00F34A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38257  00F34C  22DA               	addwfc	fsr2h,f,c
 38258  00F34E  0101               	movlb	1	; () banked
 38259  00F350  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 38260  00F352  6EDF               	movwf	indf2,c
 38261                           
 38262                           ;api.c: 310: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 38263  00F354  0100               	movlb	0	; () banked
 38264  00F356  EE20 F005          	lfsr	2,5
 38265  00F35A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38266  00F35C  26D9               	addwf	fsr2l,f,c
 38267  00F35E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38268  00F360  22DA               	addwfc	fsr2h,f,c
 38269  00F362  C18B  FFDF         	movff	_os+26,indf2	;volatile
 38270                           
 38271                           ;api.c: 311: outBuffer[6] = os.arc_direction;
 38272  00F366  EE20 F006          	lfsr	2,6
 38273  00F36A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38274  00F36C  26D9               	addwf	fsr2l,f,c
 38275  00F36E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38276  00F370  22DA               	addwfc	fsr2h,f,c
 38277  00F372  C193  FFDF         	movff	_os+34,indf2	;volatile
 38278                           
 38279                           ;api.c: 312: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 38280  00F376  EE20 F007          	lfsr	2,7
 38281  00F37A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38282  00F37C  26D9               	addwf	fsr2l,f,c
 38283  00F37E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38284  00F380  22DA               	addwfc	fsr2h,f,c
 38285  00F382  0101               	movlb	1	; () banked
 38286  00F384  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 38287  00F386  6EDF               	movwf	indf2,c
 38288                           
 38289                           ;api.c: 313: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 38290  00F388  0100               	movlb	0	; () banked
 38291  00F38A  EE20 F008          	lfsr	2,8
 38292  00F38E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38293  00F390  26D9               	addwf	fsr2l,f,c
 38294  00F392  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38295  00F394  22DA               	addwfc	fsr2h,f,c
 38296  00F396  C191  FFDF         	movff	_os+32,indf2	;volatile
 38297                           
 38298                           ; BSR set to: 0
 38299                           ;api.c: 317: break;
 38300                           
 38301                           ;api.c: 316: case DISPLAY_STATE_ZERO:
 38302                           
 38303                           ;api.c: 314: break;
 38304  00F39A  0012               	return	
 38305  00F39C                     
 38306                           ; BSR set to: 0
 38307                           ;api.c: 320: outBuffer[4] = os.manual_direction;
 38308                           
 38309                           ; BSR set to: 0
 38310  00F39C  EE20 F004          	lfsr	2,4
 38311  00F3A0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38312  00F3A2  26D9               	addwf	fsr2l,f,c
 38313  00F3A4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38314  00F3A6  22DA               	addwfc	fsr2h,f,c
 38315  00F3A8  C196  FFDF         	movff	_os+37,indf2	;volatile
 38316                           
 38317                           ;api.c: 321: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 38318  00F3AC  EE20 F005          	lfsr	2,5
 38319  00F3B0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38320  00F3B2  26D9               	addwf	fsr2l,f,c
 38321  00F3B4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38322  00F3B6  22DA               	addwfc	fsr2h,f,c
 38323  00F3B8  0101               	movlb	1	; () banked
 38324  00F3BA  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 38325  00F3BC  6EDF               	movwf	indf2,c
 38326                           
 38327                           ;api.c: 322: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 38328  00F3BE  0100               	movlb	0	; () banked
 38329  00F3C0  EE20 F006          	lfsr	2,6
 38330  00F3C4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38331  00F3C6  26D9               	addwf	fsr2l,f,c
 38332  00F3C8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38333  00F3CA  22DA               	addwfc	fsr2h,f,c
 38334  00F3CC  C194  FFDF         	movff	_os+35,indf2	;volatile
 38335                           
 38336                           ; BSR set to: 0
 38337                           ;api.c: 324: }
 38338                           
 38339                           ;api.c: 323: break;
 38340  00F3D0  0012               	return	
 38341  00F3D2                     l2286:
 38342                           
 38343                           ; BSR set to: 0
 38344                           
 38345                           ; BSR set to: 0
 38346  00F3D2  0101               	movlb	1	; () banked
 38347  00F3D4  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 38348  00F3D6  0B0F               	andlw	15
 38349  00F3D8  0100               	movlb	0	; () banked
 38350  00F3DA  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 38351  00F3DC  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 38352                           
 38353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38354                           ; Switch size 1, requested type "space"
 38355                           ; Number of cases is 1, Range of values is 0 to 0
 38356                           ; switch strategies available:
 38357                           ; Name         Instructions Cycles
 38358                           ; simple_byte            4     3 (average)
 38359                           ;	Chosen strategy is simple_byte
 38360  00F3DE  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 38361  00F3E0  0A00               	xorlw	0	; case 0
 38362  00F3E2  A4D8               	btfss	status,2,c
 38363  00F3E4  0012               	return	
 38364                           
 38365                           ; BSR set to: 0
 38366                           ; Switch size 1, requested type "space"
 38367                           ; Number of cases is 9, Range of values is 0 to 128
 38368                           ; switch strategies available:
 38369                           ; Name         Instructions Cycles
 38370                           ; simple_byte           28    15 (average)
 38371                           ;	Chosen strategy is simple_byte
 38372  00F3E6  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 38373  00F3E8  0A00               	xorlw	0	; case 0
 38374  00F3EA  B4D8               	btfsc	status,2,c
 38375  00F3EC  0012               	return	
 38376  00F3EE  0A10               	xorlw	16	; case 16
 38377  00F3F0  B4D8               	btfsc	status,2,c
 38378  00F3F2  D75F               	goto	l2289
 38379  00F3F4  0A30               	xorlw	48	; case 32
 38380  00F3F6  B4D8               	btfsc	status,2,c
 38381  00F3F8  D75C               	goto	l2289
 38382  00F3FA  0A10               	xorlw	16	; case 48
 38383  00F3FC  B4D8               	btfsc	status,2,c
 38384  00F3FE  D762               	goto	l2291
 38385  00F400  0A70               	xorlw	112	; case 64
 38386  00F402  B4D8               	btfsc	status,2,c
 38387  00F404  D75F               	goto	l2291
 38388  00F406  0A10               	xorlw	16	; case 80
 38389  00F408  B4D8               	btfsc	status,2,c
 38390  00F40A  D79B               	goto	l2293
 38391  00F40C  0A30               	xorlw	48	; case 96
 38392  00F40E  B4D8               	btfsc	status,2,c
 38393  00F410  D798               	goto	l2293
 38394  00F412  0A10               	xorlw	16	; case 112
 38395  00F414  B4D8               	btfsc	status,2,c
 38396  00F416  0012               	return	
 38397  00F418  0AF0               	xorlw	240	; case 128
 38398  00F41A  A4D8               	btfss	status,2,c
 38399  00F41C  0012               	return	
 38400  00F41E  D7BE               	goto	l2296
 38401  00F420                     __end_of__fill_buffer_get_mode_details:
 38402                           	opt stack 0
 38403                           tosu	equ	0xFFF
 38404                           tosh	equ	0xFFE
 38405                           tosl	equ	0xFFD
 38406                           pclath	equ	0xFFA
 38407                           tblptru	equ	0xFF8
 38408                           tblptrh	equ	0xFF7
 38409                           tblptrl	equ	0xFF6
 38410                           tablat	equ	0xFF5
 38411                           prodh	equ	0xFF4
 38412                           prodl	equ	0xFF3
 38413                           intcon	equ	0xFF2
 38414                           indf0	equ	0xFEF
 38415                           postinc0	equ	0xFEE
 38416                           fsr0h	equ	0xFEA
 38417                           fsr0l	equ	0xFE9
 38418                           wreg	equ	0xFE8
 38419                           indf1	equ	0xFE7
 38420                           postinc1	equ	0xFE6
 38421                           postdec1	equ	0xFE5
 38422                           plusw1	equ	0xFE3
 38423                           fsr1h	equ	0xFE2
 38424                           fsr1l	equ	0xFE1
 38425                           indf2	equ	0xFDF
 38426                           postinc2	equ	0xFDE
 38427                           postdec2	equ	0xFDD
 38428                           plusw2	equ	0xFDB
 38429                           fsr2h	equ	0xFDA
 38430                           fsr2l	equ	0xFD9
 38431                           status	equ	0xFD8
 38432                           
 38433 ;; *************** function __fill_buffer_get_display *****************
 38434 ;; Defined at:
 38435 ;;		line 232 in file "api.c"
 38436 ;; Parameters:    Size  Location     Type
 38437 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 38438 ;;		 -> ToSendDataBuffer(64), 
 38439 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 38440 ;; Auto vars:     Size  Location     Type
 38441 ;;  position        1   15[BANK0 ] unsigned char 
 38442 ;;  start_line      1   14[BANK0 ] unsigned char 
 38443 ;;  line            1   13[BANK0 ] unsigned char 
 38444 ;;  cntr            1   12[BANK0 ] unsigned char 
 38445 ;; Return value:  Size  Location     Type
 38446 ;;                  1    wreg      void 
 38447 ;; Registers used:
 38448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38449 ;; Tracked objects:
 38450 ;;		On entry : 0/0
 38451 ;;		On exit  : 0/0
 38452 ;;		Unchanged: 0/0
 38453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38454 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38455 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38456 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38457 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38458 ;;Total ram usage:       12 bytes
 38459 ;; Hardware stack levels used:    1
 38460 ;; Hardware stack levels required when called:   11
 38461 ;; This function calls:
 38462 ;;		_display_get_character
 38463 ;; This function is called by:
 38464 ;;		_api_prepare
 38465 ;; This function uses a non-reentrant model
 38466 ;;
 38467                           
 38468                           	psect	text159
 38469  012A60                     __ptext159:
 38470                           	opt stack 0
 38471  012A60                     __fill_buffer_get_display:
 38472                           	opt stack 17
 38473                           
 38474                           ;api.c: 234: uint8_t cntr;;api.c: 235: uint8_t line;;api.c: 236: uint8_t start_line;;api
      +                          .c: 237: uint8_t position;;api.c: 240: if(secondHalf)
 38475                           
 38476                           ; BSR set to: 0
 38477                           ;incstack = 0
 38478  012A60  0100               	movlb	0	; () banked
 38479  012A62  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 38480  012A64  B4D8               	btfsc	status,2,c
 38481  012A66  D006               	goto	l2274
 38482                           
 38483                           ; BSR set to: 0
 38484                           ;api.c: 241: {;api.c: 242: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 38485  012A68  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 38486  012A6C  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 38487  012A70  0E12               	movlw	18
 38488  012A72  D005               	goto	L61
 38489  012A74                     l2274:
 38490                           
 38491                           ; BSR set to: 0
 38492                           ;api.c: 244: else;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 38493                           
 38494                           ; BSR set to: 0
 38495  012A74  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 38496  012A78  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 38497  012A7C  0E11               	movlw	17
 38498  012A7E                     L61:
 38499  012A7E  6EDF               	movwf	indf2,c
 38500                           
 38501                           ; BSR set to: 0
 38502                           ;api.c: 247: };api.c: 250: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38503                           
 38504                           ; BSR set to: 0
 38505  012A80  EE20 F001          	lfsr	2,1
 38506  012A84  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 38507  012A86  26D9               	addwf	fsr2l,f,c
 38508  012A88  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 38509  012A8A  22DA               	addwfc	fsr2h,f,c
 38510  012A8C  0EBC               	movlw	188
 38511  012A8E  6EDF               	movwf	indf2,c
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;api.c: 251: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38515  012A90  EE20 F002          	lfsr	2,2
 38516  012A94  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 38517  012A96  26D9               	addwf	fsr2l,f,c
 38518  012A98  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 38519  012A9A  22DA               	addwfc	fsr2h,f,c
 38520  012A9C  0E26               	movlw	38
 38521  012A9E  6EDF               	movwf	indf2,c
 38522                           
 38523                           ; BSR set to: 0
 38524                           ;api.c: 254: cntr = 3;
 38525  012AA0  0E03               	movlw	3
 38526  012AA2  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 38527                           
 38528                           ; BSR set to: 0
 38529                           ;api.c: 255: if(secondHalf)
 38530  012AA4  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 38531  012AA6  B4D8               	btfsc	status,2,c
 38532  012AA8  D002               	goto	l2276
 38533                           
 38534                           ; BSR set to: 0
 38535                           ;api.c: 256: {;api.c: 257: start_line = 2;
 38536  012AAA  0E02               	movlw	2
 38537  012AAC  D001               	goto	L62
 38538  012AAE                     l2276:
 38539                           
 38540                           ; BSR set to: 0
 38541                           ;api.c: 259: else;api.c: 260: {;api.c: 261: start_line = 0;
 38542                           
 38543                           ; BSR set to: 0
 38544  012AAE  0E00               	movlw	0
 38545  012AB0                     L62:
 38546  012AB0  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 38547                           
 38548                           ; BSR set to: 0
 38549                           ;api.c: 262: };api.c: 263: for(line=start_line; line<start_line+2; ++line)
 38550                           
 38551                           ; BSR set to: 0
 38552  012AB2  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 38553  012AB6  D01B               	goto	l2278
 38554  012AB8                     
 38555                           ; BSR set to: 0
 38556                           ;api.c: 264: {;api.c: 265: for(position=0; position<20; ++position)
 38557                           
 38558                           ; BSR set to: 0
 38559  012AB8  0E00               	movlw	0
 38560  012ABA  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 38561  012ABC                     l15791:
 38562                           
 38563                           ; BSR set to: 0
 38564  012ABC  0E13               	movlw	19
 38565  012ABE  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 38566  012AC0  D001               	goto	l2280
 38567  012AC2  D014               	goto	u14860
 38568  012AC4                     l2280:
 38569                           
 38570                           ; BSR set to: 0
 38571                           ;api.c: 266: {;api.c: 267: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 38572                           
 38573                           ; BSR set to: 0
 38574  012AC4  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 38575  012AC8  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 38576  012ACA  ECEC  F0A9         	call	_display_get_character
 38577  012ACE  0100               	movlb	0	; () banked
 38578  012AD0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 38579  012AD2  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 38580  012AD4  0D01               	mullw	1
 38581  012AD6  50F3               	movf	prodl,w,c
 38582  012AD8  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 38583  012ADA  6ED9               	movwf	fsr2l,c
 38584  012ADC  50F4               	movf	prodh,w,c
 38585  012ADE  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 38586  012AE0  6EDA               	movwf	fsr2h,c
 38587  012AE2  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 38588                           
 38589                           ; BSR set to: 0
 38590                           ;api.c: 268: ++cntr;
 38591  012AE6  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 38592                           
 38593                           ; BSR set to: 0
 38594  012AE8  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 38595  012AEA  D7E8               	goto	l15791
 38596  012AEC                     u14860:
 38597                           
 38598                           ; BSR set to: 0
 38599                           
 38600                           ; BSR set to: 0
 38601  012AEC  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 38602  012AEE                     l2278:
 38603                           
 38604                           ; BSR set to: 0
 38605                           
 38606                           ; BSR set to: 0
 38607  012AEE  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 38608  012AF0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 38609  012AF2  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 38610  012AF4  0E02               	movlw	2
 38611  012AF6  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 38612  012AF8  0E00               	movlw	0
 38613  012AFA  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 38614  012AFC  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 38615  012AFE  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 38616  012B00  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 38617  012B02  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 38618  012B04  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 38619  012B06  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 38620  012B08  0A80               	xorlw	128
 38621  012B0A  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 38622  012B0C  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 38623  012B0E  0A80               	xorlw	128
 38624  012B10  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 38625  012B12  B0D8               	btfsc	status,0,c
 38626  012B14  0012               	return	
 38627  012B16  D7D0               	goto	l2279
 38628  012B18                     __end_of__fill_buffer_get_display:
 38629                           	opt stack 0
 38630                           tosu	equ	0xFFF
 38631                           tosh	equ	0xFFE
 38632                           tosl	equ	0xFFD
 38633                           pclath	equ	0xFFA
 38634                           tblptru	equ	0xFF8
 38635                           tblptrh	equ	0xFF7
 38636                           tblptrl	equ	0xFF6
 38637                           tablat	equ	0xFF5
 38638                           prodh	equ	0xFF4
 38639                           prodl	equ	0xFF3
 38640                           intcon	equ	0xFF2
 38641                           indf0	equ	0xFEF
 38642                           postinc0	equ	0xFEE
 38643                           fsr0h	equ	0xFEA
 38644                           fsr0l	equ	0xFE9
 38645                           wreg	equ	0xFE8
 38646                           indf1	equ	0xFE7
 38647                           postinc1	equ	0xFE6
 38648                           postdec1	equ	0xFE5
 38649                           plusw1	equ	0xFE3
 38650                           fsr1h	equ	0xFE2
 38651                           fsr1l	equ	0xFE1
 38652                           indf2	equ	0xFDF
 38653                           postinc2	equ	0xFDE
 38654                           postdec2	equ	0xFDD
 38655                           plusw2	equ	0xFDB
 38656                           fsr2h	equ	0xFDA
 38657                           fsr2l	equ	0xFD9
 38658                           status	equ	0xFD8
 38659                           
 38660 ;; *************** function _display_get_character *****************
 38661 ;; Defined at:
 38662 ;;		line 628 in file "display.c"
 38663 ;; Parameters:    Size  Location     Type
 38664 ;;  line            1    wreg     unsigned char 
 38665 ;;  position        1    0[BANK0 ] unsigned char 
 38666 ;; Auto vars:     Size  Location     Type
 38667 ;;  line            1    3[BANK0 ] unsigned char 
 38668 ;; Return value:  Size  Location     Type
 38669 ;;                  1    wreg      unsigned char 
 38670 ;; Registers used:
 38671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38672 ;; Tracked objects:
 38673 ;;		On entry : 0/0
 38674 ;;		On exit  : 0/0
 38675 ;;		Unchanged: 0/0
 38676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38677 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38681 ;;Total ram usage:        4 bytes
 38682 ;; Hardware stack levels used:    1
 38683 ;; Hardware stack levels required when called:   10
 38684 ;; This function calls:
 38685 ;;		Nothing
 38686 ;; This function is called by:
 38687 ;;		__fill_buffer_get_display
 38688 ;; This function uses a non-reentrant model
 38689 ;;
 38690                           
 38691                           	psect	text160
 38692  0153D8                     __ptext160:
 38693                           	opt stack 0
 38694  0153D8                     _display_get_character:
 38695                           	opt stack 17
 38696                           
 38697                           ; BSR set to: 0
 38698                           ;incstack = 0
 38699                           ;display_get_character@line stored from wreg
 38700  0153D8  0100               	movlb	0	; () banked
 38701  0153DA  6F63               	movwf	display_get_character@line& (0+255),b
 38702                           
 38703                           ;display.c: 630: return display_content[line][position];
 38704  0153DC  0100               	movlb	0	; () banked
 38705  0153DE  5163               	movf	display_get_character@line& (0+255),w,b
 38706  0153E0  0D14               	mullw	20
 38707  0153E2  0E34               	movlw	low _display_content
 38708  0153E4  6F61               	movwf	??_display_get_character& (0+255),b
 38709  0153E6  0E02               	movlw	high _display_content
 38710  0153E8  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 38711  0153EA  50F3               	movf	prodl,w,c
 38712  0153EC  2761               	addwf	??_display_get_character& (0+255),f,b
 38713  0153EE  50F4               	movf	prodh,w,c
 38714  0153F0  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 38715  0153F2  5160               	movf	display_get_character@position& (0+255),w,b
 38716  0153F4  0D01               	mullw	1
 38717  0153F6  50F3               	movf	prodl,w,c
 38718  0153F8  2561               	addwf	??_display_get_character& (0+255),w,b
 38719  0153FA  6ED9               	movwf	fsr2l,c
 38720  0153FC  50F4               	movf	prodh,w,c
 38721  0153FE  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 38722  015400  6EDA               	movwf	fsr2h,c
 38723  015402  50DF               	movf	indf2,w,c
 38724  015404  0012               	return	
 38725  015406                     __end_of_display_get_character:
 38726                           	opt stack 0
 38727                           tosu	equ	0xFFF
 38728                           tosh	equ	0xFFE
 38729                           tosl	equ	0xFFD
 38730                           pclath	equ	0xFFA
 38731                           tblptru	equ	0xFF8
 38732                           tblptrh	equ	0xFF7
 38733                           tblptrl	equ	0xFF6
 38734                           tablat	equ	0xFF5
 38735                           prodh	equ	0xFF4
 38736                           prodl	equ	0xFF3
 38737                           intcon	equ	0xFF2
 38738                           indf0	equ	0xFEF
 38739                           postinc0	equ	0xFEE
 38740                           fsr0h	equ	0xFEA
 38741                           fsr0l	equ	0xFE9
 38742                           wreg	equ	0xFE8
 38743                           indf1	equ	0xFE7
 38744                           postinc1	equ	0xFE6
 38745                           postdec1	equ	0xFE5
 38746                           plusw1	equ	0xFE3
 38747                           fsr1h	equ	0xFE2
 38748                           fsr1l	equ	0xFE1
 38749                           indf2	equ	0xFDF
 38750                           postinc2	equ	0xFDE
 38751                           postdec2	equ	0xFDD
 38752                           plusw2	equ	0xFDB
 38753                           fsr2h	equ	0xFDA
 38754                           fsr2l	equ	0xFD9
 38755                           status	equ	0xFD8
 38756                           
 38757 ;; *************** function _api_parse *****************
 38758 ;; Defined at:
 38759 ;;		line 94 in file "api.c"
 38760 ;; Parameters:    Size  Location     Type
 38761 ;;  inBuffer        2  102[BANK0 ] PTR unsigned char 
 38762 ;;		 -> ReceivedDataBuffer(64), 
 38763 ;;  receivedData    1  104[BANK0 ] unsigned char 
 38764 ;;  outBuffer       2  105[BANK0 ] PTR unsigned char 
 38765 ;;		 -> ToSendDataBuffer(64), 
 38766 ;; Auto vars:     Size  Location     Type
 38767 ;;  out_idx_ptr     2  109[BANK0 ] PTR unsigned char 
 38768 ;;		 -> api_parse@out_idx(1), 
 38769 ;;  in_idx          1  112[BANK0 ] unsigned char 
 38770 ;;  out_idx         1  111[BANK0 ] unsigned char 
 38771 ;; Return value:  Size  Location     Type
 38772 ;;                  1    wreg      void 
 38773 ;; Registers used:
 38774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38775 ;; Tracked objects:
 38776 ;;		On entry : 0/0
 38777 ;;		On exit  : 0/0
 38778 ;;		Unchanged: 0/0
 38779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38780 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38781 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38782 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38783 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38784 ;;Total ram usage:       11 bytes
 38785 ;; Hardware stack levels used:    1
 38786 ;; Hardware stack levels required when called:   17
 38787 ;; This function calls:
 38788 ;;		__parse_command_long
 38789 ;;		__parse_command_short
 38790 ;; This function is called by:
 38791 ;;		_APP_DeviceCustomHIDTasks
 38792 ;; This function uses a non-reentrant model
 38793 ;;
 38794                           
 38795                           	psect	text161
 38796  01055E                     __ptext161:
 38797                           	opt stack 0
 38798  01055E                     _api_parse:
 38799                           	opt stack 12
 38800                           
 38801                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 38802                           
 38803                           ; BSR set to: 0
 38804                           ;incstack = 0
 38805  01055E  0E00               	movlw	0
 38806  010560  0100               	movlb	0	; () banked
 38807  010562  6FCF               	movwf	api_parse@out_idx& (0+255),b
 38808                           
 38809                           ; BSR set to: 0
 38810                           ;api.c: 103: out_idx_ptr = &out_idx;
 38811  010564  0ECF               	movlw	low api_parse@out_idx
 38812  010566  6FCD               	movwf	api_parse@out_idx_ptr& (0+255),b
 38813  010568  0E00               	movlw	high api_parse@out_idx
 38814  01056A  6FCE               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 38815                           
 38816                           ; BSR set to: 0
 38817                           ;api.c: 105: if(inBuffer[0]>0x7F)
 38818  01056C  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 38819  010570  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 38820  010574  0E7F               	movlw	127
 38821  010576  64DF               	cpfsgt	indf2,c
 38822  010578  D001               	goto	l2255
 38823  01057A  0012               	return	
 38824  01057C                     l2255:
 38825                           
 38826                           ; BSR set to: 0
 38827                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 38828                           
 38829                           ; BSR set to: 0
 38830  01057C  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 38831  010580  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 38832  010584  0E20               	movlw	32
 38833  010586  18DE               	xorwf	postinc2,w,c
 38834  010588  B4D8               	btfsc	status,2,c
 38835  01058A  0012               	return	
 38836                           
 38837                           ; BSR set to: 0
 38838                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 38839                           
 38840                           ; BSR set to: 0
 38841                           
 38842                           ; BSR set to: 0
 38843                           ;api.c: 113: {;api.c: 116: return;
 38844  01058C  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 38845  010590  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 38846  010594  50DF               	movf	indf2,w,c
 38847  010596  A4D8               	btfss	status,2,c
 38848  010598  D018               	goto	l2258
 38849                           
 38850                           ; BSR set to: 0
 38851                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 38852  01059A  C0C9  FFD9         	movff	api_parse@outBuffer,fsr2l
 38853  01059E  C0CA  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 38854  0105A2  0E00               	movlw	0
 38855  0105A4  6EDF               	movwf	indf2,c
 38856                           
 38857                           ; BSR set to: 0
 38858                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38859  0105A6  EE20 F001          	lfsr	2,1
 38860  0105AA  51C9               	movf	api_parse@outBuffer& (0+255),w,b
 38861  0105AC  26D9               	addwf	fsr2l,f,c
 38862  0105AE  51CA               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 38863  0105B0  22DA               	addwfc	fsr2h,f,c
 38864  0105B2  0EBC               	movlw	188
 38865  0105B4  6EDF               	movwf	indf2,c
 38866                           
 38867                           ; BSR set to: 0
 38868                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38869  0105B6  EE20 F002          	lfsr	2,2
 38870  0105BA  51C9               	movf	api_parse@outBuffer& (0+255),w,b
 38871  0105BC  26D9               	addwf	fsr2l,f,c
 38872  0105BE  51CA               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 38873  0105C0  22DA               	addwfc	fsr2h,f,c
 38874  0105C2  0E26               	movlw	38
 38875  0105C4  6EDF               	movwf	indf2,c
 38876                           
 38877                           ; BSR set to: 0
 38878                           ;api.c: 129: out_idx = 3;
 38879  0105C6  0E03               	movlw	3
 38880  0105C8  6FCF               	movwf	api_parse@out_idx& (0+255),b
 38881  0105CA                     l2258:
 38882                           
 38883                           ; BSR set to: 0
 38884                           ;api.c: 130: };api.c: 132: in_idx = 1;
 38885                           
 38886                           ; BSR set to: 0
 38887  0105CA  0E01               	movlw	1
 38888  0105CC  6FD0               	movwf	api_parse@in_idx& (0+255),b
 38889                           
 38890                           ;api.c: 133: while(in_idx<receivedDataLength)
 38891  0105CE  D057               	goto	l2264
 38892  0105D0                     
 38893                           ; BSR set to: 0
 38894                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 38895                           
 38896                           ; BSR set to: 0
 38897  0105D0  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38898  0105D2  0D01               	mullw	1
 38899  0105D4  50F3               	movf	prodl,w,c
 38900  0105D6  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38901  0105D8  6ED9               	movwf	fsr2l,c
 38902  0105DA  50F4               	movf	prodh,w,c
 38903  0105DC  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38904  0105DE  6EDA               	movwf	fsr2h,c
 38905  0105E0  0E99               	movlw	153
 38906  0105E2  18DE               	xorwf	postinc2,w,c
 38907  0105E4  B4D8               	btfsc	status,2,c
 38908  0105E6  0012               	return	
 38909  0105E8  D02F               	goto	l2262
 38910  0105EA                     
 38911                           ; BSR set to: 0
 38912                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 38913                           
 38914                           ; BSR set to: 0
 38915  0105EA  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38916  0105EC  0D01               	mullw	1
 38917  0105EE  50F3               	movf	prodl,w,c
 38918  0105F0  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38919  0105F2  6ED9               	movwf	fsr2l,c
 38920  0105F4  50F4               	movf	prodh,w,c
 38921  0105F6  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38922  0105F8  6EDA               	movwf	fsr2h,c
 38923  0105FA  50DF               	movf	indf2,w,c
 38924  0105FC  ECA7  F07B         	call	__parse_command_short
 38925  010600  D00B               	goto	l16659
 38926  010602                     
 38927                           ; BSR set to: 0
 38928                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 38929                           
 38930                           ; BSR set to: 0
 38931  010602  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38932  010604  0D01               	mullw	1
 38933  010606  50F3               	movf	prodl,w,c
 38934  010608  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38935  01060A  6ED9               	movwf	fsr2l,c
 38936  01060C  50F4               	movf	prodh,w,c
 38937  01060E  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38938  010610  6EDA               	movwf	fsr2h,c
 38939  010612  50DF               	movf	indf2,w,c
 38940  010614  ECA7  F07B         	call	__parse_command_short
 38941  010618                     l16659:
 38942                           
 38943                           ;api.c: 150: ++in_idx;
 38944  010618  0100               	movlb	0	; () banked
 38945  01061A  2BD0               	incf	api_parse@in_idx& (0+255),f,b
 38946                           
 38947                           ;api.c: 151: break;
 38948  01061C  D030               	goto	l2264
 38949  01061E                     
 38950                           ; BSR set to: 0
 38951                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 38952                           
 38953                           ; BSR set to: 0
 38954  01061E  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38955  010620  0D01               	mullw	1
 38956  010622  50F3               	movf	prodl,w,c
 38957  010624  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38958  010626  6FB9               	movwf	__parse_command_long@data& (0+255),b
 38959  010628  50F4               	movf	prodh,w,c
 38960  01062A  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38961  01062C  6FBA               	movwf	(__parse_command_long@data+1)& (0+255),b
 38962  01062E  C0C9  F0BB         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 38963  010632  C0CA  F0BC         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 38964  010636  C0CD  F0BD         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 38965  01063A  C0CE  F0BE         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 38966  01063E  EC72  F09C         	call	__parse_command_long	;wreg free
 38967  010642  0100               	movlb	0	; () banked
 38968  010644  27D0               	addwf	api_parse@in_idx& (0+255),f,b
 38969                           
 38970                           ;api.c: 155: break;
 38971  010646  D01B               	goto	l2264
 38972  010648                     l2262:
 38973                           
 38974                           ; BSR set to: 0
 38975                           
 38976                           ; BSR set to: 0
 38977  010648  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38978  01064A  0D01               	mullw	1
 38979  01064C  50F3               	movf	prodl,w,c
 38980  01064E  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38981  010650  6ED9               	movwf	fsr2l,c
 38982  010652  50F4               	movf	prodh,w,c
 38983  010654  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38984  010656  6EDA               	movwf	fsr2h,c
 38985  010658  50DF               	movf	indf2,w,c
 38986  01065A  0BF0               	andlw	240
 38987  01065C  6FCB               	movwf	??_api_parse& (0+255),b
 38988  01065E  6BCC               	clrf	(??_api_parse+1)& (0+255),b
 38989                           
 38990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38991                           ; Switch size 1, requested type "space"
 38992                           ; Number of cases is 1, Range of values is 0 to 0
 38993                           ; switch strategies available:
 38994                           ; Name         Instructions Cycles
 38995                           ; simple_byte            4     3 (average)
 38996                           ;	Chosen strategy is simple_byte
 38997  010660  51CC               	movf	(??_api_parse+1)& (0+255),w,b
 38998  010662  0A00               	xorlw	0	; case 0
 38999  010664  A4D8               	btfss	status,2,c
 39000  010666  0012               	return	
 39001                           
 39002                           ; BSR set to: 0
 39003                           ; Switch size 1, requested type "space"
 39004                           ; Number of cases is 3, Range of values is 32 to 144
 39005                           ; switch strategies available:
 39006                           ; Name         Instructions Cycles
 39007                           ; simple_byte           10     6 (average)
 39008                           ;	Chosen strategy is simple_byte
 39009  010668  51CB               	movf	??_api_parse& (0+255),w,b
 39010  01066A  0A20               	xorlw	32	; case 32
 39011  01066C  B4D8               	btfsc	status,2,c
 39012  01066E  D7BD               	goto	l2263
 39013  010670  0A10               	xorlw	16	; case 48
 39014  010672  B4D8               	btfsc	status,2,c
 39015  010674  D7C6               	goto	l2265
 39016  010676  0AA0               	xorlw	160	; case 144
 39017  010678  A4D8               	btfss	status,2,c
 39018  01067A  0012               	return	
 39019  01067C  D7D0               	goto	l2266
 39020  01067E                     l2264:
 39021                           
 39022                           ; BSR set to: 0
 39023                           
 39024                           ; BSR set to: 0
 39025                           
 39026                           ; BSR set to: 0
 39027  01067E  51C8               	movf	api_parse@receivedDataLength& (0+255),w,b
 39028  010680  5DD0               	subwf	api_parse@in_idx& (0+255),w,b
 39029  010682  B0D8               	btfsc	status,0,c
 39030  010684  0012               	return	
 39031  010686  D7A4               	goto	l2260
 39032  010688                     __end_of_api_parse:
 39033                           	opt stack 0
 39034                           tosu	equ	0xFFF
 39035                           tosh	equ	0xFFE
 39036                           tosl	equ	0xFFD
 39037                           pclath	equ	0xFFA
 39038                           tblptru	equ	0xFF8
 39039                           tblptrh	equ	0xFF7
 39040                           tblptrl	equ	0xFF6
 39041                           tablat	equ	0xFF5
 39042                           prodh	equ	0xFF4
 39043                           prodl	equ	0xFF3
 39044                           intcon	equ	0xFF2
 39045                           indf0	equ	0xFEF
 39046                           postinc0	equ	0xFEE
 39047                           fsr0h	equ	0xFEA
 39048                           fsr0l	equ	0xFE9
 39049                           wreg	equ	0xFE8
 39050                           indf1	equ	0xFE7
 39051                           postinc1	equ	0xFE6
 39052                           postdec1	equ	0xFE5
 39053                           plusw1	equ	0xFE3
 39054                           fsr1h	equ	0xFE2
 39055                           fsr1l	equ	0xFE1
 39056                           indf2	equ	0xFDF
 39057                           postinc2	equ	0xFDE
 39058                           postdec2	equ	0xFDD
 39059                           plusw2	equ	0xFDB
 39060                           fsr2h	equ	0xFDA
 39061                           fsr2l	equ	0xFD9
 39062                           status	equ	0xFD8
 39063                           
 39064 ;; *************** function __parse_command_short *****************
 39065 ;; Defined at:
 39066 ;;		line 327 in file "api.c"
 39067 ;; Parameters:    Size  Location     Type
 39068 ;;  cmd             1    wreg     unsigned char 
 39069 ;; Auto vars:     Size  Location     Type
 39070 ;;  cmd             1  101[BANK0 ] unsigned char 
 39071 ;; Return value:  Size  Location     Type
 39072 ;;                  1    wreg      void 
 39073 ;; Registers used:
 39074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39075 ;; Tracked objects:
 39076 ;;		On entry : 0/0
 39077 ;;		On exit  : 0/0
 39078 ;;		Unchanged: 0/0
 39079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39083 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39084 ;;Total ram usage:        1 bytes
 39085 ;; Hardware stack levels used:    1
 39086 ;; Hardware stack levels required when called:   15
 39087 ;; This function calls:
 39088 ;;		_motor_clear_command_cue
 39089 ;;		_motor_go_to_steps_position
 39090 ;;		_motor_schedule_command
 39091 ;;		_motor_set_zero
 39092 ;;		_motor_stop
 39093 ;; This function is called by:
 39094 ;;		_api_parse
 39095 ;; This function uses a non-reentrant model
 39096 ;;
 39097                           
 39098                           	psect	text162
 39099  00F74E                     __ptext162:
 39100                           	opt stack 0
 39101  00F74E                     __parse_command_short:
 39102                           	opt stack 13
 39103                           
 39104                           ; BSR set to: 0
 39105                           ;incstack = 0
 39106                           ;__parse_command_short@cmd stored from wreg
 39107  00F74E  0100               	movlb	0	; () banked
 39108  00F750  6FC5               	movwf	__parse_command_short@cmd& (0+255),b
 39109                           
 39110                           ;api.c: 329: switch(cmd)
 39111  00F752  D082               	goto	l2300
 39112  00F754                     
 39113                           ;api.c: 347: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 39114  00F754  0E01               	movlw	1
 39115  00F756  0101               	movlb	1	; () banked
 39116  00F758  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39117                           
 39118                           ;api.c: 348: break;
 39119  00F75A  0012               	return	
 39120  00F75C                     
 39121                           ;api.c: 351: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 39122                           
 39123                           ; BSR set to: 1
 39124  00F75C  0E11               	movlw	17
 39125  00F75E  0101               	movlb	1	; () banked
 39126  00F760  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39127                           
 39128                           ;api.c: 352: break;
 39129  00F762  0012               	return	
 39130  00F764                     
 39131                           ;api.c: 355: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 39132                           
 39133                           ; BSR set to: 1
 39134  00F764  0E31               	movlw	49
 39135  00F766  0101               	movlb	1	; () banked
 39136  00F768  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39137                           
 39138                           ;api.c: 356: break;
 39139  00F76A  0012               	return	
 39140  00F76C                     
 39141                           ;api.c: 359: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 39142                           
 39143                           ; BSR set to: 1
 39144  00F76C  0E51               	movlw	81
 39145  00F76E  0101               	movlb	1	; () banked
 39146  00F770  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39147                           
 39148                           ;api.c: 360: break;
 39149  00F772  0012               	return	
 39150  00F774                     
 39151                           ;api.c: 363: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 39152                           
 39153                           ; BSR set to: 1
 39154  00F774  0E82               	movlw	130
 39155  00F776  0101               	movlb	1	; () banked
 39156  00F778  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39157                           
 39158                           ;api.c: 364: break;
 39159  00F77A  0012               	return	
 39160  00F77C                     
 39161                           ;api.c: 367: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 39162                           
 39163                           ; BSR set to: 1
 39164  00F77C  0E71               	movlw	113
 39165  00F77E  0101               	movlb	1	; () banked
 39166  00F780  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39167                           
 39168                           ;api.c: 368: break;
 39169  00F782  0012               	return	
 39170  00F784                     
 39171                           ;api.c: 371: motor_set_zero(MOTOR_DIRECTION_CCW);
 39172                           
 39173                           ; BSR set to: 1
 39174  00F784  0EFF               	movlw	255
 39175  00F786  EC8C  F095         	call	_motor_set_zero
 39176                           
 39177                           ;api.c: 372: break;
 39178  00F78A  0012               	return	
 39179  00F78C                     
 39180                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CW);
 39181  00F78C  0E01               	movlw	1
 39182  00F78E  EC8C  F095         	call	_motor_set_zero
 39183                           
 39184                           ;api.c: 376: break;
 39185  00F792  0012               	return	
 39186  00F794                     
 39187                           ;api.c: 379: motor_go_to_steps_position(0);
 39188  00F794  0E00               	movlw	0
 39189  00F796  0100               	movlb	0	; () banked
 39190  00F798  6FA9               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 39191  00F79A  0E00               	movlw	0
 39192  00F79C  6FAA               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 39193  00F79E  0E00               	movlw	0
 39194  00F7A0  6FAB               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 39195  00F7A2  0E00               	movlw	0
 39196  00F7A4  6FAC               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 39197  00F7A6  EC38  F066         	call	_motor_go_to_steps_position	;wreg free
 39198                           
 39199                           ;api.c: 381: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 39200  00F7AA  0E05               	movlw	5
 39201  00F7AC  0101               	movlb	1	; () banked
 39202  00F7AE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39203                           
 39204                           ; BSR set to: 1
 39205                           ;api.c: 382: os.divide_position = 0;
 39206  00F7B0  0E00               	movlw	0
 39207  00F7B2  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 39208  00F7B4  0E00               	movlw	0
 39209  00F7B6  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 39210  00F7B8                     
 39211                           ;api.c: 385: --os.encoder2Count;
 39212                           
 39213                           ; BSR set to: 1
 39214  00F7B8  0101               	movlb	1	; () banked
 39215  00F7BA  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 39216                           
 39217                           ;api.c: 386: break;
 39218  00F7BC  0012               	return	
 39219  00F7BE                     
 39220                           ;api.c: 389: ++os.encoder2Count;
 39221                           
 39222                           ; BSR set to: 1
 39223  00F7BE  0101               	movlb	1	; () banked
 39224  00F7C0  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 39225                           
 39226                           ;api.c: 390: break;
 39227  00F7C2  0012               	return	
 39228  00F7C4                     
 39229                           ;api.c: 393: ++os.button2;
 39230                           
 39231                           ; BSR set to: 1
 39232  00F7C4  0101               	movlb	1	; () banked
 39233  00F7C6  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 39234                           
 39235                           ;api.c: 394: break;
 39236  00F7C8  0012               	return	
 39237  00F7CA                     
 39238                           ;api.c: 397: --os.encoder1Count;
 39239                           
 39240                           ; BSR set to: 1
 39241  00F7CA  0101               	movlb	1	; () banked
 39242  00F7CC  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 39243                           
 39244                           ;api.c: 398: break;
 39245  00F7CE  0012               	return	
 39246  00F7D0                     
 39247                           ;api.c: 401: ++os.encoder1Count;
 39248                           
 39249                           ; BSR set to: 1
 39250  00F7D0  0101               	movlb	1	; () banked
 39251  00F7D2  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 39252                           
 39253                           ;api.c: 402: break;
 39254  00F7D4  0012               	return	
 39255  00F7D6                     
 39256                           ;api.c: 405: ++os.button1;
 39257                           
 39258                           ; BSR set to: 1
 39259  00F7D6  0101               	movlb	1	; () banked
 39260  00F7D8  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 39261                           
 39262                           ;api.c: 406: break;
 39263  00F7DA  0012               	return	
 39264  00F7DC                     
 39265                           ;api.c: 409: if(!os.busy)
 39266                           
 39267                           ; BSR set to: 1
 39268  00F7DC  0101               	movlb	1	; () banked
 39269  00F7DE  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39270  00F7E0  A4D8               	btfss	status,2,c
 39271  00F7E2  0012               	return	
 39272                           
 39273                           ; BSR set to: 1
 39274                           ;api.c: 410: {;api.c: 411: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 39275  00F7E4  0E84               	movlw	132
 39276  00F7E6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39277                           
 39278                           ; BSR set to: 1
 39279                           ;api.c: 412: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.manual_speed, MOTOR_MOVE_
      +                          TYPE_NORMAL);
 39280  00F7E8  0E00               	movlw	0
 39281  00F7EA  0100               	movlb	0	; () banked
 39282  00F7EC  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 39283  00F7EE  0E00               	movlw	0
 39284  00F7F0  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 39285  00F7F2  0E00               	movlw	0
 39286  00F7F4  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39287  00F7F6  0E00               	movlw	0
 39288  00F7F8  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39289  00F7FA  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 39290  00F7FE  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 39291  00F802  0E00               	movlw	0
 39292  00F804  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39293  00F806  0EFF               	movlw	255
 39294  00F808  EC48  F093         	call	_motor_schedule_command
 39295                           
 39296                           ;api.c: 413: };api.c: 414: break;
 39297  00F80C  0012               	return	
 39298  00F80E                     
 39299                           ;api.c: 417: if(!os.busy)
 39300  00F80E  0101               	movlb	1	; () banked
 39301  00F810  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39302  00F812  A4D8               	btfss	status,2,c
 39303  00F814  0012               	return	
 39304                           
 39305                           ; BSR set to: 1
 39306                           ;api.c: 418: {;api.c: 419: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 39307  00F816  0E84               	movlw	132
 39308  00F818  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39309                           
 39310                           ; BSR set to: 1
 39311                           ;api.c: 420: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed, MOTOR_MOVE_T
      +                          YPE_NORMAL);
 39312  00F81A  0E00               	movlw	0
 39313  00F81C  0100               	movlb	0	; () banked
 39314  00F81E  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 39315  00F820  0E00               	movlw	0
 39316  00F822  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 39317  00F824  0E00               	movlw	0
 39318  00F826  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39319  00F828  0E00               	movlw	0
 39320  00F82A  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39321  00F82C  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 39322  00F830  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 39323  00F834  0E00               	movlw	0
 39324  00F836  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39325  00F838  0E01               	movlw	1
 39326  00F83A  EC48  F093         	call	_motor_schedule_command
 39327                           
 39328                           ;api.c: 421: };api.c: 422: break;
 39329  00F83E  0012               	return	
 39330  00F840                     
 39331                           ;api.c: 425: if(os.busy)
 39332  00F840  0101               	movlb	1	; () banked
 39333  00F842  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39334  00F844  B4D8               	btfsc	status,2,c
 39335  00F846  0012               	return	
 39336                           
 39337                           ; BSR set to: 1
 39338                           ;api.c: 426: {;api.c: 427: motor_stop();
 39339  00F848  EC23  F0A7         	call	_motor_stop	;wreg free
 39340                           
 39341                           ;api.c: 428: motor_clear_command_cue();
 39342  00F84C  EC75  F0AC         	call	_motor_clear_command_cue	;wreg free
 39343                           
 39344                           ;api.c: 429: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 39345  00F850  0E82               	movlw	130
 39346  00F852  0101               	movlb	1	; () banked
 39347  00F854  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39348                           
 39349                           ; BSR set to: 1
 39350                           ;api.c: 432: }
 39351                           
 39352                           ; BSR set to: 1
 39353                           ;api.c: 430: };api.c: 431: break;
 39354  00F856  0012               	return	
 39355  00F858                     l2300:
 39356                           
 39357                           ; BSR set to: 1
 39358  00F858  0100               	movlb	0	; () banked
 39359  00F85A  51C5               	movf	__parse_command_short@cmd& (0+255),w,b
 39360                           
 39361                           ; Switch size 1, requested type "space"
 39362                           ; Number of cases is 18, Range of values is 32 to 56
 39363                           ; switch strategies available:
 39364                           ; Name         Instructions Cycles
 39365                           ; simple_byte           55    28 (average)
 39366                           ;	Chosen strategy is simple_byte
 39367  00F85C  0A20               	xorlw	32	; case 32
 39368  00F85E  B4D8               	btfsc	status,2,c
 39369  00F860  D779               	goto	l2301
 39370  00F862  0A01               	xorlw	1	; case 33
 39371  00F864  B4D8               	btfsc	status,2,c
 39372  00F866  D77A               	goto	l2303
 39373  00F868  0A03               	xorlw	3	; case 34
 39374  00F86A  B4D8               	btfsc	status,2,c
 39375  00F86C  D77B               	goto	l2304
 39376  00F86E  0A01               	xorlw	1	; case 35
 39377  00F870  B4D8               	btfsc	status,2,c
 39378  00F872  D77C               	goto	l2305
 39379  00F874  0A07               	xorlw	7	; case 36
 39380  00F876  B4D8               	btfsc	status,2,c
 39381  00F878  D77D               	goto	l2306
 39382  00F87A  0A01               	xorlw	1	; case 37
 39383  00F87C  B4D8               	btfsc	status,2,c
 39384  00F87E  D77E               	goto	l2307
 39385  00F880  0A03               	xorlw	3	; case 38
 39386  00F882  B4D8               	btfsc	status,2,c
 39387  00F884  D77F               	goto	l2308
 39388  00F886  0A01               	xorlw	1	; case 39
 39389  00F888  B4D8               	btfsc	status,2,c
 39390  00F88A  D780               	goto	l2309
 39391  00F88C  0A0F               	xorlw	15	; case 40
 39392  00F88E  B4D8               	btfsc	status,2,c
 39393  00F890  D781               	goto	l2310
 39394  00F892  0A18               	xorlw	24	; case 48
 39395  00F894  B4D8               	btfsc	status,2,c
 39396  00F896  D790               	goto	l2311
 39397  00F898  0A01               	xorlw	1	; case 49
 39398  00F89A  B4D8               	btfsc	status,2,c
 39399  00F89C  D790               	goto	l2312
 39400  00F89E  0A03               	xorlw	3	; case 50
 39401  00F8A0  B4D8               	btfsc	status,2,c
 39402  00F8A2  D790               	goto	l2313
 39403  00F8A4  0A01               	xorlw	1	; case 51
 39404  00F8A6  B4D8               	btfsc	status,2,c
 39405  00F8A8  D790               	goto	l2314
 39406  00F8AA  0A07               	xorlw	7	; case 52
 39407  00F8AC  B4D8               	btfsc	status,2,c
 39408  00F8AE  D790               	goto	l2315
 39409  00F8B0  0A01               	xorlw	1	; case 53
 39410  00F8B2  B4D8               	btfsc	status,2,c
 39411  00F8B4  D790               	goto	l2316
 39412  00F8B6  0A03               	xorlw	3	; case 54
 39413  00F8B8  B4D8               	btfsc	status,2,c
 39414  00F8BA  D790               	goto	l2317
 39415  00F8BC  0A01               	xorlw	1	; case 55
 39416  00F8BE  B4D8               	btfsc	status,2,c
 39417  00F8C0  D7A6               	goto	l2319
 39418  00F8C2  0A0F               	xorlw	15	; case 56
 39419  00F8C4  A4D8               	btfss	status,2,c
 39420  00F8C6  0012               	return	
 39421  00F8C8  D7BB               	goto	l2321
 39422  00F8CA                     __end_of__parse_command_short:
 39423                           	opt stack 0
 39424                           tosu	equ	0xFFF
 39425                           tosh	equ	0xFFE
 39426                           tosl	equ	0xFFD
 39427                           pclath	equ	0xFFA
 39428                           tblptru	equ	0xFF8
 39429                           tblptrh	equ	0xFF7
 39430                           tblptrl	equ	0xFF6
 39431                           tablat	equ	0xFF5
 39432                           prodh	equ	0xFF4
 39433                           prodl	equ	0xFF3
 39434                           intcon	equ	0xFF2
 39435                           indf0	equ	0xFEF
 39436                           postinc0	equ	0xFEE
 39437                           fsr0h	equ	0xFEA
 39438                           fsr0l	equ	0xFE9
 39439                           wreg	equ	0xFE8
 39440                           indf1	equ	0xFE7
 39441                           postinc1	equ	0xFE6
 39442                           postdec1	equ	0xFE5
 39443                           plusw1	equ	0xFE3
 39444                           fsr1h	equ	0xFE2
 39445                           fsr1l	equ	0xFE1
 39446                           indf2	equ	0xFDF
 39447                           postinc2	equ	0xFDE
 39448                           postdec2	equ	0xFDD
 39449                           plusw2	equ	0xFDB
 39450                           fsr2h	equ	0xFDA
 39451                           fsr2l	equ	0xFD9
 39452                           status	equ	0xFD8
 39453                           
 39454 ;; *************** function _motor_stop *****************
 39455 ;; Defined at:
 39456 ;;		line 534 in file "motor.c"
 39457 ;; Parameters:    Size  Location     Type
 39458 ;;		None
 39459 ;; Auto vars:     Size  Location     Type
 39460 ;;		None
 39461 ;; Return value:  Size  Location     Type
 39462 ;;                  1    wreg      void 
 39463 ;; Registers used:
 39464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 39465 ;; Tracked objects:
 39466 ;;		On entry : 0/0
 39467 ;;		On exit  : 0/0
 39468 ;;		Unchanged: 0/0
 39469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39474 ;;Total ram usage:        2 bytes
 39475 ;; Hardware stack levels used:    1
 39476 ;; Hardware stack levels required when called:   10
 39477 ;; This function calls:
 39478 ;;		Nothing
 39479 ;; This function is called by:
 39480 ;;		__parse_command_short
 39481 ;;		_encoder_statemachine
 39482 ;; This function uses a non-reentrant model
 39483 ;;
 39484                           
 39485                           	psect	text163
 39486  014E46                     __ptext163:
 39487                           	opt stack 0
 39488  014E46                     _motor_stop:
 39489                           	opt stack 19
 39490                           
 39491                           ;motor.c: 536: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 39492                           
 39493                           ;incstack = 0
 39494  014E46  90D8               	bcf	status,0,c
 39495  014E48  0100               	movlb	0	; () banked
 39496  014E4A  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 39497  014E4C  6EF6               	movwf	tblptrl,c
 39498  014E4E  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 39499  014E50  6EF7               	movwf	tblptrh,c
 39500  014E52  0E61               	movlw	low _motor_steps_lookup
 39501  014E54  26F6               	addwf	tblptrl,f,c
 39502  014E56  0E94               	movlw	high _motor_steps_lookup
 39503  014E58  22F7               	addwfc	tblptrh,f,c
 39504  014E5A                     	if	1	;There are 3 active tblptr bytes
 39505  014E5A  6AF8               	clrf	tblptru,c
 39506  014E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 39507  014E5E  22F8               	addwfc	tblptru,f,c
 39508  014E60                     	endif
 39509  014E60  0009               	tblrd		*+
 39510  014E62  CFF5 F060          	movff	tablat,??_motor_stop
 39511  014E66  0009               	tblrd		*+
 39512  014E68  CFF5 F061          	movff	tablat,??_motor_stop+1
 39513  014E6C  5160               	movf	??_motor_stop& (0+255),w,b
 39514  014E6E  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 39515  014E70  0101               	movlb	1	; () banked
 39516  014E72  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 39517  014E74  0100               	movlb	0	; () banked
 39518  014E76  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 39519  014E78  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 39520  014E7A  0101               	movlb	1	; () banked
 39521  014E7C  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 39522  014E7E  0E00               	movlw	0
 39523  014E80  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 39524  014E82  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 39525  014E84  0E00               	movlw	0
 39526  014E86  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 39527  014E88  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 39528                           
 39529                           ; BSR set to: 1
 39530  014E8A  0012               	return		;funcret
 39531  014E8C                     __end_of_motor_stop:
 39532                           	opt stack 0
 39533                           tosu	equ	0xFFF
 39534                           tosh	equ	0xFFE
 39535                           tosl	equ	0xFFD
 39536                           pclath	equ	0xFFA
 39537                           tblptru	equ	0xFF8
 39538                           tblptrh	equ	0xFF7
 39539                           tblptrl	equ	0xFF6
 39540                           tablat	equ	0xFF5
 39541                           prodh	equ	0xFF4
 39542                           prodl	equ	0xFF3
 39543                           intcon	equ	0xFF2
 39544                           indf0	equ	0xFEF
 39545                           postinc0	equ	0xFEE
 39546                           fsr0h	equ	0xFEA
 39547                           fsr0l	equ	0xFE9
 39548                           wreg	equ	0xFE8
 39549                           indf1	equ	0xFE7
 39550                           postinc1	equ	0xFE6
 39551                           postdec1	equ	0xFE5
 39552                           plusw1	equ	0xFE3
 39553                           fsr1h	equ	0xFE2
 39554                           fsr1l	equ	0xFE1
 39555                           indf2	equ	0xFDF
 39556                           postinc2	equ	0xFDE
 39557                           postdec2	equ	0xFDD
 39558                           plusw2	equ	0xFDB
 39559                           fsr2h	equ	0xFDA
 39560                           fsr2l	equ	0xFD9
 39561                           status	equ	0xFD8
 39562                           
 39563 ;; *************** function _motor_set_zero *****************
 39564 ;; Defined at:
 39565 ;;		line 741 in file "motor.c"
 39566 ;; Parameters:    Size  Location     Type
 39567 ;;  direction       1    wreg     enum E6622
 39568 ;; Auto vars:     Size  Location     Type
 39569 ;;  direction       1   73[BANK0 ] enum E6622
 39570 ;; Return value:  Size  Location     Type
 39571 ;;                  1    wreg      void 
 39572 ;; Registers used:
 39573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39574 ;; Tracked objects:
 39575 ;;		On entry : 0/0
 39576 ;;		On exit  : 0/0
 39577 ;;		Unchanged: 0/0
 39578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39582 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39583 ;;Total ram usage:        1 bytes
 39584 ;; Hardware stack levels used:    1
 39585 ;; Hardware stack levels required when called:   14
 39586 ;; This function calls:
 39587 ;;		_motor_schedule_command
 39588 ;; This function is called by:
 39589 ;;		__parse_command_short
 39590 ;;		_encoder_statemachine
 39591 ;; This function uses a non-reentrant model
 39592 ;;
 39593                           
 39594                           	psect	text164
 39595  012B18                     __ptext164:
 39596                           	opt stack 0
 39597  012B18                     _motor_set_zero:
 39598                           	opt stack 15
 39599                           
 39600                           ; BSR set to: 1
 39601                           ;incstack = 0
 39602                           ;motor_set_zero@direction stored from wreg
 39603  012B18  0100               	movlb	0	; () banked
 39604  012B1A  6FA9               	movwf	motor_set_zero@direction& (0+255),b
 39605                           
 39606                           ;motor.c: 744: os.approach_direction = direction;
 39607  012B1C  C0A9  F183         	movff	motor_set_zero@direction,_os+18	;volatile
 39608                           
 39609                           ;motor.c: 745: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 39610  012B20  0E01               	movlw	1
 39611  012B22  0101               	movlb	1	; () banked
 39612  012B24  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39613                           
 39614                           ; BSR set to: 1
 39615                           ;motor.c: 746: os.current_position_in_steps = 0;
 39616  012B26  0E00               	movlw	0
 39617  012B28  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 39618  012B2A  0E00               	movlw	0
 39619  012B2C  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 39620  012B2E  0E00               	movlw	0
 39621  012B30  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 39622  012B32  0E00               	movlw	0
 39623  012B34  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 39624                           
 39625                           ; BSR set to: 1
 39626                           ;motor.c: 747: os.divide_position = 0;
 39627  012B36  0E00               	movlw	0
 39628  012B38  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 39629  012B3A  0E00               	movlw	0
 39630  012B3C  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 39631                           
 39632                           ; BSR set to: 1
 39633                           ;motor.c: 750: if(config.overshoot_in_steps!=0)
 39634  012B3E  51A6               	movf	(_config+5)& (0+255),w,b
 39635  012B40  11A7               	iorwf	(_config+6)& (0+255),w,b
 39636  012B42  B4D8               	btfsc	status,2,c
 39637  012B44  0012               	return	
 39638                           
 39639                           ; BSR set to: 1
 39640                           ;motor.c: 751: {;motor.c: 752: if(direction==MOTOR_DIRECTION_CW)
 39641  012B46  0100               	movlb	0	; () banked
 39642  012B48  05A9               	decf	motor_set_zero@direction& (0+255),w,b
 39643  012B4A  A4D8               	btfss	status,2,c
 39644  012B4C  D020               	goto	l2578
 39645                           
 39646                           ; BSR set to: 0
 39647                           ;motor.c: 753: {;motor.c: 754: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 39648  012B4E  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39649  012B52  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39650  012B56  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39651  012B58  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39652  012B5A  0E00               	movlw	0
 39653  012B5C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39654  012B5E  0E00               	movlw	0
 39655  012B60  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39656  012B62  0E01               	movlw	1
 39657  012B64  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39658  012B66  0EFF               	movlw	255
 39659  012B68  EC48  F093         	call	_motor_schedule_command
 39660                           
 39661                           ;motor.c: 755: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0, 
      +                          MOTOR_MOVE_TYPE_NORMAL);
 39662  012B6C  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39663  012B70  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39664  012B74  0100               	movlb	0	; () banked
 39665  012B76  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39666  012B78  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39667  012B7A  0E00               	movlw	0
 39668  012B7C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39669  012B7E  0E00               	movlw	0
 39670  012B80  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39671  012B82  0E00               	movlw	0
 39672  012B84  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39673  012B86  0E01               	movlw	1
 39674  012B88  EC48  F093         	call	_motor_schedule_command
 39675                           
 39676                           ;motor.c: 756: }
 39677  012B8C  0012               	return	
 39678  012B8E                     l2578:
 39679                           
 39680                           ;motor.c: 757: else;motor.c: 758: {;motor.c: 759: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, config.overshoot_in_steps, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 39681  012B8E  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39682  012B92  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39683  012B96  0100               	movlb	0	; () banked
 39684  012B98  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39685  012B9A  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39686  012B9C  0E00               	movlw	0
 39687  012B9E  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39688  012BA0  0E00               	movlw	0
 39689  012BA2  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39690  012BA4  0E01               	movlw	1
 39691  012BA6  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39692  012BA8  0E01               	movlw	1
 39693  012BAA  EC48  F093         	call	_motor_schedule_command
 39694                           
 39695                           ;motor.c: 760: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 39696  012BAE  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39697  012BB2  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39698  012BB6  0100               	movlb	0	; () banked
 39699  012BB8  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39700  012BBA  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39701  012BBC  0E00               	movlw	0
 39702  012BBE  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39703  012BC0  0E00               	movlw	0
 39704  012BC2  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39705  012BC4  0E00               	movlw	0
 39706  012BC6  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39707  012BC8  0EFF               	movlw	255
 39708  012BCA  EC48  F093         	call	_motor_schedule_command
 39709  012BCE  0012               	return	
 39710  012BD0                     __end_of_motor_set_zero:
 39711                           	opt stack 0
 39712                           tosu	equ	0xFFF
 39713                           tosh	equ	0xFFE
 39714                           tosl	equ	0xFFD
 39715                           pclath	equ	0xFFA
 39716                           tblptru	equ	0xFF8
 39717                           tblptrh	equ	0xFF7
 39718                           tblptrl	equ	0xFF6
 39719                           tablat	equ	0xFF5
 39720                           prodh	equ	0xFF4
 39721                           prodl	equ	0xFF3
 39722                           intcon	equ	0xFF2
 39723                           indf0	equ	0xFEF
 39724                           postinc0	equ	0xFEE
 39725                           fsr0h	equ	0xFEA
 39726                           fsr0l	equ	0xFE9
 39727                           wreg	equ	0xFE8
 39728                           indf1	equ	0xFE7
 39729                           postinc1	equ	0xFE6
 39730                           postdec1	equ	0xFE5
 39731                           plusw1	equ	0xFE3
 39732                           fsr1h	equ	0xFE2
 39733                           fsr1l	equ	0xFE1
 39734                           indf2	equ	0xFDF
 39735                           postinc2	equ	0xFDE
 39736                           postdec2	equ	0xFDD
 39737                           plusw2	equ	0xFDB
 39738                           fsr2h	equ	0xFDA
 39739                           fsr2l	equ	0xFD9
 39740                           status	equ	0xFD8
 39741                           
 39742 ;; *************** function _motor_go_to_steps_position *****************
 39743 ;; Defined at:
 39744 ;;		line 577 in file "motor.c"
 39745 ;; Parameters:    Size  Location     Type
 39746 ;;  target_posit    4   73[BANK0 ] unsigned long 
 39747 ;; Auto vars:     Size  Location     Type
 39748 ;;  distance_ccw    4   97[BANK0 ] unsigned long 
 39749 ;;  distance_cw     4   93[BANK0 ] unsigned long 
 39750 ;;  overhead_ccw    4   89[BANK0 ] unsigned long 
 39751 ;;  overhead_cw     4   85[BANK0 ] unsigned long 
 39752 ;; Return value:  Size  Location     Type
 39753 ;;                  1    wreg      void 
 39754 ;; Registers used:
 39755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39756 ;; Tracked objects:
 39757 ;;		On entry : 0/0
 39758 ;;		On exit  : 0/0
 39759 ;;		Unchanged: 0/0
 39760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39762 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39763 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39764 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39765 ;;Total ram usage:       28 bytes
 39766 ;; Hardware stack levels used:    1
 39767 ;; Hardware stack levels required when called:   14
 39768 ;; This function calls:
 39769 ;;		_motor_schedule_command
 39770 ;; This function is called by:
 39771 ;;		__parse_command_short
 39772 ;;		_motor_divide_jump
 39773 ;;		_motor_divide_jump_to_nearest
 39774 ;;		_encoder_statemachine
 39775 ;;		_motor_go_to_degrees_position
 39776 ;; This function uses a non-reentrant model
 39777 ;;
 39778                           
 39779                           	psect	text165
 39780  00CC70                     __ptext165:
 39781                           	opt stack 0
 39782  00CC70                     _motor_go_to_steps_position:
 39783                           	opt stack 15
 39784                           
 39785                           ;motor.c: 579: uint32_t distance_cw;;motor.c: 580: uint32_t overhead_cw;;motor.c: 581: u
      +                          int32_t distance_ccw;;motor.c: 582: uint32_t overhead_ccw;;motor.c: 585: if(os.busy)
 39786                           
 39787                           ;incstack = 0
 39788  00CC70  0101               	movlb	1	; () banked
 39789  00CC72  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39790  00CC74  A4D8               	btfss	status,2,c
 39791  00CC76  0012               	return	
 39792                           
 39793                           ; BSR set to: 1
 39794                           ;motor.c: 588: };motor.c: 591: if(os.current_position_in_steps == target_position)
 39795                           
 39796                           ; BSR set to: 1
 39797                           
 39798                           ; BSR set to: 1
 39799                           ;motor.c: 586: {;motor.c: 587: return;
 39800  00CC78  0100               	movlb	0	; () banked
 39801  00CC7A  51A9               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 39802  00CC7C  0101               	movlb	1	; () banked
 39803  00CC7E  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 39804  00CC80  E110               	bnz	l14899
 39805  00CC82  0100               	movlb	0	; () banked
 39806  00CC84  51AA               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 39807  00CC86  0101               	movlb	1	; () banked
 39808  00CC88  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 39809  00CC8A  E10B               	bnz	l14899
 39810  00CC8C  0100               	movlb	0	; () banked
 39811  00CC8E  51AB               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 39812  00CC90  0101               	movlb	1	; () banked
 39813  00CC92  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 39814  00CC94  E106               	bnz	l14899
 39815  00CC96  0100               	movlb	0	; () banked
 39816  00CC98  51AC               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 39817  00CC9A  0101               	movlb	1	; () banked
 39818  00CC9C  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 39819  00CC9E  B4D8               	btfsc	status,2,c
 39820  00CCA0  0012               	return	
 39821  00CCA2                     l14899:
 39822                           
 39823                           ; BSR set to: 1
 39824                           ;motor.c: 594: };motor.c: 597: overhead_cw = 0;
 39825  00CCA2  0E00               	movlw	0
 39826  00CCA4  0100               	movlb	0	; () banked
 39827  00CCA6  6FB5               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 39828  00CCA8  0E00               	movlw	0
 39829  00CCAA  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 39830  00CCAC  0E00               	movlw	0
 39831  00CCAE  6FB7               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 39832  00CCB0  0E00               	movlw	0
 39833  00CCB2  6FB8               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 39834                           
 39835                           ; BSR set to: 0
 39836                           ;motor.c: 598: distance_cw = target_position - os.current_position_in_steps;
 39837  00CCB4  C178  F0AD         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 39838  00CCB8  C179  F0AE         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 39839  00CCBC  C17A  F0AF         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 39840  00CCC0  C17B  F0B0         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 39841  00CCC4  1FAD               	comf	??_motor_go_to_steps_position& (0+255),f,b
 39842  00CCC6  1FAE               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39843  00CCC8  1FAF               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39844  00CCCA  1FB0               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39845  00CCCC  2BAD               	incf	??_motor_go_to_steps_position& (0+255),f,b
 39846  00CCCE  0E00               	movlw	0
 39847  00CCD0  23AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39848  00CCD2  23AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39849  00CCD4  23B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39850  00CCD6  51A9               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 39851  00CCD8  25AD               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 39852  00CCDA  6FBD               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 39853  00CCDC  51AA               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 39854  00CCDE  21AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 39855  00CCE0  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 39856  00CCE2  51AB               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 39857  00CCE4  21AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 39858  00CCE6  6FBF               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 39859  00CCE8  51AC               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 39860  00CCEA  21B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 39861  00CCEC  6FC0               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 39862                           
 39863                           ; BSR set to: 0
 39864                           ;motor.c: 599: if(distance_cw>config.full_circle_in_steps)
 39865  00CCEE  51BD               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 39866  00CCF0  0101               	movlb	1	; () banked
 39867  00CCF2  5DA1               	subwf	_config& (0+255),w,b
 39868  00CCF4  0100               	movlb	0	; () banked
 39869  00CCF6  51BE               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 39870  00CCF8  0101               	movlb	1	; () banked
 39871  00CCFA  59A2               	subwfb	(_config+1)& (0+255),w,b
 39872  00CCFC  0100               	movlb	0	; () banked
 39873  00CCFE  51BF               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 39874  00CD00  0101               	movlb	1	; () banked
 39875  00CD02  59A3               	subwfb	(_config+2)& (0+255),w,b
 39876  00CD04  0100               	movlb	0	; () banked
 39877  00CD06  51C0               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 39878  00CD08  0101               	movlb	1	; () banked
 39879  00CD0A  59A4               	subwfb	(_config+3)& (0+255),w,b
 39880  00CD0C  B0D8               	btfsc	status,0,c
 39881  00CD0E  D00F               	goto	l2543
 39882                           
 39883                           ; BSR set to: 1
 39884                           ;motor.c: 600: {;motor.c: 601: distance_cw += config.full_circle_in_steps;
 39885  00CD10  51A1               	movf	_config& (0+255),w,b
 39886  00CD12  0100               	movlb	0	; () banked
 39887  00CD14  27BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 39888  00CD16  0101               	movlb	1	; () banked
 39889  00CD18  51A2               	movf	(_config+1)& (0+255),w,b
 39890  00CD1A  0100               	movlb	0	; () banked
 39891  00CD1C  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 39892  00CD1E  0101               	movlb	1	; () banked
 39893  00CD20  51A3               	movf	(_config+2)& (0+255),w,b
 39894  00CD22  0100               	movlb	0	; () banked
 39895  00CD24  23BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 39896  00CD26  0101               	movlb	1	; () banked
 39897  00CD28  51A4               	movf	(_config+3)& (0+255),w,b
 39898  00CD2A  0100               	movlb	0	; () banked
 39899  00CD2C  23C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 39900  00CD2E                     l2543:
 39901                           
 39902                           ;motor.c: 602: };motor.c: 603: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 39903  00CD2E  0101               	movlb	1	; () banked
 39904  00CD30  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 39905  00CD32  A4D8               	btfss	status,2,c
 39906  00CD34  D023               	goto	l2544
 39907                           
 39908                           ; BSR set to: 1
 39909                           ;motor.c: 604: {;motor.c: 605: distance_cw += config.overshoot_in_steps;
 39910  00CD36  51A6               	movf	(_config+5)& (0+255),w,b
 39911  00CD38  0100               	movlb	0	; () banked
 39912  00CD3A  27BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 39913  00CD3C  0101               	movlb	1	; () banked
 39914  00CD3E  51A7               	movf	(_config+6)& (0+255),w,b
 39915  00CD40  0100               	movlb	0	; () banked
 39916  00CD42  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 39917  00CD44  0E00               	movlw	0
 39918  00CD46  23BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 39919  00CD48  0E00               	movlw	0
 39920  00CD4A  23C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 39921                           
 39922                           ;motor.c: 606: overhead_cw += config.overshoot_in_steps;
 39923  00CD4C  0101               	movlb	1	; () banked
 39924  00CD4E  51A6               	movf	(_config+5)& (0+255),w,b
 39925  00CD50  0100               	movlb	0	; () banked
 39926  00CD52  27B5               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 39927  00CD54  0101               	movlb	1	; () banked
 39928  00CD56  51A7               	movf	(_config+6)& (0+255),w,b
 39929  00CD58  0100               	movlb	0	; () banked
 39930  00CD5A  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 39931  00CD5C  0E00               	movlw	0
 39932  00CD5E  23B7               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 39933  00CD60  0E00               	movlw	0
 39934  00CD62  23B8               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 39935                           
 39936                           ;motor.c: 607: overhead_cw += config.overshoot_cost_in_steps;
 39937  00CD64  0101               	movlb	1	; () banked
 39938  00CD66  51A8               	movf	(_config+7)& (0+255),w,b
 39939  00CD68  0100               	movlb	0	; () banked
 39940  00CD6A  27B5               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 39941  00CD6C  0101               	movlb	1	; () banked
 39942  00CD6E  51A9               	movf	(_config+8)& (0+255),w,b
 39943  00CD70  0100               	movlb	0	; () banked
 39944  00CD72  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 39945  00CD74  0E00               	movlw	0
 39946  00CD76  23B7               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 39947  00CD78  0E00               	movlw	0
 39948  00CD7A  23B8               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 39949  00CD7C                     l2544:
 39950                           
 39951                           ;motor.c: 608: };motor.c: 611: overhead_ccw = 0;
 39952                           
 39953                           ; BSR set to: 0
 39954  00CD7C  0E00               	movlw	0
 39955  00CD7E  0100               	movlb	0	; () banked
 39956  00CD80  6FB9               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 39957  00CD82  0E00               	movlw	0
 39958  00CD84  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 39959  00CD86  0E00               	movlw	0
 39960  00CD88  6FBB               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 39961  00CD8A  0E00               	movlw	0
 39962  00CD8C  6FBC               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 39963                           
 39964                           ; BSR set to: 0
 39965                           ;motor.c: 612: distance_ccw = os.current_position_in_steps - target_position;
 39966  00CD8E  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 39967  00CD92  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 39968  00CD96  C0AB  F0AF         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 39969  00CD9A  C0AC  F0B0         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 39970  00CD9E  1FAD               	comf	??_motor_go_to_steps_position& (0+255),f,b
 39971  00CDA0  1FAE               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39972  00CDA2  1FAF               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39973  00CDA4  1FB0               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39974  00CDA6  2BAD               	incf	??_motor_go_to_steps_position& (0+255),f,b
 39975  00CDA8  0E00               	movlw	0
 39976  00CDAA  23AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39977  00CDAC  23AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39978  00CDAE  23B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39979  00CDB0  0101               	movlb	1	; () banked
 39980  00CDB2  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 39981  00CDB4  0100               	movlb	0	; () banked
 39982  00CDB6  25AD               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 39983  00CDB8  6FC1               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 39984  00CDBA  0101               	movlb	1	; () banked
 39985  00CDBC  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 39986  00CDBE  0100               	movlb	0	; () banked
 39987  00CDC0  21AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 39988  00CDC2  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 39989  00CDC4  0101               	movlb	1	; () banked
 39990  00CDC6  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 39991  00CDC8  0100               	movlb	0	; () banked
 39992  00CDCA  21AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 39993  00CDCC  6FC3               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 39994  00CDCE  0101               	movlb	1	; () banked
 39995  00CDD0  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 39996  00CDD2  0100               	movlb	0	; () banked
 39997  00CDD4  21B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 39998  00CDD6  6FC4               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 39999                           
 40000                           ; BSR set to: 0
 40001                           ;motor.c: 613: if(distance_ccw>config.full_circle_in_steps)
 40002  00CDD8  51C1               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40003  00CDDA  0101               	movlb	1	; () banked
 40004  00CDDC  5DA1               	subwf	_config& (0+255),w,b
 40005  00CDDE  0100               	movlb	0	; () banked
 40006  00CDE0  51C2               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40007  00CDE2  0101               	movlb	1	; () banked
 40008  00CDE4  59A2               	subwfb	(_config+1)& (0+255),w,b
 40009  00CDE6  0100               	movlb	0	; () banked
 40010  00CDE8  51C3               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40011  00CDEA  0101               	movlb	1	; () banked
 40012  00CDEC  59A3               	subwfb	(_config+2)& (0+255),w,b
 40013  00CDEE  0100               	movlb	0	; () banked
 40014  00CDF0  51C4               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40015  00CDF2  0101               	movlb	1	; () banked
 40016  00CDF4  59A4               	subwfb	(_config+3)& (0+255),w,b
 40017  00CDF6  B0D8               	btfsc	status,0,c
 40018  00CDF8  D00F               	goto	l2545
 40019                           
 40020                           ; BSR set to: 1
 40021                           ;motor.c: 614: {;motor.c: 615: distance_ccw += config.full_circle_in_steps;
 40022  00CDFA  51A1               	movf	_config& (0+255),w,b
 40023  00CDFC  0100               	movlb	0	; () banked
 40024  00CDFE  27C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40025  00CE00  0101               	movlb	1	; () banked
 40026  00CE02  51A2               	movf	(_config+1)& (0+255),w,b
 40027  00CE04  0100               	movlb	0	; () banked
 40028  00CE06  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40029  00CE08  0101               	movlb	1	; () banked
 40030  00CE0A  51A3               	movf	(_config+2)& (0+255),w,b
 40031  00CE0C  0100               	movlb	0	; () banked
 40032  00CE0E  23C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40033  00CE10  0101               	movlb	1	; () banked
 40034  00CE12  51A4               	movf	(_config+3)& (0+255),w,b
 40035  00CE14  0100               	movlb	0	; () banked
 40036  00CE16  23C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40037  00CE18                     l2545:
 40038                           
 40039                           ;motor.c: 616: };motor.c: 617: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40040  00CE18  0101               	movlb	1	; () banked
 40041  00CE1A  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40042  00CE1C  A4D8               	btfss	status,2,c
 40043  00CE1E  D023               	goto	l2546
 40044                           
 40045                           ; BSR set to: 1
 40046                           ;motor.c: 618: {;motor.c: 619: distance_ccw += config.overshoot_in_steps;
 40047  00CE20  51A6               	movf	(_config+5)& (0+255),w,b
 40048  00CE22  0100               	movlb	0	; () banked
 40049  00CE24  27C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40050  00CE26  0101               	movlb	1	; () banked
 40051  00CE28  51A7               	movf	(_config+6)& (0+255),w,b
 40052  00CE2A  0100               	movlb	0	; () banked
 40053  00CE2C  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40054  00CE2E  0E00               	movlw	0
 40055  00CE30  23C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40056  00CE32  0E00               	movlw	0
 40057  00CE34  23C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40058                           
 40059                           ;motor.c: 620: overhead_ccw += config.overshoot_in_steps;
 40060  00CE36  0101               	movlb	1	; () banked
 40061  00CE38  51A6               	movf	(_config+5)& (0+255),w,b
 40062  00CE3A  0100               	movlb	0	; () banked
 40063  00CE3C  27B9               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40064  00CE3E  0101               	movlb	1	; () banked
 40065  00CE40  51A7               	movf	(_config+6)& (0+255),w,b
 40066  00CE42  0100               	movlb	0	; () banked
 40067  00CE44  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 40068  00CE46  0E00               	movlw	0
 40069  00CE48  23BB               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 40070  00CE4A  0E00               	movlw	0
 40071  00CE4C  23BC               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 40072                           
 40073                           ;motor.c: 621: overhead_ccw += config.overshoot_cost_in_steps;
 40074  00CE4E  0101               	movlb	1	; () banked
 40075  00CE50  51A8               	movf	(_config+7)& (0+255),w,b
 40076  00CE52  0100               	movlb	0	; () banked
 40077  00CE54  27B9               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40078  00CE56  0101               	movlb	1	; () banked
 40079  00CE58  51A9               	movf	(_config+8)& (0+255),w,b
 40080  00CE5A  0100               	movlb	0	; () banked
 40081  00CE5C  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 40082  00CE5E  0E00               	movlw	0
 40083  00CE60  23BB               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 40084  00CE62  0E00               	movlw	0
 40085  00CE64  23BC               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 40086  00CE66                     l2546:
 40087                           
 40088                           ;motor.c: 622: };motor.c: 625: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 40089                           
 40090                           ; BSR set to: 0
 40091  00CE66  0100               	movlb	0	; () banked
 40092  00CE68  51B9               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 40093  00CE6A  25C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40094  00CE6C  6FAD               	movwf	??_motor_go_to_steps_position& (0+255),b
 40095  00CE6E  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 40096  00CE70  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40097  00CE72  6FAE               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 40098  00CE74  51BB               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 40099  00CE76  21C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40100  00CE78  6FAF               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 40101  00CE7A  51BC               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 40102  00CE7C  21C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40103  00CE7E  6FB0               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 40104  00CE80  51B5               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 40105  00CE82  25BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40106  00CE84  6FB1               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 40107  00CE86  51B6               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 40108  00CE88  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40109  00CE8A  6FB2               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 40110  00CE8C  51B7               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 40111  00CE8E  21BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40112  00CE90  6FB3               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 40113  00CE92  51B8               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 40114  00CE94  21C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40115  00CE96  6FB4               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 40116  00CE98  51AD               	movf	??_motor_go_to_steps_position& (0+255),w,b
 40117  00CE9A  5DB1               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 40118  00CE9C  51AE               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40119  00CE9E  59B2               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 40120  00CEA0  51AF               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40121  00CEA2  59B3               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 40122  00CEA4  51B0               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40123  00CEA6  59B4               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 40124  00CEA8  B0D8               	btfsc	status,0,c
 40125  00CEAA  D04B               	goto	l2547
 40126                           
 40127                           ; BSR set to: 0
 40128                           ;motor.c: 626: {;motor.c: 627: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40129  00CEAC  0101               	movlb	1	; () banked
 40130  00CEAE  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40131  00CEB0  A4D8               	btfss	status,2,c
 40132  00CEB2  D019               	goto	l2548
 40133                           
 40134                           ; BSR set to: 1
 40135                           ;motor.c: 628: {;motor.c: 630: if(distance_cw!=0)
 40136  00CEB4  0100               	movlb	0	; () banked
 40137  00CEB6  51BD               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40138  00CEB8  11BE               	iorwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40139  00CEBA  11BF               	iorwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40140  00CEBC  11C0               	iorwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40141  00CEBE  B4D8               	btfsc	status,2,c
 40142  00CEC0  0012               	return	
 40143                           
 40144                           ; BSR set to: 0
 40145                           ;motor.c: 631: {;motor.c: 632: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          , MOTOR_MOVE_TYPE_NORMAL);
 40146  00CEC2  C0BD  F0A1         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 40147  00CEC6  C0BE  F0A2         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 40148  00CECA  C0BF  F0A3         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 40149  00CECE  C0C0  F0A4         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 40150  00CED2  0E00               	movlw	0
 40151  00CED4  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40152  00CED6  0E00               	movlw	0
 40153  00CED8  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40154  00CEDA  0E00               	movlw	0
 40155  00CEDC  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40156  00CEDE  0E01               	movlw	1
 40157  00CEE0  EC48  F093         	call	_motor_schedule_command
 40158                           
 40159                           ;motor.c: 633: };motor.c: 634: }
 40160  00CEE4  0012               	return	
 40161  00CEE6                     l2548:
 40162                           
 40163                           ;motor.c: 635: else;motor.c: 636: {;motor.c: 638: if(distance_cw!=0)
 40164  00CEE6  0100               	movlb	0	; () banked
 40165  00CEE8  51BD               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40166  00CEEA  11BE               	iorwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40167  00CEEC  11BF               	iorwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40168  00CEEE  11C0               	iorwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40169  00CEF0  B4D8               	btfsc	status,2,c
 40170  00CEF2  D011               	goto	l2551
 40171                           
 40172                           ; BSR set to: 0
 40173                           ;motor.c: 639: {;motor.c: 640: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          , MOTOR_MOVE_TYPE_OVERSHOOT);
 40174  00CEF4  C0BD  F0A1         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 40175  00CEF8  C0BE  F0A2         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 40176  00CEFC  C0BF  F0A3         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 40177  00CF00  C0C0  F0A4         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 40178  00CF04  0E00               	movlw	0
 40179  00CF06  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40180  00CF08  0E00               	movlw	0
 40181  00CF0A  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40182  00CF0C  0E01               	movlw	1
 40183  00CF0E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40184  00CF10  0E01               	movlw	1
 40185  00CF12  EC48  F093         	call	_motor_schedule_command
 40186  00CF16                     l2551:
 40187                           
 40188                           ;motor.c: 641: };motor.c: 642: if(config.overshoot_in_steps!=0)
 40189  00CF16  0101               	movlb	1	; () banked
 40190  00CF18  51A6               	movf	(_config+5)& (0+255),w,b
 40191  00CF1A  11A7               	iorwf	(_config+6)& (0+255),w,b
 40192  00CF1C  B4D8               	btfsc	status,2,c
 40193  00CF1E  0012               	return	
 40194                           
 40195                           ; BSR set to: 1
 40196                           ;motor.c: 643: {;motor.c: 644: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 40197  00CF20  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40198  00CF24  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40199  00CF28  0100               	movlb	0	; () banked
 40200  00CF2A  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40201  00CF2C  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40202  00CF2E  0E00               	movlw	0
 40203  00CF30  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40204  00CF32  0E00               	movlw	0
 40205  00CF34  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40206  00CF36  0E00               	movlw	0
 40207  00CF38  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40208  00CF3A  0EFF               	movlw	255
 40209  00CF3C  EC48  F093         	call	_motor_schedule_command
 40210                           
 40211                           ;motor.c: 645: };motor.c: 646: };motor.c: 647: }
 40212  00CF40  0012               	return	
 40213  00CF42                     l2547:
 40214                           
 40215                           ;motor.c: 648: else;motor.c: 649: {;motor.c: 650: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 40216  00CF42  0101               	movlb	1	; () banked
 40217  00CF44  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40218  00CF46  A4D8               	btfss	status,2,c
 40219  00CF48  D019               	goto	l2554
 40220                           
 40221                           ; BSR set to: 1
 40222                           ;motor.c: 651: {;motor.c: 653: if(distance_ccw!=0)
 40223  00CF4A  0100               	movlb	0	; () banked
 40224  00CF4C  51C1               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40225  00CF4E  11C2               	iorwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40226  00CF50  11C3               	iorwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40227  00CF52  11C4               	iorwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40228  00CF54  B4D8               	btfsc	status,2,c
 40229  00CF56  0012               	return	
 40230                           
 40231                           ; BSR set to: 0
 40232                           ;motor.c: 654: {;motor.c: 655: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0, MOTOR_MOVE_TYPE_NORMAL);
 40233  00CF58  C0C1  F0A1         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 40234  00CF5C  C0C2  F0A2         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 40235  00CF60  C0C3  F0A3         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 40236  00CF64  C0C4  F0A4         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 40237  00CF68  0E00               	movlw	0
 40238  00CF6A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40239  00CF6C  0E00               	movlw	0
 40240  00CF6E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40241  00CF70  0E00               	movlw	0
 40242  00CF72  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40243  00CF74  0EFF               	movlw	255
 40244  00CF76  EC48  F093         	call	_motor_schedule_command
 40245                           
 40246                           ;motor.c: 656: };motor.c: 657: }
 40247  00CF7A  0012               	return	
 40248  00CF7C                     l2554:
 40249                           
 40250                           ;motor.c: 658: else;motor.c: 659: {;motor.c: 661: if(distance_ccw!=0)
 40251  00CF7C  0100               	movlb	0	; () banked
 40252  00CF7E  51C1               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40253  00CF80  11C2               	iorwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40254  00CF82  11C3               	iorwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40255  00CF84  11C4               	iorwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40256  00CF86  B4D8               	btfsc	status,2,c
 40257  00CF88  D011               	goto	l2557
 40258                           
 40259                           ; BSR set to: 0
 40260                           ;motor.c: 662: {;motor.c: 663: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0, MOTOR_MOVE_TYPE_OVERSHOOT);
 40261  00CF8A  C0C1  F0A1         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 40262  00CF8E  C0C2  F0A2         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 40263  00CF92  C0C3  F0A3         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 40264  00CF96  C0C4  F0A4         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 40265  00CF9A  0E00               	movlw	0
 40266  00CF9C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40267  00CF9E  0E00               	movlw	0
 40268  00CFA0  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40269  00CFA2  0E01               	movlw	1
 40270  00CFA4  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40271  00CFA6  0EFF               	movlw	255
 40272  00CFA8  EC48  F093         	call	_motor_schedule_command
 40273  00CFAC                     l2557:
 40274                           
 40275                           ;motor.c: 664: };motor.c: 665: if(config.overshoot_in_steps!=0)
 40276  00CFAC  0101               	movlb	1	; () banked
 40277  00CFAE  51A6               	movf	(_config+5)& (0+255),w,b
 40278  00CFB0  11A7               	iorwf	(_config+6)& (0+255),w,b
 40279  00CFB2  B4D8               	btfsc	status,2,c
 40280  00CFB4  0012               	return	
 40281                           
 40282                           ; BSR set to: 1
 40283                           ;motor.c: 666: {;motor.c: 667: motor_schedule_command(MOTOR_DIRECTION_CW, config.oversho
      +                          ot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 40284  00CFB6  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40285  00CFBA  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40286  00CFBE  0100               	movlb	0	; () banked
 40287  00CFC0  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40288  00CFC2  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40289  00CFC4  0E00               	movlw	0
 40290  00CFC6  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40291  00CFC8  0E00               	movlw	0
 40292  00CFCA  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40293  00CFCC  0E00               	movlw	0
 40294  00CFCE  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40295  00CFD0  0E01               	movlw	1
 40296  00CFD2  EC48  F093         	call	_motor_schedule_command
 40297  00CFD6  0012               	return	
 40298  00CFD8                     __end_of_motor_go_to_steps_position:
 40299                           	opt stack 0
 40300                           tosu	equ	0xFFF
 40301                           tosh	equ	0xFFE
 40302                           tosl	equ	0xFFD
 40303                           pclath	equ	0xFFA
 40304                           tblptru	equ	0xFF8
 40305                           tblptrh	equ	0xFF7
 40306                           tblptrl	equ	0xFF6
 40307                           tablat	equ	0xFF5
 40308                           prodh	equ	0xFF4
 40309                           prodl	equ	0xFF3
 40310                           intcon	equ	0xFF2
 40311                           indf0	equ	0xFEF
 40312                           postinc0	equ	0xFEE
 40313                           fsr0h	equ	0xFEA
 40314                           fsr0l	equ	0xFE9
 40315                           wreg	equ	0xFE8
 40316                           indf1	equ	0xFE7
 40317                           postinc1	equ	0xFE6
 40318                           postdec1	equ	0xFE5
 40319                           plusw1	equ	0xFE3
 40320                           fsr1h	equ	0xFE2
 40321                           fsr1l	equ	0xFE1
 40322                           indf2	equ	0xFDF
 40323                           postinc2	equ	0xFDE
 40324                           postdec2	equ	0xFDD
 40325                           plusw2	equ	0xFDB
 40326                           fsr2h	equ	0xFDA
 40327                           fsr2l	equ	0xFD9
 40328                           status	equ	0xFD8
 40329                           
 40330 ;; *************** function _motor_clear_command_cue *****************
 40331 ;; Defined at:
 40332 ;;		line 154 in file "motor.c"
 40333 ;; Parameters:    Size  Location     Type
 40334 ;;		None
 40335 ;; Auto vars:     Size  Location     Type
 40336 ;;		None
 40337 ;; Return value:  Size  Location     Type
 40338 ;;                  1    wreg      void 
 40339 ;; Registers used:
 40340 ;;		None
 40341 ;; Tracked objects:
 40342 ;;		On entry : 0/0
 40343 ;;		On exit  : 0/0
 40344 ;;		Unchanged: 0/0
 40345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40350 ;;Total ram usage:        0 bytes
 40351 ;; Hardware stack levels used:    1
 40352 ;; Hardware stack levels required when called:   10
 40353 ;; This function calls:
 40354 ;;		Nothing
 40355 ;; This function is called by:
 40356 ;;		__parse_command_short
 40357 ;; This function uses a non-reentrant model
 40358 ;;
 40359                           
 40360                           	psect	text166
 40361  0158EA                     __ptext166:
 40362                           	opt stack 0
 40363  0158EA                     _motor_clear_command_cue:
 40364                           	opt stack 17
 40365                           
 40366                           ;motor.c: 157: motor_cue_write_index = motor_cue_read_index;
 40367                           
 40368                           ;incstack = 0
 40369  0158EA  C158  F157         	movff	_motor_cue_read_index,_motor_cue_write_index
 40370  0158EE  0012               	return		;funcret
 40371  0158F0                     __end_of_motor_clear_command_cue:
 40372                           	opt stack 0
 40373                           tosu	equ	0xFFF
 40374                           tosh	equ	0xFFE
 40375                           tosl	equ	0xFFD
 40376                           pclath	equ	0xFFA
 40377                           tblptru	equ	0xFF8
 40378                           tblptrh	equ	0xFF7
 40379                           tblptrl	equ	0xFF6
 40380                           tablat	equ	0xFF5
 40381                           prodh	equ	0xFF4
 40382                           prodl	equ	0xFF3
 40383                           intcon	equ	0xFF2
 40384                           indf0	equ	0xFEF
 40385                           postinc0	equ	0xFEE
 40386                           fsr0h	equ	0xFEA
 40387                           fsr0l	equ	0xFE9
 40388                           wreg	equ	0xFE8
 40389                           indf1	equ	0xFE7
 40390                           postinc1	equ	0xFE6
 40391                           postdec1	equ	0xFE5
 40392                           plusw1	equ	0xFE3
 40393                           fsr1h	equ	0xFE2
 40394                           fsr1l	equ	0xFE1
 40395                           indf2	equ	0xFDF
 40396                           postinc2	equ	0xFDE
 40397                           postdec2	equ	0xFDD
 40398                           plusw2	equ	0xFDB
 40399                           fsr2h	equ	0xFDA
 40400                           fsr2l	equ	0xFD9
 40401                           status	equ	0xFD8
 40402                           
 40403 ;; *************** function __parse_command_long *****************
 40404 ;; Defined at:
 40405 ;;		line 435 in file "api.c"
 40406 ;; Parameters:    Size  Location     Type
 40407 ;;  data            2   89[BANK0 ] PTR unsigned char 
 40408 ;;		 -> ReceivedDataBuffer(64), 
 40409 ;;  out_buffer      2   91[BANK0 ] PTR unsigned char 
 40410 ;;		 -> ToSendDataBuffer(64), 
 40411 ;;  out_idx_ptr     2   93[BANK0 ] PTR unsigned char 
 40412 ;;		 -> api_parse@out_idx(1), 
 40413 ;; Auto vars:     Size  Location     Type
 40414 ;;  length          1   95[BANK0 ] unsigned char 
 40415 ;; Return value:  Size  Location     Type
 40416 ;;                  1    wreg      unsigned char 
 40417 ;; Registers used:
 40418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40419 ;; Tracked objects:
 40420 ;;		On entry : 0/0
 40421 ;;		On exit  : 0/0
 40422 ;;		Unchanged: 0/0
 40423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40424 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40427 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40428 ;;Total ram usage:        7 bytes
 40429 ;; Hardware stack levels used:    1
 40430 ;; Hardware stack levels required when called:   16
 40431 ;; This function calls:
 40432 ;;		__parse_jump_steps
 40433 ;;		__parse_jump_steps_with_overshoot
 40434 ;;		__parse_set_manual_speed
 40435 ;; This function is called by:
 40436 ;;		_api_parse
 40437 ;; This function uses a non-reentrant model
 40438 ;;
 40439                           
 40440                           	psect	text167
 40441  0138E4                     __ptext167:
 40442                           	opt stack 0
 40443  0138E4                     __parse_command_long:
 40444                           	opt stack 12
 40445                           
 40446                           ;api.c: 437: uint8_t length = 65;
 40447                           
 40448                           ;incstack = 0
 40449  0138E4  0E41               	movlw	65
 40450  0138E6  0100               	movlb	0	; () banked
 40451  0138E8  6FBF               	movwf	__parse_command_long@length& (0+255),b
 40452                           
 40453                           ;api.c: 439: switch(data[0])
 40454  0138EA  D02F               	goto	l2326
 40455  0138EC                     
 40456                           ; BSR set to: 0
 40457                           ;api.c: 446: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 40458                           
 40459                           ; BSR set to: 0
 40460  0138EC  C0B9  F0A9         	movff	__parse_command_long@data,__parse_jump_steps@data
 40461  0138F0  C0BA  F0AA         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 40462  0138F4  C0BB  F0AB         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 40463  0138F8  C0BC  F0AC         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 40464  0138FC  C0BD  F0AD         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 40465  013900  C0BE  F0AE         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 40466  013904  EC65  F07C         	call	__parse_jump_steps	;wreg free
 40467  013908  D01D               	goto	L64
 40468  01390A                     
 40469                           ; BSR set to: 0
 40470                           ;api.c: 450: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 40471                           
 40472                           ; BSR set to: 0
 40473  01390A  C0B9  F0AE         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 40474  01390E  C0BA  F0AF         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 40475  013912  C0BB  F0B0         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 40476  013916  C0BC  F0B1         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 40477  01391A  C0BD  F0B2         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 40478  01391E  C0BE  F0B3         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 40479  013922  ECD1  F083         	call	__parse_jump_steps_with_overshoot	;wreg free
 40480  013926  D00E               	goto	L64
 40481  013928                     
 40482                           ; BSR set to: 0
 40483                           ;api.c: 454: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 40484                           
 40485                           ; BSR set to: 0
 40486  013928  C0B9  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 40487  01392C  C0BA  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 40488  013930  C0BB  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 40489  013934  C0BC  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 40490  013938  C0BD  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 40491  01393C  C0BE  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 40492  013940  EC3A  F09D         	call	__parse_set_manual_speed	;wreg free
 40493  013944                     L64:
 40494  013944  0100               	movlb	0	; () banked
 40495  013946  6FBF               	movwf	__parse_command_long@length& (0+255),b
 40496                           
 40497                           ; BSR set to: 0
 40498                           ;api.c: 456: }
 40499                           
 40500                           ;api.c: 455: break;
 40501  013948  D00E               	goto	l2328
 40502  01394A                     l2326:
 40503                           
 40504                           ; BSR set to: 0
 40505                           
 40506                           ; BSR set to: 0
 40507  01394A  C0B9  FFD9         	movff	__parse_command_long@data,fsr2l
 40508  01394E  C0BA  FFDA         	movff	__parse_command_long@data+1,fsr2h
 40509  013952  50DF               	movf	indf2,w,c
 40510                           
 40511                           ; Switch size 1, requested type "space"
 40512                           ; Number of cases is 3, Range of values is 144 to 146
 40513                           ; switch strategies available:
 40514                           ; Name         Instructions Cycles
 40515                           ; simple_byte           10     6 (average)
 40516                           ;	Chosen strategy is simple_byte
 40517  013954  0A90               	xorlw	144	; case 144
 40518  013956  B4D8               	btfsc	status,2,c
 40519  013958  D7C9               	goto	l2327
 40520  01395A  0A01               	xorlw	1	; case 145
 40521  01395C  B4D8               	btfsc	status,2,c
 40522  01395E  D7D5               	goto	l2329
 40523  013960  0A03               	xorlw	3	; case 146
 40524  013962  B4D8               	btfsc	status,2,c
 40525  013964  D7E1               	goto	l2330
 40526  013966                     l2328:
 40527                           
 40528                           ; BSR set to: 0
 40529                           ;api.c: 460: return length;
 40530                           
 40531                           ; BSR set to: 0
 40532  013966  51BF               	movf	__parse_command_long@length& (0+255),w,b
 40533  013968  0012               	return	
 40534  01396A                     __end_of__parse_command_long:
 40535                           	opt stack 0
 40536                           tosu	equ	0xFFF
 40537                           tosh	equ	0xFFE
 40538                           tosl	equ	0xFFD
 40539                           pclath	equ	0xFFA
 40540                           tblptru	equ	0xFF8
 40541                           tblptrh	equ	0xFF7
 40542                           tblptrl	equ	0xFF6
 40543                           tablat	equ	0xFF5
 40544                           prodh	equ	0xFF4
 40545                           prodl	equ	0xFF3
 40546                           intcon	equ	0xFF2
 40547                           indf0	equ	0xFEF
 40548                           postinc0	equ	0xFEE
 40549                           fsr0h	equ	0xFEA
 40550                           fsr0l	equ	0xFE9
 40551                           wreg	equ	0xFE8
 40552                           indf1	equ	0xFE7
 40553                           postinc1	equ	0xFE6
 40554                           postdec1	equ	0xFE5
 40555                           plusw1	equ	0xFE3
 40556                           fsr1h	equ	0xFE2
 40557                           fsr1l	equ	0xFE1
 40558                           indf2	equ	0xFDF
 40559                           postinc2	equ	0xFDE
 40560                           postdec2	equ	0xFDD
 40561                           plusw2	equ	0xFDB
 40562                           fsr2h	equ	0xFDA
 40563                           fsr2l	equ	0xFD9
 40564                           status	equ	0xFD8
 40565                           
 40566 ;; *************** function __parse_set_manual_speed *****************
 40567 ;; Defined at:
 40568 ;;		line 554 in file "api.c"
 40569 ;; Parameters:    Size  Location     Type
 40570 ;;  data            2    4[BANK0 ] PTR unsigned char 
 40571 ;;		 -> ReceivedDataBuffer(64), 
 40572 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 40573 ;;		 -> ToSendDataBuffer(64), 
 40574 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 40575 ;;		 -> api_parse@out_idx(1), 
 40576 ;; Auto vars:     Size  Location     Type
 40577 ;;  new_speed       2   11[BANK0 ] unsigned int 
 40578 ;; Return value:  Size  Location     Type
 40579 ;;                  1    wreg      unsigned char 
 40580 ;; Registers used:
 40581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40582 ;; Tracked objects:
 40583 ;;		On entry : 0/0
 40584 ;;		On exit  : 0/0
 40585 ;;		Unchanged: 0/0
 40586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40587 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40590 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40591 ;;Total ram usage:        9 bytes
 40592 ;; Hardware stack levels used:    1
 40593 ;; Hardware stack levels required when called:   12
 40594 ;; This function calls:
 40595 ;;		_motor_set_manual_speed
 40596 ;; This function is called by:
 40597 ;;		__parse_command_long
 40598 ;; This function uses a non-reentrant model
 40599 ;;
 40600                           
 40601                           	psect	text168
 40602  013A74                     __ptext168:
 40603                           	opt stack 0
 40604  013A74                     __parse_set_manual_speed:
 40605                           	opt stack 15
 40606                           
 40607                           ;api.c: 558: uint16_t new_speed;;api.c: 560: new_speed = data[1];
 40608                           
 40609                           ; BSR set to: 0
 40610                           ;incstack = 0
 40611  013A74  0100               	movlb	0	; () banked
 40612  013A76  EE20 F001          	lfsr	2,1
 40613  013A7A  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 40614  013A7C  26D9               	addwf	fsr2l,f,c
 40615  013A7E  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 40616  013A80  22DA               	addwfc	fsr2h,f,c
 40617  013A82  50DF               	movf	indf2,w,c
 40618  013A84  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 40619  013A86  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 40620  013A88  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 40621  013A8A  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 40622                           
 40623                           ; BSR set to: 0
 40624                           ;api.c: 561: new_speed <<= 8;
 40625  013A8C  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 40626  013A8E  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 40627  013A90  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 40628                           
 40629                           ; BSR set to: 0
 40630                           ;api.c: 562: new_speed |= data[2];
 40631  013A92  EE20 F002          	lfsr	2,2
 40632  013A96  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 40633  013A98  26D9               	addwf	fsr2l,f,c
 40634  013A9A  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 40635  013A9C  22DA               	addwfc	fsr2h,f,c
 40636  013A9E  50DF               	movf	indf2,w,c
 40637  013AA0  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 40638  013AA2  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 40639  013AA4  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 40640                           
 40641                           ; BSR set to: 0
 40642                           ;api.c: 564: motor_set_manual_speed(new_speed);
 40643  013AA6  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 40644  013AAA  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 40645  013AAE  EC1B  F0A6         	call	_motor_set_manual_speed	;wreg free
 40646                           
 40647                           ;api.c: 567: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 40648  013AB2  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 40649  013AB6  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 40650  013ABA  50DF               	movf	indf2,w,c
 40651  013ABC  B4D8               	btfsc	status,2,c
 40652  013ABE  D01A               	goto	l2346
 40653  013AC0  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 40654  013AC4  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 40655  013AC8  0E3F               	movlw	63
 40656  013ACA  60DF               	cpfslt	indf2,c
 40657  013ACC  D013               	goto	l2346
 40658                           
 40659                           ;api.c: 568: {;api.c: 569: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 40660  013ACE  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 40661  013AD2  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 40662  013AD6  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 40663  013ADA  0E01               	movlw	1
 40664  013ADC  26DF               	addwf	indf2,f,c
 40665  013ADE  0100               	movlb	0	; () banked
 40666  013AE0  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 40667  013AE2  0D01               	mullw	1
 40668  013AE4  50F3               	movf	prodl,w,c
 40669  013AE6  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 40670  013AE8  6ED9               	movwf	fsr2l,c
 40671  013AEA  50F4               	movf	prodh,w,c
 40672  013AEC  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 40673  013AEE  6EDA               	movwf	fsr2h,c
 40674  013AF0  0E92               	movlw	146
 40675  013AF2  6EDF               	movwf	indf2,c
 40676  013AF4                     l2346:
 40677                           
 40678                           ;api.c: 570: };api.c: 572: return 3;
 40679                           
 40680                           ; BSR set to: 0
 40681  013AF4  0E03               	movlw	3
 40682  013AF6  0012               	return	
 40683  013AF8                     __end_of__parse_set_manual_speed:
 40684                           	opt stack 0
 40685                           tosu	equ	0xFFF
 40686                           tosh	equ	0xFFE
 40687                           tosl	equ	0xFFD
 40688                           pclath	equ	0xFFA
 40689                           tblptru	equ	0xFF8
 40690                           tblptrh	equ	0xFF7
 40691                           tblptrl	equ	0xFF6
 40692                           tablat	equ	0xFF5
 40693                           prodh	equ	0xFF4
 40694                           prodl	equ	0xFF3
 40695                           intcon	equ	0xFF2
 40696                           indf0	equ	0xFEF
 40697                           postinc0	equ	0xFEE
 40698                           fsr0h	equ	0xFEA
 40699                           fsr0l	equ	0xFE9
 40700                           wreg	equ	0xFE8
 40701                           indf1	equ	0xFE7
 40702                           postinc1	equ	0xFE6
 40703                           postdec1	equ	0xFE5
 40704                           plusw1	equ	0xFE3
 40705                           fsr1h	equ	0xFE2
 40706                           fsr1l	equ	0xFE1
 40707                           indf2	equ	0xFDF
 40708                           postinc2	equ	0xFDE
 40709                           postdec2	equ	0xFDD
 40710                           plusw2	equ	0xFDB
 40711                           fsr2h	equ	0xFDA
 40712                           fsr2l	equ	0xFD9
 40713                           status	equ	0xFD8
 40714                           
 40715 ;; *************** function _motor_set_manual_speed *****************
 40716 ;; Defined at:
 40717 ;;		line 555 in file "motor.c"
 40718 ;; Parameters:    Size  Location     Type
 40719 ;;  new_speed       2    2[BANK0 ] unsigned int 
 40720 ;; Auto vars:     Size  Location     Type
 40721 ;;		None
 40722 ;; Return value:  Size  Location     Type
 40723 ;;                  1    wreg      void 
 40724 ;; Registers used:
 40725 ;;		wreg, status,2, status,0, cstack
 40726 ;; Tracked objects:
 40727 ;;		On entry : 0/0
 40728 ;;		On exit  : 0/0
 40729 ;;		Unchanged: 0/0
 40730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40735 ;;Total ram usage:        2 bytes
 40736 ;; Hardware stack levels used:    1
 40737 ;; Hardware stack levels required when called:   11
 40738 ;; This function calls:
 40739 ;;		_motor_change_speed
 40740 ;; This function is called by:
 40741 ;;		__parse_set_manual_speed
 40742 ;;		_motor_increase_manual_speed
 40743 ;;		_motor_decrease_manual_speed
 40744 ;; This function uses a non-reentrant model
 40745 ;;
 40746                           
 40747                           	psect	text169
 40748  014C36                     __ptext169:
 40749                           	opt stack 0
 40750  014C36                     _motor_set_manual_speed:
 40751                           	opt stack 17
 40752                           
 40753                           ;motor.c: 557: if(new_speed>config.maximum_speed_manual)
 40754                           
 40755                           ;incstack = 0
 40756  014C36  0100               	movlb	0	; () banked
 40757  014C38  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 40758  014C3A  0101               	movlb	1	; () banked
 40759  014C3C  5DB4               	subwf	(_config+19)& (0+255),w,b
 40760  014C3E  0100               	movlb	0	; () banked
 40761  014C40  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 40762  014C42  0101               	movlb	1	; () banked
 40763  014C44  59B5               	subwfb	(_config+20)& (0+255),w,b
 40764  014C46  B0D8               	btfsc	status,0,c
 40765  014C48  D005               	goto	l2530
 40766                           
 40767                           ; BSR set to: 1
 40768                           ;motor.c: 558: {;motor.c: 559: os.manual_speed = config.maximum_speed_manual;
 40769  014C4A  C1B4  F194         	movff	_config+19,_os+35	;volatile
 40770  014C4E  C1B5  F195         	movff	_config+20,_os+36	;volatile
 40771                           
 40772                           ;motor.c: 560: }
 40773  014C52  D012               	goto	l2533
 40774  014C54                     l2530:
 40775                           
 40776                           ; BSR set to: 1
 40777                           ;motor.c: 561: else if(new_speed<config.minimum_speed)
 40778                           
 40779                           ; BSR set to: 1
 40780  014C54  51AA               	movf	(_config+9)& (0+255),w,b
 40781  014C56  0100               	movlb	0	; () banked
 40782  014C58  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 40783  014C5A  0101               	movlb	1	; () banked
 40784  014C5C  51AB               	movf	(_config+10)& (0+255),w,b
 40785  014C5E  0100               	movlb	0	; () banked
 40786  014C60  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 40787  014C62  B0D8               	btfsc	status,0,c
 40788  014C64  D005               	goto	l2532
 40789                           
 40790                           ; BSR set to: 0
 40791                           ;motor.c: 562: {;motor.c: 563: os.manual_speed = config.minimum_speed;
 40792  014C66  C1AA  F194         	movff	_config+9,_os+35	;volatile
 40793  014C6A  C1AB  F195         	movff	_config+10,_os+36	;volatile
 40794                           
 40795                           ;motor.c: 564: }
 40796  014C6E  D004               	goto	l2533
 40797  014C70                     l2532:
 40798                           
 40799                           ; BSR set to: 0
 40800                           ;motor.c: 565: else;motor.c: 566: {;motor.c: 567: os.manual_speed = new_speed;
 40801  014C70  C062  F194         	movff	motor_set_manual_speed@new_speed,_os+35	;volatile
 40802  014C74  C063  F195         	movff	motor_set_manual_speed@new_speed+1,_os+36	;volatile
 40803  014C78                     l2533:
 40804                           
 40805                           ;motor.c: 568: };motor.c: 569: motor_change_speed(new_speed);
 40806                           
 40807                           ; BSR set to: 0
 40808                           
 40809                           ; BSR set to: 0
 40810  014C78  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 40811  014C7C  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 40812  014C80  EC5C  F0AC         	call	_motor_change_speed	;wreg free
 40813  014C84  0012               	return		;funcret
 40814  014C86                     __end_of_motor_set_manual_speed:
 40815                           	opt stack 0
 40816                           tosu	equ	0xFFF
 40817                           tosh	equ	0xFFE
 40818                           tosl	equ	0xFFD
 40819                           pclath	equ	0xFFA
 40820                           tblptru	equ	0xFF8
 40821                           tblptrh	equ	0xFF7
 40822                           tblptrl	equ	0xFF6
 40823                           tablat	equ	0xFF5
 40824                           prodh	equ	0xFF4
 40825                           prodl	equ	0xFF3
 40826                           intcon	equ	0xFF2
 40827                           indf0	equ	0xFEF
 40828                           postinc0	equ	0xFEE
 40829                           fsr0h	equ	0xFEA
 40830                           fsr0l	equ	0xFE9
 40831                           wreg	equ	0xFE8
 40832                           indf1	equ	0xFE7
 40833                           postinc1	equ	0xFE6
 40834                           postdec1	equ	0xFE5
 40835                           plusw1	equ	0xFE3
 40836                           fsr1h	equ	0xFE2
 40837                           fsr1l	equ	0xFE1
 40838                           indf2	equ	0xFDF
 40839                           postinc2	equ	0xFDE
 40840                           postdec2	equ	0xFDD
 40841                           plusw2	equ	0xFDB
 40842                           fsr2h	equ	0xFDA
 40843                           fsr2l	equ	0xFD9
 40844                           status	equ	0xFD8
 40845                           
 40846 ;; *************** function _motor_change_speed *****************
 40847 ;; Defined at:
 40848 ;;		line 572 in file "motor.c"
 40849 ;; Parameters:    Size  Location     Type
 40850 ;;  new_speed       2    0[BANK0 ] unsigned int 
 40851 ;; Auto vars:     Size  Location     Type
 40852 ;;		None
 40853 ;; Return value:  Size  Location     Type
 40854 ;;                  1    wreg      void 
 40855 ;; Registers used:
 40856 ;;		None
 40857 ;; Tracked objects:
 40858 ;;		On entry : 0/0
 40859 ;;		On exit  : 0/0
 40860 ;;		Unchanged: 0/0
 40861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40866 ;;Total ram usage:        2 bytes
 40867 ;; Hardware stack levels used:    1
 40868 ;; Hardware stack levels required when called:   10
 40869 ;; This function calls:
 40870 ;;		Nothing
 40871 ;; This function is called by:
 40872 ;;		_motor_set_manual_speed
 40873 ;;		_encoder_statemachine
 40874 ;; This function uses a non-reentrant model
 40875 ;;
 40876                           
 40877                           	psect	text170
 40878  0158B8                     __ptext170:
 40879                           	opt stack 0
 40880  0158B8                     _motor_change_speed:
 40881                           	opt stack 17
 40882                           
 40883                           ;motor.c: 574: motor_maximum_speed = new_speed;
 40884                           
 40885                           ;incstack = 0
 40886  0158B8  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 40887  0158BC  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 40888  0158C0  0012               	return		;funcret
 40889  0158C2                     __end_of_motor_change_speed:
 40890                           	opt stack 0
 40891                           tosu	equ	0xFFF
 40892                           tosh	equ	0xFFE
 40893                           tosl	equ	0xFFD
 40894                           pclath	equ	0xFFA
 40895                           tblptru	equ	0xFF8
 40896                           tblptrh	equ	0xFF7
 40897                           tblptrl	equ	0xFF6
 40898                           tablat	equ	0xFF5
 40899                           prodh	equ	0xFF4
 40900                           prodl	equ	0xFF3
 40901                           intcon	equ	0xFF2
 40902                           indf0	equ	0xFEF
 40903                           postinc0	equ	0xFEE
 40904                           fsr0h	equ	0xFEA
 40905                           fsr0l	equ	0xFE9
 40906                           wreg	equ	0xFE8
 40907                           indf1	equ	0xFE7
 40908                           postinc1	equ	0xFE6
 40909                           postdec1	equ	0xFE5
 40910                           plusw1	equ	0xFE3
 40911                           fsr1h	equ	0xFE2
 40912                           fsr1l	equ	0xFE1
 40913                           indf2	equ	0xFDF
 40914                           postinc2	equ	0xFDE
 40915                           postdec2	equ	0xFDD
 40916                           plusw2	equ	0xFDB
 40917                           fsr2h	equ	0xFDA
 40918                           fsr2l	equ	0xFD9
 40919                           status	equ	0xFD8
 40920                           
 40921 ;; *************** function __parse_jump_steps_with_overshoot *****************
 40922 ;; Defined at:
 40923 ;;		line 521 in file "api.c"
 40924 ;; Parameters:    Size  Location     Type
 40925 ;;  data            2   78[BANK0 ] PTR unsigned char 
 40926 ;;		 -> ReceivedDataBuffer(64), 
 40927 ;;  out_buffer      2   80[BANK0 ] PTR unsigned char 
 40928 ;;		 -> ToSendDataBuffer(64), 
 40929 ;;  out_idx_ptr     2   82[BANK0 ] PTR unsigned char 
 40930 ;;		 -> api_parse@out_idx(1), 
 40931 ;; Auto vars:     Size  Location     Type
 40932 ;;  number_of_st    4   85[BANK0 ] long 
 40933 ;; Return value:  Size  Location     Type
 40934 ;;                  1    wreg      unsigned char 
 40935 ;; Registers used:
 40936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40937 ;; Tracked objects:
 40938 ;;		On entry : 0/0
 40939 ;;		On exit  : 0/0
 40940 ;;		Unchanged: 0/0
 40941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40942 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40943 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40945 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40946 ;;Total ram usage:       11 bytes
 40947 ;; Hardware stack levels used:    1
 40948 ;; Hardware stack levels required when called:   15
 40949 ;; This function calls:
 40950 ;;		_motor_move_steps_with_overshoot
 40951 ;; This function is called by:
 40952 ;;		__parse_command_long
 40953 ;; This function uses a non-reentrant model
 40954 ;;
 40955                           
 40956                           	psect	text171
 40957  0107A2                     __ptext171:
 40958                           	opt stack 0
 40959  0107A2                     __parse_jump_steps_with_overshoot:
 40960                           	opt stack 12
 40961                           
 40962                           ;api.c: 525: int32_t number_of_steps;;api.c: 527: number_of_steps = data[1];
 40963                           
 40964                           ;incstack = 0
 40965  0107A2  0100               	movlb	0	; () banked
 40966  0107A4  EE20 F001          	lfsr	2,1
 40967  0107A8  51AE               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 40968  0107AA  26D9               	addwf	fsr2l,f,c
 40969  0107AC  51AF               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 40970  0107AE  22DA               	addwfc	fsr2h,f,c
 40971  0107B0  50DF               	movf	indf2,w,c
 40972  0107B2  6FB4               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 40973  0107B4  51B4               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 40974  0107B6  6FB5               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 40975  0107B8  6BB6               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 40976  0107BA  6BB7               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 40977  0107BC  6BB8               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 40978                           
 40979                           ; BSR set to: 0
 40980                           ;api.c: 528: number_of_steps <<= 8;
 40981  0107BE  C0B7  F0B8         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 40982  0107C2  C0B6  F0B7         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 40983  0107C6  C0B5  F0B6         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 40984  0107CA  6BB5               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 40985                           
 40986                           ; BSR set to: 0
 40987                           ;api.c: 529: number_of_steps |= data[2];
 40988  0107CC  EE20 F002          	lfsr	2,2
 40989  0107D0  51AE               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 40990  0107D2  26D9               	addwf	fsr2l,f,c
 40991  0107D4  51AF               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 40992  0107D6  22DA               	addwfc	fsr2h,f,c
 40993  0107D8  50DF               	movf	indf2,w,c
 40994  0107DA  6FB4               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 40995  0107DC  51B4               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 40996  0107DE  13B5               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 40997                           
 40998                           ;api.c: 530: number_of_steps <<= 8;
 40999  0107E0  C0B7  F0B8         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 41000  0107E4  C0B6  F0B7         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 41001  0107E8  C0B5  F0B6         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 41002  0107EC  6BB5               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 41003                           
 41004                           ; BSR set to: 0
 41005                           ;api.c: 531: number_of_steps |= data[3];
 41006  0107EE  EE20 F003          	lfsr	2,3
 41007  0107F2  51AE               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 41008  0107F4  26D9               	addwf	fsr2l,f,c
 41009  0107F6  51AF               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 41010  0107F8  22DA               	addwfc	fsr2h,f,c
 41011  0107FA  50DF               	movf	indf2,w,c
 41012  0107FC  6FB4               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 41013  0107FE  51B4               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 41014  010800  13B5               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 41015                           
 41016                           ; BSR set to: 0
 41017                           ;api.c: 532: number_of_steps <<= 8;
 41018  010802  C0B7  F0B8         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 41019  010806  C0B6  F0B7         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 41020  01080A  C0B5  F0B6         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 41021  01080E  6BB5               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 41022                           
 41023                           ;api.c: 533: number_of_steps |= data[4];
 41024  010810  EE20 F004          	lfsr	2,4
 41025  010814  51AE               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 41026  010816  26D9               	addwf	fsr2l,f,c
 41027  010818  51AF               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 41028  01081A  22DA               	addwfc	fsr2h,f,c
 41029  01081C  50DF               	movf	indf2,w,c
 41030  01081E  6FB4               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 41031  010820  51B4               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 41032  010822  13B5               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 41033                           
 41034                           ; BSR set to: 0
 41035                           ;api.c: 535: if(number_of_steps>0)
 41036  010824  BFB8               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 41037  010826  D013               	goto	l2340
 41038  010828  51B8               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 41039  01082A  11B7               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 41040  01082C  11B6               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 41041  01082E  E103               	bnz	u13880
 41042  010830  05B5               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 41043  010832  A0D8               	btfss	status,0,c
 41044  010834  D00C               	goto	l2340
 41045  010836                     u13880:
 41046                           
 41047                           ; BSR set to: 0
 41048                           ;api.c: 536: {;api.c: 537: motor_move_steps_with_overshoot(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps);
 41049  010836  C0B5  F0A9         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps_with_overshoot
      +                          @distance
 41050  01083A  C0B6  F0AA         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps_with_oversho
      +                          ot@distance+1
 41051  01083E  C0B7  F0AB         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps_with_oversho
      +                          ot@distance+2
 41052  010842  C0B8  F0AC         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps_with_oversho
      +                          ot@distance+3
 41053  010846  0E01               	movlw	1
 41054  010848  ECF3  F097         	call	_motor_move_steps_with_overshoot
 41055                           
 41056                           ;api.c: 538: }
 41057  01084C  D014               	goto	l2341
 41058  01084E                     l2340:
 41059                           
 41060                           ;api.c: 539: else;api.c: 540: {;api.c: 541: number_of_steps = -number_of_steps;
 41061  01084E  0100               	movlb	0	; () banked
 41062  010850  1FB8               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 41063  010852  1FB7               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 41064  010854  1FB6               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 41065  010856  6DB5               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 41066  010858  0E00               	movlw	0
 41067  01085A  23B6               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 41068  01085C  23B7               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 41069  01085E  23B8               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 41070                           
 41071                           ; BSR set to: 0
 41072                           ;api.c: 542: motor_move_steps_with_overshoot(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps);
 41073  010860  C0B5  F0A9         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps_with_overshoot
      +                          @distance
 41074  010864  C0B6  F0AA         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps_with_oversho
      +                          ot@distance+1
 41075  010868  C0B7  F0AB         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps_with_oversho
      +                          ot@distance+2
 41076  01086C  C0B8  F0AC         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps_with_oversho
      +                          ot@distance+3
 41077  010870  0EFF               	movlw	255
 41078  010872  ECF3  F097         	call	_motor_move_steps_with_overshoot
 41079  010876                     l2341:
 41080                           
 41081                           ;api.c: 543: };api.c: 546: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 41082  010876  C0B2  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 41083  01087A  C0B3  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 41084  01087E  50DF               	movf	indf2,w,c
 41085  010880  B4D8               	btfsc	status,2,c
 41086  010882  D01A               	goto	l2342
 41087  010884  C0B2  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 41088  010888  C0B3  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 41089  01088C  0E3F               	movlw	63
 41090  01088E  60DF               	cpfslt	indf2,c
 41091  010890  D013               	goto	l2342
 41092                           
 41093                           ;api.c: 547: {;api.c: 548: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 41094  010892  C0B2  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 41095  010896  C0B3  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 41096  01089A  CFDF F0B4          	movff	indf2,??__parse_jump_steps_with_overshoot
 41097  01089E  0E01               	movlw	1
 41098  0108A0  26DF               	addwf	indf2,f,c
 41099  0108A2  0100               	movlb	0	; () banked
 41100  0108A4  51B4               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 41101  0108A6  0D01               	mullw	1
 41102  0108A8  50F3               	movf	prodl,w,c
 41103  0108AA  25B0               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 41104  0108AC  6ED9               	movwf	fsr2l,c
 41105  0108AE  50F4               	movf	prodh,w,c
 41106  0108B0  21B1               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 41107  0108B2  6EDA               	movwf	fsr2h,c
 41108  0108B4  0E91               	movlw	145
 41109  0108B6  6EDF               	movwf	indf2,c
 41110  0108B8                     l2342:
 41111                           
 41112                           ;api.c: 549: };api.c: 551: return 5;
 41113                           
 41114                           ; BSR set to: 0
 41115  0108B8  0E05               	movlw	5
 41116  0108BA  0012               	return	
 41117  0108BC                     __end_of__parse_jump_steps_with_overshoot:
 41118                           	opt stack 0
 41119                           tosu	equ	0xFFF
 41120                           tosh	equ	0xFFE
 41121                           tosl	equ	0xFFD
 41122                           pclath	equ	0xFFA
 41123                           tblptru	equ	0xFF8
 41124                           tblptrh	equ	0xFF7
 41125                           tblptrl	equ	0xFF6
 41126                           tablat	equ	0xFF5
 41127                           prodh	equ	0xFF4
 41128                           prodl	equ	0xFF3
 41129                           intcon	equ	0xFF2
 41130                           indf0	equ	0xFEF
 41131                           postinc0	equ	0xFEE
 41132                           fsr0h	equ	0xFEA
 41133                           fsr0l	equ	0xFE9
 41134                           wreg	equ	0xFE8
 41135                           indf1	equ	0xFE7
 41136                           postinc1	equ	0xFE6
 41137                           postdec1	equ	0xFE5
 41138                           plusw1	equ	0xFE3
 41139                           fsr1h	equ	0xFE2
 41140                           fsr1l	equ	0xFE1
 41141                           indf2	equ	0xFDF
 41142                           postinc2	equ	0xFDE
 41143                           postdec2	equ	0xFDD
 41144                           plusw2	equ	0xFDB
 41145                           fsr2h	equ	0xFDA
 41146                           fsr2l	equ	0xFD9
 41147                           status	equ	0xFD8
 41148                           
 41149 ;; *************** function _motor_move_steps_with_overshoot *****************
 41150 ;; Defined at:
 41151 ;;		line 765 in file "motor.c"
 41152 ;; Parameters:    Size  Location     Type
 41153 ;;  direction       1    wreg     enum E6622
 41154 ;;  distance        4   73[BANK0 ] unsigned long 
 41155 ;; Auto vars:     Size  Location     Type
 41156 ;;  direction       1   77[BANK0 ] enum E6622
 41157 ;; Return value:  Size  Location     Type
 41158 ;;                  1    wreg      void 
 41159 ;; Registers used:
 41160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41161 ;; Tracked objects:
 41162 ;;		On entry : 0/0
 41163 ;;		On exit  : 0/0
 41164 ;;		Unchanged: 0/0
 41165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41169 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41170 ;;Total ram usage:        5 bytes
 41171 ;; Hardware stack levels used:    1
 41172 ;; Hardware stack levels required when called:   14
 41173 ;; This function calls:
 41174 ;;		_motor_schedule_command
 41175 ;; This function is called by:
 41176 ;;		__parse_jump_steps_with_overshoot
 41177 ;; This function uses a non-reentrant model
 41178 ;;
 41179                           
 41180                           	psect	text172
 41181  012FE6                     __ptext172:
 41182                           	opt stack 0
 41183  012FE6                     _motor_move_steps_with_overshoot:
 41184                           	opt stack 12
 41185                           
 41186                           ;incstack = 0
 41187                           ;motor_move_steps_with_overshoot@direction stored from wreg
 41188  012FE6  0100               	movlb	0	; () banked
 41189  012FE8  6FAD               	movwf	motor_move_steps_with_overshoot@direction& (0+255),b
 41190                           
 41191                           ;motor.c: 767: if(distance==0)
 41192  012FEA  0100               	movlb	0	; () banked
 41193  012FEC  51A9               	movf	motor_move_steps_with_overshoot@distance& (0+255),w,b
 41194  012FEE  11AA               	iorwf	(motor_move_steps_with_overshoot@distance+1)& (0+255),w,b
 41195  012FF0  11AB               	iorwf	(motor_move_steps_with_overshoot@distance+2)& (0+255),w,b
 41196  012FF2  11AC               	iorwf	(motor_move_steps_with_overshoot@distance+3)& (0+255),w,b
 41197  012FF4  B4D8               	btfsc	status,2,c
 41198  012FF6  0012               	return	
 41199                           
 41200                           ; BSR set to: 0
 41201                           ;motor.c: 770: };motor.c: 772: if(direction==os.approach_direction)
 41202                           
 41203                           ; BSR set to: 0
 41204                           
 41205                           ; BSR set to: 0
 41206                           ;motor.c: 768: {;motor.c: 769: return;
 41207  012FF8  51AD               	movf	motor_move_steps_with_overshoot@direction& (0+255),w,b
 41208  012FFA  0101               	movlb	1	; () banked
 41209  012FFC  1983               	xorwf	(_os+18)& (0+255),w,b	;volatile
 41210  012FFE  A4D8               	btfss	status,2,c
 41211  013000  D013               	goto	l2585
 41212                           
 41213                           ; BSR set to: 1
 41214                           ;motor.c: 773: {;motor.c: 775: motor_schedule_command(direction, distance, 0, MOTOR_MOVE
      +                          _TYPE_NORMAL);
 41215  013002  C0A9  F0A1         	movff	motor_move_steps_with_overshoot@distance,motor_schedule_command@distance_in_steps
 41216  013006  C0AA  F0A2         	movff	motor_move_steps_with_overshoot@distance+1,motor_schedule_command@distance_in_ste
      +                          ps+1
 41217  01300A  C0AB  F0A3         	movff	motor_move_steps_with_overshoot@distance+2,motor_schedule_command@distance_in_ste
      +                          ps+2
 41218  01300E  C0AC  F0A4         	movff	motor_move_steps_with_overshoot@distance+3,motor_schedule_command@distance_in_ste
      +                          ps+3
 41219  013012  0E00               	movlw	0
 41220  013014  0100               	movlb	0	; () banked
 41221  013016  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41222  013018  0E00               	movlw	0
 41223  01301A  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41224  01301C  0E00               	movlw	0
 41225  01301E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41226  013020  51AD               	movf	motor_move_steps_with_overshoot@direction& (0+255),w,b
 41227  013022  EC48  F093         	call	_motor_schedule_command
 41228                           
 41229                           ;motor.c: 776: }
 41230  013026  0012               	return	
 41231  013028                     l2585:
 41232                           
 41233                           ;motor.c: 777: else;motor.c: 778: {;motor.c: 780: distance += config.overshoot_in_steps;
 41234  013028  0101               	movlb	1	; () banked
 41235  01302A  51A6               	movf	(_config+5)& (0+255),w,b
 41236  01302C  0100               	movlb	0	; () banked
 41237  01302E  27A9               	addwf	motor_move_steps_with_overshoot@distance& (0+255),f,b
 41238  013030  0101               	movlb	1	; () banked
 41239  013032  51A7               	movf	(_config+6)& (0+255),w,b
 41240  013034  0100               	movlb	0	; () banked
 41241  013036  23AA               	addwfc	(motor_move_steps_with_overshoot@distance+1)& (0+255),f,b
 41242  013038  0E00               	movlw	0
 41243  01303A  23AB               	addwfc	(motor_move_steps_with_overshoot@distance+2)& (0+255),f,b
 41244  01303C  0E00               	movlw	0
 41245  01303E  23AC               	addwfc	(motor_move_steps_with_overshoot@distance+3)& (0+255),f,b
 41246                           
 41247                           ; BSR set to: 0
 41248                           ;motor.c: 781: motor_schedule_command(direction, distance, 0, MOTOR_MOVE_TYPE_OVERSHOOT)
      +                          ;
 41249  013040  C0A9  F0A1         	movff	motor_move_steps_with_overshoot@distance,motor_schedule_command@distance_in_steps
 41250  013044  C0AA  F0A2         	movff	motor_move_steps_with_overshoot@distance+1,motor_schedule_command@distance_in_ste
      +                          ps+1
 41251  013048  C0AB  F0A3         	movff	motor_move_steps_with_overshoot@distance+2,motor_schedule_command@distance_in_ste
      +                          ps+2
 41252  01304C  C0AC  F0A4         	movff	motor_move_steps_with_overshoot@distance+3,motor_schedule_command@distance_in_ste
      +                          ps+3
 41253  013050  0E00               	movlw	0
 41254  013052  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41255  013054  0E00               	movlw	0
 41256  013056  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41257  013058  0E01               	movlw	1
 41258  01305A  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41259  01305C  51AD               	movf	motor_move_steps_with_overshoot@direction& (0+255),w,b
 41260  01305E  EC48  F093         	call	_motor_schedule_command
 41261                           
 41262                           ;motor.c: 783: if(config.overshoot_in_steps!=0)
 41263  013062  0101               	movlb	1	; () banked
 41264  013064  51A6               	movf	(_config+5)& (0+255),w,b
 41265  013066  11A7               	iorwf	(_config+6)& (0+255),w,b
 41266  013068  B4D8               	btfsc	status,2,c
 41267  01306A  0012               	return	
 41268                           
 41269                           ; BSR set to: 1
 41270                           ;motor.c: 784: {;motor.c: 785: motor_schedule_command(os.approach_direction, config.over
      +                          shoot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 41271  01306C  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 41272  013070  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41273  013074  0100               	movlb	0	; () banked
 41274  013076  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41275  013078  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41276  01307A  0E00               	movlw	0
 41277  01307C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41278  01307E  0E00               	movlw	0
 41279  013080  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41280  013082  0E00               	movlw	0
 41281  013084  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41282  013086  0101               	movlb	1	; () banked
 41283  013088  5183               	movf	(_os+18)& (0+255),w,b	;volatile
 41284  01308A  EC48  F093         	call	_motor_schedule_command
 41285  01308E  0012               	return	
 41286  013090                     __end_of_motor_move_steps_with_overshoot:
 41287                           	opt stack 0
 41288                           tosu	equ	0xFFF
 41289                           tosh	equ	0xFFE
 41290                           tosl	equ	0xFFD
 41291                           pclath	equ	0xFFA
 41292                           tblptru	equ	0xFF8
 41293                           tblptrh	equ	0xFF7
 41294                           tblptrl	equ	0xFF6
 41295                           tablat	equ	0xFF5
 41296                           prodh	equ	0xFF4
 41297                           prodl	equ	0xFF3
 41298                           intcon	equ	0xFF2
 41299                           indf0	equ	0xFEF
 41300                           postinc0	equ	0xFEE
 41301                           fsr0h	equ	0xFEA
 41302                           fsr0l	equ	0xFE9
 41303                           wreg	equ	0xFE8
 41304                           indf1	equ	0xFE7
 41305                           postinc1	equ	0xFE6
 41306                           postdec1	equ	0xFE5
 41307                           plusw1	equ	0xFE3
 41308                           fsr1h	equ	0xFE2
 41309                           fsr1l	equ	0xFE1
 41310                           indf2	equ	0xFDF
 41311                           postinc2	equ	0xFDE
 41312                           postdec2	equ	0xFDD
 41313                           plusw2	equ	0xFDB
 41314                           fsr2h	equ	0xFDA
 41315                           fsr2l	equ	0xFD9
 41316                           status	equ	0xFD8
 41317                           
 41318 ;; *************** function __parse_jump_steps *****************
 41319 ;; Defined at:
 41320 ;;		line 486 in file "api.c"
 41321 ;; Parameters:    Size  Location     Type
 41322 ;;  data            2   73[BANK0 ] PTR unsigned char 
 41323 ;;		 -> ReceivedDataBuffer(64), 
 41324 ;;  out_buffer      2   75[BANK0 ] PTR unsigned char 
 41325 ;;		 -> ToSendDataBuffer(64), 
 41326 ;;  out_idx_ptr     2   77[BANK0 ] PTR unsigned char 
 41327 ;;		 -> api_parse@out_idx(1), 
 41328 ;; Auto vars:     Size  Location     Type
 41329 ;;  number_of_st    4   81[BANK0 ] long 
 41330 ;;  return_value    1   80[BANK0 ] unsigned char 
 41331 ;; Return value:  Size  Location     Type
 41332 ;;                  1    wreg      unsigned char 
 41333 ;; Registers used:
 41334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41335 ;; Tracked objects:
 41336 ;;		On entry : 0/0
 41337 ;;		On exit  : 0/0
 41338 ;;		Unchanged: 0/0
 41339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41340 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41341 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41343 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41344 ;;Total ram usage:       12 bytes
 41345 ;; Hardware stack levels used:    1
 41346 ;; Hardware stack levels required when called:   14
 41347 ;; This function calls:
 41348 ;;		_motor_schedule_command
 41349 ;; This function is called by:
 41350 ;;		__parse_command_long
 41351 ;; This function uses a non-reentrant model
 41352 ;;
 41353                           
 41354                           	psect	text173
 41355  00F8CA                     __ptext173:
 41356                           	opt stack 0
 41357  00F8CA                     __parse_jump_steps:
 41358                           	opt stack 13
 41359                           
 41360                           ;api.c: 490: uint8_t return_value;;api.c: 491: int32_t number_of_steps;;api.c: 493: numb
      +                          er_of_steps = data[1];
 41361                           
 41362                           ;incstack = 0
 41363  00F8CA  0100               	movlb	0	; () banked
 41364  00F8CC  EE20 F001          	lfsr	2,1
 41365  00F8D0  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41366  00F8D2  26D9               	addwf	fsr2l,f,c
 41367  00F8D4  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41368  00F8D6  22DA               	addwfc	fsr2h,f,c
 41369  00F8D8  50DF               	movf	indf2,w,c
 41370  00F8DA  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41371  00F8DC  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41372  00F8DE  6FB1               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 41373  00F8E0  6BB2               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 41374  00F8E2  6BB3               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 41375  00F8E4  6BB4               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 41376                           
 41377                           ; BSR set to: 0
 41378                           ;api.c: 494: number_of_steps <<= 8;
 41379  00F8E6  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41380  00F8EA  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41381  00F8EE  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41382  00F8F2  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41383                           
 41384                           ; BSR set to: 0
 41385                           ;api.c: 495: number_of_steps |= data[2];
 41386  00F8F4  EE20 F002          	lfsr	2,2
 41387  00F8F8  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41388  00F8FA  26D9               	addwf	fsr2l,f,c
 41389  00F8FC  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41390  00F8FE  22DA               	addwfc	fsr2h,f,c
 41391  00F900  50DF               	movf	indf2,w,c
 41392  00F902  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41393  00F904  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41394  00F906  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41395                           
 41396                           ;api.c: 496: number_of_steps <<= 8;
 41397  00F908  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41398  00F90C  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41399  00F910  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41400  00F914  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41401                           
 41402                           ; BSR set to: 0
 41403                           ;api.c: 497: number_of_steps |= data[3];
 41404  00F916  EE20 F003          	lfsr	2,3
 41405  00F91A  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41406  00F91C  26D9               	addwf	fsr2l,f,c
 41407  00F91E  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41408  00F920  22DA               	addwfc	fsr2h,f,c
 41409  00F922  50DF               	movf	indf2,w,c
 41410  00F924  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41411  00F926  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41412  00F928  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41413                           
 41414                           ; BSR set to: 0
 41415                           ;api.c: 498: number_of_steps <<= 8;
 41416  00F92A  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41417  00F92E  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41418  00F932  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41419  00F936  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41420                           
 41421                           ;api.c: 499: number_of_steps |= data[4];
 41422  00F938  EE20 F004          	lfsr	2,4
 41423  00F93C  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41424  00F93E  26D9               	addwf	fsr2l,f,c
 41425  00F940  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41426  00F942  22DA               	addwfc	fsr2h,f,c
 41427  00F944  50DF               	movf	indf2,w,c
 41428  00F946  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41429  00F948  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41430  00F94A  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41431                           
 41432                           ; BSR set to: 0
 41433                           ;api.c: 501: if(number_of_steps>0)
 41434  00F94C  BFB4               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 41435  00F94E  D019               	goto	l2334
 41436  00F950  51B4               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 41437  00F952  11B3               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 41438  00F954  11B2               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 41439  00F956  E103               	bnz	u13850
 41440  00F958  05B1               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 41441  00F95A  A0D8               	btfss	status,0,c
 41442  00F95C  D012               	goto	l2334
 41443  00F95E                     u13850:
 41444                           
 41445                           ; BSR set to: 0
 41446                           ;api.c: 502: {;api.c: 503: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 41447  00F95E  C0B1  F0A1         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41448  00F962  C0B2  F0A2         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41449  00F966  C0B3  F0A3         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41450  00F96A  C0B4  F0A4         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41451  00F96E  0E00               	movlw	0
 41452  00F970  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41453  00F972  0E00               	movlw	0
 41454  00F974  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41455  00F976  0E00               	movlw	0
 41456  00F978  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41457  00F97A  0E01               	movlw	1
 41458  00F97C  EC48  F093         	call	_motor_schedule_command
 41459  00F980  D019               	goto	L65
 41460  00F982                     l2334:
 41461                           
 41462                           ; BSR set to: 0
 41463                           ;api.c: 505: else;api.c: 506: {;api.c: 507: number_of_steps = -number_of_steps;
 41464                           
 41465                           ; BSR set to: 0
 41466  00F982  1FB4               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41467  00F984  1FB3               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41468  00F986  1FB2               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41469  00F988  6DB1               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 41470  00F98A  0E00               	movlw	0
 41471  00F98C  23B2               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41472  00F98E  23B3               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41473  00F990  23B4               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41474                           
 41475                           ; BSR set to: 0
 41476                           ;api.c: 508: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 41477  00F992  C0B1  F0A1         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41478  00F996  C0B2  F0A2         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41479  00F99A  C0B3  F0A3         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41480  00F99E  C0B4  F0A4         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41481  00F9A2  0E00               	movlw	0
 41482  00F9A4  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41483  00F9A6  0E00               	movlw	0
 41484  00F9A8  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41485  00F9AA  0E00               	movlw	0
 41486  00F9AC  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41487  00F9AE  0EFF               	movlw	255
 41488  00F9B0  EC48  F093         	call	_motor_schedule_command
 41489  00F9B4                     L65:
 41490  00F9B4  0100               	movlb	0	; () banked
 41491  00F9B6  6FB0               	movwf	__parse_jump_steps@return_value& (0+255),b
 41492                           
 41493                           ; BSR set to: 0
 41494                           ;api.c: 509: };api.c: 512: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 41495                           
 41496                           ; BSR set to: 0
 41497  00F9B8  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41498  00F9BC  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41499  00F9C0  50DF               	movf	indf2,w,c
 41500  00F9C2  B4D8               	btfsc	status,2,c
 41501  00F9C4  D02B               	goto	l2336
 41502                           
 41503                           ; BSR set to: 0
 41504  00F9C6  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41505  00F9CA  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41506  00F9CE  0E3E               	movlw	62
 41507  00F9D0  60DF               	cpfslt	indf2,c
 41508  00F9D2  D024               	goto	l2336
 41509                           
 41510                           ; BSR set to: 0
 41511                           ;api.c: 513: {;api.c: 514: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 41512  00F9D4  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41513  00F9D8  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41514  00F9DC  CFDF F0AF          	movff	indf2,??__parse_jump_steps
 41515  00F9E0  0E01               	movlw	1
 41516  00F9E2  26DF               	addwf	indf2,f,c
 41517  00F9E4  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41518  00F9E6  0D01               	mullw	1
 41519  00F9E8  50F3               	movf	prodl,w,c
 41520  00F9EA  25AB               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41521  00F9EC  6ED9               	movwf	fsr2l,c
 41522  00F9EE  50F4               	movf	prodh,w,c
 41523  00F9F0  21AC               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41524  00F9F2  6EDA               	movwf	fsr2h,c
 41525  00F9F4  0E90               	movlw	144
 41526  00F9F6  6EDF               	movwf	indf2,c
 41527                           
 41528                           ;api.c: 515: out_buffer[(*out_idx_ptr)++] = return_value;
 41529  00F9F8  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41530  00F9FC  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41531  00FA00  CFDF F0AF          	movff	indf2,??__parse_jump_steps
 41532  00FA04  0E01               	movlw	1
 41533  00FA06  26DF               	addwf	indf2,f,c
 41534  00FA08  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41535  00FA0A  0D01               	mullw	1
 41536  00FA0C  50F3               	movf	prodl,w,c
 41537  00FA0E  25AB               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41538  00FA10  6ED9               	movwf	fsr2l,c
 41539  00FA12  50F4               	movf	prodh,w,c
 41540  00FA14  21AC               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41541  00FA16  6EDA               	movwf	fsr2h,c
 41542  00FA18  C0B0  FFDF         	movff	__parse_jump_steps@return_value,indf2
 41543  00FA1C                     l2336:
 41544                           
 41545                           ; BSR set to: 0
 41546                           ;api.c: 516: };api.c: 518: return 5;
 41547                           
 41548                           ; BSR set to: 0
 41549  00FA1C  0E05               	movlw	5
 41550  00FA1E  0012               	return	
 41551  00FA20                     __end_of__parse_jump_steps:
 41552                           	opt stack 0
 41553                           tosu	equ	0xFFF
 41554                           tosh	equ	0xFFE
 41555                           tosl	equ	0xFFD
 41556                           pclath	equ	0xFFA
 41557                           tblptru	equ	0xFF8
 41558                           tblptrh	equ	0xFF7
 41559                           tblptrl	equ	0xFF6
 41560                           tablat	equ	0xFF5
 41561                           prodh	equ	0xFF4
 41562                           prodl	equ	0xFF3
 41563                           intcon	equ	0xFF2
 41564                           indf0	equ	0xFEF
 41565                           postinc0	equ	0xFEE
 41566                           fsr0h	equ	0xFEA
 41567                           fsr0l	equ	0xFE9
 41568                           wreg	equ	0xFE8
 41569                           indf1	equ	0xFE7
 41570                           postinc1	equ	0xFE6
 41571                           postdec1	equ	0xFE5
 41572                           plusw1	equ	0xFE3
 41573                           fsr1h	equ	0xFE2
 41574                           fsr1l	equ	0xFE1
 41575                           indf2	equ	0xFDF
 41576                           postinc2	equ	0xFDE
 41577                           postdec2	equ	0xFDD
 41578                           plusw2	equ	0xFDB
 41579                           fsr2h	equ	0xFDA
 41580                           fsr2l	equ	0xFD9
 41581                           status	equ	0xFD8
 41582                           
 41583 ;; *************** function _motor_schedule_command *****************
 41584 ;; Defined at:
 41585 ;;		line 124 in file "motor.c"
 41586 ;; Parameters:    Size  Location     Type
 41587 ;;  direction       1    wreg     enum E6622
 41588 ;;  distance_in_    4   65[BANK0 ] unsigned long 
 41589 ;;  speed           2   69[BANK0 ] unsigned int 
 41590 ;;  type            1   71[BANK0 ] enum E6630
 41591 ;; Auto vars:     Size  Location     Type
 41592 ;;  direction       1   72[BANK0 ] enum E6622
 41593 ;; Return value:  Size  Location     Type
 41594 ;;                  1    wreg      unsigned char 
 41595 ;; Registers used:
 41596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41597 ;; Tracked objects:
 41598 ;;		On entry : 0/0
 41599 ;;		On exit  : 0/0
 41600 ;;		Unchanged: 0/0
 41601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41602 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41605 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41606 ;;Total ram usage:        8 bytes
 41607 ;; Hardware stack levels used:    1
 41608 ;; Hardware stack levels required when called:   13
 41609 ;; This function calls:
 41610 ;;		__motor_run
 41611 ;;		_motor_items_in_cue
 41612 ;; This function is called by:
 41613 ;;		__parse_command_short
 41614 ;;		__parse_jump_steps
 41615 ;;		_motor_go_to_steps_position
 41616 ;;		_motor_arc_move
 41617 ;;		_motor_set_zero
 41618 ;;		_motor_move_steps_with_overshoot
 41619 ;;		_encoder_statemachine
 41620 ;; This function uses a non-reentrant model
 41621 ;;
 41622                           
 41623                           	psect	text174
 41624  012690                     __ptext174:
 41625                           	opt stack 0
 41626  012690                     _motor_schedule_command:
 41627                           	opt stack 15
 41628                           
 41629                           ; BSR set to: 0
 41630                           ;incstack = 0
 41631                           ;motor_schedule_command@direction stored from wreg
 41632  012690  0100               	movlb	0	; () banked
 41633  012692  6FA8               	movwf	motor_schedule_command@direction& (0+255),b
 41634                           
 41635                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 41636  012694  EC3D  F0AC         	call	_motor_items_in_cue	;wreg free
 41637  012698  0900               	iorlw	0
 41638  01269A  A4D8               	btfss	status,2,c
 41639  01269C  D018               	goto	l2449
 41640  01269E  0101               	movlb	1	; () banked
 41641  0126A0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 41642  0126A2  A4D8               	btfss	status,2,c
 41643  0126A4  D014               	goto	l2449
 41644                           
 41645                           ; BSR set to: 1
 41646                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed, type);
 41647  0126A6  C0A1  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 41648  0126AA  C0A2  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 41649  0126AE  C0A3  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 41650  0126B2  C0A4  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 41651  0126B6  C0A5  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 41652  0126BA  C0A6  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 41653  0126BE  C0A7  F095         	movff	motor_schedule_command@type,__motor_run@type
 41654  0126C2  0100               	movlb	0	; () banked
 41655  0126C4  51A8               	movf	motor_schedule_command@direction& (0+255),w,b
 41656  0126C6  ECAD  F062         	call	__motor_run
 41657                           
 41658                           ;motor.c: 132: return 1;
 41659  0126CA  0E01               	movlw	1
 41660  0126CC  0012               	return	
 41661  0126CE                     l2449:
 41662                           
 41663                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 41664  0126CE  EC3D  F0AC         	call	_motor_items_in_cue	;wreg free
 41665  0126D2  0A07               	xorlw	7
 41666  0126D4  A4D8               	btfss	status,2,c
 41667  0126D6  D002               	goto	l2451
 41668                           
 41669                           ;motor.c: 135: {;motor.c: 138: return 0;
 41670  0126D8  0E00               	movlw	0
 41671                           
 41672                           ;motor.c: 139: }
 41673  0126DA  0012               	return	
 41674  0126DC                     l2451:
 41675                           
 41676                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 41677  0126DC  0101               	movlb	1	; () banked
 41678  0126DE  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41679  0126E0  0D08               	mullw	8
 41680  0126E2  0E00               	movlw	low _motor_command_cue
 41681  0126E4  24F3               	addwf	prodl,w,c
 41682  0126E6  6ED9               	movwf	fsr2l,c
 41683  0126E8  0E03               	movlw	high _motor_command_cue
 41684  0126EA  20F4               	addwfc	prodh,w,c
 41685  0126EC  6EDA               	movwf	fsr2h,c
 41686  0126EE  C0A8  FFDF         	movff	motor_schedule_command@direction,indf2
 41687                           
 41688                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 41689  0126F2  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41690  0126F4  0D08               	mullw	8
 41691  0126F6  0E01               	movlw	1
 41692  0126F8  26F3               	addwf	prodl,f,c
 41693  0126FA  0E00               	movlw	0
 41694  0126FC  22F4               	addwfc	prodh,f,c
 41695  0126FE  0E00               	movlw	low _motor_command_cue
 41696  012700  24F3               	addwf	prodl,w,c
 41697  012702  6ED9               	movwf	fsr2l,c
 41698  012704  0E03               	movlw	high _motor_command_cue
 41699  012706  20F4               	addwfc	prodh,w,c
 41700  012708  6EDA               	movwf	fsr2h,c
 41701  01270A  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 41702  01270E  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 41703  012712  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 41704  012716  C0A4  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 41705                           
 41706                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 41707  01271A  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41708  01271C  0D08               	mullw	8
 41709  01271E  0E05               	movlw	5
 41710  012720  26F3               	addwf	prodl,f,c
 41711  012722  0E00               	movlw	0
 41712  012724  22F4               	addwfc	prodh,f,c
 41713  012726  0E00               	movlw	low _motor_command_cue
 41714  012728  24F3               	addwf	prodl,w,c
 41715  01272A  6ED9               	movwf	fsr2l,c
 41716  01272C  0E03               	movlw	high _motor_command_cue
 41717  01272E  20F4               	addwfc	prodh,w,c
 41718  012730  6EDA               	movwf	fsr2h,c
 41719  012732  C0A5  FFDE         	movff	motor_schedule_command@speed,postinc2
 41720  012736  C0A6  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 41721                           
 41722                           ;motor.c: 146: motor_command_cue[motor_cue_write_index].type = type;
 41723  01273A  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41724  01273C  0D08               	mullw	8
 41725  01273E  0E07               	movlw	7
 41726  012740  26F3               	addwf	prodl,f,c
 41727  012742  0E00               	movlw	0
 41728  012744  22F4               	addwfc	prodh,f,c
 41729  012746  0E00               	movlw	low _motor_command_cue
 41730  012748  24F3               	addwf	prodl,w,c
 41731  01274A  6ED9               	movwf	fsr2l,c
 41732  01274C  0E03               	movlw	high _motor_command_cue
 41733  01274E  20F4               	addwfc	prodh,w,c
 41734  012750  6EDA               	movwf	fsr2h,c
 41735  012752  C0A7  FFDF         	movff	motor_schedule_command@type,indf2
 41736                           
 41737                           ; BSR set to: 1
 41738                           ;motor.c: 148: ++motor_cue_write_index;
 41739  012756  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 41740                           
 41741                           ; BSR set to: 1
 41742                           ;motor.c: 150: return 1;
 41743  012758  0E01               	movlw	1
 41744                           
 41745                           ; BSR set to: 1
 41746  01275A  0012               	return	
 41747  01275C                     __end_of_motor_schedule_command:
 41748                           	opt stack 0
 41749                           tosu	equ	0xFFF
 41750                           tosh	equ	0xFFE
 41751                           tosl	equ	0xFFD
 41752                           pclath	equ	0xFFA
 41753                           tblptru	equ	0xFF8
 41754                           tblptrh	equ	0xFF7
 41755                           tblptrl	equ	0xFF6
 41756                           tablat	equ	0xFF5
 41757                           prodh	equ	0xFF4
 41758                           prodl	equ	0xFF3
 41759                           intcon	equ	0xFF2
 41760                           indf0	equ	0xFEF
 41761                           postinc0	equ	0xFEE
 41762                           fsr0h	equ	0xFEA
 41763                           fsr0l	equ	0xFE9
 41764                           wreg	equ	0xFE8
 41765                           indf1	equ	0xFE7
 41766                           postinc1	equ	0xFE6
 41767                           postdec1	equ	0xFE5
 41768                           plusw1	equ	0xFE3
 41769                           fsr1h	equ	0xFE2
 41770                           fsr1l	equ	0xFE1
 41771                           indf2	equ	0xFDF
 41772                           postinc2	equ	0xFDE
 41773                           postdec2	equ	0xFDD
 41774                           plusw2	equ	0xFDB
 41775                           fsr2h	equ	0xFDA
 41776                           fsr2l	equ	0xFD9
 41777                           status	equ	0xFD8
 41778                           
 41779 ;; *************** function _motor_items_in_cue *****************
 41780 ;; Defined at:
 41781 ;;		line 119 in file "motor.c"
 41782 ;; Parameters:    Size  Location     Type
 41783 ;;		None
 41784 ;; Auto vars:     Size  Location     Type
 41785 ;;		None
 41786 ;; Return value:  Size  Location     Type
 41787 ;;                  1    wreg      unsigned char 
 41788 ;; Registers used:
 41789 ;;		wreg, status,2, status,0
 41790 ;; Tracked objects:
 41791 ;;		On entry : 0/0
 41792 ;;		On exit  : 0/0
 41793 ;;		Unchanged: 0/0
 41794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41799 ;;Total ram usage:        0 bytes
 41800 ;; Hardware stack levels used:    1
 41801 ;; Hardware stack levels required when called:   10
 41802 ;; This function calls:
 41803 ;;		Nothing
 41804 ;; This function is called by:
 41805 ;;		_motor_schedule_command
 41806 ;;		_motor_process_cue
 41807 ;; This function uses a non-reentrant model
 41808 ;;
 41809                           
 41810                           	psect	text175
 41811  01587A                     __ptext175:
 41812                           	opt stack 0
 41813  01587A                     _motor_items_in_cue:
 41814                           	opt stack 19
 41815                           
 41816                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 41817                           
 41818                           ;incstack = 0
 41819  01587A  0101               	movlb	1	; () banked
 41820  01587C  5158               	movf	_motor_cue_read_index& (0+255),w,b
 41821  01587E  0800               	sublw	0
 41822  015880  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 41823  015882  0B07               	andlw	7
 41824  015884  0012               	return	
 41825  015886                     __end_of_motor_items_in_cue:
 41826                           	opt stack 0
 41827                           tosu	equ	0xFFF
 41828                           tosh	equ	0xFFE
 41829                           tosl	equ	0xFFD
 41830                           pclath	equ	0xFFA
 41831                           tblptru	equ	0xFF8
 41832                           tblptrh	equ	0xFF7
 41833                           tblptrl	equ	0xFF6
 41834                           tablat	equ	0xFF5
 41835                           prodh	equ	0xFF4
 41836                           prodl	equ	0xFF3
 41837                           intcon	equ	0xFF2
 41838                           indf0	equ	0xFEF
 41839                           postinc0	equ	0xFEE
 41840                           fsr0h	equ	0xFEA
 41841                           fsr0l	equ	0xFE9
 41842                           wreg	equ	0xFE8
 41843                           indf1	equ	0xFE7
 41844                           postinc1	equ	0xFE6
 41845                           postdec1	equ	0xFE5
 41846                           plusw1	equ	0xFE3
 41847                           fsr1h	equ	0xFE2
 41848                           fsr1l	equ	0xFE1
 41849                           indf2	equ	0xFDF
 41850                           postinc2	equ	0xFDE
 41851                           postdec2	equ	0xFDD
 41852                           plusw2	equ	0xFDB
 41853                           fsr2h	equ	0xFDA
 41854                           fsr2l	equ	0xFD9
 41855                           status	equ	0xFD8
 41856                           
 41857 ;; *************** function __motor_run *****************
 41858 ;; Defined at:
 41859 ;;		line 210 in file "motor.c"
 41860 ;; Parameters:    Size  Location     Type
 41861 ;;  direction       1    wreg     enum E6622
 41862 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 41863 ;;  speed           2   51[BANK0 ] unsigned int 
 41864 ;;  type            1   53[BANK0 ] enum E6630
 41865 ;; Auto vars:     Size  Location     Type
 41866 ;;  direction       1   58[BANK0 ] enum E6622
 41867 ;;  maximum_dist    4   61[BANK0 ] unsigned long 
 41868 ;;  maximum_dist    2   59[BANK0 ] unsigned int 
 41869 ;; Return value:  Size  Location     Type
 41870 ;;                  1    wreg      void 
 41871 ;; Registers used:
 41872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41873 ;; Tracked objects:
 41874 ;;		On entry : 0/0
 41875 ;;		On exit  : 0/0
 41876 ;;		Unchanged: 0/0
 41877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41878 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41879 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41881 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41882 ;;Total ram usage:       18 bytes
 41883 ;; Hardware stack levels used:    1
 41884 ;; Hardware stack levels required when called:   12
 41885 ;; This function calls:
 41886 ;;		_motor_calculate_position_in_degrees
 41887 ;;		_motor_steps_from_degrees
 41888 ;; This function is called by:
 41889 ;;		_motor_schedule_command
 41890 ;;		_motor_process_cue
 41891 ;; This function uses a non-reentrant model
 41892 ;;
 41893                           
 41894                           	psect	text176
 41895  00C55A                     __ptext176:
 41896                           	opt stack 0
 41897  00C55A                     __motor_run:
 41898                           	opt stack 17
 41899                           
 41900                           ; BSR set to: 1
 41901                           ;incstack = 0
 41902                           ;__motor_run@direction stored from wreg
 41903  00C55A  0100               	movlb	0	; () banked
 41904  00C55C  6F9A               	movwf	__motor_run@direction& (0+255),b
 41905                           
 41906                           ;motor.c: 212: uint16_t maximum_distance_in_degrees;;motor.c: 213: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 216: motor_direction = direction;
 41907  00C55E  C09A  F155         	movff	__motor_run@direction,_motor_direction
 41908                           
 41909                           ;motor.c: 219: if(distance_in_steps==0)
 41910  00C562  0100               	movlb	0	; () banked
 41911  00C564  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 41912  00C566  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 41913  00C568  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 41914  00C56A  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 41915  00C56C  A4D8               	btfss	status,2,c
 41916  00C56E  D00A               	goto	l2468
 41917                           
 41918                           ; BSR set to: 0
 41919                           ;motor.c: 220: {;motor.c: 222: motor_final_stepcount = 0xFF000000;
 41920  00C570  0E00               	movlw	0
 41921  00C572  0101               	movlb	1	; () banked
 41922  00C574  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 41923  00C576  0E00               	movlw	0
 41924  00C578  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 41925  00C57A  0E00               	movlw	0
 41926  00C57C  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 41927  00C57E  0EFF               	movlw	255
 41928  00C580  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 41929                           
 41930                           ;motor.c: 223: }
 41931  00C582  D008               	goto	l2469
 41932  00C584                     l2468:
 41933                           
 41934                           ; BSR set to: 0
 41935                           ;motor.c: 224: else;motor.c: 225: {;motor.c: 226: motor_final_stepcount = distance_in_st
      +                          eps;
 41936  00C584  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 41937  00C588  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41938  00C58C  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41939  00C590  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41940  00C594                     l2469:
 41941                           
 41942                           ;motor.c: 227: };motor.c: 230: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 41943                           
 41944                           ; BSR set to: 0
 41945  00C594  0101               	movlb	1	; () banked
 41946  00C596  2955               	incf	_motor_direction& (0+255),w,b
 41947  00C598  A4D8               	btfss	status,2,c
 41948  00C59A  D071               	goto	l2474
 41949                           
 41950                           ; BSR set to: 1
 41951  00C59C  51BA               	movf	(_config+25)& (0+255),w,b
 41952  00C59E  B4D8               	btfsc	status,2,c
 41953  00C5A0  D06E               	goto	l2474
 41954                           
 41955                           ; BSR set to: 1
 41956                           ;motor.c: 231: {;motor.c: 233: motor_calculate_position_in_degrees();
 41957  00C5A2  EC19  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
 41958                           
 41959                           ;motor.c: 236: if(os.current_position_in_degrees >= config.ccw_limit)
 41960  00C5A6  0101               	movlb	1	; () banked
 41961  00C5A8  51BB               	movf	(_config+26)& (0+255),w,b
 41962  00C5AA  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 41963  00C5AC  51BC               	movf	(_config+27)& (0+255),w,b
 41964  00C5AE  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 41965  00C5B0  A0D8               	btfss	status,0,c
 41966  00C5B2  D014               	goto	l2471
 41967                           
 41968                           ; BSR set to: 1
 41969                           ;motor.c: 237: {;motor.c: 238: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 41970  00C5B4  EE21  F0BB         	lfsr	2,_config+26
 41971  00C5B8  CFDE F096          	movff	postinc2,??__motor_run
 41972  00C5BC  CFDD F097          	movff	postdec2,??__motor_run+1
 41973  00C5C0  0100               	movlb	0	; () banked
 41974  00C5C2  1F96               	comf	??__motor_run& (0+255),f,b
 41975  00C5C4  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 41976  00C5C6  4B96               	infsnz	??__motor_run& (0+255),f,b
 41977  00C5C8  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 41978  00C5CA  0101               	movlb	1	; () banked
 41979  00C5CC  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41980  00C5CE  0100               	movlb	0	; () banked
 41981  00C5D0  2596               	addwf	??__motor_run& (0+255),w,b
 41982  00C5D2  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41983  00C5D4  0101               	movlb	1	; () banked
 41984  00C5D6  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41985  00C5D8  0100               	movlb	0	; () banked
 41986  00C5DA  D017               	goto	L66
 41987  00C5DC                     l2471:
 41988                           
 41989                           ;motor.c: 240: else;motor.c: 241: {;motor.c: 243: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 41990                           
 41991                           ; BSR set to: 0
 41992  00C5DC  EE21  F0BB         	lfsr	2,_config+26
 41993  00C5E0  CFDE F096          	movff	postinc2,??__motor_run
 41994  00C5E4  CFDD F097          	movff	postdec2,??__motor_run+1
 41995  00C5E8  0100               	movlb	0	; () banked
 41996  00C5EA  1F96               	comf	??__motor_run& (0+255),f,b
 41997  00C5EC  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 41998  00C5EE  4B96               	infsnz	??__motor_run& (0+255),f,b
 41999  00C5F0  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42000  00C5F2  0101               	movlb	1	; () banked
 42001  00C5F4  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42002  00C5F6  0100               	movlb	0	; () banked
 42003  00C5F8  2796               	addwf	??__motor_run& (0+255),f,b
 42004  00C5FA  0101               	movlb	1	; () banked
 42005  00C5FC  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42006  00C5FE  0100               	movlb	0	; () banked
 42007  00C600  2397               	addwfc	(??__motor_run+1)& (0+255),f,b
 42008  00C602  0EA0               	movlw	160
 42009  00C604  2596               	addwf	??__motor_run& (0+255),w,b
 42010  00C606  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42011  00C608  0E8C               	movlw	140
 42012  00C60A                     L66:
 42013  00C60A  2197               	addwfc	(??__motor_run+1)& (0+255),w,b
 42014  00C60C  6F9C               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42015                           
 42016                           ; BSR set to: 0
 42017                           ;motor.c: 244: };motor.c: 246: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42018                           
 42019                           ; BSR set to: 0
 42020  00C60E  C09B  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42021  00C612  C09C  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42022  00C616  ECC7  F08D         	call	_motor_steps_from_degrees	;wreg free
 42023  00C61A  C087  F09D         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42024  00C61E  C088  F09E         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42025  00C622  C089  F09F         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42026  00C626  C08A  F0A0         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42027                           
 42028                           ;motor.c: 248: if(type==MOTOR_MOVE_TYPE_OVERSHOOT)
 42029  00C62A  0100               	movlb	0	; () banked
 42030  00C62C  0595               	decf	__motor_run@type& (0+255),w,b
 42031  00C62E  A4D8               	btfss	status,2,c
 42032  00C630  D00C               	goto	l2473
 42033                           
 42034                           ; BSR set to: 0
 42035                           ;motor.c: 249: {;motor.c: 250: maximum_distance_in_steps += config.overshoot_in_steps;
 42036  00C632  0101               	movlb	1	; () banked
 42037  00C634  51A6               	movf	(_config+5)& (0+255),w,b
 42038  00C636  0100               	movlb	0	; () banked
 42039  00C638  279D               	addwf	__motor_run@maximum_distance_in_steps& (0+255),f,b
 42040  00C63A  0101               	movlb	1	; () banked
 42041  00C63C  51A7               	movf	(_config+6)& (0+255),w,b
 42042  00C63E  0100               	movlb	0	; () banked
 42043  00C640  239E               	addwfc	(__motor_run@maximum_distance_in_steps+1)& (0+255),f,b
 42044  00C642  0E00               	movlw	0
 42045  00C644  239F               	addwfc	(__motor_run@maximum_distance_in_steps+2)& (0+255),f,b
 42046  00C646  0E00               	movlw	0
 42047  00C648  23A0               	addwfc	(__motor_run@maximum_distance_in_steps+3)& (0+255),f,b
 42048  00C64A                     l2473:
 42049                           
 42050                           ; BSR set to: 0
 42051                           ;motor.c: 251: };motor.c: 253: if(maximum_distance_in_steps<motor_final_stepcount)
 42052                           
 42053                           ; BSR set to: 0
 42054  00C64A  0101               	movlb	1	; () banked
 42055  00C64C  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42056  00C64E  0100               	movlb	0	; () banked
 42057  00C650  5D9D               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42058  00C652  0101               	movlb	1	; () banked
 42059  00C654  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42060  00C656  0100               	movlb	0	; () banked
 42061  00C658  599E               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42062  00C65A  0101               	movlb	1	; () banked
 42063  00C65C  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42064  00C65E  0100               	movlb	0	; () banked
 42065  00C660  599F               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42066  00C662  0101               	movlb	1	; () banked
 42067  00C664  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42068  00C666  0100               	movlb	0	; () banked
 42069  00C668  59A0               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42070  00C66A  B0D8               	btfsc	status,0,c
 42071  00C66C  D008               	goto	l2474
 42072                           
 42073                           ; BSR set to: 0
 42074                           ;motor.c: 254: {;motor.c: 255: motor_final_stepcount = maximum_distance_in_steps;
 42075  00C66E  C09D  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42076  00C672  C09E  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42077  00C676  C09F  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42078  00C67A  C0A0  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42079  00C67E                     l2474:
 42080                           
 42081                           ;motor.c: 256: };motor.c: 257: };motor.c: 260: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 42082                           
 42083                           ; BSR set to: 0
 42084                           
 42085                           ; BSR set to: 0
 42086  00C67E  0101               	movlb	1	; () banked
 42087  00C680  0555               	decf	_motor_direction& (0+255),w,b
 42088  00C682  A4D8               	btfss	status,2,c
 42089  00C684  D061               	goto	l2478
 42090                           
 42091                           ; BSR set to: 1
 42092  00C686  51B7               	movf	(_config+22)& (0+255),w,b
 42093  00C688  B4D8               	btfsc	status,2,c
 42094  00C68A  D05E               	goto	l2478
 42095                           
 42096                           ; BSR set to: 1
 42097                           ;motor.c: 262: {;motor.c: 264: motor_calculate_position_in_degrees();
 42098  00C68C  EC19  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
 42099                           
 42100                           ;motor.c: 267: if(config.cw_limit >= os.current_position_in_degrees)
 42101  00C690  0101               	movlb	1	; () banked
 42102  00C692  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42103  00C694  5DB8               	subwf	(_config+23)& (0+255),w,b
 42104  00C696  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42105  00C698  59B9               	subwfb	(_config+24)& (0+255),w,b
 42106  00C69A  A0D8               	btfss	status,0,c
 42107  00C69C  D014               	goto	l2476
 42108                           
 42109                           ; BSR set to: 1
 42110                           ;motor.c: 268: {;motor.c: 269: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 42111  00C69E  EE21  F07C         	lfsr	2,_os+11	;volatile
 42112  00C6A2  CFDE F096          	movff	postinc2,??__motor_run
 42113  00C6A6  CFDD F097          	movff	postdec2,??__motor_run+1
 42114  00C6AA  0100               	movlb	0	; () banked
 42115  00C6AC  1F96               	comf	??__motor_run& (0+255),f,b
 42116  00C6AE  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 42117  00C6B0  4B96               	infsnz	??__motor_run& (0+255),f,b
 42118  00C6B2  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42119  00C6B4  0101               	movlb	1	; () banked
 42120  00C6B6  51B8               	movf	(_config+23)& (0+255),w,b
 42121  00C6B8  0100               	movlb	0	; () banked
 42122  00C6BA  2596               	addwf	??__motor_run& (0+255),w,b
 42123  00C6BC  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42124  00C6BE  0101               	movlb	1	; () banked
 42125  00C6C0  51B9               	movf	(_config+24)& (0+255),w,b
 42126  00C6C2  0100               	movlb	0	; () banked
 42127  00C6C4  D017               	goto	L67
 42128  00C6C6                     l2476:
 42129                           
 42130                           ;motor.c: 271: else;motor.c: 272: {;motor.c: 274: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 42131                           
 42132                           ; BSR set to: 0
 42133  00C6C6  EE21  F07C         	lfsr	2,_os+11	;volatile
 42134  00C6CA  CFDE F096          	movff	postinc2,??__motor_run
 42135  00C6CE  CFDD F097          	movff	postdec2,??__motor_run+1
 42136  00C6D2  0100               	movlb	0	; () banked
 42137  00C6D4  1F96               	comf	??__motor_run& (0+255),f,b
 42138  00C6D6  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 42139  00C6D8  4B96               	infsnz	??__motor_run& (0+255),f,b
 42140  00C6DA  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42141  00C6DC  0101               	movlb	1	; () banked
 42142  00C6DE  51B8               	movf	(_config+23)& (0+255),w,b
 42143  00C6E0  0100               	movlb	0	; () banked
 42144  00C6E2  2796               	addwf	??__motor_run& (0+255),f,b
 42145  00C6E4  0101               	movlb	1	; () banked
 42146  00C6E6  51B9               	movf	(_config+24)& (0+255),w,b
 42147  00C6E8  0100               	movlb	0	; () banked
 42148  00C6EA  2397               	addwfc	(??__motor_run+1)& (0+255),f,b
 42149  00C6EC  0EA0               	movlw	160
 42150  00C6EE  2596               	addwf	??__motor_run& (0+255),w,b
 42151  00C6F0  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42152  00C6F2  0E8C               	movlw	140
 42153  00C6F4                     L67:
 42154  00C6F4  2197               	addwfc	(??__motor_run+1)& (0+255),w,b
 42155  00C6F6  6F9C               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42156                           
 42157                           ; BSR set to: 0
 42158                           ;motor.c: 275: };motor.c: 277: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42159                           
 42160                           ; BSR set to: 0
 42161  00C6F8  C09B  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42162  00C6FC  C09C  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42163  00C700  ECC7  F08D         	call	_motor_steps_from_degrees	;wreg free
 42164  00C704  C087  F09D         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42165  00C708  C088  F09E         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42166  00C70C  C089  F09F         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42167  00C710  C08A  F0A0         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42168                           
 42169                           ;motor.c: 279: if(maximum_distance_in_steps<motor_final_stepcount)
 42170  00C714  0101               	movlb	1	; () banked
 42171  00C716  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42172  00C718  0100               	movlb	0	; () banked
 42173  00C71A  5D9D               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42174  00C71C  0101               	movlb	1	; () banked
 42175  00C71E  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42176  00C720  0100               	movlb	0	; () banked
 42177  00C722  599E               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42178  00C724  0101               	movlb	1	; () banked
 42179  00C726  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42180  00C728  0100               	movlb	0	; () banked
 42181  00C72A  599F               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42182  00C72C  0101               	movlb	1	; () banked
 42183  00C72E  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42184  00C730  0100               	movlb	0	; () banked
 42185  00C732  59A0               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42186  00C734  B0D8               	btfsc	status,0,c
 42187  00C736  D008               	goto	l2478
 42188                           
 42189                           ; BSR set to: 0
 42190                           ;motor.c: 280: {;motor.c: 281: motor_final_stepcount = maximum_distance_in_steps;
 42191  00C738  C09D  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42192  00C73C  C09E  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42193  00C740  C09F  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42194  00C744  C0A0  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42195  00C748                     l2478:
 42196                           
 42197                           ;motor.c: 282: };motor.c: 283: };motor.c: 287: if(motor_final_stepcount==0)
 42198                           
 42199                           ; BSR set to: 0
 42200                           
 42201                           ; BSR set to: 0
 42202  00C748  0101               	movlb	1	; () banked
 42203  00C74A  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42204  00C74C  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42205  00C74E  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42206  00C750  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42207  00C752  B4D8               	btfsc	status,2,c
 42208  00C754  0012               	return	
 42209                           
 42210                           ; BSR set to: 1
 42211                           ;motor.c: 290: };motor.c: 293: if(speed==0)
 42212                           
 42213                           ; BSR set to: 1
 42214                           
 42215                           ; BSR set to: 1
 42216                           ;motor.c: 288: {;motor.c: 289: return;
 42217  00C756  0100               	movlb	0	; () banked
 42218  00C758  5193               	movf	__motor_run@speed& (0+255),w,b
 42219  00C75A  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 42220  00C75C  A4D8               	btfss	status,2,c
 42221  00C75E  D005               	goto	l2481
 42222                           
 42223                           ; BSR set to: 0
 42224                           ;motor.c: 294: {;motor.c: 295: motor_maximum_speed = config.maximum_speed;
 42225  00C760  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 42226  00C764  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 42227                           
 42228                           ;motor.c: 296: }
 42229  00C768  D004               	goto	l2482
 42230  00C76A                     l2481:
 42231                           
 42232                           ; BSR set to: 0
 42233                           ;motor.c: 297: else;motor.c: 298: {;motor.c: 299: motor_maximum_speed = speed;
 42234  00C76A  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 42235  00C76E  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 42236  00C772                     l2482:
 42237                           
 42238                           ; BSR set to: 0
 42239                           ;motor.c: 300: };motor.c: 303: motor_current_speed = 0;
 42240                           
 42241                           ; BSR set to: 0
 42242  00C772  0E00               	movlw	0
 42243  00C774  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 42244  00C776  0E00               	movlw	0
 42245  00C778  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 42246                           
 42247                           ;motor.c: 304: motor_current_stepcount = 0;
 42248  00C77A  0E00               	movlw	0
 42249  00C77C  6E58               	movwf	_motor_current_stepcount,c	;volatile
 42250  00C77E  0E00               	movlw	0
 42251  00C780  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 42252  00C782  0E00               	movlw	0
 42253  00C784  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 42254  00C786  0E00               	movlw	0
 42255  00C788  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 42256                           
 42257                           ; BSR set to: 0
 42258                           ;motor.c: 306: motor_next_speed_check = motor_steps_lookup[1];
 42259  00C78A  0E63               	movlw	low (_motor_steps_lookup+2)
 42260  00C78C  6EF6               	movwf	tblptrl,c
 42261  00C78E  0E94               	movlw	high (_motor_steps_lookup+2)
 42262  00C790  6EF7               	movwf	tblptrh,c
 42263  00C792                     	if	0	;tblptru may be non-zero
 42264  00C792                     	endif
 42265  00C792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42266  00C792  0E00               	movlw	low (__mediumconst shr (0+16))
 42267  00C794  6EF8               	movwf	tblptru,c
 42268  00C796                     	endif
 42269  00C796  0009               	tblrd		*+
 42270  00C798  CFF5 F096          	movff	tablat,??__motor_run
 42271  00C79C  0009               	tblrd		*+
 42272  00C79E  CFF5 F097          	movff	tablat,??__motor_run+1
 42273  00C7A2  C096  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 42274  00C7A6  C097  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 42275  00C7AA  0102               	movlb	2	; () banked
 42276  00C7AC  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 42277  00C7AE  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 42278                           
 42279                           ; BSR set to: 2
 42280                           ;motor.c: 309: CCP1CONbits.CCP1M = 0b0000;
 42281  00C7B0  90BA               	bcf	4026,0,c	;volatile
 42282  00C7B2  92BA               	bcf	4026,1,c	;volatile
 42283  00C7B4  94BA               	bcf	4026,2,c	;volatile
 42284  00C7B6  96BA               	bcf	4026,3,c	;volatile
 42285                           
 42286                           ; BSR set to: 2
 42287                           ;motor.c: 312: LATBbits.LB0 = 0;
 42288  00C7B8  908A               	bcf	3978,0,c	;volatile
 42289                           
 42290                           ; BSR set to: 2
 42291                           ;motor.c: 313: if(direction==MOTOR_DIRECTION_CCW)
 42292  00C7BA  0100               	movlb	0	; () banked
 42293  00C7BC  299A               	incf	__motor_run@direction& (0+255),w,b
 42294  00C7BE  A4D8               	btfss	status,2,c
 42295  00C7C0  D005               	goto	l2483
 42296                           
 42297                           ; BSR set to: 0
 42298                           ;motor.c: 314: {;motor.c: 315: if(config.inverse_direction)
 42299  00C7C2  0101               	movlb	1	; () banked
 42300  00C7C4  51A5               	movf	(_config+4)& (0+255),w,b
 42301  00C7C6  B4D8               	btfsc	status,2,c
 42302  00C7C8  D005               	goto	u11250
 42303  00C7CA  D006               	goto	l2487
 42304  00C7CC                     l2483:
 42305                           
 42306                           ;motor.c: 320: else;motor.c: 321: {;motor.c: 322: if(config.inverse_direction)
 42307                           
 42308                           ; BSR set to: 1
 42309  00C7CC  0101               	movlb	1	; () banked
 42310  00C7CE  51A5               	movf	(_config+4)& (0+255),w,b
 42311  00C7D0  B4D8               	btfsc	status,2,c
 42312  00C7D2  D002               	goto	l2487
 42313  00C7D4                     u11250:
 42314                           
 42315                           ; BSR set to: 1
 42316                           ;motor.c: 323: LATBbits.LB2 = 0;
 42317  00C7D4  948A               	bcf	3978,2,c	;volatile
 42318  00C7D6  D001               	goto	l2488
 42319  00C7D8                     l2487:
 42320                           
 42321                           ; BSR set to: 1
 42322                           ;motor.c: 324: else;motor.c: 325: LATBbits.LB2 = 1;
 42323  00C7D8  848A               	bsf	3978,2,c	;volatile
 42324  00C7DA                     l2488:
 42325                           
 42326                           ; BSR set to: 1
 42327                           ;motor.c: 326: };motor.c: 329: LATBbits.LB1 = 1;
 42328                           
 42329                           ; BSR set to: 1
 42330  00C7DA  828A               	bsf	3978,1,c	;volatile
 42331                           
 42332                           ; BSR set to: 1
 42333                           ;motor.c: 332: ++motor_current_stepcount;
 42334  00C7DC  0E01               	movlw	1
 42335  00C7DE  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 42336  00C7E0  0E00               	movlw	0
 42337  00C7E2  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 42338  00C7E4  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 42339  00C7E6  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 42340                           
 42341                           ;motor.c: 335: os.current_position_in_steps += motor_direction;
 42342  00C7E8  5155               	movf	_motor_direction& (0+255),w,b
 42343  00C7EA  0100               	movlb	0	; () banked
 42344  00C7EC  6F96               	movwf	??__motor_run& (0+255),b
 42345  00C7EE  0E00               	movlw	0
 42346  00C7F0  BF96               	btfsc	??__motor_run& (0+255),7,b
 42347  00C7F2  0EFF               	movlw	255
 42348  00C7F4  6F97               	movwf	(??__motor_run+1)& (0+255),b
 42349  00C7F6  6F98               	movwf	(??__motor_run+2)& (0+255),b
 42350  00C7F8  6F99               	movwf	(??__motor_run+3)& (0+255),b
 42351  00C7FA  5196               	movf	??__motor_run& (0+255),w,b
 42352  00C7FC  0101               	movlb	1	; () banked
 42353  00C7FE  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 42354  00C800  0100               	movlb	0	; () banked
 42355  00C802  5197               	movf	(??__motor_run+1)& (0+255),w,b
 42356  00C804  0101               	movlb	1	; () banked
 42357  00C806  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 42358  00C808  0100               	movlb	0	; () banked
 42359  00C80A  5198               	movf	(??__motor_run+2)& (0+255),w,b
 42360  00C80C  0101               	movlb	1	; () banked
 42361  00C80E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 42362  00C810  0100               	movlb	0	; () banked
 42363  00C812  5199               	movf	(??__motor_run+3)& (0+255),w,b
 42364  00C814  0101               	movlb	1	; () banked
 42365  00C816  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 42366                           
 42367                           ;motor.c: 336: if(os.current_position_in_steps==config.full_circle_in_steps)
 42368  00C818  51A1               	movf	_config& (0+255),w,b
 42369  00C81A  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 42370  00C81C  E112               	bnz	l12829
 42371  00C81E  51A2               	movf	(_config+1)& (0+255),w,b
 42372  00C820  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 42373  00C822  E10F               	bnz	l12829
 42374  00C824  51A3               	movf	(_config+2)& (0+255),w,b
 42375  00C826  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 42376  00C828  E10C               	bnz	l12829
 42377  00C82A  51A4               	movf	(_config+3)& (0+255),w,b
 42378  00C82C  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 42379  00C82E  A4D8               	btfss	status,2,c
 42380  00C830  D008               	goto	l2489
 42381                           
 42382                           ; BSR set to: 1
 42383                           ;motor.c: 337: os.current_position_in_steps = 0;
 42384  00C832  0E00               	movlw	0
 42385  00C834  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42386  00C836  0E00               	movlw	0
 42387  00C838  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42388  00C83A  0E00               	movlw	0
 42389  00C83C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42390  00C83E  0E00               	movlw	0
 42391  00C840  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42392  00C842                     l2489:
 42393  00C842                     l12829:
 42394                           
 42395                           ; BSR set to: 1
 42396                           ;motor.c: 338: if(os.current_position_in_steps==0xFFFFFFFF)
 42397  00C842  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 42398  00C844  E113               	bnz	l12833
 42399  00C846  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 42400  00C848  E111               	bnz	l12833
 42401  00C84A  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 42402  00C84C  E10F               	bnz	l12833
 42403  00C84E  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 42404  00C850  A4D8               	btfss	status,2,c
 42405  00C852  D00C               	goto	l2490
 42406                           
 42407                           ; BSR set to: 1
 42408                           ;motor.c: 339: os.current_position_in_steps = (config.full_circle_in_steps-1);
 42409  00C854  0EFF               	movlw	255
 42410  00C856  25A1               	addwf	_config& (0+255),w,b
 42411  00C858  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42412  00C85A  0EFF               	movlw	255
 42413  00C85C  21A2               	addwfc	(_config+1)& (0+255),w,b
 42414  00C85E  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42415  00C860  0EFF               	movlw	255
 42416  00C862  21A3               	addwfc	(_config+2)& (0+255),w,b
 42417  00C864  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42418  00C866  0EFF               	movlw	255
 42419  00C868  21A4               	addwfc	(_config+3)& (0+255),w,b
 42420  00C86A  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42421  00C86C                     l2490:
 42422  00C86C                     l12833:
 42423                           
 42424                           ; BSR set to: 1
 42425                           ;motor.c: 342: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42426  00C86C  0E55               	movlw	85
 42427  00C86E  6EA7               	movwf	4007,c	;volsfr
 42428                           
 42429                           ; BSR set to: 1
 42430  00C870  0EAA               	movlw	170
 42431  00C872  6EA7               	movwf	4007,c	;volsfr
 42432                           
 42433                           ; BSR set to: 1
 42434  00C874  010E               	movlb	14	; () banked
 42435  00C876  91BF               	bcf	191,0,b	;volatile
 42436                           
 42437                           ; BSR set to: 14
 42438                           ;motor.c: 343: RPOR4 = 0;
 42439  00C878  0E00               	movlw	0
 42440  00C87A  6FC4               	movwf	196,b	;volatile
 42441                           
 42442                           ; BSR set to: 14
 42443                           ;motor.c: 344: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42444  00C87C  0E55               	movlw	85
 42445  00C87E  6EA7               	movwf	4007,c	;volsfr
 42446                           
 42447                           ; BSR set to: 14
 42448  00C880  0EAA               	movlw	170
 42449  00C882  6EA7               	movwf	4007,c	;volsfr
 42450                           
 42451                           ; BSR set to: 14
 42452  00C884  81BF               	bsf	191,0,b	;volatile
 42453                           
 42454                           ; BSR set to: 14
 42455                           ;motor.c: 347: motor_mode = MOTOR_MODE_MANUAL;
 42456  00C886  0E00               	movlw	0
 42457  00C888  0101               	movlb	1	; () banked
 42458  00C88A  6F56               	movwf	_motor_mode& (0+255),b
 42459                           
 42460                           ; BSR set to: 1
 42461                           ;motor.c: 351: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 42462  00C88C  0EFD               	movlw	low _motor_prescaler_lookup
 42463  00C88E  0100               	movlb	0	; () banked
 42464  00C890  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42465  00C892  6EF6               	movwf	tblptrl,c
 42466  00C894  0E9B               	movlw	high _motor_prescaler_lookup
 42467  00C896  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42468  00C898  6EF7               	movwf	tblptrh,c
 42469  00C89A                     	if	1	;There are 3 active tblptr bytes
 42470  00C89A  6AF8               	clrf	tblptru,c
 42471  00C89C  0E00               	movlw	low (__mediumconst shr (0+16))
 42472  00C89E  22F8               	addwfc	tblptru,f,c
 42473  00C8A0                     	endif
 42474  00C8A0  0008               	tblrd		*
 42475  00C8A2  CFF5 F096          	movff	tablat,??__motor_run
 42476  00C8A6  50CA               	movf	4042,w,c	;volatile
 42477  00C8A8  1996               	xorwf	??__motor_run& (0+255),w,b
 42478  00C8AA  0BFC               	andlw	-4
 42479  00C8AC  1996               	xorwf	??__motor_run& (0+255),w,b
 42480  00C8AE  6ECA               	movwf	4042,c	;volatile
 42481                           
 42482                           ; BSR set to: 0
 42483                           ;motor.c: 353: PR2 = motor_period_lookup[motor_current_speed];
 42484  00C8B0  0E16               	movlw	low _motor_period_lookup
 42485  00C8B2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42486  00C8B4  6EF6               	movwf	tblptrl,c
 42487  00C8B6  0E9A               	movlw	high _motor_period_lookup
 42488  00C8B8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42489  00C8BA  6EF7               	movwf	tblptrh,c
 42490  00C8BC                     	if	1	;There are 3 active tblptr bytes
 42491  00C8BC  6AF8               	clrf	tblptru,c
 42492  00C8BE  0E00               	movlw	low (__mediumconst shr (0+16))
 42493  00C8C0  22F8               	addwfc	tblptru,f,c
 42494  00C8C2                     	endif
 42495  00C8C2  0008               	tblrd		*
 42496  00C8C4  CFF5 FFCB          	movff	tablat,4043	;volatile
 42497                           
 42498                           ; BSR set to: 0
 42499                           ;motor.c: 355: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 42500  00C8C8  0E2F               	movlw	low _motor_postscaler_lookup
 42501  00C8CA  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42502  00C8CC  6EF6               	movwf	tblptrl,c
 42503  00C8CE  0E98               	movlw	high _motor_postscaler_lookup
 42504  00C8D0  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42505  00C8D2  6EF7               	movwf	tblptrh,c
 42506  00C8D4                     	if	1	;There are 3 active tblptr bytes
 42507  00C8D4  6AF8               	clrf	tblptru,c
 42508  00C8D6  0E00               	movlw	low (__mediumconst shr (0+16))
 42509  00C8D8  22F8               	addwfc	tblptru,f,c
 42510  00C8DA                     	endif
 42511  00C8DA  0008               	tblrd		*
 42512  00C8DC  CFF5 F096          	movff	tablat,??__motor_run
 42513  00C8E0  4796               	rlncf	??__motor_run& (0+255),f,b
 42514  00C8E2  4796               	rlncf	??__motor_run& (0+255),f,b
 42515  00C8E4  4796               	rlncf	??__motor_run& (0+255),f,b
 42516  00C8E6  50CA               	movf	4042,w,c	;volatile
 42517  00C8E8  1996               	xorwf	??__motor_run& (0+255),w,b
 42518  00C8EA  0B87               	andlw	-121
 42519  00C8EC  1996               	xorwf	??__motor_run& (0+255),w,b
 42520  00C8EE  6ECA               	movwf	4042,c	;volatile
 42521                           
 42522                           ; BSR set to: 0
 42523                           ;motor.c: 357: CCPR1L = PR2>>1;
 42524  00C8F0  90D8               	bcf	status,0,c
 42525  00C8F2  30CB               	rrcf	4043,w,c	;volatile
 42526  00C8F4  6EBB               	movwf	4027,c	;volatile
 42527                           
 42528                           ; BSR set to: 0
 42529                           ;motor.c: 360: PIR1bits.TMR2IF = 0;
 42530  00C8F6  929E               	bcf	3998,1,c	;volatile
 42531                           
 42532                           ; BSR set to: 0
 42533                           ;motor.c: 361: PIE1bits.TMR2IE = 1;
 42534  00C8F8  829D               	bsf	3997,1,c	;volatile
 42535                           
 42536                           ; BSR set to: 0
 42537                           ;motor.c: 364: TMR2 = 0;
 42538  00C8FA  0E00               	movlw	0
 42539  00C8FC  6ECC               	movwf	4044,c	;volatile
 42540                           
 42541                           ; BSR set to: 0
 42542                           ;motor.c: 365: T2CONbits.TMR2ON = 1;
 42543  00C8FE  84CA               	bsf	4042,2,c	;volatile
 42544                           
 42545                           ; BSR set to: 0
 42546                           ;motor.c: 368: os.busy = 1;
 42547  00C900  0E01               	movlw	1
 42548  00C902  0101               	movlb	1	; () banked
 42549  00C904  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 42550                           
 42551                           ; BSR set to: 1
 42552  00C906  0012               	return		;funcret
 42553  00C908                     __end_of__motor_run:
 42554                           	opt stack 0
 42555                           tosu	equ	0xFFF
 42556                           tosh	equ	0xFFE
 42557                           tosl	equ	0xFFD
 42558                           pclath	equ	0xFFA
 42559                           tblptru	equ	0xFF8
 42560                           tblptrh	equ	0xFF7
 42561                           tblptrl	equ	0xFF6
 42562                           tablat	equ	0xFF5
 42563                           prodh	equ	0xFF4
 42564                           prodl	equ	0xFF3
 42565                           intcon	equ	0xFF2
 42566                           indf0	equ	0xFEF
 42567                           postinc0	equ	0xFEE
 42568                           fsr0h	equ	0xFEA
 42569                           fsr0l	equ	0xFE9
 42570                           wreg	equ	0xFE8
 42571                           indf1	equ	0xFE7
 42572                           postinc1	equ	0xFE6
 42573                           postdec1	equ	0xFE5
 42574                           plusw1	equ	0xFE3
 42575                           fsr1h	equ	0xFE2
 42576                           fsr1l	equ	0xFE1
 42577                           indf2	equ	0xFDF
 42578                           postinc2	equ	0xFDE
 42579                           postdec2	equ	0xFDD
 42580                           plusw2	equ	0xFDB
 42581                           fsr2h	equ	0xFDA
 42582                           fsr2l	equ	0xFD9
 42583                           status	equ	0xFD8
 42584                           
 42585 ;; *************** function _motor_steps_from_degrees *****************
 42586 ;; Defined at:
 42587 ;;		line 32 in file "motor.c"
 42588 ;; Parameters:    Size  Location     Type
 42589 ;;  degrees         2   39[BANK0 ] unsigned int 
 42590 ;; Auto vars:     Size  Location     Type
 42591 ;;  steps           4   43[BANK0 ] float 
 42592 ;; Return value:  Size  Location     Type
 42593 ;;                  4   39[BANK0 ] unsigned long 
 42594 ;; Registers used:
 42595 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 42596 ;; Tracked objects:
 42597 ;;		On entry : 0/0
 42598 ;;		On exit  : 0/0
 42599 ;;		Unchanged: 0/0
 42600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42604 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42605 ;;Total ram usage:        8 bytes
 42606 ;; Hardware stack levels used:    1
 42607 ;; Hardware stack levels required when called:   11
 42608 ;; This function calls:
 42609 ;;		___fldiv
 42610 ;;		___flmul
 42611 ;;		___fltol
 42612 ;;		___xxtofl
 42613 ;; This function is called by:
 42614 ;;		_motor_nonzero_steps_from_degrees
 42615 ;;		__motor_run
 42616 ;; This function uses a non-reentrant model
 42617 ;;
 42618                           
 42619                           	psect	text177
 42620  011B8E                     __ptext177:
 42621                           	opt stack 0
 42622  011B8E                     _motor_steps_from_degrees:
 42623                           	opt stack 17
 42624                           
 42625                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 42626                           
 42627                           ; BSR set to: 1
 42628                           ;incstack = 0
 42629  011B8E  0100               	movlb	0	; () banked
 42630  011B90  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 42631  011B92  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 42632  011B94  A4D8               	btfss	status,2,c
 42633  011B96  D009               	goto	l2419
 42634                           
 42635                           ; BSR set to: 0
 42636                           ;motor.c: 38: {;motor.c: 39: return 0;
 42637  011B98  0E00               	movlw	0
 42638  011B9A  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 42639  011B9C  0E00               	movlw	0
 42640  011B9E  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 42641  011BA0  0E00               	movlw	0
 42642  011BA2  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 42643  011BA4  0E00               	movlw	0
 42644  011BA6  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 42645                           
 42646                           ; BSR set to: 0
 42647  011BA8  0012               	return	
 42648  011BAA                     l2419:
 42649                           
 42650                           ; BSR set to: 0
 42651                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 42652                           
 42653                           ; BSR set to: 0
 42654  011BAA  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 42655  011BAE  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 42656  011BB2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 42657  011BB4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 42658  011BB6  0E00               	movlw	0
 42659  011BB8  ECA3  F07F         	call	___xxtofl
 42660  011BBC  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 42661  011BC0  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 42662  011BC4  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 42663  011BC8  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 42664                           
 42665                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 42666  011BCC  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 42667  011BD0  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 42668  011BD4  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 42669  011BD8  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 42670  011BDC  C1A1  F060         	movff	_config,___xxtofl@val
 42671  011BE0  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 42672  011BE4  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 42673  011BE8  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 42674  011BEC  0E00               	movlw	0
 42675  011BEE  ECA3  F07F         	call	___xxtofl
 42676  011BF2  C060  F072         	movff	?___xxtofl,___flmul@a
 42677  011BF6  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 42678  011BFA  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 42679  011BFE  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 42680  011C02  ECEC  F067         	call	___flmul	;wreg free
 42681  011C06  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 42682  011C0A  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 42683  011C0E  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 42684  011C12  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 42685                           
 42686                           ;motor.c: 44: steps /= 36000;
 42687  011C16  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 42688  011C1A  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 42689  011C1E  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 42690  011C22  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 42691  011C26  0E00               	movlw	0
 42692  011C28  0100               	movlb	0	; () banked
 42693  011C2A  6F72               	movwf	___fldiv@a& (0+255),b
 42694  011C2C  0EA0               	movlw	160
 42695  011C2E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 42696  011C30  0E0C               	movlw	12
 42697  011C32  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 42698  011C34  0E47               	movlw	71
 42699  011C36  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 42700  011C38  EC14  F06E         	call	___fldiv	;wreg free
 42701  011C3C  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 42702  011C40  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 42703  011C44  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 42704  011C48  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 42705                           
 42706                           ;motor.c: 46: return (uint32_t) steps;
 42707  011C4C  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 42708  011C50  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 42709  011C54  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 42710  011C58  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 42711  011C5C  EC88  F08F         	call	___fltol	;wreg free
 42712  011C60  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 42713  011C64  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 42714  011C68  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 42715  011C6C  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 42716  011C70  0012               	return	
 42717  011C72                     __end_of_motor_steps_from_degrees:
 42718                           	opt stack 0
 42719                           tosu	equ	0xFFF
 42720                           tosh	equ	0xFFE
 42721                           tosl	equ	0xFFD
 42722                           pclath	equ	0xFFA
 42723                           tblptru	equ	0xFF8
 42724                           tblptrh	equ	0xFF7
 42725                           tblptrl	equ	0xFF6
 42726                           tablat	equ	0xFF5
 42727                           prodh	equ	0xFF4
 42728                           prodl	equ	0xFF3
 42729                           intcon	equ	0xFF2
 42730                           indf0	equ	0xFEF
 42731                           postinc0	equ	0xFEE
 42732                           fsr0h	equ	0xFEA
 42733                           fsr0l	equ	0xFE9
 42734                           wreg	equ	0xFE8
 42735                           indf1	equ	0xFE7
 42736                           postinc1	equ	0xFE6
 42737                           postdec1	equ	0xFE5
 42738                           plusw1	equ	0xFE3
 42739                           fsr1h	equ	0xFE2
 42740                           fsr1l	equ	0xFE1
 42741                           indf2	equ	0xFDF
 42742                           postinc2	equ	0xFDE
 42743                           postdec2	equ	0xFDD
 42744                           plusw2	equ	0xFDB
 42745                           fsr2h	equ	0xFDA
 42746                           fsr2l	equ	0xFD9
 42747                           status	equ	0xFD8
 42748                           
 42749 ;; *************** function _motor_calculate_position_in_degrees *****************
 42750 ;; Defined at:
 42751 ;;		line 59 in file "motor.c"
 42752 ;; Parameters:    Size  Location     Type
 42753 ;;		None
 42754 ;; Auto vars:     Size  Location     Type
 42755 ;;  tmp             4   39[BANK0 ] float 
 42756 ;; Return value:  Size  Location     Type
 42757 ;;                  1    wreg      void 
 42758 ;; Registers used:
 42759 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 42760 ;; Tracked objects:
 42761 ;;		On entry : 0/0
 42762 ;;		On exit  : 0/0
 42763 ;;		Unchanged: 0/0
 42764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42769 ;;Total ram usage:        4 bytes
 42770 ;; Hardware stack levels used:    1
 42771 ;; Hardware stack levels required when called:   11
 42772 ;; This function calls:
 42773 ;;		___fldiv
 42774 ;;		___flmul
 42775 ;;		___fltol
 42776 ;;		___xxtofl
 42777 ;; This function is called by:
 42778 ;;		_main
 42779 ;;		_system_init
 42780 ;;		__motor_run
 42781 ;; This function uses a non-reentrant model
 42782 ;;
 42783                           
 42784                           	psect	text178
 42785  011E32                     __ptext178:
 42786                           	opt stack 0
 42787  011E32                     _motor_calculate_position_in_degrees:
 42788                           	opt stack 18
 42789                           
 42790                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 42791                           
 42792                           ;incstack = 0
 42793  011E32  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 42794  011E36  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 42795  011E3A  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 42796  011E3E  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 42797  011E42  0E00               	movlw	0
 42798  011E44  ECA3  F07F         	call	___xxtofl
 42799  011E48  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 42800  011E4C  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 42801  011E50  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 42802  011E54  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 42803                           
 42804                           ;motor.c: 64: tmp *= 36000;
 42805  011E58  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 42806  011E5C  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 42807  011E60  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 42808  011E64  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 42809  011E68  0E00               	movlw	0
 42810  011E6A  0100               	movlb	0	; () banked
 42811  011E6C  6F72               	movwf	___flmul@a& (0+255),b
 42812  011E6E  0EA0               	movlw	160
 42813  011E70  6F73               	movwf	(___flmul@a+1)& (0+255),b
 42814  011E72  0E0C               	movlw	12
 42815  011E74  6F74               	movwf	(___flmul@a+2)& (0+255),b
 42816  011E76  0E47               	movlw	71
 42817  011E78  6F75               	movwf	(___flmul@a+3)& (0+255),b
 42818  011E7A  ECEC  F067         	call	___flmul	;wreg free
 42819  011E7E  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 42820  011E82  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 42821  011E86  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 42822  011E8A  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 42823                           
 42824                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 42825  011E8E  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 42826  011E92  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 42827  011E96  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 42828  011E9A  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 42829  011E9E  C1A1  F060         	movff	_config,___xxtofl@val
 42830  011EA2  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 42831  011EA6  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 42832  011EAA  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 42833  011EAE  0E00               	movlw	0
 42834  011EB0  ECA3  F07F         	call	___xxtofl
 42835  011EB4  C060  F072         	movff	?___xxtofl,___fldiv@a
 42836  011EB8  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 42837  011EBC  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 42838  011EC0  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 42839  011EC4  EC14  F06E         	call	___fldiv	;wreg free
 42840  011EC8  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 42841  011ECC  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 42842  011ED0  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 42843  011ED4  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 42844                           
 42845                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 42846  011ED8  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 42847  011EDC  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 42848  011EE0  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 42849  011EE4  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 42850  011EE8  EC88  F08F         	call	___fltol	;wreg free
 42851  011EEC  C060  F17C         	movff	?___fltol,_os+11	;volatile
 42852  011EF0  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 42853                           
 42854                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 42855  011EF4  0EA0               	movlw	160
 42856  011EF6  0101               	movlb	1	; () banked
 42857  011EF8  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 42858  011EFA  E109               	bnz	l2428
 42859  011EFC  0E8C               	movlw	140
 42860  011EFE  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 42861  011F00  A4D8               	btfss	status,2,c
 42862  011F02  0012               	return	
 42863                           
 42864                           ; BSR set to: 1
 42865                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 42866  011F04  0E00               	movlw	0
 42867  011F06  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 42868  011F08  0E00               	movlw	0
 42869  011F0A  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 42870  011F0C  0012               	return	
 42871  011F0E                     l2428:
 42872                           
 42873                           ; BSR set to: 1
 42874  011F0E  0012               	return		;funcret
 42875  011F10                     __end_of_motor_calculate_position_in_degrees:
 42876                           	opt stack 0
 42877                           tosu	equ	0xFFF
 42878                           tosh	equ	0xFFE
 42879                           tosl	equ	0xFFD
 42880                           pclath	equ	0xFFA
 42881                           tblptru	equ	0xFF8
 42882                           tblptrh	equ	0xFF7
 42883                           tblptrl	equ	0xFF6
 42884                           tablat	equ	0xFF5
 42885                           prodh	equ	0xFF4
 42886                           prodl	equ	0xFF3
 42887                           intcon	equ	0xFF2
 42888                           indf0	equ	0xFEF
 42889                           postinc0	equ	0xFEE
 42890                           fsr0h	equ	0xFEA
 42891                           fsr0l	equ	0xFE9
 42892                           wreg	equ	0xFE8
 42893                           indf1	equ	0xFE7
 42894                           postinc1	equ	0xFE6
 42895                           postdec1	equ	0xFE5
 42896                           plusw1	equ	0xFE3
 42897                           fsr1h	equ	0xFE2
 42898                           fsr1l	equ	0xFE1
 42899                           indf2	equ	0xFDF
 42900                           postinc2	equ	0xFDE
 42901                           postdec2	equ	0xFDD
 42902                           plusw2	equ	0xFDB
 42903                           fsr2h	equ	0xFDA
 42904                           fsr2l	equ	0xFD9
 42905                           status	equ	0xFD8
 42906                           
 42907 ;; *************** function ___xxtofl *****************
 42908 ;; Defined at:
 42909 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 42910 ;; Parameters:    Size  Location     Type
 42911 ;;  sign            1    wreg     unsigned char 
 42912 ;;  val             4    0[BANK0 ] long 
 42913 ;; Auto vars:     Size  Location     Type
 42914 ;;  sign            1    8[BANK0 ] unsigned char 
 42915 ;;  arg             4   10[BANK0 ] unsigned long 
 42916 ;;  exp             1    9[BANK0 ] unsigned char 
 42917 ;; Return value:  Size  Location     Type
 42918 ;;                  4    0[BANK0 ] unsigned char 
 42919 ;; Registers used:
 42920 ;;		wreg, status,2, status,0
 42921 ;; Tracked objects:
 42922 ;;		On entry : 0/0
 42923 ;;		On exit  : 0/0
 42924 ;;		Unchanged: 0/0
 42925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42927 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42929 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42930 ;;Total ram usage:       14 bytes
 42931 ;; Hardware stack levels used:    1
 42932 ;; Hardware stack levels required when called:   10
 42933 ;; This function calls:
 42934 ;;		Nothing
 42935 ;; This function is called by:
 42936 ;;		_motor_steps_from_degrees
 42937 ;;		_motor_calculate_position_in_degrees
 42938 ;;		__motor_get_speed_in_degrees
 42939 ;;		__step_position_from_divide_position
 42940 ;;		_motor_divide_jump_to_nearest
 42941 ;;		_motor_arc_move
 42942 ;;		_adc_read_temperature
 42943 ;;		_motor_go_to_degrees_position
 42944 ;; This function uses a non-reentrant model
 42945 ;;
 42946                           
 42947                           	psect	text179
 42948  00FF46                     __ptext179:
 42949                           	opt stack 0
 42950  00FF46                     ___xxtofl:
 42951                           	opt stack 18
 42952                           
 42953                           ; BSR set to: 1
 42954                           ;incstack = 0
 42955                           ;___xxtofl@sign stored from wreg
 42956  00FF46  0100               	movlb	0	; () banked
 42957  00FF48  6F68               	movwf	___xxtofl@sign& (0+255),b
 42958  00FF4A  0100               	movlb	0	; () banked
 42959  00FF4C  5168               	movf	___xxtofl@sign& (0+255),w,b
 42960  00FF4E  A4D8               	btfss	status,2,c
 42961                           
 42962                           ; BSR set to: 0
 42963  00FF50  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 42964  00FF52  D01A               	goto	l3642
 42965                           
 42966                           ; BSR set to: 0
 42967  00FF54  C060  F064         	movff	___xxtofl@val,??___xxtofl
 42968  00FF58  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 42969  00FF5C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 42970  00FF60  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 42971  00FF64  1F64               	comf	??___xxtofl& (0+255),f,b
 42972  00FF66  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 42973  00FF68  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 42974  00FF6A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 42975  00FF6C  2B64               	incf	??___xxtofl& (0+255),f,b
 42976  00FF6E  0E00               	movlw	0
 42977  00FF70  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 42978  00FF72  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 42979  00FF74  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 42980  00FF76  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 42981  00FF7A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 42982  00FF7E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 42983  00FF82  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 42984  00FF86  D008               	goto	l3643
 42985  00FF88                     l3642:
 42986                           
 42987                           ; BSR set to: 0
 42988  00FF88  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 42989  00FF8C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 42990  00FF90  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 42991  00FF94  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 42992  00FF98                     l3643:
 42993                           
 42994                           ; BSR set to: 0
 42995                           
 42996                           ; BSR set to: 0
 42997  00FF98  5160               	movf	___xxtofl@val& (0+255),w,b
 42998  00FF9A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 42999  00FF9C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 43000  00FF9E  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 43001  00FFA0  A4D8               	btfss	status,2,c
 43002  00FFA2  D009               	goto	l3644
 43003                           
 43004                           ; BSR set to: 0
 43005  00FFA4  0E00               	movlw	0
 43006  00FFA6  6F60               	movwf	?___xxtofl& (0+255),b
 43007  00FFA8  0E00               	movlw	0
 43008  00FFAA  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 43009  00FFAC  0E00               	movlw	0
 43010  00FFAE  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 43011  00FFB0  0E00               	movlw	0
 43012  00FFB2  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 43013                           
 43014                           ; BSR set to: 0
 43015  00FFB4  0012               	return	
 43016  00FFB6                     l3644:
 43017                           
 43018                           ; BSR set to: 0
 43019                           
 43020                           ; BSR set to: 0
 43021  00FFB6  0E96               	movlw	150
 43022  00FFB8  6F69               	movwf	___xxtofl@exp& (0+255),b
 43023  00FFBA  D006               	goto	l3646
 43024  00FFBC                     
 43025                           ; BSR set to: 0
 43026                           
 43027                           ; BSR set to: 0
 43028  00FFBC  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43029  00FFBE  90D8               	bcf	status,0,c
 43030  00FFC0  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43031  00FFC2  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43032  00FFC4  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43033  00FFC6  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43034  00FFC8                     l3646:
 43035                           
 43036                           ; BSR set to: 0
 43037                           
 43038                           ; BSR set to: 0
 43039  00FFC8  0E00               	movlw	0
 43040  00FFCA  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43041  00FFCC  6F64               	movwf	??___xxtofl& (0+255),b
 43042  00FFCE  0E00               	movlw	0
 43043  00FFD0  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43044  00FFD2  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43045  00FFD4  0E00               	movlw	0
 43046  00FFD6  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43047  00FFD8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43048  00FFDA  0EFE               	movlw	254
 43049  00FFDC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43050  00FFDE  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43051  00FFE0  5164               	movf	??___xxtofl& (0+255),w,b
 43052  00FFE2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43053  00FFE4  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43054  00FFE6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43055  00FFE8  B4D8               	btfsc	status,2,c
 43056  00FFEA  D00D               	goto	l3649
 43057  00FFEC  D7E7               	goto	l3647
 43058  00FFEE                     
 43059                           ; BSR set to: 0
 43060                           
 43061                           ; BSR set to: 0
 43062  00FFEE  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43063                           
 43064                           ; BSR set to: 0
 43065  00FFF0  0E01               	movlw	1
 43066  00FFF2  276A               	addwf	___xxtofl@arg& (0+255),f,b
 43067  00FFF4  0E00               	movlw	0
 43068  00FFF6  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 43069  00FFF8  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 43070  00FFFA  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 43071                           
 43072                           ; BSR set to: 0
 43073  00FFFC  90D8               	bcf	status,0,c
 43074  00FFFE  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43075  010000  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43076  010002  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43077  010004  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43078  010006                     l3649:
 43079                           
 43080                           ; BSR set to: 0
 43081  010006  0E00               	movlw	0
 43082  010008  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43083  01000A  6F64               	movwf	??___xxtofl& (0+255),b
 43084  01000C  0E00               	movlw	0
 43085  01000E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43086  010010  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43087  010012  0E00               	movlw	0
 43088  010014  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43089  010016  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43090  010018  0EFF               	movlw	255
 43091  01001A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43092  01001C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43093  01001E  5164               	movf	??___xxtofl& (0+255),w,b
 43094  010020  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43095  010022  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43096  010024  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43097  010026  B4D8               	btfsc	status,2,c
 43098  010028  D007               	goto	l3652
 43099  01002A  D7E1               	goto	l3650
 43100  01002C                     
 43101                           ; BSR set to: 0
 43102                           
 43103                           ; BSR set to: 0
 43104  01002C  0769               	decf	___xxtofl@exp& (0+255),f,b
 43105  01002E  90D8               	bcf	status,0,c
 43106  010030  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 43107  010032  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 43108  010034  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 43109  010036  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 43110  010038                     l3652:
 43111                           
 43112                           ; BSR set to: 0
 43113                           
 43114                           ; BSR set to: 0
 43115  010038  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 43116  01003A  D003               	goto	u10480
 43117                           
 43118                           ; BSR set to: 0
 43119  01003C  0E02               	movlw	2
 43120  01003E  6169               	cpfslt	___xxtofl@exp& (0+255),b
 43121  010040  D7F5               	goto	l3653
 43122  010042                     u10480:
 43123                           
 43124                           ; BSR set to: 0
 43125                           
 43126                           ; BSR set to: 0
 43127  010042  A169               	btfss	___xxtofl@exp& (0+255),0,b
 43128                           
 43129                           ; BSR set to: 0
 43130  010044  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 43131                           
 43132                           ; BSR set to: 0
 43133                           
 43134                           ; BSR set to: 0
 43135  010046  90D8               	bcf	status,0,c
 43136  010048  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 43137                           
 43138                           ; BSR set to: 0
 43139  01004A  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 43140  01004E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43141  010050  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43142  010052  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 43143  010054  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 43144  010058  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43145  01005A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43146  01005C  6B64               	clrf	??___xxtofl& (0+255),b
 43147  01005E  5164               	movf	??___xxtofl& (0+255),w,b
 43148  010060  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 43149  010062  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 43150  010064  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 43151  010066  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 43152  010068  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 43153  01006A  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 43154  01006C  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 43155                           
 43156                           ; BSR set to: 0
 43157  01006E  5168               	movf	___xxtofl@sign& (0+255),w,b
 43158  010070  A4D8               	btfss	status,2,c
 43159                           
 43160                           ; BSR set to: 0
 43161  010072  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43162  010074  D001               	goto	l3658
 43163                           
 43164                           ; BSR set to: 0
 43165  010076  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 43166  010078                     l3658:
 43167                           
 43168                           ; BSR set to: 0
 43169                           
 43170                           ; BSR set to: 0
 43171  010078  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 43172  01007C  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 43173  010080  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 43174  010084  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 43175  010088  0012               	return	
 43176  01008A                     __end_of___xxtofl:
 43177                           	opt stack 0
 43178                           tosu	equ	0xFFF
 43179                           tosh	equ	0xFFE
 43180                           tosl	equ	0xFFD
 43181                           pclath	equ	0xFFA
 43182                           tblptru	equ	0xFF8
 43183                           tblptrh	equ	0xFF7
 43184                           tblptrl	equ	0xFF6
 43185                           tablat	equ	0xFF5
 43186                           prodh	equ	0xFF4
 43187                           prodl	equ	0xFF3
 43188                           intcon	equ	0xFF2
 43189                           indf0	equ	0xFEF
 43190                           postinc0	equ	0xFEE
 43191                           fsr0h	equ	0xFEA
 43192                           fsr0l	equ	0xFE9
 43193                           wreg	equ	0xFE8
 43194                           indf1	equ	0xFE7
 43195                           postinc1	equ	0xFE6
 43196                           postdec1	equ	0xFE5
 43197                           plusw1	equ	0xFE3
 43198                           fsr1h	equ	0xFE2
 43199                           fsr1l	equ	0xFE1
 43200                           indf2	equ	0xFDF
 43201                           postinc2	equ	0xFDE
 43202                           postdec2	equ	0xFDD
 43203                           plusw2	equ	0xFDB
 43204                           fsr2h	equ	0xFDA
 43205                           fsr2l	equ	0xFD9
 43206                           status	equ	0xFD8
 43207                           
 43208 ;; *************** function ___fltol *****************
 43209 ;; Defined at:
 43210 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 43211 ;; Parameters:    Size  Location     Type
 43212 ;;  f1              4    0[BANK0 ] unsigned char 
 43213 ;; Auto vars:     Size  Location     Type
 43214 ;;  exp1            1    9[BANK0 ] unsigned char 
 43215 ;;  sign1           1    8[BANK0 ] unsigned char 
 43216 ;; Return value:  Size  Location     Type
 43217 ;;                  4    0[BANK0 ] long 
 43218 ;; Registers used:
 43219 ;;		wreg, status,2, status,0
 43220 ;; Tracked objects:
 43221 ;;		On entry : 0/0
 43222 ;;		On exit  : 0/0
 43223 ;;		Unchanged: 0/0
 43224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43225 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43226 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43227 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43228 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43229 ;;Total ram usage:       10 bytes
 43230 ;; Hardware stack levels used:    1
 43231 ;; Hardware stack levels required when called:   10
 43232 ;; This function calls:
 43233 ;;		Nothing
 43234 ;; This function is called by:
 43235 ;;		_motor_steps_from_degrees
 43236 ;;		_motor_calculate_position_in_degrees
 43237 ;;		__motor_get_speed_in_degrees
 43238 ;;		__step_position_from_divide_position
 43239 ;;		_motor_divide_jump_to_nearest
 43240 ;;		_motor_arc_move
 43241 ;;		_adc_read_temperature
 43242 ;;		_motor_go_to_degrees_position
 43243 ;; This function uses a non-reentrant model
 43244 ;;
 43245                           
 43246                           	psect	text180
 43247  011F10                     __ptext180:
 43248                           	opt stack 0
 43249  011F10                     ___fltol:
 43250                           	opt stack 18
 43251                           
 43252                           ; BSR set to: 0
 43253                           ;incstack = 0
 43254  011F10  0100               	movlb	0	; () banked
 43255  011F12  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 43256  011F14  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 43257  011F16  6F69               	movwf	___fltol@exp1& (0+255),b
 43258  011F18  5169               	movf	___fltol@exp1& (0+255),w,b
 43259  011F1A  A4D8               	btfss	status,2,c
 43260  011F1C  D009               	goto	l3287
 43261                           
 43262                           ; BSR set to: 0
 43263  011F1E  0E00               	movlw	0
 43264  011F20  6F60               	movwf	?___fltol& (0+255),b
 43265  011F22  0E00               	movlw	0
 43266  011F24  6F61               	movwf	(?___fltol+1)& (0+255),b
 43267  011F26  0E00               	movlw	0
 43268  011F28  6F62               	movwf	(?___fltol+2)& (0+255),b
 43269  011F2A  0E00               	movlw	0
 43270  011F2C  6F63               	movwf	(?___fltol+3)& (0+255),b
 43271                           
 43272                           ; BSR set to: 0
 43273  011F2E  0012               	return	
 43274  011F30                     l3287:
 43275                           
 43276                           ; BSR set to: 0
 43277                           
 43278                           ; BSR set to: 0
 43279  011F30  C060  F064         	movff	___fltol@f1,??___fltol
 43280  011F34  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 43281  011F38  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 43282  011F3C  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 43283  011F40  0E20               	movlw	32
 43284  011F42  D005               	goto	u10360
 43285  011F44                     u10365:
 43286  011F44  90D8               	bcf	status,0,c
 43287  011F46  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 43288  011F48  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 43289  011F4A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 43290  011F4C  3364               	rrcf	??___fltol& (0+255),f,b
 43291  011F4E                     u10360:
 43292  011F4E  2EE8               	decfsz	wreg,f,c
 43293  011F50  D7F9               	goto	u10365
 43294  011F52  5164               	movf	??___fltol& (0+255),w,b
 43295  011F54  6F68               	movwf	___fltol@sign1& (0+255),b
 43296                           
 43297                           ; BSR set to: 0
 43298  011F56  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 43299                           
 43300                           ; BSR set to: 0
 43301  011F58  0EFF               	movlw	255
 43302  011F5A  1760               	andwf	___fltol@f1& (0+255),f,b
 43303  011F5C  0EFF               	movlw	255
 43304  011F5E  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 43305  011F60  0EFF               	movlw	255
 43306  011F62  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 43307  011F64  0E00               	movlw	0
 43308  011F66  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 43309                           
 43310                           ; BSR set to: 0
 43311  011F68  0E96               	movlw	150
 43312  011F6A  5F69               	subwf	___fltol@exp1& (0+255),f,b
 43313                           
 43314                           ; BSR set to: 0
 43315  011F6C  AF69               	btfss	___fltol@exp1& (0+255),7,b
 43316  011F6E  D016               	goto	l3289
 43317                           
 43318                           ; BSR set to: 0
 43319  011F70  5169               	movf	___fltol@exp1& (0+255),w,b
 43320  011F72  0A80               	xorlw	128
 43321  011F74  0F97               	addlw	151
 43322  011F76  B0D8               	btfsc	status,0,c
 43323  011F78  D009               	goto	l3290
 43324                           
 43325                           ; BSR set to: 0
 43326  011F7A  0E00               	movlw	0
 43327  011F7C  6F60               	movwf	?___fltol& (0+255),b
 43328  011F7E  0E00               	movlw	0
 43329  011F80  6F61               	movwf	(?___fltol+1)& (0+255),b
 43330  011F82  0E00               	movlw	0
 43331  011F84  6F62               	movwf	(?___fltol+2)& (0+255),b
 43332  011F86  0E00               	movlw	0
 43333  011F88  6F63               	movwf	(?___fltol+3)& (0+255),b
 43334                           
 43335                           ; BSR set to: 0
 43336  011F8A  0012               	return	
 43337  011F8C                     l3290:
 43338                           
 43339                           ; BSR set to: 0
 43340                           
 43341                           ; BSR set to: 0
 43342                           
 43343                           ; BSR set to: 0
 43344  011F8C  90D8               	bcf	status,0,c
 43345  011F8E  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 43346  011F90  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 43347  011F92  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 43348  011F94  3360               	rrcf	___fltol@f1& (0+255),f,b
 43349                           
 43350                           ; BSR set to: 0
 43351  011F96  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 43352  011F98  D7F9               	goto	l3290
 43353                           
 43354                           ; BSR set to: 0
 43355  011F9A  D015               	goto	u10400
 43356  011F9C                     l3289:
 43357                           
 43358                           ; BSR set to: 0
 43359                           
 43360                           ; BSR set to: 0
 43361  011F9C  0E1F               	movlw	31
 43362  011F9E  6569               	cpfsgt	___fltol@exp1& (0+255),b
 43363  011FA0  D00F               	goto	l3295
 43364                           
 43365                           ; BSR set to: 0
 43366  011FA2  0E00               	movlw	0
 43367  011FA4  6F60               	movwf	?___fltol& (0+255),b
 43368  011FA6  0E00               	movlw	0
 43369  011FA8  6F61               	movwf	(?___fltol+1)& (0+255),b
 43370  011FAA  0E00               	movlw	0
 43371  011FAC  6F62               	movwf	(?___fltol+2)& (0+255),b
 43372  011FAE  0E00               	movlw	0
 43373  011FB0  6F63               	movwf	(?___fltol+3)& (0+255),b
 43374                           
 43375                           ; BSR set to: 0
 43376  011FB2  0012               	return	
 43377  011FB4                     
 43378                           ; BSR set to: 0
 43379                           
 43380                           ; BSR set to: 0
 43381  011FB4  90D8               	bcf	status,0,c
 43382  011FB6  3760               	rlcf	___fltol@f1& (0+255),f,b
 43383  011FB8  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 43384  011FBA  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 43385  011FBC  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 43386  011FBE  0769               	decf	___fltol@exp1& (0+255),f,b
 43387  011FC0                     l3295:
 43388                           
 43389                           ; BSR set to: 0
 43390                           
 43391                           ; BSR set to: 0
 43392  011FC0  5169               	movf	___fltol@exp1& (0+255),w,b
 43393  011FC2  A4D8               	btfss	status,2,c
 43394  011FC4  D7F7               	goto	l3296
 43395  011FC6                     u10400:
 43396                           
 43397                           ; BSR set to: 0
 43398                           
 43399                           ; BSR set to: 0
 43400                           
 43401                           ; BSR set to: 0
 43402  011FC6  5168               	movf	___fltol@sign1& (0+255),w,b
 43403  011FC8  B4D8               	btfsc	status,2,c
 43404  011FCA  D008               	goto	l3298
 43405                           
 43406                           ; BSR set to: 0
 43407  011FCC  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 43408  011FCE  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 43409  011FD0  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 43410  011FD2  6D60               	negf	___fltol@f1& (0+255),b
 43411  011FD4  0E00               	movlw	0
 43412  011FD6  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 43413  011FD8  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 43414  011FDA  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 43415  011FDC                     l3298:
 43416                           
 43417                           ; BSR set to: 0
 43418                           
 43419                           ; BSR set to: 0
 43420  011FDC  C060  F060         	movff	___fltol@f1,?___fltol
 43421  011FE0  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 43422  011FE4  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 43423  011FE8  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 43424  011FEC  0012               	return	
 43425  011FEE                     __end_of___fltol:
 43426                           	opt stack 0
 43427                           tosu	equ	0xFFF
 43428                           tosh	equ	0xFFE
 43429                           tosl	equ	0xFFD
 43430                           pclath	equ	0xFFA
 43431                           tblptru	equ	0xFF8
 43432                           tblptrh	equ	0xFF7
 43433                           tblptrl	equ	0xFF6
 43434                           tablat	equ	0xFF5
 43435                           prodh	equ	0xFF4
 43436                           prodl	equ	0xFF3
 43437                           intcon	equ	0xFF2
 43438                           indf0	equ	0xFEF
 43439                           postinc0	equ	0xFEE
 43440                           fsr0h	equ	0xFEA
 43441                           fsr0l	equ	0xFE9
 43442                           wreg	equ	0xFE8
 43443                           indf1	equ	0xFE7
 43444                           postinc1	equ	0xFE6
 43445                           postdec1	equ	0xFE5
 43446                           plusw1	equ	0xFE3
 43447                           fsr1h	equ	0xFE2
 43448                           fsr1l	equ	0xFE1
 43449                           indf2	equ	0xFDF
 43450                           postinc2	equ	0xFDE
 43451                           postdec2	equ	0xFDD
 43452                           plusw2	equ	0xFDB
 43453                           fsr2h	equ	0xFDA
 43454                           fsr2l	equ	0xFD9
 43455                           status	equ	0xFD8
 43456                           
 43457 ;; *************** function ___flmul *****************
 43458 ;; Defined at:
 43459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 43460 ;; Parameters:    Size  Location     Type
 43461 ;;  b               4   14[BANK0 ] long 
 43462 ;;  a               4   18[BANK0 ] long 
 43463 ;; Auto vars:     Size  Location     Type
 43464 ;;  prod            4   33[BANK0 ] struct .
 43465 ;;  grs             4   27[BANK0 ] unsigned long 
 43466 ;;  temp            2   37[BANK0 ] struct .
 43467 ;;  bexp            1   32[BANK0 ] unsigned char 
 43468 ;;  aexp            1   31[BANK0 ] unsigned char 
 43469 ;;  sign            1   26[BANK0 ] unsigned char 
 43470 ;; Return value:  Size  Location     Type
 43471 ;;                  4   14[BANK0 ] unsigned char 
 43472 ;; Registers used:
 43473 ;;		wreg, status,2, status,0, prodl, prodh
 43474 ;; Tracked objects:
 43475 ;;		On entry : 0/0
 43476 ;;		On exit  : 0/0
 43477 ;;		Unchanged: 0/0
 43478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43479 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43480 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43482 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43483 ;;Total ram usage:       25 bytes
 43484 ;; Hardware stack levels used:    1
 43485 ;; Hardware stack levels required when called:   10
 43486 ;; This function calls:
 43487 ;;		Nothing
 43488 ;; This function is called by:
 43489 ;;		_motor_steps_from_degrees
 43490 ;;		_motor_calculate_position_in_degrees
 43491 ;;		__step_position_from_divide_position
 43492 ;;		_motor_divide_jump_to_nearest
 43493 ;;		_motor_arc_move
 43494 ;;		_adc_read_temperature
 43495 ;;		_motor_go_to_degrees_position
 43496 ;; This function uses a non-reentrant model
 43497 ;;
 43498                           
 43499                           	psect	text181
 43500  00CFD8                     __ptext181:
 43501                           	opt stack 0
 43502  00CFD8                     ___flmul:
 43503                           	opt stack 18
 43504                           
 43505                           ; BSR set to: 0
 43506                           ;incstack = 0
 43507  00CFD8  0100               	movlb	0	; () banked
 43508  00CFDA  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43509  00CFDC  0B80               	andlw	128
 43510  00CFDE  6F7A               	movwf	___flmul@sign& (0+255),b
 43511  00CFE0  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43512  00CFE2  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 43513  00CFE4  6F80               	movwf	___flmul@bexp& (0+255),b
 43514                           
 43515                           ; BSR set to: 0
 43516  00CFE6  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 43517                           
 43518                           ; BSR set to: 0
 43519  00CFE8  8180               	bsf	___flmul@bexp& (0+255),0,b
 43520                           
 43521                           ; BSR set to: 0
 43522                           
 43523                           ; BSR set to: 0
 43524  00CFEA  5180               	movf	___flmul@bexp& (0+255),w,b
 43525  00CFEC  B4D8               	btfsc	status,2,c
 43526  00CFEE  D00D               	goto	l3595
 43527                           
 43528                           ; BSR set to: 0
 43529  00CFF0  2980               	incf	___flmul@bexp& (0+255),w,b
 43530  00CFF2  A4D8               	btfss	status,2,c
 43531  00CFF4  D008               	goto	l3596
 43532                           
 43533                           ; BSR set to: 0
 43534  00CFF6  0E00               	movlw	0
 43535  00CFF8  6F6E               	movwf	___flmul@b& (0+255),b
 43536  00CFFA  0E00               	movlw	0
 43537  00CFFC  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43538  00CFFE  0E00               	movlw	0
 43539  00D000  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43540  00D002  0E00               	movlw	0
 43541  00D004  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43542  00D006                     l3596:
 43543                           
 43544                           ; BSR set to: 0
 43545                           
 43546                           ; BSR set to: 0
 43547  00D006  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 43548  00D008  D008               	goto	l3597
 43549  00D00A                     l3595:
 43550                           
 43551                           ; BSR set to: 0
 43552                           
 43553                           ; BSR set to: 0
 43554  00D00A  0E00               	movlw	0
 43555  00D00C  6F6E               	movwf	___flmul@b& (0+255),b
 43556  00D00E  0E00               	movlw	0
 43557  00D010  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43558  00D012  0E00               	movlw	0
 43559  00D014  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43560  00D016  0E00               	movlw	0
 43561  00D018  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43562  00D01A                     l3597:
 43563                           
 43564                           ; BSR set to: 0
 43565                           
 43566                           ; BSR set to: 0
 43567  00D01A  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43568  00D01C  0B80               	andlw	128
 43569  00D01E  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 43570                           
 43571                           ; BSR set to: 0
 43572  00D020  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43573  00D022  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 43574  00D024  6F7F               	movwf	___flmul@aexp& (0+255),b
 43575                           
 43576                           ; BSR set to: 0
 43577  00D026  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 43578                           
 43579                           ; BSR set to: 0
 43580  00D028  817F               	bsf	___flmul@aexp& (0+255),0,b
 43581                           
 43582                           ; BSR set to: 0
 43583                           
 43584                           ; BSR set to: 0
 43585  00D02A  517F               	movf	___flmul@aexp& (0+255),w,b
 43586  00D02C  B4D8               	btfsc	status,2,c
 43587  00D02E  D00D               	goto	l3599
 43588                           
 43589                           ; BSR set to: 0
 43590  00D030  297F               	incf	___flmul@aexp& (0+255),w,b
 43591  00D032  A4D8               	btfss	status,2,c
 43592  00D034  D008               	goto	l3600
 43593                           
 43594                           ; BSR set to: 0
 43595  00D036  0E00               	movlw	0
 43596  00D038  6F72               	movwf	___flmul@a& (0+255),b
 43597  00D03A  0E00               	movlw	0
 43598  00D03C  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43599  00D03E  0E00               	movlw	0
 43600  00D040  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43601  00D042  0E00               	movlw	0
 43602  00D044  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43603  00D046                     l3600:
 43604                           
 43605                           ; BSR set to: 0
 43606                           
 43607                           ; BSR set to: 0
 43608  00D046  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 43609  00D048  D008               	goto	l3601
 43610  00D04A                     l3599:
 43611                           
 43612                           ; BSR set to: 0
 43613                           
 43614                           ; BSR set to: 0
 43615  00D04A  0E00               	movlw	0
 43616  00D04C  6F72               	movwf	___flmul@a& (0+255),b
 43617  00D04E  0E00               	movlw	0
 43618  00D050  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43619  00D052  0E00               	movlw	0
 43620  00D054  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43621  00D056  0E00               	movlw	0
 43622  00D058  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43623  00D05A                     l3601:
 43624                           
 43625                           ; BSR set to: 0
 43626  00D05A  517F               	movf	___flmul@aexp& (0+255),w,b
 43627  00D05C  B4D8               	btfsc	status,2,c
 43628  00D05E  D003               	goto	u10230
 43629                           
 43630                           ; BSR set to: 0
 43631  00D060  5180               	movf	___flmul@bexp& (0+255),w,b
 43632  00D062  A4D8               	btfss	status,2,c
 43633  00D064  D009               	goto	l3602
 43634  00D066                     u10230:
 43635                           
 43636                           ; BSR set to: 0
 43637                           
 43638                           ; BSR set to: 0
 43639  00D066  0E00               	movlw	0
 43640  00D068  6F6E               	movwf	?___flmul& (0+255),b
 43641  00D06A  0E00               	movlw	0
 43642  00D06C  6F6F               	movwf	(?___flmul+1)& (0+255),b
 43643  00D06E  0E00               	movlw	0
 43644  00D070  6F70               	movwf	(?___flmul+2)& (0+255),b
 43645  00D072  0E00               	movlw	0
 43646  00D074  6F71               	movwf	(?___flmul+3)& (0+255),b
 43647                           
 43648                           ; BSR set to: 0
 43649  00D076  0012               	return	
 43650  00D078                     l3602:
 43651                           
 43652                           ; BSR set to: 0
 43653                           
 43654                           ; BSR set to: 0
 43655  00D078  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43656  00D07A  036E               	mulwf	___flmul@b& (0+255),b
 43657  00D07C  CFF3 F085          	movff	prodl,___flmul@temp
 43658  00D080  CFF4 F086          	movff	prodh,___flmul@temp+1
 43659                           
 43660                           ; BSR set to: 0
 43661  00D084  5185               	movf	___flmul@temp& (0+255),w,b
 43662  00D086  6F7B               	movwf	___flmul@grs& (0+255),b
 43663  00D088  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 43664  00D08A  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 43665  00D08C  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 43666                           
 43667                           ; BSR set to: 0
 43668  00D08E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43669  00D090  6F81               	movwf	___flmul@prod& (0+255),b
 43670  00D092  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 43671  00D094  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 43672  00D096  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 43673  00D098  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43674  00D09A  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43675  00D09C  CFF3 F085          	movff	prodl,___flmul@temp
 43676  00D0A0  CFF4 F086          	movff	prodh,___flmul@temp+1
 43677                           
 43678                           ; BSR set to: 0
 43679  00D0A4  5185               	movf	___flmul@temp& (0+255),w,b
 43680  00D0A6  277B               	addwf	___flmul@grs& (0+255),f,b
 43681  00D0A8  0E00               	movlw	0
 43682  00D0AA  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43683  00D0AC  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43684  00D0AE  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43685                           
 43686                           ; BSR set to: 0
 43687  00D0B0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43688  00D0B2  2781               	addwf	___flmul@prod& (0+255),f,b
 43689  00D0B4  0E00               	movlw	0
 43690  00D0B6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43691  00D0B8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43692  00D0BA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43693  00D0BC  5172               	movf	___flmul@a& (0+255),w,b
 43694  00D0BE  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43695  00D0C0  CFF3 F085          	movff	prodl,___flmul@temp
 43696  00D0C4  CFF4 F086          	movff	prodh,___flmul@temp+1
 43697                           
 43698                           ; BSR set to: 0
 43699  00D0C8  5185               	movf	___flmul@temp& (0+255),w,b
 43700  00D0CA  277B               	addwf	___flmul@grs& (0+255),f,b
 43701  00D0CC  0E00               	movlw	0
 43702  00D0CE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43703  00D0D0  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43704  00D0D2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43705                           
 43706                           ; BSR set to: 0
 43707  00D0D4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43708  00D0D6  2781               	addwf	___flmul@prod& (0+255),f,b
 43709  00D0D8  0E00               	movlw	0
 43710  00D0DA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43711  00D0DC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43712  00D0DE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43713                           
 43714                           ; BSR set to: 0
 43715  00D0E0  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43716  00D0E4  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43717  00D0E8  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43718  00D0EC  6B7B               	clrf	___flmul@grs& (0+255),b
 43719                           
 43720                           ; BSR set to: 0
 43721  00D0EE  5172               	movf	___flmul@a& (0+255),w,b
 43722  00D0F0  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43723  00D0F2  CFF3 F085          	movff	prodl,___flmul@temp
 43724  00D0F6  CFF4 F086          	movff	prodh,___flmul@temp+1
 43725                           
 43726                           ; BSR set to: 0
 43727  00D0FA  5185               	movf	___flmul@temp& (0+255),w,b
 43728  00D0FC  277B               	addwf	___flmul@grs& (0+255),f,b
 43729  00D0FE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43730  00D100  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43731  00D102  0E00               	movlw	0
 43732  00D104  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43733  00D106  0E00               	movlw	0
 43734  00D108  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43735                           
 43736                           ; BSR set to: 0
 43737  00D10A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43738  00D10C  036E               	mulwf	___flmul@b& (0+255),b
 43739  00D10E  CFF3 F085          	movff	prodl,___flmul@temp
 43740  00D112  CFF4 F086          	movff	prodh,___flmul@temp+1
 43741                           
 43742                           ; BSR set to: 0
 43743  00D116  5185               	movf	___flmul@temp& (0+255),w,b
 43744  00D118  277B               	addwf	___flmul@grs& (0+255),f,b
 43745  00D11A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43746  00D11C  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43747  00D11E  0E00               	movlw	0
 43748  00D120  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43749  00D122  0E00               	movlw	0
 43750  00D124  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43751                           
 43752                           ; BSR set to: 0
 43753  00D126  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43754  00D12A  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43755  00D12E  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43756  00D132  6B7B               	clrf	___flmul@grs& (0+255),b
 43757  00D134  5172               	movf	___flmul@a& (0+255),w,b
 43758  00D136  036E               	mulwf	___flmul@b& (0+255),b
 43759  00D138  CFF3 F085          	movff	prodl,___flmul@temp
 43760  00D13C  CFF4 F086          	movff	prodh,___flmul@temp+1
 43761                           
 43762                           ; BSR set to: 0
 43763  00D140  5185               	movf	___flmul@temp& (0+255),w,b
 43764  00D142  277B               	addwf	___flmul@grs& (0+255),f,b
 43765  00D144  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43766  00D146  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43767  00D148  0E00               	movlw	0
 43768  00D14A  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43769  00D14C  0E00               	movlw	0
 43770  00D14E  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43771                           
 43772                           ; BSR set to: 0
 43773  00D150  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43774  00D152  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43775  00D154  CFF3 F085          	movff	prodl,___flmul@temp
 43776  00D158  CFF4 F086          	movff	prodh,___flmul@temp+1
 43777  00D15C  5185               	movf	___flmul@temp& (0+255),w,b
 43778  00D15E  2781               	addwf	___flmul@prod& (0+255),f,b
 43779  00D160  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43780  00D162  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43781  00D164  0E00               	movlw	0
 43782  00D166  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43783  00D168  0E00               	movlw	0
 43784  00D16A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43785                           
 43786                           ; BSR set to: 0
 43787  00D16C  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43788  00D16E  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43789  00D170  CFF3 F085          	movff	prodl,___flmul@temp
 43790  00D174  CFF4 F086          	movff	prodh,___flmul@temp+1
 43791                           
 43792                           ; BSR set to: 0
 43793  00D178  5185               	movf	___flmul@temp& (0+255),w,b
 43794  00D17A  2781               	addwf	___flmul@prod& (0+255),f,b
 43795  00D17C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43796  00D17E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43797  00D180  0E00               	movlw	0
 43798  00D182  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43799  00D184  0E00               	movlw	0
 43800  00D186  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43801  00D188  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43802  00D18A  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43803  00D18C  CFF3 F085          	movff	prodl,___flmul@temp
 43804  00D190  CFF4 F086          	movff	prodh,___flmul@temp+1
 43805                           
 43806                           ; BSR set to: 0
 43807  00D194  5185               	movf	___flmul@temp& (0+255),w,b
 43808  00D196  6F76               	movwf	??___flmul& (0+255),b
 43809  00D198  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43810  00D19A  6F77               	movwf	(??___flmul+1)& (0+255),b
 43811  00D19C  6B78               	clrf	(??___flmul+2)& (0+255),b
 43812  00D19E  6B79               	clrf	(??___flmul+3)& (0+255),b
 43813  00D1A0  C078  F079         	movff	??___flmul+2,??___flmul+3
 43814  00D1A4  C077  F078         	movff	??___flmul+1,??___flmul+2
 43815  00D1A8  C076  F077         	movff	??___flmul,??___flmul+1
 43816  00D1AC  6B76               	clrf	??___flmul& (0+255),b
 43817  00D1AE  5176               	movf	??___flmul& (0+255),w,b
 43818  00D1B0  2781               	addwf	___flmul@prod& (0+255),f,b
 43819  00D1B2  5177               	movf	(??___flmul+1)& (0+255),w,b
 43820  00D1B4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43821  00D1B6  5178               	movf	(??___flmul+2)& (0+255),w,b
 43822  00D1B8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43823  00D1BA  5179               	movf	(??___flmul+3)& (0+255),w,b
 43824  00D1BC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43825                           
 43826                           ; BSR set to: 0
 43827  00D1BE  C07B  F076         	movff	___flmul@grs,??___flmul
 43828  00D1C2  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 43829  00D1C6  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 43830  00D1CA  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 43831  00D1CE  0E19               	movlw	25
 43832  00D1D0  D005               	goto	u10240
 43833  00D1D2                     u10245:
 43834  00D1D2  90D8               	bcf	status,0,c
 43835  00D1D4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 43836  00D1D6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 43837  00D1D8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 43838  00D1DA  3376               	rrcf	??___flmul& (0+255),f,b
 43839  00D1DC                     u10240:
 43840  00D1DC  2EE8               	decfsz	wreg,f,c
 43841  00D1DE  D7F9               	goto	u10245
 43842  00D1E0  5176               	movf	??___flmul& (0+255),w,b
 43843  00D1E2  2781               	addwf	___flmul@prod& (0+255),f,b
 43844  00D1E4  5177               	movf	(??___flmul+1)& (0+255),w,b
 43845  00D1E6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43846  00D1E8  5178               	movf	(??___flmul+2)& (0+255),w,b
 43847  00D1EA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43848  00D1EC  5179               	movf	(??___flmul+3)& (0+255),w,b
 43849  00D1EE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43850                           
 43851                           ; BSR set to: 0
 43852  00D1F0  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43853  00D1F4  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43854  00D1F8  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43855  00D1FC  6B7B               	clrf	___flmul@grs& (0+255),b
 43856                           
 43857                           ; BSR set to: 0
 43858  00D1FE  517F               	movf	___flmul@aexp& (0+255),w,b
 43859  00D200  C080  F076         	movff	___flmul@bexp,??___flmul
 43860  00D204  6B77               	clrf	(??___flmul+1)& (0+255),b
 43861  00D206  2776               	addwf	??___flmul& (0+255),f,b
 43862  00D208  0E00               	movlw	0
 43863  00D20A  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 43864  00D20C  0E82               	movlw	130
 43865  00D20E  2576               	addwf	??___flmul& (0+255),w,b
 43866  00D210  6F85               	movwf	___flmul@temp& (0+255),b
 43867  00D212  0EFF               	movlw	255
 43868  00D214  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 43869  00D216  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 43870  00D218  D00F               	goto	l3606
 43871  00D21A                     
 43872                           ; BSR set to: 0
 43873                           
 43874                           ; BSR set to: 0
 43875  00D21A  90D8               	bcf	status,0,c
 43876  00D21C  3781               	rlcf	___flmul@prod& (0+255),f,b
 43877  00D21E  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 43878  00D220  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 43879  00D222  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 43880                           
 43881                           ; BSR set to: 0
 43882  00D224  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 43883                           
 43884                           ; BSR set to: 0
 43885  00D226  8181               	bsf	___flmul@prod& (0+255),0,b
 43886                           
 43887                           ; BSR set to: 0
 43888  00D228  90D8               	bcf	status,0,c
 43889  00D22A  377B               	rlcf	___flmul@grs& (0+255),f,b
 43890  00D22C  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 43891  00D22E  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 43892  00D230  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 43893  00D232  0785               	decf	___flmul@temp& (0+255),f,b
 43894  00D234  A0D8               	btfss	status,0,c
 43895  00D236  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 43896  00D238                     l3606:
 43897                           
 43898                           ; BSR set to: 0
 43899                           
 43900                           ; BSR set to: 0
 43901  00D238  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 43902  00D23A  D7EF               	goto	l3607
 43903                           
 43904                           ; BSR set to: 0
 43905                           
 43906                           ; BSR set to: 0
 43907  00D23C  0E00               	movlw	0
 43908  00D23E  6F7F               	movwf	___flmul@aexp& (0+255),b
 43909                           
 43910                           ; BSR set to: 0
 43911  00D240  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 43912  00D242  D016               	goto	l3613
 43913                           
 43914                           ; BSR set to: 0
 43915  00D244  0EFF               	movlw	255
 43916  00D246  157B               	andwf	___flmul@grs& (0+255),w,b
 43917  00D248  6F76               	movwf	??___flmul& (0+255),b
 43918  00D24A  0EFF               	movlw	255
 43919  00D24C  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 43920  00D24E  6F77               	movwf	(??___flmul+1)& (0+255),b
 43921  00D250  0EFF               	movlw	255
 43922  00D252  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 43923  00D254  6F78               	movwf	(??___flmul+2)& (0+255),b
 43924  00D256  0E7F               	movlw	127
 43925  00D258  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 43926  00D25A  6F79               	movwf	(??___flmul+3)& (0+255),b
 43927  00D25C  5176               	movf	??___flmul& (0+255),w,b
 43928  00D25E  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 43929  00D260  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 43930  00D262  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 43931  00D264  A4D8               	btfss	status,2,c
 43932  00D266  D002               	goto	u10290
 43933                           
 43934                           ; BSR set to: 0
 43935                           
 43936                           ; BSR set to: 0
 43937  00D268  A181               	btfss	___flmul@prod& (0+255),0,b
 43938  00D26A  D002               	goto	l3613
 43939  00D26C                     u10290:
 43940                           
 43941                           ; BSR set to: 0
 43942  00D26C  0E01               	movlw	1
 43943  00D26E  6F7F               	movwf	___flmul@aexp& (0+255),b
 43944  00D270                     l3613:
 43945                           
 43946                           ; BSR set to: 0
 43947                           
 43948                           ; BSR set to: 0
 43949                           
 43950                           ; BSR set to: 0
 43951  00D270  517F               	movf	___flmul@aexp& (0+255),w,b
 43952  00D272  B4D8               	btfsc	status,2,c
 43953  00D274  D01F               	goto	l3615
 43954                           
 43955                           ; BSR set to: 0
 43956  00D276  0E01               	movlw	1
 43957  00D278  2781               	addwf	___flmul@prod& (0+255),f,b
 43958  00D27A  0E00               	movlw	0
 43959  00D27C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43960  00D27E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43961  00D280  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43962                           
 43963                           ; BSR set to: 0
 43964  00D282  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 43965  00D284  D017               	goto	l3615
 43966                           
 43967                           ; BSR set to: 0
 43968  00D286  C081  F076         	movff	___flmul@prod,??___flmul
 43969  00D28A  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 43970  00D28E  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 43971  00D292  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 43972  00D296  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 43973  00D298  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 43974  00D29A  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 43975  00D29C  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 43976  00D29E  3376               	rrcf	??___flmul& (0+255),f,b
 43977  00D2A0  C076  F081         	movff	??___flmul,___flmul@prod
 43978  00D2A4  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 43979  00D2A8  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 43980  00D2AC  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 43981                           
 43982                           ; BSR set to: 0
 43983  00D2B0  4B85               	infsnz	___flmul@temp& (0+255),f,b
 43984  00D2B2  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 43985  00D2B4                     l3615:
 43986                           
 43987                           ; BSR set to: 0
 43988                           
 43989                           ; BSR set to: 0
 43990                           
 43991                           ; BSR set to: 0
 43992  00D2B4  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 43993  00D2B6  D00D               	goto	l3616
 43994  00D2B8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43995  00D2BA  E103               	bnz	u10320
 43996  00D2BC  2985               	incf	___flmul@temp& (0+255),w,b
 43997  00D2BE  A0D8               	btfss	status,0,c
 43998  00D2C0  D008               	goto	l3616
 43999  00D2C2                     u10320:
 44000                           
 44001                           ; BSR set to: 0
 44002  00D2C2  0E00               	movlw	0
 44003  00D2C4  6F81               	movwf	___flmul@prod& (0+255),b
 44004  00D2C6  0E00               	movlw	0
 44005  00D2C8  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44006  00D2CA  0E80               	movlw	128
 44007  00D2CC  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44008  00D2CE  0E7F               	movlw	127
 44009  00D2D0  D020               	goto	L68
 44010  00D2D2                     l3616:
 44011                           
 44012                           ; BSR set to: 0
 44013                           
 44014                           ; BSR set to: 0
 44015  00D2D2  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44016  00D2D4  D005               	goto	u10330
 44017  00D2D6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44018  00D2D8  E10E               	bnz	l3618
 44019  00D2DA  0585               	decf	___flmul@temp& (0+255),w,b
 44020  00D2DC  B0D8               	btfsc	status,0,c
 44021  00D2DE  D00B               	goto	l3618
 44022  00D2E0                     u10330:
 44023                           
 44024                           ; BSR set to: 0
 44025  00D2E0  0E00               	movlw	0
 44026  00D2E2  6F81               	movwf	___flmul@prod& (0+255),b
 44027  00D2E4  0E00               	movlw	0
 44028  00D2E6  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44029  00D2E8  0E00               	movlw	0
 44030  00D2EA  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44031  00D2EC  0E00               	movlw	0
 44032  00D2EE  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44033  00D2F0  0E00               	movlw	0
 44034  00D2F2  6F7A               	movwf	___flmul@sign& (0+255),b
 44035  00D2F4  D00F               	goto	l3619
 44036  00D2F6                     l3618:
 44037                           
 44038                           ; BSR set to: 0
 44039  00D2F6  C085  F080         	movff	___flmul@temp,___flmul@bexp
 44040                           
 44041                           ; BSR set to: 0
 44042  00D2FA  0EFF               	movlw	255
 44043  00D2FC  1781               	andwf	___flmul@prod& (0+255),f,b
 44044  00D2FE  0EFF               	movlw	255
 44045  00D300  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 44046  00D302  0E7F               	movlw	127
 44047  00D304  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 44048  00D306  0E00               	movlw	0
 44049  00D308  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 44050                           
 44051                           ; BSR set to: 0
 44052  00D30A  B180               	btfsc	___flmul@bexp& (0+255),0,b
 44053                           
 44054                           ; BSR set to: 0
 44055  00D30C  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 44056                           
 44057                           ; BSR set to: 0
 44058                           
 44059                           ; BSR set to: 0
 44060  00D30E  90D8               	bcf	status,0,c
 44061  00D310  3180               	rrcf	___flmul@bexp& (0+255),w,b
 44062  00D312                     L68:
 44063  00D312  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44064  00D314                     l3619:
 44065                           
 44066                           ; BSR set to: 0
 44067                           
 44068                           ; BSR set to: 0
 44069                           
 44070                           ; BSR set to: 0
 44071  00D314  517A               	movf	___flmul@sign& (0+255),w,b
 44072  00D316  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 44073                           
 44074                           ; BSR set to: 0
 44075  00D318  C081  F06E         	movff	___flmul@prod,?___flmul
 44076  00D31C  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 44077  00D320  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 44078  00D324  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 44079  00D328  0012               	return	
 44080  00D32A                     __end_of___flmul:
 44081                           	opt stack 0
 44082                           tosu	equ	0xFFF
 44083                           tosh	equ	0xFFE
 44084                           tosl	equ	0xFFD
 44085                           pclath	equ	0xFFA
 44086                           tblptru	equ	0xFF8
 44087                           tblptrh	equ	0xFF7
 44088                           tblptrl	equ	0xFF6
 44089                           tablat	equ	0xFF5
 44090                           prodh	equ	0xFF4
 44091                           prodl	equ	0xFF3
 44092                           intcon	equ	0xFF2
 44093                           indf0	equ	0xFEF
 44094                           postinc0	equ	0xFEE
 44095                           fsr0h	equ	0xFEA
 44096                           fsr0l	equ	0xFE9
 44097                           wreg	equ	0xFE8
 44098                           indf1	equ	0xFE7
 44099                           postinc1	equ	0xFE6
 44100                           postdec1	equ	0xFE5
 44101                           plusw1	equ	0xFE3
 44102                           fsr1h	equ	0xFE2
 44103                           fsr1l	equ	0xFE1
 44104                           indf2	equ	0xFDF
 44105                           postinc2	equ	0xFDE
 44106                           postdec2	equ	0xFDD
 44107                           plusw2	equ	0xFDB
 44108                           fsr2h	equ	0xFDA
 44109                           fsr2l	equ	0xFD9
 44110                           status	equ	0xFD8
 44111                           
 44112 ;; *************** function ___fldiv *****************
 44113 ;; Defined at:
 44114 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 44115 ;; Parameters:    Size  Location     Type
 44116 ;;  b               4   14[BANK0 ] unsigned char 
 44117 ;;  a               4   18[BANK0 ] unsigned char 
 44118 ;; Auto vars:     Size  Location     Type
 44119 ;;  grs             4   33[BANK0 ] unsigned long 
 44120 ;;  rem             4   26[BANK0 ] unsigned long 
 44121 ;;  new_exp         2   31[BANK0 ] int 
 44122 ;;  aexp            1   38[BANK0 ] unsigned char 
 44123 ;;  bexp            1   37[BANK0 ] unsigned char 
 44124 ;;  sign            1   30[BANK0 ] unsigned char 
 44125 ;; Return value:  Size  Location     Type
 44126 ;;                  4   14[BANK0 ] unsigned char 
 44127 ;; Registers used:
 44128 ;;		wreg, status,2, status,0
 44129 ;; Tracked objects:
 44130 ;;		On entry : 0/0
 44131 ;;		On exit  : 0/0
 44132 ;;		Unchanged: 0/0
 44133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44135 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44136 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44137 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44138 ;;Total ram usage:       25 bytes
 44139 ;; Hardware stack levels used:    1
 44140 ;; Hardware stack levels required when called:   10
 44141 ;; This function calls:
 44142 ;;		Nothing
 44143 ;; This function is called by:
 44144 ;;		_motor_steps_from_degrees
 44145 ;;		_motor_calculate_position_in_degrees
 44146 ;;		__motor_get_speed_in_degrees
 44147 ;;		__step_position_from_divide_position
 44148 ;;		_motor_divide_jump_to_nearest
 44149 ;;		_motor_arc_move
 44150 ;;		_motor_go_to_degrees_position
 44151 ;; This function uses a non-reentrant model
 44152 ;;
 44153                           
 44154                           	psect	text182
 44155  00DC28                     __ptext182:
 44156                           	opt stack 0
 44157  00DC28                     ___fldiv:
 44158                           	opt stack 18
 44159                           
 44160                           ; BSR set to: 0
 44161                           ;incstack = 0
 44162  00DC28  0100               	movlb	0	; () banked
 44163  00DC2A  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44164  00DC2C  0B80               	andlw	128
 44165  00DC2E  6F7E               	movwf	___fldiv@sign& (0+255),b
 44166  00DC30  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44167  00DC32  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 44168  00DC34  6F85               	movwf	___fldiv@bexp& (0+255),b
 44169                           
 44170                           ; BSR set to: 0
 44171  00DC36  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 44172                           
 44173                           ; BSR set to: 0
 44174  00DC38  8185               	bsf	___fldiv@bexp& (0+255),0,b
 44175                           
 44176                           ; BSR set to: 0
 44177                           
 44178                           ; BSR set to: 0
 44179  00DC3A  5185               	movf	___fldiv@bexp& (0+255),w,b
 44180  00DC3C  B4D8               	btfsc	status,2,c
 44181  00DC3E  D00D               	goto	l3561
 44182                           
 44183                           ; BSR set to: 0
 44184  00DC40  2985               	incf	___fldiv@bexp& (0+255),w,b
 44185  00DC42  A4D8               	btfss	status,2,c
 44186  00DC44  D008               	goto	l3562
 44187                           
 44188                           ; BSR set to: 0
 44189  00DC46  0E00               	movlw	0
 44190  00DC48  6F6E               	movwf	___fldiv@b& (0+255),b
 44191  00DC4A  0E00               	movlw	0
 44192  00DC4C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44193  00DC4E  0E00               	movlw	0
 44194  00DC50  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44195  00DC52  0E00               	movlw	0
 44196  00DC54  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44197  00DC56                     l3562:
 44198                           
 44199                           ; BSR set to: 0
 44200                           
 44201                           ; BSR set to: 0
 44202  00DC56  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44203  00DC58  D006               	goto	L69
 44204  00DC5A                     l3561:
 44205                           
 44206                           ; BSR set to: 0
 44207                           
 44208                           ; BSR set to: 0
 44209  00DC5A  0E00               	movlw	0
 44210  00DC5C  6F6E               	movwf	___fldiv@b& (0+255),b
 44211  00DC5E  0E00               	movlw	0
 44212  00DC60  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44213  00DC62  0E00               	movlw	0
 44214  00DC64  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44215  00DC66                     L69:
 44216  00DC66  0E00               	movlw	0
 44217  00DC68  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44218                           
 44219                           ; BSR set to: 0
 44220                           
 44221                           ; BSR set to: 0
 44222  00DC6A  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44223  00DC6C  0B80               	andlw	128
 44224  00DC6E  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 44225                           
 44226                           ; BSR set to: 0
 44227  00DC70  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44228  00DC72  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 44229  00DC74  6F86               	movwf	___fldiv@aexp& (0+255),b
 44230                           
 44231                           ; BSR set to: 0
 44232  00DC76  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 44233                           
 44234                           ; BSR set to: 0
 44235  00DC78  8186               	bsf	___fldiv@aexp& (0+255),0,b
 44236                           
 44237                           ; BSR set to: 0
 44238                           
 44239                           ; BSR set to: 0
 44240  00DC7A  5186               	movf	___fldiv@aexp& (0+255),w,b
 44241  00DC7C  B4D8               	btfsc	status,2,c
 44242  00DC7E  D00D               	goto	l3565
 44243                           
 44244                           ; BSR set to: 0
 44245  00DC80  2986               	incf	___fldiv@aexp& (0+255),w,b
 44246  00DC82  A4D8               	btfss	status,2,c
 44247  00DC84  D008               	goto	l3566
 44248                           
 44249                           ; BSR set to: 0
 44250  00DC86  0E00               	movlw	0
 44251  00DC88  6F72               	movwf	___fldiv@a& (0+255),b
 44252  00DC8A  0E00               	movlw	0
 44253  00DC8C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44254  00DC8E  0E00               	movlw	0
 44255  00DC90  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44256  00DC92  0E00               	movlw	0
 44257  00DC94  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44258  00DC96                     l3566:
 44259                           
 44260                           ; BSR set to: 0
 44261                           
 44262                           ; BSR set to: 0
 44263  00DC96  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 44264  00DC98  D006               	goto	L70
 44265  00DC9A                     l3565:
 44266                           
 44267                           ; BSR set to: 0
 44268                           
 44269                           ; BSR set to: 0
 44270  00DC9A  0E00               	movlw	0
 44271  00DC9C  6F72               	movwf	___fldiv@a& (0+255),b
 44272  00DC9E  0E00               	movlw	0
 44273  00DCA0  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44274  00DCA2  0E00               	movlw	0
 44275  00DCA4  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44276  00DCA6                     L70:
 44277  00DCA6  0E00               	movlw	0
 44278  00DCA8  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44279                           
 44280                           ; BSR set to: 0
 44281                           
 44282                           ; BSR set to: 0
 44283  00DCAA  5172               	movf	___fldiv@a& (0+255),w,b
 44284  00DCAC  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 44285  00DCAE  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 44286  00DCB0  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 44287  00DCB2  A4D8               	btfss	status,2,c
 44288  00DCB4  D017               	goto	l3568
 44289                           
 44290                           ; BSR set to: 0
 44291  00DCB6  0E00               	movlw	0
 44292  00DCB8  6F6E               	movwf	___fldiv@b& (0+255),b
 44293  00DCBA  0E00               	movlw	0
 44294  00DCBC  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44295  00DCBE  0E00               	movlw	0
 44296  00DCC0  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44297  00DCC2  0E00               	movlw	0
 44298  00DCC4  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44299                           
 44300                           ; BSR set to: 0
 44301  00DCC6  0E80               	movlw	128
 44302  00DCC8  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 44303  00DCCA  0E7F               	movlw	127
 44304  00DCCC  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44305                           
 44306                           ; BSR set to: 0
 44307  00DCCE  517E               	movf	___fldiv@sign& (0+255),w,b
 44308  00DCD0  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44309                           
 44310                           ; BSR set to: 0
 44311  00DCD2  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44312  00DCD6  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44313  00DCDA  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44314  00DCDE  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44315                           
 44316                           ; BSR set to: 0
 44317  00DCE2  0012               	return	
 44318  00DCE4                     l3568:
 44319                           
 44320                           ; BSR set to: 0
 44321                           
 44322                           ; BSR set to: 0
 44323  00DCE4  5185               	movf	___fldiv@bexp& (0+255),w,b
 44324  00DCE6  A4D8               	btfss	status,2,c
 44325  00DCE8  D011               	goto	l3570
 44326                           
 44327                           ; BSR set to: 0
 44328  00DCEA  0E00               	movlw	0
 44329  00DCEC  6F6E               	movwf	___fldiv@b& (0+255),b
 44330  00DCEE  0E00               	movlw	0
 44331  00DCF0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44332  00DCF2  0E00               	movlw	0
 44333  00DCF4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44334  00DCF6  0E00               	movlw	0
 44335  00DCF8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44336                           
 44337                           ; BSR set to: 0
 44338  00DCFA  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44339  00DCFE  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44340  00DD02  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44341  00DD06  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44342                           
 44343                           ; BSR set to: 0
 44344  00DD0A  0012               	return	
 44345  00DD0C                     l3570:
 44346                           
 44347                           ; BSR set to: 0
 44348                           
 44349                           ; BSR set to: 0
 44350  00DD0C  5186               	movf	___fldiv@aexp& (0+255),w,b
 44351  00DD0E  6F76               	movwf	??___fldiv& (0+255),b
 44352  00DD10  6B77               	clrf	(??___fldiv+1)& (0+255),b
 44353  00DD12  1F76               	comf	??___fldiv& (0+255),f,b
 44354  00DD14  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 44355  00DD16  4B76               	infsnz	??___fldiv& (0+255),f,b
 44356  00DD18  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 44357  00DD1A  5185               	movf	___fldiv@bexp& (0+255),w,b
 44358  00DD1C  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44359  00DD1E  6B79               	clrf	(??___fldiv+3)& (0+255),b
 44360  00DD20  5176               	movf	??___fldiv& (0+255),w,b
 44361  00DD22  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 44362  00DD24  5177               	movf	(??___fldiv+1)& (0+255),w,b
 44363  00DD26  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 44364  00DD28  0E7F               	movlw	127
 44365  00DD2A  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 44366  00DD2C  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44367  00DD2E  0E00               	movlw	0
 44368  00DD30  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 44369  00DD32  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44370                           
 44371                           ; BSR set to: 0
 44372  00DD34  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 44373  00DD38  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 44374  00DD3C  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 44375  00DD40  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 44376                           
 44377                           ; BSR set to: 0
 44378  00DD44  0E00               	movlw	0
 44379  00DD46  6F6E               	movwf	___fldiv@b& (0+255),b
 44380  00DD48  0E00               	movlw	0
 44381  00DD4A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44382  00DD4C  0E00               	movlw	0
 44383  00DD4E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44384  00DD50  0E00               	movlw	0
 44385  00DD52  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44386                           
 44387                           ; BSR set to: 0
 44388  00DD54  0E00               	movlw	0
 44389  00DD56  6F81               	movwf	___fldiv@grs& (0+255),b
 44390  00DD58  0E00               	movlw	0
 44391  00DD5A  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 44392  00DD5C  0E00               	movlw	0
 44393  00DD5E  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 44394  00DD60  0E00               	movlw	0
 44395  00DD62  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 44396                           
 44397                           ; BSR set to: 0
 44398  00DD64  0E00               	movlw	0
 44399  00DD66  6F86               	movwf	___fldiv@aexp& (0+255),b
 44400  00DD68  D028               	goto	l3571
 44401  00DD6A                     
 44402                           ; BSR set to: 0
 44403                           
 44404                           ; BSR set to: 0
 44405  00DD6A  5186               	movf	___fldiv@aexp& (0+255),w,b
 44406  00DD6C  B4D8               	btfsc	status,2,c
 44407  00DD6E  D011               	goto	l3573
 44408                           
 44409                           ; BSR set to: 0
 44410  00DD70  90D8               	bcf	status,0,c
 44411  00DD72  377A               	rlcf	___fldiv@rem& (0+255),f,b
 44412  00DD74  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 44413  00DD76  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 44414  00DD78  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 44415  00DD7A  90D8               	bcf	status,0,c
 44416  00DD7C  376E               	rlcf	___fldiv@b& (0+255),f,b
 44417  00DD7E  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44418  00DD80  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44419  00DD82  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44420                           
 44421                           ; BSR set to: 0
 44422  00DD84  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44423                           
 44424                           ; BSR set to: 0
 44425  00DD86  816E               	bsf	___fldiv@b& (0+255),0,b
 44426                           
 44427                           ; BSR set to: 0
 44428  00DD88  90D8               	bcf	status,0,c
 44429  00DD8A  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44430  00DD8C  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44431  00DD8E  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44432  00DD90  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44433  00DD92                     l3573:
 44434                           
 44435                           ; BSR set to: 0
 44436                           
 44437                           ; BSR set to: 0
 44438  00DD92  5172               	movf	___fldiv@a& (0+255),w,b
 44439  00DD94  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 44440  00DD96  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44441  00DD98  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 44442  00DD9A  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44443  00DD9C  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 44444  00DD9E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44445  00DDA0  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 44446  00DDA2  A0D8               	btfss	status,0,c
 44447  00DDA4  D009               	goto	l3575
 44448                           
 44449                           ; BSR set to: 0
 44450  00DDA6  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 44451                           
 44452                           ; BSR set to: 0
 44453  00DDA8  5172               	movf	___fldiv@a& (0+255),w,b
 44454  00DDAA  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 44455  00DDAC  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44456  00DDAE  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 44457  00DDB0  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44458  00DDB2  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 44459  00DDB4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44460  00DDB6  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 44461  00DDB8                     l3575:
 44462                           
 44463                           ; BSR set to: 0
 44464                           
 44465                           ; BSR set to: 0
 44466  00DDB8  2B86               	incf	___fldiv@aexp& (0+255),f,b
 44467  00DDBA                     l3571:
 44468                           
 44469                           ; BSR set to: 0
 44470  00DDBA  0E19               	movlw	25
 44471  00DDBC  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 44472  00DDBE  D7D5               	goto	l3572
 44473                           
 44474                           ; BSR set to: 0
 44475                           
 44476                           ; BSR set to: 0
 44477  00DDC0  517A               	movf	___fldiv@rem& (0+255),w,b
 44478  00DDC2  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 44479  00DDC4  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 44480  00DDC6  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 44481  00DDC8  B4D8               	btfsc	status,2,c
 44482  00DDCA  D011               	goto	l3578
 44483                           
 44484                           ; BSR set to: 0
 44485  00DDCC  8181               	bsf	___fldiv@grs& (0+255),0,b
 44486                           
 44487                           ; BSR set to: 0
 44488  00DDCE  D00F               	goto	l3578
 44489  00DDD0                     
 44490                           ; BSR set to: 0
 44491                           
 44492                           ; BSR set to: 0
 44493  00DDD0  90D8               	bcf	status,0,c
 44494  00DDD2  376E               	rlcf	___fldiv@b& (0+255),f,b
 44495  00DDD4  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44496  00DDD6  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44497  00DDD8  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44498                           
 44499                           ; BSR set to: 0
 44500  00DDDA  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44501                           
 44502                           ; BSR set to: 0
 44503  00DDDC  816E               	bsf	___fldiv@b& (0+255),0,b
 44504                           
 44505                           ; BSR set to: 0
 44506  00DDDE  90D8               	bcf	status,0,c
 44507  00DDE0  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44508  00DDE2  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44509  00DDE4  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44510  00DDE6  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44511  00DDE8  077F               	decf	___fldiv@new_exp& (0+255),f,b
 44512  00DDEA  A0D8               	btfss	status,0,c
 44513  00DDEC  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 44514  00DDEE                     l3578:
 44515                           
 44516                           ; BSR set to: 0
 44517                           
 44518                           ; BSR set to: 0
 44519  00DDEE  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 44520  00DDF0  D7EF               	goto	l3579
 44521                           
 44522                           ; BSR set to: 0
 44523                           
 44524                           ; BSR set to: 0
 44525  00DDF2  0E00               	movlw	0
 44526  00DDF4  6F86               	movwf	___fldiv@aexp& (0+255),b
 44527                           
 44528                           ; BSR set to: 0
 44529  00DDF6  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 44530  00DDF8  D016               	goto	l3585
 44531                           
 44532                           ; BSR set to: 0
 44533  00DDFA  0EFF               	movlw	255
 44534  00DDFC  1581               	andwf	___fldiv@grs& (0+255),w,b
 44535  00DDFE  6F76               	movwf	??___fldiv& (0+255),b
 44536  00DE00  0EFF               	movlw	255
 44537  00DE02  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 44538  00DE04  6F77               	movwf	(??___fldiv+1)& (0+255),b
 44539  00DE06  0EFF               	movlw	255
 44540  00DE08  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 44541  00DE0A  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44542  00DE0C  0E7F               	movlw	127
 44543  00DE0E  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 44544  00DE10  6F79               	movwf	(??___fldiv+3)& (0+255),b
 44545  00DE12  5176               	movf	??___fldiv& (0+255),w,b
 44546  00DE14  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 44547  00DE16  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 44548  00DE18  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 44549  00DE1A  A4D8               	btfss	status,2,c
 44550  00DE1C  D002               	goto	u10100
 44551                           
 44552                           ; BSR set to: 0
 44553                           
 44554                           ; BSR set to: 0
 44555  00DE1E  A16E               	btfss	___fldiv@b& (0+255),0,b
 44556  00DE20  D002               	goto	l3585
 44557  00DE22                     u10100:
 44558                           
 44559                           ; BSR set to: 0
 44560  00DE22  0E01               	movlw	1
 44561  00DE24  6F86               	movwf	___fldiv@aexp& (0+255),b
 44562  00DE26                     l3585:
 44563                           
 44564                           ; BSR set to: 0
 44565                           
 44566                           ; BSR set to: 0
 44567                           
 44568                           ; BSR set to: 0
 44569  00DE26  5186               	movf	___fldiv@aexp& (0+255),w,b
 44570  00DE28  B4D8               	btfsc	status,2,c
 44571  00DE2A  D01F               	goto	l3587
 44572                           
 44573                           ; BSR set to: 0
 44574  00DE2C  0E01               	movlw	1
 44575  00DE2E  276E               	addwf	___fldiv@b& (0+255),f,b
 44576  00DE30  0E00               	movlw	0
 44577  00DE32  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 44578  00DE34  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 44579  00DE36  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 44580                           
 44581                           ; BSR set to: 0
 44582  00DE38  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 44583  00DE3A  D017               	goto	l3587
 44584                           
 44585                           ; BSR set to: 0
 44586  00DE3C  C06E  F076         	movff	___fldiv@b,??___fldiv
 44587  00DE40  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 44588  00DE44  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 44589  00DE48  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 44590  00DE4C  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 44591  00DE4E  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 44592  00DE50  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 44593  00DE52  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 44594  00DE54  3376               	rrcf	??___fldiv& (0+255),f,b
 44595  00DE56  C076  F06E         	movff	??___fldiv,___fldiv@b
 44596  00DE5A  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 44597  00DE5E  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 44598  00DE62  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 44599                           
 44600                           ; BSR set to: 0
 44601  00DE66  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 44602  00DE68  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 44603  00DE6A                     l3587:
 44604                           
 44605                           ; BSR set to: 0
 44606                           
 44607                           ; BSR set to: 0
 44608                           
 44609                           ; BSR set to: 0
 44610  00DE6A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 44611  00DE6C  D010               	goto	l3588
 44612  00DE6E  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 44613  00DE70  E103               	bnz	u10130
 44614  00DE72  297F               	incf	___fldiv@new_exp& (0+255),w,b
 44615  00DE74  A0D8               	btfss	status,0,c
 44616  00DE76  D00B               	goto	l3588
 44617  00DE78                     u10130:
 44618                           
 44619                           ; BSR set to: 0
 44620  00DE78  0E00               	movlw	0
 44621  00DE7A  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44622  00DE7C  697F               	setf	___fldiv@new_exp& (0+255),b
 44623  00DE7E  0E00               	movlw	0
 44624  00DE80  6F6E               	movwf	___fldiv@b& (0+255),b
 44625  00DE82  0E00               	movlw	0
 44626  00DE84  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44627  00DE86  0E00               	movlw	0
 44628  00DE88  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44629  00DE8A  0E00               	movlw	0
 44630  00DE8C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44631  00DE8E                     l3588:
 44632                           
 44633                           ; BSR set to: 0
 44634                           
 44635                           ; BSR set to: 0
 44636  00DE8E  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 44637  00DE90  D005               	goto	u10140
 44638  00DE92  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 44639  00DE94  E111               	bnz	l12015
 44640  00DE96  057F               	decf	___fldiv@new_exp& (0+255),w,b
 44641  00DE98  B0D8               	btfsc	status,0,c
 44642  00DE9A  D00E               	goto	l3589
 44643  00DE9C                     u10140:
 44644                           
 44645                           ; BSR set to: 0
 44646  00DE9C  0E00               	movlw	0
 44647  00DE9E  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44648  00DEA0  0E00               	movlw	0
 44649  00DEA2  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44650  00DEA4  0E00               	movlw	0
 44651  00DEA6  6F6E               	movwf	___fldiv@b& (0+255),b
 44652  00DEA8  0E00               	movlw	0
 44653  00DEAA  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44654  00DEAC  0E00               	movlw	0
 44655  00DEAE  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44656  00DEB0  0E00               	movlw	0
 44657  00DEB2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44658  00DEB4  0E00               	movlw	0
 44659  00DEB6  6F7E               	movwf	___fldiv@sign& (0+255),b
 44660  00DEB8                     l3589:
 44661  00DEB8                     l12015:
 44662                           
 44663                           ; BSR set to: 0
 44664  00DEB8  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 44665                           
 44666                           ; BSR set to: 0
 44667  00DEBC  A185               	btfss	___fldiv@bexp& (0+255),0,b
 44668  00DEBE  D002               	goto	l3590
 44669                           
 44670                           ; BSR set to: 0
 44671  00DEC0  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44672  00DEC2  D001               	goto	l3591
 44673  00DEC4                     l3590:
 44674                           
 44675                           ; BSR set to: 0
 44676                           
 44677                           ; BSR set to: 0
 44678  00DEC4  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 44679  00DEC6                     l3591:
 44680                           
 44681                           ; BSR set to: 0
 44682                           
 44683                           ; BSR set to: 0
 44684  00DEC6  90D8               	bcf	status,0,c
 44685  00DEC8  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 44686  00DECA  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44687                           
 44688                           ; BSR set to: 0
 44689  00DECC  517E               	movf	___fldiv@sign& (0+255),w,b
 44690  00DECE  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44691                           
 44692                           ; BSR set to: 0
 44693  00DED0  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44694  00DED4  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44695  00DED8  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44696  00DEDC  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44697  00DEE0  0012               	return	
 44698  00DEE2                     __end_of___fldiv:
 44699                           	opt stack 0
 44700                           tosu	equ	0xFFF
 44701                           tosh	equ	0xFFE
 44702                           tosl	equ	0xFFD
 44703                           pclath	equ	0xFFA
 44704                           tblptru	equ	0xFF8
 44705                           tblptrh	equ	0xFF7
 44706                           tblptrl	equ	0xFF6
 44707                           tablat	equ	0xFF5
 44708                           prodh	equ	0xFF4
 44709                           prodl	equ	0xFF3
 44710                           intcon	equ	0xFF2
 44711                           indf0	equ	0xFEF
 44712                           postinc0	equ	0xFEE
 44713                           fsr0h	equ	0xFEA
 44714                           fsr0l	equ	0xFE9
 44715                           wreg	equ	0xFE8
 44716                           indf1	equ	0xFE7
 44717                           postinc1	equ	0xFE6
 44718                           postdec1	equ	0xFE5
 44719                           plusw1	equ	0xFE3
 44720                           fsr1h	equ	0xFE2
 44721                           fsr1l	equ	0xFE1
 44722                           indf2	equ	0xFDF
 44723                           postinc2	equ	0xFDE
 44724                           postdec2	equ	0xFDD
 44725                           plusw2	equ	0xFDB
 44726                           fsr2h	equ	0xFDA
 44727                           fsr2l	equ	0xFD9
 44728                           status	equ	0xFD8
 44729                           
 44730 ;; *************** function _USBTransferOnePacket *****************
 44731 ;; Defined at:
 44732 ;;		line 995 in file "usb_device.c"
 44733 ;; Parameters:    Size  Location     Type
 44734 ;;  ep              1    wreg     unsigned char 
 44735 ;;  dir             1    0[BANK0 ] unsigned char 
 44736 ;;  data            2    1[BANK0 ] PTR unsigned char 
 44737 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44738 ;;		 -> msd_cbw(31), NULL(0), 
 44739 ;;  len             1    3[BANK0 ] unsigned char 
 44740 ;; Auto vars:     Size  Location     Type
 44741 ;;  ep              1    8[BANK0 ] unsigned char 
 44742 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 44743 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44744 ;; Return value:  Size  Location     Type
 44745 ;;                  2    0[BANK0 ] PTR void 
 44746 ;; Registers used:
 44747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44748 ;; Tracked objects:
 44749 ;;		On entry : 0/0
 44750 ;;		On exit  : 0/0
 44751 ;;		Unchanged: 0/0
 44752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44754 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44755 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44756 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44757 ;;Total ram usage:       11 bytes
 44758 ;; Hardware stack levels used:    1
 44759 ;; Hardware stack levels required when called:   10
 44760 ;; This function calls:
 44761 ;;		Nothing
 44762 ;; This function is called by:
 44763 ;;		_MSDTasks
 44764 ;;		_MSDProcessCommandMediaPresent
 44765 ;;		_MSDReadHandler
 44766 ;;		_MSDWriteHandler
 44767 ;;		_APP_DeviceCustomHIDTasks
 44768 ;; This function uses a non-reentrant model
 44769 ;;
 44770                           
 44771                           	psect	text183
 44772  010E06                     __ptext183:
 44773                           	opt stack 0
 44774  010E06                     _USBTransferOnePacket:
 44775                           	opt stack 18
 44776                           
 44777                           ; BSR set to: 0
 44778                           ;incstack = 0
 44779                           ;USBTransferOnePacket@ep stored from wreg
 44780  010E06  0100               	movlb	0	; () banked
 44781  010E08  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 44782                           
 44783                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 44784  010E0A  0100               	movlb	0	; () banked
 44785  010E0C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44786  010E0E  B4D8               	btfsc	status,2,c
 44787  010E10  D007               	goto	l184
 44788                           
 44789                           ; BSR set to: 0
 44790                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44791  010E12  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44792  010E14  0D02               	mullw	2
 44793  010E16  0E1B               	movlw	low _pBDTEntryIn
 44794  010E18  24F3               	addwf	prodl,w,c
 44795  010E1A  6ED9               	movwf	fsr2l,c
 44796  010E1C  0E01               	movlw	high _pBDTEntryIn
 44797  010E1E  D006               	goto	L71
 44798  010E20                     l184:
 44799                           
 44800                           ; BSR set to: 0
 44801                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 44802                           
 44803                           ; BSR set to: 0
 44804  010E20  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44805  010E22  0D02               	mullw	2
 44806  010E24  0E21               	movlw	low _pBDTEntryOut
 44807  010E26  24F3               	addwf	prodl,w,c
 44808  010E28  6ED9               	movwf	fsr2l,c
 44809  010E2A  0E01               	movlw	high _pBDTEntryOut
 44810  010E2C                     L71:
 44811  010E2C  20F4               	addwfc	prodh,w,c
 44812  010E2E  6EDA               	movwf	fsr2h,c
 44813  010E30  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 44814  010E34  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 44815                           
 44816                           ; BSR set to: 0
 44817                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 44818                           
 44819                           ; BSR set to: 0
 44820  010E38  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44821  010E3A  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44822  010E3C  A4D8               	btfss	status,2,c
 44823  010E3E  D005               	goto	l186
 44824                           
 44825                           ; BSR set to: 0
 44826                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 44827  010E40  0E00               	movlw	0
 44828  010E42  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 44829  010E44  0E00               	movlw	0
 44830  010E46  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 44831                           
 44832                           ; BSR set to: 0
 44833  010E48  0012               	return	
 44834  010E4A                     l186:
 44835                           
 44836                           ; BSR set to: 0
 44837                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44838                           
 44839                           ; BSR set to: 0
 44840  010E4A  EE20 F002          	lfsr	2,2
 44841  010E4E  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44842  010E50  26D9               	addwf	fsr2l,f,c
 44843  010E52  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44844  010E54  22DA               	addwfc	fsr2h,f,c
 44845  010E56  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44846  010E5A  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44847                           
 44848                           ;usb_device.c: 1030: handle->CNT = len;
 44849  010E5E  EE20 F001          	lfsr	2,1
 44850  010E62  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44851  010E64  26D9               	addwf	fsr2l,f,c
 44852  010E66  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44853  010E68  22DA               	addwfc	fsr2h,f,c
 44854  010E6A  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 44855                           
 44856                           ; BSR set to: 0
 44857                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44858  010E6E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44859  010E72  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44860  010E76  0E40               	movlw	64
 44861  010E78  16DF               	andwf	indf2,f,c
 44862                           
 44863                           ; BSR set to: 0
 44864                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44865  010E7A  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44866  010E7E  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44867  010E82  0E00               	movlw	0
 44868  010E84  86DB               	bsf	plusw2,3,c
 44869                           
 44870                           ; BSR set to: 0
 44871                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44872  010E86  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44873  010E8A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44874  010E8E  0E00               	movlw	0
 44875  010E90  8EDB               	bsf	plusw2,7,c
 44876                           
 44877                           ; BSR set to: 0
 44878                           ;usb_device.c: 1036: if(dir != 0)
 44879  010E92  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44880  010E94  B4D8               	btfsc	status,2,c
 44881  010E96  D018               	goto	l188
 44882                           
 44883                           ; BSR set to: 0
 44884                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 44885  010E98  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44886  010E9A  0D02               	mullw	2
 44887  010E9C  0E1B               	movlw	low _pBDTEntryIn
 44888  010E9E  24F3               	addwf	prodl,w,c
 44889  010EA0  6ED9               	movwf	fsr2l,c
 44890  010EA2  0E01               	movlw	high _pBDTEntryIn
 44891  010EA4  20F4               	addwfc	prodh,w,c
 44892  010EA6  6EDA               	movwf	fsr2h,c
 44893  010EA8  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44894  010EAC  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44895  010EB0  0E04               	movlw	4
 44896  010EB2  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44897  010EB4  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44898  010EB6  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44899  010EB8  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44900  010EBA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44901  010EBC  0D02               	mullw	2
 44902  010EBE  0E1B               	movlw	low _pBDTEntryIn
 44903  010EC0  24F3               	addwf	prodl,w,c
 44904  010EC2  6ED9               	movwf	fsr2l,c
 44905  010EC4  0E01               	movlw	high _pBDTEntryIn
 44906  010EC6  D017               	goto	L72
 44907  010EC8                     l188:
 44908                           
 44909                           ; BSR set to: 0
 44910                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 44911                           
 44912                           ; BSR set to: 0
 44913  010EC8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44914  010ECA  0D02               	mullw	2
 44915  010ECC  0E21               	movlw	low _pBDTEntryOut
 44916  010ECE  24F3               	addwf	prodl,w,c
 44917  010ED0  6ED9               	movwf	fsr2l,c
 44918  010ED2  0E01               	movlw	high _pBDTEntryOut
 44919  010ED4  20F4               	addwfc	prodh,w,c
 44920  010ED6  6EDA               	movwf	fsr2h,c
 44921  010ED8  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44922  010EDC  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44923  010EE0  0E04               	movlw	4
 44924  010EE2  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44925  010EE4  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44926  010EE6  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44927  010EE8  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44928  010EEA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44929  010EEC  0D02               	mullw	2
 44930  010EEE  0E21               	movlw	low _pBDTEntryOut
 44931  010EF0  24F3               	addwf	prodl,w,c
 44932  010EF2  6ED9               	movwf	fsr2l,c
 44933  010EF4  0E01               	movlw	high _pBDTEntryOut
 44934  010EF6                     L72:
 44935  010EF6  20F4               	addwfc	prodh,w,c
 44936  010EF8  6EDA               	movwf	fsr2h,c
 44937  010EFA  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44938  010EFE  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44939                           
 44940                           ; BSR set to: 0
 44941                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 44942                           
 44943                           ; BSR set to: 0
 44944  010F02  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44945  010F06  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44946  010F0A  0012               	return	
 44947  010F0C                     __end_of_USBTransferOnePacket:
 44948                           	opt stack 0
 44949                           tosu	equ	0xFFF
 44950                           tosh	equ	0xFFE
 44951                           tosl	equ	0xFFD
 44952                           pclath	equ	0xFFA
 44953                           tblptru	equ	0xFF8
 44954                           tblptrh	equ	0xFF7
 44955                           tblptrl	equ	0xFF6
 44956                           tablat	equ	0xFF5
 44957                           prodh	equ	0xFF4
 44958                           prodl	equ	0xFF3
 44959                           intcon	equ	0xFF2
 44960                           indf0	equ	0xFEF
 44961                           postinc0	equ	0xFEE
 44962                           fsr0h	equ	0xFEA
 44963                           fsr0l	equ	0xFE9
 44964                           wreg	equ	0xFE8
 44965                           indf1	equ	0xFE7
 44966                           postinc1	equ	0xFE6
 44967                           postdec1	equ	0xFE5
 44968                           plusw1	equ	0xFE3
 44969                           fsr1h	equ	0xFE2
 44970                           fsr1l	equ	0xFE1
 44971                           indf2	equ	0xFDF
 44972                           postinc2	equ	0xFDE
 44973                           postdec2	equ	0xFDD
 44974                           plusw2	equ	0xFDB
 44975                           fsr2h	equ	0xFDA
 44976                           fsr2l	equ	0xFD9
 44977                           status	equ	0xFD8
 44978                           
 44979 ;; *************** function _SYS_InterruptHigh *****************
 44980 ;; Defined at:
 44981 ;;		line 162 in file "system.c"
 44982 ;; Parameters:    Size  Location     Type
 44983 ;;		None
 44984 ;; Auto vars:     Size  Location     Type
 44985 ;;		None
 44986 ;; Return value:  Size  Location     Type
 44987 ;;                  1    wreg      void 
 44988 ;; Registers used:
 44989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44990 ;; Tracked objects:
 44991 ;;		On entry : 0/0
 44992 ;;		On exit  : 0/0
 44993 ;;		Unchanged: 0/0
 44994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44997 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44998 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44999 ;;Total ram usage:       14 bytes
 45000 ;; Hardware stack levels used:    1
 45001 ;; Hardware stack levels required when called:    9
 45002 ;; This function calls:
 45003 ;;		_USBDeviceTasks
 45004 ;;		_motor_isr
 45005 ;;		_tmr0_isr
 45006 ;; This function is called by:
 45007 ;;		Interrupt level 2
 45008 ;; This function uses a non-reentrant model
 45009 ;;
 45010                           
 45011                           	psect	intcode
 45012  009008                     __pintcode:
 45013                           	opt stack 0
 45014  009008                     _SYS_InterruptHigh:
 45015                           	opt stack 9
 45016                           
 45017                           ; BSR set to: 0
 45018                           ;incstack = 0
 45019  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45020  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 45021  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 45022  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 45023  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 45024  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 45025  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 45026  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 45027  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 45028  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 45029  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 45030  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 45031  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 45032  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 45033  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 45034                           
 45035                           ;system.c: 165: USBDeviceTasks();
 45036  009042  EC5D  F07E         	call	_USBDeviceTasks	;wreg free
 45037                           
 45038                           ;system.c: 169: if(PIR1bits.TMR2IF)
 45039  009046  B29E               	btfsc	3998,1,c	;volatile
 45040                           
 45041                           ;system.c: 170: {;system.c: 171: motor_isr();
 45042  009048  EC08  F05C         	call	_motor_isr	;wreg free
 45043                           
 45044                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 45045  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 45046                           
 45047                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 45048  00904E  EC68  F0A8         	call	_tmr0_isr	;wreg free
 45049  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45050  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45051  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45052  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45053  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45054  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45055  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45056  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45057  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45058  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45059  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45060  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45061  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45062  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45063  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45064  00908C  0011               	retfie		f
 45065  00908E                     __end_of_SYS_InterruptHigh:
 45066                           	opt stack 0
 45067                           tosu	equ	0xFFF
 45068                           tosh	equ	0xFFE
 45069                           tosl	equ	0xFFD
 45070                           pclatu	equ	0xFFB
 45071                           pclath	equ	0xFFA
 45072                           tblptru	equ	0xFF8
 45073                           tblptrh	equ	0xFF7
 45074                           tblptrl	equ	0xFF6
 45075                           tablat	equ	0xFF5
 45076                           prodh	equ	0xFF4
 45077                           prodl	equ	0xFF3
 45078                           intcon	equ	0xFF2
 45079                           indf0	equ	0xFEF
 45080                           postinc0	equ	0xFEE
 45081                           fsr0h	equ	0xFEA
 45082                           fsr0l	equ	0xFE9
 45083                           wreg	equ	0xFE8
 45084                           indf1	equ	0xFE7
 45085                           postinc1	equ	0xFE6
 45086                           postdec1	equ	0xFE5
 45087                           plusw1	equ	0xFE3
 45088                           fsr1h	equ	0xFE2
 45089                           fsr1l	equ	0xFE1
 45090                           indf2	equ	0xFDF
 45091                           postinc2	equ	0xFDE
 45092                           postdec2	equ	0xFDD
 45093                           plusw2	equ	0xFDB
 45094                           fsr2h	equ	0xFDA
 45095                           fsr2l	equ	0xFD9
 45096                           status	equ	0xFD8
 45097                           
 45098 ;; *************** function _tmr0_isr *****************
 45099 ;; Defined at:
 45100 ;;		line 24 in file "os.c"
 45101 ;; Parameters:    Size  Location     Type
 45102 ;;		None
 45103 ;; Auto vars:     Size  Location     Type
 45104 ;;		None
 45105 ;; Return value:  Size  Location     Type
 45106 ;;                  1    wreg      void 
 45107 ;; Registers used:
 45108 ;;		wreg, status,2, status,0, cstack
 45109 ;; Tracked objects:
 45110 ;;		On entry : 0/0
 45111 ;;		On exit  : 0/0
 45112 ;;		Unchanged: 0/0
 45113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45118 ;;Total ram usage:        0 bytes
 45119 ;; Hardware stack levels used:    1
 45120 ;; Hardware stack levels required when called:    1
 45121 ;; This function calls:
 45122 ;;		_encoder_run
 45123 ;; This function is called by:
 45124 ;;		_SYS_InterruptHigh
 45125 ;; This function uses a non-reentrant model
 45126 ;;
 45127                           
 45128                           	psect	text185
 45129  0150D0                     __ptext185:
 45130                           	opt stack 0
 45131  0150D0                     _tmr0_isr:
 45132                           	opt stack 16
 45133                           
 45134                           ;os.c: 27: if(INTCONbits.T0IF)
 45135                           
 45136                           ;incstack = 0
 45137  0150D0  A4F2               	btfss	intcon,2,c	;volatile
 45138  0150D2  0012               	return	
 45139                           
 45140                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 45141  0150D4  0EFA               	movlw	250
 45142  0150D6  6ED7               	movwf	4055,c	;volatile
 45143                           
 45144                           ;os.c: 31: TMR0L = 0x24;
 45145  0150D8  0E24               	movlw	36
 45146  0150DA  6ED6               	movwf	4054,c	;volatile
 45147                           
 45148                           ;os.c: 34: INTCONbits.T0IF = 0;
 45149  0150DC  94F2               	bcf	intcon,2,c	;volatile
 45150                           
 45151                           ;os.c: 37: encoder_run();
 45152  0150DE  EC7A  F08B         	call	_encoder_run	;wreg free
 45153                           
 45154                           ;os.c: 40: ++os.subTimeSlot;
 45155  0150E2  0101               	movlb	1	; () banked
 45156  0150E4  2B71               	incf	_os& (0+255),f,b	;volatile
 45157                           
 45158                           ; BSR set to: 1
 45159                           ;os.c: 41: if(os.subTimeSlot>=10)
 45160  0150E6  0E09               	movlw	9
 45161  0150E8  6571               	cpfsgt	_os& (0+255),b	;volatile
 45162  0150EA  0012               	return	
 45163                           
 45164                           ; BSR set to: 1
 45165                           ;os.c: 42: {;os.c: 43: if(os.done)
 45166  0150EC  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 45167  0150EE  B4D8               	btfsc	status,2,c
 45168  0150F0  0012               	return	
 45169                           
 45170                           ; BSR set to: 1
 45171                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 45172  0150F2  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 45173                           
 45174                           ; BSR set to: 1
 45175                           ;os.c: 46: if(os.timeSlot==16)
 45176  0150F4  0E10               	movlw	16
 45177  0150F6  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 45178  0150F8  A4D8               	btfss	status,2,c
 45179  0150FA  D002               	goto	i2l1066
 45180                           
 45181                           ; BSR set to: 1
 45182                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 45183  0150FC  0E00               	movlw	0
 45184  0150FE  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 45185  015100                     i2l1066:
 45186                           
 45187                           ; BSR set to: 1
 45188                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 45189  015100  0E00               	movlw	0
 45190  015102  6F71               	movwf	_os& (0+255),b	;volatile
 45191                           
 45192                           ;os.c: 51: os.done = 0;
 45193  015104  0E00               	movlw	0
 45194  015106  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 45195                           
 45196                           ; BSR set to: 1
 45197                           
 45198                           ; BSR set to: 1
 45199  015108  0012               	return	
 45200  01510A                     __end_of_tmr0_isr:
 45201                           	opt stack 0
 45202                           tosu	equ	0xFFF
 45203                           tosh	equ	0xFFE
 45204                           tosl	equ	0xFFD
 45205                           pclatu	equ	0xFFB
 45206                           pclath	equ	0xFFA
 45207                           tblptru	equ	0xFF8
 45208                           tblptrh	equ	0xFF7
 45209                           tblptrl	equ	0xFF6
 45210                           tablat	equ	0xFF5
 45211                           prodh	equ	0xFF4
 45212                           prodl	equ	0xFF3
 45213                           intcon	equ	0xFF2
 45214                           indf0	equ	0xFEF
 45215                           postinc0	equ	0xFEE
 45216                           fsr0h	equ	0xFEA
 45217                           fsr0l	equ	0xFE9
 45218                           wreg	equ	0xFE8
 45219                           indf1	equ	0xFE7
 45220                           postinc1	equ	0xFE6
 45221                           postdec1	equ	0xFE5
 45222                           plusw1	equ	0xFE3
 45223                           fsr1h	equ	0xFE2
 45224                           fsr1l	equ	0xFE1
 45225                           indf2	equ	0xFDF
 45226                           postinc2	equ	0xFDE
 45227                           postdec2	equ	0xFDD
 45228                           plusw2	equ	0xFDB
 45229                           fsr2h	equ	0xFDA
 45230                           fsr2l	equ	0xFD9
 45231                           status	equ	0xFD8
 45232                           
 45233 ;; *************** function _encoder_run *****************
 45234 ;; Defined at:
 45235 ;;		line 103 in file "encoder.c"
 45236 ;; Parameters:    Size  Location     Type
 45237 ;;		None
 45238 ;; Auto vars:     Size  Location     Type
 45239 ;;		None
 45240 ;; Return value:  Size  Location     Type
 45241 ;;                  1    wreg      void 
 45242 ;; Registers used:
 45243 ;;		wreg, status,2, status,0
 45244 ;; Tracked objects:
 45245 ;;		On entry : 0/0
 45246 ;;		On exit  : 0/0
 45247 ;;		Unchanged: 0/0
 45248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45253 ;;Total ram usage:        0 bytes
 45254 ;; Hardware stack levels used:    1
 45255 ;; This function calls:
 45256 ;;		Nothing
 45257 ;; This function is called by:
 45258 ;;		_tmr0_isr
 45259 ;; This function uses a non-reentrant model
 45260 ;;
 45261                           
 45262                           	psect	text186
 45263  0116F4                     __ptext186:
 45264                           	opt stack 0
 45265  0116F4                     _encoder_run:
 45266                           	opt stack 16
 45267                           
 45268                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 45269                           
 45270                           ;incstack = 0
 45271  0116F4  5084               	movf	3972,w,c	;volatile
 45272  0116F6  0B07               	andlw	7
 45273  0116F8  0101               	movlb	1	; () banked
 45274  0116FA  1954               	xorwf	_enc1& (0+255),w,b
 45275  0116FC  B4D8               	btfsc	status,2,c
 45276  0116FE  D033               	goto	i2l2672
 45277                           
 45278                           ; BSR set to: 1
 45279                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 45280  011700  B084               	btfsc	3972,0,c	;volatile
 45281                           
 45282                           ; BSR set to: 1
 45283  011702  A484               	btfss	3972,2,c	;volatile
 45284  011704  D00D               	goto	i2l2675
 45285                           
 45286                           ; BSR set to: 1
 45287  011706  B154               	btfsc	_enc1& (0+255),0,b
 45288  011708  D00B               	goto	i2l2675
 45289                           
 45290                           ; BSR set to: 1
 45291                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 45292  01170A  0E7F               	movlw	127
 45293  01170C  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 45294  01170E  B4D8               	btfsc	status,2,c
 45295  011710  D007               	goto	i2l2675
 45296                           
 45297                           ; BSR set to: 1
 45298                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 45299  011712  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 45300                           
 45301                           ; BSR set to: 1
 45302                           ;encoder.c: 113: if(config.beep_duration)
 45303  011714  51B6               	movf	(_config+21)& (0+255),w,b
 45304  011716  B4D8               	btfsc	status,2,c
 45305  011718  D003               	goto	i2l2675
 45306                           
 45307                           ; BSR set to: 1
 45308                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 45309  01171A  8E8B               	bsf	3979,7,c	;volatile
 45310                           
 45311                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 45312  01171C  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45313  011720                     i2l2675:
 45314                           
 45315                           ; BSR set to: 1
 45316                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 45317                           
 45318                           ; BSR set to: 1
 45319                           
 45320                           ; BSR set to: 1
 45321  011720  B484               	btfsc	3972,2,c	;volatile
 45322                           
 45323                           ; BSR set to: 1
 45324  011722  A084               	btfss	3972,0,c	;volatile
 45325  011724  D00E               	goto	i2l2678
 45326                           
 45327                           ; BSR set to: 1
 45328  011726  B554               	btfsc	_enc1& (0+255),2,b
 45329  011728  D00C               	goto	i2l2678
 45330                           
 45331                           ; BSR set to: 1
 45332                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 45333  01172A  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 45334  01172C  0A80               	xorlw	128
 45335  01172E  0FFF               	addlw	255
 45336  011730  A0D8               	btfss	status,0,c
 45337  011732  D007               	goto	i2l2678
 45338                           
 45339                           ; BSR set to: 1
 45340                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 45341  011734  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 45342                           
 45343                           ; BSR set to: 1
 45344                           ;encoder.c: 126: if(config.beep_duration)
 45345  011736  51B6               	movf	(_config+21)& (0+255),w,b
 45346  011738  B4D8               	btfsc	status,2,c
 45347  01173A  D003               	goto	i2l2678
 45348                           
 45349                           ; BSR set to: 1
 45350                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 45351  01173C  8E8B               	bsf	3979,7,c	;volatile
 45352                           
 45353                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 45354  01173E  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45355  011742                     i2l2678:
 45356                           
 45357                           ; BSR set to: 1
 45358                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 45359                           
 45360                           ; BSR set to: 1
 45361                           
 45362                           ; BSR set to: 1
 45363  011742  B284               	btfsc	3972,1,c	;volatile
 45364                           
 45365                           ; BSR set to: 1
 45366  011744  B354               	btfsc	_enc1& (0+255),1,b
 45367  011746  D008               	goto	i2l2680
 45368                           
 45369                           ; BSR set to: 1
 45370                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 45371  011748  0E01               	movlw	1
 45372  01174A  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 45373                           
 45374                           ;encoder.c: 137: if(config.beep_duration)
 45375  01174C  51B6               	movf	(_config+21)& (0+255),w,b
 45376  01174E  B4D8               	btfsc	status,2,c
 45377  011750  D003               	goto	i2l2680
 45378                           
 45379                           ; BSR set to: 1
 45380                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 45381  011752  8E8B               	bsf	3979,7,c	;volatile
 45382                           
 45383                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 45384  011754  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45385  011758                     i2l2680:
 45386                           
 45387                           ; BSR set to: 1
 45388                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 45389                           
 45390                           ; BSR set to: 1
 45391  011758  A284               	btfss	3972,1,c	;volatile
 45392                           
 45393                           ; BSR set to: 1
 45394  01175A  A354               	btfss	_enc1& (0+255),1,b
 45395  01175C  D001               	goto	i2l2681
 45396                           
 45397                           ; BSR set to: 1
 45398                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 45399  01175E  6975               	setf	(_os+4)& (0+255),b	;volatile
 45400  011760                     i2l2681:
 45401                           
 45402                           ; BSR set to: 1
 45403                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 45404                           
 45405                           ; BSR set to: 1
 45406  011760  5084               	movf	3972,w,c	;volatile
 45407  011762  0B07               	andlw	7
 45408  011764  6F54               	movwf	_enc1& (0+255),b
 45409  011766                     i2l2672:
 45410                           
 45411                           ; BSR set to: 1
 45412                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 45413  011766  5080               	movf	3968,w,c	;volatile
 45414  011768  0B07               	andlw	7
 45415  01176A  1953               	xorwf	_enc2& (0+255),w,b
 45416  01176C  B4D8               	btfsc	status,2,c
 45417  01176E  D033               	goto	i2l2682
 45418                           
 45419                           ; BSR set to: 1
 45420                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 45421  011770  B480               	btfsc	3968,2,c	;volatile
 45422                           
 45423                           ; BSR set to: 1
 45424  011772  A080               	btfss	3968,0,c	;volatile
 45425  011774  D00D               	goto	i2l2685
 45426                           
 45427                           ; BSR set to: 1
 45428  011776  B553               	btfsc	_enc2& (0+255),2,b
 45429  011778  D00B               	goto	i2l2685
 45430                           
 45431                           ; BSR set to: 1
 45432                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 45433  01177A  0E7F               	movlw	127
 45434  01177C  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 45435  01177E  B4D8               	btfsc	status,2,c
 45436  011780  D007               	goto	i2l2685
 45437                           
 45438                           ; BSR set to: 1
 45439                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 45440  011782  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 45441                           
 45442                           ; BSR set to: 1
 45443                           ;encoder.c: 160: if(config.beep_duration)
 45444  011784  51B6               	movf	(_config+21)& (0+255),w,b
 45445  011786  B4D8               	btfsc	status,2,c
 45446  011788  D003               	goto	i2l2685
 45447                           
 45448                           ; BSR set to: 1
 45449                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 45450  01178A  8E8B               	bsf	3979,7,c	;volatile
 45451                           
 45452                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 45453  01178C  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45454  011790                     i2l2685:
 45455                           
 45456                           ; BSR set to: 1
 45457                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 45458                           
 45459                           ; BSR set to: 1
 45460                           
 45461                           ; BSR set to: 1
 45462  011790  B080               	btfsc	3968,0,c	;volatile
 45463                           
 45464                           ; BSR set to: 1
 45465  011792  A480               	btfss	3968,2,c	;volatile
 45466  011794  D00E               	goto	i2l2688
 45467                           
 45468                           ; BSR set to: 1
 45469  011796  B153               	btfsc	_enc2& (0+255),0,b
 45470  011798  D00C               	goto	i2l2688
 45471                           
 45472                           ; BSR set to: 1
 45473                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 45474  01179A  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 45475  01179C  0A80               	xorlw	128
 45476  01179E  0FFF               	addlw	255
 45477  0117A0  A0D8               	btfss	status,0,c
 45478  0117A2  D007               	goto	i2l2688
 45479                           
 45480                           ; BSR set to: 1
 45481                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 45482  0117A4  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 45483                           
 45484                           ; BSR set to: 1
 45485                           ;encoder.c: 173: if(config.beep_duration)
 45486  0117A6  51B6               	movf	(_config+21)& (0+255),w,b
 45487  0117A8  B4D8               	btfsc	status,2,c
 45488  0117AA  D003               	goto	i2l2688
 45489                           
 45490                           ; BSR set to: 1
 45491                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 45492  0117AC  8E8B               	bsf	3979,7,c	;volatile
 45493                           
 45494                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 45495  0117AE  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45496  0117B2                     i2l2688:
 45497                           
 45498                           ; BSR set to: 1
 45499                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 45500                           
 45501                           ; BSR set to: 1
 45502                           
 45503                           ; BSR set to: 1
 45504  0117B2  B280               	btfsc	3968,1,c	;volatile
 45505                           
 45506                           ; BSR set to: 1
 45507  0117B4  B353               	btfsc	_enc2& (0+255),1,b
 45508  0117B6  D008               	goto	i2l2690
 45509                           
 45510                           ; BSR set to: 1
 45511                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 45512  0117B8  0E01               	movlw	1
 45513  0117BA  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 45514                           
 45515                           ;encoder.c: 184: if(config.beep_duration)
 45516  0117BC  51B6               	movf	(_config+21)& (0+255),w,b
 45517  0117BE  B4D8               	btfsc	status,2,c
 45518  0117C0  D003               	goto	i2l2690
 45519                           
 45520                           ; BSR set to: 1
 45521                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 45522  0117C2  8E8B               	bsf	3979,7,c	;volatile
 45523                           
 45524                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 45525  0117C4  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45526  0117C8                     i2l2690:
 45527                           
 45528                           ; BSR set to: 1
 45529                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 45530                           
 45531                           ; BSR set to: 1
 45532  0117C8  A280               	btfss	3968,1,c	;volatile
 45533                           
 45534                           ; BSR set to: 1
 45535  0117CA  A353               	btfss	_enc2& (0+255),1,b
 45536  0117CC  D001               	goto	i2l2691
 45537                           
 45538                           ; BSR set to: 1
 45539                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 45540  0117CE  6977               	setf	(_os+6)& (0+255),b	;volatile
 45541  0117D0                     i2l2691:
 45542                           
 45543                           ; BSR set to: 1
 45544                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 45545                           
 45546                           ; BSR set to: 1
 45547  0117D0  5080               	movf	3968,w,c	;volatile
 45548  0117D2  0B07               	andlw	7
 45549  0117D4  6F53               	movwf	_enc2& (0+255),b
 45550  0117D6                     i2l2682:
 45551                           
 45552                           ; BSR set to: 1
 45553                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 45554                           
 45555                           ; BSR set to: 1
 45556  0117D6  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45557  0117D8  B4D8               	btfsc	status,2,c
 45558  0117DA  0012               	return	
 45559                           
 45560                           ; BSR set to: 1
 45561                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 45562  0117DC  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 45563                           
 45564                           ; BSR set to: 1
 45565                           ;encoder.c: 203: if(!os.beep_count)
 45566  0117DE  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45567  0117E0  A4D8               	btfss	status,2,c
 45568  0117E2  0012               	return	
 45569                           
 45570                           ; BSR set to: 1
 45571                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 45572  0117E4  9E8B               	bcf	3979,7,c	;volatile
 45573                           
 45574                           ; BSR set to: 1
 45575  0117E6  0012               	return	
 45576  0117E8                     __end_of_encoder_run:
 45577                           	opt stack 0
 45578                           tosu	equ	0xFFF
 45579                           tosh	equ	0xFFE
 45580                           tosl	equ	0xFFD
 45581                           pclatu	equ	0xFFB
 45582                           pclath	equ	0xFFA
 45583                           tblptru	equ	0xFF8
 45584                           tblptrh	equ	0xFF7
 45585                           tblptrl	equ	0xFF6
 45586                           tablat	equ	0xFF5
 45587                           prodh	equ	0xFF4
 45588                           prodl	equ	0xFF3
 45589                           intcon	equ	0xFF2
 45590                           indf0	equ	0xFEF
 45591                           postinc0	equ	0xFEE
 45592                           fsr0h	equ	0xFEA
 45593                           fsr0l	equ	0xFE9
 45594                           wreg	equ	0xFE8
 45595                           indf1	equ	0xFE7
 45596                           postinc1	equ	0xFE6
 45597                           postdec1	equ	0xFE5
 45598                           plusw1	equ	0xFE3
 45599                           fsr1h	equ	0xFE2
 45600                           fsr1l	equ	0xFE1
 45601                           indf2	equ	0xFDF
 45602                           postinc2	equ	0xFDE
 45603                           postdec2	equ	0xFDD
 45604                           plusw2	equ	0xFDB
 45605                           fsr2h	equ	0xFDA
 45606                           fsr2l	equ	0xFD9
 45607                           status	equ	0xFD8
 45608                           
 45609 ;; *************** function _motor_isr *****************
 45610 ;; Defined at:
 45611 ;;		line 371 in file "motor.c"
 45612 ;; Parameters:    Size  Location     Type
 45613 ;;		None
 45614 ;; Auto vars:     Size  Location     Type
 45615 ;;  steps_remain    4   63[COMRAM] unsigned long 
 45616 ;;  steps_until_    2   61[COMRAM] unsigned int 
 45617 ;;  steps_until_    2   59[COMRAM] unsigned int 
 45618 ;; Return value:  Size  Location     Type
 45619 ;;                  1    wreg      void 
 45620 ;; Registers used:
 45621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45622 ;; Tracked objects:
 45623 ;;		On entry : 0/0
 45624 ;;		On exit  : 0/0
 45625 ;;		Unchanged: 0/0
 45626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45628 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45629 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45630 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45631 ;;Total ram usage:       24 bytes
 45632 ;; Hardware stack levels used:    1
 45633 ;; Hardware stack levels required when called:    4
 45634 ;; This function calls:
 45635 ;;		_i2c_eeprom_writeUint32
 45636 ;; This function is called by:
 45637 ;;		_SYS_InterruptHigh
 45638 ;; This function uses a non-reentrant model
 45639 ;;
 45640                           
 45641                           	psect	text187
 45642  00B810                     __ptext187:
 45643                           	opt stack 0
 45644  00B810                     _motor_isr:
 45645                           	opt stack 13
 45646                           
 45647                           ;motor.c: 373: uint32_t steps_remaining;;motor.c: 374: uint16_t steps_until_standstill;;
      +                          motor.c: 375: uint16_t steps_until_standstill_if_accelerate;;motor.c: 378: PIR1bits.TMR2
      +                          IF = 0;
 45648                           
 45649                           ; BSR set to: 1
 45650                           ;incstack = 0
 45651  00B810  929E               	bcf	3998,1,c	;volatile
 45652                           
 45653                           ;motor.c: 380: if(motor_mode==MOTOR_MODE_MANUAL)
 45654  00B812  0101               	movlb	1	; () banked
 45655  00B814  5156               	movf	_motor_mode& (0+255),w,b
 45656  00B816  A4D8               	btfss	status,2,c
 45657  00B818  D026               	goto	i2l2497
 45658                           
 45659                           ; BSR set to: 1
 45660                           ;motor.c: 381: {;motor.c: 383: if(LATBbits.LB1)
 45661  00B81A  A28A               	btfss	3978,1,c	;volatile
 45662  00B81C  D023               	goto	i2l2494
 45663                           
 45664                           ; BSR set to: 1
 45665                           ;motor.c: 384: {;motor.c: 386: LATBbits.LB1 = 0;
 45666  00B81E  928A               	bcf	3978,1,c	;volatile
 45667                           
 45668                           ; BSR set to: 1
 45669                           ;motor.c: 389: if(motor_current_stepcount==motor_final_stepcount)
 45670  00B820  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 45671  00B822  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 45672  00B824  E109               	bnz	i2u1852_41
 45673  00B826  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 45674  00B828  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 45675  00B82A  E106               	bnz	i2u1852_41
 45676  00B82C  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 45677  00B82E  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 45678  00B830  E103               	bnz	i2u1852_41
 45679  00B832  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 45680  00B834  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 45681  00B836  A4D8               	btfss	status,2,c
 45682  00B838                     i2u1852_41:
 45683  00B838  0012               	return	
 45684                           
 45685                           ; BSR set to: 1
 45686                           ;motor.c: 390: {;motor.c: 393: T2CONbits.TMR2ON = 0;
 45687  00B83A  94CA               	bcf	4042,2,c	;volatile
 45688                           
 45689                           ;motor.c: 395: PIR1bits.TMR2IF = 0;
 45690  00B83C  929E               	bcf	3998,1,c	;volatile
 45691                           
 45692                           ;motor.c: 396: PIE1bits.TMR2IE = 0;
 45693  00B83E  929D               	bcf	3997,1,c	;volatile
 45694                           
 45695                           ; BSR set to: 1
 45696                           ;motor.c: 398: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 45697  00B840  0E02               	movlw	2
 45698  00B842  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 45699  00B844  0E00               	movlw	0
 45700  00B846  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 45701  00B848  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 45702  00B84C  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 45703  00B850  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 45704  00B854  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 45705  00B858  ECC8  F0AB         	call	_i2c_eeprom_writeUint32	;wreg free
 45706                           
 45707                           ;motor.c: 400: os.busy = 0;
 45708  00B85C  0E00               	movlw	0
 45709  00B85E  0101               	movlb	1	; () banked
 45710  00B860  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 45711                           
 45712                           ; BSR set to: 1
 45713                           ;motor.c: 401: };motor.c: 404: return;
 45714                           
 45715                           ; BSR set to: 1
 45716  00B862  0012               	return	
 45717  00B864                     i2l2494:
 45718                           
 45719                           ; BSR set to: 1
 45720                           ;motor.c: 406: else;motor.c: 407: {;motor.c: 409: LATBbits.LB1 = 1;
 45721  00B864  828A               	bsf	3978,1,c	;volatile
 45722  00B866                     i2l2497:
 45723                           
 45724                           ; BSR set to: 1
 45725                           ;motor.c: 410: };motor.c: 411: };motor.c: 413: ++motor_current_stepcount;
 45726                           
 45727                           ; BSR set to: 1
 45728                           
 45729                           ; BSR set to: 1
 45730  00B866  0E01               	movlw	1
 45731  00B868  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 45732  00B86A  0E00               	movlw	0
 45733  00B86C  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 45734  00B86E  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 45735  00B870  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 45736                           
 45737                           ;motor.c: 416: os.current_position_in_steps += motor_direction;
 45738  00B872  5155               	movf	_motor_direction& (0+255),w,b
 45739  00B874  6E2C               	movwf	??_motor_isr& (0+255),c
 45740  00B876  0E00               	movlw	0
 45741  00B878  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 45742  00B87A  0EFF               	movlw	255
 45743  00B87C  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45744  00B87E  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 45745  00B880  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 45746  00B882  502C               	movf	??_motor_isr,w,c
 45747  00B884  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 45748  00B886  502D               	movf	??_motor_isr+1,w,c
 45749  00B888  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 45750  00B88A  502E               	movf	??_motor_isr+2,w,c
 45751  00B88C  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 45752  00B88E  502F               	movf	??_motor_isr+3,w,c
 45753  00B890  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 45754                           
 45755                           ;motor.c: 417: if(os.current_position_in_steps==config.full_circle_in_steps)
 45756  00B892  51A1               	movf	_config& (0+255),w,b
 45757  00B894  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 45758  00B896  E112               	bnz	i2l18379
 45759  00B898  51A2               	movf	(_config+1)& (0+255),w,b
 45760  00B89A  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 45761  00B89C  E10F               	bnz	i2l18379
 45762  00B89E  51A3               	movf	(_config+2)& (0+255),w,b
 45763  00B8A0  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 45764  00B8A2  E10C               	bnz	i2l18379
 45765  00B8A4  51A4               	movf	(_config+3)& (0+255),w,b
 45766  00B8A6  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 45767  00B8A8  A4D8               	btfss	status,2,c
 45768  00B8AA  D008               	goto	i2l2498
 45769                           
 45770                           ; BSR set to: 1
 45771                           ;motor.c: 418: os.current_position_in_steps = 0;
 45772  00B8AC  0E00               	movlw	0
 45773  00B8AE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 45774  00B8B0  0E00               	movlw	0
 45775  00B8B2  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 45776  00B8B4  0E00               	movlw	0
 45777  00B8B6  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 45778  00B8B8  0E00               	movlw	0
 45779  00B8BA  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 45780  00B8BC                     i2l2498:
 45781  00B8BC                     i2l18379:
 45782                           
 45783                           ; BSR set to: 1
 45784                           ;motor.c: 419: if(os.current_position_in_steps==0xFFFFFFFF)
 45785  00B8BC  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 45786  00B8BE  E113               	bnz	i2l2499
 45787  00B8C0  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 45788  00B8C2  E111               	bnz	i2l2499
 45789  00B8C4  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 45790  00B8C6  E10F               	bnz	i2l2499
 45791  00B8C8  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 45792  00B8CA  A4D8               	btfss	status,2,c
 45793  00B8CC  D00C               	goto	i2l2499
 45794                           
 45795                           ; BSR set to: 1
 45796                           ;motor.c: 420: os.current_position_in_steps = (config.full_circle_in_steps-1);
 45797  00B8CE  0EFF               	movlw	255
 45798  00B8D0  25A1               	addwf	_config& (0+255),w,b
 45799  00B8D2  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 45800  00B8D4  0EFF               	movlw	255
 45801  00B8D6  21A2               	addwfc	(_config+1)& (0+255),w,b
 45802  00B8D8  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 45803  00B8DA  0EFF               	movlw	255
 45804  00B8DC  21A3               	addwfc	(_config+2)& (0+255),w,b
 45805  00B8DE  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 45806  00B8E0  0EFF               	movlw	255
 45807  00B8E2  21A4               	addwfc	(_config+3)& (0+255),w,b
 45808  00B8E4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 45809  00B8E6                     i2l2499:
 45810                           
 45811                           ; BSR set to: 1
 45812                           ;motor.c: 423: if(motor_current_stepcount==motor_next_speed_check)
 45813  00B8E6  0102               	movlb	2	; () banked
 45814  00B8E8  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 45815  00B8EA  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 45816  00B8EC  E109               	bnz	i2u1855_41
 45817  00B8EE  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 45818  00B8F0  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 45819  00B8F2  E106               	bnz	i2u1855_41
 45820  00B8F4  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 45821  00B8F6  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 45822  00B8F8  E103               	bnz	i2u1855_41
 45823  00B8FA  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 45824  00B8FC  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 45825  00B8FE  A4D8               	btfss	status,2,c
 45826  00B900                     i2u1855_41:
 45827  00B900  D217               	goto	i2l2512
 45828                           
 45829                           ; BSR set to: 2
 45830                           ;motor.c: 424: {;motor.c: 426: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 45831  00B902  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 45832  00B906  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 45833  00B90A  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 45834  00B90E  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 45835  00B912  1E2C               	comf	??_motor_isr,f,c
 45836  00B914  1E2D               	comf	??_motor_isr+1,f,c
 45837  00B916  1E2E               	comf	??_motor_isr+2,f,c
 45838  00B918  1E2F               	comf	??_motor_isr+3,f,c
 45839  00B91A  2A2C               	incf	??_motor_isr,f,c
 45840  00B91C  0E00               	movlw	0
 45841  00B91E  222D               	addwfc	??_motor_isr+1,f,c
 45842  00B920  222E               	addwfc	??_motor_isr+2,f,c
 45843  00B922  222F               	addwfc	??_motor_isr+3,f,c
 45844  00B924  0101               	movlb	1	; () banked
 45845  00B926  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 45846  00B928  242C               	addwf	??_motor_isr,w,c
 45847  00B92A  6E40               	movwf	motor_isr@steps_remaining,c
 45848  00B92C  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 45849  00B92E  202D               	addwfc	??_motor_isr+1,w,c
 45850  00B930  6E41               	movwf	motor_isr@steps_remaining+1,c
 45851  00B932  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 45852  00B934  202E               	addwfc	??_motor_isr+2,w,c
 45853  00B936  6E42               	movwf	motor_isr@steps_remaining+2,c
 45854  00B938  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 45855  00B93A  202F               	addwfc	??_motor_isr+3,w,c
 45856  00B93C  6E43               	movwf	motor_isr@steps_remaining+3,c
 45857                           
 45858                           ; BSR set to: 1
 45859                           ;motor.c: 427: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 45860  00B93E  90D8               	bcf	status,0,c
 45861  00B940  0100               	movlb	0	; () banked
 45862  00B942  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45863  00B944  6EF6               	movwf	tblptrl,c
 45864  00B946  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45865  00B948  6EF7               	movwf	tblptrh,c
 45866  00B94A  0E61               	movlw	low _motor_steps_lookup
 45867  00B94C  26F6               	addwf	tblptrl,f,c
 45868  00B94E  0E94               	movlw	high _motor_steps_lookup
 45869  00B950  22F7               	addwfc	tblptrh,f,c
 45870  00B952                     	if	1	;There are 3 active tblptr bytes
 45871  00B952  6AF8               	clrf	tblptru,c
 45872  00B954  0E00               	movlw	low (__mediumconst shr (0+16))
 45873  00B956  22F8               	addwfc	tblptru,f,c
 45874  00B958                     	endif
 45875  00B958  0009               	tblrd		*+
 45876  00B95A  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 45877  00B95E  000A               	tblrd		*-
 45878  00B960  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 45879                           
 45880                           ; BSR set to: 0
 45881                           ;motor.c: 428: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 45882  00B964  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 45883  00B968  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 45884  00B96C  90D8               	bcf	status,0,c
 45885  00B96E  362C               	rlcf	??_motor_isr,f,c
 45886  00B970  362D               	rlcf	??_motor_isr+1,f,c
 45887  00B972  0E04               	movlw	4
 45888  00B974  262C               	addwf	??_motor_isr,f,c
 45889  00B976  0E00               	movlw	0
 45890  00B978  222D               	addwfc	??_motor_isr+1,f,c
 45891  00B97A  0E61               	movlw	low _motor_steps_lookup
 45892  00B97C  242C               	addwf	??_motor_isr,w,c
 45893  00B97E  6EF6               	movwf	tblptrl,c
 45894  00B980  0E94               	movlw	high _motor_steps_lookup
 45895  00B982  202D               	addwfc	??_motor_isr+1,w,c
 45896  00B984  6EF7               	movwf	tblptrh,c
 45897  00B986                     	if	1	;There are 3 active tblptr bytes
 45898  00B986  6AF8               	clrf	tblptru,c
 45899  00B988  0E00               	movlw	low (__mediumconst shr (0+16))
 45900  00B98A  22F8               	addwfc	tblptru,f,c
 45901  00B98C                     	endif
 45902  00B98C  0009               	tblrd		*+
 45903  00B98E  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 45904  00B992  000A               	tblrd		*-
 45905  00B994  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 45906                           
 45907                           ;motor.c: 430: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 45908  00B998  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45909  00B99A  0101               	movlb	1	; () banked
 45910  00B99C  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 45911  00B99E  0100               	movlb	0	; () banked
 45912  00B9A0  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45913  00B9A2  0101               	movlb	1	; () banked
 45914  00B9A4  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 45915  00B9A6  A0D8               	btfss	status,0,c
 45916  00B9A8  D010               	goto	i2u1857_40
 45917                           
 45918                           ; BSR set to: 1
 45919  00B9AA  503C               	movf	motor_isr@steps_until_standstill,w,c
 45920  00B9AC  6E2C               	movwf	??_motor_isr& (0+255),c
 45921  00B9AE  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 45922  00B9B0  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45923  00B9B2  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 45924  00B9B4  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 45925  00B9B6  5040               	movf	motor_isr@steps_remaining,w,c
 45926  00B9B8  5C2C               	subwf	??_motor_isr,w,c
 45927  00B9BA  5041               	movf	motor_isr@steps_remaining+1,w,c
 45928  00B9BC  582D               	subwfb	??_motor_isr+1,w,c
 45929  00B9BE  5042               	movf	motor_isr@steps_remaining+2,w,c
 45930  00B9C0  582E               	subwfb	??_motor_isr+2,w,c
 45931  00B9C2  5043               	movf	motor_isr@steps_remaining+3,w,c
 45932  00B9C4  582F               	subwfb	??_motor_isr+3,w,c
 45933  00B9C6  A0D8               	btfss	status,0,c
 45934  00B9C8  D0E3               	goto	i2l2501
 45935  00B9CA                     i2u1857_40:
 45936                           
 45937                           ; BSR set to: 1
 45938                           ;motor.c: 431: {;motor.c: 433: if(motor_current_speed>0)
 45939                           
 45940                           ; BSR set to: 1
 45941  00B9CA  0100               	movlb	0	; () banked
 45942  00B9CC  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45943  00B9CE  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45944  00B9D0  B4D8               	btfsc	status,2,c
 45945  00B9D2  D003               	goto	i2l2504
 45946                           
 45947                           ; BSR set to: 0
 45948                           ;motor.c: 434: {;motor.c: 435: --motor_current_speed;
 45949  00B9D4  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 45950  00B9D6  A0D8               	btfss	status,0,c
 45951  00B9D8  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 45952  00B9DA                     i2l2504:
 45953                           
 45954                           ; BSR set to: 0
 45955                           ;motor.c: 436: };motor.c: 439: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 45956                           
 45957                           ; BSR set to: 0
 45958  00B9DA  0101               	movlb	1	; () banked
 45959  00B9DC  0556               	decf	_motor_mode& (0+255),w,b
 45960  00B9DE  A4D8               	btfss	status,2,c
 45961  00B9E0  D026               	goto	i2l2505
 45962                           
 45963                           ; BSR set to: 1
 45964  00B9E2  0E2F               	movlw	low _motor_postscaler_lookup
 45965  00B9E4  0100               	movlb	0	; () banked
 45966  00B9E6  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45967  00B9E8  6EF6               	movwf	tblptrl,c
 45968  00B9EA  0E98               	movlw	high _motor_postscaler_lookup
 45969  00B9EC  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45970  00B9EE  6EF7               	movwf	tblptrh,c
 45971  00B9F0                     	if	1	;There are 3 active tblptr bytes
 45972  00B9F0  6AF8               	clrf	tblptru,c
 45973  00B9F2  0E00               	movlw	low (__mediumconst shr (0+16))
 45974  00B9F4  22F8               	addwfc	tblptru,f,c
 45975  00B9F6                     	endif
 45976  00B9F6  0008               	tblrd		*
 45977  00B9F8  50F5               	movf	tablat,w,c
 45978  00B9FA  0900               	iorlw	0
 45979  00B9FC  B4D8               	btfsc	status,2,c
 45980  00B9FE  D017               	goto	i2l2505
 45981                           
 45982                           ; BSR set to: 0
 45983                           ;motor.c: 440: {;motor.c: 442: motor_mode = MOTOR_MODE_MANUAL;
 45984  00BA00  0E00               	movlw	0
 45985  00BA02  0101               	movlb	1	; () banked
 45986  00BA04  6F56               	movwf	_motor_mode& (0+255),b
 45987                           
 45988                           ; BSR set to: 1
 45989                           ;motor.c: 445: LATBbits.LB1 = 1;
 45990  00BA06  828A               	bsf	3978,1,c	;volatile
 45991                           
 45992                           ;motor.c: 446: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 45993  00BA08  0E55               	movlw	85
 45994  00BA0A  6EA7               	movwf	4007,c	;volsfr
 45995  00BA0C  0EAA               	movlw	170
 45996  00BA0E  6EA7               	movwf	4007,c	;volsfr
 45997                           
 45998                           ; BSR set to: 1
 45999  00BA10  010E               	movlb	14	; () banked
 46000  00BA12  91BF               	bcf	191,0,b	;volatile
 46001                           
 46002                           ;motor.c: 447: RPOR4 = 0;
 46003  00BA14  0E00               	movlw	0
 46004  00BA16  6FC4               	movwf	196,b	;volatile
 46005                           
 46006                           ;motor.c: 448: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46007  00BA18  0E55               	movlw	85
 46008  00BA1A  6EA7               	movwf	4007,c	;volsfr
 46009  00BA1C  0EAA               	movlw	170
 46010  00BA1E  6EA7               	movwf	4007,c	;volsfr
 46011                           
 46012                           ; BSR set to: 14
 46013  00BA20  81BF               	bsf	191,0,b	;volatile
 46014                           
 46015                           ;motor.c: 451: TMR2 = 0;
 46016  00BA22  0E00               	movlw	0
 46017  00BA24  6ECC               	movwf	4044,c	;volatile
 46018                           
 46019                           ; BSR set to: 14
 46020                           ;motor.c: 454: CCP1CONbits.CCP1M = 0b0000;
 46021  00BA26  90BA               	bcf	4026,0,c	;volatile
 46022  00BA28  92BA               	bcf	4026,1,c	;volatile
 46023  00BA2A  94BA               	bcf	4026,2,c	;volatile
 46024  00BA2C  96BA               	bcf	4026,3,c	;volatile
 46025  00BA2E                     i2l2505:
 46026                           
 46027                           ;motor.c: 455: };motor.c: 459: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 46028                           
 46029                           ; BSR set to: 14
 46030  00BA2E  0EFD               	movlw	low _motor_prescaler_lookup
 46031  00BA30  0100               	movlb	0	; () banked
 46032  00BA32  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46033  00BA34  6EF6               	movwf	tblptrl,c
 46034  00BA36  0E9B               	movlw	high _motor_prescaler_lookup
 46035  00BA38  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46036  00BA3A  6EF7               	movwf	tblptrh,c
 46037  00BA3C                     	if	1	;There are 3 active tblptr bytes
 46038  00BA3C  6AF8               	clrf	tblptru,c
 46039  00BA3E  0E00               	movlw	low (__mediumconst shr (0+16))
 46040  00BA40  22F8               	addwfc	tblptru,f,c
 46041  00BA42                     	endif
 46042  00BA42  0008               	tblrd		*
 46043  00BA44  CFF5 F02C          	movff	tablat,??_motor_isr
 46044  00BA48  50CA               	movf	4042,w,c	;volatile
 46045  00BA4A  182C               	xorwf	??_motor_isr,w,c
 46046  00BA4C  0BFC               	andlw	-4
 46047  00BA4E  182C               	xorwf	??_motor_isr,w,c
 46048  00BA50  6ECA               	movwf	4042,c	;volatile
 46049                           
 46050                           ; BSR set to: 0
 46051                           ;motor.c: 461: PR2 = motor_period_lookup[motor_current_speed];
 46052  00BA52  0E16               	movlw	low _motor_period_lookup
 46053  00BA54  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46054  00BA56  6EF6               	movwf	tblptrl,c
 46055  00BA58  0E9A               	movlw	high _motor_period_lookup
 46056  00BA5A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46057  00BA5C  6EF7               	movwf	tblptrh,c
 46058  00BA5E                     	if	1	;There are 3 active tblptr bytes
 46059  00BA5E  6AF8               	clrf	tblptru,c
 46060  00BA60  0E00               	movlw	low (__mediumconst shr (0+16))
 46061  00BA62  22F8               	addwfc	tblptru,f,c
 46062  00BA64                     	endif
 46063  00BA64  0008               	tblrd		*
 46064  00BA66  CFF5 FFCB          	movff	tablat,4043	;volatile
 46065                           
 46066                           ; BSR set to: 0
 46067                           ;motor.c: 463: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46068  00BA6A  0E2F               	movlw	low _motor_postscaler_lookup
 46069  00BA6C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46070  00BA6E  6EF6               	movwf	tblptrl,c
 46071  00BA70  0E98               	movlw	high _motor_postscaler_lookup
 46072  00BA72  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46073  00BA74  6EF7               	movwf	tblptrh,c
 46074  00BA76                     	if	1	;There are 3 active tblptr bytes
 46075  00BA76  6AF8               	clrf	tblptru,c
 46076  00BA78  0E00               	movlw	low (__mediumconst shr (0+16))
 46077  00BA7A  22F8               	addwfc	tblptru,f,c
 46078  00BA7C                     	endif
 46079  00BA7C  0008               	tblrd		*
 46080  00BA7E  CFF5 F02C          	movff	tablat,??_motor_isr
 46081  00BA82  462C               	rlncf	??_motor_isr,f,c
 46082  00BA84  462C               	rlncf	??_motor_isr,f,c
 46083  00BA86  462C               	rlncf	??_motor_isr,f,c
 46084  00BA88  50CA               	movf	4042,w,c	;volatile
 46085  00BA8A  182C               	xorwf	??_motor_isr,w,c
 46086  00BA8C  0B87               	andlw	-121
 46087  00BA8E  182C               	xorwf	??_motor_isr,w,c
 46088  00BA90  6ECA               	movwf	4042,c	;volatile
 46089                           
 46090                           ; BSR set to: 0
 46091                           ;motor.c: 465: CCPR1L = PR2>>1;
 46092  00BA92  90D8               	bcf	status,0,c
 46093  00BA94  30CB               	rrcf	4043,w,c	;volatile
 46094  00BA96  6EBB               	movwf	4027,c	;volatile
 46095                           
 46096                           ; BSR set to: 0
 46097                           ;motor.c: 468: if(motor_current_speed>0)
 46098  00BA98  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46099  00BA9A  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46100  00BA9C  B4D8               	btfsc	status,2,c
 46101  00BA9E  D058               	goto	i2l2506
 46102                           
 46103                           ; BSR set to: 0
 46104                           ;motor.c: 469: {;motor.c: 470: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 46105  00BAA0  0EFE               	movlw	254
 46106  00BAA2  6E2C               	movwf	??_motor_isr& (0+255),c
 46107  00BAA4  0EFF               	movlw	255
 46108  00BAA6  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46109  00BAA8  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 46110  00BAAC  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 46111  00BAB0  90D8               	bcf	status,0,c
 46112  00BAB2  362E               	rlcf	??_motor_isr+2,f,c
 46113  00BAB4  362F               	rlcf	??_motor_isr+3,f,c
 46114  00BAB6  502C               	movf	??_motor_isr,w,c
 46115  00BAB8  262E               	addwf	??_motor_isr+2,f,c
 46116  00BABA  502D               	movf	??_motor_isr+1,w,c
 46117  00BABC  222F               	addwfc	??_motor_isr+3,f,c
 46118  00BABE  0E61               	movlw	low _motor_steps_lookup
 46119  00BAC0  242E               	addwf	??_motor_isr+2,w,c
 46120  00BAC2  6EF6               	movwf	tblptrl,c
 46121  00BAC4  0E94               	movlw	high _motor_steps_lookup
 46122  00BAC6  202F               	addwfc	??_motor_isr+3,w,c
 46123  00BAC8  6EF7               	movwf	tblptrh,c
 46124  00BACA                     	if	1	;There are 3 active tblptr bytes
 46125  00BACA  6AF8               	clrf	tblptru,c
 46126  00BACC  0E00               	movlw	low (__mediumconst shr (0+16))
 46127  00BACE  22F8               	addwfc	tblptru,f,c
 46128  00BAD0                     	endif
 46129  00BAD0  0009               	tblrd		*+
 46130  00BAD2  CFF5 F030          	movff	tablat,??_motor_isr+4
 46131  00BAD6  0009               	tblrd		*+
 46132  00BAD8  CFF5 F031          	movff	tablat,??_motor_isr+5
 46133  00BADC  5030               	movf	??_motor_isr+4,w,c
 46134  00BADE  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 46135  00BAE0  5031               	movf	??_motor_isr+5,w,c
 46136  00BAE2  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 46137  00BAE4  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 46138  00BAE6  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 46139  00BAE8  1E32               	comf	??_motor_isr+6,f,c
 46140  00BAEA  1E33               	comf	??_motor_isr+7,f,c
 46141  00BAEC  1E34               	comf	??_motor_isr+8,f,c
 46142  00BAEE  1E35               	comf	??_motor_isr+9,f,c
 46143  00BAF0  2A32               	incf	??_motor_isr+6,f,c
 46144  00BAF2  0E00               	movlw	0
 46145  00BAF4  2233               	addwfc	??_motor_isr+7,f,c
 46146  00BAF6  2234               	addwfc	??_motor_isr+8,f,c
 46147  00BAF8  2235               	addwfc	??_motor_isr+9,f,c
 46148  00BAFA  90D8               	bcf	status,0,c
 46149  00BAFC  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46150  00BAFE  6EF6               	movwf	tblptrl,c
 46151  00BB00  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46152  00BB02  6EF7               	movwf	tblptrh,c
 46153  00BB04  0E61               	movlw	low _motor_steps_lookup
 46154  00BB06  26F6               	addwf	tblptrl,f,c
 46155  00BB08  0E94               	movlw	high _motor_steps_lookup
 46156  00BB0A  22F7               	addwfc	tblptrh,f,c
 46157  00BB0C                     	if	1	;There are 3 active tblptr bytes
 46158  00BB0C  6AF8               	clrf	tblptru,c
 46159  00BB0E  0E00               	movlw	low (__mediumconst shr (0+16))
 46160  00BB10  22F8               	addwfc	tblptru,f,c
 46161  00BB12                     	endif
 46162  00BB12  0009               	tblrd		*+
 46163  00BB14  CFF5 F036          	movff	tablat,??_motor_isr+10
 46164  00BB18  0009               	tblrd		*+
 46165  00BB1A  CFF5 F037          	movff	tablat,??_motor_isr+11
 46166  00BB1E  5036               	movf	??_motor_isr+10,w,c
 46167  00BB20  2432               	addwf	??_motor_isr+6,w,c
 46168  00BB22  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46169  00BB24  5037               	movf	??_motor_isr+11,w,c
 46170  00BB26  2033               	addwfc	??_motor_isr+7,w,c
 46171  00BB28  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46172  00BB2A  0E00               	movlw	0
 46173  00BB2C  2034               	addwfc	??_motor_isr+8,w,c
 46174  00BB2E  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 46175  00BB30  0E00               	movlw	0
 46176  00BB32  2035               	addwfc	??_motor_isr+9,w,c
 46177  00BB34  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 46178  00BB36  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46179  00BB38  2438               	addwf	??_motor_isr+12,w,c
 46180  00BB3A  0102               	movlb	2	; () banked
 46181  00BB3C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46182  00BB3E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46183  00BB40  2039               	addwfc	??_motor_isr+13,w,c
 46184  00BB42  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46185  00BB44  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46186  00BB46  203A               	addwfc	??_motor_isr+14,w,c
 46187  00BB48  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46188  00BB4A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46189  00BB4C  203B               	addwfc	??_motor_isr+15,w,c
 46190  00BB4E  D0EF               	goto	L76
 46191  00BB50                     i2l2506:
 46192                           
 46193                           ;motor.c: 472: else;motor.c: 473: {;motor.c: 474: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 46194                           
 46195                           ; BSR set to: 2
 46196  00BB50  90D8               	bcf	status,0,c
 46197  00BB52  0100               	movlb	0	; () banked
 46198  00BB54  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46199  00BB56  6EF6               	movwf	tblptrl,c
 46200  00BB58  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46201  00BB5A  6EF7               	movwf	tblptrh,c
 46202  00BB5C  0E61               	movlw	low _motor_steps_lookup
 46203  00BB5E  26F6               	addwf	tblptrl,f,c
 46204  00BB60  0E94               	movlw	high _motor_steps_lookup
 46205  00BB62  22F7               	addwfc	tblptrh,f,c
 46206  00BB64                     	if	1	;There are 3 active tblptr bytes
 46207  00BB64  6AF8               	clrf	tblptru,c
 46208  00BB66  0E00               	movlw	low (__mediumconst shr (0+16))
 46209  00BB68  22F8               	addwfc	tblptru,f,c
 46210  00BB6A                     	endif
 46211  00BB6A  0009               	tblrd		*+
 46212  00BB6C  CFF5 F02C          	movff	tablat,??_motor_isr
 46213  00BB70  0009               	tblrd		*+
 46214  00BB72  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46215  00BB76  502C               	movf	??_motor_isr,w,c
 46216  00BB78  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 46217  00BB7A  0102               	movlb	2	; () banked
 46218  00BB7C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46219  00BB7E  502D               	movf	??_motor_isr+1,w,c
 46220  00BB80  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 46221  00BB82  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46222  00BB84  0E00               	movlw	0
 46223  00BB86  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 46224  00BB88  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46225  00BB8A  0E00               	movlw	0
 46226  00BB8C  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 46227  00BB8E  D0CF               	goto	L76
 46228  00BB90                     i2l2501:
 46229                           
 46230                           ;motor.c: 477: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 46231                           
 46232                           ; BSR set to: 2
 46233  00BB90  0101               	movlb	1	; () banked
 46234  00BB92  513F               	movf	_motor_maximum_speed& (0+255),w,b
 46235  00BB94  0100               	movlb	0	; () banked
 46236  00BB96  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 46237  00BB98  E106               	bnz	i2u1862_40
 46238  00BB9A  0101               	movlb	1	; () banked
 46239  00BB9C  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 46240  00BB9E  0100               	movlb	0	; () banked
 46241  00BBA0  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46242  00BBA2  B4D8               	btfsc	status,2,c
 46243  00BBA4  D010               	goto	i2u1863_40
 46244  00BBA6                     i2u1862_40:
 46245                           
 46246                           ; BSR set to: 0
 46247  00BBA6  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 46248  00BBA8  6E2C               	movwf	??_motor_isr& (0+255),c
 46249  00BBAA  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 46250  00BBAC  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46251  00BBAE  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46252  00BBB0  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46253  00BBB2  5040               	movf	motor_isr@steps_remaining,w,c
 46254  00BBB4  5C2C               	subwf	??_motor_isr,w,c
 46255  00BBB6  5041               	movf	motor_isr@steps_remaining+1,w,c
 46256  00BBB8  582D               	subwfb	??_motor_isr+1,w,c
 46257  00BBBA  5042               	movf	motor_isr@steps_remaining+2,w,c
 46258  00BBBC  582E               	subwfb	??_motor_isr+2,w,c
 46259  00BBBE  5043               	movf	motor_isr@steps_remaining+3,w,c
 46260  00BBC0  582F               	subwfb	??_motor_isr+3,w,c
 46261  00BBC2  A0D8               	btfss	status,0,c
 46262  00BBC4  D002               	goto	i2l2509
 46263  00BBC6                     i2u1863_40:
 46264                           
 46265                           ; BSR set to: 0
 46266                           ;motor.c: 478: {;motor.c: 481: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46267                           
 46268                           ; BSR set to: 0
 46269  00BBC6  90D8               	bcf	status,0,c
 46270  00BBC8  D060               	goto	L75
 46271  00BBCA                     i2l2509:
 46272                           
 46273                           ;motor.c: 483: else;motor.c: 484: {;motor.c: 486: ++motor_current_speed;
 46274                           
 46275                           ; BSR set to: 2
 46276  00BBCA  0100               	movlb	0	; () banked
 46277  00BBCC  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 46278  00BBCE  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46279                           
 46280                           ; BSR set to: 0
 46281                           ;motor.c: 490: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 46282  00BBD0  0EFD               	movlw	low _motor_prescaler_lookup
 46283  00BBD2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46284  00BBD4  6EF6               	movwf	tblptrl,c
 46285  00BBD6  0E9B               	movlw	high _motor_prescaler_lookup
 46286  00BBD8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46287  00BBDA  6EF7               	movwf	tblptrh,c
 46288  00BBDC                     	if	1	;There are 3 active tblptr bytes
 46289  00BBDC  6AF8               	clrf	tblptru,c
 46290  00BBDE  0E00               	movlw	low (__mediumconst shr (0+16))
 46291  00BBE0  22F8               	addwfc	tblptru,f,c
 46292  00BBE2                     	endif
 46293  00BBE2  0008               	tblrd		*
 46294  00BBE4  CFF5 F02C          	movff	tablat,??_motor_isr
 46295  00BBE8  50CA               	movf	4042,w,c	;volatile
 46296  00BBEA  182C               	xorwf	??_motor_isr,w,c
 46297  00BBEC  0BFC               	andlw	-4
 46298  00BBEE  182C               	xorwf	??_motor_isr,w,c
 46299  00BBF0  6ECA               	movwf	4042,c	;volatile
 46300                           
 46301                           ; BSR set to: 0
 46302                           ;motor.c: 492: PR2 = motor_period_lookup[motor_current_speed];
 46303  00BBF2  0E16               	movlw	low _motor_period_lookup
 46304  00BBF4  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46305  00BBF6  6EF6               	movwf	tblptrl,c
 46306  00BBF8  0E9A               	movlw	high _motor_period_lookup
 46307  00BBFA  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46308  00BBFC  6EF7               	movwf	tblptrh,c
 46309  00BBFE                     	if	1	;There are 3 active tblptr bytes
 46310  00BBFE  6AF8               	clrf	tblptru,c
 46311  00BC00  0E00               	movlw	low (__mediumconst shr (0+16))
 46312  00BC02  22F8               	addwfc	tblptru,f,c
 46313  00BC04                     	endif
 46314  00BC04  0008               	tblrd		*
 46315  00BC06  CFF5 FFCB          	movff	tablat,4043	;volatile
 46316                           
 46317                           ; BSR set to: 0
 46318                           ;motor.c: 494: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46319  00BC0A  0E2F               	movlw	low _motor_postscaler_lookup
 46320  00BC0C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46321  00BC0E  6EF6               	movwf	tblptrl,c
 46322  00BC10  0E98               	movlw	high _motor_postscaler_lookup
 46323  00BC12  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46324  00BC14  6EF7               	movwf	tblptrh,c
 46325  00BC16                     	if	1	;There are 3 active tblptr bytes
 46326  00BC16  6AF8               	clrf	tblptru,c
 46327  00BC18  0E00               	movlw	low (__mediumconst shr (0+16))
 46328  00BC1A  22F8               	addwfc	tblptru,f,c
 46329  00BC1C                     	endif
 46330  00BC1C  0008               	tblrd		*
 46331  00BC1E  CFF5 F02C          	movff	tablat,??_motor_isr
 46332  00BC22  462C               	rlncf	??_motor_isr,f,c
 46333  00BC24  462C               	rlncf	??_motor_isr,f,c
 46334  00BC26  462C               	rlncf	??_motor_isr,f,c
 46335  00BC28  50CA               	movf	4042,w,c	;volatile
 46336  00BC2A  182C               	xorwf	??_motor_isr,w,c
 46337  00BC2C  0B87               	andlw	-121
 46338  00BC2E  182C               	xorwf	??_motor_isr,w,c
 46339  00BC30  6ECA               	movwf	4042,c	;volatile
 46340                           
 46341                           ; BSR set to: 0
 46342                           ;motor.c: 496: CCPR1L = PR2>>1;
 46343  00BC32  90D8               	bcf	status,0,c
 46344  00BC34  30CB               	rrcf	4043,w,c	;volatile
 46345  00BC36  6EBB               	movwf	4027,c	;volatile
 46346                           
 46347                           ; BSR set to: 0
 46348                           ;motor.c: 498: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 46349  00BC38  0101               	movlb	1	; () banked
 46350  00BC3A  5156               	movf	_motor_mode& (0+255),w,b
 46351  00BC3C  A4D8               	btfss	status,2,c
 46352  00BC3E  D023               	goto	i2l2513
 46353                           
 46354                           ; BSR set to: 1
 46355  00BC40  0E2F               	movlw	low _motor_postscaler_lookup
 46356  00BC42  0100               	movlb	0	; () banked
 46357  00BC44  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46358  00BC46  6EF6               	movwf	tblptrl,c
 46359  00BC48  0E98               	movlw	high _motor_postscaler_lookup
 46360  00BC4A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46361  00BC4C  6EF7               	movwf	tblptrh,c
 46362  00BC4E                     	if	1	;There are 3 active tblptr bytes
 46363  00BC4E  6AF8               	clrf	tblptru,c
 46364  00BC50  0E00               	movlw	low (__mediumconst shr (0+16))
 46365  00BC52  22F8               	addwfc	tblptru,f,c
 46366  00BC54                     	endif
 46367  00BC54  0008               	tblrd		*
 46368  00BC56  50F5               	movf	tablat,w,c
 46369  00BC58  0900               	iorlw	0
 46370  00BC5A  A4D8               	btfss	status,2,c
 46371  00BC5C  D014               	goto	i2l2513
 46372                           
 46373                           ; BSR set to: 0
 46374                           ;motor.c: 499: {;motor.c: 501: motor_mode = MOTOR_MODE_PWM;
 46375  00BC5E  0E01               	movlw	1
 46376  00BC60  0101               	movlb	1	; () banked
 46377  00BC62  6F56               	movwf	_motor_mode& (0+255),b
 46378                           
 46379                           ;motor.c: 504: CCP1CONbits.CCP1M = 0b1100;
 46380  00BC64  50BA               	movf	4026,w,c	;volatile
 46381  00BC66  0BF0               	andlw	-16
 46382  00BC68  090C               	iorlw	12
 46383  00BC6A  6EBA               	movwf	4026,c	;volatile
 46384                           
 46385                           ;motor.c: 507: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46386  00BC6C  0E55               	movlw	85
 46387  00BC6E  6EA7               	movwf	4007,c	;volsfr
 46388  00BC70  0EAA               	movlw	170
 46389  00BC72  6EA7               	movwf	4007,c	;volsfr
 46390                           
 46391                           ; BSR set to: 1
 46392  00BC74  010E               	movlb	14	; () banked
 46393  00BC76  91BF               	bcf	191,0,b	;volatile
 46394                           
 46395                           ;motor.c: 508: RPOR4 = 14;
 46396  00BC78  0E0E               	movlw	14
 46397  00BC7A  6FC4               	movwf	196,b	;volatile
 46398                           
 46399                           ;motor.c: 509: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46400  00BC7C  0E55               	movlw	85
 46401  00BC7E  6EA7               	movwf	4007,c	;volsfr
 46402  00BC80  0EAA               	movlw	170
 46403  00BC82  6EA7               	movwf	4007,c	;volsfr
 46404                           
 46405                           ; BSR set to: 14
 46406  00BC84  81BF               	bsf	191,0,b	;volatile
 46407  00BC86                     i2l2513:
 46408                           
 46409                           ;motor.c: 510: };motor.c: 513: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46410                           
 46411                           ; BSR set to: 14
 46412  00BC86  90D8               	bcf	status,0,c
 46413  00BC88  0100               	movlb	0	; () banked
 46414  00BC8A                     L75:
 46415  00BC8A  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46416  00BC8C  6EF6               	movwf	tblptrl,c
 46417  00BC8E  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46418  00BC90  6EF7               	movwf	tblptrh,c
 46419  00BC92  0E61               	movlw	low _motor_steps_lookup
 46420  00BC94  26F6               	addwf	tblptrl,f,c
 46421  00BC96  0E94               	movlw	high _motor_steps_lookup
 46422  00BC98  22F7               	addwfc	tblptrh,f,c
 46423  00BC9A                     	if	1	;There are 3 active tblptr bytes
 46424  00BC9A  6AF8               	clrf	tblptru,c
 46425  00BC9C  0E00               	movlw	low (__mediumconst shr (0+16))
 46426  00BC9E  22F8               	addwfc	tblptru,f,c
 46427  00BCA0                     	endif
 46428  00BCA0  0009               	tblrd		*+
 46429  00BCA2  CFF5 F02C          	movff	tablat,??_motor_isr
 46430  00BCA6  0009               	tblrd		*+
 46431  00BCA8  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46432  00BCAC  502C               	movf	??_motor_isr,w,c
 46433  00BCAE  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46434  00BCB0  502D               	movf	??_motor_isr+1,w,c
 46435  00BCB2  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46436  00BCB4  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 46437  00BCB6  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 46438  00BCB8  1E2E               	comf	??_motor_isr+2,f,c
 46439  00BCBA  1E2F               	comf	??_motor_isr+3,f,c
 46440  00BCBC  1E30               	comf	??_motor_isr+4,f,c
 46441  00BCBE  1E31               	comf	??_motor_isr+5,f,c
 46442  00BCC0  2A2E               	incf	??_motor_isr+2,f,c
 46443  00BCC2  0E00               	movlw	0
 46444  00BCC4  222F               	addwfc	??_motor_isr+3,f,c
 46445  00BCC6  2230               	addwfc	??_motor_isr+4,f,c
 46446  00BCC8  2231               	addwfc	??_motor_isr+5,f,c
 46447  00BCCA  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 46448  00BCCE  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 46449  00BCD2  90D8               	bcf	status,0,c
 46450  00BCD4  3632               	rlcf	??_motor_isr+6,f,c
 46451  00BCD6  3633               	rlcf	??_motor_isr+7,f,c
 46452  00BCD8  0E02               	movlw	2
 46453  00BCDA  2632               	addwf	??_motor_isr+6,f,c
 46454  00BCDC  0E00               	movlw	0
 46455  00BCDE  2233               	addwfc	??_motor_isr+7,f,c
 46456  00BCE0  0E61               	movlw	low _motor_steps_lookup
 46457  00BCE2  2432               	addwf	??_motor_isr+6,w,c
 46458  00BCE4  6EF6               	movwf	tblptrl,c
 46459  00BCE6  0E94               	movlw	high _motor_steps_lookup
 46460  00BCE8  2033               	addwfc	??_motor_isr+7,w,c
 46461  00BCEA  6EF7               	movwf	tblptrh,c
 46462  00BCEC                     	if	1	;There are 3 active tblptr bytes
 46463  00BCEC  6AF8               	clrf	tblptru,c
 46464  00BCEE  0E00               	movlw	low (__mediumconst shr (0+16))
 46465  00BCF0  22F8               	addwfc	tblptru,f,c
 46466  00BCF2                     	endif
 46467  00BCF2  0009               	tblrd		*+
 46468  00BCF4  CFF5 F034          	movff	tablat,??_motor_isr+8
 46469  00BCF8  0009               	tblrd		*+
 46470  00BCFA  CFF5 F035          	movff	tablat,??_motor_isr+9
 46471  00BCFE  5034               	movf	??_motor_isr+8,w,c
 46472  00BD00  242E               	addwf	??_motor_isr+2,w,c
 46473  00BD02  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 46474  00BD04  5035               	movf	??_motor_isr+9,w,c
 46475  00BD06  202F               	addwfc	??_motor_isr+3,w,c
 46476  00BD08  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 46477  00BD0A  0E00               	movlw	0
 46478  00BD0C  2030               	addwfc	??_motor_isr+4,w,c
 46479  00BD0E  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46480  00BD10  0E00               	movlw	0
 46481  00BD12  2031               	addwfc	??_motor_isr+5,w,c
 46482  00BD14  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46483  00BD16  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46484  00BD18  2436               	addwf	??_motor_isr+10,w,c
 46485  00BD1A  0102               	movlb	2	; () banked
 46486  00BD1C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46487  00BD1E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46488  00BD20  2037               	addwfc	??_motor_isr+11,w,c
 46489  00BD22  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46490  00BD24  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46491  00BD26  2038               	addwfc	??_motor_isr+12,w,c
 46492  00BD28  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46493  00BD2A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46494  00BD2C  2039               	addwfc	??_motor_isr+13,w,c
 46495  00BD2E                     L76:
 46496  00BD2E  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 46497  00BD30                     i2l2512:
 46498                           
 46499                           ; BSR set to: 2
 46500                           ;motor.c: 514: };motor.c: 515: };motor.c: 518: if(PIR1bits.TMR2IF)
 46501                           
 46502                           ; BSR set to: 2
 46503                           
 46504                           ; BSR set to: 2
 46505                           
 46506                           ; BSR set to: 2
 46507  00BD30  A29E               	btfss	3998,1,c	;volatile
 46508  00BD32  0012               	return	
 46509                           
 46510                           ; BSR set to: 2
 46511                           ;motor.c: 519: {;motor.c: 521: PIR1bits.TMR2IF = 0;
 46512  00BD34  929E               	bcf	3998,1,c	;volatile
 46513                           
 46514                           ; BSR set to: 2
 46515                           ;motor.c: 523: ++motor_current_stepcount;
 46516  00BD36  0E01               	movlw	1
 46517  00BD38  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46518  00BD3A  0E00               	movlw	0
 46519  00BD3C  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46520  00BD3E  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46521  00BD40  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46522                           
 46523                           ;motor.c: 526: os.current_position_in_steps += motor_direction;
 46524  00BD42  0101               	movlb	1	; () banked
 46525  00BD44  5155               	movf	_motor_direction& (0+255),w,b
 46526  00BD46  6E2C               	movwf	??_motor_isr& (0+255),c
 46527  00BD48  0E00               	movlw	0
 46528  00BD4A  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46529  00BD4C  0EFF               	movlw	255
 46530  00BD4E  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46531  00BD50  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46532  00BD52  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46533  00BD54  502C               	movf	??_motor_isr,w,c
 46534  00BD56  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46535  00BD58  502D               	movf	??_motor_isr+1,w,c
 46536  00BD5A  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46537  00BD5C  502E               	movf	??_motor_isr+2,w,c
 46538  00BD5E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46539  00BD60  502F               	movf	??_motor_isr+3,w,c
 46540  00BD62  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46541                           
 46542                           ;motor.c: 527: if(os.current_position_in_steps==config.full_circle_in_steps)
 46543  00BD64  51A1               	movf	_config& (0+255),w,b
 46544  00BD66  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46545  00BD68  E112               	bnz	i2l18459
 46546  00BD6A  51A2               	movf	(_config+1)& (0+255),w,b
 46547  00BD6C  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46548  00BD6E  E10F               	bnz	i2l18459
 46549  00BD70  51A3               	movf	(_config+2)& (0+255),w,b
 46550  00BD72  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46551  00BD74  E10C               	bnz	i2l18459
 46552  00BD76  51A4               	movf	(_config+3)& (0+255),w,b
 46553  00BD78  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46554  00BD7A  A4D8               	btfss	status,2,c
 46555  00BD7C  D008               	goto	i2l2515
 46556                           
 46557                           ; BSR set to: 1
 46558                           ;motor.c: 528: os.current_position_in_steps = 0;
 46559  00BD7E  0E00               	movlw	0
 46560  00BD80  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46561  00BD82  0E00               	movlw	0
 46562  00BD84  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46563  00BD86  0E00               	movlw	0
 46564  00BD88  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46565  00BD8A  0E00               	movlw	0
 46566  00BD8C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46567  00BD8E                     i2l2515:
 46568  00BD8E                     i2l18459:
 46569                           
 46570                           ; BSR set to: 1
 46571                           ;motor.c: 529: if(os.current_position_in_steps==0xFFFFFFFF)
 46572  00BD8E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46573  00BD90  E114               	bnz	i2l2496
 46574  00BD92  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46575  00BD94  E112               	bnz	i2l2496
 46576  00BD96  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46577  00BD98  E110               	bnz	i2l2496
 46578  00BD9A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46579  00BD9C  A4D8               	btfss	status,2,c
 46580  00BD9E  0012               	return	
 46581                           
 46582                           ; BSR set to: 1
 46583                           ;motor.c: 530: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46584  00BDA0  0EFF               	movlw	255
 46585  00BDA2  25A1               	addwf	_config& (0+255),w,b
 46586  00BDA4  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46587  00BDA6  0EFF               	movlw	255
 46588  00BDA8  21A2               	addwfc	(_config+1)& (0+255),w,b
 46589  00BDAA  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46590  00BDAC  0EFF               	movlw	255
 46591  00BDAE  21A3               	addwfc	(_config+2)& (0+255),w,b
 46592  00BDB0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46593  00BDB2  0EFF               	movlw	255
 46594  00BDB4  21A4               	addwfc	(_config+3)& (0+255),w,b
 46595  00BDB6  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46596                           
 46597                           ; BSR set to: 1
 46598  00BDB8  0012               	return	
 46599  00BDBA                     i2l2496:
 46600  00BDBA  0012               	return		;funcret
 46601  00BDBC                     __end_of_motor_isr:
 46602                           	opt stack 0
 46603                           tosu	equ	0xFFF
 46604                           tosh	equ	0xFFE
 46605                           tosl	equ	0xFFD
 46606                           pclatu	equ	0xFFB
 46607                           pclath	equ	0xFFA
 46608                           tblptru	equ	0xFF8
 46609                           tblptrh	equ	0xFF7
 46610                           tblptrl	equ	0xFF6
 46611                           tablat	equ	0xFF5
 46612                           prodh	equ	0xFF4
 46613                           prodl	equ	0xFF3
 46614                           intcon	equ	0xFF2
 46615                           indf0	equ	0xFEF
 46616                           postinc0	equ	0xFEE
 46617                           fsr0h	equ	0xFEA
 46618                           fsr0l	equ	0xFE9
 46619                           wreg	equ	0xFE8
 46620                           indf1	equ	0xFE7
 46621                           postinc1	equ	0xFE6
 46622                           postdec1	equ	0xFE5
 46623                           plusw1	equ	0xFE3
 46624                           fsr1h	equ	0xFE2
 46625                           fsr1l	equ	0xFE1
 46626                           indf2	equ	0xFDF
 46627                           postinc2	equ	0xFDE
 46628                           postdec2	equ	0xFDD
 46629                           plusw2	equ	0xFDB
 46630                           fsr2h	equ	0xFDA
 46631                           fsr2l	equ	0xFD9
 46632                           status	equ	0xFD8
 46633                           
 46634 ;; *************** function _i2c_eeprom_writeUint32 *****************
 46635 ;; Defined at:
 46636 ;;		line 230 in file "i2c.c"
 46637 ;; Parameters:    Size  Location     Type
 46638 ;;  address         2   37[COMRAM] unsigned int 
 46639 ;;  data            4   39[COMRAM] unsigned long 
 46640 ;; Auto vars:     Size  Location     Type
 46641 ;;		None
 46642 ;; Return value:  Size  Location     Type
 46643 ;;                  1    wreg      void 
 46644 ;; Registers used:
 46645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46646 ;; Tracked objects:
 46647 ;;		On entry : 0/0
 46648 ;;		On exit  : 0/0
 46649 ;;		Unchanged: 0/0
 46650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46655 ;;Total ram usage:        6 bytes
 46656 ;; Hardware stack levels used:    1
 46657 ;; Hardware stack levels required when called:    3
 46658 ;; This function calls:
 46659 ;;		_i2c_eeprom_write
 46660 ;; This function is called by:
 46661 ;;		_motor_isr
 46662 ;; This function uses a non-reentrant model
 46663 ;;
 46664                           
 46665                           	psect	text188
 46666  015790                     __ptext188:
 46667                           	opt stack 0
 46668  015790                     _i2c_eeprom_writeUint32:
 46669                           	opt stack 13
 46670                           
 46671                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 46672                           
 46673                           ;incstack = 0
 46674  015790  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 46675  015794  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 46676  015798  0E28               	movlw	low i2c_eeprom_writeUint32@data
 46677  01579A  6E0D               	movwf	i2c_eeprom_write@data,c
 46678  01579C  0E00               	movlw	high i2c_eeprom_writeUint32@data
 46679  01579E  6E0E               	movwf	i2c_eeprom_write@data+1,c
 46680  0157A0  0E04               	movlw	4
 46681  0157A2  6E0F               	movwf	i2c_eeprom_write@length,c
 46682  0157A4  EC7C  F09D         	call	_i2c_eeprom_write	;wreg free
 46683  0157A8  0012               	return		;funcret
 46684  0157AA                     __end_of_i2c_eeprom_writeUint32:
 46685                           	opt stack 0
 46686                           tosu	equ	0xFFF
 46687                           tosh	equ	0xFFE
 46688                           tosl	equ	0xFFD
 46689                           pclatu	equ	0xFFB
 46690                           pclath	equ	0xFFA
 46691                           tblptru	equ	0xFF8
 46692                           tblptrh	equ	0xFF7
 46693                           tblptrl	equ	0xFF6
 46694                           tablat	equ	0xFF5
 46695                           prodh	equ	0xFF4
 46696                           prodl	equ	0xFF3
 46697                           intcon	equ	0xFF2
 46698                           indf0	equ	0xFEF
 46699                           postinc0	equ	0xFEE
 46700                           fsr0h	equ	0xFEA
 46701                           fsr0l	equ	0xFE9
 46702                           wreg	equ	0xFE8
 46703                           indf1	equ	0xFE7
 46704                           postinc1	equ	0xFE6
 46705                           postdec1	equ	0xFE5
 46706                           plusw1	equ	0xFE3
 46707                           fsr1h	equ	0xFE2
 46708                           fsr1l	equ	0xFE1
 46709                           indf2	equ	0xFDF
 46710                           postinc2	equ	0xFDE
 46711                           postdec2	equ	0xFDD
 46712                           plusw2	equ	0xFDB
 46713                           fsr2h	equ	0xFDA
 46714                           fsr2l	equ	0xFD9
 46715                           status	equ	0xFD8
 46716                           
 46717 ;; *************** function _i2c_eeprom_write *****************
 46718 ;; Defined at:
 46719 ;;		line 242 in file "i2c.c"
 46720 ;; Parameters:    Size  Location     Type
 46721 ;;  address         2   10[COMRAM] unsigned int 
 46722 ;;  data            2   12[COMRAM] PTR unsigned char 
 46723 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 46724 ;;  length          1   14[COMRAM] unsigned char 
 46725 ;; Auto vars:     Size  Location     Type
 46726 ;;  dat            17   18[COMRAM] unsigned char [17]
 46727 ;;  cntr            1   36[COMRAM] unsigned char 
 46728 ;;  slave_addres    1   35[COMRAM] unsigned char 
 46729 ;; Return value:  Size  Location     Type
 46730 ;;                  1    wreg      void 
 46731 ;; Registers used:
 46732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46733 ;; Tracked objects:
 46734 ;;		On entry : 0/0
 46735 ;;		On exit  : 0/0
 46736 ;;		Unchanged: 0/0
 46737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46738 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46739 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46740 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46741 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46742 ;;Total ram usage:       27 bytes
 46743 ;; Hardware stack levels used:    1
 46744 ;; Hardware stack levels required when called:    2
 46745 ;; This function calls:
 46746 ;;		i2__i2c_eeprom_busy
 46747 ;;		i2__i2c_write
 46748 ;; This function is called by:
 46749 ;;		_i2c_eeprom_writeUint32
 46750 ;;		_i2c_eeprom_writeUint16
 46751 ;; This function uses a non-reentrant model
 46752 ;;
 46753                           
 46754                           	psect	text189
 46755  013AF8                     __ptext189:
 46756                           	opt stack 0
 46757  013AF8                     _i2c_eeprom_write:
 46758                           	opt stack 13
 46759                           
 46760                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 46761                           
 46762                           ;incstack = 0
 46763  013AF8  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 46764  013AFC  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 46765  013B00  0E07               	movlw	7
 46766  013B02  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 46767  013B04                     i2u1426_45:
 46768  013B04  90D8               	bcf	status,0,c
 46769  013B06  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 46770  013B08  3210               	rrcf	??_i2c_eeprom_write,f,c
 46771  013B0A  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 46772  013B0C  D7FB               	goto	i2u1426_45
 46773  013B0E  5010               	movf	??_i2c_eeprom_write,w,c
 46774  013B10  0B0E               	andlw	14
 46775  013B12  09A0               	iorlw	160
 46776  013B14  6E24               	movwf	i2c_eeprom_write@slave_address,c
 46777                           
 46778                           ;i2c.c: 249: dat[0] = address & 0xFF;
 46779  013B16  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 46780                           
 46781                           ;i2c.c: 251: length &= 0b00001111;
 46782  013B1A  0E0F               	movlw	15
 46783  013B1C  160F               	andwf	i2c_eeprom_write@length,f,c
 46784                           
 46785                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 46786  013B1E  0E00               	movlw	0
 46787  013B20  6E25               	movwf	i2c_eeprom_write@cntr,c
 46788  013B22  D018               	goto	i2l1203
 46789  013B24                     
 46790                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 46791  013B24  5025               	movf	i2c_eeprom_write@cntr,w,c
 46792  013B26  0D01               	mullw	1
 46793  013B28  50F3               	movf	prodl,w,c
 46794  013B2A  240D               	addwf	i2c_eeprom_write@data,w,c
 46795  013B2C  6ED9               	movwf	fsr2l,c
 46796  013B2E  50F4               	movf	prodh,w,c
 46797  013B30  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 46798  013B32  6EDA               	movwf	fsr2h,c
 46799  013B34  5025               	movf	i2c_eeprom_write@cntr,w,c
 46800  013B36  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 46801  013B38  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 46802  013B3A  0E01               	movlw	1
 46803  013B3C  2610               	addwf	??_i2c_eeprom_write,f,c
 46804  013B3E  0E00               	movlw	0
 46805  013B40  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 46806  013B42  0E13               	movlw	low i2c_eeprom_write@dat
 46807  013B44  2410               	addwf	??_i2c_eeprom_write,w,c
 46808  013B46  6EE1               	movwf	fsr1l,c
 46809  013B48  0E00               	movlw	high i2c_eeprom_write@dat
 46810  013B4A  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 46811  013B4C  6EE2               	movwf	fsr1h,c
 46812  013B4E  CFDF FFE7          	movff	indf2,indf1
 46813  013B52  2A25               	incf	i2c_eeprom_write@cntr,f,c
 46814  013B54                     i2l1203:
 46815  013B54  500F               	movf	i2c_eeprom_write@length,w,c
 46816  013B56  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 46817  013B58  A0D8               	btfss	status,0,c
 46818  013B5A  D7E4               	goto	i2l1204
 46819  013B5C                     i2u1427_40:
 46820                           
 46821                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 46822  013B5C  ECE7  F0AA         	call	i2__i2c_eeprom_busy	;wreg free
 46823  013B60  0900               	iorlw	0
 46824  013B62  A4D8               	btfss	status,2,c
 46825  013B64  D7FB               	goto	i2u1427_40
 46826                           
 46827                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 46828  013B66  0E13               	movlw	low i2c_eeprom_write@dat
 46829  013B68  6E06               	movwf	i2__i2c_write@data,c
 46830  013B6A  0E00               	movlw	high i2c_eeprom_write@dat
 46831  013B6C  6E07               	movwf	i2__i2c_write@data+1,c
 46832  013B6E  280F               	incf	i2c_eeprom_write@length,w,c
 46833  013B70  6E08               	movwf	i2__i2c_write@length,c
 46834  013B72  5024               	movf	i2c_eeprom_write@slave_address,w,c
 46835  013B74  ECFF  F0A6         	call	i2__i2c_write
 46836  013B78  0012               	return		;funcret
 46837  013B7A                     __end_of_i2c_eeprom_write:
 46838                           	opt stack 0
 46839                           tosu	equ	0xFFF
 46840                           tosh	equ	0xFFE
 46841                           tosl	equ	0xFFD
 46842                           pclatu	equ	0xFFB
 46843                           pclath	equ	0xFFA
 46844                           tblptru	equ	0xFF8
 46845                           tblptrh	equ	0xFF7
 46846                           tblptrl	equ	0xFF6
 46847                           tablat	equ	0xFF5
 46848                           prodh	equ	0xFF4
 46849                           prodl	equ	0xFF3
 46850                           intcon	equ	0xFF2
 46851                           indf0	equ	0xFEF
 46852                           postinc0	equ	0xFEE
 46853                           fsr0h	equ	0xFEA
 46854                           fsr0l	equ	0xFE9
 46855                           wreg	equ	0xFE8
 46856                           indf1	equ	0xFE7
 46857                           postinc1	equ	0xFE6
 46858                           postdec1	equ	0xFE5
 46859                           plusw1	equ	0xFE3
 46860                           fsr1h	equ	0xFE2
 46861                           fsr1l	equ	0xFE1
 46862                           indf2	equ	0xFDF
 46863                           postinc2	equ	0xFDE
 46864                           postdec2	equ	0xFDD
 46865                           plusw2	equ	0xFDB
 46866                           fsr2h	equ	0xFDA
 46867                           fsr2l	equ	0xFD9
 46868                           status	equ	0xFD8
 46869                           
 46870 ;; *************** function i2__i2c_write *****************
 46871 ;; Defined at:
 46872 ;;		line 84 in file "i2c.c"
 46873 ;; Parameters:    Size  Location     Type
 46874 ;;  slave_addres    1    wreg     unsigned char 
 46875 ;;  data            2    5[COMRAM] PTR unsigned char 
 46876 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 46877 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 46878 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 46879 ;;  length          1    7[COMRAM] unsigned char 
 46880 ;; Auto vars:     Size  Location     Type
 46881 ;;  slave_addres    1    8[COMRAM] unsigned char 
 46882 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 46883 ;; Return value:  Size  Location     Type
 46884 ;;                  1    wreg      void 
 46885 ;; Registers used:
 46886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46887 ;; Tracked objects:
 46888 ;;		On entry : 0/0
 46889 ;;		On exit  : 0/0
 46890 ;;		Unchanged: 0/0
 46891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46895 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46896 ;;Total ram usage:        5 bytes
 46897 ;; Hardware stack levels used:    1
 46898 ;; Hardware stack levels required when called:    1
 46899 ;; This function calls:
 46900 ;;		i2__i2c_send
 46901 ;;		i2__i2c_start
 46902 ;;		i2__i2c_stop
 46903 ;;		i2__i2c_wait_idle
 46904 ;; This function is called by:
 46905 ;;		_i2c_eeprom_write
 46906 ;; This function uses a non-reentrant model
 46907 ;;
 46908                           
 46909                           	psect	text190
 46910  014DFE                     __ptext190:
 46911                           	opt stack 0
 46912  014DFE                     i2__i2c_write:
 46913                           	opt stack 13
 46914                           
 46915                           ;incstack = 0
 46916                           ;i2__i2c_write@slave_address stored from wreg
 46917  014DFE  6E09               	movwf	i2__i2c_write@slave_address,c
 46918                           
 46919                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 46920  014E00  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 46921                           
 46922                           ;i2c.c: 89: _i2c_start();
 46923  014E04  EC6D  F0AC         	call	i2__i2c_start	;wreg free
 46924                           
 46925                           ;i2c.c: 90: _i2c_wait_idle();
 46926  014E08  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 46927                           
 46928                           ;i2c.c: 91: _i2c_send(slave_address);
 46929  014E0C  5009               	movf	i2__i2c_write@slave_address,w,c
 46930  014E0E  EC71  F0AC         	call	i2__i2c_send
 46931                           
 46932                           ;i2c.c: 92: _i2c_wait_idle();
 46933  014E12  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 46934                           
 46935                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 46936  014E16  0E00               	movlw	0
 46937  014E18  6E0A               	movwf	i2__i2c_write@cntr,c
 46938  014E1A  D00E               	goto	i2l1158
 46939  014E1C                     
 46940                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 46941  014E1C  500A               	movf	i2__i2c_write@cntr,w,c
 46942  014E1E  0D01               	mullw	1
 46943  014E20  50F3               	movf	prodl,w,c
 46944  014E22  2406               	addwf	i2__i2c_write@data,w,c
 46945  014E24  6ED9               	movwf	fsr2l,c
 46946  014E26  50F4               	movf	prodh,w,c
 46947  014E28  2007               	addwfc	i2__i2c_write@data+1,w,c
 46948  014E2A  6EDA               	movwf	fsr2h,c
 46949  014E2C  50DF               	movf	indf2,w,c
 46950  014E2E  EC71  F0AC         	call	i2__i2c_send
 46951                           
 46952                           ;i2c.c: 97: _i2c_wait_idle();
 46953  014E32  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 46954  014E36  2A0A               	incf	i2__i2c_write@cntr,f,c
 46955  014E38                     i2l1158:
 46956  014E38  5008               	movf	i2__i2c_write@length,w,c
 46957  014E3A  5C0A               	subwf	i2__i2c_write@cntr,w,c
 46958  014E3C  A0D8               	btfss	status,0,c
 46959  014E3E  D7EE               	goto	i2l1159
 46960                           
 46961                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 46962  014E40  EC69  F0AC         	call	i2__i2c_stop	;wreg free
 46963  014E44  0012               	return		;funcret
 46964  014E46                     __end_ofi2__i2c_write:
 46965                           	opt stack 0
 46966                           tosu	equ	0xFFF
 46967                           tosh	equ	0xFFE
 46968                           tosl	equ	0xFFD
 46969                           pclatu	equ	0xFFB
 46970                           pclath	equ	0xFFA
 46971                           tblptru	equ	0xFF8
 46972                           tblptrh	equ	0xFF7
 46973                           tblptrl	equ	0xFF6
 46974                           tablat	equ	0xFF5
 46975                           prodh	equ	0xFF4
 46976                           prodl	equ	0xFF3
 46977                           intcon	equ	0xFF2
 46978                           indf0	equ	0xFEF
 46979                           postinc0	equ	0xFEE
 46980                           fsr0h	equ	0xFEA
 46981                           fsr0l	equ	0xFE9
 46982                           wreg	equ	0xFE8
 46983                           indf1	equ	0xFE7
 46984                           postinc1	equ	0xFE6
 46985                           postdec1	equ	0xFE5
 46986                           plusw1	equ	0xFE3
 46987                           fsr1h	equ	0xFE2
 46988                           fsr1l	equ	0xFE1
 46989                           indf2	equ	0xFDF
 46990                           postinc2	equ	0xFDE
 46991                           postdec2	equ	0xFDD
 46992                           plusw2	equ	0xFDB
 46993                           fsr2h	equ	0xFDA
 46994                           fsr2l	equ	0xFD9
 46995                           status	equ	0xFD8
 46996                           
 46997 ;; *************** function i2__i2c_eeprom_busy *****************
 46998 ;; Defined at:
 46999 ;;		line 169 in file "i2c.c"
 47000 ;; Parameters:    Size  Location     Type
 47001 ;;		None
 47002 ;; Auto vars:     Size  Location     Type
 47003 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 47004 ;; Return value:  Size  Location     Type
 47005 ;;                  1    wreg      unsigned char 
 47006 ;; Registers used:
 47007 ;;		wreg, status,2, status,0, cstack
 47008 ;; Tracked objects:
 47009 ;;		On entry : 0/0
 47010 ;;		On exit  : 0/0
 47011 ;;		Unchanged: 0/0
 47012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47017 ;;Total ram usage:        1 bytes
 47018 ;; Hardware stack levels used:    1
 47019 ;; Hardware stack levels required when called:    1
 47020 ;; This function calls:
 47021 ;;		i2__i2c_send
 47022 ;;		i2__i2c_start
 47023 ;;		i2__i2c_stop
 47024 ;;		i2__i2c_wait_idle
 47025 ;; This function is called by:
 47026 ;;		_i2c_eeprom_write
 47027 ;; This function uses a non-reentrant model
 47028 ;;
 47029                           
 47030                           	psect	text191
 47031  0155CE                     __ptext191:
 47032                           	opt stack 0
 47033  0155CE                     i2__i2c_eeprom_busy:
 47034                           	opt stack 13
 47035                           
 47036                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 47037                           
 47038                           ;incstack = 0
 47039  0155CE  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47040                           
 47041                           ;i2c.c: 173: _i2c_start();
 47042  0155D2  EC6D  F0AC         	call	i2__i2c_start	;wreg free
 47043                           
 47044                           ;i2c.c: 174: _i2c_wait_idle();
 47045  0155D6  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47046                           
 47047                           ;i2c.c: 175: _i2c_send(0b10100000);
 47048  0155DA  0EA0               	movlw	160
 47049  0155DC  EC71  F0AC         	call	i2__i2c_send
 47050                           
 47051                           ;i2c.c: 176: _i2c_wait_idle();
 47052  0155E0  EC28  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47053                           
 47054                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 47055  0155E4  0E00               	movlw	0
 47056  0155E6  BCC5               	btfsc	4037,6,c	;volatile
 47057  0155E8  0E01               	movlw	1
 47058  0155EA  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 47059                           
 47060                           ;i2c.c: 181: _i2c_stop();
 47061  0155EC  EC69  F0AC         	call	i2__i2c_stop	;wreg free
 47062                           
 47063                           ;i2c.c: 183: return 0;
 47064  0155F0  0E00               	movlw	0
 47065  0155F2  0012               	return	
 47066  0155F4                     __end_ofi2__i2c_eeprom_busy:
 47067                           	opt stack 0
 47068                           tosu	equ	0xFFF
 47069                           tosh	equ	0xFFE
 47070                           tosl	equ	0xFFD
 47071                           pclatu	equ	0xFFB
 47072                           pclath	equ	0xFFA
 47073                           tblptru	equ	0xFF8
 47074                           tblptrh	equ	0xFF7
 47075                           tblptrl	equ	0xFF6
 47076                           tablat	equ	0xFF5
 47077                           prodh	equ	0xFF4
 47078                           prodl	equ	0xFF3
 47079                           intcon	equ	0xFF2
 47080                           indf0	equ	0xFEF
 47081                           postinc0	equ	0xFEE
 47082                           fsr0h	equ	0xFEA
 47083                           fsr0l	equ	0xFE9
 47084                           wreg	equ	0xFE8
 47085                           indf1	equ	0xFE7
 47086                           postinc1	equ	0xFE6
 47087                           postdec1	equ	0xFE5
 47088                           plusw1	equ	0xFE3
 47089                           fsr1h	equ	0xFE2
 47090                           fsr1l	equ	0xFE1
 47091                           indf2	equ	0xFDF
 47092                           postinc2	equ	0xFDE
 47093                           postdec2	equ	0xFDD
 47094                           plusw2	equ	0xFDB
 47095                           fsr2h	equ	0xFDA
 47096                           fsr2l	equ	0xFD9
 47097                           status	equ	0xFD8
 47098                           
 47099 ;; *************** function i2__i2c_wait_idle *****************
 47100 ;; Defined at:
 47101 ;;		line 40 in file "i2c.c"
 47102 ;; Parameters:    Size  Location     Type
 47103 ;;		None
 47104 ;; Auto vars:     Size  Location     Type
 47105 ;;		None
 47106 ;; Return value:  Size  Location     Type
 47107 ;;                  1    wreg      void 
 47108 ;; Registers used:
 47109 ;;		wreg, status,2, status,0
 47110 ;; Tracked objects:
 47111 ;;		On entry : 0/0
 47112 ;;		On exit  : 0/0
 47113 ;;		Unchanged: 0/0
 47114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47117 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47118 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47119 ;;Total ram usage:        5 bytes
 47120 ;; Hardware stack levels used:    1
 47121 ;; This function calls:
 47122 ;;		Nothing
 47123 ;; This function is called by:
 47124 ;;		i2__i2c_write
 47125 ;;		i2__i2c_eeprom_busy
 47126 ;; This function uses a non-reentrant model
 47127 ;;
 47128                           
 47129                           	psect	text192
 47130  014850                     __ptext192:
 47131                           	opt stack 0
 47132  014850                     i2__i2c_wait_idle:
 47133                           	opt stack 13
 47134                           
 47135                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 47136                           
 47137                           ;incstack = 0
 47138  014850  A4C7               	btfss	4039,2,c	;volatile
 47139  014852  D003               	goto	i2u1303_40
 47140  014854  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47141  014856  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 47142  014858  D001               	goto	i2u1303_48
 47143  01485A                     i2u1303_40:
 47144  01485A  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47145  01485C                     i2u1303_48:
 47146  01485C  A0C5               	btfss	4037,0,c	;volatile
 47147  01485E  D003               	goto	i2u1304_40
 47148  014860  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47149  014862  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 47150  014864  D001               	goto	i2u1304_48
 47151  014866                     i2u1304_40:
 47152  014866  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47153  014868                     i2u1304_48:
 47154  014868  A2C5               	btfss	4037,1,c	;volatile
 47155  01486A  D003               	goto	i2u1305_40
 47156  01486C  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47157  01486E  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 47158  014870  D001               	goto	i2u1305_48
 47159  014872                     i2u1305_40:
 47160  014872  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47161  014874                     i2u1305_48:
 47162  014874  A4C5               	btfss	4037,2,c	;volatile
 47163  014876  D003               	goto	i2u1306_40
 47164  014878  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47165  01487A  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 47166  01487C  D001               	goto	i2u1306_48
 47167  01487E                     i2u1306_40:
 47168  01487E  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47169  014880                     i2u1306_48:
 47170  014880  A6C5               	btfss	4037,3,c	;volatile
 47171  014882  D003               	goto	i2u1307_40
 47172  014884  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47173  014886  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 47174  014888  D001               	goto	i2u1307_48
 47175  01488A                     i2u1307_40:
 47176  01488A  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47177  01488C                     i2u1307_48:
 47178  01488C  A8C5               	btfss	4037,4,c	;volatile
 47179  01488E  D002               	goto	i2u1308_40
 47180  014890  0E01               	movlw	1
 47181  014892  D001               	goto	i2u1308_46
 47182  014894                     i2u1308_40:
 47183  014894  0E00               	movlw	0
 47184  014896                     i2u1308_46:
 47185  014896  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 47186  014898  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 47187  01489A  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 47188  01489C  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 47189  01489E  1001               	iorwf	??i2__i2c_wait_idle,w,c
 47190  0148A0  0900               	iorlw	0
 47191  0148A2  B4D8               	btfsc	status,2,c
 47192  0148A4  0012               	return	
 47193  0148A6  D7D4               	goto	i2__i2c_wait_idle
 47194  0148A8                     __end_ofi2__i2c_wait_idle:
 47195                           	opt stack 0
 47196                           tosu	equ	0xFFF
 47197                           tosh	equ	0xFFE
 47198                           tosl	equ	0xFFD
 47199                           pclatu	equ	0xFFB
 47200                           pclath	equ	0xFFA
 47201                           tblptru	equ	0xFF8
 47202                           tblptrh	equ	0xFF7
 47203                           tblptrl	equ	0xFF6
 47204                           tablat	equ	0xFF5
 47205                           prodh	equ	0xFF4
 47206                           prodl	equ	0xFF3
 47207                           intcon	equ	0xFF2
 47208                           indf0	equ	0xFEF
 47209                           postinc0	equ	0xFEE
 47210                           fsr0h	equ	0xFEA
 47211                           fsr0l	equ	0xFE9
 47212                           wreg	equ	0xFE8
 47213                           indf1	equ	0xFE7
 47214                           postinc1	equ	0xFE6
 47215                           postdec1	equ	0xFE5
 47216                           plusw1	equ	0xFE3
 47217                           fsr1h	equ	0xFE2
 47218                           fsr1l	equ	0xFE1
 47219                           indf2	equ	0xFDF
 47220                           postinc2	equ	0xFDE
 47221                           postdec2	equ	0xFDD
 47222                           plusw2	equ	0xFDB
 47223                           fsr2h	equ	0xFDA
 47224                           fsr2l	equ	0xFD9
 47225                           status	equ	0xFD8
 47226                           
 47227 ;; *************** function i2__i2c_stop *****************
 47228 ;; Defined at:
 47229 ;;		line 63 in file "i2c.c"
 47230 ;; Parameters:    Size  Location     Type
 47231 ;;		None
 47232 ;; Auto vars:     Size  Location     Type
 47233 ;;		None
 47234 ;; Return value:  Size  Location     Type
 47235 ;;                  1    wreg      void 
 47236 ;; Registers used:
 47237 ;;		None
 47238 ;; Tracked objects:
 47239 ;;		On entry : 0/0
 47240 ;;		On exit  : 0/0
 47241 ;;		Unchanged: 0/0
 47242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47247 ;;Total ram usage:        0 bytes
 47248 ;; Hardware stack levels used:    1
 47249 ;; This function calls:
 47250 ;;		Nothing
 47251 ;; This function is called by:
 47252 ;;		i2__i2c_write
 47253 ;;		i2__i2c_eeprom_busy
 47254 ;; This function uses a non-reentrant model
 47255 ;;
 47256                           
 47257                           	psect	text193
 47258  0158D2                     __ptext193:
 47259                           	opt stack 0
 47260  0158D2                     i2__i2c_stop:
 47261                           	opt stack 13
 47262                           
 47263                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 47264                           
 47265                           ;incstack = 0
 47266  0158D2  84C5               	bsf	4037,2,c	;volatile
 47267  0158D4  A4C5               	btfss	4037,2,c	;volatile
 47268  0158D6  0012               	return	
 47269  0158D8  D7FD               	goto	i2l1141
 47270  0158DA                     __end_ofi2__i2c_stop:
 47271                           	opt stack 0
 47272                           tosu	equ	0xFFF
 47273                           tosh	equ	0xFFE
 47274                           tosl	equ	0xFFD
 47275                           pclatu	equ	0xFFB
 47276                           pclath	equ	0xFFA
 47277                           tblptru	equ	0xFF8
 47278                           tblptrh	equ	0xFF7
 47279                           tblptrl	equ	0xFF6
 47280                           tablat	equ	0xFF5
 47281                           prodh	equ	0xFF4
 47282                           prodl	equ	0xFF3
 47283                           intcon	equ	0xFF2
 47284                           indf0	equ	0xFEF
 47285                           postinc0	equ	0xFEE
 47286                           fsr0h	equ	0xFEA
 47287                           fsr0l	equ	0xFE9
 47288                           wreg	equ	0xFE8
 47289                           indf1	equ	0xFE7
 47290                           postinc1	equ	0xFE6
 47291                           postdec1	equ	0xFE5
 47292                           plusw1	equ	0xFE3
 47293                           fsr1h	equ	0xFE2
 47294                           fsr1l	equ	0xFE1
 47295                           indf2	equ	0xFDF
 47296                           postinc2	equ	0xFDE
 47297                           postdec2	equ	0xFDD
 47298                           plusw2	equ	0xFDB
 47299                           fsr2h	equ	0xFDA
 47300                           fsr2l	equ	0xFD9
 47301                           status	equ	0xFD8
 47302                           
 47303 ;; *************** function i2__i2c_start *****************
 47304 ;; Defined at:
 47305 ;;		line 45 in file "i2c.c"
 47306 ;; Parameters:    Size  Location     Type
 47307 ;;		None
 47308 ;; Auto vars:     Size  Location     Type
 47309 ;;		None
 47310 ;; Return value:  Size  Location     Type
 47311 ;;                  1    wreg      void 
 47312 ;; Registers used:
 47313 ;;		None
 47314 ;; Tracked objects:
 47315 ;;		On entry : 0/0
 47316 ;;		On exit  : 0/0
 47317 ;;		Unchanged: 0/0
 47318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47323 ;;Total ram usage:        0 bytes
 47324 ;; Hardware stack levels used:    1
 47325 ;; This function calls:
 47326 ;;		Nothing
 47327 ;; This function is called by:
 47328 ;;		i2__i2c_write
 47329 ;;		i2__i2c_eeprom_busy
 47330 ;; This function uses a non-reentrant model
 47331 ;;
 47332                           
 47333                           	psect	text194
 47334  0158DA                     __ptext194:
 47335                           	opt stack 0
 47336  0158DA                     i2__i2c_start:
 47337                           	opt stack 13
 47338                           
 47339                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 47340                           
 47341                           ;incstack = 0
 47342  0158DA  80C5               	bsf	4037,0,c	;volatile
 47343  0158DC  A0C5               	btfss	4037,0,c	;volatile
 47344  0158DE  0012               	return	
 47345  0158E0  D7FD               	goto	i2l1126
 47346  0158E2                     __end_ofi2__i2c_start:
 47347                           	opt stack 0
 47348                           tosu	equ	0xFFF
 47349                           tosh	equ	0xFFE
 47350                           tosl	equ	0xFFD
 47351                           pclatu	equ	0xFFB
 47352                           pclath	equ	0xFFA
 47353                           tblptru	equ	0xFF8
 47354                           tblptrh	equ	0xFF7
 47355                           tblptrl	equ	0xFF6
 47356                           tablat	equ	0xFF5
 47357                           prodh	equ	0xFF4
 47358                           prodl	equ	0xFF3
 47359                           intcon	equ	0xFF2
 47360                           indf0	equ	0xFEF
 47361                           postinc0	equ	0xFEE
 47362                           fsr0h	equ	0xFEA
 47363                           fsr0l	equ	0xFE9
 47364                           wreg	equ	0xFE8
 47365                           indf1	equ	0xFE7
 47366                           postinc1	equ	0xFE6
 47367                           postdec1	equ	0xFE5
 47368                           plusw1	equ	0xFE3
 47369                           fsr1h	equ	0xFE2
 47370                           fsr1l	equ	0xFE1
 47371                           indf2	equ	0xFDF
 47372                           postinc2	equ	0xFDE
 47373                           postdec2	equ	0xFDD
 47374                           plusw2	equ	0xFDB
 47375                           fsr2h	equ	0xFDA
 47376                           fsr2l	equ	0xFD9
 47377                           status	equ	0xFD8
 47378                           
 47379 ;; *************** function i2__i2c_send *****************
 47380 ;; Defined at:
 47381 ;;		line 51 in file "i2c.c"
 47382 ;; Parameters:    Size  Location     Type
 47383 ;;  dat             1    wreg     unsigned char 
 47384 ;; Auto vars:     Size  Location     Type
 47385 ;;  dat             1    0[COMRAM] unsigned char 
 47386 ;; Return value:  Size  Location     Type
 47387 ;;                  1    wreg      void 
 47388 ;; Registers used:
 47389 ;;		wreg
 47390 ;; Tracked objects:
 47391 ;;		On entry : 0/0
 47392 ;;		On exit  : 0/0
 47393 ;;		Unchanged: 0/0
 47394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47399 ;;Total ram usage:        1 bytes
 47400 ;; Hardware stack levels used:    1
 47401 ;; This function calls:
 47402 ;;		Nothing
 47403 ;; This function is called by:
 47404 ;;		i2__i2c_write
 47405 ;;		i2__i2c_eeprom_busy
 47406 ;; This function uses a non-reentrant model
 47407 ;;
 47408                           
 47409                           	psect	text195
 47410  0158E2                     __ptext195:
 47411                           	opt stack 0
 47412  0158E2                     i2__i2c_send:
 47413                           	opt stack 13
 47414                           
 47415                           ;incstack = 0
 47416                           ;i2__i2c_send@dat stored from wreg
 47417  0158E2  6E01               	movwf	i2__i2c_send@dat,c
 47418                           
 47419                           ;i2c.c: 53: SSP1BUF = dat;
 47420  0158E4  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 47421  0158E8  0012               	return		;funcret
 47422  0158EA                     __end_ofi2__i2c_send:
 47423                           	opt stack 0
 47424                           tosu	equ	0xFFF
 47425                           tosh	equ	0xFFE
 47426                           tosl	equ	0xFFD
 47427                           pclatu	equ	0xFFB
 47428                           pclath	equ	0xFFA
 47429                           tblptru	equ	0xFF8
 47430                           tblptrh	equ	0xFF7
 47431                           tblptrl	equ	0xFF6
 47432                           tablat	equ	0xFF5
 47433                           prodh	equ	0xFF4
 47434                           prodl	equ	0xFF3
 47435                           intcon	equ	0xFF2
 47436                           indf0	equ	0xFEF
 47437                           postinc0	equ	0xFEE
 47438                           fsr0h	equ	0xFEA
 47439                           fsr0l	equ	0xFE9
 47440                           wreg	equ	0xFE8
 47441                           indf1	equ	0xFE7
 47442                           postinc1	equ	0xFE6
 47443                           postdec1	equ	0xFE5
 47444                           plusw1	equ	0xFE3
 47445                           fsr1h	equ	0xFE2
 47446                           fsr1l	equ	0xFE1
 47447                           indf2	equ	0xFDF
 47448                           postinc2	equ	0xFDE
 47449                           postdec2	equ	0xFDD
 47450                           plusw2	equ	0xFDB
 47451                           fsr2h	equ	0xFDA
 47452                           fsr2l	equ	0xFD9
 47453                           status	equ	0xFD8
 47454                           
 47455 ;; *************** function _USBDeviceTasks *****************
 47456 ;; Defined at:
 47457 ;;		line 477 in file "usb_device.c"
 47458 ;; Parameters:    Size  Location     Type
 47459 ;;		None
 47460 ;; Auto vars:     Size  Location     Type
 47461 ;;  i               1   30[COMRAM] unsigned char 
 47462 ;; Return value:  Size  Location     Type
 47463 ;;                  1    wreg      void 
 47464 ;; Registers used:
 47465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47466 ;; Tracked objects:
 47467 ;;		On entry : 0/0
 47468 ;;		On exit  : 0/0
 47469 ;;		Unchanged: 0/0
 47470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47475 ;;Total ram usage:        1 bytes
 47476 ;; Hardware stack levels used:    1
 47477 ;; Hardware stack levels required when called:    8
 47478 ;; This function calls:
 47479 ;;		_USBCtrlEPAllowStatusStage
 47480 ;;		_USBCtrlEPService
 47481 ;;		_USBIncrement1msInternalTimers
 47482 ;;		_USBStallHandler
 47483 ;;		_USBSuspend
 47484 ;;		_USBWakeFromSuspend
 47485 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47486 ;;		i2_USBDeviceInit
 47487 ;; This function is called by:
 47488 ;;		_SYS_InterruptHigh
 47489 ;; This function uses a non-reentrant model
 47490 ;;
 47491                           
 47492                           	psect	text196
 47493  00FCBA                     __ptext196:
 47494                           	opt stack 0
 47495  00FCBA                     _USBDeviceTasks:
 47496                           	opt stack 9
 47497                           
 47498                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 47499                           
 47500                           ;incstack = 0
 47501  00FCBA  045E               	decf	_USBDeviceState,w,c	;volatile
 47502  00FCBC  B4D8               	btfsc	status,2,c
 47503                           
 47504                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 47505  00FCBE  BA65               	btfsc	3941,5,c	;volatile
 47506  00FCC0  D007               	goto	i2l155
 47507                           
 47508                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 47509  00FCC2  0E00               	movlw	0
 47510  00FCC4  6E62               	movwf	3938,c	;volatile
 47511                           
 47512                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 47513  00FCC6  010F               	movlb	15	; () banked
 47514  00FCC8  8136               	bsf	54,0,b	;volatile
 47515                           
 47516                           ; BSR set to: 15
 47517                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 47518  00FCCA  8936               	bsf	54,4,b	;volatile
 47519                           
 47520                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 47521  00FCCC  0E02               	movlw	2
 47522  00FCCE  6E5E               	movwf	_USBDeviceState,c	;volatile
 47523  00FCD0                     i2l155:
 47524                           
 47525                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 47526                           
 47527                           ; BSR set to: 15
 47528                           
 47529                           ; BSR set to: 15
 47530  00FCD0  A462               	btfss	3938,2,c	;volatile
 47531  00FCD2  D006               	goto	i2l156
 47532  00FCD4  010F               	movlb	15	; () banked
 47533  00FCD6  A536               	btfss	54,2,b	;volatile
 47534  00FCD8  D003               	goto	i2l156
 47535                           
 47536                           ; BSR set to: 15
 47537                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 47538  00FCDA  9462               	bcf	3938,2,c	;volatile
 47539                           
 47540                           ; BSR set to: 15
 47541                           ;usb_device.c: 640: USBWakeFromSuspend();
 47542  00FCDC  ECBD  F0A8         	call	_USBWakeFromSuspend	;wreg free
 47543  00FCE0                     i2l156:
 47544                           
 47545                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 47546  00FCE0  A265               	btfss	3941,1,c	;volatile
 47547  00FCE2  D002               	goto	i2l157
 47548                           
 47549                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 47550  00FCE4  98A1               	bcf	4001,4,c	;volatile
 47551                           
 47552                           ;usb_device.c: 650: return;
 47553  00FCE6  0012               	return	
 47554  00FCE8                     i2l157:
 47555                           
 47556                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 47557  00FCE8  A062               	btfss	3938,0,c	;volatile
 47558  00FCEA  D009               	goto	i2l159
 47559  00FCEC  010F               	movlb	15	; () banked
 47560  00FCEE  A136               	btfss	54,0,b	;volatile
 47561  00FCF0  D006               	goto	i2l159
 47562                           
 47563                           ; BSR set to: 15
 47564                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 47565  00FCF2  EC00  F07F         	call	i2_USBDeviceInit	;wreg free
 47566                           
 47567                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 47568  00FCF6  88A0               	bsf	4000,4,c	;volatile
 47569                           
 47570                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 47571  00FCF8  0E04               	movlw	4
 47572  00FCFA  6E5E               	movwf	_USBDeviceState,c	;volatile
 47573                           
 47574                           ;usb_device.c: 681: (UIR &= 0xFE);
 47575  00FCFC  9062               	bcf	3938,0,c	;volatile
 47576  00FCFE                     i2l159:
 47577                           
 47578                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 47579  00FCFE  A862               	btfss	3938,4,c	;volatile
 47580  00FD00  D004               	goto	i2l160
 47581  00FD02  010F               	movlb	15	; () banked
 47582  00FD04  B936               	btfsc	54,4,b	;volatile
 47583                           
 47584                           ; BSR set to: 15
 47585                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 47586  00FD06  ECBD  F0A9         	call	_USBSuspend	;wreg free
 47587  00FD0A                     i2l160:
 47588                           
 47589                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 47590  00FD0A  AC62               	btfss	3938,6,c	;volatile
 47591  00FD0C  D01C               	goto	i2l164
 47592                           
 47593                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 47594  00FD0E  010F               	movlb	15	; () banked
 47595  00FD10  AD36               	btfss	54,6,b	;volatile
 47596  00FD12  D00E               	goto	i2l162
 47597                           
 47598                           ; BSR set to: 15
 47599                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 47600  00FD14  0E00               	movlw	0
 47601  00FD16  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47602  00FD18  0E73               	movlw	115
 47603  00FD1A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47604  00FD1C  0E00               	movlw	0
 47605  00FD1E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47606  00FD20  0E00               	movlw	0
 47607  00FD22  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47608  00FD24  0E00               	movlw	0
 47609  00FD26  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47610  00FD28  0E01               	movlw	1
 47611  00FD2A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47612  00FD2C  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47613  00FD30                     i2l162:
 47614                           
 47615                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 47616  00FD30  9C62               	bcf	3938,6,c	;volatile
 47617                           
 47618                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 47619  00FD32  EC74  F0AB         	call	_USBIncrement1msInternalTimers	;wreg free
 47620                           
 47621                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 47622  00FD36  0101               	movlb	1	; () banked
 47623  00FD38  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 47624  00FD3A  A4D8               	btfss	status,2,c
 47625                           
 47626                           ; BSR set to: 1
 47627                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 47628  00FD3C  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 47629                           
 47630                           ; BSR set to: 1
 47631                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 47632                           
 47633                           ; BSR set to: 1
 47634  00FD3E  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 47635  00FD40  B4D8               	btfsc	status,2,c
 47636                           
 47637                           ; BSR set to: 1
 47638                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 47639  00FD42  ECAE  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47640  00FD46                     i2l164:
 47641                           
 47642                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 47643  00FD46  AA62               	btfss	3938,5,c	;volatile
 47644  00FD48  D004               	goto	i2l165
 47645  00FD4A  010F               	movlb	15	; () banked
 47646  00FD4C  BB36               	btfsc	54,5,b	;volatile
 47647                           
 47648                           ; BSR set to: 15
 47649                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 47650  00FD4E  ECAC  F0A7         	call	_USBStallHandler	;wreg free
 47651  00FD52                     i2l165:
 47652                           
 47653                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 47654  00FD52  A262               	btfss	3938,1,c	;volatile
 47655  00FD54  D012               	goto	i2l166
 47656  00FD56  010F               	movlb	15	; () banked
 47657  00FD58  A336               	btfss	54,1,b	;volatile
 47658  00FD5A  D00F               	goto	i2l166
 47659                           
 47660                           ; BSR set to: 15
 47661                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 47662  00FD5C  0E7F               	movlw	127
 47663  00FD5E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47664  00FD60  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47665  00FD62  0E00               	movlw	0
 47666  00FD64  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47667  00FD66  0E00               	movlw	0
 47668  00FD68  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47669  00FD6A  0E00               	movlw	0
 47670  00FD6C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47671  00FD6E  0E01               	movlw	1
 47672  00FD70  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47673  00FD72  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47674                           
 47675                           ;usb_device.c: 759: {UEIR = 0;};
 47676  00FD76  0E00               	movlw	0
 47677  00FD78  6E63               	movwf	3939,c	;volatile
 47678  00FD7A                     i2l166:
 47679                           
 47680                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 47681  00FD7A  0E04               	movlw	4
 47682  00FD7C  605E               	cpfslt	_USBDeviceState,c	;volatile
 47683  00FD7E  D002               	goto	i2l167
 47684                           
 47685                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 47686  00FD80  98A1               	bcf	4001,4,c	;volatile
 47687                           
 47688                           ;usb_device.c: 777: return;
 47689  00FD82  0012               	return	
 47690  00FD84                     i2l167:
 47691                           
 47692                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 47693  00FD84  010F               	movlb	15	; () banked
 47694  00FD86  A736               	btfss	54,3,b	;volatile
 47695  00FD88  D039               	goto	i2u1706_40
 47696                           
 47697                           ; BSR set to: 15
 47698                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 47699  00FD8A  0E00               	movlw	0
 47700  00FD8C  6E1F               	movwf	USBDeviceTasks@i,c
 47701  00FD8E                     i2l17409:
 47702                           
 47703                           ; BSR set to: 15
 47704  00FD8E  0E03               	movlw	3
 47705  00FD90  641F               	cpfsgt	USBDeviceTasks@i,c
 47706  00FD92  D001               	goto	i2l169
 47707  00FD94  D033               	goto	i2u1706_40
 47708  00FD96                     i2l169:
 47709                           
 47710                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 47711  00FD96  A662               	btfss	3938,3,c	;volatile
 47712  00FD98  D031               	goto	i2u1706_40
 47713                           
 47714                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 47715  00FD9A  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 47716                           
 47717                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 47718  00FD9E  0101               	movlb	1	; () banked
 47719  00FDA0  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 47720  00FDA2  32E8               	rrcf	wreg,f,c
 47721  00FDA4  32E8               	rrcf	wreg,f,c
 47722  00FDA6  0B0F               	andlw	15
 47723  00FDA8  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 47724                           
 47725                           ; BSR set to: 1
 47726                           ;usb_device.c: 793: (UIR &= 0xF7);
 47727  00FDAA  9662               	bcf	3938,3,c	;volatile
 47728                           
 47729                           ; BSR set to: 1
 47730                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 47731  00FDAC  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 47732  00FDAE  D007               	goto	i2l172
 47733                           
 47734                           ; BSR set to: 1
 47735                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 47736  00FDB0  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47737  00FDB2  0D01               	mullw	1
 47738  00FDB4  0E39               	movlw	low _ep_data_out
 47739  00FDB6  24F3               	addwf	prodl,w,c
 47740  00FDB8  6ED9               	movwf	fsr2l,c
 47741  00FDBA  0E01               	movlw	high _ep_data_out
 47742  00FDBC  D006               	goto	L77
 47743  00FDBE                     i2l172:
 47744                           
 47745                           ; BSR set to: 1
 47746                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 47747                           
 47748                           ; BSR set to: 1
 47749  00FDBE  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47750  00FDC0  0D01               	mullw	1
 47751  00FDC2  0E3C               	movlw	low _ep_data_in
 47752  00FDC4  24F3               	addwf	prodl,w,c
 47753  00FDC6  6ED9               	movwf	fsr2l,c
 47754  00FDC8  0E01               	movlw	high _ep_data_in
 47755  00FDCA                     L77:
 47756  00FDCA  20F4               	addwfc	prodh,w,c
 47757  00FDCC  6EDA               	movwf	fsr2h,c
 47758  00FDCE  70DF               	btg	indf2,0,c
 47759                           
 47760                           ; BSR set to: 1
 47761                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 47762                           
 47763                           ; BSR set to: 1
 47764  00FDD0  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47765  00FDD2  A4D8               	btfss	status,2,c
 47766  00FDD4  D003               	goto	i2l174
 47767                           
 47768                           ; BSR set to: 1
 47769                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 47770  00FDD6  EC3F  F099         	call	_USBCtrlEPService	;wreg free
 47771                           
 47772                           ;usb_device.c: 813: }
 47773  00FDDA  D00E               	goto	i2l176
 47774  00FDDC                     i2l174:
 47775                           
 47776                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 47777  00FDDC  0E00               	movlw	0
 47778  00FDDE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47779  00FDE0  0E72               	movlw	114
 47780  00FDE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47781  00FDE4  0EC1               	movlw	low _USTATcopy
 47782  00FDE6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47783  00FDE8  0E01               	movlw	high _USTATcopy
 47784  00FDEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47785  00FDEC  0E00               	movlw	0
 47786  00FDEE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47787  00FDF0  0E00               	movlw	0
 47788  00FDF2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47789  00FDF4  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47790  00FDF8                     i2l176:
 47791  00FDF8  2A1F               	incf	USBDeviceTasks@i,f,c
 47792  00FDFA  D7C9               	goto	i2l17409
 47793  00FDFC                     i2u1706_40:
 47794                           
 47795                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 47796  00FDFC  98A1               	bcf	4001,4,c	;volatile
 47797  00FDFE  0012               	return		;funcret
 47798  00FE00                     __end_of_USBDeviceTasks:
 47799                           	opt stack 0
 47800                           tosu	equ	0xFFF
 47801                           tosh	equ	0xFFE
 47802                           tosl	equ	0xFFD
 47803                           pclatu	equ	0xFFB
 47804                           pclath	equ	0xFFA
 47805                           tblptru	equ	0xFF8
 47806                           tblptrh	equ	0xFF7
 47807                           tblptrl	equ	0xFF6
 47808                           tablat	equ	0xFF5
 47809                           prodh	equ	0xFF4
 47810                           prodl	equ	0xFF3
 47811                           intcon	equ	0xFF2
 47812                           indf0	equ	0xFEF
 47813                           postinc0	equ	0xFEE
 47814                           fsr0h	equ	0xFEA
 47815                           fsr0l	equ	0xFE9
 47816                           wreg	equ	0xFE8
 47817                           indf1	equ	0xFE7
 47818                           postinc1	equ	0xFE6
 47819                           postdec1	equ	0xFE5
 47820                           plusw1	equ	0xFE3
 47821                           fsr1h	equ	0xFE2
 47822                           fsr1l	equ	0xFE1
 47823                           indf2	equ	0xFDF
 47824                           postinc2	equ	0xFDE
 47825                           postdec2	equ	0xFDD
 47826                           plusw2	equ	0xFDB
 47827                           fsr2h	equ	0xFDA
 47828                           fsr2l	equ	0xFD9
 47829                           status	equ	0xFD8
 47830                           
 47831 ;; *************** function i2_USBDeviceInit *****************
 47832 ;; Defined at:
 47833 ;;		line 277 in file "usb_device.c"
 47834 ;; Parameters:    Size  Location     Type
 47835 ;;		None
 47836 ;; Auto vars:     Size  Location     Type
 47837 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 47838 ;; Return value:  Size  Location     Type
 47839 ;;                  1    wreg      void 
 47840 ;; Registers used:
 47841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47842 ;; Tracked objects:
 47843 ;;		On entry : 0/0
 47844 ;;		On exit  : 0/0
 47845 ;;		Unchanged: 0/0
 47846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47851 ;;Total ram usage:        1 bytes
 47852 ;; Hardware stack levels used:    1
 47853 ;; Hardware stack levels required when called:    1
 47854 ;; This function calls:
 47855 ;;		i2_memset
 47856 ;; This function is called by:
 47857 ;;		_USBDeviceTasks
 47858 ;; This function uses a non-reentrant model
 47859 ;;
 47860                           
 47861                           	psect	text197
 47862  00FE00                     __ptext197:
 47863                           	opt stack 0
 47864  00FE00                     i2_USBDeviceInit:
 47865                           	opt stack 15
 47866                           
 47867                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 47868                           
 47869                           ;incstack = 0
 47870  00FE00  98A0               	bcf	4000,4,c	;volatile
 47871                           
 47872                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 47873  00FE02  0E00               	movlw	0
 47874  00FE04  6E63               	movwf	3939,c	;volatile
 47875                           
 47876                           ;usb_device.c: 291: {UIR = 0;};
 47877  00FE06  0E00               	movlw	0
 47878  00FE08  6E62               	movwf	3938,c	;volatile
 47879                           
 47880                           ;usb_device.c: 294: UEP0 = 0;
 47881  00FE0A  0E00               	movlw	0
 47882  00FE0C  010F               	movlb	15	; () banked
 47883  00FE0E  6F26               	movwf	38,b	;volatile
 47884                           
 47885                           ; BSR set to: 15
 47886                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 47887  00FE10  0E27               	movlw	39
 47888  00FE12  6E01               	movwf	i2memset@p1,c
 47889  00FE14  0E0F               	movlw	15
 47890  00FE16  6E02               	movwf	i2memset@p1+1,c
 47891  00FE18  0E00               	movlw	0
 47892  00FE1A  6E04               	movwf	i2memset@c+1,c
 47893  00FE1C  0E00               	movlw	0
 47894  00FE1E  6E03               	movwf	i2memset@c,c
 47895  00FE20  0E00               	movlw	0
 47896  00FE22  6E06               	movwf	i2memset@n+1,c
 47897  00FE24  0E02               	movlw	2
 47898  00FE26  6E05               	movwf	i2memset@n,c
 47899  00FE28  EC2F  F0AA         	call	i2_memset	;wreg free
 47900                           
 47901                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 47902  00FE2C  0E16               	movlw	22
 47903  00FE2E  010F               	movlb	15	; () banked
 47904  00FE30  6F39               	movwf	57,b	;volatile
 47905                           
 47906                           ; BSR set to: 15
 47907  00FE32  0E9F               	movlw	159
 47908  00FE34  6F37               	movwf	55,b	;volatile
 47909                           
 47910                           ; BSR set to: 15
 47911  00FE36  0E7B               	movlw	123
 47912  00FE38  6F36               	movwf	54,b	;volatile
 47913                           
 47914                           ; BSR set to: 15
 47915                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 47916  00FE3A  0E00               	movlw	0
 47917  00FE3C  6E09               	movwf	i2USBDeviceInit@i,c
 47918  00FE3E                     i2l17203:
 47919                           
 47920                           ; BSR set to: 15
 47921  00FE3E  0E0B               	movlw	11
 47922  00FE40  6409               	cpfsgt	i2USBDeviceInit@i,c
 47923  00FE42  D001               	goto	i2l145
 47924  00FE44  D00E               	goto	i2u1674_40
 47925  00FE46                     i2l145:
 47926                           
 47927                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 47928                           
 47929                           ; BSR set to: 15
 47930  00FE46  5009               	movf	i2USBDeviceInit@i,w,c
 47931  00FE48  0D04               	mullw	4
 47932  00FE4A  0E00               	movlw	0
 47933  00FE4C  24F3               	addwf	prodl,w,c
 47934  00FE4E  6ED9               	movwf	fsr2l,c
 47935  00FE50  0E0D               	movlw	13
 47936  00FE52  20F4               	addwfc	prodh,w,c
 47937  00FE54  6EDA               	movwf	fsr2h,c
 47938  00FE56  6ADE               	clrf	postinc2,c
 47939  00FE58  6ADE               	clrf	postinc2,c
 47940  00FE5A  6ADE               	clrf	postinc2,c
 47941  00FE5C  6ADD               	clrf	postdec2,c
 47942  00FE5E  2A09               	incf	i2USBDeviceInit@i,f,c
 47943  00FE60  D7EE               	goto	i2l17203
 47944  00FE62                     i2u1674_40:
 47945                           
 47946                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 47947  00FE62  8C65               	bsf	3941,6,c	;volatile
 47948                           
 47949                           ;usb_device.c: 316: UADDR = 0x00;
 47950  00FE64  0E00               	movlw	0
 47951  00FE66  010F               	movlb	15	; () banked
 47952  00FE68  6F38               	movwf	56,b	;volatile
 47953                           
 47954                           ; BSR set to: 15
 47955                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 47956  00FE6A  9865               	bcf	3941,4,c	;volatile
 47957                           
 47958                           ; BSR set to: 15
 47959                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 47960  00FE6C  9C65               	bcf	3941,6,c	;volatile
 47961  00FE6E                     
 47962                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 47963                           
 47964                           ; BSR set to: 15
 47965  00FE6E  9662               	bcf	3938,3,c	;volatile
 47966                           
 47967                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 47968  00FE70  0E00               	movlw	0
 47969  00FE72  6E55               	movwf	_inPipes+3,c	;volatile
 47970                           
 47971                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 47972  00FE74  0E00               	movlw	0
 47973  00FE76  0101               	movlb	1	; () banked
 47974  00FE78  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 47975                           
 47976                           ; BSR set to: 1
 47977                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 47978  00FE7A  0E00               	movlw	0
 47979  00FE7C  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 47980  00FE7E  0E00               	movlw	0
 47981  00FE80  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 47982                           
 47983                           ; BSR set to: 1
 47984                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 47985  00FE82  B662               	btfsc	3938,3,c	;volatile
 47986  00FE84  D7F4               	goto	i2l147
 47987                           
 47988                           ; BSR set to: 1
 47989                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 47990                           
 47991                           ; BSR set to: 1
 47992  00FE86  0E01               	movlw	1
 47993  00FE88  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 47994                           
 47995                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 47996  00FE8A  0E01               	movlw	1
 47997  00FE8C  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 47998                           
 47999                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 48000  00FE8E  0E00               	movlw	0
 48001  00FE90  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48002                           
 48003                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 48004  00FE92  0E00               	movlw	0
 48005  00FE94  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48006                           
 48007                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 48008  00FE96  0E00               	movlw	0
 48009  00FE98  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48010                           
 48011                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 48012  00FE9A  0E00               	movlw	0
 48013  00FE9C  6E09               	movwf	i2USBDeviceInit@i,c
 48014  00FE9E                     i2l17231:
 48015                           
 48016                           ; BSR set to: 1
 48017  00FE9E  0E02               	movlw	2
 48018  00FEA0  6409               	cpfsgt	i2USBDeviceInit@i,c
 48019  00FEA2  D001               	goto	i2l149
 48020  00FEA4  D02E               	goto	i2u1677_40
 48021  00FEA6                     i2l149:
 48022                           
 48023                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 48024                           
 48025                           ; BSR set to: 1
 48026  00FEA6  5009               	movf	i2USBDeviceInit@i,w,c
 48027  00FEA8  0D02               	mullw	2
 48028  00FEAA  0E1B               	movlw	low _pBDTEntryIn
 48029  00FEAC  24F3               	addwf	prodl,w,c
 48030  00FEAE  6ED9               	movwf	fsr2l,c
 48031  00FEB0  0E01               	movlw	high _pBDTEntryIn
 48032  00FEB2  20F4               	addwfc	prodh,w,c
 48033  00FEB4  6EDA               	movwf	fsr2h,c
 48034  00FEB6  0E00               	movlw	0
 48035  00FEB8  6EDE               	movwf	postinc2,c
 48036  00FEBA  0E00               	movlw	0
 48037  00FEBC  6EDD               	movwf	postdec2,c
 48038                           
 48039                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 48040  00FEBE  5009               	movf	i2USBDeviceInit@i,w,c
 48041  00FEC0  0D02               	mullw	2
 48042  00FEC2  0E21               	movlw	low _pBDTEntryOut
 48043  00FEC4  24F3               	addwf	prodl,w,c
 48044  00FEC6  6ED9               	movwf	fsr2l,c
 48045  00FEC8  0E01               	movlw	high _pBDTEntryOut
 48046  00FECA  20F4               	addwfc	prodh,w,c
 48047  00FECC  6EDA               	movwf	fsr2h,c
 48048  00FECE  0E00               	movlw	0
 48049  00FED0  6EDE               	movwf	postinc2,c
 48050  00FED2  0E00               	movlw	0
 48051  00FED4  6EDD               	movwf	postdec2,c
 48052                           
 48053                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 48054  00FED6  5009               	movf	i2USBDeviceInit@i,w,c
 48055  00FED8  0D01               	mullw	1
 48056  00FEDA  0E3C               	movlw	low _ep_data_in
 48057  00FEDC  24F3               	addwf	prodl,w,c
 48058  00FEDE  6ED9               	movwf	fsr2l,c
 48059  00FEE0  0E01               	movlw	high _ep_data_in
 48060  00FEE2  20F4               	addwfc	prodh,w,c
 48061  00FEE4  6EDA               	movwf	fsr2h,c
 48062  00FEE6  0E00               	movlw	0
 48063  00FEE8  6EDF               	movwf	indf2,c
 48064                           
 48065                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 48066  00FEEA  5009               	movf	i2USBDeviceInit@i,w,c
 48067  00FEEC  0D01               	mullw	1
 48068  00FEEE  0E39               	movlw	low _ep_data_out
 48069  00FEF0  24F3               	addwf	prodl,w,c
 48070  00FEF2  6ED9               	movwf	fsr2l,c
 48071  00FEF4  0E01               	movlw	high _ep_data_out
 48072  00FEF6  20F4               	addwfc	prodh,w,c
 48073  00FEF8  6EDA               	movwf	fsr2h,c
 48074  00FEFA  0E00               	movlw	0
 48075  00FEFC  6EDF               	movwf	indf2,c
 48076  00FEFE  2A09               	incf	i2USBDeviceInit@i,f,c
 48077  00FF00  D7CE               	goto	i2l17231
 48078  00FF02                     i2u1677_40:
 48079                           
 48080                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 48081  00FF02  0E08               	movlw	8
 48082  00FF04  0101               	movlb	1	; () banked
 48083  00FF06  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48084  00FF08  0E0D               	movlw	13
 48085  00FF0A  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48086                           
 48087                           ; BSR set to: 1
 48088                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 48089  00FF0C  0E16               	movlw	22
 48090  00FF0E  010F               	movlb	15	; () banked
 48091  00FF10  6F26               	movwf	38,b	;volatile
 48092                           
 48093                           ; BSR set to: 15
 48094                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 48095  00FF12  0E0D               	movlw	13
 48096  00FF14  010D               	movlb	13	; () banked
 48097  00FF16  6F03               	movwf	3,b	;volatile
 48098  00FF18  0E30               	movlw	48
 48099  00FF1A  6F02               	movwf	2,b	;volatile
 48100                           
 48101                           ; BSR set to: 13
 48102                           ;usb_device.c: 359: BDT[0].CNT = 8;
 48103  00FF1C  0E08               	movlw	8
 48104  00FF1E  6F01               	movwf	1,b	;volatile
 48105                           
 48106                           ; BSR set to: 13
 48107                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 48108  00FF20  0E04               	movlw	4
 48109  00FF22  6F00               	movwf	0,b	;volatile
 48110                           
 48111                           ; BSR set to: 13
 48112                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 48113  00FF24  8F00               	bsf	0,7,b	;volatile
 48114                           
 48115                           ; BSR set to: 13
 48116                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 48117  00FF26  0E00               	movlw	0
 48118  00FF28  0101               	movlb	1	; () banked
 48119  00FF2A  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 48120                           
 48121                           ; BSR set to: 1
 48122                           ;usb_device.c: 366: USB1msTickCount = 0;
 48123  00FF2C  0E00               	movlw	0
 48124  00FF2E  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 48125  00FF30  0E00               	movlw	0
 48126  00FF32  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 48127  00FF34  0E00               	movlw	0
 48128  00FF36  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 48129  00FF38  0E00               	movlw	0
 48130  00FF3A  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 48131                           
 48132                           ; BSR set to: 1
 48133                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 48134  00FF3C  0E00               	movlw	0
 48135  00FF3E  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48136                           
 48137                           ; BSR set to: 1
 48138                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 48139  00FF40  0E00               	movlw	0
 48140  00FF42  6E5E               	movwf	_USBDeviceState,c	;volatile
 48141                           
 48142                           ; BSR set to: 1
 48143  00FF44  0012               	return		;funcret
 48144  00FF46                     __end_ofi2_USBDeviceInit:
 48145                           	opt stack 0
 48146                           tosu	equ	0xFFF
 48147                           tosh	equ	0xFFE
 48148                           tosl	equ	0xFFD
 48149                           pclatu	equ	0xFFB
 48150                           pclath	equ	0xFFA
 48151                           tblptru	equ	0xFF8
 48152                           tblptrh	equ	0xFF7
 48153                           tblptrl	equ	0xFF6
 48154                           tablat	equ	0xFF5
 48155                           prodh	equ	0xFF4
 48156                           prodl	equ	0xFF3
 48157                           intcon	equ	0xFF2
 48158                           indf0	equ	0xFEF
 48159                           postinc0	equ	0xFEE
 48160                           fsr0h	equ	0xFEA
 48161                           fsr0l	equ	0xFE9
 48162                           wreg	equ	0xFE8
 48163                           indf1	equ	0xFE7
 48164                           postinc1	equ	0xFE6
 48165                           postdec1	equ	0xFE5
 48166                           plusw1	equ	0xFE3
 48167                           fsr1h	equ	0xFE2
 48168                           fsr1l	equ	0xFE1
 48169                           indf2	equ	0xFDF
 48170                           postinc2	equ	0xFDE
 48171                           postdec2	equ	0xFDD
 48172                           plusw2	equ	0xFDB
 48173                           fsr2h	equ	0xFDA
 48174                           fsr2l	equ	0xFD9
 48175                           status	equ	0xFD8
 48176                           
 48177 ;; *************** function _USBWakeFromSuspend *****************
 48178 ;; Defined at:
 48179 ;;		line 2305 in file "usb_device.c"
 48180 ;; Parameters:    Size  Location     Type
 48181 ;;		None
 48182 ;; Auto vars:     Size  Location     Type
 48183 ;;		None
 48184 ;; Return value:  Size  Location     Type
 48185 ;;                  1    wreg      void 
 48186 ;; Registers used:
 48187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48188 ;; Tracked objects:
 48189 ;;		On entry : 0/0
 48190 ;;		On exit  : 0/0
 48191 ;;		Unchanged: 0/0
 48192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48197 ;;Total ram usage:        0 bytes
 48198 ;; Hardware stack levels used:    1
 48199 ;; Hardware stack levels required when called:    4
 48200 ;; This function calls:
 48201 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48202 ;; This function is called by:
 48203 ;;		_USBDeviceTasks
 48204 ;; This function uses a non-reentrant model
 48205 ;;
 48206                           
 48207                           	psect	text198
 48208  01517A                     __ptext198:
 48209                           	opt stack 0
 48210  01517A                     _USBWakeFromSuspend:
 48211                           	opt stack 12
 48212                           
 48213                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 48214                           
 48215                           ; BSR set to: 1
 48216                           ;incstack = 0
 48217  01517A  0E00               	movlw	0
 48218  01517C  0101               	movlb	1	; () banked
 48219  01517E  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48220                           
 48221                           ; BSR set to: 1
 48222                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 48223  015180  0E00               	movlw	0
 48224  015182  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48225  015184  0E74               	movlw	116
 48226  015186  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48227  015188  0E00               	movlw	0
 48228  01518A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48229  01518C  0E00               	movlw	0
 48230  01518E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48231  015190  0E00               	movlw	0
 48232  015192  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48233  015194  0E00               	movlw	0
 48234  015196  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48235  015198  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48236                           
 48237                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 48238  01519C  9265               	bcf	3941,1,c	;volatile
 48239                           
 48240                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 48241  01519E  010F               	movlb	15	; () banked
 48242  0151A0  9536               	bcf	54,2,b	;volatile
 48243                           
 48244                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 48245  0151A2  D001               	goto	i2l315
 48246  0151A4                     
 48247                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 48248                           
 48249                           ; BSR set to: 15
 48250  0151A4  9462               	bcf	3938,2,c	;volatile
 48251  0151A6                     i2l315:
 48252  0151A6  B462               	btfsc	3938,2,c	;volatile
 48253  0151A8  D7FD               	goto	i2l316
 48254                           
 48255                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 48256  0151AA  0E00               	movlw	0
 48257  0151AC  0101               	movlb	1	; () banked
 48258  0151AE  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48259                           
 48260                           ; BSR set to: 1
 48261  0151B0  0012               	return		;funcret
 48262  0151B2                     __end_of_USBWakeFromSuspend:
 48263                           	opt stack 0
 48264                           tosu	equ	0xFFF
 48265                           tosh	equ	0xFFE
 48266                           tosl	equ	0xFFD
 48267                           pclatu	equ	0xFFB
 48268                           pclath	equ	0xFFA
 48269                           tblptru	equ	0xFF8
 48270                           tblptrh	equ	0xFF7
 48271                           tblptrl	equ	0xFF6
 48272                           tablat	equ	0xFF5
 48273                           prodh	equ	0xFF4
 48274                           prodl	equ	0xFF3
 48275                           intcon	equ	0xFF2
 48276                           indf0	equ	0xFEF
 48277                           postinc0	equ	0xFEE
 48278                           fsr0h	equ	0xFEA
 48279                           fsr0l	equ	0xFE9
 48280                           wreg	equ	0xFE8
 48281                           indf1	equ	0xFE7
 48282                           postinc1	equ	0xFE6
 48283                           postdec1	equ	0xFE5
 48284                           plusw1	equ	0xFE3
 48285                           fsr1h	equ	0xFE2
 48286                           fsr1l	equ	0xFE1
 48287                           indf2	equ	0xFDF
 48288                           postinc2	equ	0xFDE
 48289                           postdec2	equ	0xFDD
 48290                           plusw2	equ	0xFDB
 48291                           fsr2h	equ	0xFDA
 48292                           fsr2l	equ	0xFD9
 48293                           status	equ	0xFD8
 48294                           
 48295 ;; *************** function _USBSuspend *****************
 48296 ;; Defined at:
 48297 ;;		line 2247 in file "usb_device.c"
 48298 ;; Parameters:    Size  Location     Type
 48299 ;;		None
 48300 ;; Auto vars:     Size  Location     Type
 48301 ;;		None
 48302 ;; Return value:  Size  Location     Type
 48303 ;;                  1    wreg      void 
 48304 ;; Registers used:
 48305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48306 ;; Tracked objects:
 48307 ;;		On entry : 0/0
 48308 ;;		On exit  : 0/0
 48309 ;;		Unchanged: 0/0
 48310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48315 ;;Total ram usage:        0 bytes
 48316 ;; Hardware stack levels used:    1
 48317 ;; Hardware stack levels required when called:    4
 48318 ;; This function calls:
 48319 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48320 ;; This function is called by:
 48321 ;;		_USBDeviceTasks
 48322 ;; This function uses a non-reentrant model
 48323 ;;
 48324                           
 48325                           	psect	text199
 48326  01537A                     __ptext199:
 48327                           	opt stack 0
 48328  01537A                     _USBSuspend:
 48329                           	opt stack 12
 48330                           
 48331                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 48332                           
 48333                           ; BSR set to: 1
 48334                           ;incstack = 0
 48335  01537A  010F               	movlb	15	; () banked
 48336  01537C  8536               	bsf	54,2,b	;volatile
 48337                           
 48338                           ; BSR set to: 15
 48339                           ;usb_device.c: 2273: (UIR &= 0xEF);
 48340  01537E  9862               	bcf	3938,4,c	;volatile
 48341                           
 48342                           ; BSR set to: 15
 48343                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 48344  015380  8265               	bsf	3941,1,c	;volatile
 48345                           
 48346                           ; BSR set to: 15
 48347                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 48348  015382  0E01               	movlw	1
 48349  015384  0101               	movlb	1	; () banked
 48350  015386  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48351                           
 48352                           ; BSR set to: 1
 48353                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 48354  015388  0E00               	movlw	0
 48355  01538A  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48356                           
 48357                           ; BSR set to: 1
 48358                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 48359  01538C  0E00               	movlw	0
 48360  01538E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48361  015390  0E75               	movlw	117
 48362  015392  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48363  015394  0E00               	movlw	0
 48364  015396  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48365  015398  0E00               	movlw	0
 48366  01539A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48367  01539C  0E00               	movlw	0
 48368  01539E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48369  0153A0  0E00               	movlw	0
 48370  0153A2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48371  0153A4  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48372  0153A8  0012               	return		;funcret
 48373  0153AA                     __end_of_USBSuspend:
 48374                           	opt stack 0
 48375                           tosu	equ	0xFFF
 48376                           tosh	equ	0xFFE
 48377                           tosl	equ	0xFFD
 48378                           pclatu	equ	0xFFB
 48379                           pclath	equ	0xFFA
 48380                           tblptru	equ	0xFF8
 48381                           tblptrh	equ	0xFF7
 48382                           tblptrl	equ	0xFF6
 48383                           tablat	equ	0xFF5
 48384                           prodh	equ	0xFF4
 48385                           prodl	equ	0xFF3
 48386                           intcon	equ	0xFF2
 48387                           indf0	equ	0xFEF
 48388                           postinc0	equ	0xFEE
 48389                           fsr0h	equ	0xFEA
 48390                           fsr0l	equ	0xFE9
 48391                           wreg	equ	0xFE8
 48392                           indf1	equ	0xFE7
 48393                           postinc1	equ	0xFE6
 48394                           postdec1	equ	0xFE5
 48395                           plusw1	equ	0xFE3
 48396                           fsr1h	equ	0xFE2
 48397                           fsr1l	equ	0xFE1
 48398                           indf2	equ	0xFDF
 48399                           postinc2	equ	0xFDE
 48400                           postdec2	equ	0xFDD
 48401                           plusw2	equ	0xFDB
 48402                           fsr2h	equ	0xFDA
 48403                           fsr2l	equ	0xFD9
 48404                           status	equ	0xFD8
 48405                           
 48406 ;; *************** function _USBStallHandler *****************
 48407 ;; Defined at:
 48408 ;;		line 2204 in file "usb_device.c"
 48409 ;; Parameters:    Size  Location     Type
 48410 ;;		None
 48411 ;; Auto vars:     Size  Location     Type
 48412 ;;		None
 48413 ;; Return value:  Size  Location     Type
 48414 ;;                  1    wreg      void 
 48415 ;; Registers used:
 48416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48417 ;; Tracked objects:
 48418 ;;		On entry : 0/0
 48419 ;;		On exit  : 0/0
 48420 ;;		Unchanged: 0/0
 48421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48426 ;;Total ram usage:        1 bytes
 48427 ;; Hardware stack levels used:    1
 48428 ;; This function calls:
 48429 ;;		Nothing
 48430 ;; This function is called by:
 48431 ;;		_USBDeviceTasks
 48432 ;; This function uses a non-reentrant model
 48433 ;;
 48434                           
 48435                           	psect	text200
 48436  014F58                     __ptext200:
 48437                           	opt stack 0
 48438  014F58                     _USBStallHandler:
 48439                           	opt stack 16
 48440                           
 48441                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 48442                           
 48443                           ;incstack = 0
 48444  014F58  010F               	movlb	15	; () banked
 48445  014F5A  A126               	btfss	38,0,b	;volatile
 48446  014F5C  D01D               	goto	i2l307
 48447                           
 48448                           ; BSR set to: 15
 48449                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 48450  014F5E  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48451  014F62  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48452  014F66  0E80               	movlw	128
 48453  014F68  18DE               	xorwf	postinc2,w,c
 48454  014F6A  A4D8               	btfss	status,2,c
 48455  014F6C  D014               	goto	i2l308
 48456                           
 48457                           ; BSR set to: 15
 48458  014F6E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48459  014F72  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48460  014F76  0E84               	movlw	132
 48461  014F78  18DE               	xorwf	postinc2,w,c
 48462  014F7A  A4D8               	btfss	status,2,c
 48463  014F7C  D00C               	goto	i2l308
 48464                           
 48465                           ; BSR set to: 15
 48466                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 48467  014F7E  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48468  014F82  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48469  014F86  0E0C               	movlw	12
 48470  014F88  6EDF               	movwf	indf2,c
 48471                           
 48472                           ; BSR set to: 15
 48473                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 48474  014F8A  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48475  014F8E  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48476  014F92  0E00               	movlw	0
 48477  014F94  8EDB               	bsf	plusw2,7,c
 48478  014F96                     i2l308:
 48479                           
 48480                           ; BSR set to: 15
 48481                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 48482                           
 48483                           ; BSR set to: 15
 48484  014F96  9126               	bcf	38,0,b	;volatile
 48485  014F98                     i2l307:
 48486                           
 48487                           ; BSR set to: 15
 48488                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 48489  014F98  9A62               	bcf	3938,5,c	;volatile
 48490                           
 48491                           ; BSR set to: 15
 48492  014F9A  0012               	return		;funcret
 48493  014F9C                     __end_of_USBStallHandler:
 48494                           	opt stack 0
 48495                           tosu	equ	0xFFF
 48496                           tosh	equ	0xFFE
 48497                           tosl	equ	0xFFD
 48498                           pclatu	equ	0xFFB
 48499                           pclath	equ	0xFFA
 48500                           tblptru	equ	0xFF8
 48501                           tblptrh	equ	0xFF7
 48502                           tblptrl	equ	0xFF6
 48503                           tablat	equ	0xFF5
 48504                           prodh	equ	0xFF4
 48505                           prodl	equ	0xFF3
 48506                           intcon	equ	0xFF2
 48507                           indf0	equ	0xFEF
 48508                           postinc0	equ	0xFEE
 48509                           fsr0h	equ	0xFEA
 48510                           fsr0l	equ	0xFE9
 48511                           wreg	equ	0xFE8
 48512                           indf1	equ	0xFE7
 48513                           postinc1	equ	0xFE6
 48514                           postdec1	equ	0xFE5
 48515                           plusw1	equ	0xFE3
 48516                           fsr1h	equ	0xFE2
 48517                           fsr1l	equ	0xFE1
 48518                           indf2	equ	0xFDF
 48519                           postinc2	equ	0xFDE
 48520                           postdec2	equ	0xFDD
 48521                           plusw2	equ	0xFDB
 48522                           fsr2h	equ	0xFDA
 48523                           fsr2l	equ	0xFD9
 48524                           status	equ	0xFD8
 48525                           
 48526 ;; *************** function _USBIncrement1msInternalTimers *****************
 48527 ;; Defined at:
 48528 ;;		line 3027 in file "usb_device.c"
 48529 ;; Parameters:    Size  Location     Type
 48530 ;;		None
 48531 ;; Auto vars:     Size  Location     Type
 48532 ;;		None
 48533 ;; Return value:  Size  Location     Type
 48534 ;;                  1    wreg      void 
 48535 ;; Registers used:
 48536 ;;		wreg, status,2, status,0
 48537 ;; Tracked objects:
 48538 ;;		On entry : 0/0
 48539 ;;		On exit  : 0/0
 48540 ;;		Unchanged: 0/0
 48541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48546 ;;Total ram usage:        0 bytes
 48547 ;; Hardware stack levels used:    1
 48548 ;; This function calls:
 48549 ;;		Nothing
 48550 ;; This function is called by:
 48551 ;;		_USBDeviceTasks
 48552 ;; This function uses a non-reentrant model
 48553 ;;
 48554                           
 48555                           	psect	text201
 48556  0156E8                     __ptext201:
 48557                           	opt stack 0
 48558  0156E8                     _USBIncrement1msInternalTimers:
 48559                           	opt stack 16
 48560                           
 48561                           ;usb_device.c: 3035: USB1msTickCount++;
 48562                           
 48563                           ; BSR set to: 15
 48564                           ;incstack = 0
 48565  0156E8  0E01               	movlw	1
 48566  0156EA  0101               	movlb	1	; () banked
 48567  0156EC  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 48568  0156EE  0E00               	movlw	0
 48569  0156F0  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 48570  0156F2  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 48571  0156F4  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 48572                           
 48573                           ; BSR set to: 1
 48574                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 48575  0156F6  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 48576  0156F8  A4D8               	btfss	status,2,c
 48577  0156FA  0012               	return	
 48578                           
 48579                           ; BSR set to: 1
 48580                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 48581  0156FC  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 48582                           
 48583                           ; BSR set to: 1
 48584                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 48585  0156FE  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 48586  015700  A4D8               	btfss	status,2,c
 48587  015702  0012               	return	
 48588                           
 48589                           ; BSR set to: 1
 48590                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 48591  015704  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48592                           
 48593                           ; BSR set to: 1
 48594  015706  0012               	return	
 48595  015708                     __end_of_USBIncrement1msInternalTimers:
 48596                           	opt stack 0
 48597                           tosu	equ	0xFFF
 48598                           tosh	equ	0xFFE
 48599                           tosl	equ	0xFFD
 48600                           pclatu	equ	0xFFB
 48601                           pclath	equ	0xFFA
 48602                           tblptru	equ	0xFF8
 48603                           tblptrh	equ	0xFF7
 48604                           tblptrl	equ	0xFF6
 48605                           tablat	equ	0xFF5
 48606                           prodh	equ	0xFF4
 48607                           prodl	equ	0xFF3
 48608                           intcon	equ	0xFF2
 48609                           indf0	equ	0xFEF
 48610                           postinc0	equ	0xFEE
 48611                           fsr0h	equ	0xFEA
 48612                           fsr0l	equ	0xFE9
 48613                           wreg	equ	0xFE8
 48614                           indf1	equ	0xFE7
 48615                           postinc1	equ	0xFE6
 48616                           postdec1	equ	0xFE5
 48617                           plusw1	equ	0xFE3
 48618                           fsr1h	equ	0xFE2
 48619                           fsr1l	equ	0xFE1
 48620                           indf2	equ	0xFDF
 48621                           postinc2	equ	0xFDE
 48622                           postdec2	equ	0xFDD
 48623                           plusw2	equ	0xFDB
 48624                           fsr2h	equ	0xFDA
 48625                           fsr2l	equ	0xFD9
 48626                           status	equ	0xFD8
 48627                           
 48628 ;; *************** function _USBCtrlEPService *****************
 48629 ;; Defined at:
 48630 ;;		line 2374 in file "usb_device.c"
 48631 ;; Parameters:    Size  Location     Type
 48632 ;;		None
 48633 ;; Auto vars:     Size  Location     Type
 48634 ;;		None
 48635 ;; Return value:  Size  Location     Type
 48636 ;;                  1    wreg      void 
 48637 ;; Registers used:
 48638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48639 ;; Tracked objects:
 48640 ;;		On entry : 0/0
 48641 ;;		On exit  : 0/0
 48642 ;;		Unchanged: 0/0
 48643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48648 ;;Total ram usage:        1 bytes
 48649 ;; Hardware stack levels used:    1
 48650 ;; Hardware stack levels required when called:    7
 48651 ;; This function calls:
 48652 ;;		_USBCtrlTrfInHandler
 48653 ;;		_USBCtrlTrfOutHandler
 48654 ;;		_USBCtrlTrfSetupHandler
 48655 ;;		i2_memcpy
 48656 ;; This function is called by:
 48657 ;;		_USBDeviceTasks
 48658 ;; This function uses a non-reentrant model
 48659 ;;
 48660                           
 48661                           	psect	text202
 48662  01327E                     __ptext202:
 48663                           	opt stack 0
 48664  01327E                     _USBCtrlEPService:
 48665                           	opt stack 9
 48666                           
 48667                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 48668                           
 48669                           ; BSR set to: 1
 48670                           ;incstack = 0
 48671  01327E  0E2D               	movlw	45
 48672  013280  0101               	movlb	1	; () banked
 48673  013282  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 48674                           
 48675                           ; BSR set to: 1
 48676                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 48677  013284  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 48678  013288  0EFD               	movlw	253
 48679  01328A  161E               	andwf	??_USBCtrlEPService,f,c
 48680  01328C  A4D8               	btfss	status,2,c
 48681  01328E  D03B               	goto	i2l321
 48682                           
 48683                           ; BSR set to: 1
 48684                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 48685  013290  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 48686  013294  90D8               	bcf	status,0,c
 48687  013296  321E               	rrcf	??_USBCtrlEPService,f,c
 48688  013298  0E3F               	movlw	63
 48689  01329A  161E               	andwf	??_USBCtrlEPService,f,c
 48690  01329C  501E               	movf	??_USBCtrlEPService,w,c
 48691  01329E  0D04               	mullw	4
 48692  0132A0  0E00               	movlw	0
 48693  0132A2  24F3               	addwf	prodl,w,c
 48694  0132A4  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 48695  0132A6  0E0D               	movlw	13
 48696  0132A8  20F4               	addwfc	prodh,w,c
 48697  0132AA  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 48698                           
 48699                           ; BSR set to: 1
 48700                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 48701  0132AC  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 48702  0132B0  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 48703                           
 48704                           ; BSR set to: 1
 48705                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 48706  0132B4  0E04               	movlw	4
 48707  0132B6  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 48708  0132B8  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 48709  0132BA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48710  0132BC  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 48711                           
 48712                           ; BSR set to: 1
 48713                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 48714  0132BE  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48715  0132C2  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48716  0132C6  30DF               	rrcf	223,w,c
 48717  0132C8  32E8               	rrcf	wreg,f,c
 48718  0132CA  0B0F               	andlw	15
 48719  0132CC  0A0D               	xorlw	13
 48720  0132CE  A4D8               	btfss	status,2,c
 48721  0132D0  D017               	goto	i2l322
 48722                           
 48723                           ; BSR set to: 1
 48724                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 48725  0132D2  0E30               	movlw	48
 48726  0132D4  6E01               	movwf	i2memcpy@d1,c
 48727  0132D6  0E0D               	movlw	13
 48728  0132D8  6E02               	movwf	i2memcpy@d1+1,c
 48729  0132DA  EE20 F002          	lfsr	2,2
 48730  0132DE  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 48731  0132E0  26D9               	addwf	fsr2l,f,c
 48732  0132E2  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 48733  0132E4  22DA               	addwfc	fsr2h,f,c
 48734  0132E6  CFDE F003          	movff	postinc2,i2memcpy@s1
 48735  0132EA  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 48736  0132EE  0E00               	movlw	0
 48737  0132F0  6E06               	movwf	i2memcpy@n+1,c
 48738  0132F2  0E08               	movlw	8
 48739  0132F4  6E05               	movwf	i2memcpy@n,c
 48740  0132F6  EC69  F0A2         	call	i2_memcpy	;wreg free
 48741                           
 48742                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 48743  0132FA  EC2A  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 48744                           
 48745                           ;usb_device.c: 2411: }
 48746  0132FE  0012               	return	
 48747  013300                     i2l322:
 48748                           
 48749                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 48750  013300  EC0A  F0A2         	call	_USBCtrlTrfOutHandler	;wreg free
 48751                           
 48752                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 48753  013304  0012               	return	
 48754  013306                     i2l321:
 48755                           
 48756                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 48757  013306  0101               	movlb	1	; () banked
 48758  013308  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 48759  01330A  0BFD               	andlw	253
 48760  01330C  0A04               	xorlw	4
 48761  01330E  A4D8               	btfss	status,2,c
 48762  013310  0012               	return	
 48763                           
 48764                           ; BSR set to: 1
 48765                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 48766  013312  EC10  F094         	call	_USBCtrlTrfInHandler	;wreg free
 48767  013316  0012               	return	
 48768  013318                     __end_of_USBCtrlEPService:
 48769                           	opt stack 0
 48770                           tosu	equ	0xFFF
 48771                           tosh	equ	0xFFE
 48772                           tosl	equ	0xFFD
 48773                           pclatu	equ	0xFFB
 48774                           pclath	equ	0xFFA
 48775                           tblptru	equ	0xFF8
 48776                           tblptrh	equ	0xFF7
 48777                           tblptrl	equ	0xFF6
 48778                           tablat	equ	0xFF5
 48779                           prodh	equ	0xFF4
 48780                           prodl	equ	0xFF3
 48781                           intcon	equ	0xFF2
 48782                           indf0	equ	0xFEF
 48783                           postinc0	equ	0xFEE
 48784                           fsr0h	equ	0xFEA
 48785                           fsr0l	equ	0xFE9
 48786                           wreg	equ	0xFE8
 48787                           indf1	equ	0xFE7
 48788                           postinc1	equ	0xFE6
 48789                           postdec1	equ	0xFE5
 48790                           plusw1	equ	0xFE3
 48791                           fsr1h	equ	0xFE2
 48792                           fsr1l	equ	0xFE1
 48793                           indf2	equ	0xFDF
 48794                           postinc2	equ	0xFDE
 48795                           postdec2	equ	0xFDD
 48796                           plusw2	equ	0xFDB
 48797                           fsr2h	equ	0xFDA
 48798                           fsr2l	equ	0xFD9
 48799                           status	equ	0xFD8
 48800                           
 48801 ;; *************** function i2_memcpy *****************
 48802 ;; Defined at:
 48803 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 48804 ;; Parameters:    Size  Location     Type
 48805 ;;  d1              2    0[COMRAM] PTR void 
 48806 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 48807 ;;		 -> msd_buffer(512), SetupPkt(8), 
 48808 ;;  s1              2    2[COMRAM] PTR const void 
 48809 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 48810 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 48811 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 48812 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 48813 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 48814 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 48815 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 48816 ;;  n               2    4[COMRAM] unsigned int 
 48817 ;; Auto vars:     Size  Location     Type
 48818 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 48819 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 48820 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 48821 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 48822 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 48823 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 48824 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 48825 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 48826 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 48827 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 48828 ;;		 -> msd_buffer(512), SetupPkt(8), 
 48829 ;;  memcpy          1   10[COMRAM] unsigned char 
 48830 ;; Return value:  Size  Location     Type
 48831 ;;                  2    0[COMRAM] PTR void 
 48832 ;; Registers used:
 48833 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 48834 ;; Tracked objects:
 48835 ;;		On entry : 0/0
 48836 ;;		On exit  : 0/0
 48837 ;;		Unchanged: 0/0
 48838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48839 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48840 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48842 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48843 ;;Total ram usage:       11 bytes
 48844 ;; Hardware stack levels used:    1
 48845 ;; This function calls:
 48846 ;;		Nothing
 48847 ;; This function is called by:
 48848 ;;		_USBCtrlEPService
 48849 ;; This function uses a non-reentrant model
 48850 ;;
 48851                           
 48852                           	psect	text203
 48853  0144D2                     __ptext203:
 48854                           	opt stack 0
 48855  0144D2                     i2_memcpy:
 48856                           	opt stack 15
 48857                           
 48858                           ;incstack = 0
 48859  0144D2  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 48860  0144D6  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 48861  0144DA  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 48862  0144DE  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 48863  0144E2  D01C               	goto	i2l3723
 48864  0144E4                     i2l16395:
 48865  0144E4  C009  FFF6         	movff	i2memcpy@s,tblptrl
 48866  0144E8  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 48867  0144EC  0E00               	movlw	low (__mediumconst shr (0+16))
 48868  0144EE  6EF8               	movwf	tblptru,c
 48869  0144F0  0E0E               	movlw	(high __ramtop+-1)
 48870  0144F2  64F7               	cpfsgt	tblptrh,c
 48871  0144F4  D003               	bra	i2u1572_47
 48872  0144F6  0008               	tblrd		*
 48873  0144F8  50F5               	movf	tablat,w,c
 48874  0144FA  D005               	bra	i2u1572_40
 48875  0144FC                     i2u1572_47:
 48876  0144FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 48877  014500  CFF7 FFEA          	movff	tblptrh,fsr0h
 48878  014504  50EF               	movf	indf0,w,c
 48879  014506                     i2u1572_40:
 48880  014506  6E0B               	movwf	i2memcpy@tmp,c
 48881  014508  4A09               	infsnz	i2memcpy@s,f,c
 48882  01450A  2A0A               	incf	i2memcpy@s+1,f,c
 48883  01450C  C007  FFD9         	movff	i2memcpy@d,fsr2l
 48884  014510  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 48885  014514  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 48886  014518  4A07               	infsnz	i2memcpy@d,f,c
 48887  01451A  2A08               	incf	i2memcpy@d+1,f,c
 48888  01451C                     i2l3723:
 48889  01451C  0605               	decf	i2memcpy@n,f,c
 48890  01451E  A0D8               	btfss	status,0,c
 48891  014520  0606               	decf	i2memcpy@n+1,f,c
 48892  014522  2805               	incf	i2memcpy@n,w,c
 48893  014524  E1DF               	bnz	i2l16395
 48894  014526  2806               	incf	i2memcpy@n+1,w,c
 48895  014528  B4D8               	btfsc	status,2,c
 48896  01452A  0012               	return	
 48897  01452C  D7DB               	goto	i2l3724
 48898  01452E                     __end_ofi2_memcpy:
 48899                           	opt stack 0
 48900                           tosu	equ	0xFFF
 48901                           tosh	equ	0xFFE
 48902                           tosl	equ	0xFFD
 48903                           pclatu	equ	0xFFB
 48904                           pclath	equ	0xFFA
 48905                           tblptru	equ	0xFF8
 48906                           tblptrh	equ	0xFF7
 48907                           tblptrl	equ	0xFF6
 48908                           tablat	equ	0xFF5
 48909                           prodh	equ	0xFF4
 48910                           prodl	equ	0xFF3
 48911                           intcon	equ	0xFF2
 48912                           indf0	equ	0xFEF
 48913                           postinc0	equ	0xFEE
 48914                           fsr0h	equ	0xFEA
 48915                           fsr0l	equ	0xFE9
 48916                           wreg	equ	0xFE8
 48917                           indf1	equ	0xFE7
 48918                           postinc1	equ	0xFE6
 48919                           postdec1	equ	0xFE5
 48920                           plusw1	equ	0xFE3
 48921                           fsr1h	equ	0xFE2
 48922                           fsr1l	equ	0xFE1
 48923                           indf2	equ	0xFDF
 48924                           postinc2	equ	0xFDE
 48925                           postdec2	equ	0xFDD
 48926                           plusw2	equ	0xFDB
 48927                           fsr2h	equ	0xFDA
 48928                           fsr2l	equ	0xFD9
 48929                           status	equ	0xFD8
 48930                           
 48931 ;; *************** function _USBCtrlTrfSetupHandler *****************
 48932 ;; Defined at:
 48933 ;;		line 2467 in file "usb_device.c"
 48934 ;; Parameters:    Size  Location     Type
 48935 ;;		None
 48936 ;; Auto vars:     Size  Location     Type
 48937 ;;		None
 48938 ;; Return value:  Size  Location     Type
 48939 ;;                  1    wreg      void 
 48940 ;; Registers used:
 48941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48942 ;; Tracked objects:
 48943 ;;		On entry : 0/0
 48944 ;;		On exit  : 0/0
 48945 ;;		Unchanged: 0/0
 48946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48951 ;;Total ram usage:        0 bytes
 48952 ;; Hardware stack levels used:    1
 48953 ;; Hardware stack levels required when called:    6
 48954 ;; This function calls:
 48955 ;;		_USBCheckStdRequest
 48956 ;;		_USBCtrlEPServiceComplete
 48957 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48958 ;; This function is called by:
 48959 ;;		_USBCtrlEPService
 48960 ;; This function uses a non-reentrant model
 48961 ;;
 48962                           
 48963                           	psect	text204
 48964  013854                     __ptext204:
 48965                           	opt stack 0
 48966  013854                     _USBCtrlTrfSetupHandler:
 48967                           	opt stack 9
 48968                           
 48969                           ;usb_device.c: 2472: shortPacketStatus = 0;
 48970                           
 48971                           ;incstack = 0
 48972  013854  0E00               	movlw	0
 48973  013856  0101               	movlb	1	; () banked
 48974  013858  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 48975                           
 48976                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 48977  01385A  0E00               	movlw	0
 48978  01385C  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 48979                           
 48980                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 48981  01385E  0E00               	movlw	0
 48982  013860  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48983                           
 48984                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 48985  013862  0E00               	movlw	0
 48986  013864  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48987                           
 48988                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 48989  013866  0E00               	movlw	0
 48990  013868  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 48991                           
 48992                           ;usb_device.c: 2477: controlTransferState = 0;
 48993  01386A  0E00               	movlw	0
 48994  01386C  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48995                           
 48996                           ; BSR set to: 1
 48997                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 48998  01386E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48999  013872  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49000  013876  0E7F               	movlw	127
 49001  013878  16DF               	andwf	indf2,f,c
 49002                           
 49003                           ; BSR set to: 1
 49004                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49005  01387A  0E04               	movlw	4
 49006  01387C  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49007  01387E  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49008  013880  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49009  013882  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49010                           
 49011                           ; BSR set to: 1
 49012                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49013  013884  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49014  013888  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49015  01388C  0E7F               	movlw	127
 49016  01388E  16DF               	andwf	indf2,f,c
 49017                           
 49018                           ; BSR set to: 1
 49019                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49020  013890  0E04               	movlw	4
 49021  013892  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49022  013894  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49023  013896  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49024  013898  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49025                           
 49026                           ; BSR set to: 1
 49027                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 49028  01389A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49029  01389E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49030  0138A2  0E7F               	movlw	127
 49031  0138A4  16DF               	andwf	indf2,f,c
 49032                           
 49033                           ; BSR set to: 1
 49034                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 49035  0138A6  0E00               	movlw	0
 49036  0138A8  6E55               	movwf	_inPipes+3,c	;volatile
 49037                           
 49038                           ; BSR set to: 1
 49039                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 49040  0138AA  0E00               	movlw	0
 49041  0138AC  6E57               	movwf	_inPipes+5,c	;volatile
 49042  0138AE  0E00               	movlw	0
 49043  0138B0  6E56               	movwf	_inPipes+4,c	;volatile
 49044                           
 49045                           ; BSR set to: 1
 49046                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 49047  0138B2  0E00               	movlw	0
 49048  0138B4  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49049                           
 49050                           ; BSR set to: 1
 49051                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 49052  0138B6  0E00               	movlw	0
 49053  0138B8  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49054  0138BA  0E00               	movlw	0
 49055  0138BC  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49056                           
 49057                           ; BSR set to: 1
 49058                           ;usb_device.c: 2502: USBCheckStdRequest();
 49059  0138BE  ECD2  F090         	call	_USBCheckStdRequest	;wreg free
 49060                           
 49061                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 49062  0138C2  0E00               	movlw	0
 49063  0138C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49064  0138C6  0E03               	movlw	3
 49065  0138C8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49066  0138CA  0E00               	movlw	0
 49067  0138CC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49068  0138CE  0E00               	movlw	0
 49069  0138D0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49070  0138D2  0E00               	movlw	0
 49071  0138D4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49072  0138D6  0E00               	movlw	0
 49073  0138D8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49074  0138DA  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49075                           
 49076                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 49077  0138DE  EC83  F08A         	call	_USBCtrlEPServiceComplete	;wreg free
 49078  0138E2  0012               	return		;funcret
 49079  0138E4                     __end_of_USBCtrlTrfSetupHandler:
 49080                           	opt stack 0
 49081                           tosu	equ	0xFFF
 49082                           tosh	equ	0xFFE
 49083                           tosl	equ	0xFFD
 49084                           pclatu	equ	0xFFB
 49085                           pclath	equ	0xFFA
 49086                           tblptru	equ	0xFF8
 49087                           tblptrh	equ	0xFF7
 49088                           tblptrl	equ	0xFF6
 49089                           tablat	equ	0xFF5
 49090                           prodh	equ	0xFF4
 49091                           prodl	equ	0xFF3
 49092                           intcon	equ	0xFF2
 49093                           indf0	equ	0xFEF
 49094                           postinc0	equ	0xFEE
 49095                           fsr0h	equ	0xFEA
 49096                           fsr0l	equ	0xFE9
 49097                           wreg	equ	0xFE8
 49098                           indf1	equ	0xFE7
 49099                           postinc1	equ	0xFE6
 49100                           postdec1	equ	0xFE5
 49101                           plusw1	equ	0xFE3
 49102                           fsr1h	equ	0xFE2
 49103                           fsr1l	equ	0xFE1
 49104                           indf2	equ	0xFDF
 49105                           postinc2	equ	0xFDE
 49106                           postdec2	equ	0xFDD
 49107                           plusw2	equ	0xFDB
 49108                           fsr2h	equ	0xFDA
 49109                           fsr2l	equ	0xFD9
 49110                           status	equ	0xFD8
 49111                           
 49112 ;; *************** function _USBCtrlEPServiceComplete *****************
 49113 ;; Defined at:
 49114 ;;		line 1618 in file "usb_device.c"
 49115 ;; Parameters:    Size  Location     Type
 49116 ;;		None
 49117 ;; Auto vars:     Size  Location     Type
 49118 ;;		None
 49119 ;; Return value:  Size  Location     Type
 49120 ;;                  1    wreg      void 
 49121 ;; Registers used:
 49122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49123 ;; Tracked objects:
 49124 ;;		On entry : 0/0
 49125 ;;		On exit  : 0/0
 49126 ;;		Unchanged: 0/0
 49127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49132 ;;Total ram usage:        0 bytes
 49133 ;; Hardware stack levels used:    1
 49134 ;; Hardware stack levels required when called:    2
 49135 ;; This function calls:
 49136 ;;		_USBCtrlEPAllowDataStage
 49137 ;;		_USBCtrlEPAllowStatusStage
 49138 ;; This function is called by:
 49139 ;;		_USBCtrlTrfSetupHandler
 49140 ;; This function uses a non-reentrant model
 49141 ;;
 49142                           
 49143                           	psect	text205
 49144  011506                     __ptext205:
 49145                           	opt stack 0
 49146  011506                     _USBCtrlEPServiceComplete:
 49147                           	opt stack 12
 49148                           
 49149                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 49150                           
 49151                           ;incstack = 0
 49152  011506  9865               	bcf	3941,4,c	;volatile
 49153                           
 49154                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 49155  011508  BE55               	btfsc	_inPipes+3,7,c	;volatile
 49156  01150A  D03A               	goto	i2l231
 49157                           
 49158                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 49159  01150C  0101               	movlb	1	; () banked
 49160  01150E  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 49161  011510  D00C               	goto	i2l232
 49162                           
 49163                           ; BSR set to: 1
 49164                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 49165  011512  0E02               	movlw	2
 49166  011514  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49167                           
 49168                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 49169  011516  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 49170  011518  B4D8               	btfsc	status,2,c
 49171                           
 49172                           ; BSR set to: 1
 49173                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 49174  01151A  EC8C  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 49175                           
 49176                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 49177  01151E  0E00               	movlw	0
 49178  011520  0101               	movlb	1	; () banked
 49179  011522  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49180                           
 49181                           ; BSR set to: 1
 49182                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 49183  011524  0E00               	movlw	0
 49184  011526  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49185                           
 49186                           ;usb_device.c: 1654: }
 49187  011528  0012               	return	
 49188  01152A                     i2l232:
 49189                           
 49190                           ; BSR set to: 1
 49191                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49192                           
 49193                           ; BSR set to: 1
 49194  01152A  EE20 F001          	lfsr	2,1
 49195  01152E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49196  011530  26D9               	addwf	fsr2l,f,c
 49197  011532  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49198  011534  22DA               	addwfc	fsr2h,f,c
 49199  011536  0E08               	movlw	8
 49200  011538  6EDF               	movwf	indf2,c
 49201                           
 49202                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49203  01153A  EE20 F002          	lfsr	2,2
 49204  01153E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49205  011540  26D9               	addwf	fsr2l,f,c
 49206  011542  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49207  011544  22DA               	addwfc	fsr2h,f,c
 49208  011546  0E30               	movlw	48
 49209  011548  6EDE               	movwf	postinc2,c
 49210  01154A  0E0D               	movlw	13
 49211  01154C  6EDD               	movwf	postdec2,c
 49212                           
 49213                           ; BSR set to: 1
 49214                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49215  01154E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49216  011552  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49217  011556  0E0C               	movlw	12
 49218  011558  6EDF               	movwf	indf2,c
 49219                           
 49220                           ; BSR set to: 1
 49221                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49222  01155A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49223  01155E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49224  011562  0E00               	movlw	0
 49225  011564  8EDB               	bsf	plusw2,7,c
 49226                           
 49227                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 49228  011566  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49229  01156A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49230  01156E  0E04               	movlw	4
 49231  011570  6EDF               	movwf	indf2,c
 49232                           
 49233                           ; BSR set to: 1
 49234                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49235  011572  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49236  011576  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49237  01157A  0E00               	movlw	0
 49238  01157C  8EDB               	bsf	plusw2,7,c
 49239                           
 49240                           ; BSR set to: 1
 49241                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 49242  01157E  0012               	return	
 49243  011580                     i2l231:
 49244                           
 49245                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 49246  011580  010D               	movlb	13	; () banked
 49247  011582  AF30               	btfss	48,7,b	;volatile
 49248  011584  D012               	goto	i2l236
 49249                           
 49250                           ; BSR set to: 13
 49251                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 49252  011586  0E01               	movlw	1
 49253  011588  0101               	movlb	1	; () banked
 49254  01158A  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49255                           
 49256                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 49257  01158C  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 49258  01158E  B4D8               	btfsc	status,2,c
 49259                           
 49260                           ; BSR set to: 1
 49261                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 49262  011590  EC8C  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 49263                           
 49264                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 49265  011594  0E00               	movlw	0
 49266  011596  0101               	movlb	1	; () banked
 49267  011598  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49268                           
 49269                           ; BSR set to: 1
 49270                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 49271  01159A  0E00               	movlw	0
 49272  01159C  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49273                           
 49274                           ; BSR set to: 1
 49275                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 49276  01159E  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49277  0115A0  A4D8               	btfss	status,2,c
 49278  0115A2  0012               	return	
 49279                           
 49280                           ; BSR set to: 1
 49281                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 49282  0115A4  ECAE  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49283                           
 49284                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 49285  0115A8  0012               	return	
 49286  0115AA                     i2l236:
 49287                           
 49288                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 49289  0115AA  0E02               	movlw	2
 49290  0115AC  0101               	movlb	1	; () banked
 49291  0115AE  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49292                           
 49293                           ; BSR set to: 1
 49294                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 49295  0115B0  EE20 F001          	lfsr	2,1
 49296  0115B4  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49297  0115B6  26D9               	addwf	fsr2l,f,c
 49298  0115B8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49299  0115BA  22DA               	addwfc	fsr2h,f,c
 49300  0115BC  0E08               	movlw	8
 49301  0115BE  6EDF               	movwf	indf2,c
 49302                           
 49303                           ; BSR set to: 1
 49304                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49305  0115C0  EE20 F002          	lfsr	2,2
 49306  0115C4  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49307  0115C6  26D9               	addwf	fsr2l,f,c
 49308  0115C8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49309  0115CA  22DA               	addwfc	fsr2h,f,c
 49310  0115CC  0E30               	movlw	48
 49311  0115CE  6EDE               	movwf	postinc2,c
 49312  0115D0  0E0D               	movlw	13
 49313  0115D2  6EDD               	movwf	postdec2,c
 49314                           
 49315                           ; BSR set to: 1
 49316                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49317  0115D4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49318  0115D8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49319  0115DC  0E04               	movlw	4
 49320  0115DE  6EDF               	movwf	indf2,c
 49321                           
 49322                           ; BSR set to: 1
 49323                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49324  0115E0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49325  0115E4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49326  0115E8  0E00               	movlw	0
 49327  0115EA  8EDB               	bsf	plusw2,7,c
 49328                           
 49329                           ; BSR set to: 1
 49330                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 49331  0115EC  0E00               	movlw	0
 49332  0115EE  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49333                           
 49334                           ; BSR set to: 1
 49335                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 49336  0115F0  0E00               	movlw	0
 49337  0115F2  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49338                           
 49339                           ; BSR set to: 1
 49340                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 49341  0115F4  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49342  0115F6  A4D8               	btfss	status,2,c
 49343  0115F8  0012               	return	
 49344                           
 49345                           ; BSR set to: 1
 49346                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 49347  0115FA  ECAE  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49348  0115FE  0012               	return	
 49349  011600                     __end_of_USBCtrlEPServiceComplete:
 49350                           	opt stack 0
 49351                           tosu	equ	0xFFF
 49352                           tosh	equ	0xFFE
 49353                           tosl	equ	0xFFD
 49354                           pclatu	equ	0xFFB
 49355                           pclath	equ	0xFFA
 49356                           tblptru	equ	0xFF8
 49357                           tblptrh	equ	0xFF7
 49358                           tblptrl	equ	0xFF6
 49359                           tablat	equ	0xFF5
 49360                           prodh	equ	0xFF4
 49361                           prodl	equ	0xFF3
 49362                           intcon	equ	0xFF2
 49363                           indf0	equ	0xFEF
 49364                           postinc0	equ	0xFEE
 49365                           fsr0h	equ	0xFEA
 49366                           fsr0l	equ	0xFE9
 49367                           wreg	equ	0xFE8
 49368                           indf1	equ	0xFE7
 49369                           postinc1	equ	0xFE6
 49370                           postdec1	equ	0xFE5
 49371                           plusw1	equ	0xFE3
 49372                           fsr1h	equ	0xFE2
 49373                           fsr1l	equ	0xFE1
 49374                           indf2	equ	0xFDF
 49375                           postinc2	equ	0xFDE
 49376                           postdec2	equ	0xFDD
 49377                           plusw2	equ	0xFDB
 49378                           fsr2h	equ	0xFDA
 49379                           fsr2l	equ	0xFD9
 49380                           status	equ	0xFD8
 49381                           
 49382 ;; *************** function _USBCtrlEPAllowDataStage *****************
 49383 ;; Defined at:
 49384 ;;		line 1490 in file "usb_device.c"
 49385 ;; Parameters:    Size  Location     Type
 49386 ;;		None
 49387 ;; Auto vars:     Size  Location     Type
 49388 ;;		None
 49389 ;; Return value:  Size  Location     Type
 49390 ;;                  1    wreg      void 
 49391 ;; Registers used:
 49392 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49393 ;; Tracked objects:
 49394 ;;		On entry : 0/0
 49395 ;;		On exit  : 0/0
 49396 ;;		Unchanged: 0/0
 49397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49402 ;;Total ram usage:        0 bytes
 49403 ;; Hardware stack levels used:    1
 49404 ;; Hardware stack levels required when called:    1
 49405 ;; This function calls:
 49406 ;;		_USBCtrlTrfTxService
 49407 ;; This function is called by:
 49408 ;;		_USBCtrlEPServiceComplete
 49409 ;; This function uses a non-reentrant model
 49410 ;;
 49411                           
 49412                           	psect	text206
 49413  013318                     __ptext206:
 49414                           	opt stack 0
 49415  013318                     _USBCtrlEPAllowDataStage:
 49416                           	opt stack 12
 49417                           
 49418                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 49419                           
 49420                           ;incstack = 0
 49421  013318  0E00               	movlw	0
 49422  01331A  0101               	movlb	1	; () banked
 49423  01331C  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49424                           
 49425                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 49426  01331E  0E00               	movlw	0
 49427  013320  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49428                           
 49429                           ; BSR set to: 1
 49430                           ;usb_device.c: 1495: if(controlTransferState == 2)
 49431  013322  0E02               	movlw	2
 49432  013324  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 49433  013326  A4D8               	btfss	status,2,c
 49434  013328  D01F               	goto	i2l220
 49435                           
 49436                           ; BSR set to: 1
 49437                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 49438  01332A  EE20 F001          	lfsr	2,1
 49439  01332E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49440  013330  26D9               	addwf	fsr2l,f,c
 49441  013332  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49442  013334  22DA               	addwfc	fsr2h,f,c
 49443  013336  0E08               	movlw	8
 49444  013338  6EDF               	movwf	indf2,c
 49445                           
 49446                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49447  01333A  EE20 F002          	lfsr	2,2
 49448  01333E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49449  013340  26D9               	addwf	fsr2l,f,c
 49450  013342  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49451  013344  22DA               	addwfc	fsr2h,f,c
 49452  013346  0E38               	movlw	56
 49453  013348  6EDE               	movwf	postinc2,c
 49454  01334A  0E0D               	movlw	13
 49455  01334C  6EDD               	movwf	postdec2,c
 49456                           
 49457                           ; BSR set to: 1
 49458                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 49459  01334E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49460  013352  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49461  013356  0E48               	movlw	72
 49462  013358  6EDF               	movwf	indf2,c
 49463                           
 49464                           ; BSR set to: 1
 49465                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49466  01335A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49467  01335E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49468  013362  0E00               	movlw	0
 49469  013364  8EDB               	bsf	plusw2,7,c
 49470                           
 49471                           ;usb_device.c: 1502: }
 49472  013366  0012               	return	
 49473  013368                     i2l220:
 49474                           
 49475                           ; BSR set to: 1
 49476                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 49477                           
 49478                           ; BSR set to: 1
 49479  013368  5056               	movf	_inPipes+4,w,c	;volatile
 49480  01336A  010D               	movlb	13	; () banked
 49481  01336C  5D36               	subwf	54,w,b	;volatile
 49482  01336E  5057               	movf	_inPipes+5,w,c	;volatile
 49483  013370  5937               	subwfb	55,w,b	;volatile
 49484  013372  B0D8               	btfsc	status,0,c
 49485  013374  D004               	goto	i2l222
 49486                           
 49487                           ; BSR set to: 13
 49488                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 49489  013376  CD36 F056          	movff	3382,_inPipes+4	;volatile
 49490  01337A  CD37 F057          	movff	3383,_inPipes+5	;volatile
 49491  01337E                     i2l222:
 49492                           
 49493                           ; BSR set to: 13
 49494                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 49495                           
 49496                           ; BSR set to: 13
 49497  01337E  ECA9  F091         	call	_USBCtrlTrfTxService	;wreg free
 49498                           
 49499                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 49500  013382  0101               	movlb	1	; () banked
 49501  013384  EE20 F002          	lfsr	2,2
 49502  013388  511B               	movf	_pBDTEntryIn& (0+255),w,b
 49503  01338A  26D9               	addwf	fsr2l,f,c
 49504  01338C  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49505  01338E  22DA               	addwfc	fsr2h,f,c
 49506  013390  0E38               	movlw	56
 49507  013392  6EDE               	movwf	postinc2,c
 49508  013394  0E0D               	movlw	13
 49509  013396  6EDD               	movwf	postdec2,c
 49510                           
 49511                           ; BSR set to: 1
 49512                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49513  013398  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49514  01339C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49515  0133A0  0E48               	movlw	72
 49516  0133A2  6EDF               	movwf	indf2,c
 49517                           
 49518                           ; BSR set to: 1
 49519                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49520  0133A4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49521  0133A8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49522  0133AC  0E00               	movlw	0
 49523  0133AE  8EDB               	bsf	plusw2,7,c
 49524  0133B0  0012               	return	
 49525  0133B2                     __end_of_USBCtrlEPAllowDataStage:
 49526                           	opt stack 0
 49527                           tosu	equ	0xFFF
 49528                           tosh	equ	0xFFE
 49529                           tosl	equ	0xFFD
 49530                           pclatu	equ	0xFFB
 49531                           pclath	equ	0xFFA
 49532                           tblptru	equ	0xFF8
 49533                           tblptrh	equ	0xFF7
 49534                           tblptrl	equ	0xFF6
 49535                           tablat	equ	0xFF5
 49536                           prodh	equ	0xFF4
 49537                           prodl	equ	0xFF3
 49538                           intcon	equ	0xFF2
 49539                           indf0	equ	0xFEF
 49540                           postinc0	equ	0xFEE
 49541                           fsr0h	equ	0xFEA
 49542                           fsr0l	equ	0xFE9
 49543                           wreg	equ	0xFE8
 49544                           indf1	equ	0xFE7
 49545                           postinc1	equ	0xFE6
 49546                           postdec1	equ	0xFE5
 49547                           plusw1	equ	0xFE3
 49548                           fsr1h	equ	0xFE2
 49549                           fsr1l	equ	0xFE1
 49550                           indf2	equ	0xFDF
 49551                           postinc2	equ	0xFDE
 49552                           postdec2	equ	0xFDD
 49553                           plusw2	equ	0xFDB
 49554                           fsr2h	equ	0xFDA
 49555                           fsr2l	equ	0xFD9
 49556                           status	equ	0xFD8
 49557                           
 49558 ;; *************** function _USBCheckStdRequest *****************
 49559 ;; Defined at:
 49560 ;;		line 2688 in file "usb_device.c"
 49561 ;; Parameters:    Size  Location     Type
 49562 ;;		None
 49563 ;; Auto vars:     Size  Location     Type
 49564 ;;		None
 49565 ;; Return value:  Size  Location     Type
 49566 ;;                  1    wreg      void 
 49567 ;; Registers used:
 49568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49569 ;; Tracked objects:
 49570 ;;		On entry : 0/0
 49571 ;;		On exit  : 0/0
 49572 ;;		Unchanged: 0/0
 49573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49578 ;;Total ram usage:        0 bytes
 49579 ;; Hardware stack levels used:    1
 49580 ;; Hardware stack levels required when called:    5
 49581 ;; This function calls:
 49582 ;;		_USBStdFeatureReqHandler
 49583 ;;		_USBStdGetDscHandler
 49584 ;;		_USBStdGetStatusHandler
 49585 ;;		_USBStdSetCfgHandler
 49586 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49587 ;; This function is called by:
 49588 ;;		_USBCtrlTrfSetupHandler
 49589 ;; This function uses a non-reentrant model
 49590 ;;
 49591                           
 49592                           	psect	text207
 49593  0121A4                     __ptext207:
 49594                           	opt stack 0
 49595  0121A4                     _USBCheckStdRequest:
 49596                           	opt stack 9
 49597                           
 49598                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 49599                           
 49600                           ; BSR set to: 1
 49601                           ;incstack = 0
 49602  0121A4  010D               	movlb	13	; () banked
 49603  0121A6  3930               	swapf	48,w,b	;volatile
 49604  0121A8  32E8               	rrcf	wreg,f,c
 49605  0121AA  0B03               	andlw	3
 49606  0121AC  0900               	iorlw	0
 49607  0121AE  A4D8               	btfss	status,2,c
 49608  0121B0  0012               	return	
 49609  0121B2  D042               	goto	i2l355
 49610  0121B4                     i2l356:
 49611                           
 49612                           ; BSR set to: 13
 49613                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 49614  0121B4  8E55               	bsf	_inPipes+3,7,c	;volatile
 49615                           
 49616                           ; BSR set to: 13
 49617                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 49618  0121B6  0E08               	movlw	8
 49619  0121B8  6E5E               	movwf	_USBDeviceState,c	;volatile
 49620                           
 49621                           ;usb_device.c: 2698: break;
 49622  0121BA  0012               	return	
 49623  0121BC                     
 49624                           ; BSR set to: 13
 49625                           ;usb_device.c: 2700: USBStdGetDscHandler();
 49626                           
 49627                           ; BSR set to: 13
 49628  0121BC  EC19  F082         	call	_USBStdGetDscHandler	;wreg free
 49629                           
 49630                           ;usb_device.c: 2701: break;
 49631  0121C0  0012               	return	
 49632  0121C2                     
 49633                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 49634  0121C2  ECF7  F08F         	call	_USBStdSetCfgHandler	;wreg free
 49635                           
 49636                           ;usb_device.c: 2704: break;
 49637  0121C6  0012               	return	
 49638  0121C8                     
 49639                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 49640  0121C8  0EC2               	movlw	low _USBActiveConfiguration
 49641  0121CA  6E52               	movwf	_inPipes,c	;volatile
 49642  0121CC  0E01               	movlw	high _USBActiveConfiguration
 49643  0121CE  6E53               	movwf	_inPipes+1,c	;volatile
 49644                           
 49645                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49646  0121D0  8055               	bsf	_inPipes+3,0,c	;volatile
 49647                           
 49648                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 49649  0121D2  0E01               	movlw	1
 49650  0121D4  6E56               	movwf	_inPipes+4,c	;volatile
 49651                           
 49652                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 49653  0121D6  8E55               	bsf	_inPipes+3,7,c	;volatile
 49654                           
 49655                           ;usb_device.c: 2710: break;
 49656  0121D8  0012               	return	
 49657  0121DA                     
 49658                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 49659  0121DA  ECEF  F098         	call	_USBStdGetStatusHandler	;wreg free
 49660                           
 49661                           ;usb_device.c: 2713: break;
 49662  0121DE  0012               	return	
 49663  0121E0                     
 49664                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 49665  0121E0  EC71  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 49666                           
 49667                           ;usb_device.c: 2717: break;
 49668  0121E4  0012               	return	
 49669  0121E6                     
 49670                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 49671  0121E6  010D               	movlb	13	; () banked
 49672  0121E8  5134               	movf	52,w,b	;volatile
 49673  0121EA  0D01               	mullw	1
 49674  0121EC  0EBD               	movlw	low _USBAlternateInterface
 49675  0121EE  24F3               	addwf	prodl,w,c
 49676  0121F0  6E52               	movwf	_inPipes,c	;volatile
 49677  0121F2  0E01               	movlw	high _USBAlternateInterface
 49678  0121F4  20F4               	addwfc	prodh,w,c
 49679  0121F6  6E53               	movwf	_inPipes+1,c	;volatile
 49680                           
 49681                           ; BSR set to: 13
 49682                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49683  0121F8  8055               	bsf	_inPipes+3,0,c	;volatile
 49684                           
 49685                           ; BSR set to: 13
 49686                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 49687  0121FA  0E01               	movlw	1
 49688  0121FC  6E56               	movwf	_inPipes+4,c	;volatile
 49689                           
 49690                           ; BSR set to: 13
 49691                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 49692  0121FE  8E55               	bsf	_inPipes+3,7,c	;volatile
 49693                           
 49694                           ;usb_device.c: 2723: break;
 49695  012200  0012               	return	
 49696  012202                     i2l365:
 49697                           
 49698                           ; BSR set to: 13
 49699                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 49700  012202  8E55               	bsf	_inPipes+3,7,c	;volatile
 49701                           
 49702                           ; BSR set to: 13
 49703                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 49704  012204  5134               	movf	52,w,b	;volatile
 49705  012206  0D01               	mullw	1
 49706  012208  0EBD               	movlw	low _USBAlternateInterface
 49707  01220A  24F3               	addwf	prodl,w,c
 49708  01220C  6ED9               	movwf	fsr2l,c
 49709  01220E  0E01               	movlw	high _USBAlternateInterface
 49710  012210  20F4               	addwfc	prodh,w,c
 49711  012212  6EDA               	movwf	fsr2h,c
 49712  012214  CD32 FFDF          	movff	3378,indf2	;volatile
 49713                           
 49714                           ;usb_device.c: 2727: break;
 49715  012218  0012               	return	
 49716  01221A                     
 49717                           ; BSR set to: 13
 49718                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 49719                           
 49720                           ; BSR set to: 13
 49721  01221A  0E00               	movlw	0
 49722  01221C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49723  01221E  0E02               	movlw	2
 49724  012220  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49725  012222  0E00               	movlw	0
 49726  012224  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49727  012226  0E00               	movlw	0
 49728  012228  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49729  01222A  0E00               	movlw	0
 49730  01222C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49731  01222E  0E00               	movlw	0
 49732  012230  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49733  012232  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49734                           
 49735                           ;usb_device.c: 2734: }
 49736                           
 49737                           ;usb_device.c: 2733: break;
 49738                           
 49739                           ;usb_device.c: 2732: default:
 49740                           
 49741                           ;usb_device.c: 2731: case 12:
 49742                           
 49743                           ;usb_device.c: 2730: break;
 49744  012236  0012               	return	
 49745  012238                     i2l355:
 49746  012238  010D               	movlb	13	; () banked
 49747  01223A  5131               	movf	49,w,b	;volatile
 49748                           
 49749                           ; Switch size 1, requested type "space"
 49750                           ; Number of cases is 11, Range of values is 0 to 12
 49751                           ; switch strategies available:
 49752                           ; Name         Instructions Cycles
 49753                           ; simple_byte           34    18 (average)
 49754                           ;	Chosen strategy is simple_byte
 49755  01223C  0A00               	xorlw	0	; case 0
 49756  01223E  B4D8               	btfsc	status,2,c
 49757  012240  D7CC               	goto	i2l361
 49758  012242  0A01               	xorlw	1	; case 1
 49759  012244  B4D8               	btfsc	status,2,c
 49760  012246  D7CC               	goto	i2l362
 49761  012248  0A02               	xorlw	2	; case 3
 49762  01224A  B4D8               	btfsc	status,2,c
 49763  01224C  D7C9               	goto	i2l362
 49764  01224E  0A06               	xorlw	6	; case 5
 49765  012250  B4D8               	btfsc	status,2,c
 49766  012252  D7B0               	goto	i2l356
 49767  012254  0A03               	xorlw	3	; case 6
 49768  012256  B4D8               	btfsc	status,2,c
 49769  012258  D7B1               	goto	i2l358
 49770  01225A  0A01               	xorlw	1	; case 7
 49771  01225C  B4D8               	btfsc	status,2,c
 49772  01225E  D7DD               	goto	i2l366
 49773  012260  0A0F               	xorlw	15	; case 8
 49774  012262  B4D8               	btfsc	status,2,c
 49775  012264  D7B1               	goto	i2l360
 49776  012266  0A01               	xorlw	1	; case 9
 49777  012268  B4D8               	btfsc	status,2,c
 49778  01226A  D7AB               	goto	i2l359
 49779  01226C  0A03               	xorlw	3	; case 10
 49780  01226E  B4D8               	btfsc	status,2,c
 49781  012270  D7BA               	goto	i2l364
 49782  012272  0A01               	xorlw	1	; case 11
 49783  012274  B4D8               	btfsc	status,2,c
 49784  012276  D7C5               	goto	i2l365
 49785  012278  0A07               	xorlw	7	; case 12
 49786  01227A  0012               	return	
 49787  01227C                     __end_of_USBCheckStdRequest:
 49788                           	opt stack 0
 49789                           tosu	equ	0xFFF
 49790                           tosh	equ	0xFFE
 49791                           tosl	equ	0xFFD
 49792                           pclatu	equ	0xFFB
 49793                           pclath	equ	0xFFA
 49794                           tblptru	equ	0xFF8
 49795                           tblptrh	equ	0xFF7
 49796                           tblptrl	equ	0xFF6
 49797                           tablat	equ	0xFF5
 49798                           prodh	equ	0xFF4
 49799                           prodl	equ	0xFF3
 49800                           intcon	equ	0xFF2
 49801                           indf0	equ	0xFEF
 49802                           postinc0	equ	0xFEE
 49803                           fsr0h	equ	0xFEA
 49804                           fsr0l	equ	0xFE9
 49805                           wreg	equ	0xFE8
 49806                           indf1	equ	0xFE7
 49807                           postinc1	equ	0xFE6
 49808                           postdec1	equ	0xFE5
 49809                           plusw1	equ	0xFE3
 49810                           fsr1h	equ	0xFE2
 49811                           fsr1l	equ	0xFE1
 49812                           indf2	equ	0xFDF
 49813                           postinc2	equ	0xFDE
 49814                           postdec2	equ	0xFDD
 49815                           plusw2	equ	0xFDB
 49816                           fsr2h	equ	0xFDA
 49817                           fsr2l	equ	0xFD9
 49818                           status	equ	0xFD8
 49819                           
 49820 ;; *************** function _USBStdSetCfgHandler *****************
 49821 ;; Defined at:
 49822 ;;		line 1970 in file "usb_device.c"
 49823 ;; Parameters:    Size  Location     Type
 49824 ;;		None
 49825 ;; Auto vars:     Size  Location     Type
 49826 ;;  i               1   23[COMRAM] unsigned char 
 49827 ;; Return value:  Size  Location     Type
 49828 ;;                  1    wreg      void 
 49829 ;; Registers used:
 49830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49831 ;; Tracked objects:
 49832 ;;		On entry : 0/0
 49833 ;;		On exit  : 0/0
 49834 ;;		Unchanged: 0/0
 49835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49840 ;;Total ram usage:        1 bytes
 49841 ;; Hardware stack levels used:    1
 49842 ;; Hardware stack levels required when called:    4
 49843 ;; This function calls:
 49844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49845 ;;		i2_memset
 49846 ;; This function is called by:
 49847 ;;		_USBCheckStdRequest
 49848 ;; This function uses a non-reentrant model
 49849 ;;
 49850                           
 49851                           	psect	text208
 49852  011FEE                     __ptext208:
 49853                           	opt stack 0
 49854  011FEE                     _USBStdSetCfgHandler:
 49855                           	opt stack 9
 49856                           
 49857                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 49858                           
 49859                           ;incstack = 0
 49860  011FEE  8E55               	bsf	_inPipes+3,7,c	;volatile
 49861                           
 49862                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 49863  011FF0  0E27               	movlw	39
 49864  011FF2  6E01               	movwf	i2memset@p1,c
 49865  011FF4  0E0F               	movlw	15
 49866  011FF6  6E02               	movwf	i2memset@p1+1,c
 49867  011FF8  0E00               	movlw	0
 49868  011FFA  6E04               	movwf	i2memset@c+1,c
 49869  011FFC  0E00               	movlw	0
 49870  011FFE  6E03               	movwf	i2memset@c,c
 49871  012000  0E00               	movlw	0
 49872  012002  6E06               	movwf	i2memset@n+1,c
 49873  012004  0E02               	movlw	2
 49874  012006  6E05               	movwf	i2memset@n,c
 49875  012008  EC2F  F0AA         	call	i2_memset	;wreg free
 49876                           
 49877                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 49878  01200C  0E00               	movlw	0
 49879  01200E  6E01               	movwf	i2memset@p1,c
 49880  012010  0E0D               	movlw	13
 49881  012012  6E02               	movwf	i2memset@p1+1,c
 49882  012014  0E00               	movlw	0
 49883  012016  6E04               	movwf	i2memset@c+1,c
 49884  012018  0E00               	movlw	0
 49885  01201A  6E03               	movwf	i2memset@c,c
 49886  01201C  0E00               	movlw	0
 49887  01201E  6E06               	movwf	i2memset@n+1,c
 49888  012020  0E30               	movlw	48
 49889  012022  6E05               	movwf	i2memset@n,c
 49890  012024  EC2F  F0AA         	call	i2_memset	;wreg free
 49891                           
 49892                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 49893  012028  8C65               	bsf	3941,6,c	;volatile
 49894                           
 49895                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 49896  01202A  0E00               	movlw	0
 49897  01202C  6E18               	movwf	USBStdSetCfgHandler@i,c
 49898  01202E                     i2l13449:
 49899  01202E  0E02               	movlw	2
 49900  012030  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 49901  012032  D001               	goto	i2l272
 49902  012034  D016               	goto	i2u1215_40
 49903  012036                     i2l272:
 49904                           
 49905                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 49906  012036  5018               	movf	USBStdSetCfgHandler@i,w,c
 49907  012038  0D01               	mullw	1
 49908  01203A  0E3C               	movlw	low _ep_data_in
 49909  01203C  24F3               	addwf	prodl,w,c
 49910  01203E  6ED9               	movwf	fsr2l,c
 49911  012040  0E01               	movlw	high _ep_data_in
 49912  012042  20F4               	addwfc	prodh,w,c
 49913  012044  6EDA               	movwf	fsr2h,c
 49914  012046  0E00               	movlw	0
 49915  012048  6EDF               	movwf	indf2,c
 49916                           
 49917                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 49918  01204A  5018               	movf	USBStdSetCfgHandler@i,w,c
 49919  01204C  0D01               	mullw	1
 49920  01204E  0E39               	movlw	low _ep_data_out
 49921  012050  24F3               	addwf	prodl,w,c
 49922  012052  6ED9               	movwf	fsr2l,c
 49923  012054  0E01               	movlw	high _ep_data_out
 49924  012056  20F4               	addwfc	prodh,w,c
 49925  012058  6EDA               	movwf	fsr2h,c
 49926  01205A  0E00               	movlw	0
 49927  01205C  6EDF               	movwf	indf2,c
 49928  01205E  2A18               	incf	USBStdSetCfgHandler@i,f,c
 49929  012060  D7E6               	goto	i2l13449
 49930  012062                     i2u1215_40:
 49931                           
 49932                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 49933  012062  0EBD               	movlw	low _USBAlternateInterface
 49934  012064  6E01               	movwf	i2memset@p1,c
 49935  012066  0E01               	movlw	high _USBAlternateInterface
 49936  012068  6E02               	movwf	i2memset@p1+1,c
 49937  01206A  0E00               	movlw	0
 49938  01206C  6E04               	movwf	i2memset@c+1,c
 49939  01206E  0E00               	movlw	0
 49940  012070  6E03               	movwf	i2memset@c,c
 49941  012072  0E00               	movlw	0
 49942  012074  6E06               	movwf	i2memset@n+1,c
 49943  012076  0E02               	movlw	2
 49944  012078  6E05               	movwf	i2memset@n,c
 49945  01207A  EC2F  F0AA         	call	i2_memset	;wreg free
 49946                           
 49947                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 49948  01207E  9C65               	bcf	3941,6,c	;volatile
 49949                           
 49950                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49951  012080  0E08               	movlw	8
 49952  012082  0101               	movlb	1	; () banked
 49953  012084  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49954  012086  0E0D               	movlw	13
 49955  012088  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49956                           
 49957                           ; BSR set to: 1
 49958                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 49959  01208A  0E00               	movlw	0
 49960  01208C  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49961  01208E  0E0D               	movlw	13
 49962  012090  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49963                           
 49964                           ; BSR set to: 1
 49965                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49966  012092  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49967  012096  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49968                           
 49969                           ; BSR set to: 1
 49970                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 49971  01209A  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 49972                           
 49973                           ; BSR set to: 1
 49974                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 49975  01209E  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 49976  0120A0  A4D8               	btfss	status,2,c
 49977  0120A2  D003               	goto	i2l274
 49978                           
 49979                           ; BSR set to: 1
 49980                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 49981  0120A4  0E10               	movlw	16
 49982  0120A6  6E5E               	movwf	_USBDeviceState,c	;volatile
 49983                           
 49984                           ;usb_device.c: 2015: }
 49985  0120A8  0012               	return	
 49986  0120AA                     i2l274:
 49987                           
 49988                           ; BSR set to: 1
 49989                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 49990                           
 49991                           ; BSR set to: 1
 49992  0120AA  0E00               	movlw	0
 49993  0120AC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49994  0120AE  0E01               	movlw	1
 49995  0120B0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49996  0120B2  0EC2               	movlw	low _USBActiveConfiguration
 49997  0120B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49998  0120B6  0E01               	movlw	high _USBActiveConfiguration
 49999  0120B8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50000  0120BA  0E00               	movlw	0
 50001  0120BC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50002  0120BE  0E01               	movlw	1
 50003  0120C0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50004  0120C2  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50005                           
 50006                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 50007  0120C6  0E20               	movlw	32
 50008  0120C8  6E5E               	movwf	_USBDeviceState,c	;volatile
 50009  0120CA  0012               	return	
 50010  0120CC                     __end_of_USBStdSetCfgHandler:
 50011                           	opt stack 0
 50012                           tosu	equ	0xFFF
 50013                           tosh	equ	0xFFE
 50014                           tosl	equ	0xFFD
 50015                           pclatu	equ	0xFFB
 50016                           pclath	equ	0xFFA
 50017                           tblptru	equ	0xFF8
 50018                           tblptrh	equ	0xFF7
 50019                           tblptrl	equ	0xFF6
 50020                           tablat	equ	0xFF5
 50021                           prodh	equ	0xFF4
 50022                           prodl	equ	0xFF3
 50023                           intcon	equ	0xFF2
 50024                           indf0	equ	0xFEF
 50025                           postinc0	equ	0xFEE
 50026                           fsr0h	equ	0xFEA
 50027                           fsr0l	equ	0xFE9
 50028                           wreg	equ	0xFE8
 50029                           indf1	equ	0xFE7
 50030                           postinc1	equ	0xFE6
 50031                           postdec1	equ	0xFE5
 50032                           plusw1	equ	0xFE3
 50033                           fsr1h	equ	0xFE2
 50034                           fsr1l	equ	0xFE1
 50035                           indf2	equ	0xFDF
 50036                           postinc2	equ	0xFDE
 50037                           postdec2	equ	0xFDD
 50038                           plusw2	equ	0xFDB
 50039                           fsr2h	equ	0xFDA
 50040                           fsr2l	equ	0xFD9
 50041                           status	equ	0xFD8
 50042                           
 50043 ;; *************** function i2_memset *****************
 50044 ;; Defined at:
 50045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 50046 ;; Parameters:    Size  Location     Type
 50047 ;;  p1              2    0[COMRAM] PTR void 
 50048 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50049 ;;  c               2    2[COMRAM] int 
 50050 ;;  n               2    4[COMRAM] unsigned int 
 50051 ;; Auto vars:     Size  Location     Type
 50052 ;;  memset          2    6[COMRAM] PTR unsigned char 
 50053 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50054 ;; Return value:  Size  Location     Type
 50055 ;;                  2    0[COMRAM] PTR void 
 50056 ;; Registers used:
 50057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50058 ;; Tracked objects:
 50059 ;;		On entry : 0/0
 50060 ;;		On exit  : 0/0
 50061 ;;		Unchanged: 0/0
 50062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50063 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50066 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50067 ;;Total ram usage:        8 bytes
 50068 ;; Hardware stack levels used:    1
 50069 ;; This function calls:
 50070 ;;		Nothing
 50071 ;; This function is called by:
 50072 ;;		_USBStdSetCfgHandler
 50073 ;;		i2_USBDeviceInit
 50074 ;; This function uses a non-reentrant model
 50075 ;;
 50076                           
 50077                           	psect	text209
 50078  01545E                     __ptext209:
 50079                           	opt stack 0
 50080  01545E                     i2_memset:
 50081                           	opt stack 15
 50082                           
 50083                           ;incstack = 0
 50084  01545E  C001  F007         	movff	i2memset@p1,i2memset@p
 50085  015462  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 50086  015466  D008               	goto	i2l3729
 50087  015468                     i2l13379:
 50088  015468  C007  FFD9         	movff	i2memset@p,fsr2l
 50089  01546C  C008  FFDA         	movff	i2memset@p+1,fsr2h
 50090  015470  C003  FFDF         	movff	i2memset@c,indf2
 50091  015474  4A07               	infsnz	i2memset@p,f,c
 50092  015476  2A08               	incf	i2memset@p+1,f,c
 50093  015478                     i2l3729:
 50094  015478  0605               	decf	i2memset@n,f,c
 50095  01547A  A0D8               	btfss	status,0,c
 50096  01547C  0606               	decf	i2memset@n+1,f,c
 50097  01547E  2805               	incf	i2memset@n,w,c
 50098  015480  E1F3               	bnz	i2l13379
 50099  015482  2806               	incf	i2memset@n+1,w,c
 50100  015484  B4D8               	btfsc	status,2,c
 50101  015486  0012               	return	
 50102  015488  D7EF               	goto	i2l3730
 50103  01548A                     __end_ofi2_memset:
 50104                           	opt stack 0
 50105                           tosu	equ	0xFFF
 50106                           tosh	equ	0xFFE
 50107                           tosl	equ	0xFFD
 50108                           pclatu	equ	0xFFB
 50109                           pclath	equ	0xFFA
 50110                           tblptru	equ	0xFF8
 50111                           tblptrh	equ	0xFF7
 50112                           tblptrl	equ	0xFF6
 50113                           tablat	equ	0xFF5
 50114                           prodh	equ	0xFF4
 50115                           prodl	equ	0xFF3
 50116                           intcon	equ	0xFF2
 50117                           indf0	equ	0xFEF
 50118                           postinc0	equ	0xFEE
 50119                           fsr0h	equ	0xFEA
 50120                           fsr0l	equ	0xFE9
 50121                           wreg	equ	0xFE8
 50122                           indf1	equ	0xFE7
 50123                           postinc1	equ	0xFE6
 50124                           postdec1	equ	0xFE5
 50125                           plusw1	equ	0xFE3
 50126                           fsr1h	equ	0xFE2
 50127                           fsr1l	equ	0xFE1
 50128                           indf2	equ	0xFDF
 50129                           postinc2	equ	0xFDE
 50130                           postdec2	equ	0xFDD
 50131                           plusw2	equ	0xFDB
 50132                           fsr2h	equ	0xFDA
 50133                           fsr2l	equ	0xFD9
 50134                           status	equ	0xFD8
 50135                           
 50136 ;; *************** function _USBStdGetStatusHandler *****************
 50137 ;; Defined at:
 50138 ;;		line 2131 in file "usb_device.c"
 50139 ;; Parameters:    Size  Location     Type
 50140 ;;		None
 50141 ;; Auto vars:     Size  Location     Type
 50142 ;;  p               2    1[COMRAM] PTR struct __BDT
 50143 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50144 ;; Return value:  Size  Location     Type
 50145 ;;                  1    wreg      void 
 50146 ;; Registers used:
 50147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50148 ;; Tracked objects:
 50149 ;;		On entry : 0/0
 50150 ;;		On exit  : 0/0
 50151 ;;		Unchanged: 0/0
 50152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50157 ;;Total ram usage:        3 bytes
 50158 ;; Hardware stack levels used:    1
 50159 ;; This function calls:
 50160 ;;		Nothing
 50161 ;; This function is called by:
 50162 ;;		_USBCheckStdRequest
 50163 ;; This function uses a non-reentrant model
 50164 ;;
 50165                           
 50166                           	psect	text210
 50167  0131DE                     __ptext210:
 50168                           	opt stack 0
 50169  0131DE                     _USBStdGetStatusHandler:
 50170                           	opt stack 13
 50171                           
 50172                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 50173                           
 50174                           ;incstack = 0
 50175  0131DE  0E00               	movlw	0
 50176  0131E0  010D               	movlb	13	; () banked
 50177  0131E2  6F38               	movwf	56,b	;volatile
 50178                           
 50179                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 50180  0131E4  0E00               	movlw	0
 50181  0131E6  6F39               	movwf	57,b	;volatile
 50182                           
 50183                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 50184  0131E8  D035               	goto	i2l293
 50185  0131EA                     i2l294:
 50186                           
 50187                           ; BSR set to: 13
 50188                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 50189  0131EA  8E55               	bsf	_inPipes+3,7,c	;volatile
 50190                           
 50191                           ; BSR set to: 13
 50192                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 50193                           
 50194                           ; BSR set to: 13
 50195                           
 50196                           ; BSR set to: 13
 50197                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 50198                           
 50199                           ;usb_device.c: 2144: if(0 == 1)
 50200  0131EC  0101               	movlb	1	; () banked
 50201  0131EE  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 50202  0131F0  A4D8               	btfss	status,2,c
 50203  0131F2  D03B               	goto	i2l297
 50204                           
 50205                           ; BSR set to: 1
 50206                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 50207  0131F4  010D               	movlb	13	; () banked
 50208  0131F6  8338               	bsf	56,1,b	;volatile
 50209                           
 50210                           ; BSR set to: 13
 50211                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 50212  0131F8  D038               	goto	i2l297
 50213  0131FA                     i2l298:
 50214                           
 50215                           ; BSR set to: 13
 50216                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 50217  0131FA  8E55               	bsf	_inPipes+3,7,c	;volatile
 50218                           
 50219                           ;usb_device.c: 2156: break;
 50220  0131FC  D036               	goto	i2l297
 50221  0131FE                     i2l299:
 50222                           
 50223                           ; BSR set to: 13
 50224                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 50225  0131FE  8E55               	bsf	_inPipes+3,7,c	;volatile
 50226                           
 50227                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 50228  013200  BF34               	btfsc	52,7,b	;volatile
 50229  013202  D00A               	goto	i2l300
 50230                           
 50231                           ; BSR set to: 13
 50232                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50233  013204  5134               	movf	52,w,b	;volatile
 50234  013206  0B0F               	andlw	15
 50235  013208  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50236  01320A  5001               	movf	??_USBStdGetStatusHandler,w,c
 50237  01320C  0D02               	mullw	2
 50238  01320E  0E21               	movlw	low _pBDTEntryOut
 50239  013210  24F3               	addwf	prodl,w,c
 50240  013212  6ED9               	movwf	fsr2l,c
 50241  013214  0E01               	movlw	high _pBDTEntryOut
 50242  013216  D009               	goto	L78
 50243  013218                     i2l300:
 50244                           
 50245                           ; BSR set to: 13
 50246                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50247                           
 50248                           ; BSR set to: 13
 50249  013218  5134               	movf	52,w,b	;volatile
 50250  01321A  0B0F               	andlw	15
 50251  01321C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50252  01321E  5001               	movf	??_USBStdGetStatusHandler,w,c
 50253  013220  0D02               	mullw	2
 50254  013222  0E1B               	movlw	low _pBDTEntryIn
 50255  013224  24F3               	addwf	prodl,w,c
 50256  013226  6ED9               	movwf	fsr2l,c
 50257  013228  0E01               	movlw	high _pBDTEntryIn
 50258  01322A                     L78:
 50259  01322A  20F4               	addwfc	prodh,w,c
 50260  01322C  6EDA               	movwf	fsr2h,c
 50261  01322E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 50262  013232  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 50263                           
 50264                           ; BSR set to: 13
 50265                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 50266                           
 50267                           ; BSR set to: 13
 50268  013236  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50269  01323A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50270  01323E  AEDF               	btfss	indf2,7,c
 50271  013240  D014               	goto	i2l297
 50272                           
 50273                           ; BSR set to: 13
 50274  013242  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50275  013246  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50276  01324A  A4DF               	btfss	indf2,2,c
 50277  01324C  D00E               	goto	i2l297
 50278                           
 50279                           ; BSR set to: 13
 50280                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 50281  01324E  0E01               	movlw	1
 50282  013250  6F38               	movwf	56,b	;volatile
 50283                           
 50284                           ; BSR set to: 13
 50285                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 50286                           
 50287                           ; BSR set to: 13
 50288                           ;usb_device.c: 2176: break;
 50289  013252  D00B               	goto	i2l297
 50290  013254                     i2l293:
 50291                           
 50292                           ; BSR set to: 13
 50293                           
 50294                           ; BSR set to: 13
 50295  013254  5130               	movf	48,w,b	;volatile
 50296  013256  0B1F               	andlw	31
 50297                           
 50298                           ; Switch size 1, requested type "space"
 50299                           ; Number of cases is 3, Range of values is 0 to 2
 50300                           ; switch strategies available:
 50301                           ; Name         Instructions Cycles
 50302                           ; simple_byte           10     6 (average)
 50303                           ;	Chosen strategy is simple_byte
 50304  013258  0A00               	xorlw	0	; case 0
 50305  01325A  B4D8               	btfsc	status,2,c
 50306  01325C  D7C6               	goto	i2l294
 50307  01325E  0A01               	xorlw	1	; case 1
 50308  013260  B4D8               	btfsc	status,2,c
 50309  013262  D7CB               	goto	i2l298
 50310  013264  0A03               	xorlw	3	; case 2
 50311  013266  B4D8               	btfsc	status,2,c
 50312  013268  D7CA               	goto	i2l299
 50313  01326A                     i2l297:
 50314                           
 50315                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 50316  01326A  AE55               	btfss	_inPipes+3,7,c	;volatile
 50317  01326C  0012               	return	
 50318                           
 50319                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 50320  01326E  0E38               	movlw	56
 50321  013270  6E52               	movwf	_inPipes,c	;volatile
 50322  013272  0E0D               	movlw	13
 50323  013274  6E53               	movwf	_inPipes+1,c	;volatile
 50324                           
 50325                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50326  013276  8055               	bsf	_inPipes+3,0,c	;volatile
 50327                           
 50328                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 50329  013278  0E02               	movlw	2
 50330  01327A  6E56               	movwf	_inPipes+4,c	;volatile
 50331  01327C  0012               	return	
 50332  01327E                     __end_of_USBStdGetStatusHandler:
 50333                           	opt stack 0
 50334                           tosu	equ	0xFFF
 50335                           tosh	equ	0xFFE
 50336                           tosl	equ	0xFFD
 50337                           pclatu	equ	0xFFB
 50338                           pclath	equ	0xFFA
 50339                           tblptru	equ	0xFF8
 50340                           tblptrh	equ	0xFF7
 50341                           tblptrl	equ	0xFF6
 50342                           tablat	equ	0xFF5
 50343                           prodh	equ	0xFF4
 50344                           prodl	equ	0xFF3
 50345                           intcon	equ	0xFF2
 50346                           indf0	equ	0xFEF
 50347                           postinc0	equ	0xFEE
 50348                           fsr0h	equ	0xFEA
 50349                           fsr0l	equ	0xFE9
 50350                           wreg	equ	0xFE8
 50351                           indf1	equ	0xFE7
 50352                           postinc1	equ	0xFE6
 50353                           postdec1	equ	0xFE5
 50354                           plusw1	equ	0xFE3
 50355                           fsr1h	equ	0xFE2
 50356                           fsr1l	equ	0xFE1
 50357                           indf2	equ	0xFDF
 50358                           postinc2	equ	0xFDE
 50359                           postdec2	equ	0xFDD
 50360                           plusw2	equ	0xFDB
 50361                           fsr2h	equ	0xFDA
 50362                           fsr2l	equ	0xFD9
 50363                           status	equ	0xFD8
 50364                           
 50365 ;; *************** function _USBStdGetDscHandler *****************
 50366 ;; Defined at:
 50367 ;;		line 2045 in file "usb_device.c"
 50368 ;; Parameters:    Size  Location     Type
 50369 ;;		None
 50370 ;; Auto vars:     Size  Location     Type
 50371 ;;		None
 50372 ;; Return value:  Size  Location     Type
 50373 ;;                  1    wreg      void 
 50374 ;; Registers used:
 50375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 50376 ;; Tracked objects:
 50377 ;;		On entry : 0/0
 50378 ;;		On exit  : 0/0
 50379 ;;		Unchanged: 0/0
 50380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50385 ;;Total ram usage:        2 bytes
 50386 ;; Hardware stack levels used:    1
 50387 ;; This function calls:
 50388 ;;		Nothing
 50389 ;; This function is called by:
 50390 ;;		_USBCheckStdRequest
 50391 ;; This function uses a non-reentrant model
 50392 ;;
 50393                           
 50394                           	psect	text211
 50395  010432                     __ptext211:
 50396                           	opt stack 0
 50397  010432                     _USBStdGetDscHandler:
 50398                           	opt stack 13
 50399                           
 50400                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 50401                           
 50402                           ;incstack = 0
 50403  010432  0E80               	movlw	128
 50404  010434  010D               	movlb	13	; () banked
 50405  010436  1930               	xorwf	48,w,b	;volatile
 50406  010438  A4D8               	btfss	status,2,c
 50407  01043A  0012               	return	
 50408                           
 50409                           ; BSR set to: 13
 50410                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 50411  01043C  0EC0               	movlw	192
 50412  01043E  6E55               	movwf	_inPipes+3,c	;volatile
 50413                           
 50414                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 50415  010440  D082               	goto	i2l280
 50416  010442                     
 50417                           ; BSR set to: 13
 50418                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 50419                           
 50420                           ; BSR set to: 13
 50421  010442  0E5B               	movlw	low _device_dsc
 50422  010444  6E52               	movwf	_inPipes,c	;volatile
 50423  010446  0EA2               	movlw	high _device_dsc
 50424  010448  6E53               	movwf	_inPipes+1,c	;volatile
 50425                           
 50426                           ; BSR set to: 13
 50427                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 50428  01044A  0E00               	movlw	0
 50429  01044C  6E57               	movwf	_inPipes+5,c	;volatile
 50430  01044E  0E12               	movlw	18
 50431  010450  6E56               	movwf	_inPipes+4,c	;volatile
 50432                           
 50433                           ;usb_device.c: 2060: break;
 50434  010452  0012               	return	
 50435  010454                     
 50436                           ; BSR set to: 13
 50437                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 50438                           
 50439                           ; BSR set to: 13
 50440  010454  5132               	movf	50,w,b	;volatile
 50441  010456  A4D8               	btfss	status,2,c
 50442  010458  D042               	goto	i2l284
 50443                           
 50444                           ; BSR set to: 13
 50445                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 50446  01045A  5132               	movf	50,w,b	;volatile
 50447  01045C  0D02               	mullw	2
 50448  01045E  0EEC               	movlw	low _USB_CD_Ptr
 50449  010460  24F3               	addwf	prodl,w,c
 50450  010462  6EF6               	movwf	tblptrl,c
 50451  010464  0E9D               	movlw	high _USB_CD_Ptr
 50452  010466  20F4               	addwfc	prodh,w,c
 50453  010468  6EF7               	movwf	tblptrh,c
 50454  01046A                     	if	1	;There are 3 active tblptr bytes
 50455  01046A  6AF8               	clrf	tblptru,c
 50456  01046C  0E00               	movlw	low (__mediumconst shr (0+16))
 50457  01046E  22F8               	addwfc	tblptru,f,c
 50458  010470                     	endif
 50459  010470  0009               	tblrd		*+
 50460  010472  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50461  010476  000A               	tblrd		*-
 50462  010478  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50463                           
 50464                           ; BSR set to: 13
 50465                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 50466  01047C  0E02               	movlw	2
 50467  01047E  2452               	addwf	_inPipes,w,c	;volatile
 50468  010480  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50469  010482  0E00               	movlw	0
 50470  010484  2053               	addwfc	_inPipes+1,w,c	;volatile
 50471  010486  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50472  010488  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50473  01048C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50474  010490  0E00               	movlw	low (__mediumconst shr (0+16))
 50475  010492  6EF8               	movwf	tblptru,c
 50476  010494  0E0E               	movlw	(high __ramtop+-1)
 50477  010496  64F7               	cpfsgt	tblptrh,c
 50478  010498  D003               	bra	i2u1219_47
 50479  01049A  0008               	tblrd		*
 50480  01049C  50F5               	movf	tablat,w,c
 50481  01049E  D005               	bra	i2u1219_40
 50482  0104A0                     i2u1219_47:
 50483  0104A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 50484  0104A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 50485  0104A8  50EF               	movf	indf0,w,c
 50486  0104AA                     i2u1219_40:
 50487  0104AA  6E56               	movwf	_inPipes+4,c	;volatile
 50488                           
 50489                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 50490  0104AC  0E03               	movlw	3
 50491  0104AE  2452               	addwf	_inPipes,w,c	;volatile
 50492  0104B0  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50493  0104B2  0E00               	movlw	0
 50494  0104B4  2053               	addwfc	_inPipes+1,w,c	;volatile
 50495  0104B6  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50496  0104B8  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50497  0104BC  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50498  0104C0  0E00               	movlw	low (__mediumconst shr (0+16))
 50499  0104C2  6EF8               	movwf	tblptru,c
 50500  0104C4  0E0E               	movlw	(high __ramtop+-1)
 50501  0104C6  64F7               	cpfsgt	tblptrh,c
 50502  0104C8  D003               	bra	i2u1220_47
 50503  0104CA  0008               	tblrd		*
 50504  0104CC  50F5               	movf	tablat,w,c
 50505  0104CE  D005               	bra	i2u1220_40
 50506  0104D0                     i2u1220_47:
 50507  0104D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 50508  0104D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 50509  0104D8  50EF               	movf	indf0,w,c
 50510  0104DA                     i2u1220_40:
 50511  0104DA  6E57               	movwf	_inPipes+5,c	;volatile
 50512                           
 50513                           ;usb_device.c: 2078: }
 50514  0104DC  0012               	return	
 50515  0104DE                     i2l284:
 50516                           
 50517                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 50518  0104DE  0E00               	movlw	0
 50519  0104E0  6E55               	movwf	_inPipes+3,c	;volatile
 50520                           
 50521                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 50522  0104E2  0012               	return	
 50523  0104E4                     
 50524                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 50525  0104E4  0E04               	movlw	4
 50526  0104E6  010D               	movlb	13	; () banked
 50527  0104E8  6132               	cpfslt	50,b	;volatile
 50528  0104EA  D027               	goto	i2l287
 50529                           
 50530                           ; BSR set to: 13
 50531                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 50532  0104EC  5132               	movf	50,w,b	;volatile
 50533  0104EE  0D02               	mullw	2
 50534  0104F0  0EE4               	movlw	low _USB_SD_Ptr
 50535  0104F2  24F3               	addwf	prodl,w,c
 50536  0104F4  6EF6               	movwf	tblptrl,c
 50537  0104F6  0E9D               	movlw	high _USB_SD_Ptr
 50538  0104F8  20F4               	addwfc	prodh,w,c
 50539  0104FA  6EF7               	movwf	tblptrh,c
 50540  0104FC                     	if	1	;There are 3 active tblptr bytes
 50541  0104FC  6AF8               	clrf	tblptru,c
 50542  0104FE  0E00               	movlw	low (__mediumconst shr (0+16))
 50543  010500  22F8               	addwfc	tblptru,f,c
 50544  010502                     	endif
 50545  010502  0009               	tblrd		*+
 50546  010504  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50547  010508  000A               	tblrd		*-
 50548  01050A  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50549                           
 50550                           ; BSR set to: 13
 50551                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 50552  01050E  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 50553  010512  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50554  010516  0E00               	movlw	low (__mediumconst shr (0+16))
 50555  010518  6EF8               	movwf	tblptru,c
 50556  01051A  0E0E               	movlw	(high __ramtop+-1)
 50557  01051C  64F7               	cpfsgt	tblptrh,c
 50558  01051E  D003               	bra	i2u1222_47
 50559  010520  0008               	tblrd		*
 50560  010522  50F5               	movf	tablat,w,c
 50561  010524  D005               	bra	i2u1222_40
 50562  010526                     i2u1222_47:
 50563  010526  CFF6 FFE9          	movff	tblptrl,fsr0l
 50564  01052A  CFF7 FFEA          	movff	tblptrh,fsr0h
 50565  01052E  50EF               	movf	indf0,w,c
 50566  010530                     i2u1222_40:
 50567  010530  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50568  010532  5001               	movf	??_USBStdGetDscHandler,w,c
 50569  010534  6E56               	movwf	_inPipes+4,c	;volatile
 50570  010536  6A57               	clrf	_inPipes+5,c	;volatile
 50571                           
 50572                           ;usb_device.c: 2094: }
 50573  010538  0012               	return	
 50574  01053A                     i2l287:
 50575                           
 50576                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 50577  01053A  0E00               	movlw	0
 50578  01053C  6E55               	movwf	_inPipes+3,c	;volatile
 50579                           
 50580                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 50581  01053E  0012               	return	
 50582  010540                     
 50583                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 50584  010540  0E00               	movlw	0
 50585  010542  6E55               	movwf	_inPipes+3,c	;volatile
 50586                           
 50587                           ;usb_device.c: 2112: }
 50588                           
 50589                           ;usb_device.c: 2111: break;
 50590  010544  0012               	return	
 50591  010546                     i2l280:
 50592  010546  010D               	movlb	13	; () banked
 50593  010548  5133               	movf	51,w,b	;volatile
 50594                           
 50595                           ; Switch size 1, requested type "space"
 50596                           ; Number of cases is 3, Range of values is 1 to 3
 50597                           ; switch strategies available:
 50598                           ; Name         Instructions Cycles
 50599                           ; simple_byte           10     6 (average)
 50600                           ;	Chosen strategy is simple_byte
 50601  01054A  0A01               	xorlw	1	; case 1
 50602  01054C  B4D8               	btfsc	status,2,c
 50603  01054E  D779               	goto	i2l281
 50604  010550  0A03               	xorlw	3	; case 2
 50605  010552  B4D8               	btfsc	status,2,c
 50606  010554  D77F               	goto	i2l283
 50607  010556  0A01               	xorlw	1	; case 3
 50608  010558  B4D8               	btfsc	status,2,c
 50609  01055A  D7C4               	goto	i2l286
 50610  01055C  D7F1               	goto	i2l289
 50611  01055E                     __end_of_USBStdGetDscHandler:
 50612                           	opt stack 0
 50613                           tosu	equ	0xFFF
 50614                           tosh	equ	0xFFE
 50615                           tosl	equ	0xFFD
 50616                           pclatu	equ	0xFFB
 50617                           pclath	equ	0xFFA
 50618                           tblptru	equ	0xFF8
 50619                           tblptrh	equ	0xFF7
 50620                           tblptrl	equ	0xFF6
 50621                           tablat	equ	0xFF5
 50622                           prodh	equ	0xFF4
 50623                           prodl	equ	0xFF3
 50624                           intcon	equ	0xFF2
 50625                           indf0	equ	0xFEF
 50626                           postinc0	equ	0xFEE
 50627                           fsr0h	equ	0xFEA
 50628                           fsr0l	equ	0xFE9
 50629                           wreg	equ	0xFE8
 50630                           indf1	equ	0xFE7
 50631                           postinc1	equ	0xFE6
 50632                           postdec1	equ	0xFE5
 50633                           plusw1	equ	0xFE3
 50634                           fsr1h	equ	0xFE2
 50635                           fsr1l	equ	0xFE1
 50636                           indf2	equ	0xFDF
 50637                           postinc2	equ	0xFDE
 50638                           postdec2	equ	0xFDD
 50639                           plusw2	equ	0xFDB
 50640                           fsr2h	equ	0xFDA
 50641                           fsr2l	equ	0xFD9
 50642                           status	equ	0xFD8
 50643                           
 50644 ;; *************** function _USBStdFeatureReqHandler *****************
 50645 ;; Defined at:
 50646 ;;		line 2756 in file "usb_device.c"
 50647 ;; Parameters:    Size  Location     Type
 50648 ;;		None
 50649 ;; Auto vars:     Size  Location     Type
 50650 ;;  p               2   27[COMRAM] PTR struct __BDT
 50651 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50652 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 50653 ;;		 -> UEP0(1), 
 50654 ;;  current_ep_d    1   26[COMRAM] struct .
 50655 ;; Return value:  Size  Location     Type
 50656 ;;                  1    wreg      void 
 50657 ;; Registers used:
 50658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50659 ;; Tracked objects:
 50660 ;;		On entry : 0/0
 50661 ;;		On exit  : 0/0
 50662 ;;		Unchanged: 0/0
 50663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50665 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50668 ;;Total ram usage:        6 bytes
 50669 ;; Hardware stack levels used:    1
 50670 ;; Hardware stack levels required when called:    4
 50671 ;; This function calls:
 50672 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50673 ;; This function is called by:
 50674 ;;		_USBCheckStdRequest
 50675 ;; This function uses a non-reentrant model
 50676 ;;
 50677                           
 50678                           	psect	text212
 50679  00DEE2                     __ptext212:
 50680                           	opt stack 0
 50681  00DEE2                     _USBStdFeatureReqHandler:
 50682                           	opt stack 9
 50683                           
 50684                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 50685                           
 50686                           ;incstack = 0
 50687  00DEE2  010D               	movlb	13	; () banked
 50688  00DEE4  0532               	decf	50,w,b	;volatile
 50689  00DEE6  A4D8               	btfss	status,2,c
 50690  00DEE8  D00F               	goto	i2l373
 50691                           
 50692                           ; BSR set to: 13
 50693  00DEEA  5130               	movf	48,w,b	;volatile
 50694  00DEEC  0B1F               	andlw	31
 50695  00DEEE  0900               	iorlw	0
 50696  00DEF0  A4D8               	btfss	status,2,c
 50697  00DEF2  D00A               	goto	i2l373
 50698                           
 50699                           ; BSR set to: 13
 50700                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 50701  00DEF4  8E55               	bsf	_inPipes+3,7,c	;volatile
 50702                           
 50703                           ; BSR set to: 13
 50704                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 50705  00DEF6  0E03               	movlw	3
 50706  00DEF8  1931               	xorwf	49,w,b	;volatile
 50707  00DEFA  A4D8               	btfss	status,2,c
 50708  00DEFC  D002               	goto	i2l372
 50709                           
 50710                           ; BSR set to: 13
 50711                           ;usb_device.c: 2806: RemoteWakeup = 1;
 50712  00DEFE  0E01               	movlw	1
 50713  00DF00  D001               	goto	L79
 50714  00DF02                     i2l372:
 50715                           
 50716                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 50717                           
 50718                           ; BSR set to: 1
 50719  00DF02  0E00               	movlw	0
 50720  00DF04                     L79:
 50721  00DF04  0101               	movlb	1	; () banked
 50722  00DF06  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 50723  00DF08                     i2l373:
 50724                           
 50725                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 50726                           
 50727                           ; BSR set to: 1
 50728  00DF08  010D               	movlb	13	; () banked
 50729  00DF0A  5132               	movf	50,w,b	;volatile
 50730  00DF0C  A4D8               	btfss	status,2,c
 50731  00DF0E  0012               	return	
 50732                           
 50733                           ; BSR set to: 13
 50734  00DF10  5130               	movf	48,w,b	;volatile
 50735  00DF12  0B1F               	andlw	31
 50736  00DF14  0A02               	xorlw	2
 50737  00DF16  A4D8               	btfss	status,2,c
 50738  00DF18  0012               	return	
 50739                           
 50740                           ; BSR set to: 13
 50741  00DF1A  5134               	movf	52,w,b	;volatile
 50742  00DF1C  0B0F               	andlw	15
 50743  00DF1E  0900               	iorlw	0
 50744  00DF20  B4D8               	btfsc	status,2,c
 50745  00DF22  0012               	return	
 50746                           
 50747                           ; BSR set to: 13
 50748  00DF24  5134               	movf	52,w,b	;volatile
 50749  00DF26  0B0F               	andlw	15
 50750  00DF28  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50751  00DF2A  0E03               	movlw	3
 50752  00DF2C  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 50753  00DF2E  0012               	return	
 50754                           
 50755                           ; BSR set to: 13
 50756  00DF30  0E20               	movlw	32
 50757  00DF32  185E               	xorwf	_USBDeviceState,w,c	;volatile
 50758  00DF34  A4D8               	btfss	status,2,c
 50759  00DF36  0012               	return	
 50760                           
 50761                           ; BSR set to: 13
 50762                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 50763  00DF38  8E55               	bsf	_inPipes+3,7,c	;volatile
 50764                           
 50765                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 50766  00DF3A  BF34               	btfsc	52,7,b	;volatile
 50767  00DF3C  D019               	goto	i2l375
 50768                           
 50769                           ; BSR set to: 13
 50770                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50771  00DF3E  5134               	movf	52,w,b	;volatile
 50772  00DF40  0B0F               	andlw	15
 50773  00DF42  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50774  00DF44  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50775  00DF46  0D02               	mullw	2
 50776  00DF48  0E21               	movlw	low _pBDTEntryOut
 50777  00DF4A  24F3               	addwf	prodl,w,c
 50778  00DF4C  6ED9               	movwf	fsr2l,c
 50779  00DF4E  0E01               	movlw	high _pBDTEntryOut
 50780  00DF50  20F4               	addwfc	prodh,w,c
 50781  00DF52  6EDA               	movwf	fsr2h,c
 50782  00DF54  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 50783  00DF58  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 50784                           
 50785                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 50786  00DF5C  5134               	movf	52,w,b	;volatile
 50787  00DF5E  0B0F               	andlw	15
 50788  00DF60  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50789  00DF62  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50790  00DF64  0D01               	mullw	1
 50791  00DF66  0E39               	movlw	low _ep_data_out
 50792  00DF68  24F3               	addwf	prodl,w,c
 50793  00DF6A  6ED9               	movwf	fsr2l,c
 50794  00DF6C  0E01               	movlw	high _ep_data_out
 50795  00DF6E  D018               	goto	L80
 50796  00DF70                     i2l375:
 50797                           
 50798                           ; BSR set to: 13
 50799                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50800                           
 50801                           ; BSR set to: 13
 50802  00DF70  5134               	movf	52,w,b	;volatile
 50803  00DF72  0B0F               	andlw	15
 50804  00DF74  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50805  00DF76  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50806  00DF78  0D02               	mullw	2
 50807  00DF7A  0E1B               	movlw	low _pBDTEntryIn
 50808  00DF7C  24F3               	addwf	prodl,w,c
 50809  00DF7E  6ED9               	movwf	fsr2l,c
 50810  00DF80  0E01               	movlw	high _pBDTEntryIn
 50811  00DF82  20F4               	addwfc	prodh,w,c
 50812  00DF84  6EDA               	movwf	fsr2h,c
 50813  00DF86  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 50814  00DF8A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 50815                           
 50816                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 50817  00DF8E  5134               	movf	52,w,b	;volatile
 50818  00DF90  0B0F               	andlw	15
 50819  00DF92  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50820  00DF94  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50821  00DF96  0D01               	mullw	1
 50822  00DF98  0E3C               	movlw	low _ep_data_in
 50823  00DF9A  24F3               	addwf	prodl,w,c
 50824  00DF9C  6ED9               	movwf	fsr2l,c
 50825  00DF9E  0E01               	movlw	high _ep_data_in
 50826  00DFA0                     L80:
 50827  00DFA0  20F4               	addwfc	prodh,w,c
 50828  00DFA2  6EDA               	movwf	fsr2h,c
 50829  00DFA4  50DF               	movf	indf2,w,c
 50830  00DFA6  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 50831                           
 50832                           ; BSR set to: 13
 50833                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 50834                           
 50835                           ; BSR set to: 13
 50836  00DFA8  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 50837  00DFAA  D006               	goto	i2l377
 50838                           
 50839                           ; BSR set to: 13
 50840                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 50841  00DFAC  0EFB               	movlw	251
 50842  00DFAE  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 50843  00DFB0  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50844  00DFB2  0EFF               	movlw	255
 50845  00DFB4  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 50846  00DFB6  D004               	goto	L81
 50847  00DFB8                     i2l377:
 50848                           
 50849                           ; BSR set to: 13
 50850                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 50851                           
 50852                           ; BSR set to: 13
 50853  00DFB8  0E04               	movlw	4
 50854  00DFBA  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 50855  00DFBC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50856  00DFBE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50857  00DFC0                     L81:
 50858  00DFC0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50859                           
 50860                           ; BSR set to: 13
 50861                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 50862                           
 50863                           ; BSR set to: 13
 50864  00DFC2  BF34               	btfsc	52,7,b	;volatile
 50865  00DFC4  D00A               	goto	i2l379
 50866                           
 50867                           ; BSR set to: 13
 50868                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 50869  00DFC6  5134               	movf	52,w,b	;volatile
 50870  00DFC8  0B0F               	andlw	15
 50871  00DFCA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50872  00DFCC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50873  00DFCE  0D02               	mullw	2
 50874  00DFD0  0E21               	movlw	low _pBDTEntryOut
 50875  00DFD2  24F3               	addwf	prodl,w,c
 50876  00DFD4  6ED9               	movwf	fsr2l,c
 50877  00DFD6  0E01               	movlw	high _pBDTEntryOut
 50878  00DFD8  D009               	goto	L82
 50879  00DFDA                     i2l379:
 50880                           
 50881                           ; BSR set to: 13
 50882                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 50883                           
 50884                           ; BSR set to: 13
 50885  00DFDA  5134               	movf	52,w,b	;volatile
 50886  00DFDC  0B0F               	andlw	15
 50887  00DFDE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50888  00DFE0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50889  00DFE2  0D02               	mullw	2
 50890  00DFE4  0E1B               	movlw	low _pBDTEntryIn
 50891  00DFE6  24F3               	addwf	prodl,w,c
 50892  00DFE8  6ED9               	movwf	fsr2l,c
 50893  00DFEA  0E01               	movlw	high _pBDTEntryIn
 50894  00DFEC                     L82:
 50895  00DFEC  20F4               	addwfc	prodh,w,c
 50896  00DFEE  6EDA               	movwf	fsr2h,c
 50897  00DFF0  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 50898  00DFF4  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 50899                           
 50900                           ; BSR set to: 13
 50901                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 50902                           
 50903                           ; BSR set to: 13
 50904  00DFF8  0E03               	movlw	3
 50905  00DFFA  1931               	xorwf	49,w,b	;volatile
 50906  00DFFC  A4D8               	btfss	status,2,c
 50907  00DFFE  D02D               	goto	i2l381
 50908                           
 50909                           ; BSR set to: 13
 50910                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 50911  00E000  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50912  00E004  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50913  00E008  AEDF               	btfss	indf2,7,c
 50914  00E00A  D01A               	goto	i2l384
 50915                           
 50916                           ; BSR set to: 13
 50917                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 50918  00E00C  BF34               	btfsc	52,7,b	;volatile
 50919  00E00E  D00A               	goto	i2l383
 50920                           
 50921                           ; BSR set to: 13
 50922                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 50923  00E010  5134               	movf	52,w,b	;volatile
 50924  00E012  0B0F               	andlw	15
 50925  00E014  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50926  00E016  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50927  00E018  0D01               	mullw	1
 50928  00E01A  0E39               	movlw	low _ep_data_out
 50929  00E01C  24F3               	addwf	prodl,w,c
 50930  00E01E  6ED9               	movwf	fsr2l,c
 50931  00E020  0E01               	movlw	high _ep_data_out
 50932  00E022  D00A               	goto	L83
 50933  00E024                     i2l383:
 50934                           
 50935                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 50936                           
 50937                           ; BSR set to: 1
 50938  00E024  010D               	movlb	13	; () banked
 50939  00E026  5134               	movf	52,w,b	;volatile
 50940  00E028  0B0F               	andlw	15
 50941  00E02A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50942  00E02C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50943  00E02E  0D01               	mullw	1
 50944  00E030  0E3C               	movlw	low _ep_data_in
 50945  00E032  24F3               	addwf	prodl,w,c
 50946  00E034  6ED9               	movwf	fsr2l,c
 50947  00E036  0E01               	movlw	high _ep_data_in
 50948  00E038                     L83:
 50949  00E038  20F4               	addwfc	prodh,w,c
 50950  00E03A  6EDA               	movwf	fsr2h,c
 50951  00E03C  0101               	movlb	1	; () banked
 50952  00E03E  82DF               	bsf	indf2,1,c
 50953  00E040                     i2l384:
 50954                           
 50955                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 50956                           
 50957                           ; BSR set to: 1
 50958                           
 50959                           ; BSR set to: 1
 50960  00E040  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50961  00E044  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50962  00E048  0E00               	movlw	0
 50963  00E04A  84DB               	bsf	plusw2,2,c
 50964                           
 50965                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 50966  00E04C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50967  00E050  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50968  00E054  0E00               	movlw	0
 50969  00E056  8EDB               	bsf	plusw2,7,c
 50970                           
 50971                           ;usb_device.c: 2878: }
 50972  00E058  0012               	return	
 50973  00E05A                     i2l381:
 50974                           
 50975                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 50976  00E05A  0E04               	movlw	4
 50977  00E05C  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 50978  00E05E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50979  00E060  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50980  00E062  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50981                           
 50982                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 50983  00E064  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50984  00E068  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50985  00E06C  AEDF               	btfss	indf2,7,c
 50986  00E06E  D01B               	goto	i2l386
 50987                           
 50988                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 50989  00E070  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50990  00E074  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50991  00E078  0E7F               	movlw	127
 50992  00E07A  16DF               	andwf	indf2,f,c
 50993                           
 50994                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 50995  00E07C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50996  00E080  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50997  00E084  0E00               	movlw	0
 50998  00E086  8CDB               	bsf	plusw2,6,c
 50999                           
 51000                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51001  00E088  0E00               	movlw	0
 51002  00E08A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51003  00E08C  0E05               	movlw	5
 51004  00E08E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51005  00E090  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51006  00E094  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51007  00E098  0E00               	movlw	0
 51008  00E09A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51009  00E09C  0E02               	movlw	2
 51010  00E09E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51011  00E0A0  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51012                           
 51013                           ;usb_device.c: 2893: }
 51014  00E0A4  D006               	goto	i2l387
 51015  00E0A6                     i2l386:
 51016                           
 51017                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 51018  00E0A6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51019  00E0AA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51020  00E0AE  0E00               	movlw	0
 51021  00E0B0  8CDB               	bsf	plusw2,6,c
 51022  00E0B2                     i2l387:
 51023                           
 51024                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 51025  00E0B2  0E04               	movlw	4
 51026  00E0B4  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51027  00E0B6  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51028  00E0B8  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51029  00E0BA  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51030                           
 51031                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 51032  00E0BC  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 51033  00E0BE  D006               	goto	i2u1244_40
 51034  00E0C0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51035  00E0C4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51036  00E0C8  AEDF               	btfss	indf2,7,c
 51037  00E0CA  D030               	goto	i2l388
 51038  00E0CC                     i2u1244_40:
 51039                           
 51040                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 51041  00E0CC  010D               	movlb	13	; () banked
 51042  00E0CE  BF34               	btfsc	52,7,b	;volatile
 51043  00E0D0  D00A               	goto	i2l391
 51044                           
 51045                           ; BSR set to: 13
 51046                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 51047  00E0D2  5134               	movf	52,w,b	;volatile
 51048  00E0D4  0B0F               	andlw	15
 51049  00E0D6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51050  00E0D8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51051  00E0DA  0D01               	mullw	1
 51052  00E0DC  0E39               	movlw	low _ep_data_out
 51053  00E0DE  24F3               	addwf	prodl,w,c
 51054  00E0E0  6ED9               	movwf	fsr2l,c
 51055  00E0E2  0E01               	movlw	high _ep_data_out
 51056  00E0E4  D00A               	goto	L84
 51057  00E0E6                     i2l391:
 51058                           
 51059                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 51060                           
 51061                           ; BSR set to: 1
 51062  00E0E6  010D               	movlb	13	; () banked
 51063  00E0E8  5134               	movf	52,w,b	;volatile
 51064  00E0EA  0B0F               	andlw	15
 51065  00E0EC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51066  00E0EE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51067  00E0F0  0D01               	mullw	1
 51068  00E0F2  0E3C               	movlw	low _ep_data_in
 51069  00E0F4  24F3               	addwf	prodl,w,c
 51070  00E0F6  6ED9               	movwf	fsr2l,c
 51071  00E0F8  0E01               	movlw	high _ep_data_in
 51072  00E0FA                     L84:
 51073  00E0FA  20F4               	addwfc	prodh,w,c
 51074  00E0FC  6EDA               	movwf	fsr2h,c
 51075  00E0FE  0101               	movlb	1	; () banked
 51076  00E100  92DF               	bcf	indf2,1,c
 51077                           
 51078                           ; BSR set to: 1
 51079                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 51080                           
 51081                           ; BSR set to: 1
 51082  00E102  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51083  00E106  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51084  00E10A  0E3B               	movlw	59
 51085  00E10C  16DF               	andwf	indf2,f,c
 51086                           
 51087                           ; BSR set to: 1
 51088                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51089  00E10E  0E00               	movlw	0
 51090  00E110  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51091  00E112  0E05               	movlw	5
 51092  00E114  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51093  00E116  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51094  00E11A  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51095  00E11E  0E00               	movlw	0
 51096  00E120  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51097  00E122  0E02               	movlw	2
 51098  00E124  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51099  00E126  ECB5  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51100                           
 51101                           ;usb_device.c: 2923: }
 51102  00E12A  D006               	goto	i2l393
 51103  00E12C                     i2l388:
 51104                           
 51105                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 51106  00E12C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51107  00E130  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51108  00E134  0E3B               	movlw	59
 51109  00E136  16DF               	andwf	indf2,f,c
 51110  00E138                     i2l393:
 51111                           
 51112                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 51113  00E138  010D               	movlb	13	; () banked
 51114  00E13A  5134               	movf	52,w,b	;volatile
 51115  00E13C  0B0F               	andlw	15
 51116  00E13E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51117  00E140  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51118  00E142  0D01               	mullw	1
 51119  00E144  0E26               	movlw	38
 51120  00E146  24F3               	addwf	prodl,w,c
 51121  00E148  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 51122  00E14A  0E0F               	movlw	15
 51123  00E14C  20F4               	addwfc	prodh,w,c
 51124  00E14E  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 51125                           
 51126                           ; BSR set to: 13
 51127                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 51128  00E150  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 51129  00E154  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 51130  00E158  0EFE               	movlw	254
 51131  00E15A  16DF               	andwf	indf2,f,c
 51132                           
 51133                           ; BSR set to: 13
 51134  00E15C  0012               	return	
 51135  00E15E                     __end_of_USBStdFeatureReqHandler:
 51136                           	opt stack 0
 51137                           tosu	equ	0xFFF
 51138                           tosh	equ	0xFFE
 51139                           tosl	equ	0xFFD
 51140                           pclatu	equ	0xFFB
 51141                           pclath	equ	0xFFA
 51142                           tblptru	equ	0xFF8
 51143                           tblptrh	equ	0xFF7
 51144                           tblptrl	equ	0xFF6
 51145                           tablat	equ	0xFF5
 51146                           prodh	equ	0xFF4
 51147                           prodl	equ	0xFF3
 51148                           intcon	equ	0xFF2
 51149                           indf0	equ	0xFEF
 51150                           postinc0	equ	0xFEE
 51151                           fsr0h	equ	0xFEA
 51152                           fsr0l	equ	0xFE9
 51153                           wreg	equ	0xFE8
 51154                           indf1	equ	0xFE7
 51155                           postinc1	equ	0xFE6
 51156                           postdec1	equ	0xFE5
 51157                           plusw1	equ	0xFE3
 51158                           fsr1h	equ	0xFE2
 51159                           fsr1l	equ	0xFE1
 51160                           indf2	equ	0xFDF
 51161                           postinc2	equ	0xFDE
 51162                           postdec2	equ	0xFDD
 51163                           plusw2	equ	0xFDB
 51164                           fsr2h	equ	0xFDA
 51165                           fsr2l	equ	0xFD9
 51166                           status	equ	0xFD8
 51167                           
 51168 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 51169 ;; Defined at:
 51170 ;;		line 54 in file "usb_events.c"
 51171 ;; Parameters:    Size  Location     Type
 51172 ;;  event           2   15[COMRAM] enum E6832
 51173 ;;  pdata           2   17[COMRAM] PTR void 
 51174 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51175 ;;		 -> BDT(48), 
 51176 ;;  size            2   19[COMRAM] unsigned int 
 51177 ;; Auto vars:     Size  Location     Type
 51178 ;;		None
 51179 ;; Return value:  Size  Location     Type
 51180 ;;                  1    wreg      unsigned char 
 51181 ;; Registers used:
 51182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51183 ;; Tracked objects:
 51184 ;;		On entry : 0/0
 51185 ;;		On exit  : 0/0
 51186 ;;		Unchanged: 0/0
 51187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51188 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51191 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51192 ;;Total ram usage:        8 bytes
 51193 ;; Hardware stack levels used:    1
 51194 ;; Hardware stack levels required when called:    3
 51195 ;; This function calls:
 51196 ;;		_APP_DeviceCustomHIDInitialize
 51197 ;;		_APP_DeviceMSDInitialize
 51198 ;;		_MSDTransferTerminated
 51199 ;;		_USBCheckHIDRequest
 51200 ;;		_USBCheckMSDRequest
 51201 ;;		i2_SYSTEM_Initialize
 51202 ;; This function is called by:
 51203 ;;		_USBDeviceTasks
 51204 ;;		_USBStdSetCfgHandler
 51205 ;;		_USBSuspend
 51206 ;;		_USBWakeFromSuspend
 51207 ;;		_USBCtrlTrfSetupHandler
 51208 ;;		_USBCheckStdRequest
 51209 ;;		_USBStdFeatureReqHandler
 51210 ;; This function uses a non-reentrant model
 51211 ;;
 51212                           
 51213                           	psect	text213
 51214  01396A                     __ptext213:
 51215                           	opt stack 0
 51216  01396A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 51217                           	opt stack 13
 51218                           
 51219                           ;usb_events.c: 56: switch((int)event)
 51220                           
 51221                           ;incstack = 0
 51222  01396A  D019               	goto	i2l816
 51223  01396C                     
 51224                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 51225  01396C  0E01               	movlw	1
 51226  01396E  EC28  F0A5         	call	i2_SYSTEM_Initialize
 51227                           
 51228                           ;usb_events.c: 79: break;
 51229  013972  0012               	return	
 51230  013974                     
 51231                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 51232  013974  0E02               	movlw	2
 51233  013976  EC28  F0A5         	call	i2_SYSTEM_Initialize
 51234                           
 51235                           ;usb_events.c: 90: break;
 51236  01397A  0012               	return	
 51237  01397C                     
 51238                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 51239  01397C  EC42  F0A9         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 51240                           
 51241                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 51242  013980  EC1C  F0AC         	call	_APP_DeviceMSDInitialize	;wreg free
 51243                           
 51244                           ;usb_events.c: 100: break;
 51245                           
 51246                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 51247                           
 51248                           ;usb_events.c: 97: break;
 51249  013984  0012               	return	
 51250  013986                     
 51251                           ;usb_events.c: 105: USBCheckHIDRequest();
 51252  013986  EC3E  F091         	call	_USBCheckHIDRequest	;wreg free
 51253                           
 51254                           ;usb_events.c: 108: USBCheckMSDRequest();
 51255  01398A  ECD2  F094         	call	_USBCheckMSDRequest	;wreg free
 51256                           
 51257                           ;usb_events.c: 112: break;
 51258                           
 51259                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 51260                           
 51261                           ;usb_events.c: 109: break;
 51262  01398E  0012               	return	
 51263  013990                     
 51264                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 51265  013990  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 51266  013994  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 51267  013998  EC7F  F0A4         	call	_MSDTransferTerminated	;wreg free
 51268                           
 51269                           ;usb_events.c: 129: }
 51270                           
 51271                           ;usb_events.c: 128: break;
 51272                           
 51273                           ;usb_events.c: 127: default:
 51274                           
 51275                           ;usb_events.c: 125: break;
 51276  01399C  0012               	return	
 51277  01399E                     i2l816:
 51278  01399E  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 51279  0139A2  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 51280                           
 51281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 51282                           ; Switch size 1, requested type "space"
 51283                           ; Number of cases is 2, Range of values is 0 to 127
 51284                           ; switch strategies available:
 51285                           ; Name         Instructions Cycles
 51286                           ; simple_byte            7     4 (average)
 51287                           ;	Chosen strategy is simple_byte
 51288  0139A6  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 51289  0139A8  0A00               	xorlw	0	; case 0
 51290  0139AA  B4D8               	btfsc	status,2,c
 51291  0139AC  D004               	goto	i2l19275
 51292  0139AE  0A7F               	xorlw	127	; case 127
 51293  0139B0  A4D8               	btfss	status,2,c
 51294  0139B2  0012               	return	
 51295  0139B4  D01A               	goto	i2l19277
 51296  0139B6                     i2l19275:
 51297                           
 51298                           ; Switch size 1, requested type "space"
 51299                           ; Number of cases is 8, Range of values is 1 to 117
 51300                           ; switch strategies available:
 51301                           ; Name         Instructions Cycles
 51302                           ; simple_byte           25    13 (average)
 51303                           ;	Chosen strategy is simple_byte
 51304  0139B6  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51305  0139B8  0A01               	xorlw	1	; case 1
 51306  0139BA  B4D8               	btfsc	status,2,c
 51307  0139BC  D7DF               	goto	i2l822
 51308  0139BE  0A03               	xorlw	3	; case 2
 51309  0139C0  B4D8               	btfsc	status,2,c
 51310  0139C2  0012               	return	
 51311  0139C4  0A01               	xorlw	1	; case 3
 51312  0139C6  B4D8               	btfsc	status,2,c
 51313  0139C8  D7DE               	goto	i2l824
 51314  0139CA  0A06               	xorlw	6	; case 5
 51315  0139CC  B4D8               	btfsc	status,2,c
 51316  0139CE  D7E0               	goto	i2l826
 51317  0139D0  0A77               	xorlw	119	; case 114
 51318  0139D2  B4D8               	btfsc	status,2,c
 51319  0139D4  0012               	return	
 51320  0139D6  0A01               	xorlw	1	; case 115
 51321  0139D8  B4D8               	btfsc	status,2,c
 51322  0139DA  0012               	return	
 51323  0139DC  0A07               	xorlw	7	; case 116
 51324  0139DE  B4D8               	btfsc	status,2,c
 51325  0139E0  D7C9               	goto	i2l821
 51326  0139E2  0A01               	xorlw	1	; case 117
 51327  0139E4  A4D8               	btfss	status,2,c
 51328  0139E6  0012               	return	
 51329  0139E8  D7C1               	goto	i2l820
 51330  0139EA                     i2l19277:
 51331                           
 51332                           ; Switch size 1, requested type "space"
 51333                           ; Number of cases is 1, Range of values is 255 to 255
 51334                           ; switch strategies available:
 51335                           ; Name         Instructions Cycles
 51336                           ; simple_byte            4     3 (average)
 51337                           ;	Chosen strategy is simple_byte
 51338  0139EA  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51339  0139EC  0AFF               	xorlw	255	; case 255
 51340  0139EE  0012               	return	
 51341  0139F0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 51342                           	opt stack 0
 51343                           tosu	equ	0xFFF
 51344                           tosh	equ	0xFFE
 51345                           tosl	equ	0xFFD
 51346                           pclatu	equ	0xFFB
 51347                           pclath	equ	0xFFA
 51348                           tblptru	equ	0xFF8
 51349                           tblptrh	equ	0xFF7
 51350                           tblptrl	equ	0xFF6
 51351                           tablat	equ	0xFF5
 51352                           prodh	equ	0xFF4
 51353                           prodl	equ	0xFF3
 51354                           intcon	equ	0xFF2
 51355                           indf0	equ	0xFEF
 51356                           postinc0	equ	0xFEE
 51357                           fsr0h	equ	0xFEA
 51358                           fsr0l	equ	0xFE9
 51359                           wreg	equ	0xFE8
 51360                           indf1	equ	0xFE7
 51361                           postinc1	equ	0xFE6
 51362                           postdec1	equ	0xFE5
 51363                           plusw1	equ	0xFE3
 51364                           fsr1h	equ	0xFE2
 51365                           fsr1l	equ	0xFE1
 51366                           indf2	equ	0xFDF
 51367                           postinc2	equ	0xFDE
 51368                           postdec2	equ	0xFDD
 51369                           plusw2	equ	0xFDB
 51370                           fsr2h	equ	0xFDA
 51371                           fsr2l	equ	0xFD9
 51372                           status	equ	0xFD8
 51373                           
 51374 ;; *************** function i2_SYSTEM_Initialize *****************
 51375 ;; Defined at:
 51376 ;;		line 39 in file "system.c"
 51377 ;; Parameters:    Size  Location     Type
 51378 ;;  state           1    wreg     enum E6623
 51379 ;; Auto vars:     Size  Location     Type
 51380 ;;  state           1    4[COMRAM] enum E6623
 51381 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 51382 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 51383 ;; Return value:  Size  Location     Type
 51384 ;;                  1    wreg      void 
 51385 ;; Registers used:
 51386 ;;		wreg, status,2, status,0
 51387 ;; Tracked objects:
 51388 ;;		On entry : 0/0
 51389 ;;		On exit  : 0/0
 51390 ;;		Unchanged: 0/0
 51391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51393 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51396 ;;Total ram usage:        5 bytes
 51397 ;; Hardware stack levels used:    1
 51398 ;; This function calls:
 51399 ;;		Nothing
 51400 ;; This function is called by:
 51401 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51402 ;; This function uses a non-reentrant model
 51403 ;;
 51404                           
 51405                           	psect	text214
 51406  014A50                     __ptext214:
 51407                           	opt stack 0
 51408  014A50                     i2_SYSTEM_Initialize:
 51409                           	opt stack 15
 51410                           
 51411                           ;incstack = 0
 51412                           ;i2SYSTEM_Initialize@state stored from wreg
 51413  014A50  6E05               	movwf	i2SYSTEM_Initialize@state,c
 51414                           
 51415                           ;system.c: 41: switch(state)
 51416  014A52  D01D               	goto	i2l897
 51417  014A54                     
 51418                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 51419  014A54  0E02               	movlw	2
 51420  014A56  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 51421  014A58  0E58               	movlw	88
 51422  014A5A  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 51423                           
 51424                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 51425  014A5C  8C9B               	bsf	3995,6,c	;volatile
 51426  014A5E                     i2l12911:
 51427  014A5E  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 51428  014A60  A0D8               	btfss	status,0,c
 51429  014A62  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 51430  014A64  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 51431  014A66  E1FB               	bnz	i2l12911
 51432  014A68  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 51433  014A6A  B4D8               	btfsc	status,2,c
 51434  014A6C  0012               	return	
 51435  014A6E  D7F7               	goto	i2l900
 51436  014A70                     
 51437                           ;system.c: 78: OSCCON = 0x70;
 51438  014A70  0E70               	movlw	112
 51439  014A72  6ED3               	movwf	4051,c	;volatile
 51440                           
 51441                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 51442  014A74  0E03               	movlw	3
 51443  014A76  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 51444  014A78  0E20               	movlw	32
 51445  014A7A  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 51446  014A7C                     i2l12915:
 51447  014A7C  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 51448  014A7E  A0D8               	btfss	status,0,c
 51449  014A80  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 51450  014A82  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 51451  014A84  E1FB               	bnz	i2l12915
 51452  014A86  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 51453  014A88  B4D8               	btfsc	status,2,c
 51454  014A8A  0012               	return	
 51455  014A8C  D7F7               	goto	i2l906
 51456  014A8E                     i2l897:
 51457  014A8E  5005               	movf	i2SYSTEM_Initialize@state,w,c
 51458                           
 51459                           ; Switch size 1, requested type "space"
 51460                           ; Number of cases is 3, Range of values is 0 to 2
 51461                           ; switch strategies available:
 51462                           ; Name         Instructions Cycles
 51463                           ; simple_byte           10     6 (average)
 51464                           ;	Chosen strategy is simple_byte
 51465  014A90  0A00               	xorlw	0	; case 0
 51466  014A92  B4D8               	btfsc	status,2,c
 51467  014A94  D7DF               	goto	i2l898
 51468  014A96  0A01               	xorlw	1	; case 1
 51469  014A98  B4D8               	btfsc	status,2,c
 51470  014A9A  0012               	return	
 51471  014A9C  0A03               	xorlw	3	; case 2
 51472  014A9E  A4D8               	btfss	status,2,c
 51473  014AA0  0012               	return	
 51474  014AA2  D7E6               	goto	i2l904
 51475  014AA4                     __end_ofi2_SYSTEM_Initialize:
 51476                           	opt stack 0
 51477                           tosu	equ	0xFFF
 51478                           tosh	equ	0xFFE
 51479                           tosl	equ	0xFFD
 51480                           pclatu	equ	0xFFB
 51481                           pclath	equ	0xFFA
 51482                           tblptru	equ	0xFF8
 51483                           tblptrh	equ	0xFF7
 51484                           tblptrl	equ	0xFF6
 51485                           tablat	equ	0xFF5
 51486                           prodh	equ	0xFF4
 51487                           prodl	equ	0xFF3
 51488                           intcon	equ	0xFF2
 51489                           indf0	equ	0xFEF
 51490                           postinc0	equ	0xFEE
 51491                           fsr0h	equ	0xFEA
 51492                           fsr0l	equ	0xFE9
 51493                           wreg	equ	0xFE8
 51494                           indf1	equ	0xFE7
 51495                           postinc1	equ	0xFE6
 51496                           postdec1	equ	0xFE5
 51497                           plusw1	equ	0xFE3
 51498                           fsr1h	equ	0xFE2
 51499                           fsr1l	equ	0xFE1
 51500                           indf2	equ	0xFDF
 51501                           postinc2	equ	0xFDE
 51502                           postdec2	equ	0xFDD
 51503                           plusw2	equ	0xFDB
 51504                           fsr2h	equ	0xFDA
 51505                           fsr2l	equ	0xFD9
 51506                           status	equ	0xFD8
 51507                           
 51508 ;; *************** function _USBCheckMSDRequest *****************
 51509 ;; Defined at:
 51510 ;;		line 218 in file "usb_device_msd.c"
 51511 ;; Parameters:    Size  Location     Type
 51512 ;;		None
 51513 ;; Auto vars:     Size  Location     Type
 51514 ;;		None
 51515 ;; Return value:  Size  Location     Type
 51516 ;;                  1    wreg      void 
 51517 ;; Registers used:
 51518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51519 ;; Tracked objects:
 51520 ;;		On entry : 0/0
 51521 ;;		On exit  : 0/0
 51522 ;;		Unchanged: 0/0
 51523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51525 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51528 ;;Total ram usage:        4 bytes
 51529 ;; Hardware stack levels used:    1
 51530 ;; Hardware stack levels required when called:    1
 51531 ;; This function calls:
 51532 ;;		i2_USBTransferOnePacket
 51533 ;; This function is called by:
 51534 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51535 ;; This function uses a non-reentrant model
 51536 ;;
 51537                           
 51538                           	psect	text215
 51539  0129A4                     __ptext215:
 51540                           	opt stack 0
 51541  0129A4                     _USBCheckMSDRequest:
 51542                           	opt stack 14
 51543                           
 51544                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 51545                           
 51546                           ;incstack = 0
 51547  0129A4  010D               	movlb	13	; () banked
 51548  0129A6  5130               	movf	48,w,b	;volatile
 51549  0129A8  0B1F               	andlw	31
 51550  0129AA  06E8               	decf	wreg,f,c
 51551  0129AC  A4D8               	btfss	status,2,c
 51552  0129AE  0012               	return	
 51553                           
 51554                           ; BSR set to: 13
 51555                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 51556                           
 51557                           ; BSR set to: 13
 51558                           
 51559                           ; BSR set to: 13
 51560                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 51561  0129B0  5134               	movf	52,w,b	;volatile
 51562  0129B2  A4D8               	btfss	status,2,c
 51563  0129B4  0012               	return	
 51564  0129B6  D04C               	goto	i2l545
 51565  0129B8                     
 51566                           ; BSR set to: 13
 51567                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 51568                           
 51569                           ; BSR set to: 13
 51570  0129B8  5132               	movf	50,w,b	;volatile
 51571  0129BA  1133               	iorwf	51,w,b	;volatile
 51572  0129BC  A4D8               	btfss	status,2,c
 51573  0129BE  0012               	return	
 51574                           
 51575                           ; BSR set to: 13
 51576  0129C0  5136               	movf	54,w,b	;volatile
 51577  0129C2  1137               	iorwf	55,w,b	;volatile
 51578  0129C4  A4D8               	btfss	status,2,c
 51579  0129C6  0012               	return	
 51580                           
 51581                           ; BSR set to: 13
 51582                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 51583                           
 51584                           ; BSR set to: 13
 51585                           
 51586                           ; BSR set to: 13
 51587                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 51588  0129C8  0E00               	movlw	0
 51589  0129CA  0101               	movlb	1	; () banked
 51590  0129CC  6F63               	movwf	_MSD_State& (0+255),b
 51591                           
 51592                           ; BSR set to: 1
 51593                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 51594  0129CE  6962               	setf	_MSDCommandState& (0+255),b
 51595                           
 51596                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 51597  0129D0  0E00               	movlw	0
 51598  0129D2  6F61               	movwf	_MSDReadState& (0+255),b
 51599                           
 51600                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 51601  0129D4  0E00               	movlw	0
 51602  0129D6  6F60               	movwf	_MSDWriteState& (0+255),b
 51603                           
 51604                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 51605  0129D8  0E01               	movlw	1
 51606  0129DA  6F5B               	movwf	_MSDCBWValid& (0+255),b
 51607                           
 51608                           ; BSR set to: 1
 51609                           
 51610                           ; BSR set to: 1
 51611                           
 51612                           ; BSR set to: 1
 51613                           
 51614                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 51615  0129DC  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 51616  0129E0  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 51617                           
 51618                           ; BSR set to: 1
 51619  0129E4  500C               	movf	_USBCheckMSDRequest$2534,w,c
 51620  0129E6  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 51621  0129E8  B4D8               	btfsc	status,2,c
 51622  0129EA  D00A               	goto	i2u1086_40
 51623                           
 51624                           ; BSR set to: 1
 51625                           
 51626                           ; BSR set to: 1
 51627                           
 51628                           ; BSR set to: 1
 51629                           
 51630                           ; BSR set to: 1
 51631  0129EC  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 51632  0129F0  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 51633                           
 51634                           ; BSR set to: 1
 51635                           
 51636                           ; BSR set to: 1
 51637  0129F4  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 51638  0129F8  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 51639  0129FC  BEDF               	btfsc	indf2,7,c
 51640  0129FE  D00F               	goto	i2l550
 51641  012A00                     i2u1086_40:
 51642                           
 51643                           ; BSR set to: 1
 51644                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 51645                           
 51646                           ; BSR set to: 1
 51647  012A00  0E00               	movlw	0
 51648  012A02  6E01               	movwf	i2USBTransferOnePacket@dir,c
 51649  012A04  0E40               	movlw	64
 51650  012A06  6E02               	movwf	i2USBTransferOnePacket@data,c
 51651  012A08  0E0D               	movlw	13
 51652  012A0A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 51653  012A0C  0E40               	movlw	64
 51654  012A0E  6E04               	movwf	i2USBTransferOnePacket@len,c
 51655  012A10  0E02               	movlw	2
 51656  012A12  EC09  F088         	call	i2_USBTransferOnePacket
 51657  012A16  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 51658  012A1A  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 51659  012A1E                     i2l550:
 51660                           
 51661                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 51662  012A1E  0E80               	movlw	128
 51663  012A20  6E55               	movwf	_inPipes+3,c	;volatile
 51664                           
 51665                           ;usb_device_msd.c: 263: break;
 51666  012A22  0012               	return	
 51667  012A24                     
 51668                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 51669  012A24  010D               	movlb	13	; () banked
 51670  012A26  5132               	movf	50,w,b	;volatile
 51671  012A28  1133               	iorwf	51,w,b	;volatile
 51672  012A2A  A4D8               	btfss	status,2,c
 51673  012A2C  0012               	return	
 51674                           
 51675                           ; BSR set to: 13
 51676  012A2E  0536               	decf	54,w,b	;volatile
 51677  012A30  1137               	iorwf	55,w,b	;volatile
 51678  012A32  A4D8               	btfss	status,2,c
 51679  012A34  0012               	return	
 51680                           
 51681                           ; BSR set to: 13
 51682                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 51683                           
 51684                           ; BSR set to: 13
 51685                           
 51686                           ; BSR set to: 13
 51687                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 51688  012A36  0E00               	movlw	0
 51689  012A38  6F38               	movwf	56,b	;volatile
 51690                           
 51691                           ; BSR set to: 13
 51692                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 51693  012A3A  0E38               	movlw	56
 51694  012A3C  6E52               	movwf	_inPipes,c	;volatile
 51695  012A3E  0E0D               	movlw	13
 51696  012A40  6E53               	movwf	_inPipes+1,c	;volatile
 51697                           
 51698                           ; BSR set to: 13
 51699  012A42  0E00               	movlw	0
 51700  012A44  6E57               	movwf	_inPipes+5,c	;volatile
 51701  012A46  0E01               	movlw	1
 51702  012A48  6E56               	movwf	_inPipes+4,c	;volatile
 51703                           
 51704                           ; BSR set to: 13
 51705  012A4A  0EC1               	movlw	193
 51706  012A4C  6E55               	movwf	_inPipes+3,c	;volatile
 51707                           
 51708                           ; BSR set to: 13
 51709                           ;usb_device_msd.c: 278: }
 51710                           
 51711                           ;usb_device_msd.c: 277: break;
 51712  012A4E  0012               	return	
 51713  012A50                     i2l545:
 51714                           
 51715                           ; BSR set to: 13
 51716                           
 51717                           ; BSR set to: 13
 51718  012A50  5131               	movf	49,w,b	;volatile
 51719                           
 51720                           ; Switch size 1, requested type "space"
 51721                           ; Number of cases is 2, Range of values is 254 to 255
 51722                           ; switch strategies available:
 51723                           ; Name         Instructions Cycles
 51724                           ; simple_byte            7     4 (average)
 51725                           ;	Chosen strategy is simple_byte
 51726  012A52  0AFE               	xorlw	254	; case 254
 51727  012A54  B4D8               	btfsc	status,2,c
 51728  012A56  D7E6               	goto	i2l562
 51729  012A58  0A01               	xorlw	1	; case 255
 51730  012A5A  A4D8               	btfss	status,2,c
 51731  012A5C  0012               	return	
 51732  012A5E  D7AC               	goto	i2l546
 51733  012A60                     __end_of_USBCheckMSDRequest:
 51734                           	opt stack 0
 51735                           tosu	equ	0xFFF
 51736                           tosh	equ	0xFFE
 51737                           tosl	equ	0xFFD
 51738                           pclatu	equ	0xFFB
 51739                           pclath	equ	0xFFA
 51740                           tblptru	equ	0xFF8
 51741                           tblptrh	equ	0xFF7
 51742                           tblptrl	equ	0xFF6
 51743                           tablat	equ	0xFF5
 51744                           prodh	equ	0xFF4
 51745                           prodl	equ	0xFF3
 51746                           intcon	equ	0xFF2
 51747                           indf0	equ	0xFEF
 51748                           postinc0	equ	0xFEE
 51749                           fsr0h	equ	0xFEA
 51750                           fsr0l	equ	0xFE9
 51751                           wreg	equ	0xFE8
 51752                           indf1	equ	0xFE7
 51753                           postinc1	equ	0xFE6
 51754                           postdec1	equ	0xFE5
 51755                           plusw1	equ	0xFE3
 51756                           fsr1h	equ	0xFE2
 51757                           fsr1l	equ	0xFE1
 51758                           indf2	equ	0xFDF
 51759                           postinc2	equ	0xFDE
 51760                           postdec2	equ	0xFDD
 51761                           plusw2	equ	0xFDB
 51762                           fsr2h	equ	0xFDA
 51763                           fsr2l	equ	0xFD9
 51764                           status	equ	0xFD8
 51765                           
 51766 ;; *************** function _USBCheckHIDRequest *****************
 51767 ;; Defined at:
 51768 ;;		line 153 in file "usb_device_hid.c"
 51769 ;; Parameters:    Size  Location     Type
 51770 ;;		None
 51771 ;; Auto vars:     Size  Location     Type
 51772 ;;		None
 51773 ;; Return value:  Size  Location     Type
 51774 ;;                  1    wreg      void 
 51775 ;; Registers used:
 51776 ;;		wreg, status,2, status,0
 51777 ;; Tracked objects:
 51778 ;;		On entry : 0/0
 51779 ;;		On exit  : 0/0
 51780 ;;		Unchanged: 0/0
 51781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51786 ;;Total ram usage:        0 bytes
 51787 ;; Hardware stack levels used:    1
 51788 ;; This function calls:
 51789 ;;		Nothing
 51790 ;; This function is called by:
 51791 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51792 ;; This function uses a non-reentrant model
 51793 ;;
 51794                           
 51795                           	psect	text216
 51796  01227C                     __ptext216:
 51797                           	opt stack 0
 51798  01227C                     _USBCheckHIDRequest:
 51799                           	opt stack 15
 51800                           
 51801                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 51802                           
 51803                           ;incstack = 0
 51804  01227C  010D               	movlb	13	; () banked
 51805  01227E  5130               	movf	48,w,b	;volatile
 51806  012280  0B1F               	andlw	31
 51807  012282  06E8               	decf	wreg,f,c
 51808  012284  A4D8               	btfss	status,2,c
 51809  012286  0012               	return	
 51810                           
 51811                           ; BSR set to: 13
 51812                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 51813                           
 51814                           ; BSR set to: 13
 51815                           
 51816                           ; BSR set to: 13
 51817  012288  5134               	movf	52,w,b	;volatile
 51818  01228A  A4D8               	btfss	status,2,c
 51819  01228C  0012               	return	
 51820                           
 51821                           ; BSR set to: 13
 51822                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 51823                           
 51824                           ; BSR set to: 13
 51825                           
 51826                           ; BSR set to: 13
 51827  01228E  0E06               	movlw	6
 51828  012290  1931               	xorwf	49,w,b	;volatile
 51829  012292  B4D8               	btfsc	status,2,c
 51830  012294  D019               	goto	i2l425
 51831  012296  D021               	goto	i2l428
 51832  012298                     
 51833                           ; BSR set to: 13
 51834                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 51835                           
 51836                           ; BSR set to: 13
 51837  012298  0101               	movlb	1	; () banked
 51838  01229A  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51839  01229C  A4D8               	btfss	status,2,c
 51840  01229E  D01D               	goto	i2l428
 51841                           
 51842                           ; BSR set to: 1
 51843                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 51844  0122A0  0ED0               	movlw	low (_configDescriptor1+18)
 51845  0122A2  6E52               	movwf	_inPipes,c	;volatile
 51846  0122A4  0EA0               	movlw	high (_configDescriptor1+18)
 51847  0122A6  6E53               	movwf	_inPipes+1,c	;volatile
 51848                           
 51849                           ; BSR set to: 1
 51850  0122A8  0E00               	movlw	0
 51851  0122AA  6E57               	movwf	_inPipes+5,c	;volatile
 51852  0122AC  0E09               	movlw	9
 51853  0122AE  D00A               	goto	L85
 51854  0122B0                     i2l12509:
 51855                           
 51856                           ; BSR set to: 1
 51857  0122B0  0EC0               	movlw	192
 51858  0122B2  6E55               	movwf	_inPipes+3,c	;volatile
 51859                           
 51860                           ; BSR set to: 1
 51861                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 51862  0122B4  D012               	goto	i2l428
 51863  0122B6                     
 51864                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 51865                           
 51866                           ; BSR set to: 1
 51867  0122B6  0E84               	movlw	low _hid_rpt01
 51868  0122B8  6E52               	movwf	_inPipes,c	;volatile
 51869  0122BA  0EA1               	movlw	high _hid_rpt01
 51870  0122BC  6E53               	movwf	_inPipes+1,c	;volatile
 51871  0122BE  0E00               	movlw	0
 51872  0122C0  6E57               	movwf	_inPipes+5,c	;volatile
 51873  0122C2  0E1D               	movlw	29
 51874  0122C4                     L85:
 51875  0122C4  6E56               	movwf	_inPipes+4,c	;volatile
 51876  0122C6  D7F4               	goto	i2l12509
 51877  0122C8                     i2l425:
 51878  0122C8  010D               	movlb	13	; () banked
 51879  0122CA  5133               	movf	51,w,b	;volatile
 51880                           
 51881                           ; Switch size 1, requested type "space"
 51882                           ; Number of cases is 3, Range of values is 33 to 35
 51883                           ; switch strategies available:
 51884                           ; Name         Instructions Cycles
 51885                           ; simple_byte           10     6 (average)
 51886                           ;	Chosen strategy is simple_byte
 51887  0122CC  0A21               	xorlw	33	; case 33
 51888  0122CE  B4D8               	btfsc	status,2,c
 51889  0122D0  D7E3               	goto	i2l426
 51890  0122D2  0A03               	xorlw	3	; case 34
 51891  0122D4  B4D8               	btfsc	status,2,c
 51892  0122D6  D7EF               	goto	i2l429
 51893  0122D8  0A01               	xorlw	1	; case 35
 51894  0122DA                     i2l428:
 51895                           
 51896                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 51897                           
 51898                           ; BSR set to: 13
 51899                           
 51900                           ; BSR set to: 13
 51901  0122DA  010D               	movlb	13	; () banked
 51902  0122DC  3930               	swapf	48,w,b	;volatile
 51903  0122DE  32E8               	rrcf	wreg,f,c
 51904  0122E0  0B03               	andlw	3
 51905  0122E2  06E8               	decf	wreg,f,c
 51906  0122E4  A4D8               	btfss	status,2,c
 51907  0122E6  0012               	return	
 51908  0122E8  D020               	goto	i2l432
 51909  0122EA                     
 51910                           ; BSR set to: 13
 51911                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 51912                           
 51913                           ; BSR set to: 13
 51914  0122EA  0EC0               	movlw	low _idle_rate
 51915  0122EC  6E52               	movwf	_inPipes,c	;volatile
 51916  0122EE  0E01               	movlw	high _idle_rate
 51917  0122F0  6E53               	movwf	_inPipes+1,c	;volatile
 51918                           
 51919                           ; BSR set to: 13
 51920  0122F2  0E00               	movlw	0
 51921  0122F4  6E57               	movwf	_inPipes+5,c	;volatile
 51922  0122F6  0E01               	movlw	1
 51923  0122F8  6E56               	movwf	_inPipes+4,c	;volatile
 51924                           
 51925                           ; BSR set to: 13
 51926  0122FA  0EC1               	movlw	193
 51927  0122FC  6E55               	movwf	_inPipes+3,c	;volatile
 51928                           
 51929                           ;usb_device_hid.c: 223: break;
 51930  0122FE  0012               	return	
 51931  012300                     
 51932                           ; BSR set to: 13
 51933                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 51934                           
 51935                           ; BSR set to: 13
 51936  012300  0E80               	movlw	128
 51937  012302  6E55               	movwf	_inPipes+3,c	;volatile
 51938                           
 51939                           ; BSR set to: 13
 51940                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 51941  012304  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 51942                           
 51943                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 51944  012308  0012               	return	
 51945  01230A                     
 51946                           ; BSR set to: 13
 51947                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 51948                           
 51949                           ; BSR set to: 13
 51950  01230A  0EBF               	movlw	low _active_protocol
 51951  01230C  6E52               	movwf	_inPipes,c	;volatile
 51952  01230E  0E01               	movlw	high _active_protocol
 51953  012310  6E53               	movwf	_inPipes+1,c	;volatile
 51954                           
 51955                           ; BSR set to: 13
 51956  012312  0E00               	movlw	0
 51957  012314  6E57               	movwf	_inPipes+5,c	;volatile
 51958  012316  0E01               	movlw	1
 51959  012318  6E56               	movwf	_inPipes+4,c	;volatile
 51960                           
 51961                           ; BSR set to: 13
 51962  01231A  0E81               	movlw	129
 51963  01231C  6E55               	movwf	_inPipes+3,c	;volatile
 51964                           
 51965                           ;usb_device_hid.c: 234: break;
 51966  01231E  0012               	return	
 51967  012320                     
 51968                           ; BSR set to: 13
 51969                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 51970                           
 51971                           ; BSR set to: 13
 51972  012320  0E80               	movlw	128
 51973  012322  6E55               	movwf	_inPipes+3,c	;volatile
 51974                           
 51975                           ; BSR set to: 13
 51976                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 51977  012324  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 51978                           
 51979                           ; BSR set to: 13
 51980                           ;usb_device_hid.c: 239: }
 51981                           
 51982                           ;usb_device_hid.c: 238: break;
 51983  012328  0012               	return	
 51984  01232A                     i2l432:
 51985                           
 51986                           ; BSR set to: 13
 51987                           
 51988                           ; BSR set to: 13
 51989  01232A  5131               	movf	49,w,b	;volatile
 51990                           
 51991                           ; Switch size 1, requested type "space"
 51992                           ; Number of cases is 6, Range of values is 1 to 11
 51993                           ; switch strategies available:
 51994                           ; Name         Instructions Cycles
 51995                           ; simple_byte           19    10 (average)
 51996                           ;	Chosen strategy is simple_byte
 51997  01232C  0A01               	xorlw	1	; case 1
 51998  01232E  B4D8               	btfsc	status,2,c
 51999  012330  0012               	return	
 52000  012332  0A03               	xorlw	3	; case 2
 52001  012334  B4D8               	btfsc	status,2,c
 52002  012336  D7D9               	goto	i2l436
 52003  012338  0A01               	xorlw	1	; case 3
 52004  01233A  B4D8               	btfsc	status,2,c
 52005  01233C  D7E6               	goto	i2l438
 52006  01233E  0A0A               	xorlw	10	; case 9
 52007  012340  B4D8               	btfsc	status,2,c
 52008  012342  0012               	return	
 52009  012344  0A03               	xorlw	3	; case 10
 52010  012346  B4D8               	btfsc	status,2,c
 52011  012348  D7DB               	goto	i2l437
 52012  01234A  0A01               	xorlw	1	; case 11
 52013  01234C  A4D8               	btfss	status,2,c
 52014  01234E  0012               	return	
 52015  012350  D7E7               	goto	i2l439
 52016  012352                     __end_of_USBCheckHIDRequest:
 52017                           	opt stack 0
 52018                           tosu	equ	0xFFF
 52019                           tosh	equ	0xFFE
 52020                           tosl	equ	0xFFD
 52021                           pclatu	equ	0xFFB
 52022                           pclath	equ	0xFFA
 52023                           tblptru	equ	0xFF8
 52024                           tblptrh	equ	0xFF7
 52025                           tblptrl	equ	0xFF6
 52026                           tablat	equ	0xFF5
 52027                           prodh	equ	0xFF4
 52028                           prodl	equ	0xFF3
 52029                           intcon	equ	0xFF2
 52030                           indf0	equ	0xFEF
 52031                           postinc0	equ	0xFEE
 52032                           fsr0h	equ	0xFEA
 52033                           fsr0l	equ	0xFE9
 52034                           wreg	equ	0xFE8
 52035                           indf1	equ	0xFE7
 52036                           postinc1	equ	0xFE6
 52037                           postdec1	equ	0xFE5
 52038                           plusw1	equ	0xFE3
 52039                           fsr1h	equ	0xFE2
 52040                           fsr1l	equ	0xFE1
 52041                           indf2	equ	0xFDF
 52042                           postinc2	equ	0xFDE
 52043                           postdec2	equ	0xFDD
 52044                           plusw2	equ	0xFDB
 52045                           fsr2h	equ	0xFDA
 52046                           fsr2l	equ	0xFD9
 52047                           status	equ	0xFD8
 52048                           
 52049 ;; *************** function _MSDTransferTerminated *****************
 52050 ;; Defined at:
 52051 ;;		line 1674 in file "usb_device_msd.c"
 52052 ;; Parameters:    Size  Location     Type
 52053 ;;  handle          2   11[COMRAM] PTR void 
 52054 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52055 ;;		 -> BDT(48), 
 52056 ;; Auto vars:     Size  Location     Type
 52057 ;;		None
 52058 ;; Return value:  Size  Location     Type
 52059 ;;                  1    wreg      void 
 52060 ;; Registers used:
 52061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52062 ;; Tracked objects:
 52063 ;;		On entry : 0/0
 52064 ;;		On exit  : 0/0
 52065 ;;		Unchanged: 0/0
 52066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52071 ;;Total ram usage:        4 bytes
 52072 ;; Hardware stack levels used:    1
 52073 ;; Hardware stack levels required when called:    1
 52074 ;; This function calls:
 52075 ;;		i2_USBStallEndpoint
 52076 ;;		i2_USBTransferOnePacket
 52077 ;; This function is called by:
 52078 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52079 ;; This function uses a non-reentrant model
 52080 ;;
 52081                           
 52082                           	psect	text217
 52083  0148FE                     __ptext217:
 52084                           	opt stack 0
 52085  0148FE                     _MSDTransferTerminated:
 52086                           	opt stack 14
 52087                           
 52088                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 52089                           
 52090                           ; BSR set to: 13
 52091                           ;incstack = 0
 52092  0148FE  0101               	movlb	1	; () banked
 52093  014900  515B               	movf	_MSDCBWValid& (0+255),w,b
 52094  014902  A4D8               	btfss	status,2,c
 52095  014904  D00B               	goto	i2l780
 52096                           
 52097                           ; BSR set to: 1
 52098                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 52099  014906  0E01               	movlw	1
 52100  014908  6E01               	movwf	i2USBStallEndpoint@dir,c
 52101  01490A  0E02               	movlw	2
 52102  01490C  EC86  F087         	call	i2_USBStallEndpoint
 52103                           
 52104                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 52105  014910  0E00               	movlw	0
 52106  014912  6E01               	movwf	i2USBStallEndpoint@dir,c
 52107  014914  0E02               	movlw	2
 52108  014916  EC86  F087         	call	i2_USBStallEndpoint
 52109                           
 52110                           ;usb_device_msd.c: 1681: }
 52111  01491A  0012               	return	
 52112  01491C                     i2l780:
 52113  01491C  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 52114  014920  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 52115  014924  500E               	movf	_MSDTransferTerminated$2623,w,c
 52116  014926  180C               	xorwf	MSDTransferTerminated@handle,w,c
 52117  014928  E114               	bnz	i2l783
 52118  01492A  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 52119  01492C  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 52120  01492E  A4D8               	btfss	status,2,c
 52121  014930  0012               	return	
 52122                           
 52123                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 52124  014932  0E00               	movlw	0
 52125  014934  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52126  014936  0E40               	movlw	64
 52127  014938  6E02               	movwf	i2USBTransferOnePacket@data,c
 52128  01493A  0E0D               	movlw	13
 52129  01493C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52130  01493E  0E40               	movlw	64
 52131  014940  6E04               	movwf	i2USBTransferOnePacket@len,c
 52132  014942  0E02               	movlw	2
 52133  014944  EC09  F088         	call	i2_USBTransferOnePacket
 52134  014948  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52135  01494C  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52136  014950  0012               	return	
 52137  014952                     i2l783:
 52138  014952  0012               	return		;funcret
 52139  014954                     __end_of_MSDTransferTerminated:
 52140                           	opt stack 0
 52141                           tosu	equ	0xFFF
 52142                           tosh	equ	0xFFE
 52143                           tosl	equ	0xFFD
 52144                           pclatu	equ	0xFFB
 52145                           pclath	equ	0xFFA
 52146                           tblptru	equ	0xFF8
 52147                           tblptrh	equ	0xFF7
 52148                           tblptrl	equ	0xFF6
 52149                           tablat	equ	0xFF5
 52150                           prodh	equ	0xFF4
 52151                           prodl	equ	0xFF3
 52152                           intcon	equ	0xFF2
 52153                           indf0	equ	0xFEF
 52154                           postinc0	equ	0xFEE
 52155                           fsr0h	equ	0xFEA
 52156                           fsr0l	equ	0xFE9
 52157                           wreg	equ	0xFE8
 52158                           indf1	equ	0xFE7
 52159                           postinc1	equ	0xFE6
 52160                           postdec1	equ	0xFE5
 52161                           plusw1	equ	0xFE3
 52162                           fsr1h	equ	0xFE2
 52163                           fsr1l	equ	0xFE1
 52164                           indf2	equ	0xFDF
 52165                           postinc2	equ	0xFDE
 52166                           postdec2	equ	0xFDD
 52167                           plusw2	equ	0xFDB
 52168                           fsr2h	equ	0xFDA
 52169                           fsr2l	equ	0xFD9
 52170                           status	equ	0xFD8
 52171                           
 52172 ;; *************** function i2_USBStallEndpoint *****************
 52173 ;; Defined at:
 52174 ;;		line 1073 in file "usb_device.c"
 52175 ;; Parameters:    Size  Location     Type
 52176 ;;  ep              1    wreg     unsigned char 
 52177 ;;  dir             1    0[COMRAM] unsigned char 
 52178 ;; Auto vars:     Size  Location     Type
 52179 ;;  ep              1    5[COMRAM] unsigned char 
 52180 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 52181 ;;		 -> BDT(48), 
 52182 ;; Return value:  Size  Location     Type
 52183 ;;                  1    wreg      void 
 52184 ;; Registers used:
 52185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52186 ;; Tracked objects:
 52187 ;;		On entry : 0/0
 52188 ;;		On exit  : 0/0
 52189 ;;		Unchanged: 0/0
 52190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52193 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52195 ;;Total ram usage:        8 bytes
 52196 ;; Hardware stack levels used:    1
 52197 ;; This function calls:
 52198 ;;		Nothing
 52199 ;; This function is called by:
 52200 ;;		_MSDTransferTerminated
 52201 ;; This function uses a non-reentrant model
 52202 ;;
 52203                           
 52204                           	psect	text218
 52205  010F0C                     __ptext218:
 52206                           	opt stack 0
 52207  010F0C                     i2_USBStallEndpoint:
 52208                           	opt stack 14
 52209                           
 52210                           ;incstack = 0
 52211                           ;i2USBStallEndpoint@ep stored from wreg
 52212  010F0C  6E06               	movwf	i2USBStallEndpoint@ep,c
 52213                           
 52214                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 52215  010F0E  5006               	movf	i2USBStallEndpoint@ep,w,c
 52216  010F10  A4D8               	btfss	status,2,c
 52217  010F12  D02B               	goto	i2l192
 52218                           
 52219                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 52220  010F14  EE20 F001          	lfsr	2,1
 52221  010F18  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52222  010F1A  26D9               	addwf	fsr2l,f,c
 52223  010F1C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52224  010F1E  22DA               	addwfc	fsr2h,f,c
 52225  010F20  0E08               	movlw	8
 52226  010F22  6EDF               	movwf	indf2,c
 52227                           
 52228                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52229  010F24  EE20 F002          	lfsr	2,2
 52230  010F28  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52231  010F2A  26D9               	addwf	fsr2l,f,c
 52232  010F2C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52233  010F2E  22DA               	addwfc	fsr2h,f,c
 52234  010F30  0E30               	movlw	48
 52235  010F32  6EDE               	movwf	postinc2,c
 52236  010F34  0E0D               	movlw	13
 52237  010F36  6EDD               	movwf	postdec2,c
 52238                           
 52239                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52240  010F38  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52241  010F3C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52242  010F40  0E0C               	movlw	12
 52243  010F42  6EDF               	movwf	indf2,c
 52244                           
 52245                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52246  010F44  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52247  010F48  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52248  010F4C  0E00               	movlw	0
 52249  010F4E  8EDB               	bsf	plusw2,7,c
 52250                           
 52251                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 52252  010F50  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52253  010F54  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52254  010F58  0E04               	movlw	4
 52255  010F5A  6EDF               	movwf	indf2,c
 52256                           
 52257                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52258  010F5C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52259  010F60  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52260  010F64  0E00               	movlw	0
 52261  010F66  8EDB               	bsf	plusw2,7,c
 52262                           
 52263                           ;usb_device.c: 1089: }
 52264  010F68  0012               	return	
 52265  010F6A                     i2l192:
 52266                           
 52267                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 52268  010F6A  5001               	movf	i2USBStallEndpoint@dir,w,c
 52269  010F6C  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 52270  010F6E  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 52271  010F70  90D8               	bcf	status,0,c
 52272  010F72  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52273  010F74  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52274  010F76  5006               	movf	i2USBStallEndpoint@ep,w,c
 52275  010F78  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 52276  010F7A  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 52277  010F7C  90D8               	bcf	status,0,c
 52278  010F7E  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52279  010F80  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52280  010F82  90D8               	bcf	status,0,c
 52281  010F84  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52282  010F86  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52283  010F88  5002               	movf	??i2_USBStallEndpoint,w,c
 52284  010F8A  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 52285  010F8C  5003               	movf	??i2_USBStallEndpoint+1,w,c
 52286  010F8E  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 52287  010F90  90D8               	bcf	status,0,c
 52288  010F92  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52289  010F94  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52290  010F96  90D8               	bcf	status,0,c
 52291  010F98  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52292  010F9A  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52293  010F9C  0E00               	movlw	0
 52294  010F9E  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 52295  010FA0  6E07               	movwf	i2USBStallEndpoint@p,c
 52296  010FA2  0E0D               	movlw	13
 52297  010FA4  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 52298  010FA6  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52299                           
 52300                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 52301  010FA8  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52302  010FAC  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52303  010FB0  0E00               	movlw	0
 52304  010FB2  84DB               	bsf	plusw2,2,c
 52305                           
 52306                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 52307  010FB4  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52308  010FB8  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52309  010FBC  0E00               	movlw	0
 52310  010FBE  8EDB               	bsf	plusw2,7,c
 52311                           
 52312                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 52313  010FC0  5006               	movf	i2USBStallEndpoint@ep,w,c
 52314  010FC2  0D04               	mullw	4
 52315  010FC4  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 52316  010FC8  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 52317  010FCC  5001               	movf	i2USBStallEndpoint@dir,w,c
 52318  010FCE  0D02               	mullw	2
 52319  010FD0  50F3               	movf	prodl,w,c
 52320  010FD2  2602               	addwf	??i2_USBStallEndpoint,f,c
 52321  010FD4  50F4               	movf	prodh,w,c
 52322  010FD6  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52323  010FD8  90D8               	bcf	status,0,c
 52324  010FDA  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52325  010FDC  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52326  010FDE  90D8               	bcf	status,0,c
 52327  010FE0  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52328  010FE2  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52329  010FE4  0E04               	movlw	4
 52330  010FE6  2602               	addwf	??i2_USBStallEndpoint,f,c
 52331  010FE8  0E00               	movlw	0
 52332  010FEA  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52333  010FEC  0E00               	movlw	0
 52334  010FEE  2402               	addwf	??i2_USBStallEndpoint,w,c
 52335  010FF0  6E07               	movwf	i2USBStallEndpoint@p,c
 52336  010FF2  0E0D               	movlw	13
 52337  010FF4  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 52338  010FF6  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52339                           
 52340                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 52341  010FF8  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52342  010FFC  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52343  011000  0E00               	movlw	0
 52344  011002  84DB               	bsf	plusw2,2,c
 52345                           
 52346                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 52347  011004  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52348  011008  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52349  01100C  0E00               	movlw	0
 52350  01100E  8EDB               	bsf	plusw2,7,c
 52351  011010  0012               	return	
 52352  011012                     __end_ofi2_USBStallEndpoint:
 52353                           	opt stack 0
 52354                           tosu	equ	0xFFF
 52355                           tosh	equ	0xFFE
 52356                           tosl	equ	0xFFD
 52357                           pclatu	equ	0xFFB
 52358                           pclath	equ	0xFFA
 52359                           tblptru	equ	0xFF8
 52360                           tblptrh	equ	0xFF7
 52361                           tblptrl	equ	0xFF6
 52362                           tablat	equ	0xFF5
 52363                           prodh	equ	0xFF4
 52364                           prodl	equ	0xFF3
 52365                           intcon	equ	0xFF2
 52366                           indf0	equ	0xFEF
 52367                           postinc0	equ	0xFEE
 52368                           fsr0h	equ	0xFEA
 52369                           fsr0l	equ	0xFE9
 52370                           wreg	equ	0xFE8
 52371                           indf1	equ	0xFE7
 52372                           postinc1	equ	0xFE6
 52373                           postdec1	equ	0xFE5
 52374                           plusw1	equ	0xFE3
 52375                           fsr1h	equ	0xFE2
 52376                           fsr1l	equ	0xFE1
 52377                           indf2	equ	0xFDF
 52378                           postinc2	equ	0xFDE
 52379                           postdec2	equ	0xFDD
 52380                           plusw2	equ	0xFDB
 52381                           fsr2h	equ	0xFDA
 52382                           fsr2l	equ	0xFD9
 52383                           status	equ	0xFD8
 52384                           
 52385 ;; *************** function _APP_DeviceMSDInitialize *****************
 52386 ;; Defined at:
 52387 ;;		line 84 in file "app_device_msd.c"
 52388 ;; Parameters:    Size  Location     Type
 52389 ;;		None
 52390 ;; Auto vars:     Size  Location     Type
 52391 ;;		None
 52392 ;; Return value:  Size  Location     Type
 52393 ;;                  1    wreg      void 
 52394 ;; Registers used:
 52395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52396 ;; Tracked objects:
 52397 ;;		On entry : 0/0
 52398 ;;		On exit  : 0/0
 52399 ;;		Unchanged: 0/0
 52400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52405 ;;Total ram usage:        0 bytes
 52406 ;; Hardware stack levels used:    1
 52407 ;; Hardware stack levels required when called:    2
 52408 ;; This function calls:
 52409 ;;		_USBEnableEndpoint
 52410 ;;		_USBMSDInit
 52411 ;; This function is called by:
 52412 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52413 ;; This function uses a non-reentrant model
 52414 ;;
 52415                           
 52416                           	psect	text219
 52417  015838                     __ptext219:
 52418                           	opt stack 0
 52419  015838                     _APP_DeviceMSDInitialize:
 52420                           	opt stack 13
 52421                           
 52422                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 52423                           
 52424                           ;incstack = 0
 52425  015838  0E1E               	movlw	30
 52426  01583A  6E09               	movwf	USBEnableEndpoint@options,c
 52427  01583C  0E02               	movlw	2
 52428  01583E  EC2D  F0A8         	call	_USBEnableEndpoint
 52429                           
 52430                           ;app_device_msd.c: 93: USBMSDInit();
 52431  015842  EC70  F085         	call	_USBMSDInit	;wreg free
 52432  015846  0012               	return		;funcret
 52433  015848                     __end_of_APP_DeviceMSDInitialize:
 52434                           	opt stack 0
 52435                           tosu	equ	0xFFF
 52436                           tosh	equ	0xFFE
 52437                           tosl	equ	0xFFD
 52438                           pclatu	equ	0xFFB
 52439                           pclath	equ	0xFFA
 52440                           tblptru	equ	0xFF8
 52441                           tblptrh	equ	0xFF7
 52442                           tblptrl	equ	0xFF6
 52443                           tablat	equ	0xFF5
 52444                           prodh	equ	0xFF4
 52445                           prodl	equ	0xFF3
 52446                           intcon	equ	0xFF2
 52447                           indf0	equ	0xFEF
 52448                           postinc0	equ	0xFEE
 52449                           fsr0h	equ	0xFEA
 52450                           fsr0l	equ	0xFE9
 52451                           wreg	equ	0xFE8
 52452                           indf1	equ	0xFE7
 52453                           postinc1	equ	0xFE6
 52454                           postdec1	equ	0xFE5
 52455                           plusw1	equ	0xFE3
 52456                           fsr1h	equ	0xFE2
 52457                           fsr1l	equ	0xFE1
 52458                           indf2	equ	0xFDF
 52459                           postinc2	equ	0xFDE
 52460                           postdec2	equ	0xFDD
 52461                           plusw2	equ	0xFDB
 52462                           fsr2h	equ	0xFDA
 52463                           fsr2l	equ	0xFD9
 52464                           status	equ	0xFD8
 52465                           
 52466 ;; *************** function _USBMSDInit *****************
 52467 ;; Defined at:
 52468 ;;		line 142 in file "usb_device_msd.c"
 52469 ;; Parameters:    Size  Location     Type
 52470 ;;		None
 52471 ;; Auto vars:     Size  Location     Type
 52472 ;;		None
 52473 ;; Return value:  Size  Location     Type
 52474 ;;                  1    wreg      void 
 52475 ;; Registers used:
 52476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52477 ;; Tracked objects:
 52478 ;;		On entry : 0/0
 52479 ;;		On exit  : 0/0
 52480 ;;		Unchanged: 0/0
 52481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52485 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52486 ;;Total ram usage:        3 bytes
 52487 ;; Hardware stack levels used:    1
 52488 ;; Hardware stack levels required when called:    1
 52489 ;; This function calls:
 52490 ;;		i2_ExternalFlash_MediaDetect
 52491 ;;		i2_ExternalFlash_MediaInitialize
 52492 ;;		i2_ResetSenseData
 52493 ;;		i2_USBTransferOnePacket
 52494 ;; This function is called by:
 52495 ;;		_APP_DeviceMSDInitialize
 52496 ;; This function uses a non-reentrant model
 52497 ;;
 52498                           
 52499                           	psect	text220
 52500  010AE0                     __ptext220:
 52501                           	opt stack 0
 52502  010AE0                     _USBMSDInit:
 52503                           	opt stack 13
 52504                           
 52505                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 52506                           
 52507                           ;incstack = 0
 52508  010AE0  0E00               	movlw	0
 52509  010AE2  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52510  010AE4  0E40               	movlw	64
 52511  010AE6  6E02               	movwf	i2USBTransferOnePacket@data,c
 52512  010AE8  0E0D               	movlw	13
 52513  010AEA  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52514  010AEC  0E40               	movlw	64
 52515  010AEE  6E04               	movwf	i2USBTransferOnePacket@len,c
 52516  010AF0  0E02               	movlw	2
 52517  010AF2  EC09  F088         	call	i2_USBTransferOnePacket
 52518  010AF6  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52519  010AFA  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52520  010AFE  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 52521  010B02  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 52522                           
 52523                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 52524  010B06  0E00               	movlw	0
 52525  010B08  0101               	movlb	1	; () banked
 52526  010B0A  6F63               	movwf	_MSD_State& (0+255),b
 52527                           
 52528                           ; BSR set to: 1
 52529                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 52530  010B0C  6962               	setf	_MSDCommandState& (0+255),b
 52531                           
 52532                           ; BSR set to: 1
 52533                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 52534  010B0E  0E00               	movlw	0
 52535  010B10  6F61               	movwf	_MSDReadState& (0+255),b
 52536                           
 52537                           ; BSR set to: 1
 52538                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 52539  010B12  0E00               	movlw	0
 52540  010B14  6F60               	movwf	_MSDWriteState& (0+255),b
 52541                           
 52542                           ; BSR set to: 1
 52543                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 52544  010B16  0E00               	movlw	0
 52545  010B18  6F5C               	movwf	_MSDHostNoData& (0+255),b
 52546                           
 52547                           ; BSR set to: 1
 52548                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 52549  010B1A  0E00               	movlw	0
 52550  010B1C  0102               	movlb	2	; () banked
 52551  010B1E  6F2E               	movwf	_gblNumBLKS& (0+255),b
 52552  010B20  0E00               	movlw	0
 52553  010B22  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 52554  010B24  0E00               	movlw	0
 52555  010B26  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 52556  010B28  0E00               	movlw	0
 52557  010B2A  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 52558                           
 52559                           ; BSR set to: 2
 52560                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 52561  010B2C  0E00               	movlw	0
 52562  010B2E  6F2A               	movwf	_gblBLKLen& (0+255),b
 52563  010B30  0E00               	movlw	0
 52564  010B32  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 52565  010B34  0E00               	movlw	0
 52566  010B36  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 52567  010B38  0E00               	movlw	0
 52568  010B3A  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 52569                           
 52570                           ; BSR set to: 2
 52571                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 52572  010B3C  0E01               	movlw	1
 52573  010B3E  0101               	movlb	1	; () banked
 52574  010B40  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52575                           
 52576                           ; BSR set to: 1
 52577                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 52578  010B42  0E00               	movlw	0
 52579  010B44  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 52580  010B46  0E00               	movlw	0
 52581  010B48  6F47               	movwf	_gblMediaPresent& (0+255),b
 52582                           
 52583                           ; BSR set to: 1
 52584                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 52585  010B4A  0E00               	movlw	0
 52586  010B4C  0102               	movlb	2	; () banked
 52587  010B4E  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 52588  010B50  D04A               	goto	i2l534
 52589  010B52                     
 52590                           ; BSR set to: 2
 52591                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 52592                           
 52593                           ; BSR set to: 2
 52594  010B52  510D               	movf	(_gblCBW+13)& (0+255),w,b
 52595  010B54  0D01               	mullw	1
 52596  010B56  0E5D               	movlw	low _SoftDetach
 52597  010B58  24F3               	addwf	prodl,w,c
 52598  010B5A  6ED9               	movwf	fsr2l,c
 52599  010B5C  0E01               	movlw	high _SoftDetach
 52600  010B5E  20F4               	addwfc	prodh,w,c
 52601  010B60  6EDA               	movwf	fsr2h,c
 52602  010B62  0E00               	movlw	0
 52603  010B64  6EDF               	movwf	indf2,c
 52604                           
 52605                           ; BSR set to: 2
 52606                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 52607  010B66  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 52608  010B6A  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 52609  010B6E  EE22  F092         	lfsr	2,_LUN+9
 52610  010B72  D801               	call	i2u1057_48
 52611  010B74  D00A               	goto	i2u1057_49
 52612  010B76                     i2u1057_48:
 52613  010B76  0005               	push	
 52614  010B78  6EFA               	movwf	pclath,c
 52615  010B7A  50DE               	movf	postinc2,w,c
 52616  010B7C  6EFD               	movwf	tosl,c
 52617  010B7E  50DE               	movf	postinc2,w,c
 52618  010B80  6EFE               	movwf	tosh,c
 52619  010B82  50DE               	movf	postinc2,w,c
 52620  010B84  6EFF               	movwf	tosu,c
 52621  010B86  50FA               	movf	pclath,w,c
 52622  010B88  0012               	return		;indir
 52623  010B8A                     i2u1057_49:
 52624  010B8A  0900               	iorlw	0
 52625  010B8C  B4D8               	btfsc	status,2,c
 52626  010B8E  D027               	goto	i2l537
 52627                           
 52628                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 52629  010B90  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 52630  010B94  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 52631  010B98  D801               	call	i2u1059_48
 52632  010B9A  D00B               	goto	i2u1059_49
 52633  010B9C                     i2u1059_48:
 52634  010B9C  0005               	push	
 52635  010B9E  6EFA               	movwf	pclath,c
 52636  010BA0  0102               	movlb	2	; () banked
 52637  010BA2  5189               	movf	_LUN& (0+255),w,b
 52638  010BA4  6EFD               	movwf	tosl,c
 52639  010BA6  518A               	movf	(_LUN+1)& (0+255),w,b
 52640  010BA8  6EFE               	movwf	tosh,c
 52641  010BAA  518B               	movf	(_LUN+2)& (0+255),w,b
 52642  010BAC  6EFF               	movwf	tosu,c
 52643  010BAE  50FA               	movf	pclath,w,c
 52644  010BB0  0012               	return		;indir
 52645  010BB2                     i2u1059_49:
 52646  010BB2  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 52647  010BB4  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 52648  010BB6  B4D8               	btfsc	status,2,c
 52649  010BB8  D012               	goto	i2l537
 52650                           
 52651                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 52652  010BBA  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 52653  010BBE  0E01               	movlw	1
 52654  010BC0  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 52655  010BC2  0E00               	movlw	0
 52656  010BC4  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 52657  010BC6  2A0C               	incf	??_USBMSDInit,f,c
 52658  010BC8  D003               	goto	i2u1061_44
 52659  010BCA                     i2u1061_45:
 52660  010BCA  90D8               	bcf	status,0,c
 52661  010BCC  360D               	rlcf	??_USBMSDInit+1,f,c
 52662  010BCE  360E               	rlcf	??_USBMSDInit+2,f,c
 52663  010BD0                     i2u1061_44:
 52664  010BD0  2E0C               	decfsz	??_USBMSDInit,f,c
 52665  010BD2  D7FB               	goto	i2u1061_45
 52666  010BD4  500D               	movf	??_USBMSDInit+1,w,c
 52667  010BD6  0101               	movlb	1	; () banked
 52668  010BD8  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 52669  010BDA  500E               	movf	??_USBMSDInit+2,w,c
 52670  010BDC  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 52671  010BDE                     i2l537:
 52672                           
 52673                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 52674                           
 52675                           ; BSR set to: 1
 52676                           
 52677                           ; BSR set to: 1
 52678  010BDE  ECA9  F0A1         	call	i2_ResetSenseData	;wreg free
 52679  010BE2  0102               	movlb	2	; () banked
 52680  010BE4  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 52681  010BE6                     i2l534:
 52682                           
 52683                           ; BSR set to: 2
 52684                           
 52685                           ; BSR set to: 2
 52686  010BE6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 52687  010BE8  A4D8               	btfss	status,2,c
 52688  010BEA  0012               	return	
 52689  010BEC  D7B2               	goto	i2l535
 52690  010BEE                     __end_of_USBMSDInit:
 52691                           	opt stack 0
 52692                           tosu	equ	0xFFF
 52693                           tosh	equ	0xFFE
 52694                           tosl	equ	0xFFD
 52695                           pclatu	equ	0xFFB
 52696                           pclath	equ	0xFFA
 52697                           tblptru	equ	0xFF8
 52698                           tblptrh	equ	0xFF7
 52699                           tblptrl	equ	0xFF6
 52700                           tablat	equ	0xFF5
 52701                           prodh	equ	0xFF4
 52702                           prodl	equ	0xFF3
 52703                           intcon	equ	0xFF2
 52704                           indf0	equ	0xFEF
 52705                           postinc0	equ	0xFEE
 52706                           fsr0h	equ	0xFEA
 52707                           fsr0l	equ	0xFE9
 52708                           wreg	equ	0xFE8
 52709                           indf1	equ	0xFE7
 52710                           postinc1	equ	0xFE6
 52711                           postdec1	equ	0xFE5
 52712                           plusw1	equ	0xFE3
 52713                           fsr1h	equ	0xFE2
 52714                           fsr1l	equ	0xFE1
 52715                           indf2	equ	0xFDF
 52716                           postinc2	equ	0xFDE
 52717                           postdec2	equ	0xFDD
 52718                           plusw2	equ	0xFDB
 52719                           fsr2h	equ	0xFDA
 52720                           fsr2l	equ	0xFD9
 52721                           status	equ	0xFD8
 52722                           
 52723 ;; *************** function i2_ResetSenseData *****************
 52724 ;; Defined at:
 52725 ;;		line 1373 in file "usb_device_msd.c"
 52726 ;; Parameters:    Size  Location     Type
 52727 ;;		None
 52728 ;; Auto vars:     Size  Location     Type
 52729 ;;		None
 52730 ;; Return value:  Size  Location     Type
 52731 ;;                  1    wreg      void 
 52732 ;; Registers used:
 52733 ;;		wreg, status,2
 52734 ;; Tracked objects:
 52735 ;;		On entry : 0/0
 52736 ;;		On exit  : 0/0
 52737 ;;		Unchanged: 0/0
 52738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52743 ;;Total ram usage:        0 bytes
 52744 ;; Hardware stack levels used:    1
 52745 ;; This function calls:
 52746 ;;		Nothing
 52747 ;; This function is called by:
 52748 ;;		_USBMSDInit
 52749 ;; This function uses a non-reentrant model
 52750 ;;
 52751                           
 52752                           	psect	text221
 52753  014352                     __ptext221:
 52754                           	opt stack 0
 52755  014352                     i2_ResetSenseData:
 52756                           	opt stack 13
 52757                           
 52758                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 52759                           
 52760                           ; BSR set to: 2
 52761                           ;incstack = 0
 52762  014352  0101               	movlb	1	; () banked
 52763  014354  9100               	bcf	_gblSenseData& (0+255),0,b
 52764  014356  9300               	bcf	_gblSenseData& (0+255),1,b
 52765  014358  9500               	bcf	_gblSenseData& (0+255),2,b
 52766  01435A  9700               	bcf	_gblSenseData& (0+255),3,b
 52767  01435C  8900               	bsf	_gblSenseData& (0+255),4,b
 52768  01435E  8B00               	bsf	_gblSenseData& (0+255),5,b
 52769  014360  8D00               	bsf	_gblSenseData& (0+255),6,b
 52770                           
 52771                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 52772  014362  9F00               	bcf	_gblSenseData& (0+255),7,b
 52773                           
 52774                           ; BSR set to: 1
 52775                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 52776  014364  0E00               	movlw	0
 52777  014366  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 52778                           
 52779                           ; BSR set to: 1
 52780                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 52781  014368  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 52782  01436A  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 52783  01436C  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 52784  01436E  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 52785                           
 52786                           ; BSR set to: 1
 52787                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 52788  014370  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 52789                           
 52790                           ; BSR set to: 1
 52791                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 52792  014372  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 52793                           
 52794                           ; BSR set to: 1
 52795                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 52796  014374  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 52797                           
 52798                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 52799  014376  0E00               	movlw	0
 52800  014378  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 52801                           
 52802                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 52803  01437A  0E00               	movlw	0
 52804  01437C  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 52805                           
 52806                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 52807  01437E  0E00               	movlw	0
 52808  014380  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 52809                           
 52810                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 52811  014382  0E00               	movlw	0
 52812  014384  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 52813                           
 52814                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 52815  014386  0E0A               	movlw	10
 52816  014388  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 52817                           
 52818                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 52819  01438A  0E00               	movlw	0
 52820  01438C  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 52821  01438E  0E00               	movlw	0
 52822  014390  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 52823  014392  0E00               	movlw	0
 52824  014394  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 52825  014396  0E00               	movlw	0
 52826  014398  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 52827                           
 52828                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 52829  01439A  0E00               	movlw	0
 52830  01439C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 52831                           
 52832                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 52833  01439E  0E00               	movlw	0
 52834  0143A0  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 52835                           
 52836                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 52837  0143A2  0E00               	movlw	0
 52838  0143A4  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 52839                           
 52840                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 52841  0143A6  0E00               	movlw	0
 52842  0143A8  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 52843                           
 52844                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 52845  0143AA  0E00               	movlw	0
 52846  0143AC  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 52847                           
 52848                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 52849  0143AE  0E00               	movlw	0
 52850  0143B0  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 52851                           
 52852                           ; BSR set to: 1
 52853  0143B2  0012               	return		;funcret
 52854  0143B4                     __end_ofi2_ResetSenseData:
 52855                           	opt stack 0
 52856                           tosu	equ	0xFFF
 52857                           tosh	equ	0xFFE
 52858                           tosl	equ	0xFFD
 52859                           pclatu	equ	0xFFB
 52860                           pclath	equ	0xFFA
 52861                           tblptru	equ	0xFF8
 52862                           tblptrh	equ	0xFF7
 52863                           tblptrl	equ	0xFF6
 52864                           tablat	equ	0xFF5
 52865                           prodh	equ	0xFF4
 52866                           prodl	equ	0xFF3
 52867                           intcon	equ	0xFF2
 52868                           indf0	equ	0xFEF
 52869                           postinc0	equ	0xFEE
 52870                           fsr0h	equ	0xFEA
 52871                           fsr0l	equ	0xFE9
 52872                           wreg	equ	0xFE8
 52873                           indf1	equ	0xFE7
 52874                           postinc1	equ	0xFE6
 52875                           postdec1	equ	0xFE5
 52876                           plusw1	equ	0xFE3
 52877                           fsr1h	equ	0xFE2
 52878                           fsr1l	equ	0xFE1
 52879                           indf2	equ	0xFDF
 52880                           postinc2	equ	0xFDE
 52881                           postdec2	equ	0xFDD
 52882                           plusw2	equ	0xFDB
 52883                           fsr2h	equ	0xFDA
 52884                           fsr2l	equ	0xFD9
 52885                           status	equ	0xFD8
 52886                           
 52887 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 52888 ;; Defined at:
 52889 ;;		line 10 in file "external_flash.c"
 52890 ;; Parameters:    Size  Location     Type
 52891 ;;  config          2    0[COMRAM] PTR void 
 52892 ;;		 -> NULL(0), 
 52893 ;; Auto vars:     Size  Location     Type
 52894 ;;		None
 52895 ;; Return value:  Size  Location     Type
 52896 ;;                  2    0[COMRAM] PTR struct .
 52897 ;; Registers used:
 52898 ;;		wreg, status,2, status,0
 52899 ;; Tracked objects:
 52900 ;;		On entry : 0/0
 52901 ;;		On exit  : 0/0
 52902 ;;		Unchanged: 0/0
 52903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52908 ;;Total ram usage:        2 bytes
 52909 ;; Hardware stack levels used:    1
 52910 ;; This function calls:
 52911 ;;		Nothing
 52912 ;; This function is called by:
 52913 ;;		_USBMSDInit
 52914 ;;		_MSDProcessCommand
 52915 ;; This function uses a non-reentrant model
 52916 ;;
 52917                           
 52918                           	psect	text222
 52919  0157AA                     __ptext222:
 52920                           	opt stack 0
 52921  0157AA                     i2_ExternalFlash_MediaInitialize:
 52922                           	opt stack 13
 52923                           
 52924                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 52925                           
 52926                           ; BSR set to: 1
 52927                           ;incstack = 0
 52928  0157AA  0102               	movlb	2	; () banked
 52929  0157AC  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 52930                           
 52931                           ; BSR set to: 2
 52932                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 52933  0157AE  0E02               	movlw	2
 52934  0157B0  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 52935  0157B2  0E00               	movlw	0
 52936  0157B4  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 52937                           
 52938                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 52939  0157B6  0E00               	movlw	0
 52940  0157B8  6F84               	movwf	_mediaInformation& (0+255),b
 52941                           
 52942                           ; BSR set to: 2
 52943                           ;external_flash.c: 15: return &mediaInformation;
 52944  0157BA  0E84               	movlw	low _mediaInformation
 52945  0157BC  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 52946  0157BE  0E02               	movlw	high _mediaInformation
 52947  0157C0  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 52948  0157C2  0012               	return	
 52949  0157C4                     __end_ofi2_ExternalFlash_MediaInitialize:
 52950                           	opt stack 0
 52951                           tosu	equ	0xFFF
 52952                           tosh	equ	0xFFE
 52953                           tosl	equ	0xFFD
 52954                           pclatu	equ	0xFFB
 52955                           pclath	equ	0xFFA
 52956                           tblptru	equ	0xFF8
 52957                           tblptrh	equ	0xFF7
 52958                           tblptrl	equ	0xFF6
 52959                           tablat	equ	0xFF5
 52960                           prodh	equ	0xFF4
 52961                           prodl	equ	0xFF3
 52962                           intcon	equ	0xFF2
 52963                           indf0	equ	0xFEF
 52964                           postinc0	equ	0xFEE
 52965                           fsr0h	equ	0xFEA
 52966                           fsr0l	equ	0xFE9
 52967                           wreg	equ	0xFE8
 52968                           indf1	equ	0xFE7
 52969                           postinc1	equ	0xFE6
 52970                           postdec1	equ	0xFE5
 52971                           plusw1	equ	0xFE3
 52972                           fsr1h	equ	0xFE2
 52973                           fsr1l	equ	0xFE1
 52974                           indf2	equ	0xFDF
 52975                           postinc2	equ	0xFDE
 52976                           postdec2	equ	0xFDD
 52977                           plusw2	equ	0xFDB
 52978                           fsr2h	equ	0xFDA
 52979                           fsr2l	equ	0xFD9
 52980                           status	equ	0xFD8
 52981                           
 52982 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 52983 ;; Defined at:
 52984 ;;		line 29 in file "external_flash.c"
 52985 ;; Parameters:    Size  Location     Type
 52986 ;;  config          2    0[COMRAM] PTR void 
 52987 ;;		 -> NULL(0), 
 52988 ;; Auto vars:     Size  Location     Type
 52989 ;;		None
 52990 ;; Return value:  Size  Location     Type
 52991 ;;                  1    wreg      unsigned char 
 52992 ;; Registers used:
 52993 ;;		wreg
 52994 ;; Tracked objects:
 52995 ;;		On entry : 0/0
 52996 ;;		On exit  : 0/0
 52997 ;;		Unchanged: 0/0
 52998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53003 ;;Total ram usage:        2 bytes
 53004 ;; Hardware stack levels used:    1
 53005 ;; This function calls:
 53006 ;;		Nothing
 53007 ;; This function is called by:
 53008 ;;		_USBMSDInit
 53009 ;;		_MSDProcessCommand
 53010 ;; This function uses a non-reentrant model
 53011 ;;
 53012                           
 53013                           	psect	text223
 53014  0158F8                     __ptext223:
 53015                           	opt stack 0
 53016  0158F8                     i2_ExternalFlash_MediaDetect:
 53017                           	opt stack 13
 53018                           
 53019                           ;external_flash.c: 31: return 1;
 53020                           
 53021                           ; BSR set to: 2
 53022                           ;incstack = 0
 53023  0158F8  0E01               	movlw	1
 53024  0158FA  0012               	return	
 53025  0158FC                     __end_ofi2_ExternalFlash_MediaDetect:
 53026                           	opt stack 0
 53027                           tosu	equ	0xFFF
 53028                           tosh	equ	0xFFE
 53029                           tosl	equ	0xFFD
 53030                           pclatu	equ	0xFFB
 53031                           pclath	equ	0xFFA
 53032                           tblptru	equ	0xFF8
 53033                           tblptrh	equ	0xFF7
 53034                           tblptrl	equ	0xFF6
 53035                           tablat	equ	0xFF5
 53036                           prodh	equ	0xFF4
 53037                           prodl	equ	0xFF3
 53038                           intcon	equ	0xFF2
 53039                           indf0	equ	0xFEF
 53040                           postinc0	equ	0xFEE
 53041                           fsr0h	equ	0xFEA
 53042                           fsr0l	equ	0xFE9
 53043                           wreg	equ	0xFE8
 53044                           indf1	equ	0xFE7
 53045                           postinc1	equ	0xFE6
 53046                           postdec1	equ	0xFE5
 53047                           plusw1	equ	0xFE3
 53048                           fsr1h	equ	0xFE2
 53049                           fsr1l	equ	0xFE1
 53050                           indf2	equ	0xFDF
 53051                           postinc2	equ	0xFDE
 53052                           postdec2	equ	0xFDD
 53053                           plusw2	equ	0xFDB
 53054                           fsr2h	equ	0xFDA
 53055                           fsr2l	equ	0xFD9
 53056                           status	equ	0xFD8
 53057                           
 53058 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 53059 ;; Defined at:
 53060 ;;		line 46 in file "app_device_custom_hid.c"
 53061 ;; Parameters:    Size  Location     Type
 53062 ;;		None
 53063 ;; Auto vars:     Size  Location     Type
 53064 ;;		None
 53065 ;; Return value:  Size  Location     Type
 53066 ;;                  1    wreg      void 
 53067 ;; Registers used:
 53068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53069 ;; Tracked objects:
 53070 ;;		On entry : 0/0
 53071 ;;		On exit  : 0/0
 53072 ;;		Unchanged: 0/0
 53073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53078 ;;Total ram usage:        0 bytes
 53079 ;; Hardware stack levels used:    1
 53080 ;; Hardware stack levels required when called:    2
 53081 ;; This function calls:
 53082 ;;		_USBEnableEndpoint
 53083 ;;		i2_USBTransferOnePacket
 53084 ;; This function is called by:
 53085 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53086 ;; This function uses a non-reentrant model
 53087 ;;
 53088                           
 53089                           	psect	text224
 53090  015284                     __ptext224:
 53091                           	opt stack 0
 53092  015284                     _APP_DeviceCustomHIDInitialize:
 53093                           	opt stack 13
 53094                           
 53095                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 53096                           
 53097                           ;incstack = 0
 53098  015284  0E00               	movlw	0
 53099  015286  0101               	movlb	1	; () banked
 53100  015288  6F41               	movwf	_USBInHandle& (0+255),b
 53101  01528A  0E00               	movlw	0
 53102  01528C  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 53103                           
 53104                           ; BSR set to: 1
 53105                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 53106  01528E  0E1E               	movlw	30
 53107  015290  6E09               	movwf	USBEnableEndpoint@options,c
 53108  015292  0E01               	movlw	1
 53109  015294  EC2D  F0A8         	call	_USBEnableEndpoint
 53110                           
 53111                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 53112  015298  0E00               	movlw	0
 53113  01529A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53114  01529C  0E80               	movlw	low _ReceivedDataBuffer
 53115  01529E  6E02               	movwf	i2USBTransferOnePacket@data,c
 53116  0152A0  0E03               	movlw	high _ReceivedDataBuffer
 53117  0152A2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53118  0152A4  0E40               	movlw	64
 53119  0152A6  6E04               	movwf	i2USBTransferOnePacket@len,c
 53120  0152A8  0E01               	movlw	1
 53121  0152AA  EC09  F088         	call	i2_USBTransferOnePacket
 53122  0152AE  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 53123  0152B2  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 53124  0152B6  0012               	return		;funcret
 53125  0152B8                     __end_of_APP_DeviceCustomHIDInitialize:
 53126                           	opt stack 0
 53127                           tosu	equ	0xFFF
 53128                           tosh	equ	0xFFE
 53129                           tosl	equ	0xFFD
 53130                           pclatu	equ	0xFFB
 53131                           pclath	equ	0xFFA
 53132                           tblptru	equ	0xFF8
 53133                           tblptrh	equ	0xFF7
 53134                           tblptrl	equ	0xFF6
 53135                           tablat	equ	0xFF5
 53136                           prodh	equ	0xFF4
 53137                           prodl	equ	0xFF3
 53138                           intcon	equ	0xFF2
 53139                           indf0	equ	0xFEF
 53140                           postinc0	equ	0xFEE
 53141                           fsr0h	equ	0xFEA
 53142                           fsr0l	equ	0xFE9
 53143                           wreg	equ	0xFE8
 53144                           indf1	equ	0xFE7
 53145                           postinc1	equ	0xFE6
 53146                           postdec1	equ	0xFE5
 53147                           plusw1	equ	0xFE3
 53148                           fsr1h	equ	0xFE2
 53149                           fsr1l	equ	0xFE1
 53150                           indf2	equ	0xFDF
 53151                           postinc2	equ	0xFDE
 53152                           postdec2	equ	0xFDD
 53153                           plusw2	equ	0xFDB
 53154                           fsr2h	equ	0xFDA
 53155                           fsr2l	equ	0xFD9
 53156                           status	equ	0xFD8
 53157                           
 53158 ;; *************** function i2_USBTransferOnePacket *****************
 53159 ;; Defined at:
 53160 ;;		line 995 in file "usb_device.c"
 53161 ;; Parameters:    Size  Location     Type
 53162 ;;  ep              1    wreg     unsigned char 
 53163 ;;  dir             1    0[COMRAM] unsigned char 
 53164 ;;  data            2    1[COMRAM] PTR unsigned char 
 53165 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 53166 ;;		 -> msd_cbw(31), NULL(0), 
 53167 ;;  len             1    3[COMRAM] unsigned char 
 53168 ;; Auto vars:     Size  Location     Type
 53169 ;;  ep              1    8[COMRAM] unsigned char 
 53170 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 53171 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53172 ;; Return value:  Size  Location     Type
 53173 ;;                  2    0[COMRAM] PTR void 
 53174 ;; Registers used:
 53175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53176 ;; Tracked objects:
 53177 ;;		On entry : 0/0
 53178 ;;		On exit  : 0/0
 53179 ;;		Unchanged: 0/0
 53180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53182 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53184 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53185 ;;Total ram usage:       11 bytes
 53186 ;; Hardware stack levels used:    1
 53187 ;; This function calls:
 53188 ;;		Nothing
 53189 ;; This function is called by:
 53190 ;;		_USBMSDInit
 53191 ;;		_USBCheckMSDRequest
 53192 ;;		_MSDTransferTerminated
 53193 ;;		_APP_DeviceCustomHIDInitialize
 53194 ;; This function uses a non-reentrant model
 53195 ;;
 53196                           
 53197                           	psect	text225
 53198  011012                     __ptext225:
 53199                           	opt stack 0
 53200  011012                     i2_USBTransferOnePacket:
 53201                           	opt stack 14
 53202                           
 53203                           ;incstack = 0
 53204                           ;i2USBTransferOnePacket@ep stored from wreg
 53205  011012  6E09               	movwf	i2USBTransferOnePacket@ep,c
 53206                           
 53207                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 53208  011014  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53209  011016  B4D8               	btfsc	status,2,c
 53210  011018  D007               	goto	i2l184
 53211                           
 53212                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 53213  01101A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53214  01101C  0D02               	mullw	2
 53215  01101E  0E1B               	movlw	low _pBDTEntryIn
 53216  011020  24F3               	addwf	prodl,w,c
 53217  011022  6ED9               	movwf	fsr2l,c
 53218  011024  0E01               	movlw	high _pBDTEntryIn
 53219  011026  D006               	goto	L86
 53220  011028                     i2l184:
 53221                           
 53222                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 53223  011028  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53224  01102A  0D02               	mullw	2
 53225  01102C  0E21               	movlw	low _pBDTEntryOut
 53226  01102E  24F3               	addwf	prodl,w,c
 53227  011030  6ED9               	movwf	fsr2l,c
 53228  011032  0E01               	movlw	high _pBDTEntryOut
 53229  011034                     L86:
 53230  011034  20F4               	addwfc	prodh,w,c
 53231  011036  6EDA               	movwf	fsr2h,c
 53232  011038  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 53233  01103C  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 53234                           
 53235                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 53236  011040  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53237  011042  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 53238  011044  A4D8               	btfss	status,2,c
 53239  011046  D005               	goto	i2l186
 53240                           
 53241                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 53242  011048  0E00               	movlw	0
 53243  01104A  6E01               	movwf	?i2_USBTransferOnePacket,c
 53244  01104C  0E00               	movlw	0
 53245  01104E  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 53246  011050  0012               	return	
 53247  011052                     i2l186:
 53248                           
 53249                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 53250  011052  EE20 F002          	lfsr	2,2
 53251  011056  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53252  011058  26D9               	addwf	fsr2l,f,c
 53253  01105A  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53254  01105C  22DA               	addwfc	fsr2h,f,c
 53255  01105E  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 53256  011062  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 53257                           
 53258                           ;usb_device.c: 1030: handle->CNT = len;
 53259  011066  EE20 F001          	lfsr	2,1
 53260  01106A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53261  01106C  26D9               	addwf	fsr2l,f,c
 53262  01106E  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53263  011070  22DA               	addwfc	fsr2h,f,c
 53264  011072  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 53265                           
 53266                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 53267  011076  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53268  01107A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53269  01107E  0E40               	movlw	64
 53270  011080  16DF               	andwf	indf2,f,c
 53271                           
 53272                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 53273  011082  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53274  011086  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53275  01108A  0E00               	movlw	0
 53276  01108C  86DB               	bsf	plusw2,3,c
 53277                           
 53278                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 53279  01108E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53280  011092  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53281  011096  0E00               	movlw	0
 53282  011098  8EDB               	bsf	plusw2,7,c
 53283                           
 53284                           ;usb_device.c: 1036: if(dir != 0)
 53285  01109A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53286  01109C  B4D8               	btfsc	status,2,c
 53287  01109E  D018               	goto	i2l188
 53288                           
 53289                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 53290  0110A0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53291  0110A2  0D02               	mullw	2
 53292  0110A4  0E1B               	movlw	low _pBDTEntryIn
 53293  0110A6  24F3               	addwf	prodl,w,c
 53294  0110A8  6ED9               	movwf	fsr2l,c
 53295  0110AA  0E01               	movlw	high _pBDTEntryIn
 53296  0110AC  20F4               	addwfc	prodh,w,c
 53297  0110AE  6EDA               	movwf	fsr2h,c
 53298  0110B0  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53299  0110B4  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53300  0110B8  0E04               	movlw	4
 53301  0110BA  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53302  0110BC  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53303  0110BE  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53304  0110C0  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53305  0110C2  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53306  0110C4  0D02               	mullw	2
 53307  0110C6  0E1B               	movlw	low _pBDTEntryIn
 53308  0110C8  24F3               	addwf	prodl,w,c
 53309  0110CA  6ED9               	movwf	fsr2l,c
 53310  0110CC  0E01               	movlw	high _pBDTEntryIn
 53311  0110CE  D017               	goto	L87
 53312  0110D0                     i2l188:
 53313                           
 53314                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 53315  0110D0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53316  0110D2  0D02               	mullw	2
 53317  0110D4  0E21               	movlw	low _pBDTEntryOut
 53318  0110D6  24F3               	addwf	prodl,w,c
 53319  0110D8  6ED9               	movwf	fsr2l,c
 53320  0110DA  0E01               	movlw	high _pBDTEntryOut
 53321  0110DC  20F4               	addwfc	prodh,w,c
 53322  0110DE  6EDA               	movwf	fsr2h,c
 53323  0110E0  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53324  0110E4  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53325  0110E8  0E04               	movlw	4
 53326  0110EA  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53327  0110EC  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53328  0110EE  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53329  0110F0  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53330  0110F2  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53331  0110F4  0D02               	mullw	2
 53332  0110F6  0E21               	movlw	low _pBDTEntryOut
 53333  0110F8  24F3               	addwf	prodl,w,c
 53334  0110FA  6ED9               	movwf	fsr2l,c
 53335  0110FC  0E01               	movlw	high _pBDTEntryOut
 53336  0110FE                     L87:
 53337  0110FE  20F4               	addwfc	prodh,w,c
 53338  011100  6EDA               	movwf	fsr2h,c
 53339  011102  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 53340  011106  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 53341                           
 53342                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 53343  01110A  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 53344  01110E  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 53345  011112  0012               	return	
 53346  011114                     __end_ofi2_USBTransferOnePacket:
 53347                           	opt stack 0
 53348                           tosu	equ	0xFFF
 53349                           tosh	equ	0xFFE
 53350                           tosl	equ	0xFFD
 53351                           pclatu	equ	0xFFB
 53352                           pclath	equ	0xFFA
 53353                           tblptru	equ	0xFF8
 53354                           tblptrh	equ	0xFF7
 53355                           tblptrl	equ	0xFF6
 53356                           tablat	equ	0xFF5
 53357                           prodh	equ	0xFF4
 53358                           prodl	equ	0xFF3
 53359                           intcon	equ	0xFF2
 53360                           indf0	equ	0xFEF
 53361                           postinc0	equ	0xFEE
 53362                           fsr0h	equ	0xFEA
 53363                           fsr0l	equ	0xFE9
 53364                           wreg	equ	0xFE8
 53365                           indf1	equ	0xFE7
 53366                           postinc1	equ	0xFE6
 53367                           postdec1	equ	0xFE5
 53368                           plusw1	equ	0xFE3
 53369                           fsr1h	equ	0xFE2
 53370                           fsr1l	equ	0xFE1
 53371                           indf2	equ	0xFDF
 53372                           postinc2	equ	0xFDE
 53373                           postdec2	equ	0xFDD
 53374                           plusw2	equ	0xFDB
 53375                           fsr2h	equ	0xFDA
 53376                           fsr2l	equ	0xFD9
 53377                           status	equ	0xFD8
 53378                           
 53379 ;; *************** function _USBEnableEndpoint *****************
 53380 ;; Defined at:
 53381 ;;		line 878 in file "usb_device.c"
 53382 ;; Parameters:    Size  Location     Type
 53383 ;;  ep              1    wreg     unsigned char 
 53384 ;;  options         1    8[COMRAM] unsigned char 
 53385 ;; Auto vars:     Size  Location     Type
 53386 ;;  ep              1   11[COMRAM] unsigned char 
 53387 ;;  p               2    9[COMRAM] PTR unsigned char 
 53388 ;;		 -> UEP0(1), 
 53389 ;; Return value:  Size  Location     Type
 53390 ;;                  1    wreg      void 
 53391 ;; Registers used:
 53392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53393 ;; Tracked objects:
 53394 ;;		On entry : 0/0
 53395 ;;		On exit  : 0/0
 53396 ;;		Unchanged: 0/0
 53397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53398 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53399 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53402 ;;Total ram usage:        4 bytes
 53403 ;; Hardware stack levels used:    1
 53404 ;; Hardware stack levels required when called:    1
 53405 ;; This function calls:
 53406 ;;		_USBConfigureEndpoint
 53407 ;; This function is called by:
 53408 ;;		_APP_DeviceCustomHIDInitialize
 53409 ;;		_APP_DeviceMSDInitialize
 53410 ;; This function uses a non-reentrant model
 53411 ;;
 53412                           
 53413                           	psect	text226
 53414  01505A                     __ptext226:
 53415                           	opt stack 0
 53416  01505A                     _USBEnableEndpoint:
 53417                           	opt stack 13
 53418                           
 53419                           ;incstack = 0
 53420                           ;USBEnableEndpoint@ep stored from wreg
 53421  01505A  6E0C               	movwf	USBEnableEndpoint@ep,c
 53422                           
 53423                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 53424  01505C  A409               	btfss	USBEnableEndpoint@options,2,c
 53425  01505E  D005               	goto	i2l179
 53426                           
 53427                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 53428  015060  0E00               	movlw	0
 53429  015062  6E01               	movwf	USBConfigureEndpoint@direction,c
 53430  015064  500C               	movf	USBEnableEndpoint@ep,w,c
 53431  015066  EC4F  F09B         	call	_USBConfigureEndpoint
 53432  01506A                     i2l179:
 53433                           
 53434                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 53435  01506A  A209               	btfss	USBEnableEndpoint@options,1,c
 53436  01506C  D005               	goto	i2l180
 53437                           
 53438                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 53439  01506E  0E01               	movlw	1
 53440  015070  6E01               	movwf	USBConfigureEndpoint@direction,c
 53441  015072  500C               	movf	USBEnableEndpoint@ep,w,c
 53442  015074  EC4F  F09B         	call	_USBConfigureEndpoint
 53443  015078                     i2l180:
 53444                           
 53445                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 53446  015078  500C               	movf	USBEnableEndpoint@ep,w,c
 53447  01507A  0D01               	mullw	1
 53448  01507C  0E26               	movlw	38
 53449  01507E  24F3               	addwf	prodl,w,c
 53450  015080  6E0A               	movwf	USBEnableEndpoint@p,c
 53451  015082  0E0F               	movlw	15
 53452  015084  20F4               	addwfc	prodh,w,c
 53453  015086  6E0B               	movwf	USBEnableEndpoint@p+1,c
 53454                           
 53455                           ;usb_device.c: 901: *p = options;
 53456  015088  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 53457  01508C  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 53458  015090  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 53459  015094  0012               	return		;funcret
 53460  015096                     __end_of_USBEnableEndpoint:
 53461                           	opt stack 0
 53462                           tosu	equ	0xFFF
 53463                           tosh	equ	0xFFE
 53464                           tosl	equ	0xFFD
 53465                           pclatu	equ	0xFFB
 53466                           pclath	equ	0xFFA
 53467                           tblptru	equ	0xFF8
 53468                           tblptrh	equ	0xFF7
 53469                           tblptrl	equ	0xFF6
 53470                           tablat	equ	0xFF5
 53471                           prodh	equ	0xFF4
 53472                           prodl	equ	0xFF3
 53473                           intcon	equ	0xFF2
 53474                           indf0	equ	0xFEF
 53475                           postinc0	equ	0xFEE
 53476                           fsr0h	equ	0xFEA
 53477                           fsr0l	equ	0xFE9
 53478                           wreg	equ	0xFE8
 53479                           indf1	equ	0xFE7
 53480                           postinc1	equ	0xFE6
 53481                           postdec1	equ	0xFE5
 53482                           plusw1	equ	0xFE3
 53483                           fsr1h	equ	0xFE2
 53484                           fsr1l	equ	0xFE1
 53485                           indf2	equ	0xFDF
 53486                           postinc2	equ	0xFDE
 53487                           postdec2	equ	0xFDD
 53488                           plusw2	equ	0xFDB
 53489                           fsr2h	equ	0xFDA
 53490                           fsr2l	equ	0xFD9
 53491                           status	equ	0xFD8
 53492                           
 53493 ;; *************** function _USBConfigureEndpoint *****************
 53494 ;; Defined at:
 53495 ;;		line 1545 in file "usb_device.c"
 53496 ;; Parameters:    Size  Location     Type
 53497 ;;  EPNum           1    wreg     unsigned char 
 53498 ;;  direction       1    0[COMRAM] unsigned char 
 53499 ;; Auto vars:     Size  Location     Type
 53500 ;;  EPNum           1    5[COMRAM] unsigned char 
 53501 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 53502 ;;		 -> BDT(48), 
 53503 ;; Return value:  Size  Location     Type
 53504 ;;                  1    wreg      void 
 53505 ;; Registers used:
 53506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53507 ;; Tracked objects:
 53508 ;;		On entry : 0/0
 53509 ;;		On exit  : 0/0
 53510 ;;		Unchanged: 0/0
 53511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53512 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53516 ;;Total ram usage:        8 bytes
 53517 ;; Hardware stack levels used:    1
 53518 ;; This function calls:
 53519 ;;		Nothing
 53520 ;; This function is called by:
 53521 ;;		_USBEnableEndpoint
 53522 ;; This function uses a non-reentrant model
 53523 ;;
 53524                           
 53525                           	psect	text227
 53526  01369E                     __ptext227:
 53527                           	opt stack 0
 53528  01369E                     _USBConfigureEndpoint:
 53529                           	opt stack 13
 53530                           
 53531                           ;incstack = 0
 53532                           ;USBConfigureEndpoint@EPNum stored from wreg
 53533  01369E  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 53534                           
 53535                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 53536  0136A0  0E00               	movlw	0
 53537  0136A2  6E07               	movwf	USBConfigureEndpoint@handle,c
 53538  0136A4  0E0D               	movlw	13
 53539  0136A6  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 53540                           
 53541                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 53542  0136A8  5001               	movf	USBConfigureEndpoint@direction,w,c
 53543  0136AA  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 53544  0136AC  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 53545  0136AE  90D8               	bcf	status,0,c
 53546  0136B0  3602               	rlcf	??_USBConfigureEndpoint,f,c
 53547  0136B2  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 53548  0136B4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53549  0136B6  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 53550  0136B8  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 53551  0136BA  90D8               	bcf	status,0,c
 53552  0136BC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53553  0136BE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53554  0136C0  90D8               	bcf	status,0,c
 53555  0136C2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53556  0136C4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53557  0136C6  5002               	movf	??_USBConfigureEndpoint,w,c
 53558  0136C8  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 53559  0136CA  5003               	movf	??_USBConfigureEndpoint+1,w,c
 53560  0136CC  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 53561  0136CE  90D8               	bcf	status,0,c
 53562  0136D0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53563  0136D2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53564  0136D4  90D8               	bcf	status,0,c
 53565  0136D6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53566  0136D8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53567  0136DA  5004               	movf	??_USBConfigureEndpoint+2,w,c
 53568  0136DC  2607               	addwf	USBConfigureEndpoint@handle,f,c
 53569  0136DE  5005               	movf	??_USBConfigureEndpoint+3,w,c
 53570  0136E0  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 53571                           
 53572                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 53573  0136E2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53574  0136E6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53575  0136EA  9EDF               	bcf	indf2,7,c
 53576                           
 53577                           ;usb_device.c: 1559: if(direction == 0)
 53578  0136EC  5001               	movf	USBConfigureEndpoint@direction,w,c
 53579  0136EE  A4D8               	btfss	status,2,c
 53580  0136F0  D007               	goto	i2l226
 53581                           
 53582                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 53583  0136F2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53584  0136F4  0D02               	mullw	2
 53585  0136F6  0E21               	movlw	low _pBDTEntryOut
 53586  0136F8  24F3               	addwf	prodl,w,c
 53587  0136FA  6ED9               	movwf	fsr2l,c
 53588  0136FC  0E01               	movlw	high _pBDTEntryOut
 53589  0136FE  D006               	goto	L88
 53590  013700                     i2l226:
 53591                           
 53592                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 53593  013700  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53594  013702  0D02               	mullw	2
 53595  013704  0E1B               	movlw	low _pBDTEntryIn
 53596  013706  24F3               	addwf	prodl,w,c
 53597  013708  6ED9               	movwf	fsr2l,c
 53598  01370A  0E01               	movlw	high _pBDTEntryIn
 53599  01370C                     L88:
 53600  01370C  20F4               	addwfc	prodh,w,c
 53601  01370E  6EDA               	movwf	fsr2h,c
 53602  013710  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 53603  013714  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 53604                           
 53605                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 53606  013718  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53607  01371C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53608  013720  9CDF               	bcf	indf2,6,c
 53609                           
 53610                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 53611  013722  EE20 F004          	lfsr	2,4
 53612  013726  5007               	movf	USBConfigureEndpoint@handle,w,c
 53613  013728  26D9               	addwf	fsr2l,f,c
 53614  01372A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 53615  01372C  22DA               	addwfc	fsr2h,f,c
 53616  01372E  8CDF               	bsf	indf2,6,c
 53617  013730  0012               	return		;funcret
 53618  013732                     __end_of_USBConfigureEndpoint:
 53619                           	opt stack 0
 53620                           tosu	equ	0xFFF
 53621                           tosh	equ	0xFFE
 53622                           tosl	equ	0xFFD
 53623                           pclatu	equ	0xFFB
 53624                           pclath	equ	0xFFA
 53625                           tblptru	equ	0xFF8
 53626                           tblptrh	equ	0xFF7
 53627                           tblptrl	equ	0xFF6
 53628                           tablat	equ	0xFF5
 53629                           prodh	equ	0xFF4
 53630                           prodl	equ	0xFF3
 53631                           intcon	equ	0xFF2
 53632                           indf0	equ	0xFEF
 53633                           postinc0	equ	0xFEE
 53634                           fsr0h	equ	0xFEA
 53635                           fsr0l	equ	0xFE9
 53636                           wreg	equ	0xFE8
 53637                           indf1	equ	0xFE7
 53638                           postinc1	equ	0xFE6
 53639                           postdec1	equ	0xFE5
 53640                           plusw1	equ	0xFE3
 53641                           fsr1h	equ	0xFE2
 53642                           fsr1l	equ	0xFE1
 53643                           indf2	equ	0xFDF
 53644                           postinc2	equ	0xFDE
 53645                           postdec2	equ	0xFDD
 53646                           plusw2	equ	0xFDB
 53647                           fsr2h	equ	0xFDA
 53648                           fsr2l	equ	0xFD9
 53649                           status	equ	0xFD8
 53650                           
 53651 ;; *************** function _USBCtrlTrfOutHandler *****************
 53652 ;; Defined at:
 53653 ;;		line 2540 in file "usb_device.c"
 53654 ;; Parameters:    Size  Location     Type
 53655 ;;		None
 53656 ;; Auto vars:     Size  Location     Type
 53657 ;;		None
 53658 ;; Return value:  Size  Location     Type
 53659 ;;                  1    wreg      void 
 53660 ;; Registers used:
 53661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53662 ;; Tracked objects:
 53663 ;;		On entry : 0/0
 53664 ;;		On exit  : 0/0
 53665 ;;		Unchanged: 0/0
 53666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53671 ;;Total ram usage:        0 bytes
 53672 ;; Hardware stack levels used:    1
 53673 ;; Hardware stack levels required when called:    2
 53674 ;; This function calls:
 53675 ;;		_USBCtrlTrfRxService
 53676 ;; This function is called by:
 53677 ;;		_USBCtrlEPService
 53678 ;; This function uses a non-reentrant model
 53679 ;;
 53680                           
 53681                           	psect	text228
 53682  014414                     __ptext228:
 53683                           	opt stack 0
 53684  014414                     _USBCtrlTrfOutHandler:
 53685                           	opt stack 13
 53686                           
 53687                           ;usb_device.c: 2542: if(controlTransferState == 2)
 53688                           
 53689                           ;incstack = 0
 53690  014414  0E02               	movlw	2
 53691  014416  0101               	movlb	1	; () banked
 53692  014418  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 53693  01441A  A4D8               	btfss	status,2,c
 53694  01441C  D003               	goto	i2l332
 53695                           
 53696                           ; BSR set to: 1
 53697                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 53698  01441E  ECF7  F085         	call	_USBCtrlTrfRxService	;wreg free
 53699                           
 53700                           ;usb_device.c: 2545: }
 53701  014422  0012               	return	
 53702  014424                     i2l332:
 53703                           
 53704                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 53705  014424  0E00               	movlw	0
 53706  014426  0101               	movlb	1	; () banked
 53707  014428  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 53708                           
 53709                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 53710  01442A  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 53711  01442C  A4D8               	btfss	status,2,c
 53712  01442E  D01F               	goto	i2l334
 53713                           
 53714                           ; BSR set to: 1
 53715                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 53716  014430  EE20 F001          	lfsr	2,1
 53717  014434  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53718  014436  26D9               	addwf	fsr2l,f,c
 53719  014438  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53720  01443A  22DA               	addwfc	fsr2h,f,c
 53721  01443C  0E08               	movlw	8
 53722  01443E  6EDF               	movwf	indf2,c
 53723                           
 53724                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53725  014440  EE20 F002          	lfsr	2,2
 53726  014444  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53727  014446  26D9               	addwf	fsr2l,f,c
 53728  014448  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53729  01444A  22DA               	addwfc	fsr2h,f,c
 53730  01444C  0E30               	movlw	48
 53731  01444E  6EDE               	movwf	postinc2,c
 53732  014450  0E0D               	movlw	13
 53733  014452  6EDD               	movwf	postdec2,c
 53734                           
 53735                           ; BSR set to: 1
 53736                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53737  014454  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53738  014458  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53739  01445C  0E0C               	movlw	12
 53740  01445E  6EDF               	movwf	indf2,c
 53741                           
 53742                           ; BSR set to: 1
 53743                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53744  014460  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53745  014464  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53746  014468  0E00               	movlw	0
 53747  01446A  8EDB               	bsf	plusw2,7,c
 53748                           
 53749                           ;usb_device.c: 2563: }
 53750  01446C  0012               	return	
 53751  01446E                     i2l334:
 53752                           
 53753                           ; BSR set to: 1
 53754                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 53755                           
 53756                           ; BSR set to: 1
 53757  01446E  0E00               	movlw	0
 53758  014470  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53759                           
 53760                           ; BSR set to: 1
 53761  014472  0012               	return	
 53762  014474                     __end_of_USBCtrlTrfOutHandler:
 53763                           	opt stack 0
 53764                           tosu	equ	0xFFF
 53765                           tosh	equ	0xFFE
 53766                           tosl	equ	0xFFD
 53767                           pclatu	equ	0xFFB
 53768                           pclath	equ	0xFFA
 53769                           tblptru	equ	0xFF8
 53770                           tblptrh	equ	0xFF7
 53771                           tblptrl	equ	0xFF6
 53772                           tablat	equ	0xFF5
 53773                           prodh	equ	0xFF4
 53774                           prodl	equ	0xFF3
 53775                           intcon	equ	0xFF2
 53776                           indf0	equ	0xFEF
 53777                           postinc0	equ	0xFEE
 53778                           fsr0h	equ	0xFEA
 53779                           fsr0l	equ	0xFE9
 53780                           wreg	equ	0xFE8
 53781                           indf1	equ	0xFE7
 53782                           postinc1	equ	0xFE6
 53783                           postdec1	equ	0xFE5
 53784                           plusw1	equ	0xFE3
 53785                           fsr1h	equ	0xFE2
 53786                           fsr1l	equ	0xFE1
 53787                           indf2	equ	0xFDF
 53788                           postinc2	equ	0xFDE
 53789                           postdec2	equ	0xFDD
 53790                           plusw2	equ	0xFDB
 53791                           fsr2h	equ	0xFDA
 53792                           fsr2l	equ	0xFD9
 53793                           status	equ	0xFD8
 53794                           
 53795 ;; *************** function _USBCtrlTrfRxService *****************
 53796 ;; Defined at:
 53797 ;;		line 1854 in file "usb_device.c"
 53798 ;; Parameters:    Size  Location     Type
 53799 ;;		None
 53800 ;; Auto vars:     Size  Location     Type
 53801 ;;  byteToRead      1    1[COMRAM] unsigned char 
 53802 ;;  i               1    0[COMRAM] unsigned char 
 53803 ;; Return value:  Size  Location     Type
 53804 ;;                  1    wreg      void 
 53805 ;; Registers used:
 53806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53807 ;; Tracked objects:
 53808 ;;		On entry : 0/0
 53809 ;;		On exit  : 0/0
 53810 ;;		Unchanged: 0/0
 53811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53816 ;;Total ram usage:        2 bytes
 53817 ;; Hardware stack levels used:    1
 53818 ;; Hardware stack levels required when called:    1
 53819 ;; This function calls:
 53820 ;;		_USBCtrlEPAllowStatusStage
 53821 ;; This function is called by:
 53822 ;;		_USBCtrlTrfOutHandler
 53823 ;; This function uses a non-reentrant model
 53824 ;;
 53825                           
 53826                           	psect	text229
 53827  010BEE                     __ptext229:
 53828                           	opt stack 0
 53829  010BEE                     _USBCtrlTrfRxService:
 53830                           	opt stack 13
 53831                           
 53832                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 53833                           
 53834                           ;incstack = 0
 53835  010BEE  0101               	movlb	1	; () banked
 53836  010BF0  EE20 F001          	lfsr	2,1
 53837  010BF4  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53838  010BF6  26D9               	addwf	fsr2l,f,c
 53839  010BF8  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53840  010BFA  22DA               	addwfc	fsr2h,f,c
 53841  010BFC  50DF               	movf	indf2,w,c
 53842  010BFE  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 53843                           
 53844                           ; BSR set to: 1
 53845                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 53846  010C00  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53847  010C02  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 53848  010C04  0E00               	movlw	0
 53849  010C06  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 53850  010C08  A0D8               	btfss	status,0,c
 53851                           
 53852                           ; BSR set to: 1
 53853                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 53854  010C0A  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 53855                           
 53856                           ; BSR set to: 1
 53857                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 53858                           
 53859                           ; BSR set to: 1
 53860  010C0E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53861  010C10  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 53862  010C12  0E00               	movlw	0
 53863  010C14  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 53864                           
 53865                           ; BSR set to: 1
 53866                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 53867  010C16  0E00               	movlw	0
 53868  010C18  6E01               	movwf	USBCtrlTrfRxService@i,c
 53869  010C1A  D011               	goto	i2l260
 53870  010C1C                     
 53871                           ; BSR set to: 1
 53872                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 53873                           
 53874                           ; BSR set to: 1
 53875  010C1C  5001               	movf	USBCtrlTrfRxService@i,w,c
 53876  010C1E  0D01               	mullw	1
 53877  010C20  0E38               	movlw	56
 53878  010C22  24F3               	addwf	prodl,w,c
 53879  010C24  6ED9               	movwf	fsr2l,c
 53880  010C26  0E0D               	movlw	13
 53881  010C28  20F4               	addwfc	prodh,w,c
 53882  010C2A  6EDA               	movwf	fsr2h,c
 53883  010C2C  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 53884  010C30  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 53885  010C34  CFDF FFE7          	movff	indf2,indf1
 53886                           
 53887                           ; BSR set to: 1
 53888  010C38  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 53889  010C3A  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 53890                           
 53891                           ; BSR set to: 1
 53892  010C3C  2A01               	incf	USBCtrlTrfRxService@i,f,c
 53893  010C3E                     i2l260:
 53894                           
 53895                           ; BSR set to: 1
 53896                           
 53897                           ; BSR set to: 1
 53898  010C3E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53899  010C40  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 53900  010C42  A0D8               	btfss	status,0,c
 53901  010C44  D7EB               	goto	i2l261
 53902                           
 53903                           ; BSR set to: 1
 53904                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 53905                           
 53906                           ; BSR set to: 1
 53907  010C46  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 53908  010C48  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 53909  010C4A  B4D8               	btfsc	status,2,c
 53910  010C4C  D032               	goto	i2l263
 53911                           
 53912                           ; BSR set to: 1
 53913                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 53914  010C4E  EE20 F001          	lfsr	2,1
 53915  010C52  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53916  010C54  26D9               	addwf	fsr2l,f,c
 53917  010C56  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53918  010C58  22DA               	addwfc	fsr2h,f,c
 53919  010C5A  0E08               	movlw	8
 53920  010C5C  6EDF               	movwf	indf2,c
 53921                           
 53922                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 53923  010C5E  EE20 F002          	lfsr	2,2
 53924  010C62  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53925  010C64  26D9               	addwf	fsr2l,f,c
 53926  010C66  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53927  010C68  22DA               	addwfc	fsr2h,f,c
 53928  010C6A  0E38               	movlw	56
 53929  010C6C  6EDE               	movwf	postinc2,c
 53930  010C6E  0E0D               	movlw	13
 53931  010C70  6EDD               	movwf	postdec2,c
 53932                           
 53933                           ; BSR set to: 1
 53934                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 53935  010C72  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53936  010C76  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53937  010C7A  BCDF               	btfsc	indf2,6,c
 53938  010C7C  D00D               	goto	i2l264
 53939                           
 53940                           ; BSR set to: 1
 53941                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 53942  010C7E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53943  010C82  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53944  010C86  0E48               	movlw	72
 53945  010C88  6EDF               	movwf	indf2,c
 53946                           
 53947                           ; BSR set to: 1
 53948                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53949  010C8A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53950  010C8E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53951  010C92  0E00               	movlw	0
 53952  010C94  8EDB               	bsf	plusw2,7,c
 53953                           
 53954                           ;usb_device.c: 1891: }
 53955  010C96  0012               	return	
 53956  010C98                     i2l264:
 53957                           
 53958                           ; BSR set to: 1
 53959                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 53960                           
 53961                           ; BSR set to: 1
 53962  010C98  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53963  010C9C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53964  010CA0  0E08               	movlw	8
 53965  010CA2  6EDF               	movwf	indf2,c
 53966                           
 53967                           ; BSR set to: 1
 53968                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53969  010CA4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53970  010CA8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53971  010CAC  0E00               	movlw	0
 53972  010CAE  8EDB               	bsf	plusw2,7,c
 53973                           
 53974                           ; BSR set to: 1
 53975                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 53976  010CB0  0012               	return	
 53977  010CB2                     i2l263:
 53978                           
 53979                           ; BSR set to: 1
 53980                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 53981                           
 53982                           ; BSR set to: 1
 53983  010CB2  EE20 F001          	lfsr	2,1
 53984  010CB6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53985  010CB8  26D9               	addwf	fsr2l,f,c
 53986  010CBA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53987  010CBC  22DA               	addwfc	fsr2h,f,c
 53988  010CBE  0E08               	movlw	8
 53989  010CC0  6EDF               	movwf	indf2,c
 53990                           
 53991                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53992  010CC2  EE20 F002          	lfsr	2,2
 53993  010CC6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53994  010CC8  26D9               	addwf	fsr2l,f,c
 53995  010CCA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53996  010CCC  22DA               	addwfc	fsr2h,f,c
 53997  010CCE  0E30               	movlw	48
 53998  010CD0  6EDE               	movwf	postinc2,c
 53999  010CD2  0E0D               	movlw	13
 54000  010CD4  6EDD               	movwf	postdec2,c
 54001                           
 54002                           ; BSR set to: 1
 54003                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 54004  010CD6  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54005  010CDA  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54006  010CDE  0E04               	movlw	4
 54007  010CE0  6EDF               	movwf	indf2,c
 54008                           
 54009                           ; BSR set to: 1
 54010                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54011  010CE2  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54012  010CE6  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54013  010CEA  0E00               	movlw	0
 54014  010CEC  8EDB               	bsf	plusw2,7,c
 54015                           
 54016                           ; BSR set to: 1
 54017                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 54018                           
 54019                           ; BSR set to: 1
 54020                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 54021  010CEE  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54022                           
 54023                           ; BSR set to: 1
 54024                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 54025  010CF0  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 54026  010CF2  A4D8               	btfss	status,2,c
 54027  010CF4  0012               	return	
 54028                           
 54029                           ; BSR set to: 1
 54030                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 54031  010CF6  ECAE  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 54032  010CFA  0012               	return	
 54033  010CFC                     __end_of_USBCtrlTrfRxService:
 54034                           	opt stack 0
 54035                           tosu	equ	0xFFF
 54036                           tosh	equ	0xFFE
 54037                           tosl	equ	0xFFD
 54038                           pclatu	equ	0xFFB
 54039                           pclath	equ	0xFFA
 54040                           tblptru	equ	0xFF8
 54041                           tblptrh	equ	0xFF7
 54042                           tblptrl	equ	0xFF6
 54043                           tablat	equ	0xFF5
 54044                           prodh	equ	0xFF4
 54045                           prodl	equ	0xFF3
 54046                           intcon	equ	0xFF2
 54047                           indf0	equ	0xFEF
 54048                           postinc0	equ	0xFEE
 54049                           fsr0h	equ	0xFEA
 54050                           fsr0l	equ	0xFE9
 54051                           wreg	equ	0xFE8
 54052                           indf1	equ	0xFE7
 54053                           postinc1	equ	0xFE6
 54054                           postdec1	equ	0xFE5
 54055                           plusw1	equ	0xFE3
 54056                           fsr1h	equ	0xFE2
 54057                           fsr1l	equ	0xFE1
 54058                           indf2	equ	0xFDF
 54059                           postinc2	equ	0xFDE
 54060                           postdec2	equ	0xFDD
 54061                           plusw2	equ	0xFDB
 54062                           fsr2h	equ	0xFDA
 54063                           fsr2l	equ	0xFD9
 54064                           status	equ	0xFD8
 54065                           
 54066 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 54067 ;; Defined at:
 54068 ;;		line 1418 in file "usb_device.c"
 54069 ;; Parameters:    Size  Location     Type
 54070 ;;		None
 54071 ;; Auto vars:     Size  Location     Type
 54072 ;;		None
 54073 ;; Return value:  Size  Location     Type
 54074 ;;                  1    wreg      void 
 54075 ;; Registers used:
 54076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54077 ;; Tracked objects:
 54078 ;;		On entry : 0/0
 54079 ;;		On exit  : 0/0
 54080 ;;		Unchanged: 0/0
 54081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54086 ;;Total ram usage:        0 bytes
 54087 ;; Hardware stack levels used:    1
 54088 ;; This function calls:
 54089 ;;		Nothing
 54090 ;; This function is called by:
 54091 ;;		_USBDeviceTasks
 54092 ;;		_USBCtrlEPServiceComplete
 54093 ;;		_USBCtrlTrfRxService
 54094 ;; This function uses a non-reentrant model
 54095 ;;
 54096                           
 54097                           	psect	text230
 54098  01275C                     __ptext230:
 54099                           	opt stack 0
 54100  01275C                     _USBCtrlEPAllowStatusStage:
 54101                           	opt stack 13
 54102                           
 54103                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 54104                           
 54105                           ;incstack = 0
 54106  01275C  0101               	movlb	1	; () banked
 54107  01275E  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 54108  012760  A4D8               	btfss	status,2,c
 54109  012762  0012               	return	
 54110                           
 54111                           ; BSR set to: 1
 54112                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 54113  012764  0E01               	movlw	1
 54114  012766  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 54115                           
 54116                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 54117  012768  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 54118  01276A  A4D8               	btfss	status,2,c
 54119  01276C  0012               	return	
 54120                           
 54121                           ; BSR set to: 1
 54122                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 54123  01276E  0E01               	movlw	1
 54124  012770  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 54125                           
 54126                           ; BSR set to: 1
 54127                           ;usb_device.c: 1434: if(controlTransferState == 2)
 54128  012772  0E02               	movlw	2
 54129  012774  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54130  012776  A4D8               	btfss	status,2,c
 54131  012778  D015               	goto	i2l214
 54132                           
 54133                           ; BSR set to: 1
 54134                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 54135  01277A  EE20 F001          	lfsr	2,1
 54136  01277E  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54137  012780  26D9               	addwf	fsr2l,f,c
 54138  012782  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54139  012784  22DA               	addwfc	fsr2h,f,c
 54140  012786  0E00               	movlw	0
 54141  012788  6EDF               	movwf	indf2,c
 54142                           
 54143                           ; BSR set to: 1
 54144                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 54145  01278A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54146  01278E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54147  012792  0E48               	movlw	72
 54148  012794  6EDF               	movwf	indf2,c
 54149                           
 54150                           ; BSR set to: 1
 54151                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54152  012796  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54153  01279A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54154  01279E  0E00               	movlw	0
 54155  0127A0  8EDB               	bsf	plusw2,7,c
 54156                           
 54157                           ;usb_device.c: 1439: }
 54158  0127A2  0012               	return	
 54159  0127A4                     i2l214:
 54160                           
 54161                           ; BSR set to: 1
 54162                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 54163                           
 54164                           ; BSR set to: 1
 54165  0127A4  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54166  0127A6  A4D8               	btfss	status,2,c
 54167  0127A8  0012               	return	
 54168                           
 54169                           ; BSR set to: 1
 54170                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 54171  0127AA  0E00               	movlw	0
 54172  0127AC  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54173                           
 54174                           ; BSR set to: 1
 54175                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 54176  0127AE  EE20 F001          	lfsr	2,1
 54177  0127B2  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54178  0127B4  26D9               	addwf	fsr2l,f,c
 54179  0127B6  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54180  0127B8  22DA               	addwfc	fsr2h,f,c
 54181  0127BA  0E08               	movlw	8
 54182  0127BC  6EDF               	movwf	indf2,c
 54183                           
 54184                           ; BSR set to: 1
 54185                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 54186  0127BE  EE20 F002          	lfsr	2,2
 54187  0127C2  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54188  0127C4  26D9               	addwf	fsr2l,f,c
 54189  0127C6  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54190  0127C8  22DA               	addwfc	fsr2h,f,c
 54191  0127CA  0E30               	movlw	48
 54192  0127CC  6EDE               	movwf	postinc2,c
 54193  0127CE  0E0D               	movlw	13
 54194  0127D0  6EDD               	movwf	postdec2,c
 54195                           
 54196                           ; BSR set to: 1
 54197                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 54198  0127D2  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54199  0127D6  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54200  0127DA  0E04               	movlw	4
 54201  0127DC  6EDF               	movwf	indf2,c
 54202                           
 54203                           ; BSR set to: 1
 54204                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 54205  0127DE  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54206  0127E2  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54207  0127E6  0E00               	movlw	0
 54208  0127E8  8EDB               	bsf	plusw2,7,c
 54209                           
 54210                           ; BSR set to: 1
 54211                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 54212  0127EA  0E01               	movlw	1
 54213  0127EC  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54214                           
 54215                           ; BSR set to: 1
 54216                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 54217  0127EE  EE20 F001          	lfsr	2,1
 54218  0127F2  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54219  0127F4  26D9               	addwf	fsr2l,f,c
 54220  0127F6  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54221  0127F8  22DA               	addwfc	fsr2h,f,c
 54222  0127FA  0E08               	movlw	8
 54223  0127FC  6EDF               	movwf	indf2,c
 54224                           
 54225                           ; BSR set to: 1
 54226                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54227  0127FE  EE20 F002          	lfsr	2,2
 54228  012802  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54229  012804  26D9               	addwf	fsr2l,f,c
 54230  012806  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54231  012808  22DA               	addwfc	fsr2h,f,c
 54232  01280A  0E30               	movlw	48
 54233  01280C  6EDE               	movwf	postinc2,c
 54234  01280E  0E0D               	movlw	13
 54235  012810  6EDD               	movwf	postdec2,c
 54236                           
 54237                           ; BSR set to: 1
 54238                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 54239  012812  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54240  012816  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54241  01281A  0E80               	movlw	128
 54242  01281C  6EDF               	movwf	indf2,c
 54243                           
 54244                           ; BSR set to: 1
 54245                           
 54246                           ; BSR set to: 1
 54247                           
 54248                           ; BSR set to: 1
 54249  01281E  0012               	return	
 54250  012820                     __end_of_USBCtrlEPAllowStatusStage:
 54251                           	opt stack 0
 54252                           tosu	equ	0xFFF
 54253                           tosh	equ	0xFFE
 54254                           tosl	equ	0xFFD
 54255                           pclatu	equ	0xFFB
 54256                           pclath	equ	0xFFA
 54257                           tblptru	equ	0xFF8
 54258                           tblptrh	equ	0xFF7
 54259                           tblptrl	equ	0xFF6
 54260                           tablat	equ	0xFF5
 54261                           prodh	equ	0xFF4
 54262                           prodl	equ	0xFF3
 54263                           intcon	equ	0xFF2
 54264                           indf0	equ	0xFEF
 54265                           postinc0	equ	0xFEE
 54266                           fsr0h	equ	0xFEA
 54267                           fsr0l	equ	0xFE9
 54268                           wreg	equ	0xFE8
 54269                           indf1	equ	0xFE7
 54270                           postinc1	equ	0xFE6
 54271                           postdec1	equ	0xFE5
 54272                           plusw1	equ	0xFE3
 54273                           fsr1h	equ	0xFE2
 54274                           fsr1l	equ	0xFE1
 54275                           indf2	equ	0xFDF
 54276                           postinc2	equ	0xFDE
 54277                           postdec2	equ	0xFDD
 54278                           plusw2	equ	0xFDB
 54279                           fsr2h	equ	0xFDA
 54280                           fsr2l	equ	0xFD9
 54281                           status	equ	0xFD8
 54282                           
 54283 ;; *************** function _USBCtrlTrfInHandler *****************
 54284 ;; Defined at:
 54285 ;;		line 2594 in file "usb_device.c"
 54286 ;; Parameters:    Size  Location     Type
 54287 ;;		None
 54288 ;; Auto vars:     Size  Location     Type
 54289 ;;  lastDTS         1    1[COMRAM] unsigned char 
 54290 ;; Return value:  Size  Location     Type
 54291 ;;                  1    wreg      void 
 54292 ;; Registers used:
 54293 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54294 ;; Tracked objects:
 54295 ;;		On entry : 0/0
 54296 ;;		On exit  : 0/0
 54297 ;;		Unchanged: 0/0
 54298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54303 ;;Total ram usage:        1 bytes
 54304 ;; Hardware stack levels used:    1
 54305 ;; Hardware stack levels required when called:    1
 54306 ;; This function calls:
 54307 ;;		_USBCtrlTrfTxService
 54308 ;; This function is called by:
 54309 ;;		_USBCtrlEPService
 54310 ;; This function uses a non-reentrant model
 54311 ;;
 54312                           
 54313                           	psect	text231
 54314  012820                     __ptext231:
 54315                           	opt stack 0
 54316  012820                     _USBCtrlTrfInHandler:
 54317                           	opt stack 14
 54318                           
 54319                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 54320                           
 54321                           ; BSR set to: 1
 54322                           ;incstack = 0
 54323  012820  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54324  012824  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54325  012828  0101               	movlb	1	; () banked
 54326  01282A  0E00               	movlw	0
 54327  01282C  BCDF               	btfsc	indf2,6,c
 54328  01282E  0E01               	movlw	1
 54329  012830  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 54330                           
 54331                           ; BSR set to: 1
 54332                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 54333  012832  0E04               	movlw	4
 54334  012834  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 54335  012836  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 54336  012838  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54337  01283A  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 54338                           
 54339                           ; BSR set to: 1
 54340                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 54341  01283C  0E08               	movlw	8
 54342  01283E  185E               	xorwf	_USBDeviceState,w,c	;volatile
 54343  012840  A4D8               	btfss	status,2,c
 54344  012842  D00C               	goto	i2l341
 54345                           
 54346                           ; BSR set to: 1
 54347                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 54348  012844  010D               	movlb	13	; () banked
 54349  012846  5132               	movf	50,w,b	;volatile
 54350  012848  0B7F               	andlw	127
 54351  01284A  010F               	movlb	15	; () banked
 54352  01284C  6F38               	movwf	56,b	;volatile
 54353                           
 54354                           ; BSR set to: 15
 54355                           ;usb_device.c: 2609: if(UADDR != 0u)
 54356  01284E  5138               	movf	56,w,b	;volatile
 54357  012850  B4D8               	btfsc	status,2,c
 54358  012852  D002               	goto	i2l340
 54359                           
 54360                           ; BSR set to: 15
 54361                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 54362  012854  0E10               	movlw	16
 54363  012856  D001               	goto	L89
 54364  012858                     i2l340:
 54365                           
 54366                           ; BSR set to: 15
 54367                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 54368                           
 54369                           ; BSR set to: 15
 54370  012858  0E04               	movlw	4
 54371  01285A                     L89:
 54372  01285A  6E5E               	movwf	_USBDeviceState,c	;volatile
 54373  01285C                     i2l341:
 54374                           
 54375                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 54376                           
 54377                           ; BSR set to: 15
 54378                           
 54379                           ; BSR set to: 15
 54380  01285C  0101               	movlb	1	; () banked
 54381  01285E  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54382  012860  A4D8               	btfss	status,2,c
 54383  012862  D03B               	goto	i2l342
 54384                           
 54385                           ; BSR set to: 1
 54386                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 54387  012864  EE20 F002          	lfsr	2,2
 54388  012868  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54389  01286A  26D9               	addwf	fsr2l,f,c
 54390  01286C  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54391  01286E  22DA               	addwfc	fsr2h,f,c
 54392  012870  0E38               	movlw	56
 54393  012872  6EDE               	movwf	postinc2,c
 54394  012874  0E0D               	movlw	13
 54395  012876  6EDD               	movwf	postdec2,c
 54396                           
 54397                           ; BSR set to: 1
 54398                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 54399  012878  ECA9  F091         	call	_USBCtrlTrfTxService	;wreg free
 54400                           
 54401                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 54402  01287C  0E02               	movlw	2
 54403  01287E  0101               	movlb	1	; () banked
 54404  012880  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 54405  012882  A4D8               	btfss	status,2,c
 54406  012884  D00D               	goto	i2l343
 54407                           
 54408                           ; BSR set to: 1
 54409                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 54410  012886  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54411  01288A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54412  01288E  0E04               	movlw	4
 54413  012890  6EDF               	movwf	indf2,c
 54414                           
 54415                           ; BSR set to: 1
 54416                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54417  012892  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54418  012896  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54419  01289A  0E00               	movlw	0
 54420  01289C  8EDB               	bsf	plusw2,7,c
 54421                           
 54422                           ;usb_device.c: 2635: }
 54423  01289E  0012               	return	
 54424  0128A0                     i2l343:
 54425                           
 54426                           ; BSR set to: 1
 54427                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 54428                           
 54429                           ; BSR set to: 1
 54430  0128A0  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 54431  0128A2  A4D8               	btfss	status,2,c
 54432  0128A4  D00D               	goto	i2l345
 54433                           
 54434                           ; BSR set to: 1
 54435                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 54436  0128A6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54437  0128AA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54438  0128AE  0E48               	movlw	72
 54439  0128B0  6EDF               	movwf	indf2,c
 54440                           
 54441                           ; BSR set to: 1
 54442                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54443  0128B2  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54444  0128B6  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54445  0128BA  0E00               	movlw	0
 54446  0128BC  8EDB               	bsf	plusw2,7,c
 54447                           
 54448                           ;usb_device.c: 2642: }
 54449  0128BE  0012               	return	
 54450  0128C0                     i2l345:
 54451                           
 54452                           ; BSR set to: 1
 54453                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 54454                           
 54455                           ; BSR set to: 1
 54456  0128C0  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54457  0128C4  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54458  0128C8  0E08               	movlw	8
 54459  0128CA  6EDF               	movwf	indf2,c
 54460                           
 54461                           ; BSR set to: 1
 54462                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54463  0128CC  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54464  0128D0  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54465  0128D4  0E00               	movlw	0
 54466  0128D6  8EDB               	bsf	plusw2,7,c
 54467                           
 54468                           ; BSR set to: 1
 54469                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 54470                           
 54471                           ; BSR set to: 1
 54472  0128D8  0012               	return	
 54473  0128DA                     i2l342:
 54474                           
 54475                           ; BSR set to: 1
 54476                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 54477  0128DA  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 54478                           
 54479                           ; BSR set to: 1
 54480                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 54481                           
 54482                           ; BSR set to: 1
 54483                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 54484  0128DC  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54485                           
 54486                           ; BSR set to: 1
 54487                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 54488                           
 54489                           ; BSR set to: 1
 54490  0128DE  0E00               	movlw	0
 54491  0128E0  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54492  0128E2  0012               	return	
 54493  0128E4                     __end_of_USBCtrlTrfInHandler:
 54494                           	opt stack 0
 54495                           tosu	equ	0xFFF
 54496                           tosh	equ	0xFFE
 54497                           tosl	equ	0xFFD
 54498                           pclatu	equ	0xFFB
 54499                           pclath	equ	0xFFA
 54500                           tblptru	equ	0xFF8
 54501                           tblptrh	equ	0xFF7
 54502                           tblptrl	equ	0xFF6
 54503                           tablat	equ	0xFF5
 54504                           prodh	equ	0xFF4
 54505                           prodl	equ	0xFF3
 54506                           intcon	equ	0xFF2
 54507                           indf0	equ	0xFEF
 54508                           postinc0	equ	0xFEE
 54509                           fsr0h	equ	0xFEA
 54510                           fsr0l	equ	0xFE9
 54511                           wreg	equ	0xFE8
 54512                           indf1	equ	0xFE7
 54513                           postinc1	equ	0xFE6
 54514                           postdec1	equ	0xFE5
 54515                           plusw1	equ	0xFE3
 54516                           fsr1h	equ	0xFE2
 54517                           fsr1l	equ	0xFE1
 54518                           indf2	equ	0xFDF
 54519                           postinc2	equ	0xFDE
 54520                           postdec2	equ	0xFDD
 54521                           plusw2	equ	0xFDB
 54522                           fsr2h	equ	0xFDA
 54523                           fsr2l	equ	0xFD9
 54524                           status	equ	0xFD8
 54525                           
 54526 ;; *************** function _USBCtrlTrfTxService *****************
 54527 ;; Defined at:
 54528 ;;		line 1773 in file "usb_device.c"
 54529 ;; Parameters:    Size  Location     Type
 54530 ;;		None
 54531 ;; Auto vars:     Size  Location     Type
 54532 ;;  byteToSend      1    0[COMRAM] unsigned char 
 54533 ;; Return value:  Size  Location     Type
 54534 ;;                  1    wreg      void 
 54535 ;; Registers used:
 54536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 54537 ;; Tracked objects:
 54538 ;;		On entry : 0/0
 54539 ;;		On exit  : 0/0
 54540 ;;		Unchanged: 0/0
 54541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54546 ;;Total ram usage:        1 bytes
 54547 ;; Hardware stack levels used:    1
 54548 ;; This function calls:
 54549 ;;		Nothing
 54550 ;; This function is called by:
 54551 ;;		_USBCtrlEPAllowDataStage
 54552 ;;		_USBCtrlTrfInHandler
 54553 ;; This function uses a non-reentrant model
 54554 ;;
 54555                           
 54556                           	psect	text232
 54557  012352                     __ptext232:
 54558                           	opt stack 0
 54559  012352                     _USBCtrlTrfTxService:
 54560                           	opt stack 12
 54561                           
 54562                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 54563                           
 54564                           ; BSR set to: 1
 54565                           ;incstack = 0
 54566  012352  0E08               	movlw	8
 54567  012354  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 54568                           
 54569                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 54570  012356  5057               	movf	_inPipes+5,w,c	;volatile
 54571  012358  E111               	bnz	i2l12963
 54572  01235A  0E08               	movlw	8
 54573  01235C  5C56               	subwf	_inPipes+4,w,c	;volatile
 54574  01235E  B0D8               	btfsc	status,0,c
 54575  012360  D00D               	goto	i2l247
 54576                           
 54577                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 54578  012362  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 54579                           
 54580                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 54581  012366  0101               	movlb	1	; () banked
 54582  012368  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 54583  01236A  A4D8               	btfss	status,2,c
 54584  01236C  D002               	goto	i2l245
 54585                           
 54586                           ; BSR set to: 1
 54587                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 54588  01236E  0E01               	movlw	1
 54589  012370  D004               	goto	L90
 54590  012372                     i2l245:
 54591                           
 54592                           ; BSR set to: 1
 54593                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 54594                           
 54595                           ; BSR set to: 1
 54596  012372  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 54597  012374  A4D8               	btfss	status,2,c
 54598  012376  D002               	goto	i2l247
 54599                           
 54600                           ; BSR set to: 1
 54601                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 54602  012378  0E02               	movlw	2
 54603  01237A                     L90:
 54604  01237A  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 54605  01237C                     i2l247:
 54606  01237C                     i2l12963:
 54607                           
 54608                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 54609  01237C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54610  01237E  5E56               	subwf	_inPipes+4,f,c	;volatile
 54611  012380  0E00               	movlw	0
 54612  012382  5A57               	subwfb	_inPipes+5,f,c	;volatile
 54613                           
 54614                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 54615  012384  0101               	movlb	1	; () banked
 54616  012386  EE20 F001          	lfsr	2,1
 54617  01238A  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54618  01238C  26D9               	addwf	fsr2l,f,c
 54619  01238E  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54620  012390  22DA               	addwfc	fsr2h,f,c
 54621  012392  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 54622                           
 54623                           ; BSR set to: 1
 54624                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 54625  012396  0E38               	movlw	56
 54626  012398  6F4F               	movwf	_pDst& (0+255),b
 54627  01239A  0E0D               	movlw	13
 54628  01239C  6F50               	movwf	(_pDst+1)& (0+255),b
 54629                           
 54630                           ; BSR set to: 1
 54631                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 54632  01239E  A055               	btfss	_inPipes+3,0,c	;volatile
 54633  0123A0  D01D               	goto	i2l249
 54634  0123A2  D03C               	goto	i2l253
 54635  0123A4                     
 54636                           ; BSR set to: 1
 54637                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 54638                           
 54639                           ; BSR set to: 1
 54640  0123A4  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 54641  0123A8  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 54642  0123AC  0E00               	movlw	low (__mediumconst shr (0+16))
 54643  0123AE  6EF8               	movwf	tblptru,c
 54644  0123B0  C14F  FFD9         	movff	_pDst,fsr2l
 54645  0123B4  C150  FFDA         	movff	_pDst+1,fsr2h
 54646  0123B8  0E0E               	movlw	(high __ramtop+-1)
 54647  0123BA  64F7               	cpfsgt	tblptrh,c
 54648  0123BC  D003               	bra	i2u1140_47
 54649  0123BE  0008               	tblrd		*
 54650  0123C0  50F5               	movf	tablat,w,c
 54651  0123C2  D005               	bra	i2u1140_40
 54652  0123C4                     i2u1140_47:
 54653  0123C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 54654  0123C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 54655  0123CC  50EF               	movf	indf0,w,c
 54656  0123CE                     i2u1140_40:
 54657  0123CE  6EDF               	movwf	indf2,c
 54658  0123D0  4A52               	infsnz	_inPipes,f,c	;volatile
 54659  0123D2  2A53               	incf	_inPipes+1,f,c	;volatile
 54660  0123D4  0101               	movlb	1	; () banked
 54661  0123D6  4B4F               	infsnz	_pDst& (0+255),f,b
 54662  0123D8  2B50               	incf	(_pDst+1)& (0+255),f,b
 54663                           
 54664                           ; BSR set to: 1
 54665                           ;usb_device.c: 1816: byteToSend--;
 54666  0123DA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 54667  0123DC                     i2l249:
 54668                           
 54669                           ; BSR set to: 1
 54670                           
 54671                           ; BSR set to: 1
 54672  0123DC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54673  0123DE  B4D8               	btfsc	status,2,c
 54674  0123E0  0012               	return	
 54675  0123E2  D7E0               	goto	i2l250
 54676  0123E4                     
 54677                           ; BSR set to: 1
 54678                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 54679                           
 54680                           ; BSR set to: 1
 54681  0123E4  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 54682  0123E8  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 54683  0123EC  0E00               	movlw	low (__mediumconst shr (0+16))
 54684  0123EE  6EF8               	movwf	tblptru,c
 54685  0123F0  C14F  FFD9         	movff	_pDst,fsr2l
 54686  0123F4  C150  FFDA         	movff	_pDst+1,fsr2h
 54687  0123F8  0E0E               	movlw	(high __ramtop+-1)
 54688  0123FA  64F7               	cpfsgt	tblptrh,c
 54689  0123FC  D003               	bra	i2u1142_47
 54690  0123FE  0008               	tblrd		*
 54691  012400  50F5               	movf	tablat,w,c
 54692  012402  D005               	bra	i2u1142_40
 54693  012404                     i2u1142_47:
 54694  012404  CFF6 FFE9          	movff	tblptrl,fsr0l
 54695  012408  CFF7 FFEA          	movff	tblptrh,fsr0h
 54696  01240C  50EF               	movf	indf0,w,c
 54697  01240E                     i2u1142_40:
 54698  01240E  6EDF               	movwf	indf2,c
 54699  012410  4A52               	infsnz	_inPipes,f,c	;volatile
 54700  012412  2A53               	incf	_inPipes+1,f,c	;volatile
 54701  012414  0101               	movlb	1	; () banked
 54702  012416  4B4F               	infsnz	_pDst& (0+255),f,b
 54703  012418  2B50               	incf	(_pDst+1)& (0+255),f,b
 54704                           
 54705                           ; BSR set to: 1
 54706                           ;usb_device.c: 1824: byteToSend--;
 54707  01241A  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 54708  01241C                     i2l253:
 54709                           
 54710                           ; BSR set to: 1
 54711                           
 54712                           ; BSR set to: 1
 54713  01241C  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54714  01241E  B4D8               	btfsc	status,2,c
 54715  012420  0012               	return	
 54716  012422  D7E0               	goto	i2l254
 54717  012424                     __end_of_USBCtrlTrfTxService:
 54718                           	opt stack 0
 54719                           tosu	equ	0xFFF
 54720                           tosh	equ	0xFFE
 54721                           tosl	equ	0xFFD
 54722                           pclatu	equ	0xFFB
 54723                           pclath	equ	0xFFA
 54724                           tblptru	equ	0xFF8
 54725                           tblptrh	equ	0xFF7
 54726                           tblptrl	equ	0xFF6
 54727                           tablat	equ	0xFF5
 54728                           prodh	equ	0xFF4
 54729                           prodl	equ	0xFF3
 54730                           intcon	equ	0xFF2
 54731                           indf0	equ	0xFEF
 54732                           postinc0	equ	0xFEE
 54733                           fsr0h	equ	0xFEA
 54734                           fsr0l	equ	0xFE9
 54735                           wreg	equ	0xFE8
 54736                           indf1	equ	0xFE7
 54737                           postinc1	equ	0xFE6
 54738                           postdec1	equ	0xFE5
 54739                           plusw1	equ	0xFE3
 54740                           fsr1h	equ	0xFE2
 54741                           fsr1l	equ	0xFE1
 54742                           indf2	equ	0xFDF
 54743                           postinc2	equ	0xFDE
 54744                           postdec2	equ	0xFDD
 54745                           plusw2	equ	0xFDB
 54746                           fsr2h	equ	0xFDA
 54747                           fsr2l	equ	0xFD9
 54748                           status	equ	0xFD8
 54749                           tosu	equ	0xFFF
 54750                           tosh	equ	0xFFE
 54751                           tosl	equ	0xFFD
 54752                           pclatu	equ	0xFFB
 54753                           pclath	equ	0xFFA
 54754                           tblptru	equ	0xFF8
 54755                           tblptrh	equ	0xFF7
 54756                           tblptrl	equ	0xFF6
 54757                           tablat	equ	0xFF5
 54758                           prodh	equ	0xFF4
 54759                           prodl	equ	0xFF3
 54760                           intcon	equ	0xFF2
 54761                           indf0	equ	0xFEF
 54762                           postinc0	equ	0xFEE
 54763                           fsr0h	equ	0xFEA
 54764                           fsr0l	equ	0xFE9
 54765                           wreg	equ	0xFE8
 54766                           indf1	equ	0xFE7
 54767                           postinc1	equ	0xFE6
 54768                           postdec1	equ	0xFE5
 54769                           plusw1	equ	0xFE3
 54770                           fsr1h	equ	0xFE2
 54771                           fsr1l	equ	0xFE1
 54772                           indf2	equ	0xFDF
 54773                           postinc2	equ	0xFDE
 54774                           postdec2	equ	0xFDD
 54775                           plusw2	equ	0xFDB
 54776                           fsr2h	equ	0xFDA
 54777                           fsr2l	equ	0xFD9
 54778                           status	equ	0xFD8
 54779                           
 54780                           	psect	text233
 54781  000000                     __ptext233:
 54782                           	opt stack 0
 54783                           tosu	equ	0xFFF
 54784                           tosh	equ	0xFFE
 54785                           tosl	equ	0xFFD
 54786                           pclatu	equ	0xFFB
 54787                           pclath	equ	0xFFA
 54788                           tblptru	equ	0xFF8
 54789                           tblptrh	equ	0xFF7
 54790                           tblptrl	equ	0xFF6
 54791                           tablat	equ	0xFF5
 54792                           prodh	equ	0xFF4
 54793                           prodl	equ	0xFF3
 54794                           intcon	equ	0xFF2
 54795                           indf0	equ	0xFEF
 54796                           postinc0	equ	0xFEE
 54797                           fsr0h	equ	0xFEA
 54798                           fsr0l	equ	0xFE9
 54799                           wreg	equ	0xFE8
 54800                           indf1	equ	0xFE7
 54801                           postinc1	equ	0xFE6
 54802                           postdec1	equ	0xFE5
 54803                           plusw1	equ	0xFE3
 54804                           fsr1h	equ	0xFE2
 54805                           fsr1l	equ	0xFE1
 54806                           indf2	equ	0xFDF
 54807                           postinc2	equ	0xFDE
 54808                           postdec2	equ	0xFDD
 54809                           plusw2	equ	0xFDB
 54810                           fsr2h	equ	0xFDA
 54811                           fsr2l	equ	0xFD9
 54812                           status	equ	0xFD8
 54813                           
 54814                           	psect	rparam
 54815  0000                     tosu	equ	0xFFF
 54816                           tosh	equ	0xFFE
 54817                           tosl	equ	0xFFD
 54818                           pclatu	equ	0xFFB
 54819                           pclath	equ	0xFFA
 54820                           tblptru	equ	0xFF8
 54821                           tblptrh	equ	0xFF7
 54822                           tblptrl	equ	0xFF6
 54823                           tablat	equ	0xFF5
 54824                           prodh	equ	0xFF4
 54825                           prodl	equ	0xFF3
 54826                           intcon	equ	0xFF2
 54827                           indf0	equ	0xFEF
 54828                           postinc0	equ	0xFEE
 54829                           fsr0h	equ	0xFEA
 54830                           fsr0l	equ	0xFE9
 54831                           wreg	equ	0xFE8
 54832                           indf1	equ	0xFE7
 54833                           postinc1	equ	0xFE6
 54834                           postdec1	equ	0xFE5
 54835                           plusw1	equ	0xFE3
 54836                           fsr1h	equ	0xFE2
 54837                           fsr1l	equ	0xFE1
 54838                           indf2	equ	0xFDF
 54839                           postinc2	equ	0xFDE
 54840                           postdec2	equ	0xFDD
 54841                           plusw2	equ	0xFDB
 54842                           fsr2h	equ	0xFDA
 54843                           fsr2l	equ	0xFD9
 54844                           status	equ	0xFD8
 54845                           
 54846                           	psect	temp
 54847  00005F                     btemp:
 54848                           	opt stack 0
 54849  00005F                     	ds	1
 54850  0000                     int$flags	set	btemp
 54851  0000                     wtemp8	set	btemp+1
 54852  0000                     ttemp5	set	btemp+1
 54853  0000                     ttemp6	set	btemp+4
 54854  0000                     ttemp7	set	btemp+8
 54855                           tosu	equ	0xFFF
 54856                           tosh	equ	0xFFE
 54857                           tosl	equ	0xFFD
 54858                           pclatu	equ	0xFFB
 54859                           pclath	equ	0xFFA
 54860                           tblptru	equ	0xFF8
 54861                           tblptrh	equ	0xFF7
 54862                           tblptrl	equ	0xFF6
 54863                           tablat	equ	0xFF5
 54864                           prodh	equ	0xFF4
 54865                           prodl	equ	0xFF3
 54866                           intcon	equ	0xFF2
 54867                           indf0	equ	0xFEF
 54868                           postinc0	equ	0xFEE
 54869                           fsr0h	equ	0xFEA
 54870                           fsr0l	equ	0xFE9
 54871                           wreg	equ	0xFE8
 54872                           indf1	equ	0xFE7
 54873                           postinc1	equ	0xFE6
 54874                           postdec1	equ	0xFE5
 54875                           plusw1	equ	0xFE3
 54876                           fsr1h	equ	0xFE2
 54877                           fsr1l	equ	0xFE1
 54878                           indf2	equ	0xFDF
 54879                           postinc2	equ	0xFDE
 54880                           postdec2	equ	0xFDD
 54881                           plusw2	equ	0xFDB
 54882                           fsr2h	equ	0xFDA
 54883                           fsr2l	equ	0xFD9
 54884                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1563
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_set_zero->_motor_schedule_command
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps_with_overshoot
    _motor_move_steps_with_overshoot->_motor_schedule_command
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  904534
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378302
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231530
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83356
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6260
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80164
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17416
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  189701
                                            111 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
        _motor_increase_manual_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   43510
                                            101 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   32751
                                            101 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   31650
                                             73 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113476
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113476
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108676
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   55089
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53383
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  141534
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16518
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7690
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5  122015
                                            102 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   71295
                                            101 BANK0      1     1      0
            _motor_clear_command_cue
         _motor_go_to_steps_position
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0   23510
                                             73 BANK0      1     1      0
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   24297
                                             73 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   49970
                                             89 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    11     5      6   24316
                                             78 BANK0     11     5      6
    _motor_move_steps_with_overshoot
 ---------------------------------------------------------------------------------
 (5) _motor_move_steps_with_overshoot                      5     1      4   23777
                                             73 BANK0      5     1      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   24073
                                             73 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_schedule_command                               8     1      7   23466
                                             65 BANK0      8     1      7
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          18    11      7   17416
                                             47 BANK0     18    11      7
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         __parse_jump_steps_with_overshoot
           _motor_move_steps_with_overshoot
             _motor_schedule_command
               __motor_run
                 _motor_calculate_position_in_degrees
                   ___fldiv
                     ___xxtofl (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                   ___fltol
                   ___xxtofl
                 _motor_steps_from_degrees
                   ___fldiv
                     ___xxtofl (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                   ___fltol
                   ___xxtofl
               _motor_items_in_cue
               _motor_nonzero_steps_from_degrees (ARG)
                 _motor_steps_from_degrees
                   ___fldiv
                     ___xxtofl (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                   ___fltol
                   ___xxtofl
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
         _motor_set_zero
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_set_zero
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3E3      31        0.0%
DATA                 0      0     7E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 02 15:33:17 2020

                           __end_of_fat_read_from_file 1B8E  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 5432  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 2F3C  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FB6E  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 227C  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 53D8  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 53AA  
                                     __i2c_eeprom_busy 5508  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 18D4  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 1114  
              __end_of_motor_move_steps_with_overshoot 3090  
             __size_of_motor_move_steps_with_overshoot 00AA  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                    ??_motor_move_steps_with_overshoot 00AD  
                     ?_motor_move_steps_with_overshoot 00A9  
                      _motor_move_steps_with_overshoot 2FE6  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 52E0  
                                                  l207 52DE  
                                                  l145 FBB8  
                                                  l147 FBE0  
                                                  l149 FC1A  
                          __end_of_USBStdGetDscHandler 055E  
                                                  l184 0E20  
                                                  l192 0D5E  
                                                  l186 0E4A  
                                                  l602 E5FA  
                                                  l188 0EC8  
                                                  l700 D928  
                                                  l620 4290  
                                                  l612 0428  
                                                  l701 D668  
                                                  l613 0422  
                                                  l605 E602  
                                                  l710 D768  
                                                  l630 C15E  
                                                  l622 42AC  
                                                  l703 D94C  
                                                  l711 D7D6  
                                                  l631 BDBE  
                                                  l615 042C  
                                                  l720 D90E  
                                                  l712 D7D2  
                                                  l704 D714  
                                                  l640 BF02  
                                                  l624 42B8  
                                                  l608 037C  
                                                  l641 BF0C  
                                                  l625 42BE  
                                                  l714 D7EA  
                                                  l706 D71A  
                                                  l650 C004  
                                                  l642 BF30  
                                                  l634 BDCE  
                                                  l626 42C4  
                                                  l570 E61A  
                                                  l731 0924  
                                                  l715 D86E  
                                                  l707 D726  
                                                  l619 42CC  
                                                  l571 E3DE  
                                                  l708 D744  
                                                  l660 C0AA  
                                                  l652 C03A  
                                                  l644 BF60  
                                                  l636 BDDE  
                                                  l580 E4F0  
                                                  l900 45F4  
                                                  l709 D790  
                                                  l661 C0BE  
                                                  l637 BDE8  
                                                  l734 0930  
                                                  l726 08CE  
                                                  l718 D8DE  
                                                  l670 C156  
                                                  l662 C0E6  
                                                  l654 C056  
                                                  l646 BFA0  
                                                  l582 E508  
                                                  l735 0958  
                                                  l719 D8F6  
                                                  l639 BE3C  
                                                  l591 E57C  
                                                  l575 E402  
                                                  l728 08E6  
                                                  l664 C11A  
                                                  l656 C06E  
                                                  l592 E580  
                                                  l904 4606  
                                                  l753 09C2  
                                                  l737 0994  
                                                  l681 F06A  
                                                  l665 C0EE  
                                                  l649 BFD8  
                                                  l593 E5A6  
                                                  l577 E52E  
                                                  l770 072E  
                                                  l738 097A  
                                                  l690 EF80  
                                                  l682 EEAC  
                                                  l666 C100  
                                                  l578 E514  
                                                  l586 E638  
                                                  l906 4612  
                                                  l675 2930  
                                                  l763 0778  
                                                  l771 076A  
                                                  l747 09A2  
                                                  l691 EFAA  
                                                  l667 C116  
                                                  l587 E54E  
                                                  l579 E4E6  
                                                  l764 06E2  
                                                  l684 F08E  
                                                  l692 EFD8  
                                                  _BDT 000D00  
                                                  l677 294C  
                                                  l757 06B6  
                                                  l749 09B0  
                                                  l693 EFEA  
                                                  l685 EF06  
                                                  l589 E55A  
                                                  l950 30FC  
                                                  l766 06EA  
                                                  l694 EFF0  
                                                  l686 EF12  
                                                  l862 3464  
                                                  l767 06F8  
                                                  l695 F004  
                                                  l687 EF1C  
                                                  l871 34A6  
                                                  l863 347E  
                                                  l944 3098  
                                                  l768 070C  
                                                  l696 F052  
                                                  l688 EF30  
                                                  l872 34AA  
                                                  l769 071A  
                                                  l873 34B0  
                                                  l867 34B6  
                                                  l869 34D8  
                                                  l897 4624  
                                                  l986 580E  
                                                  l898 45E8  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 00A9  
                                   api_prepare@command 0074  
                                           _USBSuspend 537A  
                               __end_of_display_update 517A  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FCBA  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 3138  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l1141 58C4  
                                                 l1213 48CA  
                                                 l1310 4D7A  
                                                 l1126 58CC  
                                                 l1135 5892  
                                                 l1312 4D86  
                                                 l1320 1D1E  
                                                 l1400 A460  
                                                 l1321 1CEE  
                                                 l1401 A47E  
                                                 l1153 588A  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2050 2DDA  
                                                 l1082 18CA  
                                                 l1331 EB74  
                                                 l1411 A5D0  
                                                 l1243 499A  
                                                 l1147 589E  
                                                 l2300 F858  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l1244 497C  
                                                 l1164 364E  
                                                 l2301 F754  
                                                 l1341 EBE4  
                                                 l1317 1CC0  
                                                 l1165 3630  
                                                 l2310 F794  
                                                 l1342 EBF8  
                                                 l1318 1CAA  
                                                 l1326 4EA6  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l1158 4BD8  
                                                 l2046 2D86  
                                                 l2311 F7B8  
                                                 l2303 F75C  
                                                 l1343 EC58  
                                                 l1335 EB4C  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l3031 3A54  
                                                 l1159 4BBA  
                                                 l2312 F7BE  
                                                 l2304 F764  
                                                 l1344 EC12  
                                                 l1336 EB6A  
                                                 l3008 47B2  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l3032 3A62  
                                                 l2321 F840  
                                                 l2313 F7C4  
                                                 l2305 F76C  
                                                 l1345 EC56  
                                                 l1353 0A22  
                                                 l3009 47C6  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l1249 3C1C  
                                                 l2330 3928  
                                                 l2314 F7CA  
                                                 l2306 F774  
                                                 l2250 1DCA  
                                                 l1530 483E  
                                                 l1338 EC00  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l1362 2C30  
                                                 l1522 3F72  
                                                 l2170 4FA2  
                                                 l2315 F7D0  
                                                 l2307 F77C  
                                                 l2243 1E0A  
                                                 l2251 1DEA  
                                                 l1531 47FA  
                                                 l1347 EC92  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l2083 3D02  
                                                 l3027 3A20  
                                                 l1523 3F96  
                                                 l2171 4FD6  
                                                 l2340 084E  
                                                 l2316 F7D6  
                                                 l2308 F784  
                                                 l2260 05D0  
                                                 l1348 EC62  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l3028 3A14  
                                                 l1540 4544  
                                                 l1364 2C50  
                                                 l2172 4FB4  
                                                 l2341 0876  
                                                 l2317 F7DC  
                                                 l2309 F78C  
                                                 l1533 4824  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l2085 3D68  
                                                 l1541 454E  
                                                 l2334 F982  
                                                 l2342 08B8  
                                                 l2326 394A  
                                                 l2262 0648  
                                                 l2246 1D86  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l1366 2C70  
                                                 l2327 38EC  
                                                 l2319 F80E  
                                                 l2263 05EA  
                                                 l2255 057C  
                                                 l2247 1D94  
                                                 l1551 3CCE  
                                                 l2183 3816  
                                                 l3071 2626  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l2423 4D5A  
                                                 l1359 2C10  
                                                 l2336 FA1C  
                                                 l2328 3966  
                                                 l2264 067E  
                                                 l2280 2AC4  
                                                 l2248 1DA8  
                                                 l2192 3404  
                                                 l3072 261A  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l2329 390A  
                                                 l2265 0602  
                                                 l2249 1DBC  
                                                 l2177 46E8  
                                                 l1553 3CEE  
                                                 l3081 2E02  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2169 4FC6  
                                                 l2530 4C54  
                                                 l2346 3AF4  
                                                 l2266 061E  
                                                 l2258 05CA  
                                                 l2274 2A74  
                                                 l2186 384C  
                                                 l3090 2E80  
                                                 l3082 2E16  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l2419 1BAA  
                                                 l2451 26DC  
                                                 l2291 F2C4  
                                                 l2195 3442  
                                                 l3075 265A  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l2428 1F0E  
                                                 l2532 4C70  
                                                 l2276 2AAE  
                                                 l1548 3C8C  
                                                 l3076 2668  
                                                 l3068 25E0  
                                                 l3084 2E34  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l3412 41A6  
                                                 l1900 1124  
                           USBConfigureEndpoint@handle 0007  
                                                 l2533 4C78  
                                                 l2293 F342  
                                                 l1581 565C  
                                                 l1549 3C96  
                                                 l3077 267E  
                                                 l3069 25F8  
                                                 l3085 2E28  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2701 B1BE  
                                                 l3413 41B4  
                                                 l1741 4482  
                                                 l1485 5150  
                                                 l2278 2AEE  
                                                 l2286 F3D2  
                                                 l3510 D3A0  
                                                 l1398 A456  
                                                 l2630 3E96  
                                                 l2710 B02E  
                                                 l2702 AFB6  
                                                 l1806 4098  
                                                 l1814 54C2  
                                                 l1910 E6B6  
                                                 l1902 1134  
                                                 l2471 C5DC  
                                                 l2551 CF16  
                                                 l2543 CD2E  
                                                 l2279 2AB8  
                                                 l1575 4652  
                                                 l1567 4ABA  
                                                 l1479 AF14  
                                                 l2631 3E62  
                                                 l2703 AFC6  
                                                 l1743 44BC  
                                                 l1911 E84E  
                                                 l1903 11F0  
                                                 l3600 D046  
                                                 l2544 CD7C  
                                                 l2296 F39C  
                                                 l1576 465C  
                                                 l1568 4AC4  
                                                 l3512 D400  
                                                 l3504 D35C  
                                                 l3264 5338  
                                                 l3088 2E5C  
                                                 l2640 53C0  
                                                 l2800 B56A  
                                                 l1808 40F0  
                                                 l3408 417E  
                                                 l1816 54D4  
                                                 l1760 25A8  
                                                 l1912 E73C  
                                                 l1904 11E8  
                                                 l3601 D05A  
                                                 l2481 C76A  
                                                 l2473 C64A  
                                                 l2449 26CE  
                                                 l2545 CE18  
                                                 l2289 F2B2  
                                                 l1681 5204  
                                                 l3513 D3C4  
                                                 l3505 D358  
                                                 l3089 2E6A  
                                                 l2641 53B0  
                                                 l2633 3E6E  
                                                 l2721 B0EE  
                                                 l2713 B060  
                                                 l1833 1AA4  
                                                 l3409 4172  
                                                 l1913 E764  
                                                 l1921 242A  
                                                 l3602 D078  
                                                 l3290 1F8C  
                                                 l2490 C86C  
                                                 l2482 C772  
                                                 l2474 C67E  
                                                 l2554 CF7C  
                                                 l2546 CE66  
                                                 l3530 D560  
                                                 l3522 D4D8  
                                                 l2650 3ED2  
                                                 l2634 3E78  
                                                 l2810 B682  
                                                 l2722 B0FE  
                                                 l2706 AFF8  
                                                 l1842 1A8E  
                                                 l1762 25B2  
                                                 l1914 E80C  
                                                 l1930 244E  
                                                 l1922 242E  
                                                 l2483 C7CC  
                                                 l2547 CF42  
                                                 l3523 D4A0  
                                                 l2643 53B4  
                                                 l2635 3E82  
                                                 l2811 B61C  
                                                 l2803 B5C2  
                                                 l2731 B198  
                                                 l2715 B086  
                                                 l1851 00BA  
                                                 l1931 2452  
                                                 l1923 2432  
                                                 l2476 C6C6  
                                                 l2468 C584  
                                                 l2548 CEE6  
                                                 l3532 D570  
                                                 l3516 D47C  
                                                 l2652 3EDE  
                                                 l2644 53B8  
                                                 l2636 3E8C  
                                                 l2564 2EDE  
                                                 l2820 B668  
                                                 l2812 B630  
                                                 l2716 B096  
                                                 l1836 1A16  
                                                 l1780 DB38  
                                                 l1852 0118  
                                                 l1932 2456  
                                                 l1924 2436  
                                                 l3613 D270  
                                                 l2469 C594  
                                                 l2557 CFAC  
                                                 l1677 5238  
                                                 l3517 D45A  
                                                 l3509 D3A4  
                                                 l3701 2F44  
                                                 l2653 3EE8  
                                                 l2645 53BC  
                                                 l2821 B67A  
                                                 l2805 B5DE  
                                                 l2741 B24E  
                                                 l2725 B130  
                                                 l2709 B01E  
                                                 l1845 3D8A  
                                                 l1757 254E  
                                                 l1933 245A  
                                                 l1925 243A  
                                                 l3606 D238  
                                                 l2478 C748  
                                                 l3526 D4C2  
                                                 l3518 D468  
                                                 l2654 3EF2  
                                                 l2734 B7FC  
                                                 l2830 B6EA  
                                                 l2806 B5F0  
                                                 l2742 B21C  
                                                 l1790 DB88  
                                                 l1774 D9C0  
                                                 l1942 E290  
                                                 l1950 E1A2  
                                                 l1918 2472  
                                                 l1934 245E  
                                                 l1926 243E  
                                                 l3615 D2B4  
                                                 l3607 D21A  
                                                 l3295 1FC0  
                                                 l3287 1F30  
                                                 l2487 C7D8  
                                                 l3551 D640  
                                                 l3535 D594  
                                                 l3527 D4C6  
                                                 l3519 D46C  
                                                 l3703 2F80  
                                                 l2655 3EFC  
                                                 l2567 2F02  
                                                 l2831 B71C  
                                                 l2823 B69A  
                                                 l2815 B63E  
                                                 l2743 B226  
                                                 l2727 B156  
                                                 l2719 B0C8  
                                                 l1767 31CA  
                                                 l3711 49D6  
                                                 l1791 DBD0  
                                                 l1951 E1B4  
                                                 l1943 E160  
                                                 l1935 2462  
                                                 l1927 2442  
                                                 l1919 2426  
                                                 l3616 D2D2  
                                                 l3296 1FB4  
                                                 l2488 C7DA  
                                                 l3552 D648  
                                                 l3544 D5D4  
                                                 l3480 4A14  
                                                 l3704 2FC2  
                                                 l2664 3FC2  
                                                 l2824 B6C6  
                                                 l2816 B652  
                                                 l2808 B608  
                                                 l2752 B3BE  
                                                 l2760 B354  
                                                 l2736 B23E  
                                                 l2744 B234  
                                                 l2728 B166  
                                                 l1768 3160  
                                                 l1880 E8B4  
                                                 l1784 DB04  
                                                 l1960 E210  
                                                 l1952 E1C6  
                                                 l1936 2466  
                                                 l1928 2446  
                                                 l3561 DC5A  
                                                 l3289 1F9C  
                                                 l2489 C842  
                                                 l2585 3028  
                                                 l3553 D64A  
                                                 l3537 D5AA  
                                                 l2649 3F06  
                                                 l2841 B782  
                                                 l2761 B366  
                                                 l2753 B2E8  
                                                 l2737 B1E4  
                                                 l1769 31AC  
                                                 l1777 D9CA  
                                                 l1849 00A8  
                                                 l1961 E214  
                                                 l1953 E1D8  
                                                 l1945 E164  
                                                 l1937 246A  
                                                 l1929 244A  
                                                 l3570 DD0C  
                                                 l3562 DC56  
                                                 l3618 D2F6  
                                                 l3298 1FDC  
                                                 l3650 FFEE  
                                                 l3642 FF88  
                                                 l2578 2B8E  
                                                 l3730 5354  
                                                 l3490 4F24  
                                                 l2834 B72A  
                                                 l2826 B6D0  
                                                 l2818 B660  
                                                 l2770 B3EE  
                                                 l2754 B2FC  
                                                 l2746 B268  
                                                 l2738 B206  
                                                 l1882 EA7E  
                                                 l1786 DB12  
                                                 l1778 DA70  
                                                 l1970 E238  
                                                 l1962 E218  
                                                 l1954 E1EA  
                                                 l1946 E168  
                                                 l1938 246E  
                                                 l3571 DDBA  
                                                 l3619 D314  
                                                 l3643 FF98  
                                                 l3723 4400  
                                                 l3547 D61A  
                                                 l3539 D5B4  
                                                 l3483 4A3C  
                                                 l2659 4FF2  
                                                 l2835 B734  
                                                 l2739 B214  
                                                 l1883 E96C  
                                                 l3715 1222  
                                                 l1795 DC0A  
                                                 l1787 DB1A  
                                                 l1779 DA1C  
                                                 l1971 E23C  
                                                 l1963 E21C  
                                                 l1955 E1FC  
                                                 l1947 E16C  
                                                 l3572 DD6A  
                                                 l3652 0038  
                                                 l3644 FFB6  
                                                 l3724 43C6  
                                                 l3484 4A46  
                                                 l2836 B742  
                                                 l2780 B47E  
                                                 l2772 B428  
                                                 l2764 B398  
                                                 l2748 B2AA  
                                                 l1884 E994  
                                                 l2940 144C  
                                                 l1796 DC1E  
                                                 l1980 E260  
                                                 l1972 E240  
                                                 l1964 E220  
                                                 l1956 E200  
                                                 l1948 E17E  
                                                 l3573 DD92  
                                                 l3565 DC9A  
                                                 l3653 002C  
                                                 l3493 4F44  
                                                 l2829 B794  
                                                 l2773 B3F6  
                                                 l2757 B32E  
                                                 l1885 EA3C  
                                                 l1877 1B40  
                                                 l3717 127E  
                                                 l2941 1414  
                                                 l1789 DB90  
                                                 l1973 E244  
                                                 l1965 E224  
                                                 l1957 E204  
                                                 l1949 E190  
                                                 l3590 DEC4  
                                                 l3566 DC96  
                                                 l3646 FFC8  
                                                 l3494 4F4E  
                                                 l2838 B74A  
                                                 l2790 B4C4  
                                                 l2782 B48A  
                                                 l2774 B400  
                                                 l3670 2128  
                                                 l3718 12EC  
                                                 l1990 E284  
                                                 l1982 E264  
                                                 l1974 E248  
                                                 l1966 E228  
                                                 l1958 E208  
                                                 l3591 DEC6  
                                                 l3575 DDB8  
                                                 l3647 FFBC  
                                                 l2871 F264  
                                                 l3479 4A1C  
                                                 l2839 B778  
                                                 l2791 B4D2  
                                                 l2783 B496  
                                                 l2767 B418  
                                                 l2775 B40E  
                                                 l3663 20D4  
                                                 l3751 3BDE  
                                                 l2943 14BE  
                                                 l1991 E288  
                                                 l1983 E268  
                                                 l1975 E24C  
                                                 l1967 E22C  
                                                 l1959 E20C  
                                                 l3568 DCE4  
                                                 l2768 B3D0  
                                                 l2952 F634  
                                                 l3672 219A  
                                                 l3664 20CE  
                                                 l3680 1352  
                                                 l3760 57D8  
                                                 l3752 3B7C  
                                                 l2944 14BA  
                                                 l1992 E28C  
                                                 l1984 E26C  
                                                 l1976 E250  
                                                 l1968 E230  
                                                 l3585 DE26  
                                                 l3649 0006  
                                                 l3729 5366  
                                                 l2865 F228  
                                                 l3489 4F2C  
                                                 l3745 502C  
                                                 l2793 B50C  
                                                 l2777 B438  
                                                 l2769 B3E0  
                                                 l3737 4594  
                                                 l3753 3BD4  
                                                 l1985 E270  
                                                 l1977 E254  
                                                 l1969 E234  
                                                 l3578 DDEE  
                                                 l3658 0078  
                                                 l3746 5026  
                                                 l2794 B4DA  
                                                 l2778 B44A  
                                                 l3666 2116  
                                                 l3738 458A  
                                                 l2970 CA8A  
                                                 l1986 E274  
                                                 l1978 E258  
                                                 l3587 DE6A  
                                                 l3579 DDD0  
                                                 l3595 D00A  
                                                 l2699 B7B2  
                                                 l2795 B4E4  
                                                 l3691 569C  
                                                 l3683 13B4  
                                                 l2971 CAC0  
                                                 l2963 C946  
                                                 l1987 E278  
                                                 l1979 E25C  
                                                 l3588 DE8E  
                                                 l3596 D006  
                                                 l2868 F24E  
                                                 l2788 B4FC  
                                                 l2796 B4F2  
                                                 l3684 135C  
                                                 l2972 CAF6  
                                                 l1988 E27C  
                                                 l3589 DEB8  
                                                 l3597 D01A  
                                                 l2789 B4B8  
                                                 l2949 F5D2  
                                                 l3669 2166  
                                                 l2973 CB2C  
                                                 l2965 C97C  
                                                 l1989 E280  
                            ?__offset_from_file_number 0060  
                                                 l2798 B526  
                                                 l3686 13FA  
                                                 l2974 CB62  
                                                 l2966 C9B2  
                                                 l2990 F532  
                                                 l3599 D04A  
                                                 l2975 CB98  
                                                 l2967 C9E8  
                                                 l2976 CBCE  
                                                 l2968 CA1E  
                                                 l3697 4EF6  
                                                 l2977 CC04  
                                                 l2969 CA54  
                                                 l2978 CC3A  
                                                 l2994 C51A  
                                                 l2987 F576  
                                                 l2995 C530  
                                                 l2988 F46A  
                                                 l2989 F500  
                  __end_of__encoder_next_arc_step_size 3F40  
                          __encoder_next_arc_step_size 3ED0  
                        __size_of_encoder_statemachine 087C  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9815 3CA2  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9905 4668  
                                                 u9925 3E00  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009D  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CD  
                                       _ResetSenseData 42F0  
                          __end_of_fat_restore_mbr_fbr 37C4  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 20CC  
                                                 _atol 1310  
                                                 _main 344A  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 4ED0  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 49A8  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 52B8  
                                                 btemp 005F  
                                                 _utoa 2F3C  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00CC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 58AE  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5848  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 53D8  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E870  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 227C  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 575C  
                               __get_available_cluster 24F4  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 55F4  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3AF8  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 5250  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1B8E  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l12015 DEB8  
                                                l13073 F064  
                                                l12627 0930  
                                                l15109 2162  
                                                l12833 C86C  
                                                l15401 EB8E  
                                                l14433 54BA  
                                                l12829 C842  
                                                l15341 3C14  
                                                l14463 19F8  
                                                l13681 BF28  
                                                l15515 0118  
                                                l15381 EAE4  
                                                l13917 3B7C  
                                                l15701 3784  
                                                l16407 5354  
                                                l17303 FC12  
                                                l13847 2518  
                                                l13871 25B8  
                                                l14497 1AA4  
                                                l15457 3F44  
                                         spi_tx@length 0062  
                                                l12995 43C6  
                                                l15649 2D56  
                                                l17275 FBB0  
                                                l18091 A508  
                                                l15667 2DAA  
                                                l16493 E3FA  
                                                l18077 A4BA  
                                                l15791 2ABC  
                                                l17455 45F4  
                                                l15687 373C  
                                                l14899 CCA2  
                                                l16659 0618  
                                                l17459 4612  
                                                l15963 F5CA  
                                                l19261 3EB0  
                                                l16589 5148  
                                                l16943 4D72  
                                                l19263 3EC6  
                                                l15983 F62C  
                                                l19255 E2AA  
                                                l19265 3F20  
                                                l19257 E3C2  
                                                l19267 3F36  
                                                l16949 4D7E  
                                                l15999 F6BE  
                                                l16979 0A22  
                                        ___fltol@sign1 0068  
                                      __end_of___aldiv 2690  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 2E92  
                                                ?_atol 006C  
                                      __end_of___fladd D666  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DEE2  
                                                ?_itoa 0070  
                                      __end_of___flneg 534A  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul D32A  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 1FEE  
                                      __end_of___lldiv 3A74  
                                                u10100 DE22  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10130 DE78  
                                                u10140 DE9C  
                                                u11020 0990  
                                                u11100 5200  
                                                u10230 D066  
                                                u10320 D2C2  
                                                u10240 D1DC  
                                                u10400 1FC6  
                                                u11040 09AA  
                                                u10330 D2E0  
                                                u11060 09BE  
                                                u12020 4182  
                                                u10245 D1D2  
                                                u10360 1F4E  
                                                u11320 4F30  
                                                u10290 D26C  
                                                u11250 C7D4  
                                                u11090 5234  
                                                u10365 1F44  
                                                u10480 0042  
                                                u11440 43E8  
                                                u10640 06A2  
                                      __end_of___llmod 41C6  
                               __end_of_USBDeviceTasks FE00  
                                                u11290 4A20  
                                                u11700 D8AA  
                                                u13300 2C5C  
                                                u11518 EF5A  
                                                u11710 D8AC  
                                                u11447 43DE  
                                                u11519 EF6E  
                                                u15000 F6AA  
                                                u11800 41FC  
                                                u11465 EED8  
                                                u12610 C082  
                                                u11810 420A  
                                                u12620 C094  
                                                u12540 BF58  
                                                u12508 BE4C  
                                                u14204 035A  
                                                u13500 54DA  
                                                u13420 DB68  
                                                u13340 DA02  
                                                u11820 4216  
                                                u12509 BE60  
                                                u14205 0354  
                                                u12518 BE80  
                                                u14214 0394  
                                                u11575 D694  
                                                u12519 BE94  
                                                u14215 038E  
                                                u14311 4B50  
                                                u11728 D8B8  
                                                u14400 EAF8  
                                                u13440 DBE4  
                                                u13360 DA7C  
                                                u11808 4200  
                                                u11729 D8CC  
                                                u11905 54F4  
                                                u11658 D7A0  
                                                u12650 C122  
                                                u14410 EB6E  
                                                u13610 3D64  
                                                u12810 3198  
                                                u13450 DBF0  
                                                u13370 DAA6  
                                                u13290 2C3C  
                                                u11826 4218  
                                                u11818 420E  
                                                u11770 41D2  
                                                u11659 D7B4  
                                                u15300 2E38  
                                                u13620 E890  
                                                u13380 DAB2  
                                                u11780 41E0  
                                                u14340 3C62  
                                                u10990 0976  
                                                u11598 D6CC  
                                                u12558 BF7C  
                                                u14254 03F2  
                                                u14238 03BC  
                                                u14190 0342  
                                                u13390 DADE  
                                                u11790 41EE  
                                                u11599 D6E0  
                                                u12559 BF90  
                                                u14255 03EC  
                                                u14239 03D2  
                                                u15240 262A  
                                                u14440 EBA2  
                                                u14600 11A2  
                                                u13625 E884  
                                                u14178 0310  
                                                u16050 E5DA  
                                                u14450 EBFC  
                                                u13570 1A9A  
                                                u12850 40EC  
                                                u12770 2578  
                                                u14610 11BC  
                                                u11778 41D6  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u14179 0324  
                                                u15420 D430  
                                                u13580 1AA4  
                                                u11788 41E4  
                                                u13645 E928  
                                                u14605 1198  
                                                u15430 D440  
                                                u12870 3BA2  
                                                u11990 3A24  
                                                u12790 25B8  
                                                u14550 00E0  
                                                u11798 41F2  
                                                u11895 455A  
                                                u14295 48BA  
                                                u15600 D5B8  
                                                u15440 D442  
                                                u14800 3766  
                                                u13850 F95E  
                                                u14555 00D6  
                                                u17300 B05A  
                                                u14660 E6DC  
                                                u14820 37AE  
                                                u15630 D5D0  
                                                u15470 D484  
                                                u13950 45D6  
                                                u14590 1170  
                                                u14750 2D8C  
                                                u16511 F5C2  
                                                u13880 0836  
                                                u18200 F238  
                                                u14665 E6D2  
                                                u17170 30B2  
                                                u18210 F248  
                                                u17410 B162  
                                                u17330 B092  
                                                u17250 AFC2  
                                                u14915 01FA  
                                                u14595 1166  
                                                u14860 2AEC  
                                                u17420 B192  
                                                u17340 B0C2  
                                                u17260 AFF2  
                                                u14780 2DE0  
                                                u17190 30C6  
                                                u16550 4DB2  
                                                u15680 D626  
                                                u17600 B360  
                                                u14960 F612  
                                                u16650 2EA2  
                                                u17610 B392  
                                                u17370 B0FA  
                                                u17290 B02A  
                                                u15860 E3F4  
                                                u16820 FC76  
                                                u18180 F212  
                                                u18260 A4EA  
                                                u17380 B12A  
                                                u18190 F222  
                                                u15880 E42A  
                                                u17560 B2F6  
                                                u17570 B328  
                                      __end_of___lwdiv 4A50  
                                                u19317 4B62  
                                                u16790 FBD4  
                                                u19327 4B76  
                                                u19337 4816  
                                                u17850 B55A  
                         __flash_write_to_buffer@start 0073  
                                                u19347 4828  
                                                u19357 4832  
                                                u17870 B5B0  
                                                u17871 B5AE  
                                                u18760 3486  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 4F58  
                                                i2l300 3218  
                                                i2l220 3368  
                                                i2l214 27A4  
                                                i2l222 337E  
                                                i2l231 1580  
                                                i2l232 152A  
                                                i2l160 FD0A  
                                                i2l321 3306  
                                                i2l145 FE46  
                                                i2l250 23A4  
                                                i2l226 3700  
                                                i2l322 3300  
                                                i2l162 FD30  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 4F98  
                                                i2l315 51A6  
                                                i2l147 FE6E  
                                                i2l155 FCD0  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2858  
                                                i2l260 0C3E  
                                                i2l332 4424  
                                                i2l180 5078  
                                                i2l236 15AA  
                                                i2l308 4F96  
                                                i2l316 51A4  
                                                i2l172 FDBE  
                                                i2l164 FD46  
                                                i2l156 FCE0  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 241C  
                                                i2l245 2372  
                                                i2l341 285C  
                                                i2l261 0C1C  
                                                i2l149 FEA6  
                                                i2l165 FD52  
                                                i2l157 FCE8  
                                                i2l254 23E4  
                                                i2l342 28DA  
                                                i2l334 446E  
                                                i2l174 FDDC  
                                                i2l166 FD7A  
                                                i2l247 237C  
                                                i2l343 28A0  
                                                i2l263 0CB2  
                                                i2l167 FD84  
                                                i2l159 FCFE  
                                                i2l264 0C98  
                                                i2l184 1028  
                                                i2l192 0F6A  
                                                i2l432 232A  
                                                i2l280 0546  
                                                i2l272 2036  
                                                i2l360 21C8  
                                                i2l176 FDF8  
                                                i2l249 23DC  
                                                i2l345 28C0  
                                                i2l425 22C8  
                                                i2l281 0442  
                                                i2l361 21DA  
                                                i2l169 FD96  
                                                i2l186 1052  
                                                i2l426 2298  
                                                i2l274 20AA  
                                                i2l362 21E0  
                                                i2l179 506A  
                                                i2l283 0454  
                                                i2l355 2238  
                                                i2l188 10D0  
                                                i2l436 22EA  
                                                i2l428 22DA  
                                                i2l372 DF02  
                                                i2l284 04DE  
                                                i2l364 21E6  
                                                i2l356 21B4  
                                                i2l437 2300  
                                                i2l429 22B6  
                                                i2l381 E05A  
                                                i2l373 DF08  
                                                i2l293 3254  
                                                i2l365 2202  
                                                i2l534 0BE6  
                                                i2l438 230A  
                                                i2l550 2A1E  
                                                i2l286 04E4  
                                                i2l294 31EA  
                                                i2l366 221A  
                                                i2l358 21BC  
                                                i2l535 0B52  
                                                i2l439 2320  
                                                i2l391 E0E6  
                                                i2l383 E024  
                                                i2l375 DF70  
                                                i2l287 053A  
                                                i2l359 21C2  
                                                i2l384 E040  
                                                i2l537 0BDE  
                                                i2l545 2A50  
                                                i2l393 E138  
                                                i2l377 DFB8  
                                                i2l289 0540  
                                                i2l297 326A  
                                                i2l562 2A24  
                                                i2l546 29B8  
                                                i2l386 E0A6  
                                                i2l298 31FA  
                                                i2l387 E0B2  
                                                i2l379 DFDA  
                                                i2l299 31FE  
                                                i2l900 4A5E  
                                                i2l820 396C  
                                                i2l388 E12C  
                                                i2l821 3974  
                                                i2l822 397C  
                                                i2l904 4A70  
                                                i2l816 399E  
                                                i2l824 3986  
                                                i2l906 4A7C  
                                                i2l826 3990  
                                                i2l780 491C  
                                                i2l783 4952  
                                                _UADDR 000F38  
                                                i2l897 4A8E  
                                                i2l898 4A54  
          __end_of_motor_calculate_position_in_degrees 1F10  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 1E32  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 48A8  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 31DE  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E63C  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 29A4  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 33B2  
            motor_divide_jump@target_position_in_steps 00C6  
                                                _sd000 A2E5  
                               __write_value_to_offset 51B2  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 4954  
                                         _gblCBWLength 015E  
                __i2c_display_send_init_sequence@F6948 02AF  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 422A  
                                      __end_of_isdigit 56A4  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4352  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 58F4  
                                      __motor_run@type 0095  
                                                _ultoa 1212  
                             __parse_command_long@data 00B9  
                            __data_sector_from_cluster 5828  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0AE0  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 43B4  
                motor_go_to_steps_position@overhead_cw 00B5  
                                      __end_of_stricmp 45E2  
                                      __end_of_strncmp 3BFA  
                                      __end_of_toupper 57DC  
                                     __end_ofi2_memcpy 452E  
                                     __end_ofi2_memset 548A  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler EEAA  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DC28  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3576  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5284  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 57C4  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 56E8  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 57AA  
                        _ExternalFlash_MediaInitialize 56C6  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 17E8  
                              __end_of_fat_resize_file 1212  
                                         __end_of_atoi 21A4  
                                         __end_of_atol 140C  
                                         __end_of_main 34E0  
                                         __end_of_itoa 4F14  
               __end_of__ic2_display_set_ddram_address 563C  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5618  
                                         __end_of_ltoa 49FC  
                      __end_of_i2c_display_write_fixed 49A8  
                                         __end_of_utoa 2FE6  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C5  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5742  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 58A4  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F094  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FB6E  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest FA20  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 589A  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 2690  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3CF2  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 58F8  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 58F4  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 587A  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 52EA  
                               __flash_write_to_buffer 4AA4  
               __end_of__ic2_display_set_cgram_address 54B4  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 548A  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5776  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 58CA  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4B96  
                                     __end_of_adc_init 47A0  
                                               i2l1203 3B54  
                                               i2l1204 3B24  
                                               i2l1141 58D4  
                                               i2l1126 58DC  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 5100  
                                               i2l1158 4E38  
                                               i2l1159 4E1C  
                                               i2l2501 BB90  
                                               i2l2512 BD30  
                                               i2l2504 B9DA  
                                               i2l2513 BC86  
                                               i2l2505 BA2E  
                                               i2l2506 BB50  
                                               i2l2515 BD8E  
                                               i2l2509 BBCA  
                                               i2l2494 B864  
                                               i2l2496 BDBA  
                                               i2l2680 1758  
                                               i2l2672 1766  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2497 B866  
                                               i2l2681 1760  
                                               i2l3730 5468  
                                               i2l2498 B8BC  
                                               i2l2682 17D6  
                                               i2l2690 17C8  
                                               i2l3723 451C  
                                               i2l2499 B8E6  
                                               i2l2691 17D0  
                                               i2l2675 1720  
                                               i2l3724 44E4  
                                               i2l2685 1790  
                                               i2l2678 1742  
                                               i2l2688 17B2  
                                               i2l3729 5478  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr E3D2  
                                     __end_of__get_mbr 24F4  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AD  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F094  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 008A  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C1A8  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5828  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3AF8  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 5406  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 34E0  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 3FAE  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 47A0  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 3D6C  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 5558  
                                   __size_of__i2c_send 000A  
                           motor_schedule_command@type 00A7  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 505A  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 43B4  
                                   ?_fat_get_file_size 0095  
                                               _memset 534A  
                     __end_of__sector_from_file_number 531A  
                              __end_of_i2c_eeprom_read 48FE  
                                               _params 021F  
                                               clear_0 35BE  
                                               clear_1 35D0  
                                               clear_2 35DC  
                                               clear_3 35E8  
                                               clear_4 35FA  
                            _ExternalFlash_SectorWrite 51E8  
                                    api_parse@inBuffer 00C6  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 5618  
                                               _spi_tx 4696  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 55A8  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6951 02A6  
                                               _strlen 501C  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00BF  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 00A9  
                                     __end_of_tmr0_isr 510A  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A1  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1AA8  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00BB  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 017C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 0368  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 4FDC  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4B46  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 40F4  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 40F4  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B9  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00D1  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 45E2  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5530  
                                           __accesstop 0060  
                              __end_of__initialization 3600  
                       __end_of_motor_speed_from_index 57F2  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 50D0  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5890  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3576  
                          __end_of__parse_command_long 396A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3DE6  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5790  
                          _motor_increase_manual_speed 5776  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 5096  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4C86  
                                         __pidataBANK4 4AF6  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 54B4  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 28E4  
                                        __end_of_ultoa 1310  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0688  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 1012  
                       __end_of_motor_set_manual_speed 4C86  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 4BE6  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1AA8  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C1A8  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BDBC  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 415E  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 463C  
                                    __end_of__i2c_read 369E  
                                    __end_of__i2c_send 58AE  
                               _USBStdGetStatusHandler 31DE  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 58CA  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0CFC  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 2DE4  
                                        __flash_wakeup 47F8  
                             __fill_buffer_get_display 2A60  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1600  
                __end_of_APP_DeviceCustomHIDInitialize 52B8  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5284  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00AB  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B810  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1506  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C55A  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009B  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 327E  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0CFC  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EA96  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 21A4  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l12509 22B0  
                                              i2l12911 4A5E  
                                              i2l13449 202E  
                                              i2l12915 4A7C  
                                              i2l13379 5468  
                                              i2l12963 237C  
                                              i2l17203 FE3E  
                                              i2l17231 FE9E  
                                              i2l17409 FD8E  
                                              i2l16395 44E4  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l19275 39B6  
                                              i2l18459 BD8E  
                                              i2l18379 B8BC  
                                              i2l19277 39EA  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4AA4  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 5848  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 2424  
                                    __end_of__get_date 586E  
                                  _USBStdSetCfgHandler 1FEE  
                                    __end_of__get_item F74E  
                                   i2__i2c_eeprom_busy 55CE  
                                    __end_of__get_time 5862  
                     __end_of_maximum_speed_arc_string A237  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 00AE  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1D54  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 1012  
                       ??_motor_divide_jump_to_nearest 00C5  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
              motor_move_steps_with_overshoot@distance 00A9  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3F40  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position CFD8  
                           _motor_go_to_steps_position CC70  
             __end_of_motor_nonzero_steps_from_degrees 4D6C  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4D20  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5818  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4748  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3CF2  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 3C76  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 25C2  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0688  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 0300  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0096  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 44D2  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4474  
                                    __end_of__spi_init 5142  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 07A2  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 25C2  
                                              ___almod 2DE4  
                                            ?_spi_init 0001  
                                              ___fladd D32A  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 09D2  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DC28  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 531A  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5838  
                                              ___flmul CFD8  
                                              ___fltol 1F10  
                                              ___lldiv 39F0  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 415E  
                                              ___lwdiv 49FC  
                              ?_motor_schedule_command 00A1  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 4F14  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A5  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 58C2  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F4  
                                              __pcinit 3576  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 51E8  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 344A  
                                              __ptext1 17E8  
                                              __ptext2 5708  
                                              __ptext3 5726  
                                              __ptext4 5406  
                                              __ptext5 48A8  
                                              __ptext6 360A  
                                              __ptext7 5886  
                                              __ptext8 5890  
                                              __ptext9 589A  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 428E  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00CA  
                                 __motor_run@direction 009A  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 545E  
                              __read_value_from_offset 4DB6  
                              _fat_read_from_file_fast E870  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0BEE  
                                              _isdigit 5682  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C55A  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 5838  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5886  
                             __offset_from_file_number 54DE  
                             __end_of_i2c_eeprom_write 3B7A  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit FE00  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 4588  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3B7A  
                                              _toupper 57C4  
                                  _flash_partial_write 401C  
                                 end_of_initialization 3600  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 48FE  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 00B8  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 0432  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 55F4  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                             __flash_partial_read@data 0079  
                                            i2u1140_40 23CE  
                                            i2u1220_40 04DA  
                                            i2u1140_47 23C4  
                                            i2u1220_47 04D0  
                                            i2u1061_44 0BD0  
                                            i2u1061_45 0BCA  
                                            i2u1142_40 240E  
                                            i2u1222_40 0530  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1142_47 2404  
                                            i2u1222_47 0526  
                                            i2u1215_40 2062  
                                            i2u1303_40 485A  
                                            i2u1304_40 4866  
                                            i2u1303_48 485C  
                             __flash_partial_read@page 0073  
                                            i2u1305_40 4872  
                                            i2u1304_48 4868  
                                            i2u1057_48 0B76  
                                            i2u1306_40 487E  
                                            i2u1305_48 4874  
                                            i2u1057_49 0B8A  
                                            i2u1219_40 04AA  
                                            i2u1307_40 488A  
                                            i2u1306_48 4880  
                                            i2u1219_47 04A0  
                                            i2u1059_48 0B9C  
                                            i2u1244_40 E0CC  
                                            i2u1308_40 4894  
                                            i2u1307_48 488C  
                                            i2u1059_49 0BB2  
                                            i2u1308_46 4896  
                                            i2u1086_40 2A00  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1426_45 3B04  
                                            i2u1427_40 3B5C  
                                              ltoa@val 007C  
                                            i2u1706_40 FDFC  
                                    __end_of_motor_isr BDBC  
                                            i2u1572_40 4506  
                                            i2u1572_47 44FC  
                                            i2u1674_40 FE62  
                                            i2u1852_41 B838  
                                            i2u1677_40 FF02  
                                            i2u1862_40 BBA6  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1863_40 BBC6  
                                            i2u1855_41 B900  
                                            i2u1857_40 B9CA  
                      __parse_command_long@out_idx_ptr 00BD  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 53AA  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3318  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 344A  
                       __end_of_motor_schedule_command 275C  
                                    __end_of_spi_tx_tx 3854  
                             __end_of_i2c_display_init 4B96  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 587A  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 586E  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01F0  
                                              utoa@buf 0067  
                                           _motor_init 5708  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 1506  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4E46  
              __end_of__cluster_from_sector_and_offset 5558  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5530  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4AF6  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 5096  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C5  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C9  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 0006  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4954  
                           motor_arc_move@arc_in_steps 00AE  
     __parse_jump_steps_with_overshoot@number_of_steps 00B5  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3ED0  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3E60  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 0F0C  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 58FC  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 58F8  
                    __parse_jump_steps@number_of_steps 00B1  
                         __end_of__display_signed_itoa 4ED0  
                     __end_of_motor_steps_from_degrees 1C72  
                  __end_of__motor_get_speed_in_degrees 0300  
                          __motor_get_speed_in_degrees 01C6  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short F8CA  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 4088  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CC70  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3854  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1C72  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit FCBA  
                __end_of_USBIncrement1msInternalTimers 5708  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 56E8  
                                       __end_of___lmul 47F8  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5580  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 0E06  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit FF46  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4414  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 537A  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8826 00A9  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 46F0  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 505A  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3576  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 1E32  
                    __end_of__get_available_root_entry 54DE  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 3732  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E15E  
                                  __flash_partial_read 3DE6  
                                    USBStallEndpoint@p 0066  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 2820  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 3318  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 03AE  
                                            __i2c_read 360A  
                                            __i2c_send 58A4  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 58C2  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 56CC  
             __end_of__parse_jump_steps_with_overshoot 08BC  
            __size_of__parse_jump_steps_with_overshoot 011A  
                   ??__parse_jump_steps_with_overshoot 00B4  
                    ?__parse_jump_steps_with_overshoot 00AE  
                     __parse_jump_steps_with_overshoot 07A2  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F420  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 56C6  
                          _motor_decrease_manual_speed 56A4  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3D6C  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 1114  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0432  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 17E8  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 1600  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 0086  
                                   __end_of__i2c_start 58D2  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 4BE6  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 00B0  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C9  
                                            __add_item 140C  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 327E  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 5742  
                          api_parse@receivedDataLength 00C8  
                                     api_parse@out_idx 00CF  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 09D2  
                                  _fat_restore_mbr_fbr 3732  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 563C  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8218 0061  
         __end_of_i2c_display_program_custom_character 3C76  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3BFA  
                                            __get_date 5862  
                                    _flash_sector_read 5580  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4DFE  
                                            __get_item F5C4  
                      __end_of_fat_read_from_file_fast EA96  
                                       _motor_set_zero 2B18  
                          ?_motor_go_to_steps_position 00A9  
                                            __get_time 5856  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4850  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4D20  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 51B2  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5682  
                                          __parse_item C908  
                  __end_of__divide_jump_size_decrement 401C  
                          __divide_jump_size_decrement 3FAE  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 4F58  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 46F0  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 5250  
          __end_of__step_position_from_divide_position 19C0  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 18D4  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 0F0C  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2D36  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A9  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 5790  
                                            _api_parse 055E  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 16F4  
                              __fill_buffer_get_status ECBA  
                                   _APP_DeviceMSDTasks 5806  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A9  
                                             ?___fldiv 006E  
                                            __ptext100 A330  
                                            __ptext101 57DC  
                                            __ptext110 2F3C  
                                            __ptext102 01C6  
                                             ?___flneg 006E  
                                            __ptext111 4F14  
                                            __ptext103 47A0  
                                            __ptext200 4F58  
                                            __ptext120 534A  
                                            __ptext112 49FC  
                                            __ptext104 4E8C  
                                            __ptext201 56E8  
                                            __ptext121 52B8  
                                            __ptext113 2DE4  
                                            __ptext105 1C72  
                                            __ptext210 31DE  
                                            __ptext202 327E  
                                            __ptext130 51E8  
                                            __ptext122 45E2  
                                            __ptext114 25C2  
                                            __ptext106 09D2  
                                            __ptext211 0432  
                                            __ptext203 44D2  
                                            __ptext131 4BE6  
                                            __ptext123 5806  
                                            __ptext115 4D6C  
                                            __ptext107 EA96  
                                            __ptext220 0AE0  
                                            __ptext212 DEE2  
                                            __ptext204 3854  
                                            __ptext140 42F0  
                                            __ptext132 4AA4  
                                            __ptext124 E3D2  
                                            __ptext116 F094  
                                            __ptext108 501C  
                                            __ptext221 4352  
                                            __ptext213 396A  
                                            __ptext205 1506  
                                            __ptext141 521C  
                                            __ptext133 37C4  
                                            __ptext125 0300  
                                            __ptext117 531A  
                                            __ptext109 4ED0  
                                            __ptext230 275C  
                                            __ptext222 57AA  
                                            __ptext214 4A50  
                                            __ptext206 3318  
                                            __ptext150 586E  
                                            __ptext142 5580  
                                            __ptext134 463C  
                                            __ptext126 428E  
                                            __ptext118 D32A  
                                            __ptext231 2820  
                                            __ptext223 58F8  
                                            __ptext215 29A4  
                                            __ptext207 21A4  
                                            __ptext151 57F2  
                                            __ptext143 3DE6  
                                            __ptext135 3C76  
                                            __ptext127 BDBC  
                                            __ptext119 FB6E  
                                            __ptext232 2352  
                                            __ptext224 5284  
                                            __ptext216 227C  
                                            __ptext208 1FEE  
                                            __ptext160 53D8  
                                            __ptext152 56C6  
                                            __ptext144 563C  
                                            __ptext136 EEAA  
                                            __ptext128 D666  
                                            __ptext233 0000  
                                            __ptext225 1012  
                                            __ptext217 48FE  
                                            __ptext209 545E  
                                            __ptext161 055E  
                                            __ptext153 58AE  
                                            __ptext145 47F8  
                                            __ptext137 08BC  
                                            __ptext129 58F4  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext226 505A  
                                            __ptext218 0F0C  
                                            __ptext170 58B8  
                                            __ptext162 F74E  
                                            __ptext154 3090  
                                            __ptext146 4696  
                                            __ptext138 0688  
                                            __ptext227 369E  
                                            __ptext219 5838  
                                            __ptext171 07A2  
                                            __ptext163 4E46  
                                            __ptext155 1D54  
                                            __ptext147 5250  
                                            __ptext139 0CFC  
                                            __ptext228 4414  
                                            __ptext180 1F10  
                                            __ptext172 2FE6  
                                            __ptext164 2B18  
                                            __ptext156 ECBA  
                                            __ptext148 33B2  
                                            __ptext229 0BEE  
                                            __ptext181 CFD8  
                                            __ptext173 F8CA  
                                            __ptext165 CC70  
                                            __ptext157 43B4  
                                            __ptext149 28E4  
                                            __ptext190 4DFE  
                                            __ptext182 DC28  
                                            __ptext174 2690  
                                            __ptext166 58EA  
                                            __ptext158 F272  
                                            __ptext191 55CE  
                                            __ptext183 0E06  
                                            __ptext175 587A  
                                            __ptext167 38E4  
                                            __ptext159 2A60  
                                            __ptext192 4850  
                                            __ptext176 C55A  
                                            __ptext168 3A74  
                                            __ptext193 58D2  
                                            __ptext185 50D0  
                                            __ptext177 1B8E  
                                            __ptext169 4C36  
                                            __ptext194 58DA  
                                            __ptext186 16F4  
                                            __ptext178 1E32  
                                            __ptext195 58E2  
                                            __ptext187 B810  
                                            __ptext179 FF46  
                                            __ptext196 FCBA  
                                            __ptext188 5790  
                                            __ptext197 FE00  
                                            __ptext189 3AF8  
                                            __ptext198 517A  
                                            __ptext199 537A  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 510A  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AD  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1D54  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 0E06  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4E8C  
                  __end_of__divide_jump_size_increment 501C  
                          __divide_jump_size_increment 4FDC  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 58EA  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F74E  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5660  
                                        _fat_find_file 19C0  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2BD0  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4474  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CF  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 55A8  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 2BD0  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 58B8  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4D6C  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F5C4  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2C84  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D952  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5406  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2352  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 16F4  
                             __fat_offset_from_cluster 575C  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00C6  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E3D2  
                                            _motor_isr B810  
                           _USBDeferINDataStagePackets 0166  
                                 _active_configuration 0159  
                             ??_motor_set_manual_speed 0064  
             motor_move_steps_with_overshoot@direction 00AD  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F420  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F272  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 58E2  
                                 __end_ofi2__i2c_write 4E46  
                                 _USBConfigureEndpoint 369E  
                                         ??__motor_run 0096  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 33B2  
                                            _spi_tx_tx 37C4  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 58B4  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2C84  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 58B8  
                                             i2_memcpy 44D2  
                                             i2_memset 545E  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2B18  
                                          __write_root 4CD4  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4DB6  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 4F9C  
                      motor_schedule_command@direction 00A8  
                             __sector_from_file_number 52EA  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00C1  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2D36  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 358A  
                                            copy_data1 35AA  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 20CC  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5726  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C908  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5890  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 008A  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps F8CA  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5856  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2A60  
                                      api_parse@in_idx 00D0  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 521C  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A9  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 41C6  
                                      _MSDWriteHandler D666  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4748  
                                             __get_fbr E15E  
                                             __get_mbr 2424  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AF  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5806  
                           _ExternalFlash_CapacityRead 57F2  
                                             ___xxtofl FF46  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 00B2  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5818  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5508  
                                             __ptext11 5848  
                                             __ptext20 55F4  
                                             __ptext12 4F9C  
                                             __ptext21 5142  
                                             __ptext13 510A  
                                             __ptext30 41C6  
                                             __ptext22 4954  
                                             __ptext14 3F40  
                                             __ptext31 58C2  
                                             __ptext23 5660  
                                             __ptext15 5818  
                                             __ptext40 4CD4  
                                             __ptext32 58CA  
                                             __ptext24 5618  
                                             __ptext16 3732  
                                             __ptext41 401C  
                                             __ptext33 58A4  
                                             __ptext25 5096  
                                             __ptext17 2D36  
                                             __ptext50 54B4  
                                             __ptext42 452E  
                                             __ptext34 2C84  
                                             __ptext26 3BFA  
                                             __ptext18 2424  
                                             __ptext51 140C  
                                             __ptext43 D952  
                                             __ptext35 2BD0  
                                             __ptext27 548A  
                                             __ptext19 E15E  
                                             __ptext60 3138  
                                             __ptext52 49A8  
                                             __ptext44 51B2  
                                             __ptext36 C1A8  
                                             __ptext28 4B46  
                                             __ptext61 4DB6  
                                             __ptext53 1212  
                                             __ptext45 24F4  
                                             __ptext37 1114  
                                             __ptext29 4B96  
                                             __ptext70 52EA  
                                             __ptext62 46F0  
                                             __ptext54 415E  
                                             __ptext46 4474  
                                             __ptext38 E63C  
                                             __ptext71 54DE  
                                             __ptext63 5742  
                                             __ptext55 39F0  
                                             __ptext47 5530  
                                             __ptext39 008A  
                                             __ptext80 5558  
                                             __ptext72 19C0  
                                             __ptext64 575C  
                                             __ptext56 422A  
                                             __ptext48 5856  
                                             __ptext81 F5C4  
                                             __ptext73 3B7A  
                                             __ptext65 5828  
                                             __ptext57 F420  
                                             __ptext49 5862  
                                             __ptext90 FA20  
                                             __ptext82 4748  
                                             __ptext74 C908  
                                             __ptext66 3CF2  
                                             __ptext58 1AA8  
                                             __ptext91 2E92  
                                             __ptext83 5432  
                                             __ptext75 4588  
                                             __ptext67 3D6C  
                                             __ptext59 E870  
                                             __ptext92 18D4  
                                             __ptext84 40F4  
                                             __ptext76 57C4  
                                             __ptext68 4088  
                                             __ptext93 56A4  
                                             __ptext85 58F0  
                                             __ptext77 1310  
                                             __ptext69 55A8  
                                             __ptext94 1600  
                                             __ptext86 34E0  
                                             __ptext78 20CC  
                                             __ptext95 3E60  
                                             __ptext87 AF94  
                                             __ptext79 5682  
                                             __ptext96 53AA  
                                             __ptext88 4D20  
                                             __ptext97 3ED0  
                                             __ptext89 5776  
                                             __ptext98 4FDC  
                                             __ptext99 3FAE  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 42F0  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 428E  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 38E4  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4588  
                           __flash_copy_page_to_buffer 452E  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 3138  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4850  
                              __parse_set_manual_speed 3A74  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 38E4  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 5432  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 4088  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FA20  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 50D0  
                                  _USBCtrlTrfInHandler 2820  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00CB  
                               __end_of__i2c_wait_idle 422A  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 58EA  
                           __end_of_motor_items_in_cue 5886  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 58DA  
                                             _spi_init 4F9C  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4414  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5508  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 275C  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00B9  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 48A8  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa ECBA  
                motor_go_to_steps_position@distance_cw 00BD  
                                     i2_ResetSenseData 4352  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C5  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status EEAA  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00B0  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 29A4  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 28E4  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 589A  
                              __end_of_fat_create_file 01C6  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 58F0  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 39F0  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 396A  
              motor_schedule_command@distance_in_steps 00A1  
                                   __end_of_motor_init 5726  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 521C  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4E8C  
                __end_of__flash_write_page_from_buffer 4696  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 463C  
                             ??_motor_schedule_command 00A8  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 55CE  
                              __end_of_MSDWriteHandler D952  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 57DC  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0BEE  
                                   _USBWakeFromSuspend 517A  
                                ??__parse_command_long 00BF  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 5660  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DEE2  
                                      _fat_modify_file E63C  
                                  i2_SYSTEM_Initialize 4A50  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2352  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2E92  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 5142  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4C36  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F272  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 08BC  
                                  ??_motor_divide_jump 00C5  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 58DA  
                              motor_arc_move@direction 00AD  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4DFE  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 57AA  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0AE0  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 58E2  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 58D2  
                                     ??_motor_arc_move 00A9  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3E60  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 58F0  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00CB  
                           __size_of__parse_jump_steps 0156  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 3090  
                           __end_of_flash_sector_write 4C36  
