

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Feb 18 23:06:02 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   186                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   187                           	dabs	1,0x600,512,_msd_buffer
   188                           	dabs	1,0xD00,48,_BDT
   189                           	dabs	1,0xD40,31,_msd_cbw
   190                           	dabs	1,0xD80,13,_msd_csw
   191                           	dabs	1,0xD38,8,_CtrlTrfData
   192                           	dabs	1,0xD30,8,_SetupPkt
   193  0000                     
   194                           ; Version 2.00
   195                           ; Generated 27/05/2018 GMT
   196                           ; 
   197                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   198                           ; All rights reserved.
   199                           ; 
   200                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   201                           ; 
   202                           ; Redistribution and use in source and binary forms, with or without modification, are
   203                           ; permitted provided that the following conditions are met:
   204                           ; 
   205                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   206                           ;        conditions and the following disclaimer.
   207                           ; 
   208                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   209                           ;        of conditions and the following disclaimer in the documentation and/or other
   210                           ;        materials provided with the distribution.
   211                           ; 
   212                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   213                           ;        software without specific prior written permission.
   214                           ; 
   215                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   216                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   217                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   218                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   219                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   220                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   221                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   222                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   223                           ; 
   224                           ; 
   225                           ; Code-generator required, PIC18F47J53 Definitions
   226                           ; 
   227                           ; SFR Addresses
   228  0000                     
   229                           	psect	idataBANK1
   230  01263C                     __pidataBANK1:
   231                           	opt stack 0
   232                           
   233                           ;initializer for _LUN
   234  01263C  94                 	db	low _ExternalFlash_MediaInitialize
   235  01263D  29                 	db	high _ExternalFlash_MediaInitialize
   236  01263E  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   237  01263F  3E                 	db	low _ExternalFlash_CapacityRead
   238  012640  2A                 	db	high _ExternalFlash_CapacityRead
   239  012641  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   240  012642  92                 	db	low _ExternalFlash_SectorSizeRead
   241  012643  2A                 	db	high _ExternalFlash_SectorSizeRead
   242  012644  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   243  012645  B2                 	db	low _ExternalFlash_MediaDetect
   244  012646  2A                 	db	high _ExternalFlash_MediaDetect
   245  012647  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   246  012648  AA                 	db	low _ExternalFlash_SectorRead
   247  012649  26                 	db	high _ExternalFlash_SectorRead
   248  01264A  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   249  01264B  DA                 	db	low _ExternalFlash_WriteProtectStateGet
   250  01264C  2A                 	db	high _ExternalFlash_WriteProtectStateGet
   251  01264D  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   252  01264E  DE                 	db	low _ExternalFlash_SectorWrite
   253  01264F  2A                 	db	high _ExternalFlash_SectorWrite
   254  012650  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   255  012651  00                 	db	0
   256  012652  00                 	db	0
   257  012653  00                 	db	0
   258  012654  00                 	db	0
   259  012655  00                 	db	0
   260  012656  00                 	db	0
   261  012657  00                 	db	0
   262  012658  00                 	db	0
   263                           
   264                           ;initializer for i2c_display_init@F6909
   265  012659  3A                 	db	58
   266  01265A  1E                 	db	30
   267  01265B  39                 	db	57
   268  01265C  0C                 	db	12
   269  01265D  74                 	db	116
   270  01265E  5C                 	db	92
   271  01265F  6D                 	db	109
   272  012660  0C                 	db	12
   273  012661  01                 	db	1
   274                           
   275                           ;initializer for __i2c_display_send_init_sequence@F6906
   276  012662  3A                 	db	58
   277  012663  1E                 	db	30
   278  012664  39                 	db	57
   279  012665  0C                 	db	12
   280  012666  74                 	db	116
   281  012667  5C                 	db	92
   282  012668  6D                 	db	109
   283  012669  0C                 	db	12
   284  01266A  01                 	db	1
   285                           
   286                           ;initializer for _tx_buf
   287  01266B  01                 	db	1
   288  01266C  02                 	db	2
   289  01266D  03                 	db	3
   290  01266E  04                 	db	4
   291  01266F  05                 	db	5
   292  012670  06                 	db	6
   293  012671  07                 	db	7
   294  012672  08                 	db	8
   295                           
   296                           	psect	idataBANK2
   297  0120FE                     __pidataBANK2:
   298                           	opt stack 0
   299                           
   300                           ;initializer for _display_content
   301  0120FE  2A                 	db	42
   302  0120FF  20                 	db	32
   303  012100  20                 	db	32
   304  012101  53                 	db	83
   305  012102  74                 	db	116
   306  012103  65                 	db	101
   307  012104  70                 	db	112
   308  012105  70                 	db	112
   309  012106  65                 	db	101
   310  012107  72                 	db	114
   311  012108  20                 	db	32
   312  012109  4D                 	db	77
   313  01210A  6F                 	db	111
   314  01210B  74                 	db	116
   315  01210C  6F                 	db	111
   316  01210D  72                 	db	114
   317  01210E  20                 	db	32
   318  01210F  20                 	db	32
   319  012110  20                 	db	32
   320  012111  2A                 	db	42
   321  012112  2A                 	db	42
   322  012113  20                 	db	32
   323  012114  20                 	db	32
   324  012115  20                 	db	32
   325  012116  20                 	db	32
   326  012117  43                 	db	67
   327  012118  6F                 	db	111
   328  012119  6E                 	db	110
   329  01211A  74                 	db	116
   330  01211B  72                 	db	114
   331  01211C  6F                 	db	111
   332  01211D  6C                 	db	108
   333  01211E  6C                 	db	108
   334  01211F  65                 	db	101
   335  012120  72                 	db	114
   336  012121  20                 	db	32
   337  012122  20                 	db	32
   338  012123  20                 	db	32
   339  012124  20                 	db	32
   340  012125  2A                 	db	42
   341  012126  2A                 	db	42
   342  012127  20                 	db	32
   343  012128  20                 	db	32
   344  012129  20                 	db	32
   345  01212A  20                 	db	32
   346  01212B  20                 	db	32
   347  01212C  20                 	db	32
   348  01212D  20                 	db	32
   349  01212E  20                 	db	32
   350  01212F  20                 	db	32
   351  012130  20                 	db	32
   352  012131  20                 	db	32
   353  012132  20                 	db	32
   354  012133  20                 	db	32
   355  012134  20                 	db	32
   356  012135  20                 	db	32
   357  012136  20                 	db	32
   358  012137  20                 	db	32
   359  012138  20                 	db	32
   360  012139  2A                 	db	42
   361  01213A  2A                 	db	42
   362  01213B  20                 	db	32
   363  01213C  20                 	db	32
   364  01213D  73                 	db	115
   365  01213E  6F                 	db	111
   366  01213F  6C                 	db	108
   367  012140  64                 	db	100
   368  012141  65                 	db	101
   369  012142  72                 	db	114
   370  012143  6E                 	db	110
   371  012144  65                 	db	101
   372  012145  72                 	db	114
   373  012146  64                 	db	100
   374  012147  2E                 	db	46
   375  012148  63                 	db	99
   376  012149  6F                 	db	111
   377  01214A  6D                 	db	109
   378  01214B  20                 	db	32
   379  01214C  20                 	db	32
   380  01214D  2A                 	db	42
   381                           
   382                           	psect	mediumconst
   383  009092                     __pmediumconst:
   384                           	opt stack 0
   385  009092  00                 	db	0
   386  009093                     _motor_speed_lookup:
   387                           	opt stack 0
   388  009093  0008               	dw	8
   389  009095  000C               	dw	12
   390  009097  0010               	dw	16
   391  009099  0013               	dw	19
   392  00909B  0016               	dw	22
   393  00909D  0019               	dw	25
   394  00909F  001C               	dw	28
   395  0090A1  001E               	dw	30
   396  0090A3  0021               	dw	33
   397  0090A5  0023               	dw	35
   398  0090A7  0026               	dw	38
   399  0090A9  0028               	dw	40
   400  0090AB  002A               	dw	42
   401  0090AD  002C               	dw	44
   402  0090AF  002E               	dw	46
   403  0090B1  0030               	dw	48
   404  0090B3  0032               	dw	50
   405  0090B5  0034               	dw	52
   406  0090B7  0036               	dw	54
   407  0090B9  0038               	dw	56
   408  0090BB  003A               	dw	58
   409  0090BD  003C               	dw	60
   410  0090BF  003D               	dw	61
   411  0090C1  003F               	dw	63
   412  0090C3  0041               	dw	65
   413  0090C5  0043               	dw	67
   414  0090C7  0045               	dw	69
   415  0090C9  0046               	dw	70
   416  0090CB  0048               	dw	72
   417  0090CD  0049               	dw	73
   418  0090CF  004B               	dw	75
   419  0090D1  004D               	dw	77
   420  0090D3  004E               	dw	78
   421  0090D5  0050               	dw	80
   422  0090D7  0051               	dw	81
   423  0090D9  0053               	dw	83
   424  0090DB  0054               	dw	84
   425  0090DD  0056               	dw	86
   426  0090DF  0057               	dw	87
   427  0090E1  0059               	dw	89
   428  0090E3  005A               	dw	90
   429  0090E5  005C               	dw	92
   430  0090E7  005D               	dw	93
   431  0090E9  005F               	dw	95
   432  0090EB  0060               	dw	96
   433  0090ED  0062               	dw	98
   434  0090EF  0063               	dw	99
   435  0090F1  0064               	dw	100
   436  0090F3  0066               	dw	102
   437  0090F5  0067               	dw	103
   438  0090F7  0069               	dw	105
   439  0090F9  006A               	dw	106
   440  0090FB  006C               	dw	108
   441  0090FD  006D               	dw	109
   442  0090FF  006E               	dw	110
   443  009101  0070               	dw	112
   444  009103  0071               	dw	113
   445  009105  0072               	dw	114
   446  009107  0073               	dw	115
   447  009109  0074               	dw	116
   448  00910B  0076               	dw	118
   449  00910D  0078               	dw	120
   450  00910F  0079               	dw	121
   451  009111  007A               	dw	122
   452  009113  007B               	dw	123
   453  009115  007D               	dw	125
   454  009117  007E               	dw	126
   455  009119  007F               	dw	127
   456  00911B  0082               	dw	130
   457  00911D  0085               	dw	133
   458  00911F  0087               	dw	135
   459  009121  008A               	dw	138
   460  009123  008C               	dw	140
   461  009125  008F               	dw	143
   462  009127  0091               	dw	145
   463  009129  0092               	dw	146
   464  00912B  0094               	dw	148
   465  00912D  0098               	dw	152
   466  00912F  009A               	dw	154
   467  009131  009C               	dw	156
   468  009133  009E               	dw	158
   469  009135  00A1               	dw	161
   470  009137  00A3               	dw	163
   471  009139  00A5               	dw	165
   472  00913B  00A7               	dw	167
   473  00913D  00AA               	dw	170
   474  00913F  00AC               	dw	172
   475  009141  00AF               	dw	175
   476  009143  00B2               	dw	178
   477  009145  00B4               	dw	180
   478  009147  00B7               	dw	183
   479  009149  00B8               	dw	184
   480  00914B  00BA               	dw	186
   481  00914D  00BC               	dw	188
   482  00914F  00BE               	dw	190
   483  009151  00C0               	dw	192
   484  009153  00C3               	dw	195
   485  009155  00C4               	dw	196
   486  009157  00C6               	dw	198
   487  009159  00C8               	dw	200
   488  00915B  00CA               	dw	202
   489  00915D  00CC               	dw	204
   490  00915F  00CE               	dw	206
   491  009161  00D0               	dw	208
   492  009163  00D2               	dw	210
   493  009165  00D4               	dw	212
   494  009167  00D6               	dw	214
   495  009169  00D8               	dw	216
   496  00916B  00D9               	dw	217
   497  00916D  00DB               	dw	219
   498  00916F  00DD               	dw	221
   499  009171  00DF               	dw	223
   500  009173  00E1               	dw	225
   501  009175  00E2               	dw	226
   502  009177  00E5               	dw	229
   503  009179  00E7               	dw	231
   504  00917B  00E8               	dw	232
   505  00917D  00EA               	dw	234
   506  00917F  00EC               	dw	236
   507  009181  00EE               	dw	238
   508  009183  00EF               	dw	239
   509  009185  00F2               	dw	242
   510  009187  00F3               	dw	243
   511  009189  00F5               	dw	245
   512  00918B  00F7               	dw	247
   513  00918D  00F8               	dw	248
   514  00918F  00FB               	dw	251
   515  009191  00FD               	dw	253
   516  009193  0100               	dw	256
   517  009195  0103               	dw	259
   518  009197  0104               	dw	260
   519  009199  0107               	dw	263
   520  00919B  010A               	dw	266
   521  00919D  010C               	dw	268
   522  00919F  010F               	dw	271
   523  0091A1  0112               	dw	274
   524  0091A3  0114               	dw	276
   525  0091A5  0117               	dw	279
   526  0091A7  0119               	dw	281
   527  0091A9  011C               	dw	284
   528  0091AB  011E               	dw	286
   529  0091AD  0121               	dw	289
   530  0091AF  0123               	dw	291
   531  0091B1  0125               	dw	293
   532  0091B3  0129               	dw	297
   533  0091B5  012B               	dw	299
   534  0091B7  012C               	dw	300
   535  0091B9  012E               	dw	302
   536  0091BB  0132               	dw	306
   537  0091BD  0134               	dw	308
   538  0091BF  0136               	dw	310
   539  0091C1  0138               	dw	312
   540  0091C3  013B               	dw	315
   541  0091C5  013D               	dw	317
   542  0091C7  013F               	dw	319
   543  0091C9  0143               	dw	323
   544  0091CB  0146               	dw	326
   545  0091CD  0148               	dw	328
   546  0091CF  014A               	dw	330
   547  0091D1  014C               	dw	332
   548  0091D3  014F               	dw	335
   549  0091D5  0151               	dw	337
   550  0091D7  0154               	dw	340
   551  0091D9  0156               	dw	342
   552  0091DB  0159               	dw	345
   553  0091DD  015B               	dw	347
   554  0091DF  015E               	dw	350
   555  0091E1  0160               	dw	352
   556  0091E3  0163               	dw	355
   557  0091E5  0166               	dw	358
   558  0091E7  0169               	dw	361
   559  0091E9  016B               	dw	363
   560  0091EB  016E               	dw	366
   561  0091ED  0171               	dw	369
   562  0091EF  0174               	dw	372
   563  0091F1  0177               	dw	375
   564  0091F3  017A               	dw	378
   565  0091F5  017D               	dw	381
   566  0091F7  0180               	dw	384
   567  0091F9  0183               	dw	387
   568  0091FB  0187               	dw	391
   569  0091FD  018A               	dw	394
   570  0091FF  018D               	dw	397
   571  009201  0191               	dw	401
   572  009203  0194               	dw	404
   573  009205  0198               	dw	408
   574  009207  019B               	dw	411
   575  009209  019F               	dw	415
   576  00920B  01A3               	dw	419
   577  00920D  01A6               	dw	422
   578  00920F  01AA               	dw	426
   579  009211  01AE               	dw	430
   580  009213  01B2               	dw	434
   581  009215  01B6               	dw	438
   582  009217  01BA               	dw	442
   583  009219  01BE               	dw	446
   584  00921B  01C3               	dw	451
   585  00921D  01C7               	dw	455
   586  00921F  01CC               	dw	460
   587  009221  01D0               	dw	464
   588  009223  01D5               	dw	469
   589  009225  01D9               	dw	473
   590  009227  01DE               	dw	478
   591  009229  01E3               	dw	483
   592  00922B  01E8               	dw	488
   593  00922D  01ED               	dw	493
   594  00922F  01F3               	dw	499
   595  009231  01F8               	dw	504
   596  009233  01FE               	dw	510
   597  009235  0203               	dw	515
   598  009237  0209               	dw	521
   599  009239  020F               	dw	527
   600  00923B  0215               	dw	533
   601  00923D  021B               	dw	539
   602  00923F  0221               	dw	545
   603  009241  0227               	dw	551
   604  009243  022E               	dw	558
   605  009245  0235               	dw	565
   606  009247  023C               	dw	572
   607  009249  0243               	dw	579
   608  00924B  024A               	dw	586
   609  00924D  0251               	dw	593
   610  00924F  0259               	dw	601
   611  009251  0261               	dw	609
   612  009253  0269               	dw	617
   613  009255  0271               	dw	625
   614  009257  0279               	dw	633
   615  009259  0282               	dw	642
   616  00925B  028B               	dw	651
   617  00925D  0294               	dw	660
   618  00925F  029E               	dw	670
   619  009261  02A7               	dw	679
   620  009263  02B1               	dw	689
   621  009265  02BC               	dw	700
   622  009267  02C6               	dw	710
   623  009269  02D1               	dw	721
   624  00926B  02DC               	dw	732
   625  00926D  02DC               	dw	732
   626  00926F  02DF               	dw	735
   627  009271  02E2               	dw	738
   628  009273  02E5               	dw	741
   629  009275  02E8               	dw	744
   630  009277  02EB               	dw	747
   631  009279  02EE               	dw	750
   632  00927B  02F1               	dw	753
   633  00927D  02F4               	dw	756
   634  00927F  02F7               	dw	759
   635  009281  02FA               	dw	762
   636  009283  02FD               	dw	765
   637  009285  0300               	dw	768
   638  009287  0304               	dw	772
   639  009289  0307               	dw	775
   640  00928B  030A               	dw	778
   641  00928D  030D               	dw	781
   642  00928F  0311               	dw	785
   643  009291  0314               	dw	788
   644  009293  0317               	dw	791
   645  009295  031A               	dw	794
   646  009297  031E               	dw	798
   647  009299  0321               	dw	801
   648  00929B  0325               	dw	805
   649  00929D  0328               	dw	808
   650  00929F  032C               	dw	812
   651  0092A1  032F               	dw	815
   652  0092A3  0333               	dw	819
   653  0092A5  0336               	dw	822
   654  0092A7  033A               	dw	826
   655  0092A9  033E               	dw	830
   656  0092AB  0341               	dw	833
   657  0092AD  0345               	dw	837
   658  0092AF  0349               	dw	841
   659  0092B1  034D               	dw	845
   660  0092B3  0350               	dw	848
   661  0092B5  0354               	dw	852
   662  0092B7  0358               	dw	856
   663  0092B9  035C               	dw	860
   664  0092BB  0360               	dw	864
   665  0092BD  0364               	dw	868
   666  0092BF  0368               	dw	872
   667  0092C1  036C               	dw	876
   668  0092C3  0370               	dw	880
   669  0092C5  0374               	dw	884
   670  0092C7  0379               	dw	889
   671  0092C9  037D               	dw	893
   672  0092CB  0381               	dw	897
   673  0092CD  0385               	dw	901
   674  0092CF  038A               	dw	906
   675  0092D1  038E               	dw	910
   676  0092D3  0393               	dw	915
   677  0092D5  0397               	dw	919
   678  0092D7  039C               	dw	924
   679  0092D9  03A0               	dw	928
   680  0092DB  03A5               	dw	933
   681  0092DD  03AA               	dw	938
   682  0092DF  03AE               	dw	942
   683  0092E1  03B3               	dw	947
   684  0092E3  03B8               	dw	952
   685  0092E5  03BD               	dw	957
   686  0092E7  03C2               	dw	962
   687  0092E9  03C6               	dw	966
   688  0092EB  03CC               	dw	972
   689  0092ED  03D1               	dw	977
   690  0092EF  03D6               	dw	982
   691  0092F1  03DB               	dw	987
   692  0092F3  03E0               	dw	992
   693  0092F5  03E5               	dw	997
   694  0092F7  03EB               	dw	1003
   695  0092F9  03F0               	dw	1008
   696  0092FB  03F6               	dw	1014
   697  0092FD  03FB               	dw	1019
   698  0092FF  0401               	dw	1025
   699  009301  0406               	dw	1030
   700  009303  040C               	dw	1036
   701  009305  0412               	dw	1042
   702  009307  0417               	dw	1047
   703  009309  041D               	dw	1053
   704  00930B  0423               	dw	1059
   705  00930D  0429               	dw	1065
   706  00930F  042F               	dw	1071
   707  009311  0436               	dw	1078
   708  009313  043C               	dw	1084
   709  009315  0442               	dw	1090
   710  009317  0448               	dw	1096
   711  009319  044F               	dw	1103
   712  00931B  0455               	dw	1109
   713  00931D  045C               	dw	1116
   714  00931F  0463               	dw	1123
   715  009321  046A               	dw	1130
   716  009323  0470               	dw	1136
   717  009325  0477               	dw	1143
   718  009327  047E               	dw	1150
   719  009329  0485               	dw	1157
   720  00932B  048D               	dw	1165
   721  00932D  0494               	dw	1172
   722  00932F  049B               	dw	1179
   723  009331  04A3               	dw	1187
   724  009333  04AA               	dw	1194
   725  009335  04B2               	dw	1202
   726  009337  04BA               	dw	1210
   727  009339  04C2               	dw	1218
   728  00933B  04C9               	dw	1225
   729  00933D  04D2               	dw	1234
   730  00933F  04DA               	dw	1242
   731  009341  04E2               	dw	1250
   732  009343  04EA               	dw	1258
   733  009345  04F3               	dw	1267
   734  009347  04FC               	dw	1276
   735  009349  0504               	dw	1284
   736  00934B  050D               	dw	1293
   737  00934D  0516               	dw	1302
   738  00934F  051F               	dw	1311
   739  009351  0528               	dw	1320
   740  009353  0532               	dw	1330
   741  009355  053B               	dw	1339
   742  009357  0545               	dw	1349
   743  009359  054F               	dw	1359
   744  00935B  0559               	dw	1369
   745  00935D  0563               	dw	1379
   746  00935F  056D               	dw	1389
   747  009361  0577               	dw	1399
   748  009363  0582               	dw	1410
   749  009365  058C               	dw	1420
   750  009367  0597               	dw	1431
   751  009369  05A2               	dw	1442
   752  00936B  05AD               	dw	1453
   753  00936D  05B9               	dw	1465
   754  00936F  05C4               	dw	1476
   755  009371  05D0               	dw	1488
   756  009373  05DC               	dw	1500
   757  009375  05E8               	dw	1512
   758  009377  05F4               	dw	1524
   759  009379  0601               	dw	1537
   760  00937B  060E               	dw	1550
   761  00937D  061A               	dw	1562
   762  00937F  0628               	dw	1576
   763  009381  0635               	dw	1589
   764  009383  0643               	dw	1603
   765  009385  0650               	dw	1616
   766  009387  065E               	dw	1630
   767  009389  066D               	dw	1645
   768  00938B  067B               	dw	1659
   769  00938D  068A               	dw	1674
   770  00938F  0699               	dw	1689
   771  009391  06A9               	dw	1705
   772  009393  06B8               	dw	1720
   773  009395  06C8               	dw	1736
   774  009397  06D8               	dw	1752
   775  009399  06E9               	dw	1769
   776  00939B  06FA               	dw	1786
   777  00939D  070B               	dw	1803
   778  00939F  071C               	dw	1820
   779  0093A1  072E               	dw	1838
   780  0093A3  0740               	dw	1856
   781  0093A5  0753               	dw	1875
   782  0093A7  0766               	dw	1894
   783  0093A9  0779               	dw	1913
   784  0093AB  078D               	dw	1933
   785  0093AD  07A1               	dw	1953
   786  0093AF  07B6               	dw	1974
   787  0093B1  07CB               	dw	1995
   788  0093B3  07E0               	dw	2016
   789  0093B5  07F6               	dw	2038
   790  0093B7  080C               	dw	2060
   791  0093B9  0823               	dw	2083
   792  0093BB  083B               	dw	2107
   793  0093BD  0853               	dw	2131
   794  0093BF  086B               	dw	2155
   795  0093C1  0884               	dw	2180
   796  0093C3  089E               	dw	2206
   797  0093C5  08B8               	dw	2232
   798  0093C7  08D3               	dw	2259
   799  0093C9  08EF               	dw	2287
   800  0093CB  090B               	dw	2315
   801  0093CD  0928               	dw	2344
   802  0093CF  0945               	dw	2373
   803  0093D1  0964               	dw	2404
   804  0093D3  0983               	dw	2435
   805  0093D5  09A3               	dw	2467
   806  0093D7  09C4               	dw	2500
   807  0093D9  09E6               	dw	2534
   808  0093DB  0A08               	dw	2568
   809  0093DD  0A2C               	dw	2604
   810  0093DF  0A51               	dw	2641
   811  0093E1  0A77               	dw	2679
   812  0093E3  0A9D               	dw	2717
   813  0093E5  0AC5               	dw	2757
   814  0093E7  0AEF               	dw	2799
   815  0093E9  0B19               	dw	2841
   816  0093EB  0B45               	dw	2885
   817  0093ED  0B72               	dw	2930
   818  0093EF  0B72               	dw	2930
   819  0093F1  0B7D               	dw	2941
   820  0093F3  0B89               	dw	2953
   821  0093F5  0B94               	dw	2964
   822  0093F7  0BA0               	dw	2976
   823  0093F9  0BAC               	dw	2988
   824  0093FB  0BB8               	dw	3000
   825  0093FD  0BC4               	dw	3012
   826  0093FF  0BD0               	dw	3024
   827  009401  0BDC               	dw	3036
   828  009403  0BE9               	dw	3049
   829  009405  0BF5               	dw	3061
   830  009407  0C02               	dw	3074
   831  009409  0C0E               	dw	3086
   832  00940B  0C1B               	dw	3099
   833  00940D  0C28               	dw	3112
   834  00940F  0C35               	dw	3125
   835  009411  0C42               	dw	3138
   836  009413  0C4F               	dw	3151
   837  009415  0C5D               	dw	3165
   838  009417  0C6A               	dw	3178
   839  009419  0C77               	dw	3191
   840  00941B  0C85               	dw	3205
   841  00941D  0C93               	dw	3219
   842  00941F  0CA1               	dw	3233
   843  009421  0CAF               	dw	3247
   844  009423  0CBD               	dw	3261
   845  009425  0CCB               	dw	3275
   846  009427  0CD9               	dw	3289
   847  009429  0CE8               	dw	3304
   848  00942B  0CF7               	dw	3319
   849  00942D  0D05               	dw	3333
   850  00942F  0D14               	dw	3348
   851  009431  0D23               	dw	3363
   852  009433  0D32               	dw	3378
   853  009435  0D42               	dw	3394
   854  009437  0D51               	dw	3409
   855  009439  0D61               	dw	3425
   856  00943B  0D70               	dw	3440
   857  00943D  0D80               	dw	3456
   858  00943F  0D90               	dw	3472
   859  009441  0DA0               	dw	3488
   860  009443  0DB1               	dw	3505
   861  009445  0DC1               	dw	3521
   862  009447  0DD2               	dw	3538
   863  009449  0DE3               	dw	3555
   864  00944B  0DF3               	dw	3571
   865  00944D  0E05               	dw	3589
   866  00944F  0E16               	dw	3606
   867  009451  0E27               	dw	3623
   868  009453  0E39               	dw	3641
   869  009455  0E4B               	dw	3659
   870  009457  0E5C               	dw	3676
   871  009459  0E6F               	dw	3695
   872  00945B  0E81               	dw	3713
   873  00945D  0E93               	dw	3731
   874  00945F  0EA6               	dw	3750
   875  009461                     __end_of_motor_speed_lookup:
   876                           	opt stack 0
   877  009461                     _motor_steps_lookup:
   878                           	opt stack 0
   879  009461  0001               	dw	1
   880  009463  0002               	dw	2
   881  009465  0003               	dw	3
   882  009467  0004               	dw	4
   883  009469  0005               	dw	5
   884  00946B  0006               	dw	6
   885  00946D  0007               	dw	7
   886  00946F  0008               	dw	8
   887  009471  0009               	dw	9
   888  009473  000A               	dw	10
   889  009475  000B               	dw	11
   890  009477  000C               	dw	12
   891  009479  000D               	dw	13
   892  00947B  000E               	dw	14
   893  00947D  000F               	dw	15
   894  00947F  0010               	dw	16
   895  009481  0011               	dw	17
   896  009483  0012               	dw	18
   897  009485  0013               	dw	19
   898  009487  0014               	dw	20
   899  009489  0015               	dw	21
   900  00948B  0016               	dw	22
   901  00948D  0017               	dw	23
   902  00948F  0018               	dw	24
   903  009491  0019               	dw	25
   904  009493  001A               	dw	26
   905  009495  001B               	dw	27
   906  009497  001C               	dw	28
   907  009499  001D               	dw	29
   908  00949B  001E               	dw	30
   909  00949D  001F               	dw	31
   910  00949F  0020               	dw	32
   911  0094A1  0021               	dw	33
   912  0094A3  0022               	dw	34
   913  0094A5  0023               	dw	35
   914  0094A7  0024               	dw	36
   915  0094A9  0025               	dw	37
   916  0094AB  0026               	dw	38
   917  0094AD  0027               	dw	39
   918  0094AF  0028               	dw	40
   919  0094B1  0029               	dw	41
   920  0094B3  002A               	dw	42
   921  0094B5  002B               	dw	43
   922  0094B7  002C               	dw	44
   923  0094B9  002D               	dw	45
   924  0094BB  002E               	dw	46
   925  0094BD  002F               	dw	47
   926  0094BF  0030               	dw	48
   927  0094C1  0031               	dw	49
   928  0094C3  0032               	dw	50
   929  0094C5  0033               	dw	51
   930  0094C7  0034               	dw	52
   931  0094C9  0035               	dw	53
   932  0094CB  0036               	dw	54
   933  0094CD  0037               	dw	55
   934  0094CF  0038               	dw	56
   935  0094D1  0039               	dw	57
   936  0094D3  003A               	dw	58
   937  0094D5  003B               	dw	59
   938  0094D7  003C               	dw	60
   939  0094D9  003D               	dw	61
   940  0094DB  003E               	dw	62
   941  0094DD  003F               	dw	63
   942  0094DF  0040               	dw	64
   943  0094E1  0041               	dw	65
   944  0094E3  0042               	dw	66
   945  0094E5  0043               	dw	67
   946  0094E7  0045               	dw	69
   947  0094E9  0047               	dw	71
   948  0094EB  0049               	dw	73
   949  0094ED  004B               	dw	75
   950  0094EF  004D               	dw	77
   951  0094F1  004F               	dw	79
   952  0094F3  0051               	dw	81
   953  0094F5  0053               	dw	83
   954  0094F7  0055               	dw	85
   955  0094F9  0057               	dw	87
   956  0094FB  0059               	dw	89
   957  0094FD  005B               	dw	91
   958  0094FF  005D               	dw	93
   959  009501  005F               	dw	95
   960  009503  0061               	dw	97
   961  009505  0063               	dw	99
   962  009507  0065               	dw	101
   963  009509  0067               	dw	103
   964  00950B  0069               	dw	105
   965  00950D  006B               	dw	107
   966  00950F  006E               	dw	110
   967  009511  0070               	dw	112
   968  009513  0073               	dw	115
   969  009515  0075               	dw	117
   970  009517  0077               	dw	119
   971  009519  0079               	dw	121
   972  00951B  007B               	dw	123
   973  00951D  007D               	dw	125
   974  00951F  007F               	dw	127
   975  009521  0081               	dw	129
   976  009523  0083               	dw	131
   977  009525  0085               	dw	133
   978  009527  0087               	dw	135
   979  009529  0089               	dw	137
   980  00952B  008B               	dw	139
   981  00952D  008D               	dw	141
   982  00952F  008F               	dw	143
   983  009531  0091               	dw	145
   984  009533  0093               	dw	147
   985  009535  0095               	dw	149
   986  009537  0097               	dw	151
   987  009539  0099               	dw	153
   988  00953B  009B               	dw	155
   989  00953D  009D               	dw	157
   990  00953F  009F               	dw	159
   991  009541  00A1               	dw	161
   992  009543  00A3               	dw	163
   993  009545  00A5               	dw	165
   994  009547  00A7               	dw	167
   995  009549  00A9               	dw	169
   996  00954B  00AB               	dw	171
   997  00954D  00AD               	dw	173
   998  00954F  00AF               	dw	175
   999  009551  00B1               	dw	177
  1000  009553  00B3               	dw	179
  1001  009555  00B5               	dw	181
  1002  009557  00B7               	dw	183
  1003  009559  00B9               	dw	185
  1004  00955B  00BB               	dw	187
  1005  00955D  00BD               	dw	189
  1006  00955F  00C0               	dw	192
  1007  009561  00C3               	dw	195
  1008  009563  00C6               	dw	198
  1009  009565  00C9               	dw	201
  1010  009567  00CC               	dw	204
  1011  009569  00CF               	dw	207
  1012  00956B  00D2               	dw	210
  1013  00956D  00D5               	dw	213
  1014  00956F  00D8               	dw	216
  1015  009571  00DB               	dw	219
  1016  009573  00DE               	dw	222
  1017  009575  00E1               	dw	225
  1018  009577  00E4               	dw	228
  1019  009579  00E7               	dw	231
  1020  00957B  00EA               	dw	234
  1021  00957D  00ED               	dw	237
  1022  00957F  00F0               	dw	240
  1023  009581  00F3               	dw	243
  1024  009583  00F6               	dw	246
  1025  009585  00F9               	dw	249
  1026  009587  00FC               	dw	252
  1027  009589  00FF               	dw	255
  1028  00958B  0102               	dw	258
  1029  00958D  0105               	dw	261
  1030  00958F  0108               	dw	264
  1031  009591  010B               	dw	267
  1032  009593  010E               	dw	270
  1033  009595  0111               	dw	273
  1034  009597  0114               	dw	276
  1035  009599  0117               	dw	279
  1036  00959B  011A               	dw	282
  1037  00959D  011D               	dw	285
  1038  00959F  0120               	dw	288
  1039  0095A1  0123               	dw	291
  1040  0095A3  0126               	dw	294
  1041  0095A5  012A               	dw	298
  1042  0095A7  012D               	dw	301
  1043  0095A9  0130               	dw	304
  1044  0095AB  0133               	dw	307
  1045  0095AD  0137               	dw	311
  1046  0095AF  013A               	dw	314
  1047  0095B1  013E               	dw	318
  1048  0095B3  0142               	dw	322
  1049  0095B5  0145               	dw	325
  1050  0095B7  0149               	dw	329
  1051  0095B9  014D               	dw	333
  1052  0095BB  0151               	dw	337
  1053  0095BD  0155               	dw	341
  1054  0095BF  0159               	dw	345
  1055  0095C1  015D               	dw	349
  1056  0095C3  0161               	dw	353
  1057  0095C5  0166               	dw	358
  1058  0095C7  016A               	dw	362
  1059  0095C9  016E               	dw	366
  1060  0095CB  0173               	dw	371
  1061  0095CD  0178               	dw	376
  1062  0095CF  017D               	dw	381
  1063  0095D1  0182               	dw	386
  1064  0095D3  0187               	dw	391
  1065  0095D5  018C               	dw	396
  1066  0095D7  0191               	dw	401
  1067  0095D9  0196               	dw	406
  1068  0095DB  019C               	dw	412
  1069  0095DD  01A1               	dw	417
  1070  0095DF  01A7               	dw	423
  1071  0095E1  01AD               	dw	429
  1072  0095E3  01B3               	dw	435
  1073  0095E5  01B9               	dw	441
  1074  0095E7  01BF               	dw	447
  1075  0095E9  01C6               	dw	454
  1076  0095EB  01CC               	dw	460
  1077  0095ED  01D3               	dw	467
  1078  0095EF  01DA               	dw	474
  1079  0095F1  01E1               	dw	481
  1080  0095F3  01E8               	dw	488
  1081  0095F5  01F0               	dw	496
  1082  0095F7  01F7               	dw	503
  1083  0095F9  01FF               	dw	511
  1084  0095FB  0207               	dw	519
  1085  0095FD  020F               	dw	527
  1086  0095FF  0218               	dw	536
  1087  009601  0221               	dw	545
  1088  009603  022A               	dw	554
  1089  009605  0233               	dw	563
  1090  009607  023D               	dw	573
  1091  009609  0247               	dw	583
  1092  00960B  0251               	dw	593
  1093  00960D  025C               	dw	604
  1094  00960F  0267               	dw	615
  1095  009611  0272               	dw	626
  1096  009613  027E               	dw	638
  1097  009615  028A               	dw	650
  1098  009617  0297               	dw	663
  1099  009619  02A4               	dw	676
  1100  00961B  02B2               	dw	690
  1101  00961D  02C0               	dw	704
  1102  00961F  02CF               	dw	719
  1103  009621  02DF               	dw	735
  1104  009623  02EF               	dw	751
  1105  009625  02FF               	dw	767
  1106  009627  0311               	dw	785
  1107  009629  0323               	dw	803
  1108  00962B  0336               	dw	822
  1109  00962D  0349               	dw	841
  1110  00962F  035E               	dw	862
  1111  009631  0373               	dw	883
  1112  009633  0389               	dw	905
  1113  009635  03A1               	dw	929
  1114  009637  03B9               	dw	953
  1115  009639  03D3               	dw	979
  1116  00963B  03DD               	dw	989
  1117  00963D  03E4               	dw	996
  1118  00963F  03EA               	dw	1002
  1119  009641  03F1               	dw	1009
  1120  009643  03F8               	dw	1016
  1121  009645  03FF               	dw	1023
  1122  009647  0406               	dw	1030
  1123  009649  040D               	dw	1037
  1124  00964B  0415               	dw	1045
  1125  00964D  041C               	dw	1052
  1126  00964F  0424               	dw	1060
  1127  009651  042B               	dw	1067
  1128  009653  0433               	dw	1075
  1129  009655  043B               	dw	1083
  1130  009657  0442               	dw	1090
  1131  009659  044A               	dw	1098
  1132  00965B  0452               	dw	1106
  1133  00965D  045A               	dw	1114
  1134  00965F  0463               	dw	1123
  1135  009661  046B               	dw	1131
  1136  009663  0474               	dw	1140
  1137  009665  047C               	dw	1148
  1138  009667  0485               	dw	1157
  1139  009669  048E               	dw	1166
  1140  00966B  0496               	dw	1174
  1141  00966D  049F               	dw	1183
  1142  00966F  04A9               	dw	1193
  1143  009671  04B2               	dw	1202
  1144  009673  04BB               	dw	1211
  1145  009675  04C5               	dw	1221
  1146  009677  04CE               	dw	1230
  1147  009679  04D8               	dw	1240
  1148  00967B  04E2               	dw	1250
  1149  00967D  04EC               	dw	1260
  1150  00967F  04F6               	dw	1270
  1151  009681  0500               	dw	1280
  1152  009683  050B               	dw	1291
  1153  009685  0515               	dw	1301
  1154  009687  0520               	dw	1312
  1155  009689  052B               	dw	1323
  1156  00968B  0536               	dw	1334
  1157  00968D  0541               	dw	1345
  1158  00968F  054C               	dw	1356
  1159  009691  0558               	dw	1368
  1160  009693  0564               	dw	1380
  1161  009695  056F               	dw	1391
  1162  009697  057B               	dw	1403
  1163  009699  0587               	dw	1415
  1164  00969B  0594               	dw	1428
  1165  00969D  05A0               	dw	1440
  1166  00969F  05AD               	dw	1453
  1167  0096A1  05BA               	dw	1466
  1168  0096A3  05C7               	dw	1479
  1169  0096A5  05D4               	dw	1492
  1170  0096A7  05E2               	dw	1506
  1171  0096A9  05EF               	dw	1519
  1172  0096AB  05FD               	dw	1533
  1173  0096AD  060B               	dw	1547
  1174  0096AF  0619               	dw	1561
  1175  0096B1  0628               	dw	1576
  1176  0096B3  0637               	dw	1591
  1177  0096B5  0646               	dw	1606
  1178  0096B7  0655               	dw	1621
  1179  0096B9  0664               	dw	1636
  1180  0096BB  0674               	dw	1652
  1181  0096BD  0684               	dw	1668
  1182  0096BF  0694               	dw	1684
  1183  0096C1  06A4               	dw	1700
  1184  0096C3  06B5               	dw	1717
  1185  0096C5  06C6               	dw	1734
  1186  0096C7  06D7               	dw	1751
  1187  0096C9  06E9               	dw	1769
  1188  0096CB  06FA               	dw	1786
  1189  0096CD  070C               	dw	1804
  1190  0096CF  071F               	dw	1823
  1191  0096D1  0731               	dw	1841
  1192  0096D3  0744               	dw	1860
  1193  0096D5  0758               	dw	1880
  1194  0096D7  076B               	dw	1899
  1195  0096D9  077F               	dw	1919
  1196  0096DB  0793               	dw	1939
  1197  0096DD  07A8               	dw	1960
  1198  0096DF  07BD               	dw	1981
  1199  0096E1  07D2               	dw	2002
  1200  0096E3  07E8               	dw	2024
  1201  0096E5  07FE               	dw	2046
  1202  0096E7  0815               	dw	2069
  1203  0096E9  082C               	dw	2092
  1204  0096EB  0843               	dw	2115
  1205  0096ED  085B               	dw	2139
  1206  0096EF  0873               	dw	2163
  1207  0096F1  088B               	dw	2187
  1208  0096F3  08A5               	dw	2213
  1209  0096F5  08BE               	dw	2238
  1210  0096F7  08D8               	dw	2264
  1211  0096F9  08F2               	dw	2290
  1212  0096FB  090D               	dw	2317
  1213  0096FD  0929               	dw	2345
  1214  0096FF  0945               	dw	2373
  1215  009701  0961               	dw	2401
  1216  009703  097E               	dw	2430
  1217  009705  099C               	dw	2460
  1218  009707  09BA               	dw	2490
  1219  009709  09D9               	dw	2521
  1220  00970B  09F9               	dw	2553
  1221  00970D  0A19               	dw	2585
  1222  00970F  0A39               	dw	2617
  1223  009711  0A5B               	dw	2651
  1224  009713  0A7D               	dw	2685
  1225  009715  0A9F               	dw	2719
  1226  009717  0AC3               	dw	2755
  1227  009719  0AE7               	dw	2791
  1228  00971B  0B0C               	dw	2828
  1229  00971D  0B31               	dw	2865
  1230  00971F  0B58               	dw	2904
  1231  009721  0B7F               	dw	2943
  1232  009723  0BA7               	dw	2983
  1233  009725  0BD0               	dw	3024
  1234  009727  0BFA               	dw	3066
  1235  009729  0C25               	dw	3109
  1236  00972B  0C51               	dw	3153
  1237  00972D  0C7E               	dw	3198
  1238  00972F  0CAB               	dw	3243
  1239  009731  0CDA               	dw	3290
  1240  009733  0D0A               	dw	3338
  1241  009735  0D3B               	dw	3387
  1242  009737  0D6D               	dw	3437
  1243  009739  0DA0               	dw	3488
  1244  00973B  0DD4               	dw	3540
  1245  00973D  0E0A               	dw	3594
  1246  00973F  0E41               	dw	3649
  1247  009741  0E79               	dw	3705
  1248  009743  0EB3               	dw	3763
  1249  009745  0EEE               	dw	3822
  1250  009747  0F2A               	dw	3882
  1251  009749  0F68               	dw	3944
  1252  00974B  0FA8               	dw	4008
  1253  00974D  0FE9               	dw	4073
  1254  00974F  102C               	dw	4140
  1255  009751  1070               	dw	4208
  1256  009753  10B6               	dw	4278
  1257  009755  10FE               	dw	4350
  1258  009757  1148               	dw	4424
  1259  009759  1194               	dw	4500
  1260  00975B  11E2               	dw	4578
  1261  00975D  1232               	dw	4658
  1262  00975F  1285               	dw	4741
  1263  009761  12D9               	dw	4825
  1264  009763  1330               	dw	4912
  1265  009765  1389               	dw	5001
  1266  009767  13E5               	dw	5093
  1267  009769  1444               	dw	5188
  1268  00976B  14A5               	dw	5285
  1269  00976D  1509               	dw	5385
  1270  00976F  1570               	dw	5488
  1271  009771  15DA               	dw	5594
  1272  009773  1647               	dw	5703
  1273  009775  16B8               	dw	5816
  1274  009777  172B               	dw	5931
  1275  009779  17A3               	dw	6051
  1276  00977B  181E               	dw	6174
  1277  00977D  189D               	dw	6301
  1278  00977F  1921               	dw	6433
  1279  009781  19A8               	dw	6568
  1280  009783  1A34               	dw	6708
  1281  009785  1AC4               	dw	6852
  1282  009787  1B5A               	dw	7002
  1283  009789  1BF4               	dw	7156
  1284  00978B  1C94               	dw	7316
  1285  00978D  1D39               	dw	7481
  1286  00978F  1DE4               	dw	7652
  1287  009791  1E95               	dw	7829
  1288  009793  1F4C               	dw	8012
  1289  009795  200A               	dw	8202
  1290  009797  20CE               	dw	8398
  1291  009799  219A               	dw	8602
  1292  00979B  226E               	dw	8814
  1293  00979D  234A               	dw	9034
  1294  00979F  242E               	dw	9262
  1295  0097A1  251B               	dw	9499
  1296  0097A3  2612               	dw	9746
  1297  0097A5  2712               	dw	10002
  1298  0097A7  281D               	dw	10269
  1299  0097A9  2932               	dw	10546
  1300  0097AB  2A53               	dw	10835
  1301  0097AD  2B81               	dw	11137
  1302  0097AF  2CBB               	dw	11451
  1303  0097B1  2E03               	dw	11779
  1304  0097B3  2F5A               	dw	12122
  1305  0097B5  30C0               	dw	12480
  1306  0097B7  3236               	dw	12854
  1307  0097B9  33BD               	dw	13245
  1308  0097BB  3557               	dw	13655
  1309  0097BD  35F5               	dw	13813
  1310  0097BF  3661               	dw	13921
  1311  0097C1  36CD               	dw	14029
  1312  0097C3  373B               	dw	14139
  1313  0097C5  37AA               	dw	14250
  1314  0097C7  381B               	dw	14363
  1315  0097C9  388C               	dw	14476
  1316  0097CB  3900               	dw	14592
  1317  0097CD  3974               	dw	14708
  1318  0097CF  39EA               	dw	14826
  1319  0097D1  3A62               	dw	14946
  1320  0097D3  3ADB               	dw	15067
  1321  0097D5  3B55               	dw	15189
  1322  0097D7  3BD1               	dw	15313
  1323  0097D9  3C4E               	dw	15438
  1324  0097DB  3CCD               	dw	15565
  1325  0097DD  3D4E               	dw	15694
  1326  0097DF  3DD0               	dw	15824
  1327  0097E1  3E54               	dw	15956
  1328  0097E3  3EDA               	dw	16090
  1329  0097E5  3F61               	dw	16225
  1330  0097E7  3FEA               	dw	16362
  1331  0097E9  4074               	dw	16500
  1332  0097EB  4101               	dw	16641
  1333  0097ED  418F               	dw	16783
  1334  0097EF  421F               	dw	16927
  1335  0097F1  42B1               	dw	17073
  1336  0097F3  4345               	dw	17221
  1337  0097F5  43DB               	dw	17371
  1338  0097F7  4473               	dw	17523
  1339  0097F9  450D               	dw	17677
  1340  0097FB  45A9               	dw	17833
  1341  0097FD  4647               	dw	17991
  1342  0097FF  46E7               	dw	18151
  1343  009801  4789               	dw	18313
  1344  009803  482E               	dw	18478
  1345  009805  48D5               	dw	18645
  1346  009807  497E               	dw	18814
  1347  009809  4A29               	dw	18985
  1348  00980B  4AD7               	dw	19159
  1349  00980D  4B87               	dw	19335
  1350  00980F  4C3A               	dw	19514
  1351  009811  4CEF               	dw	19695
  1352  009813  4DA6               	dw	19878
  1353  009815  4E61               	dw	20065
  1354  009817  4F1E               	dw	20254
  1355  009819  4FDD               	dw	20445
  1356  00981B  50A0               	dw	20640
  1357  00981D  5165               	dw	20837
  1358  00981F  522D               	dw	21037
  1359  009821  52F8               	dw	21240
  1360  009823  53C6               	dw	21446
  1361  009825  5497               	dw	21655
  1362  009827  556B               	dw	21867
  1363  009829  5642               	dw	22082
  1364  00982B  571C               	dw	22300
  1365  00982D  57FA               	dw	22522
  1366  00982F                     __end_of_motor_steps_lookup:
  1367                           	opt stack 0
  1368  00982F                     _motor_postscaler_lookup:
  1369                           	opt stack 0
  1370  00982F  0C                 	db	12
  1371  009830  07                 	db	7
  1372  009831  05                 	db	5
  1373  009832  04                 	db	4
  1374  009833  04                 	db	4
  1375  009834  03                 	db	3
  1376  009835  03                 	db	3
  1377  009836  03                 	db	3
  1378  009837  02                 	db	2
  1379  009838  02                 	db	2
  1380  009839  02                 	db	2
  1381  00983A  02                 	db	2
  1382  00983B  02                 	db	2
  1383  00983C  02                 	db	2
  1384  00983D  01                 	db	1
  1385  00983E  01                 	db	1
  1386  00983F  01                 	db	1
  1387  009840  01                 	db	1
  1388  009841  01                 	db	1
  1389  009842  01                 	db	1
  1390  009843  01                 	db	1
  1391  009844  01                 	db	1
  1392  009845  01                 	db	1
  1393  009846  01                 	db	1
  1394  009847  01                 	db	1
  1395  009848  01                 	db	1
  1396  009849  01                 	db	1
  1397  00984A  01                 	db	1
  1398  00984B  01                 	db	1
  1399  00984C  01                 	db	1
  1400  00984D  01                 	db	1
  1401  00984E  01                 	db	1
  1402  00984F  01                 	db	1
  1403  009850  01                 	db	1
  1404  009851  01                 	db	1
  1405  009852  01                 	db	1
  1406  009853  01                 	db	1
  1407  009854  01                 	db	1
  1408  009855  01                 	db	1
  1409  009856  01                 	db	1
  1410  009857  01                 	db	1
  1411  009858  01                 	db	1
  1412  009859  01                 	db	1
  1413  00985A  01                 	db	1
  1414  00985B  01                 	db	1
  1415  00985C  01                 	db	1
  1416  00985D  01                 	db	1
  1417  00985E  01                 	db	1
  1418  00985F  01                 	db	1
  1419  009860  01                 	db	1
  1420  009861  01                 	db	1
  1421  009862  01                 	db	1
  1422  009863  01                 	db	1
  1423  009864  01                 	db	1
  1424  009865  01                 	db	1
  1425  009866  01                 	db	1
  1426  009867  01                 	db	1
  1427  009868  01                 	db	1
  1428  009869  01                 	db	1
  1429  00986A  01                 	db	1
  1430  00986B  01                 	db	1
  1431  00986C  01                 	db	1
  1432  00986D  01                 	db	1
  1433  00986E  01                 	db	1
  1434  00986F  01                 	db	1
  1435  009870  01                 	db	1
  1436  009871  01                 	db	1
  1437  009872  01                 	db	1
  1438  009873  01                 	db	1
  1439  009874  01                 	db	1
  1440  009875  01                 	db	1
  1441  009876  01                 	db	1
  1442  009877  01                 	db	1
  1443  009878  01                 	db	1
  1444  009879  01                 	db	1
  1445  00987A  01                 	db	1
  1446  00987B  01                 	db	1
  1447  00987C  01                 	db	1
  1448  00987D  01                 	db	1
  1449  00987E  01                 	db	1
  1450  00987F  01                 	db	1
  1451  009880  01                 	db	1
  1452  009881  01                 	db	1
  1453  009882  01                 	db	1
  1454  009883  01                 	db	1
  1455  009884  01                 	db	1
  1456  009885  01                 	db	1
  1457  009886  01                 	db	1
  1458  009887  01                 	db	1
  1459  009888  01                 	db	1
  1460  009889  01                 	db	1
  1461  00988A  00                 	db	0
  1462  00988B  00                 	db	0
  1463  00988C  00                 	db	0
  1464  00988D  00                 	db	0
  1465  00988E  00                 	db	0
  1466  00988F  00                 	db	0
  1467  009890  00                 	db	0
  1468  009891  00                 	db	0
  1469  009892  00                 	db	0
  1470  009893  00                 	db	0
  1471  009894  00                 	db	0
  1472  009895  00                 	db	0
  1473  009896  00                 	db	0
  1474  009897  00                 	db	0
  1475  009898  00                 	db	0
  1476  009899  00                 	db	0
  1477  00989A  00                 	db	0
  1478  00989B  00                 	db	0
  1479  00989C  00                 	db	0
  1480  00989D  00                 	db	0
  1481  00989E  00                 	db	0
  1482  00989F  00                 	db	0
  1483  0098A0  00                 	db	0
  1484  0098A1  00                 	db	0
  1485  0098A2  00                 	db	0
  1486  0098A3  00                 	db	0
  1487  0098A4  00                 	db	0
  1488  0098A5  00                 	db	0
  1489  0098A6  00                 	db	0
  1490  0098A7  00                 	db	0
  1491  0098A8  00                 	db	0
  1492  0098A9  00                 	db	0
  1493  0098AA  00                 	db	0
  1494  0098AB  00                 	db	0
  1495  0098AC  00                 	db	0
  1496  0098AD  00                 	db	0
  1497  0098AE  00                 	db	0
  1498  0098AF  00                 	db	0
  1499  0098B0  00                 	db	0
  1500  0098B1  00                 	db	0
  1501  0098B2  00                 	db	0
  1502  0098B3  00                 	db	0
  1503  0098B4  00                 	db	0
  1504  0098B5  00                 	db	0
  1505  0098B6  00                 	db	0
  1506  0098B7  00                 	db	0
  1507  0098B8  00                 	db	0
  1508  0098B9  00                 	db	0
  1509  0098BA  00                 	db	0
  1510  0098BB  00                 	db	0
  1511  0098BC  00                 	db	0
  1512  0098BD  00                 	db	0
  1513  0098BE  00                 	db	0
  1514  0098BF  00                 	db	0
  1515  0098C0  00                 	db	0
  1516  0098C1  00                 	db	0
  1517  0098C2  00                 	db	0
  1518  0098C3  00                 	db	0
  1519  0098C4  00                 	db	0
  1520  0098C5  00                 	db	0
  1521  0098C6  00                 	db	0
  1522  0098C7  00                 	db	0
  1523  0098C8  00                 	db	0
  1524  0098C9  00                 	db	0
  1525  0098CA  00                 	db	0
  1526  0098CB  00                 	db	0
  1527  0098CC  00                 	db	0
  1528  0098CD  00                 	db	0
  1529  0098CE  00                 	db	0
  1530  0098CF  00                 	db	0
  1531  0098D0  00                 	db	0
  1532  0098D1  00                 	db	0
  1533  0098D2  00                 	db	0
  1534  0098D3  00                 	db	0
  1535  0098D4  00                 	db	0
  1536  0098D5  00                 	db	0
  1537  0098D6  00                 	db	0
  1538  0098D7  00                 	db	0
  1539  0098D8  00                 	db	0
  1540  0098D9  00                 	db	0
  1541  0098DA  00                 	db	0
  1542  0098DB  00                 	db	0
  1543  0098DC  00                 	db	0
  1544  0098DD  00                 	db	0
  1545  0098DE  00                 	db	0
  1546  0098DF  00                 	db	0
  1547  0098E0  00                 	db	0
  1548  0098E1  00                 	db	0
  1549  0098E2  00                 	db	0
  1550  0098E3  00                 	db	0
  1551  0098E4  00                 	db	0
  1552  0098E5  00                 	db	0
  1553  0098E6  00                 	db	0
  1554  0098E7  00                 	db	0
  1555  0098E8  00                 	db	0
  1556  0098E9  00                 	db	0
  1557  0098EA  00                 	db	0
  1558  0098EB  00                 	db	0
  1559  0098EC  00                 	db	0
  1560  0098ED  00                 	db	0
  1561  0098EE  00                 	db	0
  1562  0098EF  00                 	db	0
  1563  0098F0  00                 	db	0
  1564  0098F1  00                 	db	0
  1565  0098F2  00                 	db	0
  1566  0098F3  00                 	db	0
  1567  0098F4  00                 	db	0
  1568  0098F5  00                 	db	0
  1569  0098F6  00                 	db	0
  1570  0098F7  00                 	db	0
  1571  0098F8  00                 	db	0
  1572  0098F9  00                 	db	0
  1573  0098FA  00                 	db	0
  1574  0098FB  00                 	db	0
  1575  0098FC  00                 	db	0
  1576  0098FD  00                 	db	0
  1577  0098FE  00                 	db	0
  1578  0098FF  00                 	db	0
  1579  009900  00                 	db	0
  1580  009901  00                 	db	0
  1581  009902  00                 	db	0
  1582  009903  00                 	db	0
  1583  009904  00                 	db	0
  1584  009905  00                 	db	0
  1585  009906  00                 	db	0
  1586  009907  00                 	db	0
  1587  009908  00                 	db	0
  1588  009909  00                 	db	0
  1589  00990A  00                 	db	0
  1590  00990B  00                 	db	0
  1591  00990C  00                 	db	0
  1592  00990D  00                 	db	0
  1593  00990E  00                 	db	0
  1594  00990F  00                 	db	0
  1595  009910  00                 	db	0
  1596  009911  00                 	db	0
  1597  009912  00                 	db	0
  1598  009913  00                 	db	0
  1599  009914  00                 	db	0
  1600  009915  00                 	db	0
  1601  009916  00                 	db	0
  1602  009917  00                 	db	0
  1603  009918  00                 	db	0
  1604  009919  00                 	db	0
  1605  00991A  00                 	db	0
  1606  00991B  00                 	db	0
  1607  00991C  00                 	db	0
  1608  00991D  00                 	db	0
  1609  00991E  00                 	db	0
  1610  00991F  00                 	db	0
  1611  009920  00                 	db	0
  1612  009921  00                 	db	0
  1613  009922  00                 	db	0
  1614  009923  00                 	db	0
  1615  009924  00                 	db	0
  1616  009925  00                 	db	0
  1617  009926  00                 	db	0
  1618  009927  00                 	db	0
  1619  009928  00                 	db	0
  1620  009929  00                 	db	0
  1621  00992A  00                 	db	0
  1622  00992B  00                 	db	0
  1623  00992C  00                 	db	0
  1624  00992D  00                 	db	0
  1625  00992E  00                 	db	0
  1626  00992F  00                 	db	0
  1627  009930  00                 	db	0
  1628  009931  00                 	db	0
  1629  009932  00                 	db	0
  1630  009933  00                 	db	0
  1631  009934  00                 	db	0
  1632  009935  00                 	db	0
  1633  009936  00                 	db	0
  1634  009937  00                 	db	0
  1635  009938  00                 	db	0
  1636  009939  00                 	db	0
  1637  00993A  00                 	db	0
  1638  00993B  00                 	db	0
  1639  00993C  00                 	db	0
  1640  00993D  00                 	db	0
  1641  00993E  00                 	db	0
  1642  00993F  00                 	db	0
  1643  009940  00                 	db	0
  1644  009941  00                 	db	0
  1645  009942  00                 	db	0
  1646  009943  00                 	db	0
  1647  009944  00                 	db	0
  1648  009945  00                 	db	0
  1649  009946  00                 	db	0
  1650  009947  00                 	db	0
  1651  009948  00                 	db	0
  1652  009949  00                 	db	0
  1653  00994A  00                 	db	0
  1654  00994B  00                 	db	0
  1655  00994C  00                 	db	0
  1656  00994D  00                 	db	0
  1657  00994E  00                 	db	0
  1658  00994F  00                 	db	0
  1659  009950  00                 	db	0
  1660  009951  00                 	db	0
  1661  009952  00                 	db	0
  1662  009953  00                 	db	0
  1663  009954  00                 	db	0
  1664  009955  00                 	db	0
  1665  009956  00                 	db	0
  1666  009957  00                 	db	0
  1667  009958  00                 	db	0
  1668  009959  00                 	db	0
  1669  00995A  00                 	db	0
  1670  00995B  00                 	db	0
  1671  00995C  00                 	db	0
  1672  00995D  00                 	db	0
  1673  00995E  00                 	db	0
  1674  00995F  00                 	db	0
  1675  009960  00                 	db	0
  1676  009961  00                 	db	0
  1677  009962  00                 	db	0
  1678  009963  00                 	db	0
  1679  009964  00                 	db	0
  1680  009965  00                 	db	0
  1681  009966  00                 	db	0
  1682  009967  00                 	db	0
  1683  009968  00                 	db	0
  1684  009969  00                 	db	0
  1685  00996A  00                 	db	0
  1686  00996B  00                 	db	0
  1687  00996C  00                 	db	0
  1688  00996D  00                 	db	0
  1689  00996E  00                 	db	0
  1690  00996F  00                 	db	0
  1691  009970  00                 	db	0
  1692  009971  00                 	db	0
  1693  009972  00                 	db	0
  1694  009973  00                 	db	0
  1695  009974  00                 	db	0
  1696  009975  00                 	db	0
  1697  009976  00                 	db	0
  1698  009977  00                 	db	0
  1699  009978  00                 	db	0
  1700  009979  00                 	db	0
  1701  00997A  00                 	db	0
  1702  00997B  00                 	db	0
  1703  00997C  00                 	db	0
  1704  00997D  00                 	db	0
  1705  00997E  00                 	db	0
  1706  00997F  00                 	db	0
  1707  009980  00                 	db	0
  1708  009981  00                 	db	0
  1709  009982  00                 	db	0
  1710  009983  00                 	db	0
  1711  009984  00                 	db	0
  1712  009985  00                 	db	0
  1713  009986  00                 	db	0
  1714  009987  00                 	db	0
  1715  009988  00                 	db	0
  1716  009989  00                 	db	0
  1717  00998A  00                 	db	0
  1718  00998B  00                 	db	0
  1719  00998C  00                 	db	0
  1720  00998D  00                 	db	0
  1721  00998E  00                 	db	0
  1722  00998F  00                 	db	0
  1723  009990  00                 	db	0
  1724  009991  00                 	db	0
  1725  009992  00                 	db	0
  1726  009993  00                 	db	0
  1727  009994  00                 	db	0
  1728  009995  00                 	db	0
  1729  009996  00                 	db	0
  1730  009997  00                 	db	0
  1731  009998  00                 	db	0
  1732  009999  00                 	db	0
  1733  00999A  00                 	db	0
  1734  00999B  00                 	db	0
  1735  00999C  00                 	db	0
  1736  00999D  00                 	db	0
  1737  00999E  00                 	db	0
  1738  00999F  00                 	db	0
  1739  0099A0  00                 	db	0
  1740  0099A1  00                 	db	0
  1741  0099A2  00                 	db	0
  1742  0099A3  00                 	db	0
  1743  0099A4  00                 	db	0
  1744  0099A5  00                 	db	0
  1745  0099A6  00                 	db	0
  1746  0099A7  00                 	db	0
  1747  0099A8  00                 	db	0
  1748  0099A9  00                 	db	0
  1749  0099AA  00                 	db	0
  1750  0099AB  00                 	db	0
  1751  0099AC  00                 	db	0
  1752  0099AD  00                 	db	0
  1753  0099AE  00                 	db	0
  1754  0099AF  00                 	db	0
  1755  0099B0  00                 	db	0
  1756  0099B1  00                 	db	0
  1757  0099B2  00                 	db	0
  1758  0099B3  00                 	db	0
  1759  0099B4  00                 	db	0
  1760  0099B5  00                 	db	0
  1761  0099B6  00                 	db	0
  1762  0099B7  00                 	db	0
  1763  0099B8  00                 	db	0
  1764  0099B9  00                 	db	0
  1765  0099BA  00                 	db	0
  1766  0099BB  00                 	db	0
  1767  0099BC  00                 	db	0
  1768  0099BD  00                 	db	0
  1769  0099BE  00                 	db	0
  1770  0099BF  00                 	db	0
  1771  0099C0  00                 	db	0
  1772  0099C1  00                 	db	0
  1773  0099C2  00                 	db	0
  1774  0099C3  00                 	db	0
  1775  0099C4  00                 	db	0
  1776  0099C5  00                 	db	0
  1777  0099C6  00                 	db	0
  1778  0099C7  00                 	db	0
  1779  0099C8  00                 	db	0
  1780  0099C9  00                 	db	0
  1781  0099CA  00                 	db	0
  1782  0099CB  00                 	db	0
  1783  0099CC  00                 	db	0
  1784  0099CD  00                 	db	0
  1785  0099CE  00                 	db	0
  1786  0099CF  00                 	db	0
  1787  0099D0  00                 	db	0
  1788  0099D1  00                 	db	0
  1789  0099D2  00                 	db	0
  1790  0099D3  00                 	db	0
  1791  0099D4  00                 	db	0
  1792  0099D5  00                 	db	0
  1793  0099D6  00                 	db	0
  1794  0099D7  00                 	db	0
  1795  0099D8  00                 	db	0
  1796  0099D9  00                 	db	0
  1797  0099DA  00                 	db	0
  1798  0099DB  00                 	db	0
  1799  0099DC  00                 	db	0
  1800  0099DD  00                 	db	0
  1801  0099DE  00                 	db	0
  1802  0099DF  00                 	db	0
  1803  0099E0  00                 	db	0
  1804  0099E1  00                 	db	0
  1805  0099E2  00                 	db	0
  1806  0099E3  00                 	db	0
  1807  0099E4  00                 	db	0
  1808  0099E5  00                 	db	0
  1809  0099E6  00                 	db	0
  1810  0099E7  00                 	db	0
  1811  0099E8  00                 	db	0
  1812  0099E9  00                 	db	0
  1813  0099EA  00                 	db	0
  1814  0099EB  00                 	db	0
  1815  0099EC  00                 	db	0
  1816  0099ED  00                 	db	0
  1817  0099EE  00                 	db	0
  1818  0099EF  00                 	db	0
  1819  0099F0  00                 	db	0
  1820  0099F1  00                 	db	0
  1821  0099F2  00                 	db	0
  1822  0099F3  00                 	db	0
  1823  0099F4  00                 	db	0
  1824  0099F5  00                 	db	0
  1825  0099F6  00                 	db	0
  1826  0099F7  00                 	db	0
  1827  0099F8  00                 	db	0
  1828  0099F9  00                 	db	0
  1829  0099FA  00                 	db	0
  1830  0099FB  00                 	db	0
  1831  0099FC  00                 	db	0
  1832  0099FD  00                 	db	0
  1833  0099FE  00                 	db	0
  1834  0099FF  00                 	db	0
  1835  009A00  00                 	db	0
  1836  009A01  00                 	db	0
  1837  009A02  00                 	db	0
  1838  009A03  00                 	db	0
  1839  009A04  00                 	db	0
  1840  009A05  00                 	db	0
  1841  009A06  00                 	db	0
  1842  009A07  00                 	db	0
  1843  009A08  00                 	db	0
  1844  009A09  00                 	db	0
  1845  009A0A  00                 	db	0
  1846  009A0B  00                 	db	0
  1847  009A0C  00                 	db	0
  1848  009A0D  00                 	db	0
  1849  009A0E  00                 	db	0
  1850  009A0F  00                 	db	0
  1851  009A10  00                 	db	0
  1852  009A11  00                 	db	0
  1853  009A12  00                 	db	0
  1854  009A13  00                 	db	0
  1855  009A14  00                 	db	0
  1856  009A15  00                 	db	0
  1857  009A16                     __end_of_motor_postscaler_lookup:
  1858                           	opt stack 0
  1859  009A16                     _motor_period_lookup:
  1860                           	opt stack 0
  1861  009A16  EC                 	db	236
  1862  009A17  F2                 	db	242
  1863  009A18  F6                 	db	246
  1864  009A19  F4                 	db	244
  1865  009A1A  D2                 	db	210
  1866  009A1B  E8                 	db	232
  1867  009A1C  D2                 	db	210
  1868  009A1D  C0                 	db	192
  1869  009A1E  EC                 	db	236
  1870  009A1F  DC                 	db	220
  1871  009A20  CF                 	db	207
  1872  009A21  C3                 	db	195
  1873  009A22  B9                 	db	185
  1874  009A23  B0                 	db	176
  1875  009A24  FC                 	db	252
  1876  009A25  F2                 	db	242
  1877  009A26  E8                 	db	232
  1878  009A27  DF                 	db	223
  1879  009A28  D7                 	db	215
  1880  009A29  D0                 	db	208
  1881  009A2A  CA                 	db	202
  1882  009A2B  C3                 	db	195
  1883  009A2C  BE                 	db	190
  1884  009A2D  B8                 	db	184
  1885  009A2E  B3                 	db	179
  1886  009A2F  AF                 	db	175
  1887  009A30  AA                 	db	170
  1888  009A31  A6                 	db	166
  1889  009A32  A2                 	db	162
  1890  009A33  9F                 	db	159
  1891  009A34  9B                 	db	155
  1892  009A35  98                 	db	152
  1893  009A36  95                 	db	149
  1894  009A37  92                 	db	146
  1895  009A38  8F                 	db	143
  1896  009A39  8C                 	db	140
  1897  009A3A  8A                 	db	138
  1898  009A3B  87                 	db	135
  1899  009A3C  85                 	db	133
  1900  009A3D  83                 	db	131
  1901  009A3E  81                 	db	129
  1902  009A3F  7F                 	db	127
  1903  009A40  7D                 	db	125
  1904  009A41  7B                 	db	123
  1905  009A42  79                 	db	121
  1906  009A43  77                 	db	119
  1907  009A44  75                 	db	117
  1908  009A45  74                 	db	116
  1909  009A46  72                 	db	114
  1910  009A47  71                 	db	113
  1911  009A48  6F                 	db	111
  1912  009A49  6E                 	db	110
  1913  009A4A  6C                 	db	108
  1914  009A4B  6B                 	db	107
  1915  009A4C  6A                 	db	106
  1916  009A4D  68                 	db	104
  1917  009A4E  67                 	db	103
  1918  009A4F  66                 	db	102
  1919  009A50  65                 	db	101
  1920  009A51  64                 	db	100
  1921  009A52  62                 	db	98
  1922  009A53  61                 	db	97
  1923  009A54  60                 	db	96
  1924  009A55  5F                 	db	95
  1925  009A56  5E                 	db	94
  1926  009A57  5D                 	db	93
  1927  009A58  5C                 	db	92
  1928  009A59  5B                 	db	91
  1929  009A5A  59                 	db	89
  1930  009A5B  57                 	db	87
  1931  009A5C  56                 	db	86
  1932  009A5D  54                 	db	84
  1933  009A5E  53                 	db	83
  1934  009A5F  51                 	db	81
  1935  009A60  50                 	db	80
  1936  009A61  4F                 	db	79
  1937  009A62  4E                 	db	78
  1938  009A63  4C                 	db	76
  1939  009A64  4B                 	db	75
  1940  009A65  4A                 	db	74
  1941  009A66  49                 	db	73
  1942  009A67  48                 	db	72
  1943  009A68  47                 	db	71
  1944  009A69  46                 	db	70
  1945  009A6A  45                 	db	69
  1946  009A6B  44                 	db	68
  1947  009A6C  43                 	db	67
  1948  009A6D  42                 	db	66
  1949  009A6E  41                 	db	65
  1950  009A6F  40                 	db	64
  1951  009A70  3F                 	db	63
  1952  009A71  FE                 	db	254
  1953  009A72  FB                 	db	251
  1954  009A73  F8                 	db	248
  1955  009A74  F6                 	db	246
  1956  009A75  F3                 	db	243
  1957  009A76  F0                 	db	240
  1958  009A77  EE                 	db	238
  1959  009A78  EC                 	db	236
  1960  009A79  E9                 	db	233
  1961  009A7A  E7                 	db	231
  1962  009A7B  E5                 	db	229
  1963  009A7C  E3                 	db	227
  1964  009A7D  E0                 	db	224
  1965  009A7E  DE                 	db	222
  1966  009A7F  DC                 	db	220
  1967  009A80  DA                 	db	218
  1968  009A81  D8                 	db	216
  1969  009A82  D7                 	db	215
  1970  009A83  D5                 	db	213
  1971  009A84  D3                 	db	211
  1972  009A85  D1                 	db	209
  1973  009A86  CF                 	db	207
  1974  009A87  CE                 	db	206
  1975  009A88  CC                 	db	204
  1976  009A89  CA                 	db	202
  1977  009A8A  C9                 	db	201
  1978  009A8B  C7                 	db	199
  1979  009A8C  C6                 	db	198
  1980  009A8D  C4                 	db	196
  1981  009A8E  C3                 	db	195
  1982  009A8F  C1                 	db	193
  1983  009A90  C0                 	db	192
  1984  009A91  BE                 	db	190
  1985  009A92  BD                 	db	189
  1986  009A93  BC                 	db	188
  1987  009A94  BA                 	db	186
  1988  009A95  B8                 	db	184
  1989  009A96  B6                 	db	182
  1990  009A97  B4                 	db	180
  1991  009A98  B3                 	db	179
  1992  009A99  B1                 	db	177
  1993  009A9A  AF                 	db	175
  1994  009A9B  AE                 	db	174
  1995  009A9C  AC                 	db	172
  1996  009A9D  AA                 	db	170
  1997  009A9E  A9                 	db	169
  1998  009A9F  A7                 	db	167
  1999  009AA0  A6                 	db	166
  2000  009AA1  A4                 	db	164
  2001  009AA2  A3                 	db	163
  2002  009AA3  A1                 	db	161
  2003  009AA4  A0                 	db	160
  2004  009AA5  9F                 	db	159
  2005  009AA6  9D                 	db	157
  2006  009AA7  9C                 	db	156
  2007  009AA8  9B                 	db	155
  2008  009AA9  9A                 	db	154
  2009  009AAA  98                 	db	152
  2010  009AAB  97                 	db	151
  2011  009AAC  96                 	db	150
  2012  009AAD  95                 	db	149
  2013  009AAE  94                 	db	148
  2014  009AAF  93                 	db	147
  2015  009AB0  92                 	db	146
  2016  009AB1  90                 	db	144
  2017  009AB2  8F                 	db	143
  2018  009AB3  8E                 	db	142
  2019  009AB4  8D                 	db	141
  2020  009AB5  8C                 	db	140
  2021  009AB6  8B                 	db	139
  2022  009AB7  8A                 	db	138
  2023  009AB8  89                 	db	137
  2024  009AB9  88                 	db	136
  2025  009ABA  87                 	db	135
  2026  009ABB  86                 	db	134
  2027  009ABC  85                 	db	133
  2028  009ABD  84                 	db	132
  2029  009ABE  83                 	db	131
  2030  009ABF  82                 	db	130
  2031  009AC0  81                 	db	129
  2032  009AC1  80                 	db	128
  2033  009AC2  7F                 	db	127
  2034  009AC3  7E                 	db	126
  2035  009AC4  7D                 	db	125
  2036  009AC5  7C                 	db	124
  2037  009AC6  7B                 	db	123
  2038  009AC7  7A                 	db	122
  2039  009AC8  79                 	db	121
  2040  009AC9  78                 	db	120
  2041  009ACA  77                 	db	119
  2042  009ACB  76                 	db	118
  2043  009ACC  75                 	db	117
  2044  009ACD  74                 	db	116
  2045  009ACE  73                 	db	115
  2046  009ACF  72                 	db	114
  2047  009AD0  71                 	db	113
  2048  009AD1  70                 	db	112
  2049  009AD2  6F                 	db	111
  2050  009AD3  6E                 	db	110
  2051  009AD4  6D                 	db	109
  2052  009AD5  6C                 	db	108
  2053  009AD6  6B                 	db	107
  2054  009AD7  6A                 	db	106
  2055  009AD8  69                 	db	105
  2056  009AD9  68                 	db	104
  2057  009ADA  67                 	db	103
  2058  009ADB  66                 	db	102
  2059  009ADC  65                 	db	101
  2060  009ADD  64                 	db	100
  2061  009ADE  63                 	db	99
  2062  009ADF  62                 	db	98
  2063  009AE0  61                 	db	97
  2064  009AE1  60                 	db	96
  2065  009AE2  5F                 	db	95
  2066  009AE3  5E                 	db	94
  2067  009AE4  5D                 	db	93
  2068  009AE5  5C                 	db	92
  2069  009AE6  5B                 	db	91
  2070  009AE7  5A                 	db	90
  2071  009AE8  59                 	db	89
  2072  009AE9  58                 	db	88
  2073  009AEA  57                 	db	87
  2074  009AEB  56                 	db	86
  2075  009AEC  55                 	db	85
  2076  009AED  54                 	db	84
  2077  009AEE  53                 	db	83
  2078  009AEF  52                 	db	82
  2079  009AF0  51                 	db	81
  2080  009AF1  50                 	db	80
  2081  009AF2  4F                 	db	79
  2082  009AF3  4E                 	db	78
  2083  009AF4  4D                 	db	77
  2084  009AF5  4C                 	db	76
  2085  009AF6  4B                 	db	75
  2086  009AF7  4A                 	db	74
  2087  009AF8  49                 	db	73
  2088  009AF9  48                 	db	72
  2089  009AFA  47                 	db	71
  2090  009AFB  46                 	db	70
  2091  009AFC  45                 	db	69
  2092  009AFD  44                 	db	68
  2093  009AFE  43                 	db	67
  2094  009AFF  42                 	db	66
  2095  009B00  41                 	db	65
  2096  009B01  40                 	db	64
  2097  009B02  3F                 	db	63
  2098  009B03  FF                 	db	255
  2099  009B04  FE                 	db	254
  2100  009B05  FD                 	db	253
  2101  009B06  FC                 	db	252
  2102  009B07  FB                 	db	251
  2103  009B08  FA                 	db	250
  2104  009B09  F9                 	db	249
  2105  009B0A  F8                 	db	248
  2106  009B0B  F7                 	db	247
  2107  009B0C  F6                 	db	246
  2108  009B0D  F5                 	db	245
  2109  009B0E  F4                 	db	244
  2110  009B0F  F3                 	db	243
  2111  009B10  F2                 	db	242
  2112  009B11  F1                 	db	241
  2113  009B12  F0                 	db	240
  2114  009B13  EF                 	db	239
  2115  009B14  EE                 	db	238
  2116  009B15  ED                 	db	237
  2117  009B16  EC                 	db	236
  2118  009B17  EB                 	db	235
  2119  009B18  EA                 	db	234
  2120  009B19  E9                 	db	233
  2121  009B1A  E8                 	db	232
  2122  009B1B  E7                 	db	231
  2123  009B1C  E6                 	db	230
  2124  009B1D  E5                 	db	229
  2125  009B1E  E4                 	db	228
  2126  009B1F  E3                 	db	227
  2127  009B20  E2                 	db	226
  2128  009B21  E1                 	db	225
  2129  009B22  E0                 	db	224
  2130  009B23  DF                 	db	223
  2131  009B24  DE                 	db	222
  2132  009B25  DD                 	db	221
  2133  009B26  DC                 	db	220
  2134  009B27  DB                 	db	219
  2135  009B28  DA                 	db	218
  2136  009B29  D9                 	db	217
  2137  009B2A  D8                 	db	216
  2138  009B2B  D7                 	db	215
  2139  009B2C  D6                 	db	214
  2140  009B2D  D5                 	db	213
  2141  009B2E  D4                 	db	212
  2142  009B2F  D3                 	db	211
  2143  009B30  D2                 	db	210
  2144  009B31  D1                 	db	209
  2145  009B32  D0                 	db	208
  2146  009B33  CF                 	db	207
  2147  009B34  CE                 	db	206
  2148  009B35  CD                 	db	205
  2149  009B36  CC                 	db	204
  2150  009B37  CB                 	db	203
  2151  009B38  CA                 	db	202
  2152  009B39  C9                 	db	201
  2153  009B3A  C8                 	db	200
  2154  009B3B  C7                 	db	199
  2155  009B3C  C6                 	db	198
  2156  009B3D  C5                 	db	197
  2157  009B3E  C4                 	db	196
  2158  009B3F  C3                 	db	195
  2159  009B40  C2                 	db	194
  2160  009B41  C1                 	db	193
  2161  009B42  C0                 	db	192
  2162  009B43  BF                 	db	191
  2163  009B44  BE                 	db	190
  2164  009B45  BD                 	db	189
  2165  009B46  BC                 	db	188
  2166  009B47  BB                 	db	187
  2167  009B48  BA                 	db	186
  2168  009B49  B9                 	db	185
  2169  009B4A  B8                 	db	184
  2170  009B4B  B7                 	db	183
  2171  009B4C  B6                 	db	182
  2172  009B4D  B5                 	db	181
  2173  009B4E  B4                 	db	180
  2174  009B4F  B3                 	db	179
  2175  009B50  B2                 	db	178
  2176  009B51  B1                 	db	177
  2177  009B52  B0                 	db	176
  2178  009B53  AF                 	db	175
  2179  009B54  AE                 	db	174
  2180  009B55  AD                 	db	173
  2181  009B56  AC                 	db	172
  2182  009B57  AB                 	db	171
  2183  009B58  AA                 	db	170
  2184  009B59  A9                 	db	169
  2185  009B5A  A8                 	db	168
  2186  009B5B  A7                 	db	167
  2187  009B5C  A6                 	db	166
  2188  009B5D  A5                 	db	165
  2189  009B5E  A4                 	db	164
  2190  009B5F  A3                 	db	163
  2191  009B60  A2                 	db	162
  2192  009B61  A1                 	db	161
  2193  009B62  A0                 	db	160
  2194  009B63  9F                 	db	159
  2195  009B64  9E                 	db	158
  2196  009B65  9D                 	db	157
  2197  009B66  9C                 	db	156
  2198  009B67  9B                 	db	155
  2199  009B68  9A                 	db	154
  2200  009B69  99                 	db	153
  2201  009B6A  98                 	db	152
  2202  009B6B  97                 	db	151
  2203  009B6C  96                 	db	150
  2204  009B6D  95                 	db	149
  2205  009B6E  94                 	db	148
  2206  009B6F  93                 	db	147
  2207  009B70  92                 	db	146
  2208  009B71  91                 	db	145
  2209  009B72  90                 	db	144
  2210  009B73  8F                 	db	143
  2211  009B74  8E                 	db	142
  2212  009B75  8D                 	db	141
  2213  009B76  8C                 	db	140
  2214  009B77  8B                 	db	139
  2215  009B78  8A                 	db	138
  2216  009B79  89                 	db	137
  2217  009B7A  88                 	db	136
  2218  009B7B  87                 	db	135
  2219  009B7C  86                 	db	134
  2220  009B7D  85                 	db	133
  2221  009B7E  84                 	db	132
  2222  009B7F  83                 	db	131
  2223  009B80  82                 	db	130
  2224  009B81  81                 	db	129
  2225  009B82  80                 	db	128
  2226  009B83  7F                 	db	127
  2227  009B84  7E                 	db	126
  2228  009B85  7D                 	db	125
  2229  009B86  7C                 	db	124
  2230  009B87  7B                 	db	123
  2231  009B88  7A                 	db	122
  2232  009B89  79                 	db	121
  2233  009B8A  78                 	db	120
  2234  009B8B  77                 	db	119
  2235  009B8C  76                 	db	118
  2236  009B8D  75                 	db	117
  2237  009B8E  74                 	db	116
  2238  009B8F  73                 	db	115
  2239  009B90  72                 	db	114
  2240  009B91  71                 	db	113
  2241  009B92  70                 	db	112
  2242  009B93  6F                 	db	111
  2243  009B94  6E                 	db	110
  2244  009B95  6D                 	db	109
  2245  009B96  6C                 	db	108
  2246  009B97  6B                 	db	107
  2247  009B98  6A                 	db	106
  2248  009B99  69                 	db	105
  2249  009B9A  68                 	db	104
  2250  009B9B  67                 	db	103
  2251  009B9C  66                 	db	102
  2252  009B9D  65                 	db	101
  2253  009B9E  64                 	db	100
  2254  009B9F  63                 	db	99
  2255  009BA0  62                 	db	98
  2256  009BA1  61                 	db	97
  2257  009BA2  60                 	db	96
  2258  009BA3  5F                 	db	95
  2259  009BA4  5E                 	db	94
  2260  009BA5  5D                 	db	93
  2261  009BA6  5C                 	db	92
  2262  009BA7  5B                 	db	91
  2263  009BA8  5A                 	db	90
  2264  009BA9  59                 	db	89
  2265  009BAA  58                 	db	88
  2266  009BAB  57                 	db	87
  2267  009BAC  56                 	db	86
  2268  009BAD  55                 	db	85
  2269  009BAE  54                 	db	84
  2270  009BAF  53                 	db	83
  2271  009BB0  52                 	db	82
  2272  009BB1  51                 	db	81
  2273  009BB2  50                 	db	80
  2274  009BB3  4F                 	db	79
  2275  009BB4  4E                 	db	78
  2276  009BB5  4D                 	db	77
  2277  009BB6  4C                 	db	76
  2278  009BB7  4B                 	db	75
  2279  009BB8  4A                 	db	74
  2280  009BB9  49                 	db	73
  2281  009BBA  48                 	db	72
  2282  009BBB  47                 	db	71
  2283  009BBC  46                 	db	70
  2284  009BBD  45                 	db	69
  2285  009BBE  44                 	db	68
  2286  009BBF  43                 	db	67
  2287  009BC0  42                 	db	66
  2288  009BC1  41                 	db	65
  2289  009BC2  40                 	db	64
  2290  009BC3  3F                 	db	63
  2291  009BC4  FF                 	db	255
  2292  009BC5  FE                 	db	254
  2293  009BC6  FD                 	db	253
  2294  009BC7  FC                 	db	252
  2295  009BC8  FB                 	db	251
  2296  009BC9  FA                 	db	250
  2297  009BCA  F9                 	db	249
  2298  009BCB  F8                 	db	248
  2299  009BCC  F7                 	db	247
  2300  009BCD  F6                 	db	246
  2301  009BCE  F5                 	db	245
  2302  009BCF  F4                 	db	244
  2303  009BD0  F3                 	db	243
  2304  009BD1  F2                 	db	242
  2305  009BD2  F1                 	db	241
  2306  009BD3  F0                 	db	240
  2307  009BD4  EF                 	db	239
  2308  009BD5  EE                 	db	238
  2309  009BD6  ED                 	db	237
  2310  009BD7  EC                 	db	236
  2311  009BD8  EB                 	db	235
  2312  009BD9  EA                 	db	234
  2313  009BDA  E9                 	db	233
  2314  009BDB  E8                 	db	232
  2315  009BDC  E7                 	db	231
  2316  009BDD  E6                 	db	230
  2317  009BDE  E5                 	db	229
  2318  009BDF  E4                 	db	228
  2319  009BE0  E3                 	db	227
  2320  009BE1  E2                 	db	226
  2321  009BE2  E1                 	db	225
  2322  009BE3  E0                 	db	224
  2323  009BE4  DF                 	db	223
  2324  009BE5  DE                 	db	222
  2325  009BE6  DD                 	db	221
  2326  009BE7  DC                 	db	220
  2327  009BE8  DB                 	db	219
  2328  009BE9  DA                 	db	218
  2329  009BEA  D9                 	db	217
  2330  009BEB  D8                 	db	216
  2331  009BEC  D7                 	db	215
  2332  009BED  D6                 	db	214
  2333  009BEE  D5                 	db	213
  2334  009BEF  D4                 	db	212
  2335  009BF0  D3                 	db	211
  2336  009BF1  D2                 	db	210
  2337  009BF2  D1                 	db	209
  2338  009BF3  D0                 	db	208
  2339  009BF4  CF                 	db	207
  2340  009BF5  CE                 	db	206
  2341  009BF6  CD                 	db	205
  2342  009BF7  CC                 	db	204
  2343  009BF8  CB                 	db	203
  2344  009BF9  CA                 	db	202
  2345  009BFA  C9                 	db	201
  2346  009BFB  C8                 	db	200
  2347  009BFC  C7                 	db	199
  2348  009BFD                     __end_of_motor_period_lookup:
  2349                           	opt stack 0
  2350  009BFD                     _motor_prescaler_lookup:
  2351                           	opt stack 0
  2352  009BFD  02                 	db	2
  2353  009BFE  02                 	db	2
  2354  009BFF  02                 	db	2
  2355  009C00  02                 	db	2
  2356  009C01  02                 	db	2
  2357  009C02  02                 	db	2
  2358  009C03  02                 	db	2
  2359  009C04  02                 	db	2
  2360  009C05  02                 	db	2
  2361  009C06  02                 	db	2
  2362  009C07  02                 	db	2
  2363  009C08  02                 	db	2
  2364  009C09  02                 	db	2
  2365  009C0A  02                 	db	2
  2366  009C0B  02                 	db	2
  2367  009C0C  02                 	db	2
  2368  009C0D  02                 	db	2
  2369  009C0E  02                 	db	2
  2370  009C0F  02                 	db	2
  2371  009C10  02                 	db	2
  2372  009C11  02                 	db	2
  2373  009C12  02                 	db	2
  2374  009C13  02                 	db	2
  2375  009C14  02                 	db	2
  2376  009C15  02                 	db	2
  2377  009C16  02                 	db	2
  2378  009C17  02                 	db	2
  2379  009C18  02                 	db	2
  2380  009C19  02                 	db	2
  2381  009C1A  02                 	db	2
  2382  009C1B  02                 	db	2
  2383  009C1C  02                 	db	2
  2384  009C1D  02                 	db	2
  2385  009C1E  02                 	db	2
  2386  009C1F  02                 	db	2
  2387  009C20  02                 	db	2
  2388  009C21  02                 	db	2
  2389  009C22  02                 	db	2
  2390  009C23  02                 	db	2
  2391  009C24  02                 	db	2
  2392  009C25  02                 	db	2
  2393  009C26  02                 	db	2
  2394  009C27  02                 	db	2
  2395  009C28  02                 	db	2
  2396  009C29  02                 	db	2
  2397  009C2A  02                 	db	2
  2398  009C2B  02                 	db	2
  2399  009C2C  02                 	db	2
  2400  009C2D  02                 	db	2
  2401  009C2E  02                 	db	2
  2402  009C2F  02                 	db	2
  2403  009C30  02                 	db	2
  2404  009C31  02                 	db	2
  2405  009C32  02                 	db	2
  2406  009C33  02                 	db	2
  2407  009C34  02                 	db	2
  2408  009C35  02                 	db	2
  2409  009C36  02                 	db	2
  2410  009C37  02                 	db	2
  2411  009C38  02                 	db	2
  2412  009C39  02                 	db	2
  2413  009C3A  02                 	db	2
  2414  009C3B  02                 	db	2
  2415  009C3C  02                 	db	2
  2416  009C3D  02                 	db	2
  2417  009C3E  02                 	db	2
  2418  009C3F  02                 	db	2
  2419  009C40  02                 	db	2
  2420  009C41  02                 	db	2
  2421  009C42  02                 	db	2
  2422  009C43  02                 	db	2
  2423  009C44  02                 	db	2
  2424  009C45  02                 	db	2
  2425  009C46  02                 	db	2
  2426  009C47  02                 	db	2
  2427  009C48  02                 	db	2
  2428  009C49  02                 	db	2
  2429  009C4A  02                 	db	2
  2430  009C4B  02                 	db	2
  2431  009C4C  02                 	db	2
  2432  009C4D  02                 	db	2
  2433  009C4E  02                 	db	2
  2434  009C4F  02                 	db	2
  2435  009C50  02                 	db	2
  2436  009C51  02                 	db	2
  2437  009C52  02                 	db	2
  2438  009C53  02                 	db	2
  2439  009C54  02                 	db	2
  2440  009C55  02                 	db	2
  2441  009C56  02                 	db	2
  2442  009C57  02                 	db	2
  2443  009C58  02                 	db	2
  2444  009C59  02                 	db	2
  2445  009C5A  02                 	db	2
  2446  009C5B  02                 	db	2
  2447  009C5C  02                 	db	2
  2448  009C5D  02                 	db	2
  2449  009C5E  02                 	db	2
  2450  009C5F  02                 	db	2
  2451  009C60  02                 	db	2
  2452  009C61  02                 	db	2
  2453  009C62  02                 	db	2
  2454  009C63  02                 	db	2
  2455  009C64  02                 	db	2
  2456  009C65  02                 	db	2
  2457  009C66  02                 	db	2
  2458  009C67  02                 	db	2
  2459  009C68  02                 	db	2
  2460  009C69  02                 	db	2
  2461  009C6A  02                 	db	2
  2462  009C6B  02                 	db	2
  2463  009C6C  02                 	db	2
  2464  009C6D  02                 	db	2
  2465  009C6E  02                 	db	2
  2466  009C6F  02                 	db	2
  2467  009C70  02                 	db	2
  2468  009C71  02                 	db	2
  2469  009C72  02                 	db	2
  2470  009C73  02                 	db	2
  2471  009C74  02                 	db	2
  2472  009C75  02                 	db	2
  2473  009C76  02                 	db	2
  2474  009C77  02                 	db	2
  2475  009C78  02                 	db	2
  2476  009C79  02                 	db	2
  2477  009C7A  02                 	db	2
  2478  009C7B  02                 	db	2
  2479  009C7C  02                 	db	2
  2480  009C7D  02                 	db	2
  2481  009C7E  02                 	db	2
  2482  009C7F  02                 	db	2
  2483  009C80  02                 	db	2
  2484  009C81  02                 	db	2
  2485  009C82  02                 	db	2
  2486  009C83  02                 	db	2
  2487  009C84  02                 	db	2
  2488  009C85  02                 	db	2
  2489  009C86  02                 	db	2
  2490  009C87  02                 	db	2
  2491  009C88  02                 	db	2
  2492  009C89  02                 	db	2
  2493  009C8A  02                 	db	2
  2494  009C8B  02                 	db	2
  2495  009C8C  02                 	db	2
  2496  009C8D  02                 	db	2
  2497  009C8E  02                 	db	2
  2498  009C8F  02                 	db	2
  2499  009C90  02                 	db	2
  2500  009C91  02                 	db	2
  2501  009C92  02                 	db	2
  2502  009C93  02                 	db	2
  2503  009C94  02                 	db	2
  2504  009C95  02                 	db	2
  2505  009C96  02                 	db	2
  2506  009C97  02                 	db	2
  2507  009C98  02                 	db	2
  2508  009C99  02                 	db	2
  2509  009C9A  02                 	db	2
  2510  009C9B  02                 	db	2
  2511  009C9C  02                 	db	2
  2512  009C9D  02                 	db	2
  2513  009C9E  02                 	db	2
  2514  009C9F  02                 	db	2
  2515  009CA0  02                 	db	2
  2516  009CA1  02                 	db	2
  2517  009CA2  02                 	db	2
  2518  009CA3  02                 	db	2
  2519  009CA4  02                 	db	2
  2520  009CA5  02                 	db	2
  2521  009CA6  02                 	db	2
  2522  009CA7  02                 	db	2
  2523  009CA8  02                 	db	2
  2524  009CA9  02                 	db	2
  2525  009CAA  02                 	db	2
  2526  009CAB  02                 	db	2
  2527  009CAC  02                 	db	2
  2528  009CAD  02                 	db	2
  2529  009CAE  02                 	db	2
  2530  009CAF  02                 	db	2
  2531  009CB0  02                 	db	2
  2532  009CB1  02                 	db	2
  2533  009CB2  02                 	db	2
  2534  009CB3  02                 	db	2
  2535  009CB4  02                 	db	2
  2536  009CB5  02                 	db	2
  2537  009CB6  02                 	db	2
  2538  009CB7  02                 	db	2
  2539  009CB8  02                 	db	2
  2540  009CB9  02                 	db	2
  2541  009CBA  02                 	db	2
  2542  009CBB  02                 	db	2
  2543  009CBC  02                 	db	2
  2544  009CBD  02                 	db	2
  2545  009CBE  02                 	db	2
  2546  009CBF  02                 	db	2
  2547  009CC0  02                 	db	2
  2548  009CC1  02                 	db	2
  2549  009CC2  02                 	db	2
  2550  009CC3  02                 	db	2
  2551  009CC4  02                 	db	2
  2552  009CC5  02                 	db	2
  2553  009CC6  02                 	db	2
  2554  009CC7  02                 	db	2
  2555  009CC8  02                 	db	2
  2556  009CC9  02                 	db	2
  2557  009CCA  02                 	db	2
  2558  009CCB  02                 	db	2
  2559  009CCC  02                 	db	2
  2560  009CCD  02                 	db	2
  2561  009CCE  02                 	db	2
  2562  009CCF  02                 	db	2
  2563  009CD0  02                 	db	2
  2564  009CD1  02                 	db	2
  2565  009CD2  02                 	db	2
  2566  009CD3  02                 	db	2
  2567  009CD4  02                 	db	2
  2568  009CD5  02                 	db	2
  2569  009CD6  02                 	db	2
  2570  009CD7  02                 	db	2
  2571  009CD8  02                 	db	2
  2572  009CD9  02                 	db	2
  2573  009CDA  02                 	db	2
  2574  009CDB  02                 	db	2
  2575  009CDC  02                 	db	2
  2576  009CDD  02                 	db	2
  2577  009CDE  02                 	db	2
  2578  009CDF  02                 	db	2
  2579  009CE0  02                 	db	2
  2580  009CE1  02                 	db	2
  2581  009CE2  02                 	db	2
  2582  009CE3  02                 	db	2
  2583  009CE4  02                 	db	2
  2584  009CE5  02                 	db	2
  2585  009CE6  02                 	db	2
  2586  009CE7  02                 	db	2
  2587  009CE8  02                 	db	2
  2588  009CE9  02                 	db	2
  2589  009CEA  01                 	db	1
  2590  009CEB  01                 	db	1
  2591  009CEC  01                 	db	1
  2592  009CED  01                 	db	1
  2593  009CEE  01                 	db	1
  2594  009CEF  01                 	db	1
  2595  009CF0  01                 	db	1
  2596  009CF1  01                 	db	1
  2597  009CF2  01                 	db	1
  2598  009CF3  01                 	db	1
  2599  009CF4  01                 	db	1
  2600  009CF5  01                 	db	1
  2601  009CF6  01                 	db	1
  2602  009CF7  01                 	db	1
  2603  009CF8  01                 	db	1
  2604  009CF9  01                 	db	1
  2605  009CFA  01                 	db	1
  2606  009CFB  01                 	db	1
  2607  009CFC  01                 	db	1
  2608  009CFD  01                 	db	1
  2609  009CFE  01                 	db	1
  2610  009CFF  01                 	db	1
  2611  009D00  01                 	db	1
  2612  009D01  01                 	db	1
  2613  009D02  01                 	db	1
  2614  009D03  01                 	db	1
  2615  009D04  01                 	db	1
  2616  009D05  01                 	db	1
  2617  009D06  01                 	db	1
  2618  009D07  01                 	db	1
  2619  009D08  01                 	db	1
  2620  009D09  01                 	db	1
  2621  009D0A  01                 	db	1
  2622  009D0B  01                 	db	1
  2623  009D0C  01                 	db	1
  2624  009D0D  01                 	db	1
  2625  009D0E  01                 	db	1
  2626  009D0F  01                 	db	1
  2627  009D10  01                 	db	1
  2628  009D11  01                 	db	1
  2629  009D12  01                 	db	1
  2630  009D13  01                 	db	1
  2631  009D14  01                 	db	1
  2632  009D15  01                 	db	1
  2633  009D16  01                 	db	1
  2634  009D17  01                 	db	1
  2635  009D18  01                 	db	1
  2636  009D19  01                 	db	1
  2637  009D1A  01                 	db	1
  2638  009D1B  01                 	db	1
  2639  009D1C  01                 	db	1
  2640  009D1D  01                 	db	1
  2641  009D1E  01                 	db	1
  2642  009D1F  01                 	db	1
  2643  009D20  01                 	db	1
  2644  009D21  01                 	db	1
  2645  009D22  01                 	db	1
  2646  009D23  01                 	db	1
  2647  009D24  01                 	db	1
  2648  009D25  01                 	db	1
  2649  009D26  01                 	db	1
  2650  009D27  01                 	db	1
  2651  009D28  01                 	db	1
  2652  009D29  01                 	db	1
  2653  009D2A  01                 	db	1
  2654  009D2B  01                 	db	1
  2655  009D2C  01                 	db	1
  2656  009D2D  01                 	db	1
  2657  009D2E  01                 	db	1
  2658  009D2F  01                 	db	1
  2659  009D30  01                 	db	1
  2660  009D31  01                 	db	1
  2661  009D32  01                 	db	1
  2662  009D33  01                 	db	1
  2663  009D34  01                 	db	1
  2664  009D35  01                 	db	1
  2665  009D36  01                 	db	1
  2666  009D37  01                 	db	1
  2667  009D38  01                 	db	1
  2668  009D39  01                 	db	1
  2669  009D3A  01                 	db	1
  2670  009D3B  01                 	db	1
  2671  009D3C  01                 	db	1
  2672  009D3D  01                 	db	1
  2673  009D3E  01                 	db	1
  2674  009D3F  01                 	db	1
  2675  009D40  01                 	db	1
  2676  009D41  01                 	db	1
  2677  009D42  01                 	db	1
  2678  009D43  01                 	db	1
  2679  009D44  01                 	db	1
  2680  009D45  01                 	db	1
  2681  009D46  01                 	db	1
  2682  009D47  01                 	db	1
  2683  009D48  01                 	db	1
  2684  009D49  01                 	db	1
  2685  009D4A  01                 	db	1
  2686  009D4B  01                 	db	1
  2687  009D4C  01                 	db	1
  2688  009D4D  01                 	db	1
  2689  009D4E  01                 	db	1
  2690  009D4F  01                 	db	1
  2691  009D50  01                 	db	1
  2692  009D51  01                 	db	1
  2693  009D52  01                 	db	1
  2694  009D53  01                 	db	1
  2695  009D54  01                 	db	1
  2696  009D55  01                 	db	1
  2697  009D56  01                 	db	1
  2698  009D57  01                 	db	1
  2699  009D58  01                 	db	1
  2700  009D59  01                 	db	1
  2701  009D5A  01                 	db	1
  2702  009D5B  01                 	db	1
  2703  009D5C  01                 	db	1
  2704  009D5D  01                 	db	1
  2705  009D5E  01                 	db	1
  2706  009D5F  01                 	db	1
  2707  009D60  01                 	db	1
  2708  009D61  01                 	db	1
  2709  009D62  01                 	db	1
  2710  009D63  01                 	db	1
  2711  009D64  01                 	db	1
  2712  009D65  01                 	db	1
  2713  009D66  01                 	db	1
  2714  009D67  01                 	db	1
  2715  009D68  01                 	db	1
  2716  009D69  01                 	db	1
  2717  009D6A  01                 	db	1
  2718  009D6B  01                 	db	1
  2719  009D6C  01                 	db	1
  2720  009D6D  01                 	db	1
  2721  009D6E  01                 	db	1
  2722  009D6F  01                 	db	1
  2723  009D70  01                 	db	1
  2724  009D71  01                 	db	1
  2725  009D72  01                 	db	1
  2726  009D73  01                 	db	1
  2727  009D74  01                 	db	1
  2728  009D75  01                 	db	1
  2729  009D76  01                 	db	1
  2730  009D77  01                 	db	1
  2731  009D78  01                 	db	1
  2732  009D79  01                 	db	1
  2733  009D7A  01                 	db	1
  2734  009D7B  01                 	db	1
  2735  009D7C  01                 	db	1
  2736  009D7D  01                 	db	1
  2737  009D7E  01                 	db	1
  2738  009D7F  01                 	db	1
  2739  009D80  01                 	db	1
  2740  009D81  01                 	db	1
  2741  009D82  01                 	db	1
  2742  009D83  01                 	db	1
  2743  009D84  01                 	db	1
  2744  009D85  01                 	db	1
  2745  009D86  01                 	db	1
  2746  009D87  01                 	db	1
  2747  009D88  01                 	db	1
  2748  009D89  01                 	db	1
  2749  009D8A  01                 	db	1
  2750  009D8B  01                 	db	1
  2751  009D8C  01                 	db	1
  2752  009D8D  01                 	db	1
  2753  009D8E  01                 	db	1
  2754  009D8F  01                 	db	1
  2755  009D90  01                 	db	1
  2756  009D91  01                 	db	1
  2757  009D92  01                 	db	1
  2758  009D93  01                 	db	1
  2759  009D94  01                 	db	1
  2760  009D95  01                 	db	1
  2761  009D96  01                 	db	1
  2762  009D97  01                 	db	1
  2763  009D98  01                 	db	1
  2764  009D99  01                 	db	1
  2765  009D9A  01                 	db	1
  2766  009D9B  01                 	db	1
  2767  009D9C  01                 	db	1
  2768  009D9D  01                 	db	1
  2769  009D9E  01                 	db	1
  2770  009D9F  01                 	db	1
  2771  009DA0  01                 	db	1
  2772  009DA1  01                 	db	1
  2773  009DA2  01                 	db	1
  2774  009DA3  01                 	db	1
  2775  009DA4  01                 	db	1
  2776  009DA5  01                 	db	1
  2777  009DA6  01                 	db	1
  2778  009DA7  01                 	db	1
  2779  009DA8  01                 	db	1
  2780  009DA9  01                 	db	1
  2781  009DAA  01                 	db	1
  2782  009DAB  00                 	db	0
  2783  009DAC  00                 	db	0
  2784  009DAD  00                 	db	0
  2785  009DAE  00                 	db	0
  2786  009DAF  00                 	db	0
  2787  009DB0  00                 	db	0
  2788  009DB1  00                 	db	0
  2789  009DB2  00                 	db	0
  2790  009DB3  00                 	db	0
  2791  009DB4  00                 	db	0
  2792  009DB5  00                 	db	0
  2793  009DB6  00                 	db	0
  2794  009DB7  00                 	db	0
  2795  009DB8  00                 	db	0
  2796  009DB9  00                 	db	0
  2797  009DBA  00                 	db	0
  2798  009DBB  00                 	db	0
  2799  009DBC  00                 	db	0
  2800  009DBD  00                 	db	0
  2801  009DBE  00                 	db	0
  2802  009DBF  00                 	db	0
  2803  009DC0  00                 	db	0
  2804  009DC1  00                 	db	0
  2805  009DC2  00                 	db	0
  2806  009DC3  00                 	db	0
  2807  009DC4  00                 	db	0
  2808  009DC5  00                 	db	0
  2809  009DC6  00                 	db	0
  2810  009DC7  00                 	db	0
  2811  009DC8  00                 	db	0
  2812  009DC9  00                 	db	0
  2813  009DCA  00                 	db	0
  2814  009DCB  00                 	db	0
  2815  009DCC  00                 	db	0
  2816  009DCD  00                 	db	0
  2817  009DCE  00                 	db	0
  2818  009DCF  00                 	db	0
  2819  009DD0  00                 	db	0
  2820  009DD1  00                 	db	0
  2821  009DD2  00                 	db	0
  2822  009DD3  00                 	db	0
  2823  009DD4  00                 	db	0
  2824  009DD5  00                 	db	0
  2825  009DD6  00                 	db	0
  2826  009DD7  00                 	db	0
  2827  009DD8  00                 	db	0
  2828  009DD9  00                 	db	0
  2829  009DDA  00                 	db	0
  2830  009DDB  00                 	db	0
  2831  009DDC  00                 	db	0
  2832  009DDD  00                 	db	0
  2833  009DDE  00                 	db	0
  2834  009DDF  00                 	db	0
  2835  009DE0  00                 	db	0
  2836  009DE1  00                 	db	0
  2837  009DE2  00                 	db	0
  2838  009DE3  00                 	db	0
  2839  009DE4                     __end_of_motor_prescaler_lookup:
  2840                           	opt stack 0
  2841  009DE4                     _USB_SD_Ptr:
  2842                           	opt stack 0
  2843  009DE4  ED                 	db	low _sd000
  2844  009DE5  A1                 	db	high _sd000
  2845  009DE6  FE                 	db	low _sd001
  2846  009DE7  A0                 	db	high _sd001
  2847  009DE8  32                 	db	low _sd002
  2848  009DE9  A1                 	db	high _sd002
  2849  009DEA  A1                 	db	low _sd003
  2850  009DEB  A1                 	db	high _sd003
  2851  009DEC                     __end_of_USB_SD_Ptr:
  2852                           	opt stack 0
  2853  009DEC                     _USB_CD_Ptr:
  2854                           	opt stack 0
  2855  009DEC  BE                 	db	low _configDescriptor1
  2856  009DED  A0                 	db	high _configDescriptor1
  2857  009DEE                     __end_of_USB_CD_Ptr:
  2858                           	opt stack 0
  2859  009DEE                     _dc_manual:
  2860                           	opt stack 0
  2861  009DEE  4D                 	db	77
  2862  009DEF  61                 	db	97
  2863  009DF0  6E                 	db	110
  2864  009DF1  75                 	db	117
  2865  009DF2  61                 	db	97
  2866  009DF3  6C                 	db	108
  2867  009DF4  20                 	db	32
  2868  009DF5  4D                 	db	77
  2869  009DF6  6F                 	db	111
  2870  009DF7  64                 	db	100
  2871  009DF8  65                 	db	101
  2872  009DF9  20                 	db	32
  2873  009DFA  20                 	db	32
  2874  009DFB  20                 	db	32
  2875  009DFC  20                 	db	32
  2876  009DFD  20                 	db	32
  2877  009DFE  20                 	db	32
  2878  009DFF  20                 	db	32
  2879  009E00  20                 	db	32
  2880  009E01  20                 	db	32
  2881  009E02  43                 	db	67
  2882  009E03  75                 	db	117
  2883  009E04  72                 	db	114
  2884  009E05  72                 	db	114
  2885  009E06  65                 	db	101
  2886  009E07  6E                 	db	110
  2887  009E08  74                 	db	116
  2888  009E09  20                 	db	32
  2889  009E0A  70                 	db	112
  2890  009E0B  6F                 	db	111
  2891  009E0C  73                 	db	115
  2892  009E0D  3A                 	db	58
  2893  009E0E  20                 	db	32
  2894  009E0F  20                 	db	32
  2895  009E10  20                 	db	32
  2896  009E11  20                 	db	32
  2897  009E12  20                 	db	32
  2898  009E13  20                 	db	32
  2899  009E14  20                 	db	32
  2900  009E15  01                 	db	1
  2901  009E16  54                 	db	84
  2902  009E17  75                 	db	117
  2903  009E18  72                 	db	114
  2904  009E19  6E                 	db	110
  2905  009E1A  20                 	db	32
  2906  009E1B  43                 	db	67
  2907  009E1C  43                 	db	67
  2908  009E1D  57                 	db	87
  2909  009E1E  20                 	db	32
  2910  009E1F  00                 	db	0
  2911  009E20  20                 	db	32
  2912  009E21  53                 	db	83
  2913  009E22  70                 	db	112
  2914  009E23  65                 	db	101
  2915  009E24  65                 	db	101
  2916  009E25  64                 	db	100
  2917  009E26  20                 	db	32
  2918  009E27  20                 	db	32
  2919  009E28  20                 	db	32
  2920  009E29  20                 	db	32
  2921  009E2A  53                 	db	83
  2922  009E2B  74                 	db	116
  2923  009E2C  61                 	db	97
  2924  009E2D  72                 	db	114
  2925  009E2E  74                 	db	116
  2926  009E2F  20                 	db	32
  2927  009E30  20                 	db	32
  2928  009E31  20                 	db	32
  2929  009E32  20                 	db	32
  2930  009E33  00                 	db	0
  2931  009E34  20                 	db	32
  2932  009E35  20                 	db	32
  2933  009E36  20                 	db	32
  2934  009E37  20                 	db	32
  2935  009E38  20                 	db	32
  2936  009E39  20                 	db	32
  2937  009E3A  20                 	db	32
  2938  009E3B  20                 	db	32
  2939  009E3C  20                 	db	32
  2940  009E3D  20                 	db	32
  2941  009E3E                     __end_of_dc_manual:
  2942                           	opt stack 0
  2943  009E3E                     _dc_zero:
  2944                           	opt stack 0
  2945  009E3E  52                 	db	82
  2946  009E3F  65                 	db	101
  2947  009E40  74                 	db	116
  2948  009E41  75                 	db	117
  2949  009E42  72                 	db	114
  2950  009E43  6E                 	db	110
  2951  009E44  20                 	db	32
  2952  009E45  74                 	db	116
  2953  009E46  6F                 	db	111
  2954  009E47  20                 	db	32
  2955  009E48  5A                 	db	90
  2956  009E49  65                 	db	101
  2957  009E4A  72                 	db	114
  2958  009E4B  6F                 	db	111
  2959  009E4C  3F                 	db	63
  2960  009E4D  20                 	db	32
  2961  009E4E  20                 	db	32
  2962  009E4F  20                 	db	32
  2963  009E50  20                 	db	32
  2964  009E51  20                 	db	32
  2965  009E52  43                 	db	67
  2966  009E53  75                 	db	117
  2967  009E54  72                 	db	114
  2968  009E55  72                 	db	114
  2969  009E56  65                 	db	101
  2970  009E57  6E                 	db	110
  2971  009E58  74                 	db	116
  2972  009E59  20                 	db	32
  2973  009E5A  70                 	db	112
  2974  009E5B  6F                 	db	111
  2975  009E5C  73                 	db	115
  2976  009E5D  3A                 	db	58
  2977  009E5E  20                 	db	32
  2978  009E5F  20                 	db	32
  2979  009E60  20                 	db	32
  2980  009E61  20                 	db	32
  2981  009E62  20                 	db	32
  2982  009E63  20                 	db	32
  2983  009E64  20                 	db	32
  2984  009E65  20                 	db	32
  2985  009E66  20                 	db	32
  2986  009E67  20                 	db	32
  2987  009E68  20                 	db	32
  2988  009E69  20                 	db	32
  2989  009E6A  20                 	db	32
  2990  009E6B  20                 	db	32
  2991  009E6C  20                 	db	32
  2992  009E6D  20                 	db	32
  2993  009E6E  20                 	db	32
  2994  009E6F  20                 	db	32
  2995  009E70  20                 	db	32
  2996  009E71  20                 	db	32
  2997  009E72  20                 	db	32
  2998  009E73  20                 	db	32
  2999  009E74  20                 	db	32
  3000  009E75  20                 	db	32
  3001  009E76  20                 	db	32
  3002  009E77  20                 	db	32
  3003  009E78  20                 	db	32
  3004  009E79  20                 	db	32
  3005  009E7A  20                 	db	32
  3006  009E7B  59                 	db	89
  3007  009E7C  65                 	db	101
  3008  009E7D  73                 	db	115
  3009  009E7E  20                 	db	32
  3010  009E7F  20                 	db	32
  3011  009E80  20                 	db	32
  3012  009E81  20                 	db	32
  3013  009E82  20                 	db	32
  3014  009E83  20                 	db	32
  3015  009E84  20                 	db	32
  3016  009E85  20                 	db	32
  3017  009E86  20                 	db	32
  3018  009E87  20                 	db	32
  3019  009E88  20                 	db	32
  3020  009E89  20                 	db	32
  3021  009E8A  4E                 	db	78
  3022  009E8B  6F                 	db	111
  3023  009E8C  20                 	db	32
  3024  009E8D  20                 	db	32
  3025  009E8E                     __end_of_dc_zero:
  3026                           	opt stack 0
  3027  009E8E                     _dc_arc2:
  3028                           	opt stack 0
  3029  009E8E  41                 	db	65
  3030  009E8F  72                 	db	114
  3031  009E90  63                 	db	99
  3032  009E91  3A                 	db	58
  3033  009E92  20                 	db	32
  3034  009E93  53                 	db	83
  3035  009E94  69                 	db	105
  3036  009E95  7A                 	db	122
  3037  009E96  65                 	db	101
  3038  009E97  3D                 	db	61
  3039  009E98  20                 	db	32
  3040  009E99  20                 	db	32
  3041  009E9A  20                 	db	32
  3042  009E9B  20                 	db	32
  3043  009E9C  20                 	db	32
  3044  009E9D  20                 	db	32
  3045  009E9E  20                 	db	32
  3046  009E9F  20                 	db	32
  3047  009EA0  20                 	db	32
  3048  009EA1  20                 	db	32
  3049  009EA2  43                 	db	67
  3050  009EA3  75                 	db	117
  3051  009EA4  72                 	db	114
  3052  009EA5  72                 	db	114
  3053  009EA6  65                 	db	101
  3054  009EA7  6E                 	db	110
  3055  009EA8  74                 	db	116
  3056  009EA9  20                 	db	32
  3057  009EAA  70                 	db	112
  3058  009EAB  6F                 	db	111
  3059  009EAC  73                 	db	115
  3060  009EAD  3A                 	db	58
  3061  009EAE  20                 	db	32
  3062  009EAF  20                 	db	32
  3063  009EB0  20                 	db	32
  3064  009EB1  20                 	db	32
  3065  009EB2  20                 	db	32
  3066  009EB3  20                 	db	32
  3067  009EB4  20                 	db	32
  3068  009EB5  01                 	db	1
  3069  009EB6  54                 	db	84
  3070  009EB7  75                 	db	117
  3071  009EB8  72                 	db	114
  3072  009EB9  6E                 	db	110
  3073  009EBA  20                 	db	32
  3074  009EBB  43                 	db	67
  3075  009EBC  43                 	db	67
  3076  009EBD  57                 	db	87
  3077  009EBE  20                 	db	32
  3078  009EBF  00                 	db	0
  3079  009EC0  20                 	db	32
  3080  009EC1  53                 	db	83
  3081  009EC2  70                 	db	112
  3082  009EC3  65                 	db	101
  3083  009EC4  65                 	db	101
  3084  009EC5  64                 	db	100
  3085  009EC6  20                 	db	32
  3086  009EC7  20                 	db	32
  3087  009EC8  20                 	db	32
  3088  009EC9  20                 	db	32
  3089  009ECA  53                 	db	83
  3090  009ECB  74                 	db	116
  3091  009ECC  61                 	db	97
  3092  009ECD  72                 	db	114
  3093  009ECE  74                 	db	116
  3094  009ECF  20                 	db	32
  3095  009ED0  20                 	db	32
  3096  009ED1  20                 	db	32
  3097  009ED2  20                 	db	32
  3098  009ED3  00                 	db	0
  3099  009ED4  20                 	db	32
  3100  009ED5  20                 	db	32
  3101  009ED6  20                 	db	32
  3102  009ED7  20                 	db	32
  3103  009ED8  20                 	db	32
  3104  009ED9  20                 	db	32
  3105  009EDA  20                 	db	32
  3106  009EDB  20                 	db	32
  3107  009EDC  20                 	db	32
  3108  009EDD  20                 	db	32
  3109  009EDE                     __end_of_dc_arc2:
  3110                           	opt stack 0
  3111  009EDE                     _dc_arc1:
  3112                           	opt stack 0
  3113  009EDE  41                 	db	65
  3114  009EDF  72                 	db	114
  3115  009EE0  63                 	db	99
  3116  009EE1  3A                 	db	58
  3117  009EE2  20                 	db	32
  3118  009EE3  53                 	db	83
  3119  009EE4  65                 	db	101
  3120  009EE5  74                 	db	116
  3121  009EE6  20                 	db	32
  3122  009EE7  61                 	db	97
  3123  009EE8  72                 	db	114
  3124  009EE9  63                 	db	99
  3125  009EEA  20                 	db	32
  3126  009EEB  73                 	db	115
  3127  009EEC  69                 	db	105
  3128  009EED  7A                 	db	122
  3129  009EEE  65                 	db	101
  3130  009EEF  20                 	db	32
  3131  009EF0  20                 	db	32
  3132  009EF1  20                 	db	32
  3133  009EF2  41                 	db	65
  3134  009EF3  72                 	db	114
  3135  009EF4  63                 	db	99
  3136  009EF5  20                 	db	32
  3137  009EF6  73                 	db	115
  3138  009EF7  69                 	db	105
  3139  009EF8  7A                 	db	122
  3140  009EF9  65                 	db	101
  3141  009EFA  3A                 	db	58
  3142  009EFB  20                 	db	32
  3143  009EFC  20                 	db	32
  3144  009EFD  20                 	db	32
  3145  009EFE  20                 	db	32
  3146  009EFF  20                 	db	32
  3147  009F00  20                 	db	32
  3148  009F01  20                 	db	32
  3149  009F02  20                 	db	32
  3150  009F03  20                 	db	32
  3151  009F04  20                 	db	32
  3152  009F05  20                 	db	32
  3153  009F06  53                 	db	83
  3154  009F07  74                 	db	116
  3155  009F08  65                 	db	101
  3156  009F09  70                 	db	112
  3157  009F0A  20                 	db	32
  3158  009F0B  73                 	db	115
  3159  009F0C  69                 	db	105
  3160  009F0D  7A                 	db	122
  3161  009F0E  65                 	db	101
  3162  009F0F  20                 	db	32
  3163  009F10  00                 	db	0
  3164  009F11  20                 	db	32
  3165  009F12  20                 	db	32
  3166  009F13  43                 	db	67
  3167  009F14  6F                 	db	111
  3168  009F15  6E                 	db	110
  3169  009F16  66                 	db	102
  3170  009F17  69                 	db	105
  3171  009F18  72                 	db	114
  3172  009F19  6D                 	db	109
  3173  009F1A  20                 	db	32
  3174  009F1B  20                 	db	32
  3175  009F1C  20                 	db	32
  3176  009F1D  20                 	db	32
  3177  009F1E  20                 	db	32
  3178  009F1F  20                 	db	32
  3179  009F20  20                 	db	32
  3180  009F21  20                 	db	32
  3181  009F22  20                 	db	32
  3182  009F23  20                 	db	32
  3183  009F24  00                 	db	0
  3184  009F25  20                 	db	32
  3185  009F26  20                 	db	32
  3186  009F27  43                 	db	67
  3187  009F28  61                 	db	97
  3188  009F29  6E                 	db	110
  3189  009F2A  63                 	db	99
  3190  009F2B  65                 	db	101
  3191  009F2C  6C                 	db	108
  3192  009F2D  20                 	db	32
  3193  009F2E                     __end_of_dc_arc1:
  3194                           	opt stack 0
  3195  009F2E                     _dc_divide2:
  3196                           	opt stack 0
  3197  009F2E  44                 	db	68
  3198  009F2F  69                 	db	105
  3199  009F30  76                 	db	118
  3200  009F31  69                 	db	105
  3201  009F32  64                 	db	100
  3202  009F33  65                 	db	101
  3203  009F34  3A                 	db	58
  3204  009F35  20                 	db	32
  3205  009F36  20                 	db	32
  3206  009F37  20                 	db	32
  3207  009F38  20                 	db	32
  3208  009F39  20                 	db	32
  3209  009F3A  20                 	db	32
  3210  009F3B  20                 	db	32
  3211  009F3C  20                 	db	32
  3212  009F3D  20                 	db	32
  3213  009F3E  20                 	db	32
  3214  009F3F  20                 	db	32
  3215  009F40  20                 	db	32
  3216  009F41  20                 	db	32
  3217  009F42  50                 	db	80
  3218  009F43  6F                 	db	111
  3219  009F44  73                 	db	115
  3220  009F45  3A                 	db	58
  3221  009F46  20                 	db	32
  3222  009F47  20                 	db	32
  3223  009F48  20                 	db	32
  3224  009F49  20                 	db	32
  3225  009F4A  20                 	db	32
  3226  009F4B  20                 	db	32
  3227  009F4C  20                 	db	32
  3228  009F4D  20                 	db	32
  3229  009F4E  20                 	db	32
  3230  009F4F  20                 	db	32
  3231  009F50  20                 	db	32
  3232  009F51  20                 	db	32
  3233  009F52  20                 	db	32
  3234  009F53  20                 	db	32
  3235  009F54  20                 	db	32
  3236  009F55  20                 	db	32
  3237  009F56  4A                 	db	74
  3238  009F57  75                 	db	117
  3239  009F58  6D                 	db	109
  3240  009F59  70                 	db	112
  3241  009F5A  20                 	db	32
  3242  009F5B  73                 	db	115
  3243  009F5C  69                 	db	105
  3244  009F5D  7A                 	db	122
  3245  009F5E  65                 	db	101
  3246  009F5F  3A                 	db	58
  3247  009F60  20                 	db	32
  3248  009F61  20                 	db	32
  3249  009F62  20                 	db	32
  3250  009F63  20                 	db	32
  3251  009F64  20                 	db	32
  3252  009F65  20                 	db	32
  3253  009F66  20                 	db	32
  3254  009F67  20                 	db	32
  3255  009F68  20                 	db	32
  3256  009F69  20                 	db	32
  3257  009F6A  50                 	db	80
  3258  009F6B  72                 	db	114
  3259  009F6C  65                 	db	101
  3260  009F6D  73                 	db	115
  3261  009F6E  73                 	db	115
  3262  009F6F  54                 	db	84
  3263  009F70  6F                 	db	111
  3264  009F71  4A                 	db	74
  3265  009F72  75                 	db	117
  3266  009F73  6D                 	db	109
  3267  009F74  70                 	db	112
  3268  009F75  20                 	db	32
  3269  009F76  00                 	db	0
  3270  009F77  20                 	db	32
  3271  009F78  43                 	db	67
  3272  009F79  61                 	db	97
  3273  009F7A  6E                 	db	110
  3274  009F7B  63                 	db	99
  3275  009F7C  65                 	db	101
  3276  009F7D  6C                 	db	108
  3277  009F7E                     __end_of_dc_divide2:
  3278                           	opt stack 0
  3279  009F7E                     _dc_divide1:
  3280                           	opt stack 0
  3281  009F7E  44                 	db	68
  3282  009F7F  69                 	db	105
  3283  009F80  76                 	db	118
  3284  009F81  69                 	db	105
  3285  009F82  64                 	db	100
  3286  009F83  65                 	db	101
  3287  009F84  3A                 	db	58
  3288  009F85  20                 	db	32
  3289  009F86  53                 	db	83
  3290  009F87  65                 	db	101
  3291  009F88  74                 	db	116
  3292  009F89  20                 	db	32
  3293  009F8A  64                 	db	100
  3294  009F8B  69                 	db	105
  3295  009F8C  76                 	db	118
  3296  009F8D  69                 	db	105
  3297  009F8E  73                 	db	115
  3298  009F8F  69                 	db	105
  3299  009F90  6F                 	db	111
  3300  009F91  6E                 	db	110
  3301  009F92  20                 	db	32
  3302  009F93  20                 	db	32
  3303  009F94  20                 	db	32
  3304  009F95  20                 	db	32
  3305  009F96  20                 	db	32
  3306  009F97  20                 	db	32
  3307  009F98  20                 	db	32
  3308  009F99  20                 	db	32
  3309  009F9A  20                 	db	32
  3310  009F9B  20                 	db	32
  3311  009F9C  20                 	db	32
  3312  009F9D  20                 	db	32
  3313  009F9E  20                 	db	32
  3314  009F9F  20                 	db	32
  3315  009FA0  20                 	db	32
  3316  009FA1  20                 	db	32
  3317  009FA2  20                 	db	32
  3318  009FA3  20                 	db	32
  3319  009FA4  20                 	db	32
  3320  009FA5  20                 	db	32
  3321  009FA6  20                 	db	32
  3322  009FA7  20                 	db	32
  3323  009FA8  20                 	db	32
  3324  009FA9  2F                 	db	47
  3325  009FAA  73                 	db	115
  3326  009FAB  74                 	db	116
  3327  009FAC  65                 	db	101
  3328  009FAD  70                 	db	112
  3329  009FAE  20                 	db	32
  3330  009FAF  20                 	db	32
  3331  009FB0  00                 	db	0
  3332  009FB1  20                 	db	32
  3333  009FB2  20                 	db	32
  3334  009FB3  43                 	db	67
  3335  009FB4  6F                 	db	111
  3336  009FB5  6E                 	db	110
  3337  009FB6  66                 	db	102
  3338  009FB7  69                 	db	105
  3339  009FB8  72                 	db	114
  3340  009FB9  6D                 	db	109
  3341  009FBA  31                 	db	49
  3342  009FBB  32                 	db	50
  3343  009FBC  33                 	db	51
  3344  009FBD  34                 	db	52
  3345  009FBE  20                 	db	32
  3346  009FBF  20                 	db	32
  3347  009FC0  20                 	db	32
  3348  009FC1  20                 	db	32
  3349  009FC2  20                 	db	32
  3350  009FC3  20                 	db	32
  3351  009FC4  00                 	db	0
  3352  009FC5  20                 	db	32
  3353  009FC6  20                 	db	32
  3354  009FC7  43                 	db	67
  3355  009FC8  61                 	db	97
  3356  009FC9  6E                 	db	110
  3357  009FCA  63                 	db	99
  3358  009FCB  65                 	db	101
  3359  009FCC  6C                 	db	108
  3360  009FCD  20                 	db	32
  3361  009FCE                     __end_of_dc_divide1:
  3362                           	opt stack 0
  3363  009FCE                     _dc_setup2:
  3364                           	opt stack 0
  3365  009FCE  53                 	db	83
  3366  009FCF  65                 	db	101
  3367  009FD0  74                 	db	116
  3368  009FD1  75                 	db	117
  3369  009FD2  70                 	db	112
  3370  009FD3  3A                 	db	58
  3371  009FD4  20                 	db	32
  3372  009FD5  53                 	db	83
  3373  009FD6  65                 	db	101
  3374  009FD7  74                 	db	116
  3375  009FD8  20                 	db	32
  3376  009FD9  64                 	db	100
  3377  009FDA  69                 	db	105
  3378  009FDB  72                 	db	114
  3379  009FDC  65                 	db	101
  3380  009FDD  63                 	db	99
  3381  009FDE  74                 	db	116
  3382  009FDF  69                 	db	105
  3383  009FE0  6F                 	db	111
  3384  009FE1  6E                 	db	110
  3385  009FE2  20                 	db	32
  3386  009FE3  20                 	db	32
  3387  009FE4  20                 	db	32
  3388  009FE5  20                 	db	32
  3389  009FE6  20                 	db	32
  3390  009FE7  20                 	db	32
  3391  009FE8  20                 	db	32
  3392  009FE9  20                 	db	32
  3393  009FEA  20                 	db	32
  3394  009FEB  20                 	db	32
  3395  009FEC  20                 	db	32
  3396  009FED  20                 	db	32
  3397  009FEE  20                 	db	32
  3398  009FEF  20                 	db	32
  3399  009FF0  20                 	db	32
  3400  009FF1  20                 	db	32
  3401  009FF2  20                 	db	32
  3402  009FF3  20                 	db	32
  3403  009FF4  20                 	db	32
  3404  009FF5  20                 	db	32
  3405  009FF6  20                 	db	32
  3406  009FF7  43                 	db	67
  3407  009FF8  6F                 	db	111
  3408  009FF9  75                 	db	117
  3409  009FFA  6E                 	db	110
  3410  009FFB  74                 	db	116
  3411  009FFC  65                 	db	101
  3412  009FFD  72                 	db	114
  3413  009FFE  43                 	db	67
  3414  009FFF  6C                 	db	108
  3415  00A000  6F                 	db	111
  3416  00A001  63                 	db	99
  3417  00A002  6B                 	db	107
  3418  00A003  77                 	db	119
  3419  00A004  69                 	db	105
  3420  00A005  73                 	db	115
  3421  00A006  65                 	db	101
  3422  00A007  20                 	db	32
  3423  00A008  20                 	db	32
  3424  00A009  20                 	db	32
  3425  00A00A  20                 	db	32
  3426  00A00B  43                 	db	67
  3427  00A00C  6C                 	db	108
  3428  00A00D  6F                 	db	111
  3429  00A00E  63                 	db	99
  3430  00A00F  6B                 	db	107
  3431  00A010  77                 	db	119
  3432  00A011  69                 	db	105
  3433  00A012  73                 	db	115
  3434  00A013  65                 	db	101
  3435  00A014  20                 	db	32
  3436  00A015  20                 	db	32
  3437  00A016  20                 	db	32
  3438  00A017  20                 	db	32
  3439  00A018  20                 	db	32
  3440  00A019  20                 	db	32
  3441  00A01A  20                 	db	32
  3442  00A01B  20                 	db	32
  3443  00A01C  20                 	db	32
  3444  00A01D  20                 	db	32
  3445  00A01E                     __end_of_dc_setup2:
  3446                           	opt stack 0
  3447  00A01E                     _dc_setup1:
  3448                           	opt stack 0
  3449  00A01E  53                 	db	83
  3450  00A01F  65                 	db	101
  3451  00A020  74                 	db	116
  3452  00A021  75                 	db	117
  3453  00A022  70                 	db	112
  3454  00A023  3A                 	db	58
  3455  00A024  20                 	db	32
  3456  00A025  53                 	db	83
  3457  00A026  65                 	db	101
  3458  00A027  74                 	db	116
  3459  00A028  20                 	db	32
  3460  00A029  7A                 	db	122
  3461  00A02A  65                 	db	101
  3462  00A02B  72                 	db	114
  3463  00A02C  6F                 	db	111
  3464  00A02D  20                 	db	32
  3465  00A02E  70                 	db	112
  3466  00A02F  6F                 	db	111
  3467  00A030  73                 	db	115
  3468  00A031  2E                 	db	46
  3469  00A032  20                 	db	32
  3470  00A033  20                 	db	32
  3471  00A034  20                 	db	32
  3472  00A035  20                 	db	32
  3473  00A036  20                 	db	32
  3474  00A037  20                 	db	32
  3475  00A038  20                 	db	32
  3476  00A039  20                 	db	32
  3477  00A03A  20                 	db	32
  3478  00A03B  20                 	db	32
  3479  00A03C  20                 	db	32
  3480  00A03D  20                 	db	32
  3481  00A03E  20                 	db	32
  3482  00A03F  20                 	db	32
  3483  00A040  20                 	db	32
  3484  00A041  20                 	db	32
  3485  00A042  20                 	db	32
  3486  00A043  20                 	db	32
  3487  00A044  20                 	db	32
  3488  00A045  20                 	db	32
  3489  00A046  53                 	db	83
  3490  00A047  74                 	db	116
  3491  00A048  65                 	db	101
  3492  00A049  70                 	db	112
  3493  00A04A  20                 	db	32
  3494  00A04B  73                 	db	115
  3495  00A04C  69                 	db	105
  3496  00A04D  7A                 	db	122
  3497  00A04E  65                 	db	101
  3498  00A04F  20                 	db	32
  3499  00A050  00                 	db	0
  3500  00A051  20                 	db	32
  3501  00A052  20                 	db	32
  3502  00A053  43                 	db	67
  3503  00A054  6F                 	db	111
  3504  00A055  6E                 	db	110
  3505  00A056  66                 	db	102
  3506  00A057  69                 	db	105
  3507  00A058  72                 	db	114
  3508  00A059  6D                 	db	109
  3509  00A05A  20                 	db	32
  3510  00A05B  78                 	db	120
  3511  00A05C  2E                 	db	46
  3512  00A05D  78                 	db	120
  3513  00A05E  78                 	db	120
  3514  00A05F  01                 	db	1
  3515  00A060  20                 	db	32
  3516  00A061  20                 	db	32
  3517  00A062  20                 	db	32
  3518  00A063  20                 	db	32
  3519  00A064  00                 	db	0
  3520  00A065  20                 	db	32
  3521  00A066  20                 	db	32
  3522  00A067  43                 	db	67
  3523  00A068  61                 	db	97
  3524  00A069  6E                 	db	110
  3525  00A06A  63                 	db	99
  3526  00A06B  65                 	db	101
  3527  00A06C  6C                 	db	108
  3528  00A06D  20                 	db	32
  3529  00A06E                     __end_of_dc_setup1:
  3530                           	opt stack 0
  3531  00A06E                     _dc_main:
  3532                           	opt stack 0
  3533  00A06E  4D                 	db	77
  3534  00A06F  61                 	db	97
  3535  00A070  69                 	db	105
  3536  00A071  6E                 	db	110
  3537  00A072  20                 	db	32
  3538  00A073  4D                 	db	77
  3539  00A074  65                 	db	101
  3540  00A075  6E                 	db	110
  3541  00A076  75                 	db	117
  3542  00A077  3A                 	db	58
  3543  00A078  20                 	db	32
  3544  00A079  20                 	db	32
  3545  00A07A  20                 	db	32
  3546  00A07B  20                 	db	32
  3547  00A07C  20                 	db	32
  3548  00A07D  20                 	db	32
  3549  00A07E  20                 	db	32
  3550  00A07F  20                 	db	32
  3551  00A080  20                 	db	32
  3552  00A081  20                 	db	32
  3553  00A082  20                 	db	32
  3554  00A083  53                 	db	83
  3555  00A084  65                 	db	101
  3556  00A085  74                 	db	116
  3557  00A086  75                 	db	117
  3558  00A087  70                 	db	112
  3559  00A088  20                 	db	32
  3560  00A089  20                 	db	32
  3561  00A08A  20                 	db	32
  3562  00A08B  20                 	db	32
  3563  00A08C  44                 	db	68
  3564  00A08D  69                 	db	105
  3565  00A08E  76                 	db	118
  3566  00A08F  69                 	db	105
  3567  00A090  64                 	db	100
  3568  00A091  65                 	db	101
  3569  00A092  20                 	db	32
  3570  00A093  20                 	db	32
  3571  00A094  20                 	db	32
  3572  00A095  20                 	db	32
  3573  00A096  20                 	db	32
  3574  00A097  41                 	db	65
  3575  00A098  72                 	db	114
  3576  00A099  63                 	db	99
  3577  00A09A  20                 	db	32
  3578  00A09B  20                 	db	32
  3579  00A09C  20                 	db	32
  3580  00A09D  20                 	db	32
  3581  00A09E  20                 	db	32
  3582  00A09F  20                 	db	32
  3583  00A0A0  4D                 	db	77
  3584  00A0A1  61                 	db	97
  3585  00A0A2  6E                 	db	110
  3586  00A0A3  75                 	db	117
  3587  00A0A4  61                 	db	97
  3588  00A0A5  6C                 	db	108
  3589  00A0A6  20                 	db	32
  3590  00A0A7  20                 	db	32
  3591  00A0A8  20                 	db	32
  3592  00A0A9  20                 	db	32
  3593  00A0AA  20                 	db	32
  3594  00A0AB  47                 	db	71
  3595  00A0AC  6F                 	db	111
  3596  00A0AD  32                 	db	50
  3597  00A0AE  5A                 	db	90
  3598  00A0AF  65                 	db	101
  3599  00A0B0  72                 	db	114
  3600  00A0B1  6F                 	db	111
  3601  00A0B2  20                 	db	32
  3602  00A0B3  20                 	db	32
  3603  00A0B4  20                 	db	32
  3604  00A0B5  20                 	db	32
  3605  00A0B6  20                 	db	32
  3606  00A0B7  20                 	db	32
  3607  00A0B8  20                 	db	32
  3608  00A0B9  20                 	db	32
  3609  00A0BA  20                 	db	32
  3610  00A0BB  20                 	db	32
  3611  00A0BC  20                 	db	32
  3612  00A0BD  20                 	db	32
  3613  00A0BE                     __end_of_dc_main:
  3614                           	opt stack 0
  3615  00A0BE                     _configDescriptor1:
  3616                           	opt stack 0
  3617  00A0BE  09                 	db	9
  3618  00A0BF  02                 	db	2
  3619  00A0C0  40                 	db	64
  3620  00A0C1  00                 	db	0
  3621  00A0C2  02                 	db	2
  3622  00A0C3  01                 	db	1
  3623  00A0C4  00                 	db	0
  3624  00A0C5  C0                 	db	192
  3625  00A0C6  32                 	db	50
  3626  00A0C7  09                 	db	9
  3627  00A0C8  04                 	db	4
  3628  00A0C9  00                 	db	0
  3629  00A0CA  00                 	db	0
  3630  00A0CB  02                 	db	2
  3631  00A0CC  03                 	db	3
  3632  00A0CD  00                 	db	0
  3633  00A0CE  00                 	db	0
  3634  00A0CF  00                 	db	0
  3635  00A0D0  09                 	db	9
  3636  00A0D1  21                 	db	33
  3637  00A0D2  11                 	db	17
  3638  00A0D3  01                 	db	1
  3639  00A0D4  00                 	db	0
  3640  00A0D5  01                 	db	1
  3641  00A0D6  22                 	db	34
  3642  00A0D7  1D                 	db	29
  3643  00A0D8  00                 	db	0
  3644  00A0D9  07                 	db	7
  3645  00A0DA  05                 	db	5
  3646  00A0DB  81                 	db	129
  3647  00A0DC  03                 	db	3
  3648  00A0DD  40                 	db	64
  3649  00A0DE  00                 	db	0
  3650  00A0DF  01                 	db	1
  3651  00A0E0  07                 	db	7
  3652  00A0E1  05                 	db	5
  3653  00A0E2  01                 	db	1
  3654  00A0E3  03                 	db	3
  3655  00A0E4  40                 	db	64
  3656  00A0E5  00                 	db	0
  3657  00A0E6  01                 	db	1
  3658  00A0E7  09                 	db	9
  3659  00A0E8  04                 	db	4
  3660  00A0E9  01                 	db	1
  3661  00A0EA  00                 	db	0
  3662  00A0EB  02                 	db	2
  3663  00A0EC  08                 	db	8
  3664  00A0ED  06                 	db	6
  3665  00A0EE  50                 	db	80
  3666  00A0EF  00                 	db	0
  3667  00A0F0  07                 	db	7
  3668  00A0F1  05                 	db	5
  3669  00A0F2  82                 	db	130
  3670  00A0F3  02                 	db	2
  3671  00A0F4  40                 	db	64
  3672  00A0F5  00                 	db	0
  3673  00A0F6  01                 	db	1
  3674  00A0F7  07                 	db	7
  3675  00A0F8  05                 	db	5
  3676  00A0F9  02                 	db	2
  3677  00A0FA  02                 	db	2
  3678  00A0FB  40                 	db	64
  3679  00A0FC  00                 	db	0
  3680  00A0FD  01                 	db	1
  3681  00A0FE                     __end_of_configDescriptor1:
  3682                           	opt stack 0
  3683  00A0FE                     _sd001:
  3684                           	opt stack 0
  3685  00A0FE  34                 	db	52
  3686  00A0FF  03                 	db	3
  3687  00A100  0053               	dw	83
  3688  00A102  006F               	dw	111
  3689  00A104  006C               	dw	108
  3690  00A106  0064               	dw	100
  3691  00A108  0065               	dw	101
  3692  00A10A  0072               	dw	114
  3693  00A10C  006E               	dw	110
  3694  00A10E  0065               	dw	101
  3695  00A110  0072               	dw	114
  3696  00A112  0064               	dw	100
  3697  00A114  002E               	dw	46
  3698  00A116  0063               	dw	99
  3699  00A118  006F               	dw	111
  3700  00A11A  006D               	dw	109
  3701  00A11C  0020               	dw	32
  3702  00A11E  0020               	dw	32
  3703  00A120  0020               	dw	32
  3704  00A122  0020               	dw	32
  3705  00A124  0020               	dw	32
  3706  00A126  0020               	dw	32
  3707  00A128  0020               	dw	32
  3708  00A12A  0020               	dw	32
  3709  00A12C  0020               	dw	32
  3710  00A12E  0020               	dw	32
  3711  00A130  0020               	dw	32
  3712  00A132                     __end_of_sd001:
  3713                           	opt stack 0
  3714  00A132                     _sd002:
  3715                           	opt stack 0
  3716  00A132  2E                 	db	46
  3717  00A133  03                 	db	3
  3718  00A134  0053               	dw	83
  3719  00A136  0074               	dw	116
  3720  00A138  0065               	dw	101
  3721  00A13A  0070               	dw	112
  3722  00A13C  0070               	dw	112
  3723  00A13E  0065               	dw	101
  3724  00A140  0072               	dw	114
  3725  00A142  004D               	dw	77
  3726  00A144  006F               	dw	111
  3727  00A146  0074               	dw	116
  3728  00A148  006F               	dw	111
  3729  00A14A  0072               	dw	114
  3730  00A14C  0043               	dw	67
  3731  00A14E  006F               	dw	111
  3732  00A150  006E               	dw	110
  3733  00A152  0074               	dw	116
  3734  00A154  0072               	dw	114
  3735  00A156  006F               	dw	111
  3736  00A158  006C               	dw	108
  3737  00A15A  006C               	dw	108
  3738  00A15C  0065               	dw	101
  3739  00A15E  0072               	dw	114
  3740  00A160                     __end_of_sd002:
  3741                           	opt stack 0
  3742  00A160                     _inq_resp:
  3743                           	opt stack 0
  3744  00A160  00                 	db	0
  3745  00A161  80                 	db	128
  3746  00A162  04                 	db	4
  3747  00A163  02                 	db	2
  3748  00A164  20                 	db	32
  3749  00A165  00                 	db	0
  3750  00A166  00                 	db	0
  3751  00A167  00                 	db	0
  3752  00A168  4D                 	db	77
  3753  00A169  69                 	db	105
  3754  00A16A  63                 	db	99
  3755  00A16B  72                 	db	114
  3756  00A16C  6F                 	db	111
  3757  00A16D  63                 	db	99
  3758  00A16E  68                 	db	104
  3759  00A16F  70                 	db	112
  3760  00A170  4D                 	db	77
  3761  00A171  61                 	db	97
  3762  00A172  73                 	db	115
  3763  00A173  73                 	db	115
  3764  00A174  20                 	db	32
  3765  00A175  53                 	db	83
  3766  00A176  74                 	db	116
  3767  00A177  6F                 	db	111
  3768  00A178  72                 	db	114
  3769  00A179  61                 	db	97
  3770  00A17A  67                 	db	103
  3771  00A17B  65                 	db	101
  3772  00A17C  20                 	db	32
  3773  00A17D  20                 	db	32
  3774  00A17E  20                 	db	32
  3775  00A17F  20                 	db	32
  3776  00A180  30                 	db	48
  3777  00A181  30                 	db	48
  3778  00A182  30                 	db	48
  3779  00A183  31                 	db	49
  3780  00A184                     __end_of_inq_resp:
  3781                           	opt stack 0
  3782  00A184                     _hid_rpt01:
  3783                           	opt stack 0
  3784  00A184  06                 	db	6
  3785  00A185  00                 	db	0
  3786  00A186  FF                 	db	255
  3787  00A187  09                 	db	9
  3788  00A188  01                 	db	1
  3789  00A189  A1                 	db	161
  3790  00A18A  01                 	db	1
  3791  00A18B  19                 	db	25
  3792  00A18C  01                 	db	1
  3793  00A18D  29                 	db	41
  3794  00A18E  40                 	db	64
  3795  00A18F  15                 	db	21
  3796  00A190  00                 	db	0
  3797  00A191  26                 	db	38
  3798  00A192  FF                 	db	255
  3799  00A193  00                 	db	0
  3800  00A194  75                 	db	117
  3801  00A195  08                 	db	8
  3802  00A196  95                 	db	149
  3803  00A197  40                 	db	64
  3804  00A198  81                 	db	129
  3805  00A199  00                 	db	0
  3806  00A19A  19                 	db	25
  3807  00A19B  01                 	db	1
  3808  00A19C  29                 	db	41
  3809  00A19D  40                 	db	64
  3810  00A19E  91                 	db	145
  3811  00A19F  00                 	db	0
  3812  00A1A0  C0                 	db	192
  3813  00A1A1                     __end_of_hid_rpt01:
  3814                           	opt stack 0
  3815  00A1A1                     _sd003:
  3816                           	opt stack 0
  3817  00A1A1  1A                 	db	26
  3818  00A1A2  03                 	db	3
  3819  00A1A3  0031               	dw	49
  3820  00A1A5  0032               	dw	50
  3821  00A1A7  0033               	dw	51
  3822  00A1A9  0034               	dw	52
  3823  00A1AB  0035               	dw	53
  3824  00A1AD  0036               	dw	54
  3825  00A1AF  0037               	dw	55
  3826  00A1B1  0038               	dw	56
  3827  00A1B3  0039               	dw	57
  3828  00A1B5  0030               	dw	48
  3829  00A1B7  0039               	dw	57
  3830  00A1B9  0039               	dw	57
  3831  00A1BB                     __end_of_sd003:
  3832                           	opt stack 0
  3833  00A1BB                     _device_dsc:
  3834                           	opt stack 0
  3835  00A1BB  12                 	db	18
  3836  00A1BC  01                 	db	1
  3837  00A1BD  0200               	dw	512
  3838  00A1BF  00                 	db	0
  3839  00A1C0  00                 	db	0
  3840  00A1C1  00                 	db	0
  3841  00A1C2  08                 	db	8
  3842  00A1C3  04D8               	dw	1240
  3843  00A1C5  EDCF               	dw	60879
  3844  00A1C7  0100               	dw	256
  3845  00A1C9  01                 	db	1
  3846  00A1CA  02                 	db	2
  3847  00A1CB  00                 	db	0
  3848  00A1CC  01                 	db	1
  3849  00A1CD                     __end_of_device_dsc:
  3850                           	opt stack 0
  3851  00A1CD                     _bit_pattern_ae:
  3852                           	opt stack 0
  3853  00A1CD  0A                 	db	10
  3854  00A1CE  00                 	db	0
  3855  00A1CF  0E                 	db	14
  3856  00A1D0  01                 	db	1
  3857  00A1D1  0F                 	db	15
  3858  00A1D2  11                 	db	17
  3859  00A1D3  0F                 	db	15
  3860  00A1D4  00                 	db	0
  3861  00A1D5                     __end_of_bit_pattern_ae:
  3862                           	opt stack 0
  3863  00A1D5                     _bit_pattern_degree:
  3864                           	opt stack 0
  3865  00A1D5  18                 	db	24
  3866  00A1D6  18                 	db	24
  3867  00A1D7  00                 	db	0
  3868  00A1D8  00                 	db	0
  3869  00A1D9  00                 	db	0
  3870  00A1DA  00                 	db	0
  3871  00A1DB  00                 	db	0
  3872  00A1DC  00                 	db	0
  3873  00A1DD                     __end_of_bit_pattern_degree:
  3874                           	opt stack 0
  3875  00A1DD                     _bit_pattern_verticalbar:
  3876                           	opt stack 0
  3877  00A1DD  04                 	db	4
  3878  00A1DE  04                 	db	4
  3879  00A1DF  04                 	db	4
  3880  00A1E0  04                 	db	4
  3881  00A1E1  04                 	db	4
  3882  00A1E2  04                 	db	4
  3883  00A1E3  04                 	db	4
  3884  00A1E4  04                 	db	4
  3885  00A1E5                     __end_of_bit_pattern_verticalbar:
  3886                           	opt stack 0
  3887  00A1E5                     _flash_command_pagesize_528:
  3888                           	opt stack 0
  3889  00A1E5  3D                 	db	61
  3890  00A1E6  2A                 	db	42
  3891  00A1E7  80                 	db	128
  3892  00A1E8  A7                 	db	167
  3893  00A1E9                     __end_of_flash_command_pagesize_528:
  3894                           	opt stack 0
  3895  00A1E9                     _flash_command_pagesize_512:
  3896                           	opt stack 0
  3897  00A1E9  3D                 	db	61
  3898  00A1EA  2A                 	db	42
  3899  00A1EB  80                 	db	128
  3900  00A1EC  A6                 	db	166
  3901  00A1ED                     __end_of_flash_command_pagesize_512:
  3902                           	opt stack 0
  3903  00A1ED                     _sd000:
  3904                           	opt stack 0
  3905  00A1ED  04                 	db	4
  3906  00A1EE  03                 	db	3
  3907  00A1EF  0409               	dw	1033
  3908  00A1F1                     __end_of_sd000:
  3909                           	opt stack 0
  3910  0000                     _RPINR22	set	3837
  3911  0000                     _RPOR23	set	3799
  3912  0000                     _RPOR21	set	3797
  3913  0000                     _RPINR21	set	3836
  3914  0000                     _RPOR4	set	3780
  3915  0000                     _PPSCONbits	set	3775
  3916  0000                     _CCPTMRS0bits	set	3922
  3917  0000                     _ANCON0bits	set	3912
  3918  0000                     _ANCON1bits	set	3913
  3919  0000                     _UEP0bits	set	3878
  3920  0000                     _UIEbits	set	3894
  3921  0000                     _UADDR	set	3896
  3922  0000                     _UIE	set	3894
  3923  0000                     _UEIE	set	3895
  3924  0000                     _UCFG	set	3897
  3925  0000                     _UEP1	set	3879
  3926  0000                     _UEP0	set	3878
  3927  0000                     _PORTA	set	3968
  3928  0000                     _PORTE	set	3972
  3929  0000                     _TMR2	set	4044
  3930  0000                     _PIE1bits	set	3997
  3931  0000                     _CCPR1L	set	4027
  3932  0000                     _PR2	set	4043
  3933  0000                     _T2CONbits	set	4042
  3934  0000                     _CCP1CONbits	set	4026
  3935  0000                     _RXADDRL	set	3945
  3936  0000                     _RXADDRH	set	3944
  3937  0000                     _DMABCL	set	3943
  3938  0000                     _DMABCH	set	3942
  3939  0000                     _TXADDRL	set	3947
  3940  0000                     _TXADDRH	set	3946
  3941  0000                     _DMACON2bits	set	3974
  3942  0000                     _DMACON1bits	set	3976
  3943  0000                     _SSP2CON1bits	set	3954
  3944  0000                     _SSP2STATbits	set	3955
  3945  0000                     _PORTDbits	set	3971
  3946  0000                     _PORTEbits	set	3972
  3947  0000                     _SSP1BUF	set	4041
  3948  0000                     _SSP1CON2bits	set	4037
  3949  0000                     _SSP1CON1bits	set	4038
  3950  0000                     _SSP1ADD	set	4040
  3951  0000                     _SSP1STATbits	set	4039
  3952  0000                     _PORTAbits	set	3968
  3953  0000                     _T0CONbits	set	4053
  3954  0000                     _TRISEbits	set	3990
  3955  0000                     _EECON2	set	4007
  3956  0000                     _LATBbits	set	3978
  3957  0000                     _LATAbits	set	3977
  3958  0000                     _TRISAbits	set	3986
  3959  0000                     _LATCbits	set	3979
  3960  0000                     _TRISCbits	set	3988
  3961  0000                     _TRISBbits	set	3987
  3962  0000                     _LATDbits	set	3980
  3963  0000                     _TRISDbits	set	3989
  3964  0000                     _TMR0L	set	4054
  3965  0000                     _TMR0H	set	4055
  3966  0000                     _PIR1bits	set	3998
  3967  0000                     _OSCCON	set	4051
  3968  0000                     _OSCTUNEbits	set	3995
  3969  0000                     _INTCONbits	set	4082
  3970  0000                     _IPR2bits	set	4002
  3971  0000                     _RCONbits	set	4048
  3972  0000                     _UCON	set	3941
  3973  0000                     _USTAT	set	3940
  3974  0000                     _PIR2bits	set	4001
  3975  0000                     _UIRbits	set	3938
  3976  0000                     _UCONbits	set	3941
  3977  0000                     _UIR	set	3938
  3978  0000                     _UEIR	set	3939
  3979  0000                     _PIE2bits	set	4000
  3980  00A1F1                     STR_18:
  3981                           
  3982                           ; BSR set to: 1
  3983  00A1F1  68                 	db	104	;'h'
  3984  00A1F2  65                 	db	101	;'e'
  3985  00A1F3  6C                 	db	108	;'l'
  3986  00A1F4  6C                 	db	108	;'l'
  3987  00A1F5  6F                 	db	111	;'o'
  3988  00A1F6  20                 	db	32
  3989  00A1F7  77                 	db	119	;'w'
  3990  00A1F8  6F                 	db	111	;'o'
  3991  00A1F9  72                 	db	114	;'r'
  3992  00A1FA  6C                 	db	108	;'l'
  3993  00A1FB  64                 	db	100	;'d'
  3994  00A1FC  21                 	db	33
  3995  00A1FD  00                 	db	0
  3996  00A1FE                     STR_15:
  3997                           
  3998                           ; BSR set to: 1
  3999  00A1FE  53                 	db	83	;'S'
  4000  00A1FF  6F                 	db	111	;'o'
  4001  00A200  6C                 	db	108	;'l'
  4002  00A201  61                 	db	97	;'a'
  4003  00A202  72                 	db	114	;'r'
  4004  00A203  43                 	db	67	;'C'
  4005  00A204  68                 	db	104	;'h'
  4006  00A205  61                 	db	97	;'a'
  4007  00A206  72                 	db	114	;'r'
  4008  00A207  67                 	db	103	;'g'
  4009  00A208  72                 	db	114	;'r'
  4010  00A209  00                 	db	0
  4011  00A20A                     STR_16:
  4012                           
  4013                           ; BSR set to: 1
  4014  00A20A  46                 	db	70	;'F'
  4015  00A20B  49                 	db	73	;'I'
  4016  00A20C  4C                 	db	76	;'L'
  4017  00A20D  45                 	db	69	;'E'
  4018  00A20E  20                 	db	32
  4019  00A20F  20                 	db	32
  4020  00A210  20                 	db	32
  4021  00A211  20                 	db	32
  4022  00A212  00                 	db	0
  4023  00A213                     STR_7:
  4024                           
  4025                           ; BSR set to: 1
  4026  00A213  4D                 	db	77	;'M'
  4027  00A214  53                 	db	83	;'S'
  4028  00A215  44                 	db	68	;'D'
  4029  00A216  4F                 	db	79	;'O'
  4030  00A217  53                 	db	83	;'S'
  4031  00A218  35                 	db	53	;'5'
  4032  00A219  2E                 	db	46
  4033  00A21A  30                 	db	48	;'0'
  4034  00A21B  00                 	db	0
  4035  00A21C                     STR_1:
  4036                           
  4037                           ; BSR set to: 1
  4038  00A21C  20                 	db	32
  4039  00A21D  20                 	db	32
  4040  00A21E  20                 	db	32
  4041  00A21F  20                 	db	32
  4042  00A220  20                 	db	32
  4043  00A221  20                 	db	32
  4044  00A222  20                 	db	32
  4045  00A223  20                 	db	32
  4046  00A224  00                 	db	0
  4047  00A225                     STR_2:
  4048                           
  4049                           ; BSR set to: 1
  4050  00A225  43                 	db	67	;'C'
  4051  00A226  61                 	db	97	;'a'
  4052  00A227  6E                 	db	110	;'n'
  4053  00A228  63                 	db	99	;'c'
  4054  00A229  65                 	db	101	;'e'
  4055  00A22A  6C                 	db	108	;'l'
  4056  00A22B  00                 	db	0
  4057  00A22C                     STR_6:
  4058                           
  4059                           ; BSR set to: 1
  4060  00A22C  53                 	db	83	;'S'
  4061  00A22D  74                 	db	116	;'t'
  4062  00A22E  6F                 	db	111	;'o'
  4063  00A22F  70                 	db	112	;'p'
  4064  00A230  20                 	db	32
  4065  00A231  00                 	db	0
  4066  00A232                     STR_17:
  4067                           
  4068                           ; BSR set to: 1
  4069  00A232  54                 	db	84	;'T'
  4070  00A233  58                 	db	88	;'X'
  4071  00A234  54                 	db	84	;'T'
  4072  00A235  00                 	db	0
  4073  0000                     
  4074                           ; #config settings
  4075  00A236  00                 	db	0	; dummy byte at the end
  4076  0000                     
  4077                           	psect	cinit
  4078  01117C                     __pcinit:
  4079                           	opt stack 0
  4080  01117C                     start_initialization:
  4081                           	opt stack 0
  4082  01117C                     __initialization:
  4083                           	opt stack 0
  4084                           
  4085                           ; Initialize objects allocated to BANK2 (80 bytes)
  4086                           ; load TBLPTR registers with __pidataBANK2
  4087  01117C  0EFE               	movlw	low __pidataBANK2
  4088  01117E  6EF6               	movwf	tblptrl,c
  4089  011180  0E20               	movlw	high __pidataBANK2
  4090  011182  6EF7               	movwf	tblptrh,c
  4091  011184  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4092  011186  6EF8               	movwf	tblptru,c
  4093  011188  EE02  F078         	lfsr	0,__pdataBANK2
  4094  01118C  EE10 F050          	lfsr	1,80
  4095  011190                     copy_data0:
  4096  011190  0009               	tblrd		*+
  4097  011192  CFF5 FFEE          	movff	tablat,postinc0
  4098  011196  50E5               	movf	postdec1,w,c
  4099  011198  50E1               	movf	fsr1l,w,c
  4100  01119A  E1FA               	bnz	copy_data0
  4101                           
  4102                           ; Initialize objects allocated to BANK1 (55 bytes)
  4103                           ; load TBLPTR registers with __pidataBANK1
  4104  01119C  0E3C               	movlw	low __pidataBANK1
  4105  01119E  6EF6               	movwf	tblptrl,c
  4106  0111A0  0E26               	movlw	high __pidataBANK1
  4107  0111A2  6EF7               	movwf	tblptrh,c
  4108  0111A4  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4109  0111A6  6EF8               	movwf	tblptru,c
  4110  0111A8  EE01  F098         	lfsr	0,__pdataBANK1
  4111  0111AC  EE10 F037          	lfsr	1,55
  4112  0111B0                     copy_data1:
  4113  0111B0  0009               	tblrd		*+
  4114  0111B2  CFF5 FFEE          	movff	tablat,postinc0
  4115  0111B6  50E5               	movf	postdec1,w,c
  4116  0111B8  50E1               	movf	fsr1l,w,c
  4117  0111BA  E1FA               	bnz	copy_data1
  4118                           
  4119                           ; Clear objects allocated to BIGRAMll (512 bytes)
  4120  0111BC  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4121  0111C0  EE12 F000          	lfsr	1,512
  4122  0111C4                     clear_0:
  4123  0111C4  6AEE               	clrf	postinc0,c
  4124  0111C6  50E5               	movf	postdec1,w,c
  4125  0111C8  50E1               	movf	fsr1l,w,c
  4126  0111CA  E1FC               	bnz	clear_0
  4127  0111CC  50E2               	movf	fsr1h,w,c
  4128  0111CE  E1FA               	bnz	clear_0
  4129                           
  4130                           ; Clear objects allocated to BANK3 (64 bytes)
  4131  0111D0  EE03  F000         	lfsr	0,__pbssBANK3
  4132  0111D4  0E40               	movlw	64
  4133  0111D6                     clear_1:
  4134  0111D6  6AEE               	clrf	postinc0,c
  4135  0111D8  06E8               	decf	wreg,f,c
  4136  0111DA  E1FD               	bnz	clear_1
  4137                           
  4138                           ; Clear objects allocated to BANK2 (120 bytes)
  4139  0111DC  EE02  F000         	lfsr	0,__pbssBANK2
  4140  0111E0  0E78               	movlw	120
  4141  0111E2                     clear_2:
  4142  0111E2  6AEE               	clrf	postinc0,c
  4143  0111E4  06E8               	decf	wreg,f,c
  4144  0111E6  E1FD               	bnz	clear_2
  4145                           
  4146                           ; Clear objects allocated to BANK1 (152 bytes)
  4147  0111E8  EE01  F000         	lfsr	0,__pbssBANK1
  4148  0111EC  0E98               	movlw	152
  4149  0111EE                     clear_3:
  4150  0111EE  6AEE               	clrf	postinc0,c
  4151  0111F0  06E8               	decf	wreg,f,c
  4152  0111F2  E1FD               	bnz	clear_3
  4153                           
  4154                           ; Clear objects allocated to BANK0 (54 bytes)
  4155  0111F4  EE00  F0CA         	lfsr	0,__pbssBANK0
  4156  0111F8  0E36               	movlw	54
  4157  0111FA                     clear_4:
  4158  0111FA  6AEE               	clrf	postinc0,c
  4159  0111FC  06E8               	decf	wreg,f,c
  4160  0111FE  E1FD               	bnz	clear_4
  4161                           
  4162                           ; Clear objects allocated to COMRAM (45 bytes)
  4163  011200  EE00  F001         	lfsr	0,__pbssCOMRAM
  4164  011204  0E2D               	movlw	45
  4165  011206                     clear_5:
  4166  011206  6AEE               	clrf	postinc0,c
  4167  011208  06E8               	decf	wreg,f,c
  4168  01120A  E1FD               	bnz	clear_5
  4169  01120C                     end_of_initialization:
  4170                           	opt stack 0
  4171  01120C                     __end_of__initialization:
  4172                           	opt stack 0
  4173  01120C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4174  01120E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4175  011210  0100               	movlb	0
  4176  011212  EFC8  F074         	goto	_main	;jump to C main() function
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           postdec1	equ	0xFE5
  4184                           fsr1h	equ	0xFE2
  4185                           fsr1l	equ	0xFE1
  4186                           
  4187                           	psect	bssCOMRAM
  4188  000001                     __pbssCOMRAM:
  4189                           	opt stack 0
  4190  000001                     _outPipes:
  4191                           	opt stack 0
  4192  000001                     	ds	9
  4193  00000A                     _inPipes:
  4194                           	opt stack 0
  4195  00000A                     	ds	6
  4196  000010                     _pBDTEntryIn:
  4197                           	opt stack 0
  4198  000010                     	ds	6
  4199  000016                     _motor_current_stepcount:
  4200                           	opt stack 0
  4201  000016                     	ds	4
  4202  00001A                     _TransferLength:
  4203                           	opt stack 0
  4204  00001A                     	ds	2
  4205  00001C                     _pBDTEntryEP0OutNext:
  4206                           	opt stack 0
  4207  00001C                     	ds	2
  4208  00001E                     _pBDTEntryEP0OutCurrent:
  4209                           	opt stack 0
  4210  00001E                     	ds	2
  4211  000020                     _enc2:
  4212                           	opt stack 0
  4213  000020                     	ds	1
  4214  000021                     _enc1:
  4215                           	opt stack 0
  4216  000021                     	ds	1
  4217  000022                     _motor_cue_write_index:
  4218                           	opt stack 0
  4219  000022                     	ds	1
  4220  000023                     _motor_cue_read_index:
  4221                           	opt stack 0
  4222  000023                     	ds	1
  4223  000024                     _power_state:
  4224                           	opt stack 0
  4225  000024                     	ds	1
  4226  000025                     _MSDWriteState:
  4227                           	opt stack 0
  4228  000025                     	ds	1
  4229  000026                     _USBDeferStatusStagePacket:
  4230                           	opt stack 0
  4231  000026                     	ds	1
  4232  000027                     _USBStatusStageTimeoutCounter:
  4233                           	opt stack 0
  4234  000027                     	ds	1
  4235  000028                     _endpoint_number:
  4236                           	opt stack 0
  4237  000028                     	ds	1
  4238  000029                     _controlTransferState:
  4239                           	opt stack 0
  4240  000029                     	ds	1
  4241  00002A                     _shortPacketStatus:
  4242                           	opt stack 0
  4243  00002A                     	ds	1
  4244  00002B                     _USBDeviceState:
  4245                           	opt stack 0
  4246  00002B                     	ds	1
  4247  00002C                     _USTATcopy:
  4248                           	opt stack 0
  4249  00002C                     	ds	1
  4250  00002D                     _USBActiveConfiguration:
  4251                           	opt stack 0
  4252  00002D                     	ds	1
  4253                           tblptru	equ	0xFF8
  4254                           tblptrh	equ	0xFF7
  4255                           tblptrl	equ	0xFF6
  4256                           tablat	equ	0xFF5
  4257                           postinc0	equ	0xFEE
  4258                           wreg	equ	0xFE8
  4259                           postdec1	equ	0xFE5
  4260                           fsr1h	equ	0xFE2
  4261                           fsr1l	equ	0xFE1
  4262                           
  4263                           	psect	bssBANK0
  4264  0000CA                     __pbssBANK0:
  4265                           	opt stack 0
  4266  0000CA                     _motor_current_speed:
  4267                           	opt stack 0
  4268  0000CA                     	ds	2
  4269  0000CC                     _USBMSDInHandle:
  4270                           	opt stack 0
  4271  0000CC                     	ds	2
  4272  0000CE                     _USBMSDOutHandle:
  4273                           	opt stack 0
  4274  0000CE                     	ds	2
  4275  0000D0                     _MSDHostNoData:
  4276                           	opt stack 0
  4277  0000D0                     	ds	1
  4278  0000D1                     _MSDCommandState:
  4279                           	opt stack 0
  4280  0000D1                     	ds	1
  4281  0000D2                     _MSD_State:
  4282                           	opt stack 0
  4283  0000D2                     	ds	1
  4284  0000D3                     _os:
  4285                           	opt stack 0
  4286  0000D3                     	ds	45
  4287                           tblptru	equ	0xFF8
  4288                           tblptrh	equ	0xFF7
  4289                           tblptrl	equ	0xFF6
  4290                           tablat	equ	0xFF5
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           
  4297                           	psect	bssBANK1
  4298  000100                     __pbssBANK1:
  4299                           	opt stack 0
  4300  000100                     _gblCBW:
  4301                           	opt stack 0
  4302  000100                     	ds	31
  4303  00011F                     _gblSenseData:
  4304                           	opt stack 0
  4305  00011F                     	ds	18
  4306  000131                     _pBDTEntryOut:
  4307                           	opt stack 0
  4308  000131                     	ds	6
  4309  000137                     _motor_next_speed_check:
  4310                           	opt stack 0
  4311  000137                     	ds	4
  4312  00013B                     _motor_final_stepcount:
  4313                           	opt stack 0
  4314  00013B                     	ds	4
  4315  00013F                     _gblBLKLen:
  4316                           	opt stack 0
  4317  00013F                     	ds	4
  4318  000143                     _gblNumBLKS:
  4319                           	opt stack 0
  4320  000143                     	ds	4
  4321  000147                     _LBA:
  4322                           	opt stack 0
  4323  000147                     	ds	4
  4324  00014B                     _USB1msTickCount:
  4325                           	opt stack 0
  4326  00014B                     	ds	4
  4327  00014F                     _config_external:
  4328                           	opt stack 0
  4329  00014F                     	ds	3
  4330  000152                     _config_internal:
  4331                           	opt stack 0
  4332  000152                     	ds	3
  4333  000155                     _ep_data_out:
  4334                           	opt stack 0
  4335  000155                     	ds	3
  4336  000158                     _ep_data_in:
  4337                           	opt stack 0
  4338  000158                     	ds	3
  4339  00015B                     _motor_maximum_speed:
  4340                           	opt stack 0
  4341  00015B                     	ds	2
  4342  00015D                     _USBInHandle:
  4343                           	opt stack 0
  4344  00015D                     	ds	2
  4345  00015F                     _USBOutHandle:
  4346                           	opt stack 0
  4347  00015F                     	ds	2
  4348  000161                     _gblMediaPresent:
  4349                           	opt stack 0
  4350  000161                     	ds	2
  4351  000163                     _MSBBufferIndex:
  4352                           	opt stack 0
  4353  000163                     	ds	2
  4354  000165                     _ptrNextData:
  4355                           	opt stack 0
  4356  000165                     	ds	2
  4357  000167                     _pDst:
  4358                           	opt stack 0
  4359  000167                     	ds	2
  4360  000169                     _motor_direction:
  4361                           	opt stack 0
  4362  000169                     	ds	1
  4363  00016A                     _motor_mode:
  4364                           	opt stack 0
  4365  00016A                     	ds	1
  4366  00016B                     _active_configuration:
  4367                           	opt stack 0
  4368  00016B                     	ds	1
  4369  00016C                     _MSDCBWValid:
  4370                           	opt stack 0
  4371  00016C                     	ds	1
  4372  00016D                     _SoftDetach:
  4373                           	opt stack 0
  4374  00016D                     	ds	1
  4375  00016E                     _gblCBWLength:
  4376                           	opt stack 0
  4377  00016E                     	ds	1
  4378  00016F                     _MSDRetryAttempt:
  4379                           	opt stack 0
  4380  00016F                     	ds	1
  4381  000170                     _MSDReadState:
  4382                           	opt stack 0
  4383  000170                     	ds	1
  4384  000171                     _USBTicksSinceSuspendEnd:
  4385                           	opt stack 0
  4386  000171                     	ds	1
  4387  000172                     _USBDeferOUTDataStagePackets:
  4388                           	opt stack 0
  4389  000172                     	ds	1
  4390  000173                     _USBDeferINDataStagePackets:
  4391                           	opt stack 0
  4392  000173                     	ds	1
  4393  000174                     _USBStatusStageEnabledFlag2:
  4394                           	opt stack 0
  4395  000174                     	ds	1
  4396  000175                     _USBStatusStageEnabledFlag1:
  4397                           	opt stack 0
  4398  000175                     	ds	1
  4399  000176                     _BothEP0OutUOWNsSet:
  4400                           	opt stack 0
  4401  000176                     	ds	1
  4402  000177                     _USBBusIsSuspended:
  4403                           	opt stack 0
  4404  000177                     	ds	1
  4405  000178                     _RemoteWakeup:
  4406                           	opt stack 0
  4407  000178                     	ds	1
  4408  000179                     _config:
  4409                           	opt stack 0
  4410  000179                     	ds	22
  4411  00018F                     _mediaInformation:
  4412                           	opt stack 0
  4413  00018F                     	ds	5
  4414  000194                     _USBAlternateInterface:
  4415                           	opt stack 0
  4416  000194                     	ds	2
  4417  000196                     _active_protocol:
  4418                           	opt stack 0
  4419  000196                     	ds	1
  4420  000197                     _idle_rate:
  4421                           	opt stack 0
  4422  000197                     	ds	1
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           postinc0	equ	0xFEE
  4428                           wreg	equ	0xFE8
  4429                           postdec1	equ	0xFE5
  4430                           fsr1h	equ	0xFE2
  4431                           fsr1l	equ	0xFE1
  4432                           
  4433                           	psect	dataBANK1
  4434  000198                     __pdataBANK1:
  4435                           	opt stack 0
  4436  000198                     _LUN:
  4437                           	opt stack 0
  4438  000198                     	ds	29
  4439  0001B5                     i2c_display_init@F6909:
  4440                           	opt stack 0
  4441  0001B5                     	ds	9
  4442  0001BE                     __i2c_display_send_init_sequence@F6906:
  4443                           	opt stack 0
  4444  0001BE                     	ds	9
  4445  0001C7                     	ds	8
  4446                           tblptru	equ	0xFF8
  4447                           tblptrh	equ	0xFF7
  4448                           tblptrl	equ	0xFF6
  4449                           tablat	equ	0xFF5
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           postdec1	equ	0xFE5
  4453                           fsr1h	equ	0xFE2
  4454                           fsr1l	equ	0xFE1
  4455                           
  4456                           	psect	bssBANK2
  4457  000200                     __pbssBANK2:
  4458                           	opt stack 0
  4459  000200                     _motor_command_cue:
  4460                           	opt stack 0
  4461  000200                     	ds	56
  4462  000238                     _ReceivedDataBuffer:
  4463                           	opt stack 0
  4464  000238                     	ds	64
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           postinc0	equ	0xFEE
  4470                           wreg	equ	0xFE8
  4471                           postdec1	equ	0xFE5
  4472                           fsr1h	equ	0xFE2
  4473                           fsr1l	equ	0xFE1
  4474                           
  4475                           	psect	dataBANK2
  4476  000278                     __pdataBANK2:
  4477                           	opt stack 0
  4478  000278                     _display_content:
  4479                           	opt stack 0
  4480  000278                     	ds	80
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           postinc0	equ	0xFEE
  4486                           wreg	equ	0xFE8
  4487                           postdec1	equ	0xFE5
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           
  4491                           	psect	bssBANK3
  4492  000300                     __pbssBANK3:
  4493                           	opt stack 0
  4494  000300                     _ToSendDataBuffer:
  4495                           	opt stack 0
  4496  000300                     	ds	64
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1h	equ	0xFE2
  4505                           fsr1l	equ	0xFE1
  4506                           
  4507                           	psect	bssBIGRAMll
  4508  000800                     __pbssBIGRAMll:
  4509                           	opt stack 0
  4510  000800                     _buffer:
  4511                           	opt stack 0
  4512  000800                     	ds	512
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           postinc0	equ	0xFEE
  4518                           wreg	equ	0xFE8
  4519                           postdec1	equ	0xFE5
  4520                           fsr1h	equ	0xFE2
  4521                           fsr1l	equ	0xFE1
  4522                           
  4523                           	psect	cstackBANK1
  4524  0001CF                     __pcstackBANK1:
  4525                           	opt stack 0
  4526  0001CF                     main@tmp:
  4527                           	opt stack 0
  4528                           
  4529                           ; 4 bytes @ 0x0
  4530  0001CF                     	ds	4
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           postdec1	equ	0xFE5
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           
  4541                           	psect	cstackBANK0
  4542  000060                     __pcstackBANK0:
  4543                           	opt stack 0
  4544  000060                     ??__i2c_wait_idle:
  4545  000060                     ??__display_clear:
  4546  000060                     ??_motor_stop:
  4547  000060                     ??__divide_jump_size_increment:
  4548  000060                     ??__divide_jump_size_decrement:
  4549  000060                     ?_USBTransferOnePacket:
  4550                           	opt stack 0
  4551  000060                     ?_ExternalFlash_MediaInitialize:
  4552                           	opt stack 0
  4553  000060                     ?_ExternalFlash_SectorSizeRead:
  4554                           	opt stack 0
  4555  000060                     ?_strlen:
  4556                           	opt stack 0
  4557  000060                     ?__encoder_next_setup_stepsize:
  4558                           	opt stack 0
  4559  000060                     ?__encoder_next_arc_step_size:
  4560                           	opt stack 0
  4561  000060                     ?___lwdiv:
  4562                           	opt stack 0
  4563  000060                     ?___lwmod:
  4564                           	opt stack 0
  4565  000060                     ?_ExternalFlash_CapacityRead:
  4566                           	opt stack 0
  4567  000060                     ?___fladd:
  4568                           	opt stack 0
  4569  000060                     ?___lmul:
  4570                           	opt stack 0
  4571  000060                     ?___aldiv:
  4572                           	opt stack 0
  4573  000060                     ?___almod:
  4574                           	opt stack 0
  4575  000060                     ?___fltol:
  4576                           	opt stack 0
  4577  000060                     ?___xxtofl:
  4578                           	opt stack 0
  4579  000060                     USBTransferOnePacket@dir:
  4580                           	opt stack 0
  4581  000060                     USBStallEndpoint@dir:
  4582                           	opt stack 0
  4583  000060                     SYSTEM_Initialize@state:
  4584                           	opt stack 0
  4585  000060                     __i2c_send@dat:
  4586                           	opt stack 0
  4587  000060                     display_get_character@position:
  4588                           	opt stack 0
  4589  000060                     __encoder_next_divide_step_size@old_stepsize:
  4590                           	opt stack 0
  4591  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  4592                           	opt stack 0
  4593  000060                     ExternalFlash_MediaInitialize@config:
  4594                           	opt stack 0
  4595  000060                     ExternalFlash_SectorSizeRead@config:
  4596                           	opt stack 0
  4597  000060                     ExternalFlash_CapacityRead@config:
  4598                           	opt stack 0
  4599  000060                     ExternalFlash_MediaDetect@config:
  4600                           	opt stack 0
  4601  000060                     ExternalFlash_WriteProtectStateGet@config:
  4602                           	opt stack 0
  4603  000060                     ExternalFlash_SectorWrite@config:
  4604                           	opt stack 0
  4605  000060                     __get_mbr@idx:
  4606                           	opt stack 0
  4607  000060                     __get_fbr@idx:
  4608                           	opt stack 0
  4609  000060                     __get_fat@idx:
  4610                           	opt stack 0
  4611  000060                     __get_root@idx:
  4612                           	opt stack 0
  4613  000060                     __get_data@idx:
  4614                           	opt stack 0
  4615  000060                     spi_tx@data:
  4616                           	opt stack 0
  4617  000060                     spi_tx_tx@command:
  4618                           	opt stack 0
  4619  000060                     spi_tx_rx@command:
  4620                           	opt stack 0
  4621  000060                     __fill_buffer_get_mode_details@outBuffer:
  4622                           	opt stack 0
  4623  000060                     motor_change_speed@new_speed:
  4624                           	opt stack 0
  4625  000060                     __encoder_next_setup_stepsize@old_stepsize:
  4626                           	opt stack 0
  4627  000060                     __encoder_next_arc_step_size@old_stepsize:
  4628                           	opt stack 0
  4629  000060                     ___lwdiv@dividend:
  4630                           	opt stack 0
  4631  000060                     ___lwmod@dividend:
  4632                           	opt stack 0
  4633  000060                     memcpy@d1:
  4634                           	opt stack 0
  4635  000060                     memset@p1:
  4636                           	opt stack 0
  4637  000060                     strlen@s:
  4638                           	opt stack 0
  4639  000060                     __spi_init@details:
  4640                           	opt stack 0
  4641  000060                     __motor_run@distance_in_steps:
  4642                           	opt stack 0
  4643  000060                     ___lmul@multiplier:
  4644                           	opt stack 0
  4645  000060                     ___aldiv@dividend:
  4646                           	opt stack 0
  4647  000060                     ___almod@dividend:
  4648                           	opt stack 0
  4649  000060                     ___fltol@f1:
  4650                           	opt stack 0
  4651  000060                     ___fladd@b:
  4652                           	opt stack 0
  4653  000060                     ___xxtofl@val:
  4654                           	opt stack 0
  4655                           
  4656                           ; 4 bytes @ 0x0
  4657  000060                     	ds	1
  4658  000061                     ??_USBStallEndpoint:
  4659  000061                     ??_display_get_character:
  4660  000061                     USBTransferOnePacket@data:
  4661                           	opt stack 0
  4662  000061                     SYSTEM_Initialize@pll_startup_counter:
  4663                           	opt stack 0
  4664                           
  4665                           ; 2 bytes @ 0x1
  4666  000061                     	ds	1
  4667  000062                     ??_MSDComputeDeviceInAndResidue:
  4668  000062                     ??_strlen:
  4669  000062                     ??__fill_buffer_get_mode_details:
  4670  000062                     ??__get_mbr:
  4671  000062                     ??__get_fbr:
  4672  000062                     ??__get_fat:
  4673  000062                     ??__get_root:
  4674  000062                     ??__encoder_next_setup_stepsize:
  4675  000062                     ??__encoder_next_arc_step_size:
  4676  000062                     __display_clear@row:
  4677                           	opt stack 0
  4678  000062                     spi_tx@length:
  4679                           	opt stack 0
  4680  000062                     spi_tx_tx@command_length:
  4681                           	opt stack 0
  4682  000062                     spi_tx_rx@command_length:
  4683                           	opt stack 0
  4684  000062                     ___lwdiv@divisor:
  4685                           	opt stack 0
  4686  000062                     ___lwmod@divisor:
  4687                           	opt stack 0
  4688  000062                     memcpy@s1:
  4689                           	opt stack 0
  4690  000062                     memset@c:
  4691                           	opt stack 0
  4692  000062                     ExternalFlash_SectorWrite@sector_addr:
  4693                           	opt stack 0
  4694                           
  4695                           ; 4 bytes @ 0x2
  4696  000062                     	ds	1
  4697  000063                     USBTransferOnePacket@len:
  4698                           	opt stack 0
  4699  000063                     __display_clear@col:
  4700                           	opt stack 0
  4701  000063                     display_get_character@line:
  4702                           	opt stack 0
  4703  000063                     spi_init@configuration:
  4704                           	opt stack 0
  4705  000063                     SYSTEM_Initialize@pll_startup_counter_3114:
  4706                           	opt stack 0
  4707                           
  4708                           ; 2 bytes @ 0x3
  4709  000063                     	ds	1
  4710  000064                     ??_USBTransferOnePacket:
  4711  000064                     ??_spi_tx:
  4712  000064                     ??___fltol:
  4713  000064                     ??___xxtofl:
  4714  000064                     ___lwdiv@counter:
  4715                           	opt stack 0
  4716  000064                     ___lwmod@counter:
  4717                           	opt stack 0
  4718  000064                     spi_tx_tx@data:
  4719                           	opt stack 0
  4720  000064                     spi_tx_rx@data:
  4721                           	opt stack 0
  4722  000064                     __fill_buffer_get_display@outBuffer:
  4723                           	opt stack 0
  4724  000064                     __motor_run@speed:
  4725                           	opt stack 0
  4726  000064                     memcpy@n:
  4727                           	opt stack 0
  4728  000064                     memset@n:
  4729                           	opt stack 0
  4730  000064                     strlen@cp:
  4731                           	opt stack 0
  4732  000064                     ___lmul@multiplicand:
  4733                           	opt stack 0
  4734  000064                     ___aldiv@divisor:
  4735                           	opt stack 0
  4736  000064                     ___almod@divisor:
  4737                           	opt stack 0
  4738  000064                     ___fladd@a:
  4739                           	opt stack 0
  4740                           
  4741                           ; 4 bytes @ 0x4
  4742  000064                     	ds	1
  4743  000065                     USBStallEndpoint@ep:
  4744                           	opt stack 0
  4745  000065                     __i2c_write@data:
  4746                           	opt stack 0
  4747  000065                     i2c_display_write_fixed@data:
  4748                           	opt stack 0
  4749  000065                     ___lwdiv@quotient:
  4750                           	opt stack 0
  4751                           
  4752                           ; 2 bytes @ 0x5
  4753  000065                     	ds	1
  4754  000066                     ??__motor_run:
  4755  000066                     __fill_buffer_get_display@secondHalf:
  4756                           	opt stack 0
  4757  000066                     memcpy@tmp:
  4758                           	opt stack 0
  4759  000066                     USBStallEndpoint@p:
  4760                           	opt stack 0
  4761  000066                     ExternalFlash_SectorWrite@buffer:
  4762                           	opt stack 0
  4763  000066                     spi_tx_tx@data_length:
  4764                           	opt stack 0
  4765  000066                     spi_tx_rx@data_length:
  4766                           	opt stack 0
  4767  000066                     memset@p:
  4768                           	opt stack 0
  4769                           
  4770                           ; 2 bytes @ 0x6
  4771  000066                     	ds	1
  4772  000067                     ??__fill_buffer_get_display:
  4773  000067                     __i2c_write@length:
  4774                           	opt stack 0
  4775  000067                     i2c_display_write_fixed@length:
  4776                           	opt stack 0
  4777  000067                     utoa@buf:
  4778                           	opt stack 0
  4779  000067                     memcpy@d:
  4780                           	opt stack 0
  4781                           
  4782                           ; 2 bytes @ 0x7
  4783  000067                     	ds	1
  4784  000068                     ??_spi_tx_rx:
  4785  000068                     ??_spi_tx_tx:
  4786  000068                     ??___fladd:
  4787  000068                     USBDeviceInit@i:
  4788                           	opt stack 0
  4789  000068                     USBTransferOnePacket@ep:
  4790                           	opt stack 0
  4791  000068                     MSDErrorHandler@ErrorCase:
  4792                           	opt stack 0
  4793  000068                     __i2c_write@slave_address:
  4794                           	opt stack 0
  4795  000068                     i2c_display_write_fixed@pos:
  4796                           	opt stack 0
  4797  000068                     __flash_wakeup@command:
  4798                           	opt stack 0
  4799  000068                     ExternalFlash_SectorWrite@allowWriteToZero:
  4800                           	opt stack 0
  4801  000068                     ___aldiv@counter:
  4802                           	opt stack 0
  4803  000068                     ___almod@counter:
  4804                           	opt stack 0
  4805  000068                     ___fltol@sign1:
  4806                           	opt stack 0
  4807  000068                     ___xxtofl@sign:
  4808                           	opt stack 0
  4809  000068                     ___lmul@product:
  4810                           	opt stack 0
  4811                           
  4812                           ; 4 bytes @ 0x8
  4813  000068                     	ds	1
  4814  000069                     MSDErrorHandler@OldMSD_State:
  4815                           	opt stack 0
  4816  000069                     __i2c_write@cntr:
  4817                           	opt stack 0
  4818  000069                     ___aldiv@sign:
  4819                           	opt stack 0
  4820  000069                     ___almod@sign:
  4821                           	opt stack 0
  4822  000069                     ___fltol@exp1:
  4823                           	opt stack 0
  4824  000069                     ___xxtofl@exp:
  4825                           	opt stack 0
  4826  000069                     USBTransferOnePacket@handle:
  4827                           	opt stack 0
  4828  000069                     utoa@val:
  4829                           	opt stack 0
  4830  000069                     memcpy@s:
  4831                           	opt stack 0
  4832                           
  4833                           ; 2 bytes @ 0x9
  4834  000069                     	ds	1
  4835  00006A                     ??_i2c_display_init:
  4836  00006A                     __ic2_display_set_ddram_address@address:
  4837                           	opt stack 0
  4838  00006A                     __motor_run@direction:
  4839                           	opt stack 0
  4840  00006A                     __ic2_display_set_cgram_address@data_array:
  4841                           	opt stack 0
  4842  00006A                     MSDCheckForErrorCases@DeviceBytes:
  4843                           	opt stack 0
  4844  00006A                     ___aldiv@quotient:
  4845                           	opt stack 0
  4846  00006A                     ___xxtofl@arg:
  4847                           	opt stack 0
  4848                           
  4849                           ; 4 bytes @ 0xA
  4850  00006A                     	ds	1
  4851  00006B                     __ic2_display_set_ddram_address@data_array:
  4852                           	opt stack 0
  4853  00006B                     __fill_buffer_get_status@outBuffer:
  4854                           	opt stack 0
  4855  00006B                     utoa@base:
  4856                           	opt stack 0
  4857  00006B                     i2c_display_init@init_sequence:
  4858                           	opt stack 0
  4859                           
  4860                           ; 9 bytes @ 0xB
  4861  00006B                     	ds	1
  4862  00006C                     ?__flash_get_status:
  4863                           	opt stack 0
  4864  00006C                     __fill_buffer_get_display@cntr:
  4865                           	opt stack 0
  4866                           
  4867                           ; 1 bytes @ 0xC
  4868  00006C                     	ds	1
  4869  00006D                     __ic2_display_set_cgram_address@address:
  4870                           	opt stack 0
  4871  00006D                     i2c_display_cursor@position:
  4872                           	opt stack 0
  4873  00006D                     __fill_buffer_get_display@line:
  4874                           	opt stack 0
  4875  00006D                     utoa@v:
  4876                           	opt stack 0
  4877                           
  4878                           ; 2 bytes @ 0xD
  4879  00006D                     	ds	1
  4880  00006E                     ?___fldiv:
  4881                           	opt stack 0
  4882  00006E                     ?___flmul:
  4883                           	opt stack 0
  4884  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  4885                           	opt stack 0
  4886  00006E                     i2c_display_cursor@line:
  4887                           	opt stack 0
  4888  00006E                     __flash_get_status@command:
  4889                           	opt stack 0
  4890  00006E                     __fill_buffer_get_display@start_line:
  4891                           	opt stack 0
  4892  00006E                     i2c_display_program_custom_character@bit_pattern:
  4893                           	opt stack 0
  4894  00006E                     ___fldiv@b:
  4895                           	opt stack 0
  4896  00006E                     ___flmul@b:
  4897                           	opt stack 0
  4898                           
  4899                           ; 4 bytes @ 0xE
  4900  00006E                     	ds	1
  4901  00006F                     MSDCheckForErrorCases@DeviceNoData:
  4902                           	opt stack 0
  4903  00006F                     i2c_display_cursor@address:
  4904                           	opt stack 0
  4905  00006F                     __fill_buffer_get_display@position:
  4906                           	opt stack 0
  4907  00006F                     utoa@c:
  4908                           	opt stack 0
  4909  00006F                     __flash_get_status@status:
  4910                           	opt stack 0
  4911                           
  4912                           ; 2 bytes @ 0xF
  4913  00006F                     	ds	1
  4914  000070                     ??_i2c_display_program_custom_character:
  4915  000070                     MSDCheckForErrorCases@MSDErrorCase:
  4916                           	opt stack 0
  4917  000070                     display_update@line:
  4918                           	opt stack 0
  4919  000070                     ___fladd@signs:
  4920                           	opt stack 0
  4921  000070                     api_prepare@inBuffer:
  4922                           	opt stack 0
  4923  000070                     itoa@buf:
  4924                           	opt stack 0
  4925                           
  4926                           ; 2 bytes @ 0x10
  4927  000070                     	ds	1
  4928  000071                     ??_MSDWriteHandler:
  4929  000071                     ___fladd@aexp:
  4930                           	opt stack 0
  4931  000071                     __flash_is_busy@status:
  4932                           	opt stack 0
  4933                           
  4934                           ; 2 bytes @ 0x11
  4935  000071                     	ds	1
  4936  000072                     ___fladd@bexp:
  4937                           	opt stack 0
  4938  000072                     api_prepare@outBuffer:
  4939                           	opt stack 0
  4940  000072                     itoa@val:
  4941                           	opt stack 0
  4942  000072                     ___fldiv@a:
  4943                           	opt stack 0
  4944  000072                     ___flmul@a:
  4945                           	opt stack 0
  4946                           
  4947                           ; 4 bytes @ 0x12
  4948  000072                     	ds	1
  4949  000073                     ___fladd@grs:
  4950                           	opt stack 0
  4951  000073                     __flash_compare_page_to_buffer@page:
  4952                           	opt stack 0
  4953  000073                     __flash_write_to_buffer@start:
  4954                           	opt stack 0
  4955  000073                     __flash_write_page_from_buffer@page:
  4956                           	opt stack 0
  4957  000073                     __flash_partial_read@page:
  4958                           	opt stack 0
  4959  000073                     __flash_set_page_size@command:
  4960                           	opt stack 0
  4961                           
  4962                           ; 4 bytes @ 0x13
  4963  000073                     	ds	1
  4964  000074                     api_prepare@command:
  4965                           	opt stack 0
  4966  000074                     itoa@base:
  4967                           	opt stack 0
  4968  000074                     i2c_display_program_custom_character@data_array:
  4969                           	opt stack 0
  4970                           
  4971                           ; 11 bytes @ 0x14
  4972  000074                     	ds	1
  4973  000075                     __flash_compare_page_to_buffer@buffer:
  4974                           	opt stack 0
  4975  000075                     __flash_write_page_from_buffer@buffer:
  4976                           	opt stack 0
  4977  000075                     __flash_write_to_buffer@data:
  4978                           	opt stack 0
  4979  000075                     __flash_partial_read@start:
  4980                           	opt stack 0
  4981                           
  4982                           ; 2 bytes @ 0x15
  4983  000075                     	ds	1
  4984  000076                     ??___fldiv:
  4985  000076                     ??___flmul:
  4986  000076                     ??__flash_compare_page_to_buffer:
  4987  000076                     ??__flash_write_page_from_buffer:
  4988  000076                     itoa@cp:
  4989                           	opt stack 0
  4990                           
  4991                           ; 2 bytes @ 0x16
  4992  000076                     	ds	1
  4993  000077                     __flash_set_page_size@size:
  4994                           	opt stack 0
  4995  000077                     __flash_write_to_buffer@data_length:
  4996                           	opt stack 0
  4997  000077                     __flash_partial_read@length:
  4998                           	opt stack 0
  4999                           
  5000                           ; 2 bytes @ 0x17
  5001  000077                     	ds	1
  5002  000078                     __display_padded_itoa@value:
  5003                           	opt stack 0
  5004                           
  5005                           ; 2 bytes @ 0x18
  5006  000078                     	ds	1
  5007  000079                     __flash_write_to_buffer@buffer:
  5008                           	opt stack 0
  5009  000079                     __flash_compare_page_to_buffer@status:
  5010                           	opt stack 0
  5011  000079                     __flash_partial_read@data:
  5012                           	opt stack 0
  5013  000079                     __flash_write_page_from_buffer@command:
  5014                           	opt stack 0
  5015                           
  5016                           ; 4 bytes @ 0x19
  5017  000079                     	ds	1
  5018  00007A                     __display_padded_itoa@length:
  5019                           	opt stack 0
  5020  00007A                     ___flmul@sign:
  5021                           	opt stack 0
  5022  00007A                     __flash_write_to_buffer@command:
  5023                           	opt stack 0
  5024  00007A                     ___fldiv@rem:
  5025                           	opt stack 0
  5026                           
  5027                           ; 4 bytes @ 0x1A
  5028  00007A                     	ds	1
  5029  00007B                     ??__flash_partial_read:
  5030  00007B                     ___flmul@aexp:
  5031                           	opt stack 0
  5032  00007B                     __display_padded_itoa@text:
  5033                           	opt stack 0
  5034  00007B                     __flash_compare_page_to_buffer@command:
  5035                           	opt stack 0
  5036                           
  5037                           ; 4 bytes @ 0x1B
  5038  00007B                     	ds	1
  5039  00007C                     ___flmul@grs:
  5040                           	opt stack 0
  5041                           
  5042                           ; 4 bytes @ 0x1C
  5043  00007C                     	ds	1
  5044  00007D                     ??__display_padded_itoa:
  5045                           
  5046                           ; 1 bytes @ 0x1D
  5047  00007D                     	ds	1
  5048  00007E                     ___fldiv@sign:
  5049                           	opt stack 0
  5050                           
  5051                           ; 1 bytes @ 0x1E
  5052  00007E                     	ds	1
  5053  00007F                     i2c_display_program_custom_character@address:
  5054                           	opt stack 0
  5055  00007F                     flash_sector_write@page:
  5056                           	opt stack 0
  5057  00007F                     ___fldiv@new_exp:
  5058                           	opt stack 0
  5059  00007F                     __flash_partial_read@command:
  5060                           	opt stack 0
  5061                           
  5062                           ; 4 bytes @ 0x1F
  5063  00007F                     	ds	1
  5064  000080                     i2c_display_program_custom_character@cntr:
  5065                           	opt stack 0
  5066  000080                     ___flmul@bexp:
  5067                           	opt stack 0
  5068                           
  5069                           ; 1 bytes @ 0x20
  5070  000080                     	ds	1
  5071  000081                     flash_sector_write@data:
  5072                           	opt stack 0
  5073  000081                     ___fldiv@grs:
  5074                           	opt stack 0
  5075  000081                     ___flmul@prod:
  5076                           	opt stack 0
  5077                           
  5078                           ; 4 bytes @ 0x21
  5079  000081                     	ds	1
  5080  000082                     __display_padded_itoa@tmp:
  5081                           	opt stack 0
  5082                           
  5083                           ; 10 bytes @ 0x22
  5084  000082                     	ds	1
  5085  000083                     flash_sector_write@match:
  5086                           	opt stack 0
  5087  000083                     __flash_partial_read@address:
  5088                           	opt stack 0
  5089                           
  5090                           ; 4 bytes @ 0x23
  5091  000083                     	ds	1
  5092  000084                     fat_format@cntr:
  5093                           	opt stack 0
  5094                           
  5095                           ; 2 bytes @ 0x24
  5096  000084                     	ds	1
  5097  000085                     ___fldiv@bexp:
  5098                           	opt stack 0
  5099  000085                     ___flmul@temp:
  5100                           	opt stack 0
  5101                           
  5102                           ; 2 bytes @ 0x25
  5103  000085                     	ds	1
  5104  000086                     ___fldiv@aexp:
  5105                           	opt stack 0
  5106                           
  5107                           ; 1 bytes @ 0x26
  5108  000086                     	ds	1
  5109  000087                     ?__motor_get_speed_in_degrees:
  5110                           	opt stack 0
  5111  000087                     ?_motor_steps_from_degrees:
  5112                           	opt stack 0
  5113  000087                     ?__step_position_from_divide_position:
  5114                           	opt stack 0
  5115  000087                     flash_sector_read@page:
  5116                           	opt stack 0
  5117  000087                     motor_steps_from_degrees@degrees:
  5118                           	opt stack 0
  5119  000087                     __motor_get_speed_in_degrees@speed_index:
  5120                           	opt stack 0
  5121  000087                     __step_position_from_divide_position@divide_position:
  5122                           	opt stack 0
  5123                           
  5124                           ; 2 bytes @ 0x27
  5125  000087                     	ds	2
  5126  000089                     ??__motor_get_speed_in_degrees:
  5127  000089                     flash_sector_read@data:
  5128                           	opt stack 0
  5129                           
  5130                           ; 2 bytes @ 0x29
  5131  000089                     	ds	2
  5132  00008B                     ??_fat_get_format_status:
  5133  00008B                     ExternalFlash_SectorRead@config:
  5134                           	opt stack 0
  5135  00008B                     motor_steps_from_degrees@steps:
  5136                           	opt stack 0
  5137  00008B                     __motor_get_speed_in_degrees@speed:
  5138                           	opt stack 0
  5139  00008B                     __step_position_from_divide_position@target_position:
  5140                           	opt stack 0
  5141                           
  5142                           ; 4 bytes @ 0x2B
  5143  00008B                     	ds	1
  5144  00008C                     __display_padded_itoa@len:
  5145                           	opt stack 0
  5146                           
  5147                           ; 1 bytes @ 0x2C
  5148  00008C                     	ds	1
  5149  00008D                     __display_padded_itoa@pos:
  5150                           	opt stack 0
  5151  00008D                     fat_get_format_status@cntr:
  5152                           	opt stack 0
  5153  00008D                     ExternalFlash_SectorRead@sector_addr:
  5154                           	opt stack 0
  5155                           
  5156                           ; 4 bytes @ 0x2D
  5157  00008D                     	ds	1
  5158  00008E                     __display_padded_itoa@padding:
  5159                           	opt stack 0
  5160                           
  5161                           ; 1 bytes @ 0x2E
  5162  00008E                     	ds	1
  5163  00008F                     ?_motor_nonzero_steps_from_degrees:
  5164                           	opt stack 0
  5165  00008F                     __display_signed_itoa@value:
  5166                           	opt stack 0
  5167  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5168                           	opt stack 0
  5169  00008F                     __motor_get_speed_in_degrees@lookup:
  5170                           	opt stack 0
  5171                           
  5172                           ; 4 bytes @ 0x2F
  5173  00008F                     	ds	2
  5174  000091                     __display_signed_itoa@text:
  5175                           	opt stack 0
  5176  000091                     ExternalFlash_SectorRead@buffer:
  5177                           	opt stack 0
  5178                           
  5179                           ; 2 bytes @ 0x31
  5180  000091                     	ds	2
  5181  000093                     ?_motor_speed_from_index:
  5182                           	opt stack 0
  5183  000093                     ExternalFlash_SectorRead@page:
  5184                           	opt stack 0
  5185  000093                     motor_speed_from_index@speed_index:
  5186                           	opt stack 0
  5187  000093                     motor_nonzero_steps_from_degrees@steps:
  5188                           	opt stack 0
  5189                           
  5190                           ; 4 bytes @ 0x33
  5191  000093                     	ds	2
  5192  000095                     ??_MSDReadHandler:
  5193  000095                     __display_itoa@value:
  5194                           	opt stack 0
  5195                           
  5196                           ; 2 bytes @ 0x35
  5197  000095                     	ds	2
  5198  000097                     __display_itoa@decimals:
  5199                           	opt stack 0
  5200  000097                     motor_schedule_command@distance_in_steps:
  5201                           	opt stack 0
  5202                           
  5203                           ; 4 bytes @ 0x37
  5204  000097                     	ds	1
  5205  000098                     __display_itoa@text:
  5206                           	opt stack 0
  5207                           
  5208                           ; 2 bytes @ 0x38
  5209  000098                     	ds	1
  5210  000099                     ??_MSDProcessCommandMediaPresent:
  5211                           
  5212                           ; 1 bytes @ 0x39
  5213  000099                     	ds	1
  5214  00009A                     ??__display_itoa:
  5215                           
  5216                           ; 1 bytes @ 0x3A
  5217  00009A                     	ds	1
  5218  00009B                     _MSDProcessCommandMediaPresent$2606:
  5219                           	opt stack 0
  5220  00009B                     motor_schedule_command@speed:
  5221                           	opt stack 0
  5222                           
  5223                           ; 2 bytes @ 0x3B
  5224  00009B                     	ds	2
  5225  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  5226                           	opt stack 0
  5227  00009D                     motor_schedule_command@direction:
  5228                           	opt stack 0
  5229                           
  5230                           ; 1 bytes @ 0x3D
  5231  00009D                     	ds	1
  5232  00009E                     motor_arc_move@direction:
  5233                           	opt stack 0
  5234  00009E                     __parse_jump_steps@data:
  5235                           	opt stack 0
  5236  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  5237                           	opt stack 0
  5238  00009E                     motor_go_to_steps_position@target_position:
  5239                           	opt stack 0
  5240                           
  5241                           ; 4 bytes @ 0x3E
  5242  00009E                     	ds	1
  5243  00009F                     motor_arc_move@arc_in_steps:
  5244                           	opt stack 0
  5245                           
  5246                           ; 4 bytes @ 0x3F
  5247  00009F                     	ds	1
  5248  0000A0                     __parse_jump_steps@out_buffer:
  5249                           	opt stack 0
  5250  0000A0                     __display_itoa@tmp:
  5251                           	opt stack 0
  5252                           
  5253                           ; 10 bytes @ 0x40
  5254  0000A0                     	ds	2
  5255  0000A2                     ??_motor_go_to_steps_position:
  5256  0000A2                     __parse_jump_steps@out_idx_ptr:
  5257                           	opt stack 0
  5258  0000A2                     MSDProcessCommandMediaPresent@capacity:
  5259                           	opt stack 0
  5260                           
  5261                           ; 4 bytes @ 0x42
  5262  0000A2                     	ds	2
  5263  0000A4                     ??__parse_jump_steps:
  5264                           
  5265                           ; 1 bytes @ 0x44
  5266  0000A4                     	ds	1
  5267  0000A5                     __parse_jump_steps@return_value:
  5268                           	opt stack 0
  5269                           
  5270                           ; 1 bytes @ 0x45
  5271  0000A5                     	ds	1
  5272  0000A6                     MSDProcessCommandMediaPresent@i:
  5273                           	opt stack 0
  5274  0000A6                     __parse_jump_steps@number_of_steps:
  5275                           	opt stack 0
  5276                           
  5277                           ; 4 bytes @ 0x46
  5278  0000A6                     	ds	1
  5279  0000A7                     ??_MSDProcessCommand:
  5280  0000A7                     
  5281                           ; 1 bytes @ 0x47
  5282  0000A7                     	ds	3
  5283  0000AA                     __display_itoa@len:
  5284                           	opt stack 0
  5285  0000AA                     __parse_command_long@data:
  5286                           	opt stack 0
  5287  0000AA                     motor_go_to_steps_position@overhead_cw:
  5288                           	opt stack 0
  5289                           
  5290                           ; 4 bytes @ 0x4A
  5291  0000AA                     	ds	1
  5292  0000AB                     __display_itoa@missing:
  5293                           	opt stack 0
  5294                           
  5295                           ; 1 bytes @ 0x4B
  5296  0000AB                     	ds	1
  5297  0000AC                     ??_MSDTasks:
  5298  0000AC                     __display_itoa@pos:
  5299                           	opt stack 0
  5300  0000AC                     __parse_command_long@out_buffer:
  5301                           	opt stack 0
  5302                           
  5303                           ; 2 bytes @ 0x4C
  5304  0000AC                     	ds	1
  5305  0000AD                     _MSDTasks$2588:
  5306                           	opt stack 0
  5307  0000AD                     __display_itoa_long@value:
  5308                           	opt stack 0
  5309                           
  5310                           ; 4 bytes @ 0x4D
  5311  0000AD                     	ds	1
  5312  0000AE                     __parse_command_long@out_idx_ptr:
  5313                           	opt stack 0
  5314  0000AE                     motor_go_to_steps_position@overhead_ccw:
  5315                           	opt stack 0
  5316                           
  5317                           ; 4 bytes @ 0x4E
  5318  0000AE                     	ds	1
  5319  0000AF                     _MSDTasks$2589:
  5320                           	opt stack 0
  5321                           
  5322                           ; 2 bytes @ 0x4F
  5323  0000AF                     	ds	1
  5324  0000B0                     __parse_command_long@length:
  5325                           	opt stack 0
  5326                           
  5327                           ; 1 bytes @ 0x50
  5328  0000B0                     	ds	1
  5329  0000B1                     MSDTasks@i:
  5330                           	opt stack 0
  5331  0000B1                     __display_itoa_long@decimals:
  5332                           	opt stack 0
  5333                           
  5334                           ; 1 bytes @ 0x51
  5335  0000B1                     	ds	1
  5336  0000B2                     __display_itoa_long@text:
  5337                           	opt stack 0
  5338  0000B2                     motor_go_to_steps_position@distance_cw:
  5339                           	opt stack 0
  5340                           
  5341                           ; 4 bytes @ 0x52
  5342  0000B2                     	ds	2
  5343  0000B4                     ??__display_itoa_long:
  5344                           
  5345                           ; 1 bytes @ 0x54
  5346  0000B4                     	ds	2
  5347  0000B6                     motor_go_to_steps_position@distance_ccw:
  5348                           	opt stack 0
  5349                           
  5350                           ; 4 bytes @ 0x56
  5351  0000B6                     	ds	2
  5352  0000B8                     __display_itoa_long@length:
  5353                           	opt stack 0
  5354                           
  5355                           ; 1 bytes @ 0x58
  5356  0000B8                     	ds	1
  5357  0000B9                     __display_itoa_long@short_value:
  5358                           	opt stack 0
  5359                           
  5360                           ; 2 bytes @ 0x59
  5361  0000B9                     	ds	1
  5362  0000BA                     ??_motor_divide_jump:
  5363  0000BA                     __parse_command_short@cmd:
  5364                           	opt stack 0
  5365  0000BA                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  5366                           	opt stack 0
  5367                           
  5368                           ; 4 bytes @ 0x5A
  5369  0000BA                     	ds	1
  5370  0000BB                     __display_itoa_long@last_digit:
  5371                           	opt stack 0
  5372  0000BB                     api_parse@inBuffer:
  5373                           	opt stack 0
  5374  0000BB                     motor_divide_jump@target_position_in_steps:
  5375                           	opt stack 0
  5376                           
  5377                           ; 4 bytes @ 0x5B
  5378  0000BB                     	ds	1
  5379  0000BC                     ??_display_prepare:
  5380                           
  5381                           ; 1 bytes @ 0x5C
  5382  0000BC                     	ds	1
  5383  0000BD                     api_parse@receivedDataLength:
  5384                           	opt stack 0
  5385                           
  5386                           ; 1 bytes @ 0x5D
  5387  0000BD                     	ds	1
  5388  0000BE                     api_parse@outBuffer:
  5389                           	opt stack 0
  5390  0000BE                     motor_divide_jump_to_nearest@nearest_divide_position:
  5391                           	opt stack 0
  5392  0000BE                     display_prepare@temp:
  5393                           	opt stack 0
  5394                           
  5395                           ; 10 bytes @ 0x5E
  5396  0000BE                     	ds	1
  5397  0000BF                     motor_divide_jump@target_divide_position:
  5398                           	opt stack 0
  5399                           
  5400                           ; 2 bytes @ 0x5F
  5401  0000BF                     	ds	1
  5402  0000C0                     ??_api_parse:
  5403  0000C0                     motor_divide_jump_to_nearest@divide_position_float:
  5404                           	opt stack 0
  5405                           
  5406                           ; 4 bytes @ 0x60
  5407  0000C0                     	ds	2
  5408  0000C2                     api_parse@out_idx_ptr:
  5409                           	opt stack 0
  5410                           
  5411                           ; 2 bytes @ 0x62
  5412  0000C2                     	ds	2
  5413  0000C4                     ??_encoder_statemachine:
  5414  0000C4                     api_parse@out_idx:
  5415                           	opt stack 0
  5416                           
  5417                           ; 1 bytes @ 0x64
  5418  0000C4                     	ds	1
  5419  0000C5                     api_parse@in_idx:
  5420                           	opt stack 0
  5421                           
  5422                           ; 1 bytes @ 0x65
  5423  0000C5                     	ds	1
  5424  0000C6                     
  5425                           ; 1 bytes @ 0x66
  5426  0000C6                     	ds	2
  5427  0000C8                     display_prepare@space:
  5428                           	opt stack 0
  5429                           
  5430                           ; 1 bytes @ 0x68
  5431  0000C8                     	ds	1
  5432  0000C9                     display_prepare@cntr:
  5433                           	opt stack 0
  5434                           
  5435                           ; 1 bytes @ 0x69
  5436  0000C9                     	ds	1
  5437  0000CA                     tblptru	equ	0xFF8
  5438                           tblptrh	equ	0xFF7
  5439                           tblptrl	equ	0xFF6
  5440                           tablat	equ	0xFF5
  5441                           postinc0	equ	0xFEE
  5442                           wreg	equ	0xFE8
  5443                           postdec1	equ	0xFE5
  5444                           fsr1h	equ	0xFE2
  5445                           fsr1l	equ	0xFE1
  5446                           
  5447                           ; 1 bytes @ 0x6A
  5448                           
  5449                           	psect	cstackCOMRAM
  5450  00002E                     __pcstackCOMRAM:
  5451                           	opt stack 0
  5452  00002E                     ??_motor_isr:
  5453  00002E                     ??_USBStdGetDscHandler:
  5454  00002E                     ??_USBStdGetStatusHandler:
  5455  00002E                     ?i2_USBTransferOnePacket:
  5456                           	opt stack 0
  5457  00002E                     ?i2_ExternalFlash_MediaInitialize:
  5458                           	opt stack 0
  5459  00002E                     USBConfigureEndpoint@direction:
  5460                           	opt stack 0
  5461  00002E                     USBCtrlTrfTxService@byteToSend:
  5462                           	opt stack 0
  5463  00002E                     USBCtrlTrfRxService@i:
  5464                           	opt stack 0
  5465  00002E                     i2USBTransferOnePacket@dir:
  5466                           	opt stack 0
  5467  00002E                     i2USBStallEndpoint@dir:
  5468                           	opt stack 0
  5469  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  5470                           	opt stack 0
  5471  00002E                     i2ExternalFlash_MediaInitialize@config:
  5472                           	opt stack 0
  5473  00002E                     i2ExternalFlash_MediaDetect@config:
  5474                           	opt stack 0
  5475  00002E                     i2memcpy@d1:
  5476                           	opt stack 0
  5477  00002E                     i2memset@p1:
  5478                           	opt stack 0
  5479                           
  5480                           ; 2 bytes @ 0x0
  5481  00002E                     	ds	1
  5482  00002F                     ??_USBConfigureEndpoint:
  5483  00002F                     ??i2_USBStallEndpoint:
  5484  00002F                     USBCtrlTrfRxService@byteToRead:
  5485                           	opt stack 0
  5486  00002F                     USBCtrlTrfInHandler@lastDTS:
  5487                           	opt stack 0
  5488  00002F                     USBStdGetStatusHandler@p:
  5489                           	opt stack 0
  5490  00002F                     i2USBTransferOnePacket@data:
  5491                           	opt stack 0
  5492                           
  5493                           ; 2 bytes @ 0x1
  5494  00002F                     	ds	1
  5495  000030                     i2SYSTEM_Initialize@pll_startup_counter_3114:
  5496                           	opt stack 0
  5497  000030                     i2memcpy@s1:
  5498                           	opt stack 0
  5499  000030                     i2memset@c:
  5500                           	opt stack 0
  5501                           
  5502                           ; 2 bytes @ 0x2
  5503  000030                     	ds	1
  5504  000031                     i2USBTransferOnePacket@len:
  5505                           	opt stack 0
  5506                           
  5507                           ; 1 bytes @ 0x3
  5508  000031                     	ds	1
  5509  000032                     ??i2_USBTransferOnePacket:
  5510  000032                     i2SYSTEM_Initialize@state:
  5511                           	opt stack 0
  5512  000032                     i2memcpy@n:
  5513                           	opt stack 0
  5514  000032                     i2memset@n:
  5515                           	opt stack 0
  5516                           
  5517                           ; 2 bytes @ 0x4
  5518  000032                     	ds	1
  5519  000033                     USBConfigureEndpoint@EPNum:
  5520                           	opt stack 0
  5521  000033                     i2USBStallEndpoint@ep:
  5522                           	opt stack 0
  5523                           
  5524                           ; 1 bytes @ 0x5
  5525  000033                     	ds	1
  5526  000034                     USBConfigureEndpoint@handle:
  5527                           	opt stack 0
  5528  000034                     i2USBStallEndpoint@p:
  5529                           	opt stack 0
  5530  000034                     i2memcpy@d:
  5531                           	opt stack 0
  5532  000034                     i2memset@p:
  5533                           	opt stack 0
  5534                           
  5535                           ; 2 bytes @ 0x6
  5536  000034                     	ds	2
  5537  000036                     USBEnableEndpoint@options:
  5538                           	opt stack 0
  5539  000036                     i2USBDeviceInit@i:
  5540                           	opt stack 0
  5541  000036                     i2USBTransferOnePacket@ep:
  5542                           	opt stack 0
  5543  000036                     i2memcpy@s:
  5544                           	opt stack 0
  5545                           
  5546                           ; 2 bytes @ 0x8
  5547  000036                     	ds	1
  5548  000037                     USBEnableEndpoint@p:
  5549                           	opt stack 0
  5550  000037                     i2USBTransferOnePacket@handle:
  5551                           	opt stack 0
  5552                           
  5553                           ; 2 bytes @ 0x9
  5554  000037                     	ds	1
  5555  000038                     i2memcpy@tmp:
  5556                           	opt stack 0
  5557                           
  5558                           ; 1 bytes @ 0xA
  5559  000038                     	ds	1
  5560  000039                     ??_USBMSDInit:
  5561  000039                     USBEnableEndpoint@ep:
  5562                           	opt stack 0
  5563  000039                     _USBCheckMSDRequest$2534:
  5564                           	opt stack 0
  5565  000039                     MSDTransferTerminated@handle:
  5566                           	opt stack 0
  5567                           
  5568                           ; 2 bytes @ 0xB
  5569  000039                     	ds	1
  5570  00003A                     
  5571                           ; 1 bytes @ 0xC
  5572  00003A                     	ds	1
  5573  00003B                     _USBCheckMSDRequest$2535:
  5574                           	opt stack 0
  5575  00003B                     _MSDTransferTerminated$2623:
  5576                           	opt stack 0
  5577                           
  5578                           ; 2 bytes @ 0xD
  5579  00003B                     	ds	1
  5580  00003C                     
  5581                           ; 1 bytes @ 0xE
  5582  00003C                     	ds	1
  5583  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  5584                           	opt stack 0
  5585                           
  5586                           ; 2 bytes @ 0xF
  5587  00003D                     	ds	1
  5588  00003E                     motor_isr@steps_until_standstill:
  5589                           	opt stack 0
  5590                           
  5591                           ; 2 bytes @ 0x10
  5592  00003E                     	ds	1
  5593  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  5594                           	opt stack 0
  5595                           
  5596                           ; 2 bytes @ 0x11
  5597  00003F                     	ds	1
  5598  000040                     motor_isr@steps_until_standstill_if_accelerate:
  5599                           	opt stack 0
  5600                           
  5601                           ; 2 bytes @ 0x12
  5602  000040                     	ds	1
  5603  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  5604                           	opt stack 0
  5605                           
  5606                           ; 2 bytes @ 0x13
  5607  000041                     	ds	1
  5608  000042                     motor_isr@steps_remaining:
  5609                           	opt stack 0
  5610                           
  5611                           ; 4 bytes @ 0x14
  5612  000042                     	ds	1
  5613  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  5614                           
  5615                           ; 1 bytes @ 0x15
  5616  000043                     	ds	2
  5617  000045                     ??_USBStdFeatureReqHandler:
  5618  000045                     USBStdSetCfgHandler@i:
  5619                           	opt stack 0
  5620                           
  5621                           ; 1 bytes @ 0x17
  5622  000045                     	ds	1
  5623  000046                     USBStdFeatureReqHandler@pUEP:
  5624                           	opt stack 0
  5625                           
  5626                           ; 2 bytes @ 0x18
  5627  000046                     	ds	2
  5628  000048                     USBStdFeatureReqHandler@current_ep_data:
  5629                           	opt stack 0
  5630                           
  5631                           ; 1 bytes @ 0x1A
  5632  000048                     	ds	1
  5633  000049                     USBStdFeatureReqHandler@p:
  5634                           	opt stack 0
  5635                           
  5636                           ; 2 bytes @ 0x1B
  5637  000049                     	ds	2
  5638  00004B                     ??_USBCtrlEPService:
  5639  00004B                     
  5640                           ; 1 bytes @ 0x1D
  5641  00004B                     	ds	1
  5642  00004C                     USBDeviceTasks@i:
  5643                           	opt stack 0
  5644                           
  5645                           ; 1 bytes @ 0x1E
  5646  00004C                     	ds	1
  5647  00004D                     ??_SYS_InterruptHigh:
  5648                           
  5649                           ; 1 bytes @ 0x1F
  5650  00004D                     	ds	14
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           postinc0	equ	0xFEE
  5656                           wreg	equ	0xFE8
  5657                           postdec1	equ	0xFE5
  5658                           fsr1h	equ	0xFE2
  5659                           fsr1l	equ	0xFE1
  5660                           
  5661 ;;
  5662 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5663 ;;
  5664 ;; *************** function _main *****************
  5665 ;; Defined at:
  5666 ;;		line 52 in file "main.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;		None
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  tmp             4    0[BANK1 ] float 
  5671 ;;  startup_time    1    0        unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;Total ram usage:        4 bytes
  5686 ;; Hardware stack levels required when called:   22
  5687 ;; This function calls:
  5688 ;;		_APP_DeviceCustomHIDTasks
  5689 ;;		_APP_DeviceMSDTasks
  5690 ;;		_SYSTEM_Initialize
  5691 ;;		_USBDeviceAttach
  5692 ;;		_USBDeviceInit
  5693 ;;		___fldiv
  5694 ;;		___flmul
  5695 ;;		___fltol
  5696 ;;		___xxtofl
  5697 ;;		_display_prepare
  5698 ;;		_display_update
  5699 ;;		_encoder_statemachine
  5700 ;;		_motor_process_cue
  5701 ;;		_os_read_temperature
  5702 ;;		_system_init
  5703 ;; This function is called by:
  5704 ;;		Startup code after reset
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text0
  5709  00E990                     __ptext0:
  5710                           	opt stack 0
  5711  00E990                     _main:
  5712                           	opt stack 9
  5713                           
  5714                           ;main.c: 54: uint8_t startup_timer;;main.c: 55: float tmp;;main.c: 58: system_init();
  5715                           
  5716                           ;incstack = 0
  5717  00E990  EC62  F07F         	call	_system_init	;wreg free
  5718                           
  5719                           ;main.c: 60: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  5720  00E994  0E00               	movlw	0
  5721  00E996  ECD2  F08E         	call	_SYSTEM_Initialize
  5722                           
  5723                           ;main.c: 62: USBDeviceInit();
  5724  00E99A  EC23  F074         	call	_USBDeviceInit	;wreg free
  5725                           
  5726                           ;main.c: 63: USBDeviceAttach();
  5727  00E99E  ECA3  F093         	call	_USBDeviceAttach	;wreg free
  5728  00E9A2                     
  5729                           ;main.c: 66: {;main.c: 68: APP_DeviceMSDTasks();
  5730  00E9A2  EC29  F095         	call	_APP_DeviceMSDTasks	;wreg free
  5731                           
  5732                           ;main.c: 70: if(!os.done)
  5733  00E9A6  0100               	movlb	0	; () banked
  5734  00E9A8  51D5               	movf	(_os+2)& (0+255),w,b	;volatile
  5735  00E9AA  A4D8               	btfss	status,2,c
  5736  00E9AC  D7FA               	goto	l859
  5737                           
  5738                           ; BSR set to: 0
  5739  00E9AE  0004               	clrwdt		;# 
  5740                           
  5741                           ;main.c: 76: APP_DeviceCustomHIDTasks();
  5742  00E9B0  ECC6  F087         	call	_APP_DeviceCustomHIDTasks	;wreg free
  5743                           
  5744                           ;main.c: 79: encoder_statemachine();
  5745  00E9B4  EC40  F057         	call	_encoder_statemachine	;wreg free
  5746                           
  5747                           ;main.c: 82: motor_process_cue();
  5748  00E9B8  EC0E  F08C         	call	_motor_process_cue	;wreg free
  5749                           
  5750                           ;main.c: 85: switch(os.timeSlot)
  5751  00E9BC  D076               	goto	l861
  5752  00E9BE                     
  5753                           ;main.c: 88: os_read_temperature();
  5754  00E9BE  EC74  F095         	call	_os_read_temperature	;wreg free
  5755                           
  5756                           ;main.c: 93: break;
  5757                           
  5758                           ;main.c: 91: case 1:
  5759                           
  5760                           ;main.c: 89: break;
  5761  00E9C2  D084               	goto	l863
  5762  00E9C4                     
  5763                           ;main.c: 97: tmp = (float) os.current_position_in_steps;
  5764  00E9C4  C0DA  F060         	movff	_os+7,___xxtofl@val	;volatile
  5765  00E9C8  C0DB  F061         	movff	_os+8,___xxtofl@val+1	;volatile
  5766  00E9CC  C0DC  F062         	movff	_os+9,___xxtofl@val+2	;volatile
  5767  00E9D0  C0DD  F063         	movff	_os+10,___xxtofl@val+3	;volatile
  5768  00E9D4  0E00               	movlw	0
  5769  00E9D6  EC6A  F075         	call	___xxtofl
  5770  00E9DA  C060  F1CF         	movff	?___xxtofl,main@tmp
  5771  00E9DE  C061  F1D0         	movff	?___xxtofl+1,main@tmp+1
  5772  00E9E2  C062  F1D1         	movff	?___xxtofl+2,main@tmp+2
  5773  00E9E6  C063  F1D2         	movff	?___xxtofl+3,main@tmp+3
  5774                           
  5775                           ;main.c: 98: tmp *= 36000;
  5776  00E9EA  C1CF  F06E         	movff	main@tmp,___flmul@b
  5777  00E9EE  C1D0  F06F         	movff	main@tmp+1,___flmul@b+1
  5778  00E9F2  C1D1  F070         	movff	main@tmp+2,___flmul@b+2
  5779  00E9F6  C1D2  F071         	movff	main@tmp+3,___flmul@b+3
  5780  00E9FA  0E00               	movlw	0
  5781  00E9FC  0100               	movlb	0	; () banked
  5782  00E9FE  6F72               	movwf	___flmul@a& (0+255),b
  5783  00EA00  0EA0               	movlw	160
  5784  00EA02  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5785  00EA04  0E0C               	movlw	12
  5786  00EA06  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5787  00EA08  0E47               	movlw	71
  5788  00EA0A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5789  00EA0C  EC78  F060         	call	___flmul	;wreg free
  5790  00EA10  C06E  F1CF         	movff	?___flmul,main@tmp
  5791  00EA14  C06F  F1D0         	movff	?___flmul+1,main@tmp+1
  5792  00EA18  C070  F1D1         	movff	?___flmul+2,main@tmp+2
  5793  00EA1C  C071  F1D2         	movff	?___flmul+3,main@tmp+3
  5794                           
  5795                           ;main.c: 99: tmp /= config.full_circle_in_steps;
  5796  00EA20  C1CF  F06E         	movff	main@tmp,___fldiv@b
  5797  00EA24  C1D0  F06F         	movff	main@tmp+1,___fldiv@b+1
  5798  00EA28  C1D1  F070         	movff	main@tmp+2,___fldiv@b+2
  5799  00EA2C  C1D2  F071         	movff	main@tmp+3,___fldiv@b+3
  5800  00EA30  C179  F060         	movff	_config,___xxtofl@val
  5801  00EA34  C17A  F061         	movff	_config+1,___xxtofl@val+1
  5802  00EA38  C17B  F062         	movff	_config+2,___xxtofl@val+2
  5803  00EA3C  C17C  F063         	movff	_config+3,___xxtofl@val+3
  5804  00EA40  0E00               	movlw	0
  5805  00EA42  EC6A  F075         	call	___xxtofl
  5806  00EA46  C060  F072         	movff	?___xxtofl,___fldiv@a
  5807  00EA4A  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  5808  00EA4E  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  5809  00EA52  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  5810  00EA56  EC9D  F066         	call	___fldiv	;wreg free
  5811  00EA5A  C06E  F1CF         	movff	?___fldiv,main@tmp
  5812  00EA5E  C06F  F1D0         	movff	?___fldiv+1,main@tmp+1
  5813  00EA62  C070  F1D1         	movff	?___fldiv+2,main@tmp+2
  5814  00EA66  C071  F1D2         	movff	?___fldiv+3,main@tmp+3
  5815                           
  5816                           ;main.c: 101: os.current_position_in_degrees = (uint16_t) tmp;
  5817  00EA6A  C1CF  F060         	movff	main@tmp,___fltol@f1
  5818  00EA6E  C1D0  F061         	movff	main@tmp+1,___fltol@f1+1
  5819  00EA72  C1D1  F062         	movff	main@tmp+2,___fltol@f1+2
  5820  00EA76  C1D2  F063         	movff	main@tmp+3,___fltol@f1+3
  5821  00EA7A  EC32  F081         	call	___fltol	;wreg free
  5822  00EA7E  C060  F0DE         	movff	?___fltol,_os+11	;volatile
  5823  00EA82  C061  F0DF         	movff	?___fltol+1,_os+12	;volatile
  5824                           
  5825                           ;main.c: 102: if(os.current_position_in_degrees==36000)
  5826  00EA86  0EA0               	movlw	160
  5827  00EA88  0100               	movlb	0	; () banked
  5828  00EA8A  19DE               	xorwf	(_os+11)& (0+255),w,b	;volatile
  5829  00EA8C  E108               	bnz	l22525
  5830  00EA8E  0E8C               	movlw	140
  5831  00EA90  19DF               	xorwf	(_os+12)& (0+255),w,b	;volatile
  5832  00EA92  A4D8               	btfss	status,2,c
  5833  00EA94  D004               	goto	l866
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;main.c: 103: {;main.c: 105: os.current_position_in_degrees = 0;
  5837  00EA96  0E00               	movlw	0
  5838  00EA98  6FDF               	movwf	(_os+12)& (0+255),b	;volatile
  5839  00EA9A  0E00               	movlw	0
  5840  00EA9C  6FDE               	movwf	(_os+11)& (0+255),b	;volatile
  5841  00EA9E                     l866:
  5842  00EA9E                     l22525:
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;main.c: 109: display_prepare();
  5846  00EA9E  EC1C  F051         	call	_display_prepare	;wreg free
  5847                           
  5848                           ;main.c: 110: break;
  5849  00EAA2  D014               	goto	l863
  5850  00EAA4                     
  5851                           ;main.c: 113: display_update();
  5852  00EAA4  ECCA  F092         	call	_display_update	;wreg free
  5853                           
  5854                           ;main.c: 115: }
  5855                           
  5856                           ;main.c: 114: break;
  5857  00EAA8  D011               	goto	l863
  5858  00EAAA                     l861:
  5859  00EAAA  0100               	movlb	0	; () banked
  5860  00EAAC  51D4               	movf	(_os+1)& (0+255),w,b	;volatile
  5861                           
  5862                           ; Switch size 1, requested type "space"
  5863                           ; Number of cases is 5, Range of values is 0 to 7
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; simple_byte           16     9 (average)
  5867                           ;	Chosen strategy is simple_byte
  5868  00EAAE  0A00               	xorlw	0	; case 0
  5869  00EAB0  B4D8               	btfsc	status,2,c
  5870  00EAB2  D785               	goto	l862
  5871  00EAB4  0A01               	xorlw	1	; case 1
  5872  00EAB6  B4D8               	btfsc	status,2,c
  5873  00EAB8  D009               	goto	l863
  5874  00EABA  0A04               	xorlw	4	; case 5
  5875  00EABC  B4D8               	btfsc	status,2,c
  5876  00EABE  D782               	goto	l865
  5877  00EAC0  0A03               	xorlw	3	; case 6
  5878  00EAC2  B4D8               	btfsc	status,2,c
  5879  00EAC4  D7EC               	goto	l866
  5880  00EAC6  0A01               	xorlw	1	; case 7
  5881  00EAC8  B4D8               	btfsc	status,2,c
  5882  00EACA  D7EC               	goto	l868
  5883  00EACC                     l863:
  5884                           
  5885                           ;main.c: 117: os.done = 1;
  5886                           
  5887                           ; BSR set to: 0
  5888  00EACC  0E01               	movlw	1
  5889  00EACE  0100               	movlb	0	; () banked
  5890  00EAD0  6FD5               	movwf	(_os+2)& (0+255),b	;volatile
  5891                           
  5892                           ; BSR set to: 0
  5893                           
  5894                           ; BSR set to: 0
  5895  00EAD2  D767               	goto	l859
  5896  00EAD4                     __end_of_main:
  5897                           	opt stack 0
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           postinc0	equ	0xFEE
  5903                           wreg	equ	0xFE8
  5904                           postdec1	equ	0xFE5
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function _system_init *****************
  5910 ;; Defined at:
  5911 ;;		line 196 in file "os.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;Total ram usage:        0 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:   17
  5932 ;; This function calls:
  5933 ;;		__adc_init
  5934 ;;		__backlight_init
  5935 ;;		__system_pin_setup
  5936 ;;		__system_timer0_init
  5937 ;;		_display_init
  5938 ;;		_display_update
  5939 ;;		_encoder_init
  5940 ;;		_fat_init
  5941 ;;		_flash_init
  5942 ;;		_i2c_init
  5943 ;;		_motor_init
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text1
  5950  00FEC4                     __ptext1:
  5951                           	opt stack 0
  5952  00FEC4                     _system_init:
  5953                           	opt stack 13
  5954                           
  5955                           ;os.c: 199: _system_pin_setup();
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;incstack = 0
  5959  00FEC4  ECEF  F08C         	call	__system_pin_setup	;wreg free
  5960                           
  5961                           ;os.c: 202: _adc_init();
  5962  00FEC8  EC73  F095         	call	__adc_init	;wreg free
  5963                           
  5964                           ;os.c: 205: flash_init();
  5965  00FECC  EC42  F095         	call	_flash_init	;wreg free
  5966                           
  5967                           ;os.c: 208: fat_init();
  5968  00FED0  EC32  F095         	call	_fat_init	;wreg free
  5969                           
  5970                           ;os.c: 211: encoder_init();
  5971  00FED4  EC84  F094         	call	_encoder_init	;wreg free
  5972                           
  5973                           ;os.c: 214: i2c_init();
  5974  00FED8  ECF9  F094         	call	_i2c_init	;wreg free
  5975                           
  5976                           ;os.c: 217: display_init();
  5977  00FEDC  EC3A  F093         	call	_display_init	;wreg free
  5978                           
  5979                           ;os.c: 218: display_update();
  5980  00FEE0  ECCA  F092         	call	_display_update	;wreg free
  5981                           
  5982                           ;os.c: 219: _backlight_init();
  5983  00FEE4  EC6B  F095         	call	__backlight_init	;wreg free
  5984                           
  5985                           ;os.c: 222: motor_init();
  5986  00FEE8  ECEB  F094         	call	_motor_init	;wreg free
  5987                           
  5988                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  5989  00FEEC  0E01               	movlw	1
  5990  00FEEE  0100               	movlb	0	; () banked
  5991  00FEF0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;os.c: 226: os.busy = 0;
  5995  00FEF2  0E00               	movlw	0
  5996  00FEF4  6FE1               	movwf	(_os+14)& (0+255),b	;volatile
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;os.c: 227: os.current_position_in_steps = 0;
  6000  00FEF6  0E00               	movlw	0
  6001  00FEF8  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
  6002  00FEFA  0E00               	movlw	0
  6003  00FEFC  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
  6004  00FEFE  0E00               	movlw	0
  6005  00FF00  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
  6006  00FF02  0E00               	movlw	0
  6007  00FF04  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;os.c: 228: os.last_approach_direction = MOTOR_DIRECTION_CW;
  6011  00FF06  0E01               	movlw	1
  6012  00FF08  6FE2               	movwf	(_os+15)& (0+255),b	;volatile
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;os.c: 229: os.setup_step_size = 1000;
  6016  00FF0A  0E03               	movlw	3
  6017  00FF0C  6FE4               	movwf	(_os+17)& (0+255),b	;volatile
  6018  00FF0E  0EE8               	movlw	232
  6019  00FF10  6FE3               	movwf	(_os+16)& (0+255),b	;volatile
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;os.c: 230: os.approach_direction = MOTOR_DIRECTION_CW;
  6023  00FF12  0E01               	movlw	1
  6024  00FF14  6FE5               	movwf	(_os+18)& (0+255),b	;volatile
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;os.c: 231: os.division = 36;
  6028  00FF16  0E00               	movlw	0
  6029  00FF18  6FE7               	movwf	(_os+20)& (0+255),b	;volatile
  6030  00FF1A  0E24               	movlw	36
  6031  00FF1C  6FE6               	movwf	(_os+19)& (0+255),b	;volatile
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;os.c: 232: os.divide_step_size = 10;
  6035  00FF1E  0E0A               	movlw	10
  6036  00FF20  6FE8               	movwf	(_os+21)& (0+255),b	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;os.c: 233: os.divide_position = 0;
  6040  00FF22  0E00               	movlw	0
  6041  00FF24  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
  6042  00FF26  0E00               	movlw	0
  6043  00FF28  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;os.c: 234: os.divide_jump_size = 1;
  6047  00FF2A  0E00               	movlw	0
  6048  00FF2C  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
  6049  00FF2E  0E01               	movlw	1
  6050  00FF30  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;os.c: 235: os.arc_step_size = 1000;
  6054  00FF32  0E03               	movlw	3
  6055  00FF34  6FEE               	movwf	(_os+27)& (0+255),b	;volatile
  6056  00FF36  0EE8               	movlw	232
  6057  00FF38  6FED               	movwf	(_os+26)& (0+255),b	;volatile
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;os.c: 236: os.arc_size = 1000;
  6061  00FF3A  0EE8               	movlw	232
  6062  00FF3C  6FEF               	movwf	(_os+28)& (0+255),b	;volatile
  6063  00FF3E  0E03               	movlw	3
  6064  00FF40  6FF0               	movwf	(_os+29)& (0+255),b	;volatile
  6065  00FF42  0E00               	movlw	0
  6066  00FF44  6FF1               	movwf	(_os+30)& (0+255),b	;volatile
  6067  00FF46  0E00               	movlw	0
  6068  00FF48  6FF2               	movwf	(_os+31)& (0+255),b	;volatile
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;os.c: 237: os.arc_speed = 30;
  6072  00FF4A  0E00               	movlw	0
  6073  00FF4C  6FF4               	movwf	(_os+33)& (0+255),b	;volatile
  6074  00FF4E  0E1E               	movlw	30
  6075  00FF50  6FF3               	movwf	(_os+32)& (0+255),b	;volatile
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;os.c: 238: os.arc_direction = MOTOR_DIRECTION_CW;
  6079  00FF52  0E01               	movlw	1
  6080  00FF54  6FF5               	movwf	(_os+34)& (0+255),b	;volatile
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;os.c: 239: os.manual_speed = 30;
  6084  00FF56  0E00               	movlw	0
  6085  00FF58  6FF7               	movwf	(_os+36)& (0+255),b	;volatile
  6086  00FF5A  0E1E               	movlw	30
  6087  00FF5C  6FF6               	movwf	(_os+35)& (0+255),b	;volatile
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;os.c: 240: os.manual_direction = MOTOR_DIRECTION_CW;
  6091  00FF5E  0E01               	movlw	1
  6092  00FF60  6FF8               	movwf	(_os+37)& (0+255),b	;volatile
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;os.c: 241: os.beep_count = 0;
  6096  00FF62  0E00               	movlw	0
  6097  00FF64  6FF9               	movwf	(_os+38)& (0+255),b	;volatile
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;os.c: 243: config.full_circle_in_steps = 576000;
  6101  00FF66  0E00               	movlw	0
  6102  00FF68  0101               	movlb	1	; () banked
  6103  00FF6A  6F79               	movwf	_config& (0+255),b
  6104  00FF6C  0ECA               	movlw	202
  6105  00FF6E  6F7A               	movwf	(_config+1)& (0+255),b
  6106  00FF70  0E08               	movlw	8
  6107  00FF72  6F7B               	movwf	(_config+2)& (0+255),b
  6108  00FF74  0E00               	movlw	0
  6109  00FF76  6F7C               	movwf	(_config+3)& (0+255),b
  6110                           
  6111                           ; BSR set to: 1
  6112                           ;os.c: 244: config.inverse_direction = 1;
  6113  00FF78  0E01               	movlw	1
  6114  00FF7A  6F7D               	movwf	(_config+4)& (0+255),b
  6115                           
  6116                           ; BSR set to: 1
  6117                           ;os.c: 245: config.overshoot_in_steps = 6400;
  6118  00FF7C  0E19               	movlw	25
  6119  00FF7E  6F7F               	movwf	(_config+6)& (0+255),b
  6120  00FF80  0E00               	movlw	0
  6121  00FF82  6F7E               	movwf	(_config+5)& (0+255),b
  6122                           
  6123                           ; BSR set to: 1
  6124                           ;os.c: 246: config.overshoot_cost_in_steps = 3000;
  6125  00FF84  0E0B               	movlw	11
  6126  00FF86  6F81               	movwf	(_config+8)& (0+255),b
  6127  00FF88  0EB8               	movlw	184
  6128  00FF8A  6F80               	movwf	(_config+7)& (0+255),b
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;os.c: 247: config.minimum_speed = 1;
  6132  00FF8C  0E00               	movlw	0
  6133  00FF8E  6F83               	movwf	(_config+10)& (0+255),b
  6134  00FF90  0E01               	movlw	1
  6135  00FF92  6F82               	movwf	(_config+9)& (0+255),b
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;os.c: 248: config.maximum_speed = 380;
  6139  00FF94  0E01               	movlw	1
  6140  00FF96  6F85               	movwf	(_config+12)& (0+255),b
  6141  00FF98  0E7C               	movlw	124
  6142  00FF9A  6F84               	movwf	(_config+11)& (0+255),b
  6143                           
  6144                           ; BSR set to: 1
  6145                           ;os.c: 249: config.maximum_speed_arc = 305;
  6146  00FF9C  0E01               	movlw	1
  6147  00FF9E  6F89               	movwf	(_config+16)& (0+255),b
  6148  00FFA0  0E31               	movlw	49
  6149  00FFA2  6F88               	movwf	(_config+15)& (0+255),b
  6150                           
  6151                           ; BSR set to: 1
  6152                           ;os.c: 250: config.maximum_speed_manual = 305;
  6153  00FFA4  0E01               	movlw	1
  6154  00FFA6  6F8D               	movwf	(_config+20)& (0+255),b
  6155  00FFA8  0E31               	movlw	49
  6156  00FFAA  6F8C               	movwf	(_config+19)& (0+255),b
  6157                           
  6158                           ; BSR set to: 1
  6159                           ;os.c: 251: config.beep_duration = 10;
  6160  00FFAC  0E0A               	movlw	10
  6161  00FFAE  6F8E               	movwf	(_config+21)& (0+255),b
  6162                           
  6163                           ; BSR set to: 1
  6164                           ;os.c: 254: _system_timer0_init();
  6165  00FFB0  EC1A  F094         	call	__system_timer0_init	;wreg free
  6166  00FFB4  0012               	return		;funcret
  6167  00FFB6                     __end_of_system_init:
  6168                           	opt stack 0
  6169                           tblptru	equ	0xFF8
  6170                           tblptrh	equ	0xFF7
  6171                           tblptrl	equ	0xFF6
  6172                           tablat	equ	0xFF5
  6173                           postinc0	equ	0xFEE
  6174                           wreg	equ	0xFE8
  6175                           postdec1	equ	0xFE5
  6176                           fsr1h	equ	0xFE2
  6177                           fsr1l	equ	0xFE1
  6178                           status	equ	0xFD8
  6179                           
  6180 ;; *************** function _motor_init *****************
  6181 ;; Defined at:
  6182 ;;		line 153 in file "motor.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;Total ram usage:        0 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:   10
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_system_init
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text2
  6211  0129D6                     __ptext2:
  6212                           	opt stack 0
  6213  0129D6                     _motor_init:
  6214                           	opt stack 19
  6215                           
  6216                           ;motor.c: 156: motor_cue_read_index = 0;
  6217                           
  6218                           ;incstack = 0
  6219  0129D6  0E00               	movlw	0
  6220  0129D8  6E23               	movwf	_motor_cue_read_index,c
  6221                           
  6222                           ;motor.c: 157: motor_cue_write_index = 0;
  6223  0129DA  0E00               	movlw	0
  6224  0129DC  6E22               	movwf	_motor_cue_write_index,c
  6225                           
  6226                           ;motor.c: 163: CCPTMRS0bits.C2TSEL = 0b000;
  6227  0129DE  010F               	movlb	15	; () banked
  6228  0129E0  9752               	bcf	82,3,b	;volatile
  6229  0129E2  9952               	bcf	82,4,b	;volatile
  6230  0129E4  9B52               	bcf	82,5,b	;volatile
  6231                           
  6232                           ;motor.c: 168: CCP1CONbits.P1M = 0b00;
  6233  0129E6  0E3F               	movlw	-193
  6234  0129E8  16BA               	andwf	4026,f,c	;volatile
  6235                           
  6236                           ;motor.c: 171: CCP1CONbits.DC1B = 0b00;
  6237  0129EA  0ECF               	movlw	-49
  6238  0129EC  16BA               	andwf	4026,f,c	;volatile
  6239                           
  6240                           ; BSR set to: 15
  6241                           ;motor.c: 174: LATBbits.LB0 = 0;
  6242  0129EE  908A               	bcf	3978,0,c	;volatile
  6243                           
  6244                           ; BSR set to: 15
  6245  0129F0  0012               	return		;funcret
  6246  0129F2                     __end_of_motor_init:
  6247                           	opt stack 0
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           postinc0	equ	0xFEE
  6253                           wreg	equ	0xFE8
  6254                           postdec1	equ	0xFE5
  6255                           fsr1h	equ	0xFE2
  6256                           fsr1l	equ	0xFE1
  6257                           status	equ	0xFD8
  6258                           
  6259 ;; *************** function _i2c_init *****************
  6260 ;; Defined at:
  6261 ;;		line 24 in file "i2c.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;		None
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;Total ram usage:        0 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:   10
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_system_init
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text3
  6290  0129F2                     __ptext3:
  6291                           	opt stack 0
  6292  0129F2                     _i2c_init:
  6293                           	opt stack 19
  6294                           
  6295                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  6296                           
  6297                           ; BSR set to: 15
  6298                           ;incstack = 0
  6299  0129F2  8A93               	bsf	3987,5,c	;volatile
  6300                           
  6301                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  6302  0129F4  8893               	bsf	3987,4,c	;volatile
  6303                           
  6304                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  6305  0129F6  9EC7               	bcf	4039,7,c	;volatile
  6306                           
  6307                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  6308  0129F8  9CC7               	bcf	4039,6,c	;volatile
  6309                           
  6310                           ;i2c.c: 31: SSP1ADD = 119;
  6311  0129FA  0E77               	movlw	119
  6312  0129FC  6EC8               	movwf	4040,c	;volatile
  6313                           
  6314                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  6315  0129FE  9EC6               	bcf	4038,7,c	;volatile
  6316                           
  6317                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  6318  012A00  9CC6               	bcf	4038,6,c	;volatile
  6319                           
  6320                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  6321  012A02  50C6               	movf	4038,w,c	;volatile
  6322  012A04  0BF0               	andlw	-16
  6323  012A06  0908               	iorlw	8
  6324  012A08  6EC6               	movwf	4038,c	;volatile
  6325                           
  6326                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  6327  012A0A  8AC6               	bsf	4038,5,c	;volatile
  6328  012A0C  0012               	return		;funcret
  6329  012A0E                     __end_of_i2c_init:
  6330                           	opt stack 0
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           postinc0	equ	0xFEE
  6336                           wreg	equ	0xFE8
  6337                           postdec1	equ	0xFE5
  6338                           fsr1h	equ	0xFE2
  6339                           fsr1l	equ	0xFE1
  6340                           status	equ	0xFD8
  6341                           
  6342 ;; *************** function _flash_init *****************
  6343 ;; Defined at:
  6344 ;;		line 361 in file "flash.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:   14
  6365 ;; This function calls:
  6366 ;;		__flash_set_page_size
  6367 ;;		_spi_init
  6368 ;; This function is called by:
  6369 ;;		_system_init
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text4
  6374  012A84                     __ptext4:
  6375                           	opt stack 0
  6376  012A84                     _flash_init:
  6377                           	opt stack 15
  6378                           
  6379                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  6380                           
  6381                           ;incstack = 0
  6382  012A84  0E00               	movlw	0
  6383  012A86  EC15  F092         	call	_spi_init
  6384                           
  6385                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  6386  012A8A  0E00               	movlw	0
  6387  012A8C  ECB8  F08C         	call	__flash_set_page_size
  6388  012A90  0012               	return		;funcret
  6389  012A92                     __end_of_flash_init:
  6390                           	opt stack 0
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           postinc0	equ	0xFEE
  6396                           wreg	equ	0xFE8
  6397                           postdec1	equ	0xFE5
  6398                           fsr1h	equ	0xFE2
  6399                           fsr1l	equ	0xFE1
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _spi_init *****************
  6403 ;; Defined at:
  6404 ;;		line 89 in file "spi.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  configuratio    1    wreg     enum E6801
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  configuratio    1    3[BANK0 ] enum E6801
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;Total ram usage:        1 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:   11
  6425 ;; This function calls:
  6426 ;;		__spi_init
  6427 ;; This function is called by:
  6428 ;;		_flash_init
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text5
  6433  01242A                     __ptext5:
  6434                           	opt stack 0
  6435  01242A                     _spi_init:
  6436                           	opt stack 17
  6437                           
  6438                           ;incstack = 0
  6439                           ;spi_init@configuration stored from wreg
  6440  01242A  0100               	movlb	0	; () banked
  6441  01242C  6F63               	movwf	spi_init@configuration& (0+255),b
  6442                           
  6443                           ;spi.c: 91: switch(configuration)
  6444  01242E  D012               	goto	l2115
  6445  012430                     
  6446                           ;spi.c: 94: _spi_init(config_internal);
  6447  012430  C152  F060         	movff	_config_internal,__spi_init@details
  6448  012434  C153  F061         	movff	_config_internal+1,__spi_init@details+1
  6449  012438  C154  F062         	movff	_config_internal+2,__spi_init@details+2
  6450  01243C  ECAE  F092         	call	__spi_init	;wreg free
  6451                           
  6452                           ;spi.c: 95: break;
  6453  012440  D011               	goto	l2117
  6454  012442                     
  6455                           ;spi.c: 98: _spi_init(config_external);
  6456  012442  C14F  F060         	movff	_config_external,__spi_init@details
  6457  012446  C150  F061         	movff	_config_external+1,__spi_init@details+1
  6458  01244A  C151  F062         	movff	_config_external+2,__spi_init@details+2
  6459  01244E  ECAE  F092         	call	__spi_init	;wreg free
  6460                           
  6461                           ;spi.c: 100: }
  6462                           
  6463                           ;spi.c: 99: break;
  6464  012452  D008               	goto	l2117
  6465  012454                     l2115:
  6466  012454  0100               	movlb	0	; () banked
  6467  012456  5163               	movf	spi_init@configuration& (0+255),w,b
  6468                           
  6469                           ; Switch size 1, requested type "space"
  6470                           ; Number of cases is 2, Range of values is 0 to 1
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte            7     4 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475  012458  0A00               	xorlw	0	; case 0
  6476  01245A  B4D8               	btfsc	status,2,c
  6477  01245C  D7E9               	goto	l2116
  6478  01245E  0A01               	xorlw	1	; case 1
  6479  012460  B4D8               	btfsc	status,2,c
  6480  012462  D7EF               	goto	l2118
  6481  012464                     l2117:
  6482                           
  6483                           ;spi.c: 102: active_configuration = configuration;
  6484  012464  C063  F16B         	movff	spi_init@configuration,_active_configuration
  6485  012468  0012               	return		;funcret
  6486  01246A                     __end_of_spi_init:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           postinc0	equ	0xFEE
  6493                           wreg	equ	0xFE8
  6494                           postdec1	equ	0xFE5
  6495                           fsr1h	equ	0xFE2
  6496                           fsr1l	equ	0xFE1
  6497                           status	equ	0xFD8
  6498                           
  6499 ;; *************** function __spi_init *****************
  6500 ;; Defined at:
  6501 ;;		line 24 in file "spi.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  details         3    0[BANK0 ] struct .
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6515 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6518 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6519 ;;Total ram usage:        3 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:   10
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_spi_init
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text6
  6530  01255C                     __ptext6:
  6531                           	opt stack 0
  6532  01255C                     __spi_init:
  6533                           	opt stack 17
  6534                           
  6535                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6536                           
  6537                           ;incstack = 0
  6538  01255C  0E55               	movlw	85
  6539  01255E  6EA7               	movwf	4007,c	;volsfr
  6540  012560  0EAA               	movlw	170
  6541  012562  6EA7               	movwf	4007,c	;volsfr
  6542  012564  010E               	movlb	14	; () banked
  6543  012566  91BF               	bcf	191,0,b	;volatile
  6544                           
  6545                           ;spi.c: 31: RPINR21 = 22;
  6546  012568  0E16               	movlw	22
  6547  01256A  6FFC               	movwf	252,b	;volatile
  6548                           
  6549                           ;spi.c: 32: RPOR21 = 10;
  6550  01256C  0E0A               	movlw	10
  6551  01256E  6FD5               	movwf	213,b	;volatile
  6552                           
  6553                           ;spi.c: 34: RPOR23 = 11;
  6554  012570  0E0B               	movlw	11
  6555  012572  6FD7               	movwf	215,b	;volatile
  6556                           
  6557                           ;spi.c: 35: RPINR22 = 23;
  6558  012574  0E17               	movlw	23
  6559  012576  6FFD               	movwf	253,b	;volatile
  6560                           
  6561                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6562  012578  0E55               	movlw	85
  6563  01257A  6EA7               	movwf	4007,c	;volsfr
  6564  01257C  0EAA               	movlw	170
  6565  01257E  6EA7               	movwf	4007,c	;volsfr
  6566                           
  6567                           ; BSR set to: 14
  6568  012580  81BF               	bsf	191,0,b	;volatile
  6569                           
  6570                           ; BSR set to: 14
  6571                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  6572  012582  8E73               	bsf	3955,7,c	;volatile
  6573                           
  6574                           ; BSR set to: 14
  6575                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  6576  012584  8C73               	bsf	3955,6,c	;volatile
  6577                           
  6578                           ; BSR set to: 14
  6579                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  6580  012586  9872               	bcf	3954,4,c	;volatile
  6581                           
  6582                           ; BSR set to: 14
  6583                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  6584  012588  9072               	bcf	3954,0,c	;volatile
  6585  01258A  9272               	bcf	3954,1,c	;volatile
  6586  01258C  9472               	bcf	3954,2,c	;volatile
  6587  01258E  9672               	bcf	3954,3,c	;volatile
  6588                           
  6589                           ; BSR set to: 14
  6590                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  6591  012590  8A72               	bsf	3954,5,c	;volatile
  6592                           
  6593                           ; BSR set to: 14
  6594  012592  0012               	return		;funcret
  6595  012594                     __end_of__spi_init:
  6596                           	opt stack 0
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           postinc0	equ	0xFEE
  6602                           wreg	equ	0xFE8
  6603                           postdec1	equ	0xFE5
  6604                           fsr1h	equ	0xFE2
  6605                           fsr1l	equ	0xFE1
  6606                           status	equ	0xFD8
  6607                           
  6608 ;; *************** function __flash_set_page_size *****************
  6609 ;; Defined at:
  6610 ;;		line 99 in file "flash.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  size            1    wreg     enum E6971
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  size            1   23[BANK0 ] enum E6971
  6615 ;;  command         4   19[BANK0 ] unsigned char [4]
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;Total ram usage:        5 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:   13
  6632 ;; This function calls:
  6633 ;;		__flash_is_busy
  6634 ;;		_memcpy
  6635 ;;		_spi_tx
  6636 ;; This function is called by:
  6637 ;;		_flash_init
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text7
  6642  011970                     __ptext7:
  6643                           	opt stack 0
  6644  011970                     __flash_set_page_size:
  6645                           	opt stack 15
  6646                           
  6647                           ; BSR set to: 14
  6648                           ;incstack = 0
  6649                           ;__flash_set_page_size@size stored from wreg
  6650  011970  0100               	movlb	0	; () banked
  6651  011972  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  6652  011974                     
  6653                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  6654  011974  ECB9  F094         	call	__flash_is_busy	;wreg free
  6655  011978  0900               	iorlw	0
  6656  01197A  A4D8               	btfss	status,2,c
  6657  01197C  D7FB               	goto	l19757
  6658                           
  6659                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  6660  01197E  0100               	movlb	0	; () banked
  6661  011980  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  6662  011982  A4D8               	btfss	status,2,c
  6663  011984  D00E               	goto	l1476
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  6667  011986  0E73               	movlw	low __flash_set_page_size@command
  6668  011988  6F60               	movwf	memcpy@d1& (0+255),b
  6669  01198A  0E00               	movlw	high __flash_set_page_size@command
  6670  01198C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6671  01198E  0EE9               	movlw	low _flash_command_pagesize_512
  6672  011990  6F62               	movwf	memcpy@s1& (0+255),b
  6673  011992  0EA1               	movlw	high _flash_command_pagesize_512
  6674  011994  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6675  011996  0E00               	movlw	0
  6676  011998  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6677  01199A  0E04               	movlw	4
  6678  01199C  6F64               	movwf	memcpy@n& (0+255),b
  6679  01199E  ECE9  F08D         	call	_memcpy	;wreg free
  6680  0119A2                     l1476:
  6681                           
  6682                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  6683  0119A2  0100               	movlb	0	; () banked
  6684  0119A4  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  6685  0119A6  A4D8               	btfss	status,2,c
  6686  0119A8  D00E               	goto	l1477
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  6690  0119AA  0E73               	movlw	low __flash_set_page_size@command
  6691  0119AC  6F60               	movwf	memcpy@d1& (0+255),b
  6692  0119AE  0E00               	movlw	high __flash_set_page_size@command
  6693  0119B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6694  0119B2  0EE5               	movlw	low _flash_command_pagesize_528
  6695  0119B4  6F62               	movwf	memcpy@s1& (0+255),b
  6696  0119B6  0EA1               	movlw	high _flash_command_pagesize_528
  6697  0119B8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6698  0119BA  0E00               	movlw	0
  6699  0119BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6700  0119BE  0E04               	movlw	4
  6701  0119C0  6F64               	movwf	memcpy@n& (0+255),b
  6702  0119C2  ECE9  F08D         	call	_memcpy	;wreg free
  6703  0119C6                     l1477:
  6704                           
  6705                           ;flash.c: 113: spi_tx(command, 4);
  6706  0119C6  0E73               	movlw	low __flash_set_page_size@command
  6707  0119C8  0100               	movlb	0	; () banked
  6708  0119CA  6F60               	movwf	spi_tx@data& (0+255),b
  6709  0119CC  0E00               	movlw	high __flash_set_page_size@command
  6710  0119CE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  6711  0119D0  0E00               	movlw	0
  6712  0119D2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  6713  0119D4  0E04               	movlw	4
  6714  0119D6  6F62               	movwf	spi_tx@length& (0+255),b
  6715  0119D8  ECFF  F08E         	call	_spi_tx	;wreg free
  6716  0119DC  0012               	return		;funcret
  6717  0119DE                     __end_of__flash_set_page_size:
  6718                           	opt stack 0
  6719                           tblptru	equ	0xFF8
  6720                           tblptrh	equ	0xFF7
  6721                           tblptrl	equ	0xFF6
  6722                           tablat	equ	0xFF5
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           postdec1	equ	0xFE5
  6726                           fsr1h	equ	0xFE2
  6727                           fsr1l	equ	0xFE1
  6728                           status	equ	0xFD8
  6729                           
  6730 ;; *************** function _fat_init *****************
  6731 ;; Defined at:
  6732 ;;		line 1382 in file "fat16.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;		None
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;Total ram usage:        0 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:   16
  6753 ;; This function calls:
  6754 ;;		_fat_format
  6755 ;;		_fat_get_format_status
  6756 ;; This function is called by:
  6757 ;;		_system_init
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text8
  6762  012A64                     __ptext8:
  6763                           	opt stack 0
  6764  012A64                     _fat_init:
  6765                           	opt stack 13
  6766                           
  6767                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6768                           
  6769                           ;incstack = 0
  6770  012A64  ECC3  F086         	call	_fat_get_format_status	;wreg free
  6771  012A68  0900               	iorlw	0
  6772  012A6A  A4D8               	btfss	status,2,c
  6773  012A6C  0012               	return	
  6774                           
  6775                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6776  012A6E  ECB1  F06C         	call	_fat_format	;wreg free
  6777  012A72  0012               	return	
  6778  012A74                     __end_of_fat_init:
  6779                           	opt stack 0
  6780                           tblptru	equ	0xFF8
  6781                           tblptrh	equ	0xFF7
  6782                           tblptrl	equ	0xFF6
  6783                           tablat	equ	0xFF5
  6784                           postinc0	equ	0xFEE
  6785                           wreg	equ	0xFE8
  6786                           postdec1	equ	0xFE5
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           status	equ	0xFD8
  6790                           
  6791 ;; *************** function _fat_get_format_status *****************
  6792 ;; Defined at:
  6793 ;;		line 1292 in file "fat16.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  cntr            2   45[BANK0 ] unsigned int 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      enum E6945
  6800 ;; Registers used:
  6801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;Total ram usage:        4 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:   15
  6814 ;; This function calls:
  6815 ;;		__get_fbr
  6816 ;;		__get_mbr
  6817 ;;		_flash_sector_read
  6818 ;; This function is called by:
  6819 ;;		_fat_init
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text9
  6824  010D86                     __ptext9:
  6825                           	opt stack 0
  6826  010D86                     _fat_get_format_status:
  6827                           	opt stack 13
  6828                           
  6829                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6830                           
  6831                           ;incstack = 0
  6832  010D86  0E00               	movlw	0
  6833  010D88  0100               	movlb	0	; () banked
  6834  010D8A  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6835  010D8C  0E00               	movlw	0
  6836  010D8E  6F87               	movwf	flash_sector_read@page& (0+255),b
  6837  010D90  0E00               	movlw	low _buffer
  6838  010D92  6F89               	movwf	flash_sector_read@data& (0+255),b
  6839  010D94  0E08               	movlw	high _buffer
  6840  010D96  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6841  010D98  EC70  F094         	call	_flash_sector_read	;wreg free
  6842                           
  6843                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6844  010D9C  0E00               	movlw	0
  6845  010D9E  0100               	movlb	0	; () banked
  6846  010DA0  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6847  010DA2  0E00               	movlw	0
  6848  010DA4  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6849  010DA6                     l19787:
  6850                           
  6851                           ; BSR set to: 0
  6852  010DA6  0E02               	movlw	2
  6853  010DA8  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6854  010DAA  B0D8               	btfsc	status,0,c
  6855  010DAC  D017               	goto	u19610
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6859                           
  6860                           ; BSR set to: 0
  6861                           
  6862                           ; BSR set to: 0
  6863  010DAE  0E00               	movlw	low _buffer
  6864  010DB0  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6865  010DB2  6ED9               	movwf	fsr2l,c
  6866  010DB4  0E08               	movlw	high _buffer
  6867  010DB6  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6868  010DB8  6EDA               	movwf	fsr2h,c
  6869  010DBA  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6870  010DBE  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6871  010DC2  ECEA  F082         	call	__get_mbr	;wreg free
  6872  010DC6  0100               	movlb	0	; () banked
  6873  010DC8  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6874  010DCA  50DE               	movf	postinc2,w,c
  6875  010DCC  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6876  010DCE  B4D8               	btfsc	status,2,c
  6877  010DD0  D002               	goto	l1997
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6881  010DD2  0E00               	movlw	0
  6882                           
  6883                           ; BSR set to: 0
  6884  010DD4  0012               	return	
  6885  010DD6                     l1997:
  6886                           
  6887                           ; BSR set to: 0
  6888                           
  6889                           ; BSR set to: 0
  6890  010DD6  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6891  010DD8  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6892  010DDA  D7E5               	goto	l19787
  6893  010DDC                     u19610:
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6897                           
  6898                           ; BSR set to: 0
  6899  010DDC  0E00               	movlw	0
  6900  010DDE  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6901  010DE0  0E01               	movlw	1
  6902  010DE2  6F87               	movwf	flash_sector_read@page& (0+255),b
  6903  010DE4  0E00               	movlw	low _buffer
  6904  010DE6  6F89               	movwf	flash_sector_read@data& (0+255),b
  6905  010DE8  0E08               	movlw	high _buffer
  6906  010DEA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6907  010DEC  EC70  F094         	call	_flash_sector_read	;wreg free
  6908                           
  6909                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6910  010DF0  0E00               	movlw	0
  6911  010DF2  0100               	movlb	0	; () banked
  6912  010DF4  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6913  010DF6  0E00               	movlw	0
  6914  010DF8  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6915  010DFA                     l19805:
  6916                           
  6917                           ; BSR set to: 0
  6918  010DFA  0E02               	movlw	2
  6919  010DFC  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6920  010DFE  B0D8               	btfsc	status,0,c
  6921  010E00  D017               	goto	u19640
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6925                           
  6926                           ; BSR set to: 0
  6927                           
  6928                           ; BSR set to: 0
  6929  010E02  0E00               	movlw	low _buffer
  6930  010E04  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6931  010E06  6ED9               	movwf	fsr2l,c
  6932  010E08  0E08               	movlw	high _buffer
  6933  010E0A  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6934  010E0C  6EDA               	movwf	fsr2h,c
  6935  010E0E  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6936  010E12  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6937  010E16  EC38  F069         	call	__get_fbr	;wreg free
  6938  010E1A  0100               	movlb	0	; () banked
  6939  010E1C  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6940  010E1E  50DE               	movf	postinc2,w,c
  6941  010E20  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6942  010E22  B4D8               	btfsc	status,2,c
  6943  010E24  D002               	goto	l2001
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6947  010E26  0E00               	movlw	0
  6948                           
  6949                           ; BSR set to: 0
  6950  010E28  0012               	return	
  6951  010E2A                     l2001:
  6952                           
  6953                           ; BSR set to: 0
  6954                           
  6955                           ; BSR set to: 0
  6956  010E2A  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6957  010E2C  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6958  010E2E  D7E5               	goto	l19805
  6959  010E30                     u19640:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6963                           
  6964                           ; BSR set to: 0
  6965  010E30  0E01               	movlw	1
  6966  010E32  0012               	return	
  6967  010E34                     __end_of_fat_get_format_status:
  6968                           	opt stack 0
  6969                           tblptru	equ	0xFF8
  6970                           tblptrh	equ	0xFF7
  6971                           tblptrl	equ	0xFF6
  6972                           tablat	equ	0xFF5
  6973                           postinc0	equ	0xFEE
  6974                           wreg	equ	0xFE8
  6975                           postdec1	equ	0xFE5
  6976                           fsr1h	equ	0xFE2
  6977                           fsr1l	equ	0xFE1
  6978                           postinc2	equ	0xFDE
  6979                           fsr2h	equ	0xFDA
  6980                           fsr2l	equ	0xFD9
  6981                           status	equ	0xFD8
  6982                           
  6983 ;; *************** function _fat_format *****************
  6984 ;; Defined at:
  6985 ;;		line 1320 in file "fat16.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;		None
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  cntr            2   36[BANK0 ] unsigned int 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;Total ram usage:        2 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:   15
  7006 ;; This function calls:
  7007 ;;		__get_data
  7008 ;;		__get_fat
  7009 ;;		__get_fbr
  7010 ;;		__get_mbr
  7011 ;;		__get_root
  7012 ;;		_flash_sector_write
  7013 ;; This function is called by:
  7014 ;;		_fat_init
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text10
  7019  00D962                     __ptext10:
  7020                           	opt stack 0
  7021  00D962                     _fat_format:
  7022                           	opt stack 13
  7023                           
  7024                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;incstack = 0
  7028  00D962  0E00               	movlw	0
  7029  00D964  0100               	movlb	0	; () banked
  7030  00D966  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7031  00D968  0E00               	movlw	0
  7032  00D96A  6F84               	movwf	fat_format@cntr& (0+255),b
  7033  00D96C                     l19825:
  7034                           
  7035                           ; BSR set to: 0
  7036  00D96C  0E02               	movlw	2
  7037  00D96E  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7038  00D970  B0D8               	btfsc	status,0,c
  7039  00D972  D011               	goto	u19660
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  7043                           
  7044                           ; BSR set to: 0
  7045                           
  7046                           ; BSR set to: 0
  7047  00D974  0E00               	movlw	low _buffer
  7048  00D976  2584               	addwf	fat_format@cntr& (0+255),w,b
  7049  00D978  6ED9               	movwf	fsr2l,c
  7050  00D97A  0E08               	movlw	high _buffer
  7051  00D97C  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7052  00D97E  6EDA               	movwf	fsr2h,c
  7053  00D980  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  7054  00D984  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  7055  00D988  ECEA  F082         	call	__get_mbr	;wreg free
  7056  00D98C  6EDF               	movwf	indf2,c
  7057  00D98E  0100               	movlb	0	; () banked
  7058  00D990  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7059  00D992  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7060  00D994  D7EB               	goto	l19825
  7061  00D996                     u19660:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  7065                           
  7066                           ; BSR set to: 0
  7067  00D996  0E00               	movlw	0
  7068  00D998  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7069  00D99A  0E00               	movlw	0
  7070  00D99C  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7071  00D99E  0E00               	movlw	low _buffer
  7072  00D9A0  6F81               	movwf	flash_sector_write@data& (0+255),b
  7073  00D9A2  0E08               	movlw	high _buffer
  7074  00D9A4  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7075  00D9A6  ECA7  F090         	call	_flash_sector_write	;wreg free
  7076                           
  7077                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  7078  00D9AA  0E00               	movlw	0
  7079  00D9AC  0100               	movlb	0	; () banked
  7080  00D9AE  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7081  00D9B0  0E00               	movlw	0
  7082  00D9B2  6F84               	movwf	fat_format@cntr& (0+255),b
  7083  00D9B4                     l19839:
  7084                           
  7085                           ; BSR set to: 0
  7086  00D9B4  0E02               	movlw	2
  7087  00D9B6  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7088  00D9B8  B0D8               	btfsc	status,0,c
  7089  00D9BA  D011               	goto	u19680
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  7093                           
  7094                           ; BSR set to: 0
  7095                           
  7096                           ; BSR set to: 0
  7097  00D9BC  0E00               	movlw	low _buffer
  7098  00D9BE  2584               	addwf	fat_format@cntr& (0+255),w,b
  7099  00D9C0  6ED9               	movwf	fsr2l,c
  7100  00D9C2  0E08               	movlw	high _buffer
  7101  00D9C4  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7102  00D9C6  6EDA               	movwf	fsr2h,c
  7103  00D9C8  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  7104  00D9CC  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  7105  00D9D0  EC38  F069         	call	__get_fbr	;wreg free
  7106  00D9D4  6EDF               	movwf	indf2,c
  7107  00D9D6  0100               	movlb	0	; () banked
  7108  00D9D8  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7109  00D9DA  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7110  00D9DC  D7EB               	goto	l19839
  7111  00D9DE                     u19680:
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  7115                           
  7116                           ; BSR set to: 0
  7117  00D9DE  0E00               	movlw	0
  7118  00D9E0  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7119  00D9E2  0E01               	movlw	1
  7120  00D9E4  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7121  00D9E6  0E00               	movlw	low _buffer
  7122  00D9E8  6F81               	movwf	flash_sector_write@data& (0+255),b
  7123  00D9EA  0E08               	movlw	high _buffer
  7124  00D9EC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7125  00D9EE  ECA7  F090         	call	_flash_sector_write	;wreg free
  7126                           
  7127                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  7128  00D9F2  0E00               	movlw	0
  7129  00D9F4  0100               	movlb	0	; () banked
  7130  00D9F6  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7131  00D9F8  0E00               	movlw	0
  7132  00D9FA  6F84               	movwf	fat_format@cntr& (0+255),b
  7133  00D9FC                     l19853:
  7134                           
  7135                           ; BSR set to: 0
  7136  00D9FC  0E02               	movlw	2
  7137  00D9FE  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7138  00DA00  B0D8               	btfsc	status,0,c
  7139  00DA02  D011               	goto	u19700
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  7143                           
  7144                           ; BSR set to: 0
  7145                           
  7146                           ; BSR set to: 0
  7147  00DA04  0E00               	movlw	low _buffer
  7148  00DA06  2584               	addwf	fat_format@cntr& (0+255),w,b
  7149  00DA08  6ED9               	movwf	fsr2l,c
  7150  00DA0A  0E08               	movlw	high _buffer
  7151  00DA0C  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7152  00DA0E  6EDA               	movwf	fsr2h,c
  7153  00DA10  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  7154  00DA14  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  7155  00DA18  EC2C  F08F         	call	__get_fat	;wreg free
  7156  00DA1C  6EDF               	movwf	indf2,c
  7157  00DA1E  0100               	movlb	0	; () banked
  7158  00DA20  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7159  00DA22  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7160  00DA24  D7EB               	goto	l19853
  7161  00DA26                     u19700:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  7165                           
  7166                           ; BSR set to: 0
  7167  00DA26  0E00               	movlw	0
  7168  00DA28  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7169  00DA2A  0E02               	movlw	2
  7170  00DA2C  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7171  00DA2E  0E00               	movlw	low _buffer
  7172  00DA30  6F81               	movwf	flash_sector_write@data& (0+255),b
  7173  00DA32  0E08               	movlw	high _buffer
  7174  00DA34  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7175  00DA36  ECA7  F090         	call	_flash_sector_write	;wreg free
  7176                           
  7177                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  7178  00DA3A  0E00               	movlw	0
  7179  00DA3C  0100               	movlb	0	; () banked
  7180  00DA3E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7181  00DA40  0E00               	movlw	0
  7182  00DA42  6F84               	movwf	fat_format@cntr& (0+255),b
  7183  00DA44                     l19867:
  7184                           
  7185                           ; BSR set to: 0
  7186  00DA44  0E02               	movlw	2
  7187  00DA46  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7188  00DA48  B0D8               	btfsc	status,0,c
  7189  00DA4A  D00B               	goto	u19720
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  7193                           
  7194                           ; BSR set to: 0
  7195                           
  7196                           ; BSR set to: 0
  7197  00DA4C  0E00               	movlw	low _buffer
  7198  00DA4E  2584               	addwf	fat_format@cntr& (0+255),w,b
  7199  00DA50  6ED9               	movwf	fsr2l,c
  7200  00DA52  0E08               	movlw	high _buffer
  7201  00DA54  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7202  00DA56  6EDA               	movwf	fsr2h,c
  7203  00DA58  0E00               	movlw	0
  7204  00DA5A  6EDF               	movwf	indf2,c
  7205                           
  7206                           ; BSR set to: 0
  7207  00DA5C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7208  00DA5E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7209  00DA60  D7F1               	goto	l19867
  7210  00DA62                     u19720:
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  7214                           
  7215                           ; BSR set to: 0
  7216  00DA62  0E00               	movlw	0
  7217  00DA64  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7218  00DA66  0E03               	movlw	3
  7219  00DA68  6F84               	movwf	fat_format@cntr& (0+255),b
  7220  00DA6A                     l19879:
  7221                           
  7222                           ; BSR set to: 0
  7223  00DA6A  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  7224  00DA6C  E112               	bnz	l19889
  7225  00DA6E  0E22               	movlw	34
  7226  00DA70  5D84               	subwf	fat_format@cntr& (0+255),w,b
  7227  00DA72  B0D8               	btfsc	status,0,c
  7228  00DA74  D00E               	goto	u19740
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  7232                           
  7233                           ; BSR set to: 0
  7234                           
  7235                           ; BSR set to: 0
  7236  00DA76  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  7237  00DA7A  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  7238  00DA7E  0E00               	movlw	low _buffer
  7239  00DA80  6F81               	movwf	flash_sector_write@data& (0+255),b
  7240  00DA82  0E08               	movlw	high _buffer
  7241  00DA84  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7242  00DA86  ECA7  F090         	call	_flash_sector_write	;wreg free
  7243  00DA8A  0100               	movlb	0	; () banked
  7244  00DA8C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7245  00DA8E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7246  00DA90  D7EC               	goto	l19879
  7247  00DA92                     u19740:
  7248  00DA92                     l19889:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  7252  00DA92  0E00               	movlw	0
  7253  00DA94  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7254  00DA96  0E00               	movlw	0
  7255  00DA98  6F84               	movwf	fat_format@cntr& (0+255),b
  7256  00DA9A                     l19891:
  7257                           
  7258                           ; BSR set to: 0
  7259  00DA9A  0E02               	movlw	2
  7260  00DA9C  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7261  00DA9E  B0D8               	btfsc	status,0,c
  7262  00DAA0  D011               	goto	u19760
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  7266                           
  7267                           ; BSR set to: 0
  7268                           
  7269                           ; BSR set to: 0
  7270  00DAA2  0E00               	movlw	low _buffer
  7271  00DAA4  2584               	addwf	fat_format@cntr& (0+255),w,b
  7272  00DAA6  6ED9               	movwf	fsr2l,c
  7273  00DAA8  0E08               	movlw	high _buffer
  7274  00DAAA  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7275  00DAAC  6EDA               	movwf	fsr2h,c
  7276  00DAAE  C084  F060         	movff	fat_format@cntr,__get_root@idx
  7277  00DAB2  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  7278  00DAB6  EC8E  F070         	call	__get_root	;wreg free
  7279  00DABA  6EDF               	movwf	indf2,c
  7280  00DABC  0100               	movlb	0	; () banked
  7281  00DABE  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7282  00DAC0  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7283  00DAC2  D7EB               	goto	l19891
  7284  00DAC4                     u19760:
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  7288                           
  7289                           ; BSR set to: 0
  7290  00DAC4  0E00               	movlw	0
  7291  00DAC6  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7292  00DAC8  0E22               	movlw	34
  7293  00DACA  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7294  00DACC  0E00               	movlw	low _buffer
  7295  00DACE  6F81               	movwf	flash_sector_write@data& (0+255),b
  7296  00DAD0  0E08               	movlw	high _buffer
  7297  00DAD2  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7298  00DAD4  ECA7  F090         	call	_flash_sector_write	;wreg free
  7299                           
  7300                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  7301  00DAD8  0E00               	movlw	0
  7302  00DADA  0100               	movlb	0	; () banked
  7303  00DADC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7304  00DADE  0E00               	movlw	0
  7305  00DAE0  6F84               	movwf	fat_format@cntr& (0+255),b
  7306  00DAE2                     l19905:
  7307                           
  7308                           ; BSR set to: 0
  7309  00DAE2  0E02               	movlw	2
  7310  00DAE4  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7311  00DAE6  B0D8               	btfsc	status,0,c
  7312  00DAE8  D00B               	goto	u19780
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  7316                           
  7317                           ; BSR set to: 0
  7318                           
  7319                           ; BSR set to: 0
  7320  00DAEA  0E00               	movlw	low _buffer
  7321  00DAEC  2584               	addwf	fat_format@cntr& (0+255),w,b
  7322  00DAEE  6ED9               	movwf	fsr2l,c
  7323  00DAF0  0E08               	movlw	high _buffer
  7324  00DAF2  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7325  00DAF4  6EDA               	movwf	fsr2h,c
  7326  00DAF6  0E00               	movlw	0
  7327  00DAF8  6EDF               	movwf	indf2,c
  7328                           
  7329                           ; BSR set to: 0
  7330  00DAFA  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7331  00DAFC  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7332  00DAFE  D7F1               	goto	l19905
  7333  00DB00                     u19780:
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  7337                           
  7338                           ; BSR set to: 0
  7339  00DB00  0E00               	movlw	0
  7340  00DB02  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7341  00DB04  0E23               	movlw	35
  7342  00DB06  6F84               	movwf	fat_format@cntr& (0+255),b
  7343  00DB08                     l19917:
  7344                           
  7345                           ; BSR set to: 0
  7346  00DB08  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  7347  00DB0A  E112               	bnz	l19927
  7348  00DB0C  0E26               	movlw	38
  7349  00DB0E  5D84               	subwf	fat_format@cntr& (0+255),w,b
  7350  00DB10  B0D8               	btfsc	status,0,c
  7351  00DB12  D00E               	goto	u19800
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  7355                           
  7356                           ; BSR set to: 0
  7357                           
  7358                           ; BSR set to: 0
  7359  00DB14  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  7360  00DB18  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  7361  00DB1C  0E00               	movlw	low _buffer
  7362  00DB1E  6F81               	movwf	flash_sector_write@data& (0+255),b
  7363  00DB20  0E08               	movlw	high _buffer
  7364  00DB22  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7365  00DB24  ECA7  F090         	call	_flash_sector_write	;wreg free
  7366  00DB28  0100               	movlb	0	; () banked
  7367  00DB2A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7368  00DB2C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7369  00DB2E  D7EC               	goto	l19917
  7370  00DB30                     u19800:
  7371  00DB30                     l19927:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  7375  00DB30  0E00               	movlw	0
  7376  00DB32  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7377  00DB34  0E00               	movlw	0
  7378  00DB36  6F84               	movwf	fat_format@cntr& (0+255),b
  7379  00DB38                     l19929:
  7380                           
  7381                           ; BSR set to: 0
  7382  00DB38  0E02               	movlw	2
  7383  00DB3A  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7384  00DB3C  B0D8               	btfsc	status,0,c
  7385  00DB3E  D011               	goto	u19820
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  7389                           
  7390                           ; BSR set to: 0
  7391                           
  7392                           ; BSR set to: 0
  7393  00DB40  0E00               	movlw	low _buffer
  7394  00DB42  2584               	addwf	fat_format@cntr& (0+255),w,b
  7395  00DB44  6ED9               	movwf	fsr2l,c
  7396  00DB46  0E08               	movlw	high _buffer
  7397  00DB48  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7398  00DB4A  6EDA               	movwf	fsr2h,c
  7399  00DB4C  C084  F060         	movff	fat_format@cntr,__get_data@idx
  7400  00DB50  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  7401  00DB54  EC46  F094         	call	__get_data	;wreg free
  7402  00DB58  6EDF               	movwf	indf2,c
  7403  00DB5A  0100               	movlb	0	; () banked
  7404  00DB5C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7405  00DB5E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7406  00DB60  D7EB               	goto	l19929
  7407  00DB62                     u19820:
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  7411                           
  7412                           ; BSR set to: 0
  7413  00DB62  0E00               	movlw	0
  7414  00DB64  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7415  00DB66  0E26               	movlw	38
  7416  00DB68  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7417  00DB6A  0E00               	movlw	low _buffer
  7418  00DB6C  6F81               	movwf	flash_sector_write@data& (0+255),b
  7419  00DB6E  0E08               	movlw	high _buffer
  7420  00DB70  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7421  00DB72  ECA7  F090         	call	_flash_sector_write	;wreg free
  7422  00DB76  0012               	return	
  7423  00DB78                     __end_of_fat_format:
  7424                           	opt stack 0
  7425                           tblptru	equ	0xFF8
  7426                           tblptrh	equ	0xFF7
  7427                           tblptrl	equ	0xFF6
  7428                           tablat	equ	0xFF5
  7429                           postinc0	equ	0xFEE
  7430                           wreg	equ	0xFE8
  7431                           postdec1	equ	0xFE5
  7432                           fsr1h	equ	0xFE2
  7433                           fsr1l	equ	0xFE1
  7434                           indf2	equ	0xFDF
  7435                           postinc2	equ	0xFDE
  7436                           fsr2h	equ	0xFDA
  7437                           fsr2l	equ	0xFD9
  7438                           status	equ	0xFD8
  7439                           
  7440 ;; *************** function _flash_sector_write *****************
  7441 ;; Defined at:
  7442 ;;		line 434 in file "flash.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  page            2   31[BANK0 ] unsigned int 
  7445 ;;  data            2   33[BANK0 ] PTR unsigned char 
  7446 ;;		 -> buffer(512), 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  match           1   35[BANK0 ] enum E6979
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;Total ram usage:        5 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:   14
  7465 ;; This function calls:
  7466 ;;		__flash_compare_page_to_buffer
  7467 ;;		__flash_write_page_from_buffer
  7468 ;;		__flash_write_to_buffer
  7469 ;; This function is called by:
  7470 ;;		_fat_format
  7471 ;;		__make_cluster_chain
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text11
  7476  01214E                     __ptext11:
  7477                           	opt stack 0
  7478  01214E                     _flash_sector_write:
  7479                           	opt stack 13
  7480                           
  7481                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
  7482                           
  7483                           ;incstack = 0
  7484  01214E  0E00               	movlw	0
  7485  012150  0100               	movlb	0	; () banked
  7486  012152  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
  7487  012154  0E00               	movlw	0
  7488  012156  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
  7489  012158  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
  7490  01215C  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
  7491  012160  0E02               	movlw	2
  7492  012162  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
  7493  012164  0E00               	movlw	0
  7494  012166  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
  7495  012168  0E00               	movlw	0
  7496  01216A  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
  7497  01216C  EC2D  F090         	call	__flash_write_to_buffer	;wreg free
  7498                           
  7499                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
  7500  012170  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
  7501  012174  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
  7502  012178  0E00               	movlw	0
  7503  01217A  0100               	movlb	0	; () banked
  7504  01217C  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
  7505  01217E  EC55  F08B         	call	__flash_compare_page_to_buffer	;wreg free
  7506  012182  0100               	movlb	0	; () banked
  7507  012184  6F83               	movwf	flash_sector_write@match& (0+255),b
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
  7511  012186  0583               	decf	flash_sector_write@match& (0+255),w,b
  7512  012188  A4D8               	btfss	status,2,c
  7513  01218A  0012               	return	
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
  7517  01218C  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
  7518  012190  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
  7519  012194  0E00               	movlw	0
  7520  012196  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
  7521  012198  ECA5  F08E         	call	__flash_write_page_from_buffer	;wreg free
  7522  01219C  0012               	return	
  7523  01219E                     __end_of_flash_sector_write:
  7524                           	opt stack 0
  7525                           tblptru	equ	0xFF8
  7526                           tblptrh	equ	0xFF7
  7527                           tblptrl	equ	0xFF6
  7528                           tablat	equ	0xFF5
  7529                           postinc0	equ	0xFEE
  7530                           wreg	equ	0xFE8
  7531                           postdec1	equ	0xFE5
  7532                           fsr1h	equ	0xFE2
  7533                           fsr1l	equ	0xFE1
  7534                           indf2	equ	0xFDF
  7535                           postinc2	equ	0xFDE
  7536                           fsr2h	equ	0xFDA
  7537                           fsr2l	equ	0xFD9
  7538                           status	equ	0xFD8
  7539                           
  7540 ;; *************** function __flash_write_to_buffer *****************
  7541 ;; Defined at:
  7542 ;;		line 236 in file "flash.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  start           2   19[BANK0 ] unsigned int 
  7545 ;;  data            2   21[BANK0 ] PTR unsigned char 
  7546 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
  7547 ;;		 -> buffer(512), 
  7548 ;;  data_length     2   23[BANK0 ] unsigned int 
  7549 ;;  buffer          1   25[BANK0 ] enum E6975
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;  command         4   26[BANK0 ] unsigned char [4]
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7561 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;Total ram usage:       11 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:   13
  7568 ;; This function calls:
  7569 ;;		__flash_is_busy
  7570 ;;		_spi_tx_tx
  7571 ;; This function is called by:
  7572 ;;		_flash_sector_write
  7573 ;;		_flash_partial_write
  7574 ;;		_flash_write_to_buffer
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text12
  7579  01205A                     __ptext12:
  7580                           	opt stack 0
  7581  01205A                     __flash_write_to_buffer:
  7582                           	opt stack 13
  7583                           
  7584                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
  7585                           
  7586                           ;incstack = 0
  7587  01205A  ECB9  F094         	call	__flash_is_busy	;wreg free
  7588  01205E  0900               	iorlw	0
  7589  012060  A4D8               	btfss	status,2,c
  7590  012062  D7FB               	goto	__flash_write_to_buffer
  7591                           
  7592                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
  7593  012064  0100               	movlb	0	; () banked
  7594  012066  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
  7595  012068  A4D8               	btfss	status,2,c
  7596  01206A  D002               	goto	l1521
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;flash.c: 245: command[0] = 0x84;
  7600  01206C  0E84               	movlw	132
  7601  01206E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
  7602  012070                     l1521:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
  7606                           
  7607                           ; BSR set to: 0
  7608  012070  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
  7609  012072  A4D8               	btfss	status,2,c
  7610  012074  D002               	goto	l1522
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;flash.c: 247: command[0] = 0x87;
  7614  012076  0E87               	movlw	135
  7615  012078  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
  7616  01207A                     l1522:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;flash.c: 249: command[1] = 0x00;
  7620  01207A  0E00               	movlw	0
  7621  01207C  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
  7622                           
  7623                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
  7624  01207E  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
  7625  012080  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
  7629  012082  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
  7633  012086  0E7A               	movlw	low __flash_write_to_buffer@command
  7634  012088  6F60               	movwf	spi_tx_tx@command& (0+255),b
  7635  01208A  0E00               	movlw	high __flash_write_to_buffer@command
  7636  01208C  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
  7637  01208E  0E00               	movlw	0
  7638  012090  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
  7639  012092  0E04               	movlw	4
  7640  012094  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
  7641  012096  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
  7642  01209A  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
  7643  01209E  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
  7644  0120A2  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
  7645  0120A6  EC82  F08A         	call	_spi_tx_tx	;wreg free
  7646  0120AA  0012               	return		;funcret
  7647  0120AC                     __end_of__flash_write_to_buffer:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           postinc0	equ	0xFEE
  7654                           wreg	equ	0xFE8
  7655                           postdec1	equ	0xFE5
  7656                           fsr1h	equ	0xFE2
  7657                           fsr1l	equ	0xFE1
  7658                           indf2	equ	0xFDF
  7659                           postinc2	equ	0xFDE
  7660                           fsr2h	equ	0xFDA
  7661                           fsr2l	equ	0xFD9
  7662                           status	equ	0xFD8
  7663                           
  7664 ;; *************** function _spi_tx_tx *****************
  7665 ;; Defined at:
  7666 ;;		line 146 in file "spi.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  command         2    0[BANK0 ] PTR unsigned char 
  7669 ;;		 -> _flash_write_to_buffer@command(4), 
  7670 ;;  command_leng    2    2[BANK0 ] unsigned int 
  7671 ;;  data            2    4[BANK0 ] PTR unsigned char 
  7672 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
  7673 ;;		 -> buffer(512), 
  7674 ;;  data_length     2    6[BANK0 ] unsigned int 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7686 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7688 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7689 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7690 ;;Total ram usage:       12 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:   10
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		__flash_write_to_buffer
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text13
  7701  011504                     __ptext13:
  7702                           	opt stack 0
  7703  011504                     _spi_tx_tx:
  7704                           	opt stack 15
  7705                           
  7706                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
  7707                           
  7708                           ;incstack = 0
  7709  011504  9E88               	bcf	3976,7,c	;volatile
  7710                           
  7711                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
  7712  011506  9C88               	bcf	3976,6,c	;volatile
  7713                           
  7714                           ;spi.c: 152: DMACON1bits.TXINC = 1;
  7715  011508  8A88               	bsf	3976,5,c	;volatile
  7716                           
  7717                           ;spi.c: 154: DMACON1bits.RXINC = 0;
  7718  01150A  9888               	bcf	3976,4,c	;volatile
  7719                           
  7720                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
  7721  01150C  9688               	bcf	3976,3,c	;volatile
  7722                           
  7723                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
  7724  01150E  8488               	bsf	3976,2,c	;volatile
  7725                           
  7726                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
  7727  011510  9288               	bcf	3976,1,c	;volatile
  7728                           
  7729                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
  7730  011512  9886               	bcf	3974,4,c	;volatile
  7731  011514  9A86               	bcf	3974,5,c	;volatile
  7732  011516  9C86               	bcf	3974,6,c	;volatile
  7733  011518  9E86               	bcf	3974,7,c	;volatile
  7734                           
  7735                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
  7736  01151A  9086               	bcf	3974,0,c	;volatile
  7737  01151C  9286               	bcf	3974,1,c	;volatile
  7738  01151E  9486               	bcf	3974,2,c	;volatile
  7739  011520  9686               	bcf	3974,3,c	;volatile
  7740                           
  7741                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
  7742  011522  0100               	movlb	0	; () banked
  7743  011524  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
  7744  011526  6E6A               	movwf	3946,c	;volatile
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
  7748  011528  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
  7752  01152C  0EFF               	movlw	255
  7753  01152E  6F68               	movwf	??_spi_tx_tx& (0+255),b
  7754  011530  0EFF               	movlw	255
  7755  011532  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
  7756  011534  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
  7757  011538  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
  7758  01153C  5168               	movf	??_spi_tx_tx& (0+255),w,b
  7759  01153E  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
  7760  011540  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
  7761  011542  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
  7762  011544  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
  7763  011548  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
  7764  01154A  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
  7765  01154C  6E66               	movwf	3942,c	;volatile
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
  7769  01154E  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
  7770  011550  6E67               	movwf	3943,c	;volatile
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;spi.c: 174: LATDbits.LD7 = 0;
  7774  011552  9E8C               	bcf	3980,7,c	;volatile
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
  7778  011554  8088               	bsf	3976,0,c	;volatile
  7779  011556                     
  7780                           ; BSR set to: 0
  7781  011556  B088               	btfsc	3976,0,c	;volatile
  7782  011558  D7FE               	goto	l2129
  7783                           
  7784                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
  7785  01155A  0100               	movlb	0	; () banked
  7786  01155C  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
  7787  01155E  6E6A               	movwf	3946,c	;volatile
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
  7791  011560  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
  7795  011564  0EFF               	movlw	255
  7796  011566  6F68               	movwf	??_spi_tx_tx& (0+255),b
  7797  011568  0EFF               	movlw	255
  7798  01156A  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
  7799  01156C  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
  7800  011570  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
  7801  011574  5168               	movf	??_spi_tx_tx& (0+255),w,b
  7802  011576  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
  7803  011578  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
  7804  01157A  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
  7805  01157C  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
  7806  011580  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
  7807  011582  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
  7808  011584  6E66               	movwf	3942,c	;volatile
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
  7812  011586  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
  7813  011588  6E67               	movwf	3943,c	;volatile
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
  7817  01158A  8088               	bsf	3976,0,c	;volatile
  7818  01158C                     
  7819                           ; BSR set to: 0
  7820  01158C  B088               	btfsc	3976,0,c	;volatile
  7821  01158E  D7FE               	goto	l2132
  7822                           
  7823                           ;spi.c: 193: LATDbits.LD7 = 1;
  7824  011590  8E8C               	bsf	3980,7,c	;volatile
  7825  011592  0012               	return		;funcret
  7826  011594                     __end_of_spi_tx_tx:
  7827                           	opt stack 0
  7828                           tblptru	equ	0xFF8
  7829                           tblptrh	equ	0xFF7
  7830                           tblptrl	equ	0xFF6
  7831                           tablat	equ	0xFF5
  7832                           postinc0	equ	0xFEE
  7833                           wreg	equ	0xFE8
  7834                           postdec1	equ	0xFE5
  7835                           fsr1h	equ	0xFE2
  7836                           fsr1l	equ	0xFE1
  7837                           indf2	equ	0xFDF
  7838                           postinc2	equ	0xFDE
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function __flash_write_page_from_buffer *****************
  7844 ;; Defined at:
  7845 ;;		line 258 in file "flash.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  page            2   19[BANK0 ] unsigned int 
  7848 ;;  buffer          1   21[BANK0 ] enum E6975
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  command         4   25[BANK0 ] unsigned char [4]
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      void 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7860 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;Total ram usage:       10 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:   13
  7867 ;; This function calls:
  7868 ;;		__flash_is_busy
  7869 ;;		_spi_tx
  7870 ;; This function is called by:
  7871 ;;		_flash_sector_write
  7872 ;;		_flash_partial_write
  7873 ;;		_flash_write_page_from_buffer
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text14
  7878  011D4A                     __ptext14:
  7879                           	opt stack 0
  7880  011D4A                     __flash_write_page_from_buffer:
  7881                           	opt stack 13
  7882                           
  7883                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
  7884                           
  7885                           ;incstack = 0
  7886  011D4A  ECB9  F094         	call	__flash_is_busy	;wreg free
  7887  011D4E  0900               	iorlw	0
  7888  011D50  A4D8               	btfss	status,2,c
  7889  011D52  D7FB               	goto	__flash_write_page_from_buffer
  7890                           
  7891                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
  7892  011D54  0100               	movlb	0	; () banked
  7893  011D56  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
  7894  011D58  A4D8               	btfss	status,2,c
  7895  011D5A  D002               	goto	l1529
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;flash.c: 267: command[0] = 0x83;
  7899  011D5C  0E83               	movlw	131
  7900  011D5E  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
  7901  011D60                     l1529:
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
  7905                           
  7906                           ; BSR set to: 0
  7907  011D60  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
  7908  011D62  A4D8               	btfss	status,2,c
  7909  011D64  D002               	goto	l1530
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;flash.c: 269: command[0] = 0x86;
  7913  011D66  0E86               	movlw	134
  7914  011D68  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
  7915  011D6A                     l1530:
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
  7919                           
  7920                           ; BSR set to: 0
  7921  011D6A  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
  7922  011D6E  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
  7923  011D72  0E07               	movlw	7
  7924  011D74  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
  7925  011D76                     u18385:
  7926  011D76  90D8               	bcf	status,0,c
  7927  011D78  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
  7928  011D7A  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
  7929  011D7C  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
  7930  011D7E  D7FB               	goto	u18385
  7931  011D80  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
  7932  011D82  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
  7936  011D84  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
  7937  011D86  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
  7938  011D88  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
  7939                           
  7940                           ;flash.c: 273: command[3] = 0x00;
  7941  011D8A  0E00               	movlw	0
  7942  011D8C  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;flash.c: 276: spi_tx(command, 4);
  7946  011D8E  0E79               	movlw	low __flash_write_page_from_buffer@command
  7947  011D90  6F60               	movwf	spi_tx@data& (0+255),b
  7948  011D92  0E00               	movlw	high __flash_write_page_from_buffer@command
  7949  011D94  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  7950  011D96  0E00               	movlw	0
  7951  011D98  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  7952  011D9A  0E04               	movlw	4
  7953  011D9C  6F62               	movwf	spi_tx@length& (0+255),b
  7954  011D9E  ECFF  F08E         	call	_spi_tx	;wreg free
  7955  011DA2  0012               	return		;funcret
  7956  011DA4                     __end_of__flash_write_page_from_buffer:
  7957                           	opt stack 0
  7958                           tblptru	equ	0xFF8
  7959                           tblptrh	equ	0xFF7
  7960                           tblptrl	equ	0xFF6
  7961                           tablat	equ	0xFF5
  7962                           postinc0	equ	0xFEE
  7963                           wreg	equ	0xFE8
  7964                           postdec1	equ	0xFE5
  7965                           fsr1h	equ	0xFE2
  7966                           fsr1l	equ	0xFE1
  7967                           indf2	equ	0xFDF
  7968                           postinc2	equ	0xFDE
  7969                           fsr2h	equ	0xFDA
  7970                           fsr2l	equ	0xFD9
  7971                           status	equ	0xFD8
  7972                           
  7973 ;; *************** function __flash_compare_page_to_buffer *****************
  7974 ;; Defined at:
  7975 ;;		line 176 in file "flash.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  page            2   19[BANK0 ] unsigned int 
  7978 ;;  buffer          1   21[BANK0 ] enum E6975
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  command         4   27[BANK0 ] unsigned char [4]
  7981 ;;  status          2   25[BANK0 ] unsigned int 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      enum E6979
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7991 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;Total ram usage:       12 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:   13
  7998 ;; This function calls:
  7999 ;;		__flash_get_status
  8000 ;;		__flash_is_busy
  8001 ;;		_spi_tx
  8002 ;; This function is called by:
  8003 ;;		_flash_sector_write
  8004 ;;		_flash_partial_write
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text15
  8009  0116AA                     __ptext15:
  8010                           	opt stack 0
  8011  0116AA                     __flash_compare_page_to_buffer:
  8012                           	opt stack 13
  8013                           
  8014                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
  8015                           
  8016                           ;incstack = 0
  8017  0116AA  ECB9  F094         	call	__flash_is_busy	;wreg free
  8018  0116AE  0900               	iorlw	0
  8019  0116B0  A4D8               	btfss	status,2,c
  8020  0116B2  D7FB               	goto	__flash_compare_page_to_buffer
  8021                           
  8022                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
  8023  0116B4  0100               	movlb	0	; () banked
  8024  0116B6  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
  8025  0116B8  A4D8               	btfss	status,2,c
  8026  0116BA  D002               	goto	l1502
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;flash.c: 186: command[0] = 0x60;
  8030  0116BC  0E60               	movlw	96
  8031  0116BE  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
  8032  0116C0                     l1502:
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
  8036                           
  8037                           ; BSR set to: 0
  8038  0116C0  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
  8039  0116C2  A4D8               	btfss	status,2,c
  8040  0116C4  D002               	goto	l1503
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;flash.c: 188: command[0] = 0x60;
  8044  0116C6  0E60               	movlw	96
  8045  0116C8  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
  8046  0116CA                     l1503:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
  8050                           
  8051                           ; BSR set to: 0
  8052  0116CA  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
  8053  0116CE  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
  8054  0116D2  0E07               	movlw	7
  8055  0116D4  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
  8056  0116D6                     u18295:
  8057  0116D6  90D8               	bcf	status,0,c
  8058  0116D8  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
  8059  0116DA  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
  8060  0116DC  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
  8061  0116DE  D7FB               	goto	u18295
  8062  0116E0  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
  8063  0116E2  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
  8067  0116E4  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
  8068  0116E6  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
  8069  0116E8  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
  8070                           
  8071                           ;flash.c: 192: command[3] = 0x00;
  8072  0116EA  0E00               	movlw	0
  8073  0116EC  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;flash.c: 195: spi_tx(command, 4);
  8077  0116EE  0E7B               	movlw	low __flash_compare_page_to_buffer@command
  8078  0116F0  6F60               	movwf	spi_tx@data& (0+255),b
  8079  0116F2  0E00               	movlw	high __flash_compare_page_to_buffer@command
  8080  0116F4  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8081  0116F6  0E00               	movlw	0
  8082  0116F8  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8083  0116FA  0E04               	movlw	4
  8084  0116FC  6F62               	movwf	spi_tx@length& (0+255),b
  8085  0116FE  ECFF  F08E         	call	_spi_tx	;wreg free
  8086  011702  ECB9  F094         	call	__flash_is_busy	;wreg free
  8087  011706  0900               	iorlw	0
  8088  011708  A4D8               	btfss	status,2,c
  8089  01170A  D7FB               	goto	l1505
  8090                           
  8091                           ;flash.c: 201: status = _flash_get_status();
  8092  01170C  EC6F  F093         	call	__flash_get_status	;wreg free
  8093  011710  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
  8094  011714  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
  8095                           
  8096                           ;flash.c: 204: if(status & 0b0000000001000000)
  8097  011718  0100               	movlb	0	; () banked
  8098  01171A  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
  8099  01171C  D002               	goto	l1507
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
  8103  01171E  0E01               	movlw	1
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;flash.c: 208: }
  8107                           
  8108                           ; BSR set to: 0
  8109  011720  0012               	return	
  8110  011722                     l1507:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
  8114                           
  8115                           ; BSR set to: 0
  8116  011722  0E00               	movlw	0
  8117                           
  8118                           ; BSR set to: 0
  8119  011724  0012               	return	
  8120  011726                     __end_of__flash_compare_page_to_buffer:
  8121                           	opt stack 0
  8122                           tblptru	equ	0xFF8
  8123                           tblptrh	equ	0xFF7
  8124                           tblptrl	equ	0xFF6
  8125                           tablat	equ	0xFF5
  8126                           postinc0	equ	0xFEE
  8127                           wreg	equ	0xFE8
  8128                           postdec1	equ	0xFE5
  8129                           fsr1h	equ	0xFE2
  8130                           fsr1l	equ	0xFE1
  8131                           indf2	equ	0xFDF
  8132                           postinc2	equ	0xFDE
  8133                           fsr2h	equ	0xFDA
  8134                           fsr2l	equ	0xFD9
  8135                           status	equ	0xFD8
  8136                           
  8137 ;; *************** function __get_root *****************
  8138 ;; Defined at:
  8139 ;;		line 1210 in file "fat16.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  idx             2    0[BANK0 ] unsigned int 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      unsigned char 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;Total ram usage:        6 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:   10
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_fat_format
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text16
  8168  00E11C                     __ptext16:
  8169                           	opt stack 0
  8170  00E11C                     __get_root:
  8171                           	opt stack 17
  8172                           
  8173                           ;fat16.c: 1212: if(idx < 0x20)
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;incstack = 0
  8177  00E11C  0100               	movlb	0	; () banked
  8178  00E11E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8179  00E120  E11D               	bnz	l18977
  8180  00E122  0E20               	movlw	32
  8181  00E124  5D60               	subwf	__get_root@idx& (0+255),w,b
  8182  00E126  B0D8               	btfsc	status,0,c
  8183  00E128  D019               	goto	l1962
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  8187  00E12A  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8188  00E12C  E110               	bnz	l18971
  8189  00E12E  0E0B               	movlw	11
  8190  00E130  5D60               	subwf	__get_root@idx& (0+255),w,b
  8191  00E132  B0D8               	btfsc	status,0,c
  8192  00E134  D00C               	goto	l1960
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
  8196  00E136  0EFE               	movlw	low STR_15
  8197  00E138  2560               	addwf	__get_root@idx& (0+255),w,b
  8198  00E13A  6EF6               	movwf	tblptrl,c
  8199  00E13C  0EA1               	movlw	high STR_15
  8200  00E13E  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  8201  00E140  6EF7               	movwf	tblptrh,c
  8202  00E142                     	if	1	;There are 3 active tblptr bytes
  8203  00E142  6AF8               	clrf	tblptru,c
  8204  00E144  0E00               	movlw	low (__mediumconst shr (0+16))
  8205  00E146  22F8               	addwfc	tblptru,f,c
  8206  00E148                     	endif
  8207  00E148  0008               	tblrd		*
  8208  00E14A  50F5               	movf	tablat,w,c
  8209                           
  8210                           ; BSR set to: 0
  8211  00E14C  0012               	return	
  8212  00E14E                     l1960:
  8213  00E14E                     l18971:
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  8217  00E14E  0E0B               	movlw	11
  8218  00E150  1960               	xorwf	__get_root@idx& (0+255),w,b
  8219  00E152  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  8220  00E154  A4D8               	btfss	status,2,c
  8221  00E156  D002               	goto	l1962
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  8225  00E158  0E08               	movlw	8
  8226                           
  8227                           ; BSR set to: 0
  8228  00E15A  0012               	return	
  8229  00E15C                     l1962:
  8230  00E15C                     l18977:
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  8234  00E15C  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8235  00E15E  E103               	bnz	u18521
  8236  00E160  0E40               	movlw	64
  8237  00E162  5D60               	subwf	__get_root@idx& (0+255),w,b
  8238  00E164  B0D8               	btfsc	status,0,c
  8239  00E166                     u18521:
  8240  00E166  D0A4               	goto	l1988
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  8244  00E168  0E20               	movlw	32
  8245  00E16A  5F60               	subwf	__get_root@idx& (0+255),f,b
  8246  00E16C  0E00               	movlw	0
  8247  00E16E  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  8248                           
  8249                           ;fat16.c: 1226: if(idx < 0+8)
  8250  00E170  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8251  00E172  E110               	bnz	l18985
  8252  00E174  0E08               	movlw	8
  8253  00E176  5D60               	subwf	__get_root@idx& (0+255),w,b
  8254  00E178  B0D8               	btfsc	status,0,c
  8255  00E17A  D00C               	goto	l1964
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  8259  00E17C  0E0A               	movlw	low STR_16
  8260  00E17E  2560               	addwf	__get_root@idx& (0+255),w,b
  8261  00E180  6EF6               	movwf	tblptrl,c
  8262  00E182  0EA2               	movlw	high STR_16
  8263  00E184  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  8264  00E186  6EF7               	movwf	tblptrh,c
  8265  00E188                     	if	1	;There are 3 active tblptr bytes
  8266  00E188  6AF8               	clrf	tblptru,c
  8267  00E18A  0E00               	movlw	low (__mediumconst shr (0+16))
  8268  00E18C  22F8               	addwfc	tblptru,f,c
  8269  00E18E                     	endif
  8270  00E18E  0008               	tblrd		*
  8271  00E190  50F5               	movf	tablat,w,c
  8272                           
  8273                           ; BSR set to: 0
  8274  00E192  0012               	return	
  8275  00E194                     l1964:
  8276  00E194                     l18985:
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  8280  00E194  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8281  00E196  E146               	bnz	l19077
  8282  00E198  0E0B               	movlw	11
  8283  00E19A  5D60               	subwf	__get_root@idx& (0+255),w,b
  8284  00E19C  B0D8               	btfsc	status,0,c
  8285  00E19E  D042               	goto	l1966
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  8289  00E1A0  0EF8               	movlw	248
  8290  00E1A2  6F62               	movwf	??__get_root& (0+255),b
  8291  00E1A4  0EFF               	movlw	255
  8292  00E1A6  6F63               	movwf	(??__get_root+1)& (0+255),b
  8293  00E1A8  C060  F064         	movff	__get_root@idx,??__get_root+2
  8294  00E1AC  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  8295  00E1B0  5162               	movf	??__get_root& (0+255),w,b
  8296  00E1B2  2764               	addwf	(??__get_root+2)& (0+255),f,b
  8297  00E1B4  5163               	movf	(??__get_root+1)& (0+255),w,b
  8298  00E1B6  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  8299  00E1B8  0E32               	movlw	low STR_17
  8300  00E1BA  2564               	addwf	(??__get_root+2)& (0+255),w,b
  8301  00E1BC  6EF6               	movwf	tblptrl,c
  8302  00E1BE  0EA2               	movlw	high STR_17
  8303  00E1C0  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  8304  00E1C2  6EF7               	movwf	tblptrh,c
  8305  00E1C4                     	if	1	;There are 3 active tblptr bytes
  8306  00E1C4  6AF8               	clrf	tblptru,c
  8307  00E1C6  0E00               	movlw	low (__mediumconst shr (0+16))
  8308  00E1C8  22F8               	addwfc	tblptru,f,c
  8309  00E1CA                     	endif
  8310  00E1CA  0008               	tblrd		*
  8311  00E1CC  50F5               	movf	tablat,w,c
  8312                           
  8313                           ; BSR set to: 0
  8314  00E1CE  0012               	return	
  8315  00E1D0                     
  8316                           ; BSR set to: 0
  8317                           ;fat16.c: 1237: return 0x20;
  8318                           
  8319                           ; BSR set to: 0
  8320  00E1D0  0E20               	movlw	32
  8321                           
  8322                           ; BSR set to: 0
  8323  00E1D2  0012               	return	
  8324  00E1D4                     
  8325                           ; BSR set to: 0
  8326                           ;fat16.c: 1239: return 0x06;
  8327                           
  8328                           ; BSR set to: 0
  8329  00E1D4  0E06               	movlw	6
  8330                           
  8331                           ; BSR set to: 0
  8332  00E1D6  0012               	return	
  8333  00E1D8                     
  8334                           ; BSR set to: 0
  8335                           ;fat16.c: 1241: return 0x28;
  8336                           
  8337                           ; BSR set to: 0
  8338  00E1D8  0E28               	movlw	40
  8339                           
  8340                           ; BSR set to: 0
  8341  00E1DA  0012               	return	
  8342  00E1DC                     
  8343                           ; BSR set to: 0
  8344                           ;fat16.c: 1243: return 0x78;
  8345                           
  8346                           ; BSR set to: 0
  8347  00E1DC  0E78               	movlw	120
  8348                           
  8349                           ; BSR set to: 0
  8350  00E1DE  0012               	return	
  8351  00E1E0                     
  8352                           ; BSR set to: 0
  8353                           ;fat16.c: 1245: return 0xDE;
  8354                           
  8355                           ; BSR set to: 0
  8356  00E1E0  0EDE               	movlw	222
  8357                           
  8358                           ; BSR set to: 0
  8359  00E1E2  0012               	return	
  8360  00E1E4                     
  8361                           ; BSR set to: 0
  8362                           ;fat16.c: 1247: return 0x38;
  8363                           
  8364                           ; BSR set to: 0
  8365  00E1E4  0E38               	movlw	56
  8366                           
  8367                           ; BSR set to: 0
  8368  00E1E6  0012               	return	
  8369  00E1E8                     
  8370                           ; BSR set to: 0
  8371                           ;fat16.c: 1249: return 0x5F;
  8372                           
  8373                           ; BSR set to: 0
  8374  00E1E8  0E5F               	movlw	95
  8375                           
  8376                           ; BSR set to: 0
  8377  00E1EA  0012               	return	
  8378  00E1EC                     
  8379                           ; BSR set to: 0
  8380                           ;fat16.c: 1251: return 0x4B;
  8381                           
  8382                           ; BSR set to: 0
  8383  00E1EC  0E4B               	movlw	75
  8384                           
  8385                           ; BSR set to: 0
  8386  00E1EE  0012               	return	
  8387  00E1F0                     
  8388                           ; BSR set to: 0
  8389                           ;fat16.c: 1253: return 0x00;
  8390                           
  8391                           ; BSR set to: 0
  8392  00E1F0  0E00               	movlw	0
  8393                           
  8394                           ; BSR set to: 0
  8395  00E1F2  0012               	return	
  8396  00E1F4                     
  8397                           ; BSR set to: 0
  8398                           ;fat16.c: 1255: return 0x00;
  8399                           
  8400                           ; BSR set to: 0
  8401  00E1F4  0E00               	movlw	0
  8402                           
  8403                           ; BSR set to: 0
  8404  00E1F6  0012               	return	
  8405  00E1F8                     
  8406                           ; BSR set to: 0
  8407                           ;fat16.c: 1257: return 0x04;
  8408                           
  8409                           ; BSR set to: 0
  8410  00E1F8  0E04               	movlw	4
  8411                           
  8412                           ; BSR set to: 0
  8413  00E1FA  0012               	return	
  8414  00E1FC                     
  8415                           ; BSR set to: 0
  8416                           ;fat16.c: 1259: return 0x77;
  8417                           
  8418                           ; BSR set to: 0
  8419  00E1FC  0E77               	movlw	119
  8420                           
  8421                           ; BSR set to: 0
  8422  00E1FE  0012               	return	
  8423  00E200                     
  8424                           ; BSR set to: 0
  8425                           ;fat16.c: 1261: return 0xDE;
  8426                           
  8427                           ; BSR set to: 0
  8428  00E200  0EDE               	movlw	222
  8429                           
  8430                           ; BSR set to: 0
  8431  00E202  0012               	return	
  8432  00E204                     
  8433                           ; BSR set to: 0
  8434                           ;fat16.c: 1263: return 0x38;
  8435                           
  8436                           ; BSR set to: 0
  8437  00E204  0E38               	movlw	56
  8438                           
  8439                           ; BSR set to: 0
  8440  00E206  0012               	return	
  8441  00E208                     
  8442                           ; BSR set to: 0
  8443                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  8444                           
  8445                           ; BSR set to: 0
  8446  00E208  0E02               	movlw	2
  8447                           
  8448                           ; BSR set to: 0
  8449  00E20A  0012               	return	
  8450  00E20C                     
  8451                           ; BSR set to: 0
  8452                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  8453                           
  8454                           ; BSR set to: 0
  8455  00E20C  0E00               	movlw	0
  8456                           
  8457                           ; BSR set to: 0
  8458  00E20E  0012               	return	
  8459  00E210                     
  8460                           ; BSR set to: 0
  8461                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  8462                           
  8463                           ; BSR set to: 0
  8464  00E210  0E0C               	movlw	12
  8465                           
  8466                           ; BSR set to: 0
  8467  00E212  0012               	return	
  8468  00E214                     
  8469                           ; BSR set to: 0
  8470                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  8471                           
  8472                           ; BSR set to: 0
  8473  00E214  0E00               	movlw	0
  8474                           
  8475                           ; BSR set to: 0
  8476  00E216  0012               	return	
  8477  00E218                     
  8478                           ; BSR set to: 0
  8479                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  8480                           
  8481                           ; BSR set to: 0
  8482  00E218  0E00               	movlw	0
  8483                           
  8484                           ; BSR set to: 0
  8485  00E21A  0012               	return	
  8486  00E21C                     
  8487                           ; BSR set to: 0
  8488                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  8489                           
  8490                           ; BSR set to: 0
  8491  00E21C  0E00               	movlw	0
  8492                           
  8493                           ; BSR set to: 0
  8494  00E21E  0012               	return	
  8495  00E220                     
  8496                           ; BSR set to: 0
  8497                           ;fat16.c: 1277: return 0x00;
  8498                           
  8499                           ; BSR set to: 0
  8500  00E220  0E00               	movlw	0
  8501                           
  8502                           ; BSR set to: 0
  8503  00E222  0012               	return	
  8504  00E224                     l1966:
  8505  00E224                     l19077:
  8506                           
  8507                           ; BSR set to: 0
  8508  00E224  C060  F062         	movff	__get_root@idx,??__get_root
  8509  00E228  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  8510                           
  8511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8512                           ; Switch size 1, requested type "space"
  8513                           ; Number of cases is 1, Range of values is 0 to 0
  8514                           ; switch strategies available:
  8515                           ; Name         Instructions Cycles
  8516                           ; simple_byte            4     3 (average)
  8517                           ;	Chosen strategy is simple_byte
  8518  00E22C  5163               	movf	(??__get_root+1)& (0+255),w,b
  8519  00E22E  0A00               	xorlw	0	; case 0
  8520  00E230  A4D8               	btfss	status,2,c
  8521  00E232  D7F6               	goto	l1987
  8522                           
  8523                           ; BSR set to: 0
  8524                           ; Switch size 1, requested type "space"
  8525                           ; Number of cases is 20, Range of values is 11 to 31
  8526                           ; switch strategies available:
  8527                           ; Name         Instructions Cycles
  8528                           ; simple_byte           61    31 (average)
  8529                           ;	Chosen strategy is simple_byte
  8530  00E234  5162               	movf	??__get_root& (0+255),w,b
  8531  00E236  0A0B               	xorlw	11	; case 11
  8532  00E238  B4D8               	btfsc	status,2,c
  8533  00E23A  D7CA               	goto	l1967
  8534  00E23C  0A06               	xorlw	6	; case 13
  8535  00E23E  B4D8               	btfsc	status,2,c
  8536  00E240  D7C9               	goto	l1968
  8537  00E242  0A03               	xorlw	3	; case 14
  8538  00E244  B4D8               	btfsc	status,2,c
  8539  00E246  D7C8               	goto	l1969
  8540  00E248  0A01               	xorlw	1	; case 15
  8541  00E24A  B4D8               	btfsc	status,2,c
  8542  00E24C  D7C7               	goto	l1970
  8543  00E24E  0A1F               	xorlw	31	; case 16
  8544  00E250  B4D8               	btfsc	status,2,c
  8545  00E252  D7C6               	goto	l1971
  8546  00E254  0A01               	xorlw	1	; case 17
  8547  00E256  B4D8               	btfsc	status,2,c
  8548  00E258  D7C5               	goto	l1972
  8549  00E25A  0A03               	xorlw	3	; case 18
  8550  00E25C  B4D8               	btfsc	status,2,c
  8551  00E25E  D7C4               	goto	l1973
  8552  00E260  0A01               	xorlw	1	; case 19
  8553  00E262  B4D8               	btfsc	status,2,c
  8554  00E264  D7C3               	goto	l1974
  8555  00E266  0A07               	xorlw	7	; case 20
  8556  00E268  B4D8               	btfsc	status,2,c
  8557  00E26A  D7C2               	goto	l1975
  8558  00E26C  0A01               	xorlw	1	; case 21
  8559  00E26E  B4D8               	btfsc	status,2,c
  8560  00E270  D7C1               	goto	l1976
  8561  00E272  0A03               	xorlw	3	; case 22
  8562  00E274  B4D8               	btfsc	status,2,c
  8563  00E276  D7C0               	goto	l1977
  8564  00E278  0A01               	xorlw	1	; case 23
  8565  00E27A  B4D8               	btfsc	status,2,c
  8566  00E27C  D7BF               	goto	l1978
  8567  00E27E  0A0F               	xorlw	15	; case 24
  8568  00E280  B4D8               	btfsc	status,2,c
  8569  00E282  D7BE               	goto	l1979
  8570  00E284  0A01               	xorlw	1	; case 25
  8571  00E286  B4D8               	btfsc	status,2,c
  8572  00E288  D7BD               	goto	l1980
  8573  00E28A  0A03               	xorlw	3	; case 26
  8574  00E28C  B4D8               	btfsc	status,2,c
  8575  00E28E  D7BC               	goto	l1981
  8576  00E290  0A01               	xorlw	1	; case 27
  8577  00E292  B4D8               	btfsc	status,2,c
  8578  00E294  D7BB               	goto	l1982
  8579  00E296  0A07               	xorlw	7	; case 28
  8580  00E298  B4D8               	btfsc	status,2,c
  8581  00E29A  D7BA               	goto	l1983
  8582  00E29C  0A01               	xorlw	1	; case 29
  8583  00E29E  B4D8               	btfsc	status,2,c
  8584  00E2A0  D7B9               	goto	l1984
  8585  00E2A2  0A03               	xorlw	3	; case 30
  8586  00E2A4  B4D8               	btfsc	status,2,c
  8587  00E2A6  D7B8               	goto	l1985
  8588  00E2A8  0A01               	xorlw	1	; case 31
  8589  00E2AA  B4D8               	btfsc	status,2,c
  8590  00E2AC  D7B7               	goto	l1986
  8591  00E2AE  D7B8               	goto	l1987
  8592  00E2B0                     l1988:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  8596                           
  8597                           ; BSR set to: 0
  8598                           
  8599                           ; BSR set to: 0
  8600  00E2B0  0E00               	movlw	0
  8601  00E2B2  0012               	return	
  8602  00E2B4                     __end_of__get_root:
  8603                           	opt stack 0
  8604                           tblptru	equ	0xFF8
  8605                           tblptrh	equ	0xFF7
  8606                           tblptrl	equ	0xFF6
  8607                           tablat	equ	0xFF5
  8608                           postinc0	equ	0xFEE
  8609                           wreg	equ	0xFE8
  8610                           postdec1	equ	0xFE5
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           indf2	equ	0xFDF
  8614                           postinc2	equ	0xFDE
  8615                           fsr2h	equ	0xFDA
  8616                           fsr2l	equ	0xFD9
  8617                           status	equ	0xFD8
  8618                           
  8619 ;; *************** function __get_mbr *****************
  8620 ;; Defined at:
  8621 ;;		line 1037 in file "fat16.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  idx             2    0[BANK0 ] unsigned int 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;		None
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1    wreg      unsigned char 
  8628 ;; Registers used:
  8629 ;;		wreg, status,2, status,0
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;Total ram usage:        4 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:   10
  8642 ;; This function calls:
  8643 ;;		Nothing
  8644 ;; This function is called by:
  8645 ;;		_fat_get_format_status
  8646 ;;		_fat_format
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text17
  8651  0105D4                     __ptext17:
  8652                           	opt stack 0
  8653  0105D4                     __get_mbr:
  8654                           	opt stack 17
  8655                           
  8656                           ;fat16.c: 1039: switch (idx)
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;incstack = 0
  8660  0105D4  D026               	goto	l1869
  8661  0105D6                     
  8662                           ;fat16.c: 1042: return 0x80;
  8663  0105D6  0E80               	movlw	128
  8664  0105D8  0012               	return	
  8665  0105DA                     
  8666                           ;fat16.c: 1044: return 0;
  8667  0105DA  0E00               	movlw	0
  8668  0105DC  0012               	return	
  8669  0105DE                     
  8670                           ;fat16.c: 1046: return 2;
  8671  0105DE  0E02               	movlw	2
  8672  0105E0  0012               	return	
  8673  0105E2                     
  8674                           ;fat16.c: 1048: return 0;
  8675  0105E2  0E00               	movlw	0
  8676  0105E4  0012               	return	
  8677  0105E6                     
  8678                           ;fat16.c: 1050: return 0x04;
  8679  0105E6  0E04               	movlw	4
  8680  0105E8  0012               	return	
  8681  0105EA                     
  8682                           ;fat16.c: 1052: return 2;
  8683  0105EA  0E02               	movlw	2
  8684  0105EC  0012               	return	
  8685  0105EE                     
  8686                           ;fat16.c: 1054: return 3;
  8687  0105EE  0E03               	movlw	3
  8688  0105F0  0012               	return	
  8689  0105F2                     
  8690                           ;fat16.c: 1056: return 8;
  8691  0105F2  0E08               	movlw	8
  8692  0105F4  0012               	return	
  8693  0105F6                     
  8694                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  8695  0105F6  0E01               	movlw	1
  8696  0105F8  0012               	return	
  8697  0105FA                     
  8698                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  8699  0105FA  0E00               	movlw	0
  8700  0105FC  0012               	return	
  8701  0105FE                     
  8702                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  8703  0105FE  0E00               	movlw	0
  8704  010600  0012               	return	
  8705  010602                     
  8706                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  8707  010602  0E00               	movlw	0
  8708  010604  0012               	return	
  8709  010606                     
  8710                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  8711  010606  0EFF               	movlw	255
  8712  010608  0012               	return	
  8713  01060A                     
  8714                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  8715  01060A  0E1F               	movlw	31
  8716  01060C  0012               	return	
  8717  01060E                     
  8718                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  8719  01060E  0E00               	movlw	0
  8720  010610  0012               	return	
  8721  010612                     
  8722                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  8723  010612  0E00               	movlw	0
  8724  010614  0012               	return	
  8725  010616                     
  8726                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  8727  010616  0E55               	movlw	85
  8728  010618  0012               	return	
  8729  01061A                     
  8730                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  8731  01061A  0EAA               	movlw	170
  8732  01061C  0012               	return	
  8733  01061E                     
  8734                           ;fat16.c: 1078: return 0X00;
  8735  01061E  0E00               	movlw	0
  8736                           
  8737                           ;fat16.c: 1079: }
  8738  010620  0012               	return	
  8739  010622                     l1869:
  8740  010622  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  8741  010626  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  8742                           
  8743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8744                           ; Switch size 1, requested type "space"
  8745                           ; Number of cases is 1, Range of values is 1 to 1
  8746                           ; switch strategies available:
  8747                           ; Name         Instructions Cycles
  8748                           ; simple_byte            4     3 (average)
  8749                           ;	Chosen strategy is simple_byte
  8750  01062A  0100               	movlb	0	; () banked
  8751  01062C  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  8752  01062E  0A01               	xorlw	1	; case 1
  8753  010630  A4D8               	btfss	status,2,c
  8754  010632  D7F5               	goto	l1889
  8755                           
  8756                           ; BSR set to: 0
  8757                           ; Switch size 1, requested type "space"
  8758                           ; Number of cases is 18, Range of values is 190 to 255
  8759                           ; switch strategies available:
  8760                           ; Name         Instructions Cycles
  8761                           ; simple_byte           55    28 (average)
  8762                           ;	Chosen strategy is simple_byte
  8763  010634  5162               	movf	??__get_mbr& (0+255),w,b
  8764  010636  0ABE               	xorlw	190	; case 190
  8765  010638  B4D8               	btfsc	status,2,c
  8766  01063A  D7CD               	goto	l1870
  8767  01063C  0A01               	xorlw	1	; case 191
  8768  01063E  B4D8               	btfsc	status,2,c
  8769  010640  D7CC               	goto	l1872
  8770  010642  0A7F               	xorlw	127	; case 192
  8771  010644  B4D8               	btfsc	status,2,c
  8772  010646  D7CB               	goto	l1873
  8773  010648  0A01               	xorlw	1	; case 193
  8774  01064A  B4D8               	btfsc	status,2,c
  8775  01064C  D7CA               	goto	l1874
  8776  01064E  0A03               	xorlw	3	; case 194
  8777  010650  B4D8               	btfsc	status,2,c
  8778  010652  D7C9               	goto	l1875
  8779  010654  0A01               	xorlw	1	; case 195
  8780  010656  B4D8               	btfsc	status,2,c
  8781  010658  D7C8               	goto	l1876
  8782  01065A  0A07               	xorlw	7	; case 196
  8783  01065C  B4D8               	btfsc	status,2,c
  8784  01065E  D7C7               	goto	l1877
  8785  010660  0A01               	xorlw	1	; case 197
  8786  010662  B4D8               	btfsc	status,2,c
  8787  010664  D7C6               	goto	l1878
  8788  010666  0A03               	xorlw	3	; case 198
  8789  010668  B4D8               	btfsc	status,2,c
  8790  01066A  D7C5               	goto	l1879
  8791  01066C  0A01               	xorlw	1	; case 199
  8792  01066E  B4D8               	btfsc	status,2,c
  8793  010670  D7C4               	goto	l1880
  8794  010672  0A0F               	xorlw	15	; case 200
  8795  010674  B4D8               	btfsc	status,2,c
  8796  010676  D7C3               	goto	l1881
  8797  010678  0A01               	xorlw	1	; case 201
  8798  01067A  B4D8               	btfsc	status,2,c
  8799  01067C  D7C2               	goto	l1882
  8800  01067E  0A03               	xorlw	3	; case 202
  8801  010680  B4D8               	btfsc	status,2,c
  8802  010682  D7C1               	goto	l1883
  8803  010684  0A01               	xorlw	1	; case 203
  8804  010686  B4D8               	btfsc	status,2,c
  8805  010688  D7C0               	goto	l1884
  8806  01068A  0A07               	xorlw	7	; case 204
  8807  01068C  B4D8               	btfsc	status,2,c
  8808  01068E  D7BF               	goto	l1885
  8809  010690  0A01               	xorlw	1	; case 205
  8810  010692  B4D8               	btfsc	status,2,c
  8811  010694  D7BE               	goto	l1886
  8812  010696  0A33               	xorlw	51	; case 254
  8813  010698  B4D8               	btfsc	status,2,c
  8814  01069A  D7BD               	goto	l1887
  8815  01069C  0A01               	xorlw	1	; case 255
  8816  01069E  B4D8               	btfsc	status,2,c
  8817  0106A0  D7BC               	goto	l1888
  8818  0106A2  D7BD               	goto	l1889
  8819  0106A4                     __end_of__get_mbr:
  8820                           	opt stack 0
  8821                           tblptru	equ	0xFF8
  8822                           tblptrh	equ	0xFF7
  8823                           tblptrl	equ	0xFF6
  8824                           tablat	equ	0xFF5
  8825                           postinc0	equ	0xFEE
  8826                           wreg	equ	0xFE8
  8827                           postdec1	equ	0xFE5
  8828                           fsr1h	equ	0xFE2
  8829                           fsr1l	equ	0xFE1
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           
  8836 ;; *************** function __get_fbr *****************
  8837 ;; Defined at:
  8838 ;;		line 1082 in file "fat16.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  idx             2    0[BANK0 ] unsigned int 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      unsigned char 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;Total ram usage:        4 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:   10
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_fat_get_format_status
  8863 ;;		_fat_format
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text18
  8868  00D270                     __ptext18:
  8869                           	opt stack 0
  8870  00D270                     __get_fbr:
  8871                           	opt stack 17
  8872                           
  8873                           ;fat16.c: 1084: switch (idx)
  8874                           
  8875                           ;incstack = 0
  8876  00D270  D098               	goto	l1893
  8877  00D272                     
  8878                           ;fat16.c: 1087: return 0xEB;
  8879  00D272  0EEB               	movlw	235
  8880  00D274  0012               	return	
  8881  00D276                     
  8882                           ;fat16.c: 1089: return 0x3C;
  8883  00D276  0E3C               	movlw	60
  8884  00D278  0012               	return	
  8885  00D27A                     
  8886                           ;fat16.c: 1091: return 0x90;
  8887  00D27A  0E90               	movlw	144
  8888  00D27C  0012               	return	
  8889  00D27E                     
  8890                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  8891  00D27E  0E13               	movlw	low STR_7
  8892  00D280  6EF6               	movwf	tblptrl,c
  8893  00D282                     	if	1	;There is more than 1 active tblptr byte
  8894  00D282  0EA2               	movlw	high STR_7
  8895  00D284  6EF7               	movwf	tblptrh,c
  8896  00D286                     	endif
  8897  00D286                     	if	1	;There are 3 active tblptr bytes
  8898  00D286  0E00               	movlw	low (STR_7 shr (0+16))
  8899  00D288  6EF8               	movwf	tblptru,c
  8900  00D28A                     	endif
  8901  00D28A  0008               	tblrd		*
  8902  00D28C  50F5               	movf	tablat,w,c
  8903  00D28E  0012               	return	
  8904  00D290                     
  8905                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  8906  00D290  0E14               	movlw	low (STR_7+1)
  8907  00D292  6EF6               	movwf	tblptrl,c
  8908  00D294  0EA2               	movlw	high (STR_7+1)
  8909  00D296  6EF7               	movwf	tblptrh,c
  8910  00D298                     	if	0	;tblptru may be non-zero
  8911  00D298                     	endif
  8912  00D298                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8913  00D298  0E00               	movlw	low (__mediumconst shr (0+16))
  8914  00D29A  6EF8               	movwf	tblptru,c
  8915  00D29C                     	endif
  8916  00D29C  0008               	tblrd		*
  8917  00D29E  50F5               	movf	tablat,w,c
  8918  00D2A0  0012               	return	
  8919  00D2A2                     
  8920                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  8921  00D2A2  0E15               	movlw	low (STR_7+2)
  8922  00D2A4  6EF6               	movwf	tblptrl,c
  8923  00D2A6  0EA2               	movlw	high (STR_7+2)
  8924  00D2A8  6EF7               	movwf	tblptrh,c
  8925  00D2AA                     	if	0	;tblptru may be non-zero
  8926  00D2AA                     	endif
  8927  00D2AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8928  00D2AA  0E00               	movlw	low (__mediumconst shr (0+16))
  8929  00D2AC  6EF8               	movwf	tblptru,c
  8930  00D2AE                     	endif
  8931  00D2AE  0008               	tblrd		*
  8932  00D2B0  50F5               	movf	tablat,w,c
  8933  00D2B2  0012               	return	
  8934  00D2B4                     
  8935                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  8936  00D2B4  0E16               	movlw	low (STR_7+3)
  8937  00D2B6  6EF6               	movwf	tblptrl,c
  8938  00D2B8  0EA2               	movlw	high (STR_7+3)
  8939  00D2BA  6EF7               	movwf	tblptrh,c
  8940  00D2BC                     	if	0	;tblptru may be non-zero
  8941  00D2BC                     	endif
  8942  00D2BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8943  00D2BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8944  00D2BE  6EF8               	movwf	tblptru,c
  8945  00D2C0                     	endif
  8946  00D2C0  0008               	tblrd		*
  8947  00D2C2  50F5               	movf	tablat,w,c
  8948  00D2C4  0012               	return	
  8949  00D2C6                     
  8950                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  8951  00D2C6  0E17               	movlw	low (STR_7+4)
  8952  00D2C8  6EF6               	movwf	tblptrl,c
  8953  00D2CA  0EA2               	movlw	high (STR_7+4)
  8954  00D2CC  6EF7               	movwf	tblptrh,c
  8955  00D2CE                     	if	0	;tblptru may be non-zero
  8956  00D2CE                     	endif
  8957  00D2CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8958  00D2CE  0E00               	movlw	low (__mediumconst shr (0+16))
  8959  00D2D0  6EF8               	movwf	tblptru,c
  8960  00D2D2                     	endif
  8961  00D2D2  0008               	tblrd		*
  8962  00D2D4  50F5               	movf	tablat,w,c
  8963  00D2D6  0012               	return	
  8964  00D2D8                     
  8965                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  8966  00D2D8  0E18               	movlw	low (STR_7+5)
  8967  00D2DA  6EF6               	movwf	tblptrl,c
  8968  00D2DC  0EA2               	movlw	high (STR_7+5)
  8969  00D2DE  6EF7               	movwf	tblptrh,c
  8970  00D2E0                     	if	0	;tblptru may be non-zero
  8971  00D2E0                     	endif
  8972  00D2E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8973  00D2E0  0E00               	movlw	low (__mediumconst shr (0+16))
  8974  00D2E2  6EF8               	movwf	tblptru,c
  8975  00D2E4                     	endif
  8976  00D2E4  0008               	tblrd		*
  8977  00D2E6  50F5               	movf	tablat,w,c
  8978  00D2E8  0012               	return	
  8979  00D2EA                     
  8980                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  8981  00D2EA  0E19               	movlw	low (STR_7+6)
  8982  00D2EC  6EF6               	movwf	tblptrl,c
  8983  00D2EE  0EA2               	movlw	high (STR_7+6)
  8984  00D2F0  6EF7               	movwf	tblptrh,c
  8985  00D2F2                     	if	0	;tblptru may be non-zero
  8986  00D2F2                     	endif
  8987  00D2F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8988  00D2F2  0E00               	movlw	low (__mediumconst shr (0+16))
  8989  00D2F4  6EF8               	movwf	tblptru,c
  8990  00D2F6                     	endif
  8991  00D2F6  0008               	tblrd		*
  8992  00D2F8  50F5               	movf	tablat,w,c
  8993  00D2FA  0012               	return	
  8994  00D2FC                     
  8995                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  8996  00D2FC  0E1A               	movlw	low (STR_7+7)
  8997  00D2FE  6EF6               	movwf	tblptrl,c
  8998  00D300  0EA2               	movlw	high (STR_7+7)
  8999  00D302  6EF7               	movwf	tblptrh,c
  9000  00D304                     	if	0	;tblptru may be non-zero
  9001  00D304                     	endif
  9002  00D304                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9003  00D304  0E00               	movlw	low (__mediumconst shr (0+16))
  9004  00D306  6EF8               	movwf	tblptru,c
  9005  00D308                     	endif
  9006  00D308  0008               	tblrd		*
  9007  00D30A  50F5               	movf	tablat,w,c
  9008  00D30C  0012               	return	
  9009  00D30E                     
  9010                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9011  00D30E  0E00               	movlw	0
  9012  00D310  0012               	return	
  9013  00D312                     
  9014                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9015  00D312  0E02               	movlw	2
  9016  00D314  0012               	return	
  9017  00D316                     
  9018                           ;fat16.c: 1113: return 1;
  9019  00D316  0E01               	movlw	1
  9020  00D318  0012               	return	
  9021  00D31A                     
  9022                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9023  00D31A  0E01               	movlw	1
  9024  00D31C  0012               	return	
  9025  00D31E                     
  9026                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9027  00D31E  0E00               	movlw	0
  9028  00D320  0012               	return	
  9029  00D322                     
  9030                           ;fat16.c: 1119: return 1;
  9031  00D322  0E01               	movlw	1
  9032  00D324  0012               	return	
  9033  00D326                     
  9034                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9035  00D326  0E40               	movlw	64
  9036  00D328  0012               	return	
  9037  00D32A                     
  9038                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9039  00D32A  0E00               	movlw	0
  9040  00D32C  0012               	return	
  9041  00D32E                     
  9042                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9043  00D32E  0EFF               	movlw	255
  9044  00D330  0012               	return	
  9045  00D332                     
  9046                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9047  00D332  0E1F               	movlw	31
  9048  00D334  0012               	return	
  9049  00D336                     
  9050                           ;fat16.c: 1129: return 0XF8;
  9051  00D336  0EF8               	movlw	248
  9052  00D338  0012               	return	
  9053  00D33A                     
  9054                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
  9055  00D33A  0E20               	movlw	32
  9056  00D33C  0012               	return	
  9057  00D33E                     
  9058                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9059  00D33E  0E00               	movlw	0
  9060  00D340  0012               	return	
  9061  00D342                     
  9062                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
  9063  00D342  0E3F               	movlw	63
  9064  00D344  0012               	return	
  9065  00D346                     
  9066                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9067  00D346  0E00               	movlw	0
  9068  00D348  0012               	return	
  9069  00D34A                     
  9070                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
  9071  00D34A  0E10               	movlw	16
  9072  00D34C  0012               	return	
  9073  00D34E                     
  9074                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9075  00D34E  0E00               	movlw	0
  9076  00D350  0012               	return	
  9077  00D352                     
  9078                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9079  00D352  0E00               	movlw	0
  9080  00D354  0012               	return	
  9081  00D356                     
  9082                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9083  00D356  0E00               	movlw	0
  9084  00D358  0012               	return	
  9085  00D35A                     
  9086                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9087  00D35A  0E00               	movlw	0
  9088  00D35C  0012               	return	
  9089  00D35E                     
  9090                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9091  00D35E  0E00               	movlw	0
  9092  00D360  0012               	return	
  9093  00D362                     
  9094                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9095  00D362  0E01               	movlw	1
  9096  00D364  0012               	return	
  9097  00D366                     
  9098                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9099  00D366  0E00               	movlw	0
  9100  00D368  0012               	return	
  9101  00D36A                     
  9102                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9103  00D36A  0E22               	movlw	34
  9104  00D36C  0012               	return	
  9105  00D36E                     
  9106                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9107  00D36E  0E00               	movlw	0
  9108  00D370  0012               	return	
  9109  00D372                     
  9110                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9111                           
  9112                           ;fat16.c: 1160: case 0x2F:
  9113  00D372  0E00               	movlw	0
  9114  00D374  0012               	return	
  9115  00D376                     
  9116                           ;fat16.c: 1163: return 'F';
  9117  00D376  0E46               	movlw	70
  9118  00D378  0012               	return	
  9119  00D37A                     
  9120                           ;fat16.c: 1165: return 'A';
  9121  00D37A  0E41               	movlw	65
  9122  00D37C  0012               	return	
  9123  00D37E                     
  9124                           ;fat16.c: 1167: return 'T';
  9125  00D37E  0E54               	movlw	84
  9126  00D380  0012               	return	
  9127  00D382                     
  9128                           ;fat16.c: 1169: return '1';
  9129  00D382  0E31               	movlw	49
  9130  00D384  0012               	return	
  9131  00D386                     
  9132                           ;fat16.c: 1171: return '6';
  9133  00D386  0E36               	movlw	54
  9134  00D388  0012               	return	
  9135  00D38A                     
  9136                           ;fat16.c: 1173: return ' ';
  9137  00D38A  0E20               	movlw	32
  9138  00D38C  0012               	return	
  9139  00D38E                     
  9140                           ;fat16.c: 1175: return ' ';
  9141  00D38E  0E20               	movlw	32
  9142  00D390  0012               	return	
  9143  00D392                     
  9144                           ;fat16.c: 1177: return ' ';
  9145  00D392  0E20               	movlw	32
  9146  00D394  0012               	return	
  9147  00D396                     
  9148                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9149  00D396  0E55               	movlw	85
  9150  00D398  0012               	return	
  9151  00D39A                     
  9152                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9153  00D39A  0EAA               	movlw	170
  9154  00D39C  0012               	return	
  9155  00D39E                     
  9156                           ;fat16.c: 1183: return 0X00;
  9157  00D39E  0E00               	movlw	0
  9158                           
  9159                           ;fat16.c: 1184: }
  9160  00D3A0  0012               	return	
  9161  00D3A2                     l1893:
  9162  00D3A2  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9163  00D3A6  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9164                           
  9165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9166                           ; Switch size 1, requested type "space"
  9167                           ; Number of cases is 2, Range of values is 0 to 1
  9168                           ; switch strategies available:
  9169                           ; Name         Instructions Cycles
  9170                           ; simple_byte            7     4 (average)
  9171                           ;	Chosen strategy is simple_byte
  9172  00D3AA  0100               	movlb	0	; () banked
  9173  00D3AC  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9174  00D3AE  0A00               	xorlw	0	; case 0
  9175  00D3B0  B4D8               	btfsc	status,2,c
  9176  00D3B2  D004               	goto	l23349
  9177  00D3B4  0A01               	xorlw	1	; case 1
  9178  00D3B6  B4D8               	btfsc	status,2,c
  9179  00D3B8  D08D               	goto	l23351
  9180  00D3BA  D7F1               	goto	l1943
  9181  00D3BC                     l23349:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ; Switch size 1, requested type "space"
  9185                           ; Number of cases is 46, Range of values is 0 to 61
  9186                           ; switch strategies available:
  9187                           ; Name         Instructions Cycles
  9188                           ; simple_byte          139    70 (average)
  9189                           ;	Chosen strategy is simple_byte
  9190  00D3BC  5162               	movf	??__get_fbr& (0+255),w,b
  9191  00D3BE  0A00               	xorlw	0	; case 0
  9192  00D3C0  B4D8               	btfsc	status,2,c
  9193  00D3C2  D757               	goto	l1894
  9194  00D3C4  0A01               	xorlw	1	; case 1
  9195  00D3C6  B4D8               	btfsc	status,2,c
  9196  00D3C8  D756               	goto	l1896
  9197  00D3CA  0A03               	xorlw	3	; case 2
  9198  00D3CC  B4D8               	btfsc	status,2,c
  9199  00D3CE  D755               	goto	l1897
  9200  00D3D0  0A01               	xorlw	1	; case 3
  9201  00D3D2  B4D8               	btfsc	status,2,c
  9202  00D3D4  D754               	goto	l1898
  9203  00D3D6  0A07               	xorlw	7	; case 4
  9204  00D3D8  B4D8               	btfsc	status,2,c
  9205  00D3DA  D75A               	goto	l1899
  9206  00D3DC  0A01               	xorlw	1	; case 5
  9207  00D3DE  B4D8               	btfsc	status,2,c
  9208  00D3E0  D760               	goto	l1900
  9209  00D3E2  0A03               	xorlw	3	; case 6
  9210  00D3E4  B4D8               	btfsc	status,2,c
  9211  00D3E6  D766               	goto	l1901
  9212  00D3E8  0A01               	xorlw	1	; case 7
  9213  00D3EA  B4D8               	btfsc	status,2,c
  9214  00D3EC  D76C               	goto	l1902
  9215  00D3EE  0A0F               	xorlw	15	; case 8
  9216  00D3F0  B4D8               	btfsc	status,2,c
  9217  00D3F2  D772               	goto	l1903
  9218  00D3F4  0A01               	xorlw	1	; case 9
  9219  00D3F6  B4D8               	btfsc	status,2,c
  9220  00D3F8  D778               	goto	l1904
  9221  00D3FA  0A03               	xorlw	3	; case 10
  9222  00D3FC  B4D8               	btfsc	status,2,c
  9223  00D3FE  D77E               	goto	l1905
  9224  00D400  0A01               	xorlw	1	; case 11
  9225  00D402  B4D8               	btfsc	status,2,c
  9226  00D404  D784               	goto	l1906
  9227  00D406  0A07               	xorlw	7	; case 12
  9228  00D408  B4D8               	btfsc	status,2,c
  9229  00D40A  D783               	goto	l1907
  9230  00D40C  0A01               	xorlw	1	; case 13
  9231  00D40E  B4D8               	btfsc	status,2,c
  9232  00D410  D782               	goto	l1908
  9233  00D412  0A03               	xorlw	3	; case 14
  9234  00D414  B4D8               	btfsc	status,2,c
  9235  00D416  D781               	goto	l1909
  9236  00D418  0A01               	xorlw	1	; case 15
  9237  00D41A  B4D8               	btfsc	status,2,c
  9238  00D41C  D780               	goto	l1910
  9239  00D41E  0A1F               	xorlw	31	; case 16
  9240  00D420  B4D8               	btfsc	status,2,c
  9241  00D422  D77F               	goto	l1911
  9242  00D424  0A01               	xorlw	1	; case 17
  9243  00D426  B4D8               	btfsc	status,2,c
  9244  00D428  D77E               	goto	l1912
  9245  00D42A  0A03               	xorlw	3	; case 18
  9246  00D42C  B4D8               	btfsc	status,2,c
  9247  00D42E  D77D               	goto	l1913
  9248  00D430  0A01               	xorlw	1	; case 19
  9249  00D432  B4D8               	btfsc	status,2,c
  9250  00D434  D77C               	goto	l1914
  9251  00D436  0A07               	xorlw	7	; case 20
  9252  00D438  B4D8               	btfsc	status,2,c
  9253  00D43A  D77B               	goto	l1915
  9254  00D43C  0A01               	xorlw	1	; case 21
  9255  00D43E  B4D8               	btfsc	status,2,c
  9256  00D440  D77A               	goto	l1916
  9257  00D442  0A03               	xorlw	3	; case 22
  9258  00D444  B4D8               	btfsc	status,2,c
  9259  00D446  D779               	goto	l1917
  9260  00D448  0A01               	xorlw	1	; case 23
  9261  00D44A  B4D8               	btfsc	status,2,c
  9262  00D44C  D778               	goto	l1918
  9263  00D44E  0A0F               	xorlw	15	; case 24
  9264  00D450  B4D8               	btfsc	status,2,c
  9265  00D452  D777               	goto	l1919
  9266  00D454  0A01               	xorlw	1	; case 25
  9267  00D456  B4D8               	btfsc	status,2,c
  9268  00D458  D776               	goto	l1920
  9269  00D45A  0A03               	xorlw	3	; case 26
  9270  00D45C  B4D8               	btfsc	status,2,c
  9271  00D45E  D775               	goto	l1921
  9272  00D460  0A01               	xorlw	1	; case 27
  9273  00D462  B4D8               	btfsc	status,2,c
  9274  00D464  D774               	goto	l1922
  9275  00D466  0A07               	xorlw	7	; case 28
  9276  00D468  B4D8               	btfsc	status,2,c
  9277  00D46A  D773               	goto	l1923
  9278  00D46C  0A01               	xorlw	1	; case 29
  9279  00D46E  B4D8               	btfsc	status,2,c
  9280  00D470  D772               	goto	l1924
  9281  00D472  0A03               	xorlw	3	; case 30
  9282  00D474  B4D8               	btfsc	status,2,c
  9283  00D476  D771               	goto	l1925
  9284  00D478  0A01               	xorlw	1	; case 31
  9285  00D47A  B4D8               	btfsc	status,2,c
  9286  00D47C  D770               	goto	l1926
  9287  00D47E  0A37               	xorlw	55	; case 40
  9288  00D480  B4D8               	btfsc	status,2,c
  9289  00D482  D76F               	goto	l1927
  9290  00D484  0A01               	xorlw	1	; case 41
  9291  00D486  B4D8               	btfsc	status,2,c
  9292  00D488  D76E               	goto	l1928
  9293  00D48A  0A05               	xorlw	5	; case 44
  9294  00D48C  B4D8               	btfsc	status,2,c
  9295  00D48E  D76D               	goto	l1929
  9296  00D490  0A01               	xorlw	1	; case 45
  9297  00D492  B4D8               	btfsc	status,2,c
  9298  00D494  D76C               	goto	l1930
  9299  00D496  0A03               	xorlw	3	; case 46
  9300  00D498  B4D8               	btfsc	status,2,c
  9301  00D49A  D76B               	goto	l1931
  9302  00D49C  0A01               	xorlw	1	; case 47
  9303  00D49E  B4D8               	btfsc	status,2,c
  9304  00D4A0  D768               	goto	l1931
  9305  00D4A2  0A19               	xorlw	25	; case 54
  9306  00D4A4  B4D8               	btfsc	status,2,c
  9307  00D4A6  D767               	goto	l1933
  9308  00D4A8  0A01               	xorlw	1	; case 55
  9309  00D4AA  B4D8               	btfsc	status,2,c
  9310  00D4AC  D766               	goto	l1934
  9311  00D4AE  0A0F               	xorlw	15	; case 56
  9312  00D4B0  B4D8               	btfsc	status,2,c
  9313  00D4B2  D765               	goto	l1935
  9314  00D4B4  0A01               	xorlw	1	; case 57
  9315  00D4B6  B4D8               	btfsc	status,2,c
  9316  00D4B8  D764               	goto	l1936
  9317  00D4BA  0A03               	xorlw	3	; case 58
  9318  00D4BC  B4D8               	btfsc	status,2,c
  9319  00D4BE  D763               	goto	l1937
  9320  00D4C0  0A01               	xorlw	1	; case 59
  9321  00D4C2  B4D8               	btfsc	status,2,c
  9322  00D4C4  D762               	goto	l1938
  9323  00D4C6  0A07               	xorlw	7	; case 60
  9324  00D4C8  B4D8               	btfsc	status,2,c
  9325  00D4CA  D761               	goto	l1939
  9326  00D4CC  0A01               	xorlw	1	; case 61
  9327  00D4CE  B4D8               	btfsc	status,2,c
  9328  00D4D0  D760               	goto	l1940
  9329  00D4D2  D765               	goto	l1943
  9330  00D4D4                     l23351:
  9331                           
  9332                           ; BSR set to: 0
  9333                           ; Switch size 1, requested type "space"
  9334                           ; Number of cases is 2, Range of values is 254 to 255
  9335                           ; switch strategies available:
  9336                           ; Name         Instructions Cycles
  9337                           ; simple_byte            7     4 (average)
  9338                           ;	Chosen strategy is simple_byte
  9339  00D4D4  5162               	movf	??__get_fbr& (0+255),w,b
  9340  00D4D6  0AFE               	xorlw	254	; case 254
  9341  00D4D8  B4D8               	btfsc	status,2,c
  9342  00D4DA  D75D               	goto	l1941
  9343  00D4DC  0A01               	xorlw	1	; case 255
  9344  00D4DE  B4D8               	btfsc	status,2,c
  9345  00D4E0  D75C               	goto	l1942
  9346  00D4E2  D75D               	goto	l1943
  9347  00D4E4                     __end_of__get_fbr:
  9348                           	opt stack 0
  9349                           tblptru	equ	0xFF8
  9350                           tblptrh	equ	0xFF7
  9351                           tblptrl	equ	0xFF6
  9352                           tablat	equ	0xFF5
  9353                           postinc0	equ	0xFEE
  9354                           wreg	equ	0xFE8
  9355                           postdec1	equ	0xFE5
  9356                           fsr1h	equ	0xFE2
  9357                           fsr1l	equ	0xFE1
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           fsr2h	equ	0xFDA
  9361                           fsr2l	equ	0xFD9
  9362                           status	equ	0xFD8
  9363                           
  9364 ;; *************** function __get_fat *****************
  9365 ;; Defined at:
  9366 ;;		line 1187 in file "fat16.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  idx             2    0[BANK0 ] unsigned int 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      unsigned char 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9383 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9384 ;;Total ram usage:        4 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:   10
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_fat_format
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text19
  9395  011E58                     __ptext19:
  9396                           	opt stack 0
  9397  011E58                     __get_fat:
  9398                           	opt stack 17
  9399                           
  9400                           ;fat16.c: 1189: switch (idx)
  9401                           
  9402                           ;incstack = 0
  9403  011E58  D00E               	goto	l1947
  9404  011E5A                     
  9405                           ;fat16.c: 1193: return 0xF8;
  9406  011E5A  0EF8               	movlw	248
  9407  011E5C  0012               	return	
  9408  011E5E                     
  9409                           ;fat16.c: 1195: return 0xFF;
  9410  011E5E  0EFF               	movlw	255
  9411  011E60  0012               	return	
  9412  011E62                     
  9413                           ;fat16.c: 1197: return 0xFF;
  9414  011E62  0EFF               	movlw	255
  9415  011E64  0012               	return	
  9416  011E66                     
  9417                           ;fat16.c: 1199: return 0xFF;
  9418  011E66  0EFF               	movlw	255
  9419  011E68  0012               	return	
  9420  011E6A                     
  9421                           ;fat16.c: 1202: return 0xFF;
  9422  011E6A  0EFF               	movlw	255
  9423  011E6C  0012               	return	
  9424  011E6E                     
  9425                           ;fat16.c: 1204: return 0xFF;
  9426  011E6E  0EFF               	movlw	255
  9427  011E70  0012               	return	
  9428  011E72                     
  9429                           ;fat16.c: 1206: return 0X00;
  9430  011E72  0E00               	movlw	0
  9431                           
  9432                           ;fat16.c: 1207: }
  9433  011E74  0012               	return	
  9434  011E76                     l1947:
  9435  011E76  C060  F062         	movff	__get_fat@idx,??__get_fat
  9436  011E7A  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
  9437                           
  9438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9439                           ; Switch size 1, requested type "space"
  9440                           ; Number of cases is 1, Range of values is 0 to 0
  9441                           ; switch strategies available:
  9442                           ; Name         Instructions Cycles
  9443                           ; simple_byte            4     3 (average)
  9444                           ;	Chosen strategy is simple_byte
  9445  011E7E  0100               	movlb	0	; () banked
  9446  011E80  5163               	movf	(??__get_fat+1)& (0+255),w,b
  9447  011E82  0A00               	xorlw	0	; case 0
  9448  011E84  A4D8               	btfss	status,2,c
  9449  011E86  D7F5               	goto	l1955
  9450                           
  9451                           ; BSR set to: 0
  9452                           ; Switch size 1, requested type "space"
  9453                           ; Number of cases is 6, Range of values is 0 to 5
  9454                           ; switch strategies available:
  9455                           ; Name         Instructions Cycles
  9456                           ; simple_byte           19    10 (average)
  9457                           ;	Chosen strategy is simple_byte
  9458  011E88  5162               	movf	??__get_fat& (0+255),w,b
  9459  011E8A  0A00               	xorlw	0	; case 0
  9460  011E8C  B4D8               	btfsc	status,2,c
  9461  011E8E  D7E5               	goto	l1948
  9462  011E90  0A01               	xorlw	1	; case 1
  9463  011E92  B4D8               	btfsc	status,2,c
  9464  011E94  D7E4               	goto	l1950
  9465  011E96  0A03               	xorlw	3	; case 2
  9466  011E98  B4D8               	btfsc	status,2,c
  9467  011E9A  D7E3               	goto	l1951
  9468  011E9C  0A01               	xorlw	1	; case 3
  9469  011E9E  B4D8               	btfsc	status,2,c
  9470  011EA0  D7E2               	goto	l1952
  9471  011EA2  0A07               	xorlw	7	; case 4
  9472  011EA4  B4D8               	btfsc	status,2,c
  9473  011EA6  D7E1               	goto	l1953
  9474  011EA8  0A01               	xorlw	1	; case 5
  9475  011EAA  B4D8               	btfsc	status,2,c
  9476  011EAC  D7E0               	goto	l1954
  9477  011EAE  D7E1               	goto	l1955
  9478  011EB0                     __end_of__get_fat:
  9479                           	opt stack 0
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           postinc0	equ	0xFEE
  9485                           wreg	equ	0xFE8
  9486                           postdec1	equ	0xFE5
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           fsr2h	equ	0xFDA
  9492                           fsr2l	equ	0xFD9
  9493                           status	equ	0xFD8
  9494                           
  9495 ;; *************** function __get_data *****************
  9496 ;; Defined at:
  9497 ;;		line 1283 in file "fat16.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  idx             2    0[BANK0 ] unsigned int 
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      unsigned char 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9515 ;;Total ram usage:        2 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:   10
  9518 ;; This function calls:
  9519 ;;		Nothing
  9520 ;; This function is called by:
  9521 ;;		_fat_format
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text20
  9526  01288C                     __ptext20:
  9527                           	opt stack 0
  9528  01288C                     __get_data:
  9529                           	opt stack 17
  9530                           
  9531                           ;fat16.c: 1285: if(idx < 12)
  9532                           
  9533                           ;incstack = 0
  9534  01288C  0100               	movlb	0	; () banked
  9535  01288E  5161               	movf	(__get_data@idx+1)& (0+255),w,b
  9536  012890  E110               	bnz	l19095
  9537  012892  0E0C               	movlw	12
  9538  012894  5D60               	subwf	__get_data@idx& (0+255),w,b
  9539  012896  B0D8               	btfsc	status,0,c
  9540  012898  D00C               	goto	l1991
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
  9544  01289A  0EF1               	movlw	low STR_18
  9545  01289C  2560               	addwf	__get_data@idx& (0+255),w,b
  9546  01289E  6EF6               	movwf	tblptrl,c
  9547  0128A0  0EA1               	movlw	high STR_18
  9548  0128A2  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
  9549  0128A4  6EF7               	movwf	tblptrh,c
  9550  0128A6                     	if	1	;There are 3 active tblptr bytes
  9551  0128A6  6AF8               	clrf	tblptru,c
  9552  0128A8  0E00               	movlw	low (__mediumconst shr (0+16))
  9553  0128AA  22F8               	addwfc	tblptru,f,c
  9554  0128AC                     	endif
  9555  0128AC  0008               	tblrd		*
  9556  0128AE  50F5               	movf	tablat,w,c
  9557                           
  9558                           ; BSR set to: 0
  9559  0128B0  0012               	return	
  9560  0128B2                     l1991:
  9561  0128B2                     l19095:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
  9565  0128B2  0E00               	movlw	0
  9566  0128B4  0012               	return	
  9567  0128B6                     __end_of__get_data:
  9568                           	opt stack 0
  9569                           tblptru	equ	0xFF8
  9570                           tblptrh	equ	0xFF7
  9571                           tblptrl	equ	0xFF6
  9572                           tablat	equ	0xFF5
  9573                           postinc0	equ	0xFEE
  9574                           wreg	equ	0xFE8
  9575                           postdec1	equ	0xFE5
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           fsr2h	equ	0xFDA
  9581                           fsr2l	equ	0xFD9
  9582                           status	equ	0xFD8
  9583                           
  9584 ;; *************** function _encoder_init *****************
  9585 ;; Defined at:
  9586 ;;		line 92 in file "encoder.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;		None
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;		None
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  1    wreg      void 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2, status,0
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;Total ram usage:        0 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; Hardware stack levels required when called:   10
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		_system_init
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text21
  9615  012908                     __ptext21:
  9616                           	opt stack 0
  9617  012908                     _encoder_init:
  9618                           	opt stack 19
  9619                           
  9620                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;incstack = 0
  9624  012908  5084               	movf	3972,w,c	;volatile
  9625  01290A  0B07               	andlw	7
  9626  01290C  6E21               	movwf	_enc1,c
  9627                           
  9628                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9629  01290E  5080               	movf	3968,w,c	;volatile
  9630  012910  0B07               	andlw	7
  9631  012912  6E20               	movwf	_enc2,c
  9632                           
  9633                           ;encoder.c: 96: os.encoder1Count = 0;
  9634  012914  0E00               	movlw	0
  9635  012916  0100               	movlb	0	; () banked
  9636  012918  6FD6               	movwf	(_os+3)& (0+255),b	;volatile
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;encoder.c: 97: os.encoder2Count = 0;
  9640  01291A  0E00               	movlw	0
  9641  01291C  6FD8               	movwf	(_os+5)& (0+255),b	;volatile
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;encoder.c: 98: os.button1 = 0;
  9645  01291E  0E00               	movlw	0
  9646  012920  6FD7               	movwf	(_os+4)& (0+255),b	;volatile
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;encoder.c: 99: os.button2 = 0;
  9650  012922  0E00               	movlw	0
  9651  012924  6FD9               	movwf	(_os+6)& (0+255),b	;volatile
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9655  012926  0E01               	movlw	1
  9656  012928  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
  9657                           
  9658                           ; BSR set to: 0
  9659  01292A  0012               	return		;funcret
  9660  01292C                     __end_of_encoder_init:
  9661                           	opt stack 0
  9662                           tblptru	equ	0xFF8
  9663                           tblptrh	equ	0xFF7
  9664                           tblptrl	equ	0xFF6
  9665                           tablat	equ	0xFF5
  9666                           postinc0	equ	0xFEE
  9667                           wreg	equ	0xFE8
  9668                           postdec1	equ	0xFE5
  9669                           fsr1h	equ	0xFE2
  9670                           fsr1l	equ	0xFE1
  9671                           indf2	equ	0xFDF
  9672                           postinc2	equ	0xFDE
  9673                           fsr2h	equ	0xFDA
  9674                           fsr2l	equ	0xFD9
  9675                           status	equ	0xFD8
  9676                           
  9677 ;; *************** function _display_update *****************
  9678 ;; Defined at:
  9679 ;;		line 570 in file "display.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  line            1   16[BANK0 ] unsigned char 
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;Total ram usage:        1 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; Hardware stack levels required when called:   14
  9700 ;; This function calls:
  9701 ;;		_i2c_display_cursor
  9702 ;;		_i2c_display_write_fixed
  9703 ;; This function is called by:
  9704 ;;		_main
  9705 ;;		_system_init
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text22
  9710  012594                     __ptext22:
  9711                           	opt stack 0
  9712  012594                     _display_update:
  9713                           	opt stack 15
  9714                           
  9715                           ;display.c: 572: uint8_t line;;display.c: 573: for(line=0; line<4; ++line)
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;incstack = 0
  9719  012594  0E00               	movlw	0
  9720  012596  0100               	movlb	0	; () banked
  9721  012598  6F70               	movwf	display_update@line& (0+255),b
  9722  01259A                     l20593:
  9723                           
  9724                           ; BSR set to: 0
  9725  01259A  0E03               	movlw	3
  9726  01259C  6570               	cpfsgt	display_update@line& (0+255),b
  9727  01259E  D001               	goto	l1439
  9728  0125A0  0012               	return	
  9729  0125A2                     l1439:
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;display.c: 574: {;display.c: 575: i2c_display_cursor(line, 0);
  9733                           
  9734                           ; BSR set to: 0
  9735  0125A2  0E00               	movlw	0
  9736  0125A4  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  9737  0125A6  5170               	movf	display_update@line& (0+255),w,b
  9738  0125A8  ECA8  F094         	call	_i2c_display_cursor
  9739                           
  9740                           ;display.c: 576: i2c_display_write_fixed(display_content[line], 20);
  9741  0125AC  0100               	movlb	0	; () banked
  9742  0125AE  5170               	movf	display_update@line& (0+255),w,b
  9743  0125B0  0D14               	mullw	20
  9744  0125B2  0E78               	movlw	low _display_content
  9745  0125B4  24F3               	addwf	prodl,w,c
  9746  0125B6  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  9747  0125B8  0E02               	movlw	high _display_content
  9748  0125BA  20F4               	addwfc	prodh,w,c
  9749  0125BC  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  9750  0125BE  0E14               	movlw	20
  9751  0125C0  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  9752  0125C2  ECAF  F08F         	call	_i2c_display_write_fixed	;wreg free
  9753  0125C6  0100               	movlb	0	; () banked
  9754  0125C8  2B70               	incf	display_update@line& (0+255),f,b
  9755  0125CA  D7E7               	goto	l20593
  9756  0125CC                     __end_of_display_update:
  9757                           	opt stack 0
  9758                           tblptru	equ	0xFF8
  9759                           tblptrh	equ	0xFF7
  9760                           tblptrl	equ	0xFF6
  9761                           tablat	equ	0xFF5
  9762                           prodh	equ	0xFF4
  9763                           prodl	equ	0xFF3
  9764                           postinc0	equ	0xFEE
  9765                           wreg	equ	0xFE8
  9766                           postdec1	equ	0xFE5
  9767                           fsr1h	equ	0xFE2
  9768                           fsr1l	equ	0xFE1
  9769                           indf2	equ	0xFDF
  9770                           postinc2	equ	0xFDE
  9771                           fsr2h	equ	0xFDA
  9772                           fsr2l	equ	0xFD9
  9773                           status	equ	0xFD8
  9774                           
  9775 ;; *************** function _i2c_display_write_fixed *****************
  9776 ;; Defined at:
  9777 ;;		line 395 in file "i2c.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9780 ;;		 -> display_content(80), 
  9781 ;;  length          1    7[BANK0 ] unsigned char 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  pos             1    8[BANK0 ] unsigned char 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      void 
  9786 ;; Registers used:
  9787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9793 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9796 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9797 ;;Total ram usage:        4 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:   11
  9800 ;; This function calls:
  9801 ;;		__i2c_send
  9802 ;;		__i2c_start
  9803 ;;		__i2c_stop
  9804 ;;		__i2c_wait_idle
  9805 ;; This function is called by:
  9806 ;;		_display_update
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text23
  9811  011F5E                     __ptext23:
  9812                           	opt stack 0
  9813  011F5E                     _i2c_display_write_fixed:
  9814                           	opt stack 17
  9815                           
  9816                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;incstack = 0
  9820  011F5E  EC24  F08D         	call	__i2c_wait_idle	;wreg free
  9821                           
  9822                           ;i2c.c: 403: _i2c_start();
  9823  011F62  EC67  F095         	call	__i2c_start	;wreg free
  9824                           
  9825                           ;i2c.c: 404: _i2c_wait_idle();
  9826  011F66  EC24  F08D         	call	__i2c_wait_idle	;wreg free
  9827                           
  9828                           ;i2c.c: 405: _i2c_send(0b01111000);
  9829  011F6A  0E78               	movlw	120
  9830  011F6C  EC4F  F095         	call	__i2c_send
  9831                           
  9832                           ;i2c.c: 406: _i2c_wait_idle();
  9833  011F70  EC24  F08D         	call	__i2c_wait_idle	;wreg free
  9834                           
  9835                           ;i2c.c: 407: _i2c_send(0b01000000);
  9836  011F74  0E40               	movlw	64
  9837  011F76  EC4F  F095         	call	__i2c_send
  9838                           
  9839                           ;i2c.c: 408: _i2c_wait_idle();
  9840  011F7A  EC24  F08D         	call	__i2c_wait_idle	;wreg free
  9841                           
  9842                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
  9843  011F7E  0E00               	movlw	0
  9844  011F80  0100               	movlb	0	; () banked
  9845  011F82  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  9846  011F84  D00F               	goto	l1215
  9847  011F86                     
  9848                           ; BSR set to: 0
  9849                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
  9850                           
  9851                           ; BSR set to: 0
  9852  011F86  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  9853  011F88  0D01               	mullw	1
  9854  011F8A  50F3               	movf	prodl,w,c
  9855  011F8C  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  9856  011F8E  6ED9               	movwf	fsr2l,c
  9857  011F90  50F4               	movf	prodh,w,c
  9858  011F92  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  9859  011F94  6EDA               	movwf	fsr2h,c
  9860  011F96  50DF               	movf	indf2,w,c
  9861  011F98  EC4F  F095         	call	__i2c_send
  9862                           
  9863                           ;i2c.c: 414: _i2c_wait_idle();
  9864  011F9C  EC24  F08D         	call	__i2c_wait_idle	;wreg free
  9865  011FA0  0100               	movlb	0	; () banked
  9866  011FA2  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  9867  011FA4                     l1215:
  9868                           
  9869                           ; BSR set to: 0
  9870                           
  9871                           ; BSR set to: 0
  9872  011FA4  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  9873  011FA6  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  9874  011FA8  A0D8               	btfss	status,0,c
  9875  011FAA  D7ED               	goto	l1216
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
  9879                           
  9880                           ; BSR set to: 0
  9881  011FAC  EC63  F095         	call	__i2c_stop	;wreg free
  9882  011FB0  0012               	return		;funcret
  9883  011FB2                     __end_of_i2c_display_write_fixed:
  9884                           	opt stack 0
  9885                           tblptru	equ	0xFF8
  9886                           tblptrh	equ	0xFF7
  9887                           tblptrl	equ	0xFF6
  9888                           tablat	equ	0xFF5
  9889                           prodh	equ	0xFF4
  9890                           prodl	equ	0xFF3
  9891                           postinc0	equ	0xFEE
  9892                           wreg	equ	0xFE8
  9893                           postdec1	equ	0xFE5
  9894                           fsr1h	equ	0xFE2
  9895                           fsr1l	equ	0xFE1
  9896                           indf2	equ	0xFDF
  9897                           postinc2	equ	0xFDE
  9898                           fsr2h	equ	0xFDA
  9899                           fsr2l	equ	0xFD9
  9900                           status	equ	0xFD8
  9901                           
  9902 ;; *************** function _i2c_display_cursor *****************
  9903 ;; Defined at:
  9904 ;;		line 355 in file "i2c.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  line            1    wreg     unsigned char 
  9907 ;;  position        1   13[BANK0 ] unsigned char 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  line            1   14[BANK0 ] unsigned char 
  9910 ;;  address         1   15[BANK0 ] unsigned char 
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9920 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;Total ram usage:        3 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:   13
  9927 ;; This function calls:
  9928 ;;		__ic2_display_set_ddram_address
  9929 ;; This function is called by:
  9930 ;;		_display_update
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text24
  9935  012950                     __ptext24:
  9936                           	opt stack 0
  9937  012950                     _i2c_display_cursor:
  9938                           	opt stack 15
  9939                           
  9940                           ;incstack = 0
  9941                           ;i2c_display_cursor@line stored from wreg
  9942  012950  0100               	movlb	0	; () banked
  9943  012952  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  9944                           
  9945                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
  9946  012954  0E03               	movlw	3
  9947  012956  0100               	movlb	0	; () banked
  9948  012958  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  9949                           
  9950                           ;i2c.c: 361: address = line<<5;
  9951  01295A  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  9952  01295C  46E8               	rlncf	wreg,f,c
  9953  01295E  0BE0               	andlw	224
  9954  012960  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  9955                           
  9956                           ;i2c.c: 362: position &= 0b11111;
  9957  012962  0E1F               	movlw	31
  9958  012964  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  9959                           
  9960                           ;i2c.c: 363: address |= position;
  9961  012966  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  9962  012968  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
  9966  01296A  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  9967  01296C  EC96  F094         	call	__ic2_display_set_ddram_address
  9968  012970  0012               	return		;funcret
  9969  012972                     __end_of_i2c_display_cursor:
  9970                           	opt stack 0
  9971                           tblptru	equ	0xFF8
  9972                           tblptrh	equ	0xFF7
  9973                           tblptrl	equ	0xFF6
  9974                           tablat	equ	0xFF5
  9975                           prodh	equ	0xFF4
  9976                           prodl	equ	0xFF3
  9977                           postinc0	equ	0xFEE
  9978                           wreg	equ	0xFE8
  9979                           postdec1	equ	0xFE5
  9980                           fsr1h	equ	0xFE2
  9981                           fsr1l	equ	0xFE1
  9982                           indf2	equ	0xFDF
  9983                           postinc2	equ	0xFDE
  9984                           fsr2h	equ	0xFDA
  9985                           fsr2l	equ	0xFD9
  9986                           status	equ	0xFD8
  9987                           
  9988 ;; *************** function __ic2_display_set_ddram_address *****************
  9989 ;; Defined at:
  9990 ;;		line 326 in file "i2c.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  address         1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  address         1   10[BANK0 ] unsigned char 
  9995 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10006 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10008 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10009 ;;Total ram usage:        3 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:   12
 10012 ;; This function calls:
 10013 ;;		__i2c_write
 10014 ;; This function is called by:
 10015 ;;		_i2c_display_cursor
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text25
 10020  01292C                     __ptext25:
 10021                           	opt stack 0
 10022  01292C                     __ic2_display_set_ddram_address:
 10023                           	opt stack 15
 10024                           
 10025                           ;incstack = 0
 10026                           ;__ic2_display_set_ddram_address@address stored from wreg
 10027  01292C  0100               	movlb	0	; () banked
 10028  01292E  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10029                           
 10030                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
 10031  012930  0E00               	movlw	0
 10032  012932  0100               	movlb	0	; () banked
 10033  012934  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
 10037  012936  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10038  012938  0980               	iorlw	128
 10039  01293A  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
 10043  01293C  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10044  01293E  6F65               	movwf	__i2c_write@data& (0+255),b
 10045  012940  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10046  012942  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10047  012944  0E02               	movlw	2
 10048  012946  6F67               	movwf	__i2c_write@length& (0+255),b
 10049  012948  0E78               	movlw	120
 10050  01294A  ECF7  F090         	call	__i2c_write
 10051  01294E  0012               	return		;funcret
 10052  012950                     __end_of__ic2_display_set_ddram_address:
 10053                           	opt stack 0
 10054                           tblptru	equ	0xFF8
 10055                           tblptrh	equ	0xFF7
 10056                           tblptrl	equ	0xFF6
 10057                           tablat	equ	0xFF5
 10058                           prodh	equ	0xFF4
 10059                           prodl	equ	0xFF3
 10060                           postinc0	equ	0xFEE
 10061                           wreg	equ	0xFE8
 10062                           postdec1	equ	0xFE5
 10063                           fsr1h	equ	0xFE2
 10064                           fsr1l	equ	0xFE1
 10065                           indf2	equ	0xFDF
 10066                           postinc2	equ	0xFDE
 10067                           fsr2h	equ	0xFDA
 10068                           fsr2l	equ	0xFD9
 10069                           status	equ	0xFD8
 10070                           
 10071 ;; *************** function _display_init *****************
 10072 ;; Defined at:
 10073 ;;		line 222 in file "display.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:   14
 10094 ;; This function calls:
 10095 ;;		_i2c_display_init
 10096 ;;		_i2c_display_program_custom_character
 10097 ;; This function is called by:
 10098 ;;		_system_init
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           	psect	text26
 10103  012674                     __ptext26:
 10104                           	opt stack 0
 10105  012674                     _display_init:
 10106                           	opt stack 15
 10107                           
 10108                           ;display.c: 224: i2c_display_init();
 10109                           
 10110                           ;incstack = 0
 10111  012674  ECCF  F090         	call	_i2c_display_init	;wreg free
 10112                           
 10113                           ;display.c: 225: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10114  012678  0EDD               	movlw	low _bit_pattern_verticalbar
 10115  01267A  0100               	movlb	0	; () banked
 10116  01267C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10117  01267E  0EA1               	movlw	high _bit_pattern_verticalbar
 10118  012680  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10119  012682  0E00               	movlw	0
 10120  012684  EC93  F08B         	call	_i2c_display_program_custom_character
 10121                           
 10122                           ;display.c: 226: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10123  012688  0ED5               	movlw	low _bit_pattern_degree
 10124  01268A  0100               	movlb	0	; () banked
 10125  01268C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10126  01268E  0EA1               	movlw	high _bit_pattern_degree
 10127  012690  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10128  012692  0E01               	movlw	1
 10129  012694  EC93  F08B         	call	_i2c_display_program_custom_character
 10130                           
 10131                           ;display.c: 227: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10132  012698  0ECD               	movlw	low _bit_pattern_ae
 10133  01269A  0100               	movlb	0	; () banked
 10134  01269C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10135  01269E  0EA1               	movlw	high _bit_pattern_ae
 10136  0126A0  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10137  0126A2  0E02               	movlw	2
 10138  0126A4  EC93  F08B         	call	_i2c_display_program_custom_character
 10139  0126A8  0012               	return		;funcret
 10140  0126AA                     __end_of_display_init:
 10141                           	opt stack 0
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           postinc0	equ	0xFEE
 10149                           wreg	equ	0xFE8
 10150                           postdec1	equ	0xFE5
 10151                           fsr1h	equ	0xFE2
 10152                           fsr1l	equ	0xFE1
 10153                           indf2	equ	0xFDF
 10154                           postinc2	equ	0xFDE
 10155                           fsr2h	equ	0xFDA
 10156                           fsr2l	equ	0xFD9
 10157                           status	equ	0xFD8
 10158                           
 10159 ;; *************** function _i2c_display_program_custom_character *****************
 10160 ;; Defined at:
 10161 ;;		line 420 in file "i2c.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  address         1    wreg     unsigned char 
 10164 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10165 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;  address         1   31[BANK0 ] unsigned char 
 10168 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10169 ;;  cntr            1   32[BANK0 ] unsigned char 
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10182 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10183 ;;Total ram usage:       19 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:   13
 10186 ;; This function calls:
 10187 ;;		__i2c_write
 10188 ;;		__ic2_display_set_cgram_address
 10189 ;; This function is called by:
 10190 ;;		_display_init
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text27
 10195  011726                     __ptext27:
 10196                           	opt stack 0
 10197  011726                     _i2c_display_program_custom_character:
 10198                           	opt stack 15
 10199                           
 10200                           ;incstack = 0
 10201                           ;i2c_display_program_custom_character@address stored from wreg
 10202  011726  0100               	movlb	0	; () banked
 10203  011728  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10204                           
 10205                           ;i2c.c: 422: uint8_t cntr;;i2c.c: 423: uint8_t data_array[11];;i2c.c: 426: _ic2_display_
      +                          set_cgram_address(address<<3);
 10206  01172A  0100               	movlb	0	; () banked
 10207  01172C  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10208  01172E  42E8               	rrncf	wreg,f,c
 10209  011730  0BF8               	andlw	248
 10210  011732  EC5B  F094         	call	__ic2_display_set_cgram_address
 10211                           
 10212                           ;i2c.c: 429: data_array[0] = 0b01000000;
 10213  011736  0E40               	movlw	64
 10214  011738  0100               	movlb	0	; () banked
 10215  01173A  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;i2c.c: 430: for(cntr=0; cntr<8; ++cntr)
 10219  01173C  0E00               	movlw	0
 10220  01173E  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10221  011740                     l19659:
 10222                           
 10223                           ; BSR set to: 0
 10224  011740  0E07               	movlw	7
 10225  011742  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10226  011744  D001               	goto	l1221
 10227  011746  D023               	goto	u19410
 10228  011748                     l1221:
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;i2c.c: 431: {;i2c.c: 432: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10232                           
 10233                           ; BSR set to: 0
 10234  011748  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10235  01174A  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10236  01174C  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10237  01174E  0E01               	movlw	1
 10238  011750  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10239  011752  0E00               	movlw	0
 10240  011754  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10241  011756  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10242  011758  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10243  01175A  6ED9               	movwf	fsr2l,c
 10244  01175C  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10245  01175E  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10246  011760  6EDA               	movwf	fsr2h,c
 10247  011762  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10248  011764  0D01               	mullw	1
 10249  011766  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10250  01176A  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10251  01176E  50F3               	movf	prodl,w,c
 10252  011770  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10253  011772  50F4               	movf	prodh,w,c
 10254  011774  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10255  011776  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10256  01177A  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10257  01177E                     	if	0	;tblptru may be non-zero
 10258  01177E                     	endif
 10259  01177E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10260  01177E  0E00               	movlw	low (__mediumconst shr (0+16))
 10261  011780  6EF8               	movwf	tblptru,c
 10262  011782                     	endif
 10263  011782  0008               	tblrd		*
 10264  011784  50F5               	movf	tablat,w,c
 10265  011786  0B1F               	andlw	31
 10266  011788  6EDF               	movwf	indf2,c
 10267                           
 10268                           ; BSR set to: 0
 10269  01178A  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10270  01178C  D7D9               	goto	l19659
 10271  01178E                     u19410:
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;i2c.c: 433: };i2c.c: 434: _i2c_write(0b01111000, data_array, 9);
 10275                           
 10276                           ; BSR set to: 0
 10277  01178E  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10278  011790  6F65               	movwf	__i2c_write@data& (0+255),b
 10279  011792  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10280  011794  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10281  011796  0E09               	movlw	9
 10282  011798  6F67               	movwf	__i2c_write@length& (0+255),b
 10283  01179A  0E78               	movlw	120
 10284  01179C  ECF7  F090         	call	__i2c_write
 10285  0117A0  0012               	return		;funcret
 10286  0117A2                     __end_of_i2c_display_program_custom_character:
 10287                           	opt stack 0
 10288                           tblptru	equ	0xFF8
 10289                           tblptrh	equ	0xFF7
 10290                           tblptrl	equ	0xFF6
 10291                           tablat	equ	0xFF5
 10292                           prodh	equ	0xFF4
 10293                           prodl	equ	0xFF3
 10294                           postinc0	equ	0xFEE
 10295                           wreg	equ	0xFE8
 10296                           postdec1	equ	0xFE5
 10297                           fsr1h	equ	0xFE2
 10298                           fsr1l	equ	0xFE1
 10299                           indf2	equ	0xFDF
 10300                           postinc2	equ	0xFDE
 10301                           fsr2h	equ	0xFDA
 10302                           fsr2l	equ	0xFD9
 10303                           status	equ	0xFD8
 10304                           
 10305 ;; *************** function __ic2_display_set_cgram_address *****************
 10306 ;; Defined at:
 10307 ;;		line 339 in file "i2c.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  address         1    wreg     unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  address         1   13[BANK0 ] unsigned char 
 10312 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10323 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10325 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;Total ram usage:        4 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:   12
 10329 ;; This function calls:
 10330 ;;		__i2c_write
 10331 ;; This function is called by:
 10332 ;;		_i2c_display_program_custom_character
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text28
 10337  0128B6                     __ptext28:
 10338                           	opt stack 0
 10339  0128B6                     __ic2_display_set_cgram_address:
 10340                           	opt stack 15
 10341                           
 10342                           ;incstack = 0
 10343                           ;__ic2_display_set_cgram_address@address stored from wreg
 10344  0128B6  0100               	movlb	0	; () banked
 10345  0128B8  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10346                           
 10347                           ;i2c.c: 341: uint8_t data_array[3];;i2c.c: 346: address &= 0b001111111;
 10348  0128BA  0100               	movlb	0	; () banked
 10349  0128BC  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;i2c.c: 347: data_array[0] = 0b00000000;
 10353  0128BE  0E00               	movlw	0
 10354  0128C0  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;i2c.c: 348: data_array[1] = 0b00111000;
 10358  0128C2  0E38               	movlw	56
 10359  0128C4  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10360                           
 10361                           ;i2c.c: 349: data_array[2] = 0b01000000 | address;
 10362  0128C6  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10363  0128C8  0940               	iorlw	64
 10364  0128CA  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;i2c.c: 352: _i2c_write(0b01111000, data_array, 3);
 10368  0128CC  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10369  0128CE  6F65               	movwf	__i2c_write@data& (0+255),b
 10370  0128D0  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10371  0128D2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10372  0128D4  0E03               	movlw	3
 10373  0128D6  6F67               	movwf	__i2c_write@length& (0+255),b
 10374  0128D8  0E78               	movlw	120
 10375  0128DA  ECF7  F090         	call	__i2c_write
 10376  0128DE  0012               	return		;funcret
 10377  0128E0                     __end_of__ic2_display_set_cgram_address:
 10378                           	opt stack 0
 10379                           tblptru	equ	0xFF8
 10380                           tblptrh	equ	0xFF7
 10381                           tblptrl	equ	0xFF6
 10382                           tablat	equ	0xFF5
 10383                           prodh	equ	0xFF4
 10384                           prodl	equ	0xFF3
 10385                           postinc0	equ	0xFEE
 10386                           wreg	equ	0xFE8
 10387                           postdec1	equ	0xFE5
 10388                           fsr1h	equ	0xFE2
 10389                           fsr1l	equ	0xFE1
 10390                           indf2	equ	0xFDF
 10391                           postinc2	equ	0xFDE
 10392                           fsr2h	equ	0xFDA
 10393                           fsr2l	equ	0xFD9
 10394                           status	equ	0xFD8
 10395                           
 10396 ;; *************** function _i2c_display_init *****************
 10397 ;; Defined at:
 10398 ;;		line 297 in file "i2c.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;		None
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  1    wreg      void 
 10405 ;; Registers used:
 10406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10413 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10415 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10416 ;;Total ram usage:       10 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; Hardware stack levels required when called:   12
 10419 ;; This function calls:
 10420 ;;		__i2c_write
 10421 ;; This function is called by:
 10422 ;;		_display_init
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text29
 10427  01219E                     __ptext29:
 10428                           	opt stack 0
 10429  01219E                     _i2c_display_init:
 10430                           	opt stack 16
 10431                           
 10432                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
 10433                           
 10434                           ;incstack = 0
 10435  01219E  EE21  F0B5         	lfsr	2,i2c_display_init@F6909
 10436  0121A2  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10437  0121A6  0E08               	movlw	8
 10438  0121A8                     u19381:
 10439  0121A8  CFDB FFE3          	movff	plusw2,plusw1
 10440  0121AC  06E8               	decf	wreg,f,c
 10441  0121AE  E2FC               	bc	u19381
 10442                           
 10443                           ;i2c.c: 314: LATAbits.LA3 = 0;
 10444  0121B0  9689               	bcf	3977,3,c	;volatile
 10445                           
 10446                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
 10447  0121B2  0E1A               	movlw	26
 10448  0121B4  0100               	movlb	0	; () banked
 10449  0121B6  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10450  0121B8  0EF8               	movlw	248
 10451  0121BA                     u23817:
 10452  0121BA  2EE8               	decfsz	wreg,f,c
 10453  0121BC  D7FE               	bra	u23817
 10454  0121BE  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10455  0121C0  D7FC               	bra	u23817
 10456  0121C2  F000               	nop	
 10457                           
 10458                           ;i2c.c: 316: LATAbits.LA3 = 1;
 10459  0121C4  8689               	bsf	3977,3,c	;volatile
 10460                           
 10461                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
 10462  0121C6  0E82               	movlw	130
 10463  0121C8  0100               	movlb	0	; () banked
 10464  0121CA  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10465  0121CC  0EDD               	movlw	221
 10466  0121CE                     u23827:
 10467  0121CE  2EE8               	decfsz	wreg,f,c
 10468  0121D0  D7FE               	bra	u23827
 10469  0121D2  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10470  0121D4  D7FC               	bra	u23827
 10471  0121D6  D000               	nop2	
 10472                           
 10473                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
 10474  0121D8  0E6B               	movlw	low i2c_display_init@init_sequence
 10475  0121DA  0100               	movlb	0	; () banked
 10476  0121DC  6F65               	movwf	__i2c_write@data& (0+255),b
 10477  0121DE  0E00               	movlw	high i2c_display_init@init_sequence
 10478  0121E0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10479  0121E2  0E09               	movlw	9
 10480  0121E4  6F67               	movwf	__i2c_write@length& (0+255),b
 10481  0121E6  0E78               	movlw	120
 10482  0121E8  ECF7  F090         	call	__i2c_write
 10483  0121EC  0012               	return		;funcret
 10484  0121EE                     __end_of_i2c_display_init:
 10485                           	opt stack 0
 10486                           tblptru	equ	0xFF8
 10487                           tblptrh	equ	0xFF7
 10488                           tblptrl	equ	0xFF6
 10489                           tablat	equ	0xFF5
 10490                           prodh	equ	0xFF4
 10491                           prodl	equ	0xFF3
 10492                           postinc0	equ	0xFEE
 10493                           wreg	equ	0xFE8
 10494                           postdec1	equ	0xFE5
 10495                           plusw1	equ	0xFE3
 10496                           fsr1h	equ	0xFE2
 10497                           fsr1l	equ	0xFE1
 10498                           indf2	equ	0xFDF
 10499                           postinc2	equ	0xFDE
 10500                           plusw2	equ	0xFDB
 10501                           fsr2h	equ	0xFDA
 10502                           fsr2l	equ	0xFD9
 10503                           status	equ	0xFD8
 10504                           
 10505 ;; *************** function __i2c_write *****************
 10506 ;; Defined at:
 10507 ;;		line 83 in file "i2c.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  slave_addres    1    wreg     unsigned char 
 10510 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10511 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10512 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10513 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10514 ;;  length          1    7[BANK0 ] unsigned char 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10517 ;;  cntr            1    9[BANK0 ] unsigned char 
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10527 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;Total ram usage:        5 bytes
 10532 ;; Hardware stack levels used:    1
 10533 ;; Hardware stack levels required when called:   11
 10534 ;; This function calls:
 10535 ;;		__i2c_send
 10536 ;;		__i2c_start
 10537 ;;		__i2c_stop
 10538 ;;		__i2c_wait_idle
 10539 ;; This function is called by:
 10540 ;;		_i2c_display_init
 10541 ;;		__ic2_display_set_ddram_address
 10542 ;;		__ic2_display_set_cgram_address
 10543 ;;		_i2c_display_program_custom_character
 10544 ;;		_i2c_adc_start
 10545 ;;		_i2c_eeprom_writeByte
 10546 ;;		_i2c_eeprom_readByte
 10547 ;;		_i2c_eeprom_write
 10548 ;;		_i2c_eeprom_read
 10549 ;;		__i2c_display_send_init_sequence
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text30
 10554  0121EE                     __ptext30:
 10555                           	opt stack 0
 10556  0121EE                     __i2c_write:
 10557                           	opt stack 15
 10558                           
 10559                           ;incstack = 0
 10560                           ;__i2c_write@slave_address stored from wreg
 10561  0121EE  0100               	movlb	0	; () banked
 10562  0121F0  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10563                           
 10564                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
 10565  0121F2  EC24  F08D         	call	__i2c_wait_idle	;wreg free
 10566                           
 10567                           ;i2c.c: 88: _i2c_start();
 10568  0121F6  EC67  F095         	call	__i2c_start	;wreg free
 10569                           
 10570                           ;i2c.c: 89: _i2c_wait_idle();
 10571  0121FA  EC24  F08D         	call	__i2c_wait_idle	;wreg free
 10572                           
 10573                           ;i2c.c: 90: _i2c_send(slave_address);
 10574  0121FE  0100               	movlb	0	; () banked
 10575  012200  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10576  012202  EC4F  F095         	call	__i2c_send
 10577                           
 10578                           ;i2c.c: 91: _i2c_wait_idle();
 10579  012206  EC24  F08D         	call	__i2c_wait_idle	;wreg free
 10580                           
 10581                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
 10582  01220A  0E00               	movlw	0
 10583  01220C  0100               	movlb	0	; () banked
 10584  01220E  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10585  012210  D00F               	goto	l1142
 10586  012212                     
 10587                           ; BSR set to: 0
 10588                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
 10589                           
 10590                           ; BSR set to: 0
 10591  012212  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10592  012214  0D01               	mullw	1
 10593  012216  50F3               	movf	prodl,w,c
 10594  012218  2565               	addwf	__i2c_write@data& (0+255),w,b
 10595  01221A  6ED9               	movwf	fsr2l,c
 10596  01221C  50F4               	movf	prodh,w,c
 10597  01221E  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10598  012220  6EDA               	movwf	fsr2h,c
 10599  012222  50DF               	movf	indf2,w,c
 10600  012224  EC4F  F095         	call	__i2c_send
 10601                           
 10602                           ;i2c.c: 96: _i2c_wait_idle();
 10603  012228  EC24  F08D         	call	__i2c_wait_idle	;wreg free
 10604  01222C  0100               	movlb	0	; () banked
 10605  01222E  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10606  012230                     l1142:
 10607                           
 10608                           ; BSR set to: 0
 10609                           
 10610                           ; BSR set to: 0
 10611  012230  5167               	movf	__i2c_write@length& (0+255),w,b
 10612  012232  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10613  012234  A0D8               	btfss	status,0,c
 10614  012236  D7ED               	goto	l1143
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
 10618                           
 10619                           ; BSR set to: 0
 10620  012238  EC63  F095         	call	__i2c_stop	;wreg free
 10621  01223C  0012               	return		;funcret
 10622  01223E                     __end_of__i2c_write:
 10623                           	opt stack 0
 10624                           tblptru	equ	0xFF8
 10625                           tblptrh	equ	0xFF7
 10626                           tblptrl	equ	0xFF6
 10627                           tablat	equ	0xFF5
 10628                           prodh	equ	0xFF4
 10629                           prodl	equ	0xFF3
 10630                           postinc0	equ	0xFEE
 10631                           wreg	equ	0xFE8
 10632                           postdec1	equ	0xFE5
 10633                           plusw1	equ	0xFE3
 10634                           fsr1h	equ	0xFE2
 10635                           fsr1l	equ	0xFE1
 10636                           indf2	equ	0xFDF
 10637                           postinc2	equ	0xFDE
 10638                           plusw2	equ	0xFDB
 10639                           fsr2h	equ	0xFDA
 10640                           fsr2l	equ	0xFD9
 10641                           status	equ	0xFD8
 10642                           
 10643 ;; *************** function __i2c_wait_idle *****************
 10644 ;; Defined at:
 10645 ;;		line 39 in file "i2c.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg, status,2, status,0
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;Total ram usage:        5 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:   10
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		__i2c_write
 10670 ;;		_i2c_display_write_fixed
 10671 ;;		__i2c_read
 10672 ;;		_i2c_adc_read
 10673 ;;		__i2c_eeprom_busy
 10674 ;;		_i2c_display_write
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text31
 10679  011A48                     __ptext31:
 10680                           	opt stack 0
 10681  011A48                     __i2c_wait_idle:
 10682                           	opt stack 17
 10683                           
 10684                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10685                           
 10686                           ;incstack = 0
 10687  011A48  A4C7               	btfss	4039,2,c	;volatile
 10688  011A4A  D004               	goto	u17590
 10689  011A4C  0100               	movlb	0	; () banked
 10690  011A4E  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10691  011A50  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10692  011A52  D002               	goto	u17598
 10693  011A54                     u17590:
 10694  011A54  0100               	movlb	0	; () banked
 10695  011A56  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10696  011A58                     u17598:
 10697  011A58  A0C5               	btfss	4037,0,c	;volatile
 10698  011A5A  D003               	goto	u17600
 10699  011A5C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10700  011A5E  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10701  011A60  D002               	goto	u17608
 10702  011A62                     u17600:
 10703  011A62  0100               	movlb	0	; () banked
 10704  011A64  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10705  011A66                     u17608:
 10706  011A66  A2C5               	btfss	4037,1,c	;volatile
 10707  011A68  D003               	goto	u17610
 10708  011A6A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10709  011A6C  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 10710  011A6E  D002               	goto	u17618
 10711  011A70                     u17610:
 10712  011A70  0100               	movlb	0	; () banked
 10713  011A72  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10714  011A74                     u17618:
 10715  011A74  A4C5               	btfss	4037,2,c	;volatile
 10716  011A76  D003               	goto	u17620
 10717  011A78  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10718  011A7A  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 10719  011A7C  D002               	goto	u17628
 10720  011A7E                     u17620:
 10721  011A7E  0100               	movlb	0	; () banked
 10722  011A80  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10723  011A82                     u17628:
 10724  011A82  A6C5               	btfss	4037,3,c	;volatile
 10725  011A84  D003               	goto	u17630
 10726  011A86  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10727  011A88  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 10728  011A8A  D002               	goto	u17638
 10729  011A8C                     u17630:
 10730  011A8C  0100               	movlb	0	; () banked
 10731  011A8E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10732  011A90                     u17638:
 10733  011A90  A8C5               	btfss	4037,4,c	;volatile
 10734  011A92  D002               	goto	u17640
 10735  011A94  0E01               	movlw	1
 10736  011A96  D001               	goto	u17646
 10737  011A98                     u17640:
 10738  011A98  0E00               	movlw	0
 10739  011A9A                     u17646:
 10740  011A9A  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 10741  011A9C  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 10742  011A9E  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 10743  011AA0  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 10744  011AA2  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 10745  011AA4  0900               	iorlw	0
 10746  011AA6  B4D8               	btfsc	status,2,c
 10747  011AA8  0012               	return	
 10748  011AAA  D7CE               	goto	__i2c_wait_idle
 10749  011AAC                     __end_of__i2c_wait_idle:
 10750                           	opt stack 0
 10751                           tblptru	equ	0xFF8
 10752                           tblptrh	equ	0xFF7
 10753                           tblptrl	equ	0xFF6
 10754                           tablat	equ	0xFF5
 10755                           prodh	equ	0xFF4
 10756                           prodl	equ	0xFF3
 10757                           postinc0	equ	0xFEE
 10758                           wreg	equ	0xFE8
 10759                           postdec1	equ	0xFE5
 10760                           plusw1	equ	0xFE3
 10761                           fsr1h	equ	0xFE2
 10762                           fsr1l	equ	0xFE1
 10763                           indf2	equ	0xFDF
 10764                           postinc2	equ	0xFDE
 10765                           plusw2	equ	0xFDB
 10766                           fsr2h	equ	0xFDA
 10767                           fsr2l	equ	0xFD9
 10768                           status	equ	0xFD8
 10769                           
 10770 ;; *************** function __i2c_stop *****************
 10771 ;; Defined at:
 10772 ;;		line 62 in file "i2c.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		None
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;Total ram usage:        0 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:   10
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		__i2c_write
 10797 ;;		_i2c_display_write_fixed
 10798 ;;		__i2c_read
 10799 ;;		_i2c_adc_read
 10800 ;;		__i2c_eeprom_busy
 10801 ;;		_i2c_display_write
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text32
 10806  012AC6                     __ptext32:
 10807                           	opt stack 0
 10808  012AC6                     __i2c_stop:
 10809                           	opt stack 17
 10810                           
 10811                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;incstack = 0
 10815  012AC6  84C5               	bsf	4037,2,c	;volatile
 10816  012AC8  A4C5               	btfss	4037,2,c	;volatile
 10817  012ACA  0012               	return	
 10818  012ACC  D7FD               	goto	l1125
 10819  012ACE                     __end_of__i2c_stop:
 10820                           	opt stack 0
 10821                           tblptru	equ	0xFF8
 10822                           tblptrh	equ	0xFF7
 10823                           tblptrl	equ	0xFF6
 10824                           tablat	equ	0xFF5
 10825                           prodh	equ	0xFF4
 10826                           prodl	equ	0xFF3
 10827                           postinc0	equ	0xFEE
 10828                           wreg	equ	0xFE8
 10829                           postdec1	equ	0xFE5
 10830                           plusw1	equ	0xFE3
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           plusw2	equ	0xFDB
 10836                           fsr2h	equ	0xFDA
 10837                           fsr2l	equ	0xFD9
 10838                           status	equ	0xFD8
 10839                           
 10840 ;; *************** function __i2c_start *****************
 10841 ;; Defined at:
 10842 ;;		line 44 in file "i2c.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;		None
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;		None
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		None
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;Total ram usage:        0 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:   10
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		__i2c_write
 10867 ;;		_i2c_display_write_fixed
 10868 ;;		__i2c_read
 10869 ;;		_i2c_adc_read
 10870 ;;		__i2c_eeprom_busy
 10871 ;;		_i2c_display_write
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text33
 10876  012ACE                     __ptext33:
 10877                           	opt stack 0
 10878  012ACE                     __i2c_start:
 10879                           	opt stack 17
 10880                           
 10881                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
 10882                           
 10883                           ;incstack = 0
 10884  012ACE  80C5               	bsf	4037,0,c	;volatile
 10885  012AD0  A0C5               	btfss	4037,0,c	;volatile
 10886  012AD2  0012               	return	
 10887  012AD4  D7FD               	goto	l1110
 10888  012AD6                     __end_of__i2c_start:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           postinc0	equ	0xFEE
 10897                           wreg	equ	0xFE8
 10898                           postdec1	equ	0xFE5
 10899                           plusw1	equ	0xFE3
 10900                           fsr1h	equ	0xFE2
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           postinc2	equ	0xFDE
 10904                           plusw2	equ	0xFDB
 10905                           fsr2h	equ	0xFDA
 10906                           fsr2l	equ	0xFD9
 10907                           status	equ	0xFD8
 10908                           
 10909 ;; *************** function __i2c_send *****************
 10910 ;; Defined at:
 10911 ;;		line 50 in file "i2c.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  dat             1    wreg     unsigned char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;  dat             1    0[BANK0 ] unsigned char 
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;Total ram usage:        1 bytes
 10930 ;; Hardware stack levels used:    1
 10931 ;; Hardware stack levels required when called:   10
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		__i2c_write
 10936 ;;		_i2c_display_write_fixed
 10937 ;;		__i2c_read
 10938 ;;		_i2c_adc_read
 10939 ;;		__i2c_eeprom_busy
 10940 ;;		_i2c_display_write
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text34
 10945  012A9E                     __ptext34:
 10946                           	opt stack 0
 10947  012A9E                     __i2c_send:
 10948                           	opt stack 17
 10949                           
 10950                           ;incstack = 0
 10951                           ;__i2c_send@dat stored from wreg
 10952  012A9E  0100               	movlb	0	; () banked
 10953  012AA0  6F60               	movwf	__i2c_send@dat& (0+255),b
 10954                           
 10955                           ;i2c.c: 52: SSP1BUF = dat;
 10956  012AA2  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 10957  012AA6  0012               	return		;funcret
 10958  012AA8                     __end_of__i2c_send:
 10959                           	opt stack 0
 10960                           tblptru	equ	0xFF8
 10961                           tblptrh	equ	0xFF7
 10962                           tblptrl	equ	0xFF6
 10963                           tablat	equ	0xFF5
 10964                           prodh	equ	0xFF4
 10965                           prodl	equ	0xFF3
 10966                           postinc0	equ	0xFEE
 10967                           wreg	equ	0xFE8
 10968                           postdec1	equ	0xFE5
 10969                           plusw1	equ	0xFE3
 10970                           fsr1h	equ	0xFE2
 10971                           fsr1l	equ	0xFE1
 10972                           indf2	equ	0xFDF
 10973                           postinc2	equ	0xFDE
 10974                           plusw2	equ	0xFDB
 10975                           fsr2h	equ	0xFDA
 10976                           fsr2l	equ	0xFD9
 10977                           status	equ	0xFD8
 10978                           
 10979 ;; *************** function __system_timer0_init *****************
 10980 ;; Defined at:
 10981 ;;		line 121 in file "os.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;		None
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;		None
 10986 ;; Return value:  Size  Location     Type
 10987 ;;                  1    wreg      void 
 10988 ;; Registers used:
 10989 ;;		wreg, status,2
 10990 ;; Tracked objects:
 10991 ;;		On entry : 0/0
 10992 ;;		On exit  : 0/0
 10993 ;;		Unchanged: 0/0
 10994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10999 ;;Total ram usage:        0 bytes
 11000 ;; Hardware stack levels used:    1
 11001 ;; Hardware stack levels required when called:   10
 11002 ;; This function calls:
 11003 ;;		Nothing
 11004 ;; This function is called by:
 11005 ;;		_system_init
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text35
 11010  012834                     __ptext35:
 11011                           	opt stack 0
 11012  012834                     __system_timer0_init:
 11013                           	opt stack 19
 11014                           
 11015                           ;os.c: 126: T0CONbits.T0CS = 0;
 11016                           
 11017                           ;incstack = 0
 11018  012834  9AD5               	bcf	4053,5,c	;volatile
 11019                           
 11020                           ;os.c: 128: T0CONbits.T08BIT = 0;
 11021  012836  9CD5               	bcf	4053,6,c	;volatile
 11022                           
 11023                           ;os.c: 130: T0CONbits.T0PS2 = 0;
 11024  012838  94D5               	bcf	4053,2,c	;volatile
 11025                           
 11026                           ;os.c: 131: T0CONbits.T0PS1 = 1;
 11027  01283A  82D5               	bsf	4053,1,c	;volatile
 11028                           
 11029                           ;os.c: 132: T0CONbits.T0PS0 = 0;
 11030  01283C  90D5               	bcf	4053,0,c	;volatile
 11031                           
 11032                           ;os.c: 134: T0CONbits.PSA = 0;
 11033  01283E  96D5               	bcf	4053,3,c	;volatile
 11034                           
 11035                           ;os.c: 136: TMR0H = 0xFA;
 11036  012840  0EFA               	movlw	250
 11037  012842  6ED7               	movwf	4055,c	;volatile
 11038                           
 11039                           ;os.c: 137: TMR0L = 0x24;
 11040  012844  0E24               	movlw	36
 11041  012846  6ED6               	movwf	4054,c	;volatile
 11042                           
 11043                           ;os.c: 139: T0CONbits.TMR0ON = 1;
 11044  012848  8ED5               	bsf	4053,7,c	;volatile
 11045                           
 11046                           ;os.c: 142: INTCONbits.TMR0IF = 0;
 11047  01284A  94F2               	bcf	intcon,2,c	;volatile
 11048                           
 11049                           ;os.c: 143: INTCONbits.TMR0IE = 1;
 11050  01284C  8AF2               	bsf	intcon,5,c	;volatile
 11051                           
 11052                           ;os.c: 144: INTCONbits.GIE = 1;
 11053  01284E  8EF2               	bsf	intcon,7,c	;volatile
 11054                           
 11055                           ;os.c: 147: os.subTimeSlot = 0;
 11056  012850  0E00               	movlw	0
 11057  012852  0100               	movlb	0	; () banked
 11058  012854  6FD3               	movwf	_os& (0+255),b	;volatile
 11059                           
 11060                           ;os.c: 148: os.timeSlot = 0;
 11061  012856  0E00               	movlw	0
 11062  012858  6FD4               	movwf	(_os+1)& (0+255),b	;volatile
 11063                           
 11064                           ;os.c: 149: os.done = 0;
 11065  01285A  0E00               	movlw	0
 11066  01285C  6FD5               	movwf	(_os+2)& (0+255),b	;volatile
 11067                           
 11068                           ; BSR set to: 0
 11069  01285E  0012               	return		;funcret
 11070  012860                     __end_of__system_timer0_init:
 11071                           	opt stack 0
 11072                           tblptru	equ	0xFF8
 11073                           tblptrh	equ	0xFF7
 11074                           tblptrl	equ	0xFF6
 11075                           tablat	equ	0xFF5
 11076                           prodh	equ	0xFF4
 11077                           prodl	equ	0xFF3
 11078                           intcon	equ	0xFF2
 11079                           postinc0	equ	0xFEE
 11080                           wreg	equ	0xFE8
 11081                           postdec1	equ	0xFE5
 11082                           plusw1	equ	0xFE3
 11083                           fsr1h	equ	0xFE2
 11084                           fsr1l	equ	0xFE1
 11085                           indf2	equ	0xFDF
 11086                           postinc2	equ	0xFDE
 11087                           plusw2	equ	0xFDB
 11088                           fsr2h	equ	0xFDA
 11089                           fsr2l	equ	0xFD9
 11090                           status	equ	0xFD8
 11091                           
 11092 ;; *************** function __system_pin_setup *****************
 11093 ;; Defined at:
 11094 ;;		line 55 in file "os.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:   10
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_system_init
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	text36
 11123  0119DE                     __ptext36:
 11124                           	opt stack 0
 11125  0119DE                     __system_pin_setup:
 11126                           	opt stack 19
 11127                           
 11128                           ;os.c: 58: TRISDbits.TRISD5 = 1;
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;incstack = 0
 11132  0119DE  8A95               	bsf	3989,5,c	;volatile
 11133                           
 11134                           ;os.c: 59: TRISDbits.TRISD4 = 0;
 11135  0119E0  9895               	bcf	3989,4,c	;volatile
 11136                           
 11137                           ;os.c: 60: TRISDbits.TRISD6 = 0;
 11138  0119E2  9C95               	bcf	3989,6,c	;volatile
 11139                           
 11140                           ;os.c: 61: TRISDbits.TRISD7 = 0;
 11141  0119E4  9E95               	bcf	3989,7,c	;volatile
 11142                           
 11143                           ;os.c: 62: LATDbits.LD7 = 1;
 11144  0119E6  8E8C               	bsf	3980,7,c	;volatile
 11145                           
 11146                           ;os.c: 64: TRISBbits.TRISB3 = 1;
 11147  0119E8  8693               	bsf	3987,3,c	;volatile
 11148                           
 11149                           ;os.c: 65: ANCON1bits.PCFG9 = 0;
 11150  0119EA  010F               	movlb	15	; () banked
 11151  0119EC  9349               	bcf	73,1,b	;volatile
 11152                           
 11153                           ;os.c: 67: TRISCbits.TRISC7 = 0;
 11154  0119EE  9E94               	bcf	3988,7,c	;volatile
 11155                           
 11156                           ;os.c: 68: LATCbits.LC7 = 0;
 11157  0119F0  9E8B               	bcf	3979,7,c	;volatile
 11158                           
 11159                           ;os.c: 70: TRISCbits.TRISC6 = 0;
 11160  0119F2  9C94               	bcf	3988,6,c	;volatile
 11161                           
 11162                           ;os.c: 71: LATCbits.LC6 = 0;
 11163  0119F4  9C8B               	bcf	3979,6,c	;volatile
 11164                           
 11165                           ;os.c: 73: TRISAbits.TRISA3 = 0;
 11166  0119F6  9692               	bcf	3986,3,c	;volatile
 11167                           
 11168                           ;os.c: 74: LATAbits.LA3 = 0;
 11169  0119F8  9689               	bcf	3977,3,c	;volatile
 11170                           
 11171                           ;os.c: 76: TRISCbits.TRISC1 = 0;
 11172  0119FA  9294               	bcf	3988,1,c	;volatile
 11173                           
 11174                           ;os.c: 77: LATCbits.LC1 = 0;
 11175  0119FC  928B               	bcf	3979,1,c	;volatile
 11176                           
 11177                           ;os.c: 82: TRISBbits.TRISB5 = 1;
 11178  0119FE  8A93               	bsf	3987,5,c	;volatile
 11179                           
 11180                           ;os.c: 83: TRISBbits.TRISB4 = 1;
 11181  011A00  8893               	bsf	3987,4,c	;volatile
 11182                           
 11183                           ;os.c: 85: TRISBbits.TRISB0 = 0;
 11184  011A02  9093               	bcf	3987,0,c	;volatile
 11185                           
 11186                           ;os.c: 86: LATBbits.LB0 = 1;
 11187  011A04  808A               	bsf	3978,0,c	;volatile
 11188                           
 11189                           ;os.c: 88: TRISBbits.TRISB2 = 0;
 11190  011A06  9493               	bcf	3987,2,c	;volatile
 11191                           
 11192                           ;os.c: 89: LATBbits.LB2 = 0;
 11193  011A08  948A               	bcf	3978,2,c	;volatile
 11194                           
 11195                           ;os.c: 91: TRISBbits.TRISB1 = 0;
 11196  011A0A  9293               	bcf	3987,1,c	;volatile
 11197                           
 11198                           ;os.c: 92: ANCON1bits.PCFG10 = 1;
 11199  011A0C  8549               	bsf	73,2,b	;volatile
 11200                           
 11201                           ;os.c: 93: LATBbits.LB1 = 0;
 11202  011A0E  928A               	bcf	3978,1,c	;volatile
 11203                           
 11204                           ; BSR set to: 15
 11205                           ;os.c: 94: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11206  011A10  0E55               	movlw	85
 11207  011A12  6EA7               	movwf	4007,c	;volsfr
 11208  011A14  0EAA               	movlw	170
 11209  011A16  6EA7               	movwf	4007,c	;volsfr
 11210                           
 11211                           ; BSR set to: 15
 11212  011A18  010E               	movlb	14	; () banked
 11213  011A1A  91BF               	bcf	191,0,b	;volatile
 11214                           
 11215                           ;os.c: 95: RPOR4 = 14;
 11216  011A1C  0E0E               	movlw	14
 11217  011A1E  6FC4               	movwf	196,b	;volatile
 11218                           
 11219                           ;os.c: 96: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11220  011A20  0E55               	movlw	85
 11221  011A22  6EA7               	movwf	4007,c	;volsfr
 11222  011A24  0EAA               	movlw	170
 11223  011A26  6EA7               	movwf	4007,c	;volsfr
 11224                           
 11225                           ; BSR set to: 14
 11226  011A28  81BF               	bsf	191,0,b	;volatile
 11227                           
 11228                           ; BSR set to: 14
 11229                           ;os.c: 98: TRISDbits.TRISD2 = 1;
 11230  011A2A  8495               	bsf	3989,2,c	;volatile
 11231                           
 11232                           ; BSR set to: 14
 11233                           ;os.c: 100: TRISEbits.TRISE2 = 1;
 11234  011A2C  8496               	bsf	3990,2,c	;volatile
 11235                           
 11236                           ; BSR set to: 14
 11237                           ;os.c: 101: ANCON0bits.PCFG7 = 1;
 11238  011A2E  010F               	movlb	15	; () banked
 11239  011A30  8F48               	bsf	72,7,b	;volatile
 11240                           
 11241                           ; BSR set to: 15
 11242                           ;os.c: 103: TRISEbits.TRISE0 = 1;
 11243  011A32  8096               	bsf	3990,0,c	;volatile
 11244                           
 11245                           ; BSR set to: 15
 11246                           ;os.c: 104: ANCON0bits.PCFG5 = 1;
 11247  011A34  8B48               	bsf	72,5,b	;volatile
 11248                           
 11249                           ; BSR set to: 15
 11250                           ;os.c: 106: TRISEbits.TRISE1 = 1;
 11251  011A36  8296               	bsf	3990,1,c	;volatile
 11252                           
 11253                           ; BSR set to: 15
 11254                           ;os.c: 107: ANCON0bits.PCFG6 = 1;
 11255  011A38  8D48               	bsf	72,6,b	;volatile
 11256                           
 11257                           ; BSR set to: 15
 11258                           ;os.c: 109: TRISAbits.TRISA0 = 1;
 11259  011A3A  8092               	bsf	3986,0,c	;volatile
 11260                           
 11261                           ; BSR set to: 15
 11262                           ;os.c: 110: ANCON0bits.PCFG0 = 1;
 11263  011A3C  8148               	bsf	72,0,b	;volatile
 11264                           
 11265                           ; BSR set to: 15
 11266                           ;os.c: 112: TRISAbits.TRISA2 = 1;
 11267  011A3E  8492               	bsf	3986,2,c	;volatile
 11268                           
 11269                           ; BSR set to: 15
 11270                           ;os.c: 113: ANCON0bits.PCFG2 = 1;
 11271  011A40  8548               	bsf	72,2,b	;volatile
 11272                           
 11273                           ; BSR set to: 15
 11274                           ;os.c: 115: TRISAbits.TRISA1 = 1;
 11275  011A42  8292               	bsf	3986,1,c	;volatile
 11276                           
 11277                           ; BSR set to: 15
 11278                           ;os.c: 116: ANCON0bits.PCFG1 = 1;
 11279  011A44  8348               	bsf	72,1,b	;volatile
 11280                           
 11281                           ; BSR set to: 15
 11282  011A46  0012               	return		;funcret
 11283  011A48                     __end_of__system_pin_setup:
 11284                           	opt stack 0
 11285                           tblptru	equ	0xFF8
 11286                           tblptrh	equ	0xFF7
 11287                           tblptrl	equ	0xFF6
 11288                           tablat	equ	0xFF5
 11289                           prodh	equ	0xFF4
 11290                           prodl	equ	0xFF3
 11291                           intcon	equ	0xFF2
 11292                           postinc0	equ	0xFEE
 11293                           wreg	equ	0xFE8
 11294                           postdec1	equ	0xFE5
 11295                           plusw1	equ	0xFE3
 11296                           fsr1h	equ	0xFE2
 11297                           fsr1l	equ	0xFE1
 11298                           indf2	equ	0xFDF
 11299                           postinc2	equ	0xFDE
 11300                           plusw2	equ	0xFDB
 11301                           fsr2h	equ	0xFDA
 11302                           fsr2l	equ	0xFD9
 11303                           status	equ	0xFD8
 11304                           
 11305 ;; *************** function __backlight_init *****************
 11306 ;; Defined at:
 11307 ;;		line 154 in file "os.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;		None
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;		None
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  1    wreg      void 
 11314 ;; Registers used:
 11315 ;;		None
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;Total ram usage:        0 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:   10
 11328 ;; This function calls:
 11329 ;;		Nothing
 11330 ;; This function is called by:
 11331 ;;		_system_init
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text37
 11336  012AD6                     __ptext37:
 11337                           	opt stack 0
 11338  012AD6                     __backlight_init:
 11339                           	opt stack 19
 11340                           
 11341                           ;os.c: 156: LATCbits.LC1 = 1;
 11342                           
 11343                           ; BSR set to: 15
 11344                           ;incstack = 0
 11345  012AD6  828B               	bsf	3979,1,c	;volatile
 11346  012AD8  0012               	return		;funcret
 11347  012ADA                     __end_of__backlight_init:
 11348                           	opt stack 0
 11349                           tblptru	equ	0xFF8
 11350                           tblptrh	equ	0xFF7
 11351                           tblptrl	equ	0xFF6
 11352                           tablat	equ	0xFF5
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           postinc0	equ	0xFEE
 11357                           wreg	equ	0xFE8
 11358                           postdec1	equ	0xFE5
 11359                           plusw1	equ	0xFE3
 11360                           fsr1h	equ	0xFE2
 11361                           fsr1l	equ	0xFE1
 11362                           indf2	equ	0xFDF
 11363                           postinc2	equ	0xFDE
 11364                           plusw2	equ	0xFDB
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function __adc_init *****************
 11370 ;; Defined at:
 11371 ;;		line 178 in file "os.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		None
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:   10
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_system_init
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text38
 11400  012AE6                     __ptext38:
 11401                           	opt stack 0
 11402  012AE6                     __adc_init:
 11403                           	opt stack 19
 11404                           
 11405                           ;incstack = 0
 11406  012AE6  0012               	return		;funcret
 11407  012AE8                     __end_of__adc_init:
 11408                           	opt stack 0
 11409                           tblptru	equ	0xFF8
 11410                           tblptrh	equ	0xFF7
 11411                           tblptrl	equ	0xFF6
 11412                           tablat	equ	0xFF5
 11413                           prodh	equ	0xFF4
 11414                           prodl	equ	0xFF3
 11415                           intcon	equ	0xFF2
 11416                           postinc0	equ	0xFEE
 11417                           wreg	equ	0xFE8
 11418                           postdec1	equ	0xFE5
 11419                           plusw1	equ	0xFE3
 11420                           fsr1h	equ	0xFE2
 11421                           fsr1l	equ	0xFE1
 11422                           indf2	equ	0xFDF
 11423                           postinc2	equ	0xFDE
 11424                           plusw2	equ	0xFDB
 11425                           fsr2h	equ	0xFDA
 11426                           fsr2l	equ	0xFD9
 11427                           status	equ	0xFD8
 11428                           
 11429 ;; *************** function _os_read_temperature *****************
 11430 ;; Defined at:
 11431 ;;		line 263 in file "os.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;		None
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;		None
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  1    wreg      void 
 11438 ;; Registers used:
 11439 ;;		None
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;Total ram usage:        0 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:   10
 11452 ;; This function calls:
 11453 ;;		Nothing
 11454 ;; This function is called by:
 11455 ;;		_main
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text39
 11460  012AE8                     __ptext39:
 11461                           	opt stack 0
 11462  012AE8                     _os_read_temperature:
 11463                           	opt stack 20
 11464                           
 11465                           ;incstack = 0
 11466  012AE8  0012               	return		;funcret
 11467  012AEA                     __end_of_os_read_temperature:
 11468                           	opt stack 0
 11469                           tblptru	equ	0xFF8
 11470                           tblptrh	equ	0xFF7
 11471                           tblptrl	equ	0xFF6
 11472                           tablat	equ	0xFF5
 11473                           prodh	equ	0xFF4
 11474                           prodl	equ	0xFF3
 11475                           intcon	equ	0xFF2
 11476                           postinc0	equ	0xFEE
 11477                           wreg	equ	0xFE8
 11478                           postdec1	equ	0xFE5
 11479                           plusw1	equ	0xFE3
 11480                           fsr1h	equ	0xFE2
 11481                           fsr1l	equ	0xFE1
 11482                           indf2	equ	0xFDF
 11483                           postinc2	equ	0xFDE
 11484                           plusw2	equ	0xFDB
 11485                           fsr2h	equ	0xFDA
 11486                           fsr2l	equ	0xFD9
 11487                           status	equ	0xFD8
 11488                           
 11489 ;; *************** function _motor_process_cue *****************
 11490 ;; Defined at:
 11491 ;;		line 128 in file "motor.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;		None
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;		None
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  1    wreg      void 
 11498 ;; Registers used:
 11499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11509 ;;Total ram usage:        0 bytes
 11510 ;; Hardware stack levels used:    1
 11511 ;; Hardware stack levels required when called:   11
 11512 ;; This function calls:
 11513 ;;		__motor_run
 11514 ;;		_motor_items_in_cue
 11515 ;; This function is called by:
 11516 ;;		_main
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text40
 11521  01181C                     __ptext40:
 11522                           	opt stack 0
 11523  01181C                     _motor_process_cue:
 11524                           	opt stack 19
 11525                           
 11526                           ;motor.c: 130: if(motor_items_in_cue()==0)
 11527                           
 11528                           ;incstack = 0
 11529  01181C  EC5E  F095         	call	_motor_items_in_cue	;wreg free
 11530  011820  0900               	iorlw	0
 11531  011822  B4D8               	btfsc	status,2,c
 11532  011824  0012               	return	
 11533                           
 11534                           ;motor.c: 135: else if(os.busy)
 11535                           
 11536                           ;motor.c: 134: }
 11537                           
 11538                           ;motor.c: 131: {;motor.c: 133: return;
 11539  011826  0100               	movlb	0	; () banked
 11540  011828  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 11541  01182A  A4D8               	btfss	status,2,c
 11542  01182C  0012               	return	
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: _motor_run(;motor.c: 144: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 145: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 146: motor_command_cue[motor_cue_read_index].speed;motor.c: 147:
      +                           );
 11546                           
 11547                           ; BSR set to: 0
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;motor.c: 139: }
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;motor.c: 136: {;motor.c: 138: return;
 11554  01182E  5023               	movf	_motor_cue_read_index,w,c
 11555  011830  0D07               	mullw	7
 11556  011832  0E01               	movlw	1
 11557  011834  26F3               	addwf	prodl,f,c
 11558  011836  0E00               	movlw	0
 11559  011838  22F4               	addwfc	prodh,f,c
 11560  01183A  0E00               	movlw	low _motor_command_cue
 11561  01183C  24F3               	addwf	prodl,w,c
 11562  01183E  6ED9               	movwf	fsr2l,c
 11563  011840  0E02               	movlw	high _motor_command_cue
 11564  011842  20F4               	addwfc	prodh,w,c
 11565  011844  6EDA               	movwf	fsr2h,c
 11566  011846  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 11567  01184A  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 11568  01184E  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 11569  011852  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 11570  011856  5023               	movf	_motor_cue_read_index,w,c
 11571  011858  0D07               	mullw	7
 11572  01185A  0E05               	movlw	5
 11573  01185C  26F3               	addwf	prodl,f,c
 11574  01185E  0E00               	movlw	0
 11575  011860  22F4               	addwfc	prodh,f,c
 11576  011862  0E00               	movlw	low _motor_command_cue
 11577  011864  24F3               	addwf	prodl,w,c
 11578  011866  6ED9               	movwf	fsr2l,c
 11579  011868  0E02               	movlw	high _motor_command_cue
 11580  01186A  20F4               	addwfc	prodh,w,c
 11581  01186C  6EDA               	movwf	fsr2h,c
 11582  01186E  CFDE F064          	movff	postinc2,__motor_run@speed
 11583  011872  CFDD F065          	movff	postdec2,__motor_run@speed+1
 11584  011876  5023               	movf	_motor_cue_read_index,w,c
 11585  011878  0D07               	mullw	7
 11586  01187A  0E00               	movlw	low _motor_command_cue
 11587  01187C  24F3               	addwf	prodl,w,c
 11588  01187E  6ED9               	movwf	fsr2l,c
 11589  011880  0E02               	movlw	high _motor_command_cue
 11590  011882  20F4               	addwfc	prodh,w,c
 11591  011884  6EDA               	movwf	fsr2h,c
 11592  011886  50DF               	movf	indf2,w,c
 11593  011888  ECBC  F06D         	call	__motor_run
 11594                           
 11595                           ;motor.c: 149: ++motor_cue_read_index;
 11596  01188C  2A23               	incf	_motor_cue_read_index,f,c
 11597  01188E  0012               	return	
 11598  011890                     __end_of_motor_process_cue:
 11599                           	opt stack 0
 11600                           tblptru	equ	0xFF8
 11601                           tblptrh	equ	0xFF7
 11602                           tblptrl	equ	0xFF6
 11603                           tablat	equ	0xFF5
 11604                           prodh	equ	0xFF4
 11605                           prodl	equ	0xFF3
 11606                           intcon	equ	0xFF2
 11607                           postinc0	equ	0xFEE
 11608                           wreg	equ	0xFE8
 11609                           postdec1	equ	0xFE5
 11610                           plusw1	equ	0xFE3
 11611                           fsr1h	equ	0xFE2
 11612                           fsr1l	equ	0xFE1
 11613                           indf2	equ	0xFDF
 11614                           postinc2	equ	0xFDE
 11615                           postdec2	equ	0xFDD
 11616                           plusw2	equ	0xFDB
 11617                           fsr2h	equ	0xFDA
 11618                           fsr2l	equ	0xFD9
 11619                           status	equ	0xFD8
 11620                           
 11621 ;; *************** function _encoder_statemachine *****************
 11622 ;; Defined at:
 11623 ;;		line 210 in file "encoder.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;		None
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;		None
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      void 
 11630 ;; Registers used:
 11631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11639 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11640 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11641 ;;Total ram usage:        4 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; Hardware stack levels required when called:   14
 11644 ;; This function calls:
 11645 ;;		__divide_jump_size_decrement
 11646 ;;		__divide_jump_size_increment
 11647 ;;		__encoder_next_arc_step_size
 11648 ;;		__encoder_next_divide_step_size
 11649 ;;		__encoder_next_setup_stepsize
 11650 ;;		_motor_arc_move
 11651 ;;		_motor_change_speed
 11652 ;;		_motor_divide_jump
 11653 ;;		_motor_divide_jump_to_nearest
 11654 ;;		_motor_go_to_steps_position
 11655 ;;		_motor_nonzero_steps_from_degrees
 11656 ;;		_motor_schedule_command
 11657 ;;		_motor_stop
 11658 ;; This function is called by:
 11659 ;;		_main
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           	psect	text41
 11664  00AE80                     __ptext41:
 11665                           	opt stack 0
 11666  00AE80                     _encoder_statemachine:
 11667                           	opt stack 16
 11668                           
 11669                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 11670                           
 11671                           ;incstack = 0
 11672  00AE80  0100               	movlb	0	; () banked
 11673  00AE82  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 11674  00AE84  A4D8               	btfss	status,2,c
 11675  00AE86  EF7D  F05B         	goto	l2549
 11676                           
 11677                           ; BSR set to: 0
 11678  00AE8A  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 11679  00AE8C  A4D8               	btfss	status,2,c
 11680  00AE8E  EF7D  F05B         	goto	l2549
 11681                           
 11682                           ; BSR set to: 0
 11683  00AE92  51D7               	movf	(_os+4)& (0+255),w,b	;volatile
 11684  00AE94  A4D8               	btfss	status,2,c
 11685  00AE96  EF7D  F05B         	goto	l2549
 11686                           
 11687                           ; BSR set to: 0
 11688  00AE9A  51D9               	movf	(_os+6)& (0+255),w,b	;volatile
 11689  00AE9C  B4D8               	btfsc	status,2,c
 11690  00AE9E  0012               	return	
 11691  00AEA0  EF7D  F05B         	goto	l2549
 11692  00AEA4                     
 11693                           ; BSR set to: 0
 11694                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 11695                           
 11696                           ; BSR set to: 0
 11697  00AEA4  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11698  00AEA6  B4D8               	btfsc	status,2,c
 11699  00AEA8  D003               	goto	u21640
 11700                           
 11701                           ; BSR set to: 0
 11702  00AEAA  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11703  00AEAC  A4D8               	btfss	status,2,c
 11704  00AEAE  D002               	goto	l2553
 11705  00AEB0                     u21640:
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 11709                           
 11710                           ; BSR set to: 0
 11711  00AEB0  0E11               	movlw	17
 11712  00AEB2  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11713  00AEB4                     l2553:
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 11717                           
 11718                           ; BSR set to: 0
 11719  00AEB4  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11720  00AEB8  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11721  00AEBA  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11722  00AEBC  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11723  00AEBE  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11724  00AEC2  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11725  00AEC4  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11726  00AEC6  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11727  00AEC8  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11728  00AECA  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11729  00AECC  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11730  00AECE  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11731  00AED0  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11732  00AED2  D007               	goto	l2556
 11733  00AED4  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11734  00AED6  E103               	bnz	u21650
 11735  00AED8  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11736  00AEDA  A0D8               	btfss	status,0,c
 11737  00AEDC  D002               	goto	l2556
 11738  00AEDE                     u21650:
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 11742  00AEDE  0E02               	movlw	2
 11743  00AEE0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11744  00AEE2                     l2556:
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 11748                           
 11749                           ; BSR set to: 0
 11750  00AEE2  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11751  00AEE6  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11752  00AEE8  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11753  00AEEA  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11754  00AEEC  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11755  00AEF0  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11756  00AEF2  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11757  00AEF4  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11758  00AEF6  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11759  00AEF8  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11760  00AEFA  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11761  00AEFC  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11762  00AEFE  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11763  00AF00  EFA1  F05B         	goto	l2584
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 11767  00AF04  0E05               	movlw	5
 11768  00AF06  D3E8               	goto	L17
 11769  00AF08                     
 11770                           ; BSR set to: 0
 11771                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 11772                           
 11773                           ; BSR set to: 0
 11774  00AF08  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11775  00AF0A  B4D8               	btfsc	status,2,c
 11776  00AF0C  D003               	goto	u21680
 11777                           
 11778                           ; BSR set to: 0
 11779  00AF0E  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11780  00AF10  A4D8               	btfss	status,2,c
 11781  00AF12  D002               	goto	l2560
 11782  00AF14                     u21680:
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 11786                           
 11787                           ; BSR set to: 0
 11788  00AF14  0E31               	movlw	49
 11789  00AF16  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11790  00AF18                     l2560:
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 11794                           
 11795                           ; BSR set to: 0
 11796  00AF18  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11797  00AF1C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11798  00AF1E  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11799  00AF20  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11800  00AF22  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11801  00AF26  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11802  00AF28  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11803  00AF2A  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11804  00AF2C  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11805  00AF2E  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11806  00AF30  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11807  00AF32  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11808  00AF34  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11809  00AF36  D007               	goto	l2563
 11810  00AF38  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11811  00AF3A  E103               	bnz	u21690
 11812  00AF3C  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11813  00AF3E  A0D8               	btfss	status,0,c
 11814  00AF40  D002               	goto	l2563
 11815  00AF42                     u21690:
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 11819  00AF42  0E03               	movlw	3
 11820  00AF44  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11821  00AF46                     l2563:
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 11825                           
 11826                           ; BSR set to: 0
 11827  00AF46  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11828  00AF4A  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11829  00AF4C  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11830  00AF4E  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11831  00AF50  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11832  00AF54  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11833  00AF56  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11834  00AF58  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11835  00AF5A  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11836  00AF5C  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11837  00AF5E  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11838  00AF60  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11839  00AF62  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11840  00AF64  D3EE               	goto	l2584
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 11844  00AF66  0E01               	movlw	1
 11845  00AF68  D3B7               	goto	L17
 11846  00AF6A                     
 11847                           ; BSR set to: 0
 11848                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 11849                           
 11850                           ; BSR set to: 0
 11851  00AF6A  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11852  00AF6C  B4D8               	btfsc	status,2,c
 11853  00AF6E  D003               	goto	u21720
 11854                           
 11855                           ; BSR set to: 0
 11856  00AF70  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11857  00AF72  A4D8               	btfss	status,2,c
 11858  00AF74  D002               	goto	l2566
 11859  00AF76                     u21720:
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 11863                           
 11864                           ; BSR set to: 0
 11865  00AF76  0E51               	movlw	81
 11866  00AF78  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11867  00AF7A                     l2566:
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 11871                           
 11872                           ; BSR set to: 0
 11873  00AF7A  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11874  00AF7E  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11875  00AF80  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11876  00AF82  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11877  00AF84  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11878  00AF88  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11879  00AF8A  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11880  00AF8C  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11881  00AF8E  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11882  00AF90  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11883  00AF92  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11884  00AF94  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11885  00AF96  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11886  00AF98  D007               	goto	l2569
 11887  00AF9A  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11888  00AF9C  E103               	bnz	u21730
 11889  00AF9E  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11890  00AFA0  A0D8               	btfss	status,0,c
 11891  00AFA2  D002               	goto	l2569
 11892  00AFA4                     u21730:
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 11896  00AFA4  0E04               	movlw	4
 11897  00AFA6  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11898  00AFA8                     l2569:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 11902                           
 11903                           ; BSR set to: 0
 11904  00AFA8  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11905  00AFAC  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11906  00AFAE  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11907  00AFB0  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11908  00AFB2  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11909  00AFB6  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11910  00AFB8  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11911  00AFBA  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11912  00AFBC  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11913  00AFBE  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11914  00AFC0  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11915  00AFC2  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11916  00AFC4  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11917  00AFC6  D3BD               	goto	l2584
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 11921  00AFC8  0E02               	movlw	2
 11922  00AFCA  D386               	goto	L17
 11923  00AFCC                     
 11924                           ; BSR set to: 0
 11925                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 11926                           
 11927                           ; BSR set to: 0
 11928  00AFCC  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 11929  00AFCE  B4D8               	btfsc	status,2,c
 11930  00AFD0  D003               	goto	u21760
 11931                           
 11932                           ; BSR set to: 0
 11933  00AFD2  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 11934  00AFD4  A4D8               	btfss	status,2,c
 11935  00AFD6  D002               	goto	l2572
 11936  00AFD8                     u21760:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 11940                           
 11941                           ; BSR set to: 0
 11942  00AFD8  0E82               	movlw	130
 11943  00AFDA  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11944  00AFDC                     l2572:
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 11948                           
 11949                           ; BSR set to: 0
 11950  00AFDC  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11951  00AFE0  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11952  00AFE2  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11953  00AFE4  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11954  00AFE6  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11955  00AFEA  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11956  00AFEC  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11957  00AFEE  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11958  00AFF0  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11959  00AFF2  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11960  00AFF4  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11961  00AFF6  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11962  00AFF8  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11963  00AFFA  D007               	goto	l2575
 11964  00AFFC  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11965  00AFFE  E103               	bnz	u21770
 11966  00B000  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11967  00B002  A0D8               	btfss	status,0,c
 11968  00B004  D002               	goto	l2575
 11969  00B006                     u21770:
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 11973  00B006  0E05               	movlw	5
 11974  00B008  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 11975  00B00A                     l2575:
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 11979                           
 11980                           ; BSR set to: 0
 11981  00B00A  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11982  00B00E  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11983  00B010  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11984  00B012  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11985  00B014  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11986  00B018  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11987  00B01A  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11988  00B01C  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11989  00B01E  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11990  00B020  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11991  00B022  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11992  00B024  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11993  00B026  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11994  00B028  D38C               	goto	l2584
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 11998  00B02A  0E03               	movlw	3
 11999  00B02C  D355               	goto	L17
 12000  00B02E                     
 12001                           ; BSR set to: 0
 12002                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 12003                           
 12004                           ; BSR set to: 0
 12005  00B02E  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12006  00B030  B4D8               	btfsc	status,2,c
 12007  00B032  D003               	goto	u21800
 12008                           
 12009                           ; BSR set to: 0
 12010  00B034  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12011  00B036  A4D8               	btfss	status,2,c
 12012  00B038  D002               	goto	l2578
 12013  00B03A                     u21800:
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 12017                           
 12018                           ; BSR set to: 0
 12019  00B03A  0E71               	movlw	113
 12020  00B03C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12021  00B03E                     l2578:
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 12025                           
 12026                           ; BSR set to: 0
 12027  00B03E  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12028  00B042  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12029  00B044  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12030  00B046  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12031  00B048  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12032  00B04C  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12033  00B04E  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12034  00B050  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12035  00B052  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12036  00B054  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12037  00B056  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12038  00B058  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12039  00B05A  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12040  00B05C  D007               	goto	l2581
 12041  00B05E  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12042  00B060  E103               	bnz	u21810
 12043  00B062  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12044  00B064  A0D8               	btfss	status,0,c
 12045  00B066  D002               	goto	l2581
 12046  00B068                     u21810:
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12050  00B068  0E01               	movlw	1
 12051  00B06A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12052  00B06C                     l2581:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 12056                           
 12057                           ; BSR set to: 0
 12058  00B06C  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12059  00B070  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12060  00B072  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12061  00B074  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12062  00B076  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12063  00B07A  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12064  00B07C  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12065  00B07E  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12066  00B080  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12067  00B082  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12068  00B084  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12069  00B086  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12070  00B088  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12071  00B08A  D35B               	goto	l2584
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 12075  00B08C  0E04               	movlw	4
 12076  00B08E  D324               	goto	L17
 12077  00B090                     
 12078                           ; BSR set to: 0
 12079                           
 12080                           ; BSR set to: 0
 12081  00B090  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12082                           
 12083                           ; Switch size 1, requested type "space"
 12084                           ; Number of cases is 6, Range of values is 1 to 240
 12085                           ; switch strategies available:
 12086                           ; Name         Instructions Cycles
 12087                           ; simple_byte           19    10 (average)
 12088                           ;	Chosen strategy is simple_byte
 12089  00B092  0A01               	xorlw	1	; case 1
 12090  00B094  B4D8               	btfsc	status,2,c
 12091  00B096  D706               	goto	l2552
 12092  00B098  0A03               	xorlw	3	; case 2
 12093  00B09A  B4D8               	btfsc	status,2,c
 12094  00B09C  D735               	goto	l2559
 12095  00B09E  0A01               	xorlw	1	; case 3
 12096  00B0A0  B4D8               	btfsc	status,2,c
 12097  00B0A2  D763               	goto	l2565
 12098  00B0A4  0A07               	xorlw	7	; case 4
 12099  00B0A6  B4D8               	btfsc	status,2,c
 12100  00B0A8  D791               	goto	l2571
 12101  00B0AA  0A01               	xorlw	1	; case 5
 12102  00B0AC  B4D8               	btfsc	status,2,c
 12103  00B0AE  D7BF               	goto	l2577
 12104  00B0B0  0AF5               	xorlw	245	; case 240
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;encoder.c: 268: break;
 12108  00B0B2  D347               	goto	l2584
 12109  00B0B4                     
 12110                           ; BSR set to: 0
 12111                           ;encoder.c: 274: if(os.button1==1)
 12112                           
 12113                           ; BSR set to: 0
 12114  00B0B4  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12115  00B0B6  A4D8               	btfss	status,2,c
 12116  00B0B8  D00E               	goto	l2588
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 12120  00B0BA  0E00               	movlw	0
 12121  00B0BC  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 12122  00B0BE  0E00               	movlw	0
 12123  00B0C0  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 12124  00B0C2  0E00               	movlw	0
 12125  00B0C4  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 12126  00B0C6  0E00               	movlw	0
 12127  00B0C8  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 12128                           
 12129                           ;encoder.c: 277: os.divide_position = 0;
 12130  00B0CA  0E00               	movlw	0
 12131  00B0CC  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 12132  00B0CE  0E00               	movlw	0
 12133  00B0D0  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 12134                           
 12135                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12136  00B0D2  0E21               	movlw	33
 12137  00B0D4  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12138  00B0D6                     l2588:
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 12142                           
 12143                           ; BSR set to: 0
 12144  00B0D6  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12145  00B0D8  0A80               	xorlw	128
 12146  00B0DA  0F7F               	addlw	-129
 12147  00B0DC  A0D8               	btfss	status,0,c
 12148  00B0DE  D002               	goto	l2589
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 12152  00B0E0  0E12               	movlw	18
 12153  00B0E2  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12154  00B0E4                     l2589:
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;encoder.c: 282: if(os.encoder1Count<0)
 12158                           
 12159                           ; BSR set to: 0
 12160  00B0E4  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12161  00B0E6  D01A               	goto	l2591
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 12165  00B0E8  0E12               	movlw	18
 12166  00B0EA  D00F               	goto	L6
 12167  00B0EC                     
 12168                           ; BSR set to: 0
 12169                           ;encoder.c: 286: if(os.button1==1)
 12170                           
 12171                           ; BSR set to: 0
 12172  00B0EC  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12173  00B0EE  A4D8               	btfss	status,2,c
 12174  00B0F0  D002               	goto	l2593
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12178  00B0F2  0E01               	movlw	1
 12179  00B0F4  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12180  00B0F6                     l2593:
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;encoder.c: 288: if(os.encoder1Count>0)
 12184                           
 12185                           ; BSR set to: 0
 12186  00B0F6  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12187  00B0F8  0A80               	xorlw	128
 12188  00B0FA  0F7F               	addlw	-129
 12189  00B0FC  A0D8               	btfss	status,0,c
 12190  00B0FE  D002               	goto	l2594
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 12194  00B100  0E11               	movlw	17
 12195  00B102  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12196  00B104                     l2594:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;encoder.c: 290: if(os.encoder1Count<0)
 12200                           
 12201                           ; BSR set to: 0
 12202  00B104  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12203  00B106  D00A               	goto	l2591
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 12207  00B108  0E11               	movlw	17
 12208  00B10A                     L6:
 12209  00B10A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;encoder.c: 293: }
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;encoder.c: 292: break;
 12216  00B10C  D007               	goto	l2591
 12217  00B10E                     
 12218                           ; BSR set to: 0
 12219                           
 12220                           ; BSR set to: 0
 12221  00B10E  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12222                           
 12223                           ; Switch size 1, requested type "space"
 12224                           ; Number of cases is 2, Range of values is 17 to 18
 12225                           ; switch strategies available:
 12226                           ; Name         Instructions Cycles
 12227                           ; simple_byte            7     4 (average)
 12228                           ;	Chosen strategy is simple_byte
 12229  00B110  0A11               	xorlw	17	; case 17
 12230  00B112  B4D8               	btfsc	status,2,c
 12231  00B114  D7CF               	goto	l2587
 12232  00B116  0A03               	xorlw	3	; case 18
 12233  00B118  B4D8               	btfsc	status,2,c
 12234  00B11A  D7E8               	goto	l2592
 12235  00B11C                     l2591:
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;encoder.c: 294: if(os.button2==1)
 12239                           
 12240                           ; BSR set to: 0
 12241  00B11C  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12242  00B11E  A4D8               	btfss	status,2,c
 12243  00B120  D00A               	goto	l2596
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 12247  00B122  C0E3  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 12248  00B126  C0E4  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 12249  00B12A  EC48  F08C         	call	__encoder_next_setup_stepsize	;wreg free
 12250  00B12E  C060  F0E3         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 12251  00B132  C061  F0E4         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 12252  00B136                     l2596:
 12253                           
 12254                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 12255  00B136  0100               	movlb	0	; () banked
 12256  00B138  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12257  00B13A  0A80               	xorlw	128
 12258  00B13C  0F7F               	addlw	-129
 12259  00B13E  A0D8               	btfss	status,0,c
 12260  00B140  D019               	goto	l2598
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 12264  00B142  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 12265  00B144  A4D8               	btfss	status,2,c
 12266  00B146  D016               	goto	l2598
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 12270  00B148  C0E3  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 12271  00B14C  C0E4  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 12272  00B150  EC1F  F091         	call	_motor_nonzero_steps_from_degrees	;wreg free
 12273  00B154  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 12274  00B158  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 12275  00B15C  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 12276  00B160  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 12277  00B164  0E00               	movlw	0
 12278  00B166  0100               	movlb	0	; () banked
 12279  00B168  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12280  00B16A  0E00               	movlw	0
 12281  00B16C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12282  00B16E  0E01               	movlw	1
 12283  00B170  EC1A  F088         	call	_motor_schedule_command
 12284  00B174                     l2598:
 12285                           
 12286                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 12287  00B174  0100               	movlb	0	; () banked
 12288  00B176  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12289  00B178  D2E4               	goto	l2584
 12290                           
 12291                           ; BSR set to: 0
 12292                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 12293  00B17A  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 12294  00B17C  A4D8               	btfss	status,2,c
 12295  00B17E  D2E1               	goto	l2584
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 12299  00B180  C0E3  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 12300  00B184  C0E4  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 12301  00B188  EC1F  F091         	call	_motor_nonzero_steps_from_degrees	;wreg free
 12302  00B18C  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 12303  00B190  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 12304  00B194  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 12305  00B198  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 12306  00B19C  0E00               	movlw	0
 12307  00B19E  0100               	movlb	0	; () banked
 12308  00B1A0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12309  00B1A2  0E00               	movlw	0
 12310  00B1A4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12311  00B1A6  0EFF               	movlw	255
 12312  00B1A8  EC1A  F088         	call	_motor_schedule_command
 12313                           
 12314                           ;encoder.c: 309: };encoder.c: 310: break;
 12315  00B1AC  D2CA               	goto	l2584
 12316  00B1AE                     
 12317                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 12318  00B1AE  0100               	movlb	0	; () banked
 12319  00B1B0  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12320  00B1B2  B4D8               	btfsc	status,2,c
 12321  00B1B4  D003               	goto	u21950
 12322                           
 12323                           ; BSR set to: 0
 12324  00B1B6  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12325  00B1B8  A4D8               	btfss	status,2,c
 12326  00B1BA  D01F               	goto	l2604
 12327  00B1BC                     u21950:
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;encoder.c: 317: {;encoder.c: 318: motor_schedule_command(MOTOR_DIRECTION_CW, config.ove
      +                          rshoot_in_steps, 0);
 12331                           
 12332                           ; BSR set to: 0
 12333  00B1BC  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12334  00B1C0  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12335  00B1C4  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12336  00B1C6  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12337  00B1C8  0E00               	movlw	0
 12338  00B1CA  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12339  00B1CC  0E00               	movlw	0
 12340  00B1CE  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12341  00B1D0  0E01               	movlw	1
 12342  00B1D2  EC1A  F088         	call	_motor_schedule_command
 12343                           
 12344                           ;encoder.c: 319: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 12345  00B1D6  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12346  00B1DA  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12347  00B1DE  0100               	movlb	0	; () banked
 12348  00B1E0  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12349  00B1E2  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12350  00B1E4  0E00               	movlw	0
 12351  00B1E6  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12352  00B1E8  0E00               	movlw	0
 12353  00B1EA  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12354  00B1EC  0EFF               	movlw	255
 12355  00B1EE  EC1A  F088         	call	_motor_schedule_command
 12356                           
 12357                           ;encoder.c: 320: os.approach_direction = MOTOR_DIRECTION_CCW;
 12358  00B1F2  0100               	movlb	0	; () banked
 12359  00B1F4  69E5               	setf	(_os+18)& (0+255),b	;volatile
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12363  00B1F6  0E01               	movlw	1
 12364  00B1F8  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12365  00B1FA                     l2604:
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;encoder.c: 322: };encoder.c: 323: if(os.encoder1Count+os.encoder2Count>0)
 12369                           
 12370                           ; BSR set to: 0
 12371  00B1FA  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12372  00B1FE  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12373  00B200  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12374  00B202  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12375  00B204  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12376  00B208  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12377  00B20A  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12378  00B20C  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12379  00B20E  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12380  00B210  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12381  00B212  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12382  00B214  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12383  00B216  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12384  00B218  D007               	goto	l2607
 12385  00B21A  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12386  00B21C  E103               	bnz	u21960
 12387  00B21E  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12388  00B220  A0D8               	btfss	status,0,c
 12389  00B222  D002               	goto	l2607
 12390  00B224                     u21960:
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;encoder.c: 324: os.displayState = DISPLAY_STATE_SETUP2_CW;
 12394  00B224  0E22               	movlw	34
 12395  00B226  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12396  00B228                     l2607:
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;encoder.c: 325: if(os.encoder1Count+os.encoder2Count<0)
 12400                           
 12401                           ; BSR set to: 0
 12402  00B228  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12403  00B22C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12404  00B22E  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12405  00B230  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12406  00B232  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12407  00B236  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12408  00B238  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12409  00B23A  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12410  00B23C  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12411  00B23E  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12412  00B240  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12413  00B242  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12414  00B244  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12415  00B246  D27D               	goto	l2584
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;encoder.c: 326: os.displayState = DISPLAY_STATE_SETUP2_CW;
 12419  00B248  0E22               	movlw	34
 12420  00B24A  D246               	goto	L17
 12421  00B24C                     
 12422                           ; BSR set to: 0
 12423                           ;encoder.c: 329: if(os.button1==1 || os.button2==1)
 12424                           
 12425                           ; BSR set to: 0
 12426  00B24C  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12427  00B24E  B4D8               	btfsc	status,2,c
 12428  00B250  D003               	goto	u21990
 12429                           
 12430                           ; BSR set to: 0
 12431  00B252  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12432  00B254  A4D8               	btfss	status,2,c
 12433  00B256  D020               	goto	l2611
 12434  00B258                     u21990:
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;encoder.c: 330: {;encoder.c: 331: motor_schedule_command(MOTOR_DIRECTION_CCW, config.ov
      +                          ershoot_in_steps, 0);
 12438                           
 12439                           ; BSR set to: 0
 12440  00B258  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12441  00B25C  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12442  00B260  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12443  00B262  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12444  00B264  0E00               	movlw	0
 12445  00B266  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12446  00B268  0E00               	movlw	0
 12447  00B26A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12448  00B26C  0EFF               	movlw	255
 12449  00B26E  EC1A  F088         	call	_motor_schedule_command
 12450                           
 12451                           ;encoder.c: 332: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 12452  00B272  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12453  00B276  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12454  00B27A  0100               	movlb	0	; () banked
 12455  00B27C  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12456  00B27E  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12457  00B280  0E00               	movlw	0
 12458  00B282  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12459  00B284  0E00               	movlw	0
 12460  00B286  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12461  00B288  0E01               	movlw	1
 12462  00B28A  EC1A  F088         	call	_motor_schedule_command
 12463                           
 12464                           ;encoder.c: 333: os.approach_direction = MOTOR_DIRECTION_CW;
 12465  00B28E  0E01               	movlw	1
 12466  00B290  0100               	movlb	0	; () banked
 12467  00B292  6FE5               	movwf	(_os+18)& (0+255),b	;volatile
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;encoder.c: 334: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12471  00B294  0E01               	movlw	1
 12472  00B296  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12473  00B298                     l2611:
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;encoder.c: 335: };encoder.c: 336: if(os.encoder1Count+os.encoder2Count>0)
 12477                           
 12478                           ; BSR set to: 0
 12479  00B298  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12480  00B29C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12481  00B29E  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12482  00B2A0  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12483  00B2A2  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12484  00B2A6  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12485  00B2A8  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12486  00B2AA  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12487  00B2AC  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12488  00B2AE  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12489  00B2B0  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12490  00B2B2  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12491  00B2B4  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12492  00B2B6  D007               	goto	l2614
 12493  00B2B8  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12494  00B2BA  E103               	bnz	u22000
 12495  00B2BC  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12496  00B2BE  A0D8               	btfss	status,0,c
 12497  00B2C0  D002               	goto	l2614
 12498  00B2C2                     u22000:
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;encoder.c: 337: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12502  00B2C2  0E21               	movlw	33
 12503  00B2C4  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12504  00B2C6                     l2614:
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;encoder.c: 338: if(os.encoder1Count+os.encoder2Count<0)
 12508                           
 12509                           ; BSR set to: 0
 12510  00B2C6  C0D8  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12511  00B2CA  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12512  00B2CC  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12513  00B2CE  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12514  00B2D0  C0D6  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12515  00B2D4  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12516  00B2D6  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12517  00B2D8  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12518  00B2DA  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12519  00B2DC  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12520  00B2DE  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12521  00B2E0  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12522  00B2E2  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12523  00B2E4  D22E               	goto	l2584
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;encoder.c: 339: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12527  00B2E6  0E21               	movlw	33
 12528  00B2E8  D1F7               	goto	L17
 12529  00B2EA                     
 12530                           ; BSR set to: 0
 12531  00B2EA  0100               	movlb	0	; () banked
 12532  00B2EC  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12533                           
 12534                           ; Switch size 1, requested type "space"
 12535                           ; Number of cases is 2, Range of values is 33 to 34
 12536                           ; switch strategies available:
 12537                           ; Name         Instructions Cycles
 12538                           ; simple_byte            7     4 (average)
 12539                           ;	Chosen strategy is simple_byte
 12540  00B2EE  0A21               	xorlw	33	; case 33
 12541  00B2F0  B4D8               	btfsc	status,2,c
 12542  00B2F2  D75D               	goto	l2603
 12543  00B2F4  0A03               	xorlw	3	; case 34
 12544  00B2F6  B4D8               	btfsc	status,2,c
 12545  00B2F8  D7A9               	goto	l2610
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;encoder.c: 342: break;
 12549  00B2FA  D223               	goto	l2584
 12550  00B2FC                     
 12551                           ; BSR set to: 0
 12552                           ;encoder.c: 348: if(os.button1==1)
 12553                           
 12554                           ; BSR set to: 0
 12555  00B2FC  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12556  00B2FE  A4D8               	btfss	status,2,c
 12557  00B300  D005               	goto	l2619
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;encoder.c: 349: {;encoder.c: 351: motor_divide_jump_to_nearest();
 12561  00B302  ECD5  F072         	call	_motor_divide_jump_to_nearest	;wreg free
 12562                           
 12563                           ;encoder.c: 352: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 12564  00B306  0E41               	movlw	65
 12565  00B308  0100               	movlb	0	; () banked
 12566  00B30A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12567  00B30C                     l2619:
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;encoder.c: 353: };encoder.c: 354: if(os.encoder1Count>0)
 12571                           
 12572                           ; BSR set to: 0
 12573  00B30C  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12574  00B30E  0A80               	xorlw	128
 12575  00B310  0F7F               	addlw	-129
 12576  00B312  A0D8               	btfss	status,0,c
 12577  00B314  D002               	goto	l2620
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 12581  00B316  0E32               	movlw	50
 12582  00B318  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12583  00B31A                     l2620:
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;encoder.c: 356: if(os.encoder1Count<0)
 12587                           
 12588                           ; BSR set to: 0
 12589  00B31A  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12590  00B31C  D01A               	goto	l2622
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 12594  00B31E  0E32               	movlw	50
 12595  00B320  D00F               	goto	L9
 12596  00B322                     
 12597                           ; BSR set to: 0
 12598                           ;encoder.c: 360: if(os.button1==1)
 12599                           
 12600                           ; BSR set to: 0
 12601  00B322  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12602  00B324  A4D8               	btfss	status,2,c
 12603  00B326  D002               	goto	l2624
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;encoder.c: 361: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 12607  00B328  0E02               	movlw	2
 12608  00B32A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12609  00B32C                     l2624:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;encoder.c: 362: if(os.encoder1Count>0)
 12613                           
 12614                           ; BSR set to: 0
 12615  00B32C  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12616  00B32E  0A80               	xorlw	128
 12617  00B330  0F7F               	addlw	-129
 12618  00B332  A0D8               	btfss	status,0,c
 12619  00B334  D002               	goto	l2625
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;encoder.c: 363: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 12623  00B336  0E31               	movlw	49
 12624  00B338  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12625  00B33A                     l2625:
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;encoder.c: 364: if(os.encoder1Count<0)
 12629                           
 12630                           ; BSR set to: 0
 12631  00B33A  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12632  00B33C  D00A               	goto	l2622
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;encoder.c: 365: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 12636  00B33E  0E31               	movlw	49
 12637  00B340                     L9:
 12638  00B340  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;encoder.c: 367: }
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;encoder.c: 366: break;
 12645  00B342  D007               	goto	l2622
 12646  00B344                     
 12647                           ; BSR set to: 0
 12648                           
 12649                           ; BSR set to: 0
 12650  00B344  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12651                           
 12652                           ; Switch size 1, requested type "space"
 12653                           ; Number of cases is 2, Range of values is 49 to 50
 12654                           ; switch strategies available:
 12655                           ; Name         Instructions Cycles
 12656                           ; simple_byte            7     4 (average)
 12657                           ;	Chosen strategy is simple_byte
 12658  00B346  0A31               	xorlw	49	; case 49
 12659  00B348  B4D8               	btfsc	status,2,c
 12660  00B34A  D7D8               	goto	l2618
 12661  00B34C  0A03               	xorlw	3	; case 50
 12662  00B34E  B4D8               	btfsc	status,2,c
 12663  00B350  D7E8               	goto	l2623
 12664  00B352                     l2622:
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;encoder.c: 368: if(os.button2==1)
 12668                           
 12669                           ; BSR set to: 0
 12670  00B352  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12671  00B354  A4D8               	btfss	status,2,c
 12672  00B356  D005               	goto	l2627
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;encoder.c: 369: {;encoder.c: 370: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 12676  00B358  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12677  00B35A  ECEC  F093         	call	__encoder_next_divide_step_size
 12678  00B35E  0100               	movlb	0	; () banked
 12679  00B360  6FE8               	movwf	(_os+21)& (0+255),b	;volatile
 12680  00B362                     l2627:
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;encoder.c: 371: };encoder.c: 372: if(os.encoder2Count>0)
 12684                           
 12685                           ; BSR set to: 0
 12686  00B362  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12687  00B364  0A80               	xorlw	128
 12688  00B366  0F7F               	addlw	-129
 12689  00B368  A0D8               	btfss	status,0,c
 12690  00B36A  D004               	goto	l2628
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;encoder.c: 373: {;encoder.c: 374: os.division += os.divide_step_size;
 12694  00B36C  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12695  00B36E  27E6               	addwf	(_os+19)& (0+255),f,b	;volatile
 12696  00B370  0E00               	movlw	0
 12697  00B372  23E7               	addwfc	(_os+20)& (0+255),f,b	;volatile
 12698  00B374                     l2628:
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;encoder.c: 375: };encoder.c: 376: if(os.encoder2Count<0)
 12702  00B374  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12703  00B376  D1E5               	goto	l2584
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;encoder.c: 377: {;encoder.c: 378: if(os.division>os.divide_step_size)
 12707  00B378  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12708  00B37A  6FC4               	movwf	??_encoder_statemachine& (0+255),b
 12709  00B37C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12710  00B37E  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 12711  00B380  5DC4               	subwf	??_encoder_statemachine& (0+255),w,b
 12712  00B382  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12713  00B384  0A80               	xorlw	128
 12714  00B386  6FC6               	movwf	(??_encoder_statemachine+2)& (0+255),b
 12715  00B388  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 12716  00B38A  0A80               	xorlw	128
 12717  00B38C  59C6               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 12718  00B38E  B0D8               	btfsc	status,0,c
 12719  00B390  D005               	goto	l2630
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;encoder.c: 379: {;encoder.c: 380: os.division -= os.divide_step_size;
 12723  00B392  51E8               	movf	(_os+21)& (0+255),w,b	;volatile
 12724  00B394  5FE6               	subwf	(_os+19)& (0+255),f,b	;volatile
 12725  00B396  0E00               	movlw	0
 12726  00B398  5BE7               	subwfb	(_os+20)& (0+255),f,b	;volatile
 12727                           
 12728                           ;encoder.c: 381: }
 12729  00B39A  D1D3               	goto	l2584
 12730  00B39C                     l2630:
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;encoder.c: 382: else;encoder.c: 383: {;encoder.c: 384: os.division = 1;
 12734                           
 12735                           ; BSR set to: 0
 12736  00B39C  0E00               	movlw	0
 12737  00B39E  6FE7               	movwf	(_os+20)& (0+255),b	;volatile
 12738  00B3A0  0E01               	movlw	1
 12739  00B3A2  6FE6               	movwf	(_os+19)& (0+255),b	;volatile
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;encoder.c: 385: };encoder.c: 386: };encoder.c: 387: break;
 12743                           
 12744                           ; BSR set to: 0
 12745  00B3A4  D1CE               	goto	l2584
 12746  00B3A6                     
 12747                           ; BSR set to: 0
 12748                           ;encoder.c: 390: if(os.button1==1)
 12749                           
 12750                           ; BSR set to: 0
 12751  00B3A6  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12752  00B3A8  A4D8               	btfss	status,2,c
 12753  00B3AA  D002               	goto	l2633
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;encoder.c: 391: {;encoder.c: 392: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 12757  00B3AC  0E02               	movlw	2
 12758  00B3AE  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12759  00B3B0                     l2633:
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;encoder.c: 393: };encoder.c: 394: if(os.button2==1)
 12763                           
 12764                           ; BSR set to: 0
 12765  00B3B0  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12766  00B3B2  B4D8               	btfsc	status,2,c
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;encoder.c: 395: {;encoder.c: 396: motor_divide_jump();
 12770  00B3B4  ECEE  F089         	call	_motor_divide_jump	;wreg free
 12771                           
 12772                           ;encoder.c: 397: };encoder.c: 398: if(os.encoder2Count>0)
 12773  00B3B8  0100               	movlb	0	; () banked
 12774  00B3BA  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12775  00B3BC  0A80               	xorlw	128
 12776  00B3BE  0F7F               	addlw	-129
 12777  00B3C0  B0D8               	btfsc	status,0,c
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;encoder.c: 399: {;encoder.c: 400: _divide_jump_size_increment();
 12781  00B3C2  ECE6  F092         	call	__divide_jump_size_increment	;wreg free
 12782                           
 12783                           ;encoder.c: 401: };encoder.c: 402: if(os.encoder2Count<0)
 12784  00B3C6  0100               	movlb	0	; () banked
 12785  00B3C8  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12786  00B3CA  D1BB               	goto	l2584
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;encoder.c: 403: {;encoder.c: 404: _divide_jump_size_decrement();
 12790  00B3CC  EC19  F08E         	call	__divide_jump_size_decrement	;wreg free
 12791                           
 12792                           ;encoder.c: 405: };encoder.c: 406: break;
 12793  00B3D0  D1B8               	goto	l2584
 12794  00B3D2                     
 12795                           ;encoder.c: 412: if(os.button1==1)
 12796  00B3D2  0100               	movlb	0	; () banked
 12797  00B3D4  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12798  00B3D6  A4D8               	btfss	status,2,c
 12799  00B3D8  D002               	goto	l2640
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;encoder.c: 413: {;encoder.c: 414: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 12803  00B3DA  0E62               	movlw	98
 12804  00B3DC  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12805  00B3DE                     l2640:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;encoder.c: 415: };encoder.c: 416: if(os.encoder1Count>0)
 12809                           
 12810                           ; BSR set to: 0
 12811  00B3DE  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12812  00B3E0  0A80               	xorlw	128
 12813  00B3E2  0F7F               	addlw	-129
 12814  00B3E4  A0D8               	btfss	status,0,c
 12815  00B3E6  D002               	goto	l2641
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 12819  00B3E8  0E52               	movlw	82
 12820  00B3EA  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12821  00B3EC                     l2641:
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;encoder.c: 418: if(os.encoder1Count<0)
 12825                           
 12826                           ; BSR set to: 0
 12827  00B3EC  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12828  00B3EE  D01B               	goto	l2643
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 12832  00B3F0  0E52               	movlw	82
 12833  00B3F2  D00F               	goto	L10
 12834  00B3F4                     
 12835                           ; BSR set to: 0
 12836                           ;encoder.c: 422: if(os.button1==1)
 12837                           
 12838                           ; BSR set to: 0
 12839  00B3F4  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 12840  00B3F6  A4D8               	btfss	status,2,c
 12841  00B3F8  D002               	goto	l2645
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;encoder.c: 423: os.displayState = DISPLAY_STATE_MAIN_ARC;
 12845  00B3FA  0E03               	movlw	3
 12846  00B3FC  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12847  00B3FE                     l2645:
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;encoder.c: 424: if(os.encoder1Count>0)
 12851                           
 12852                           ; BSR set to: 0
 12853  00B3FE  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 12854  00B400  0A80               	xorlw	128
 12855  00B402  0F7F               	addlw	-129
 12856  00B404  A0D8               	btfss	status,0,c
 12857  00B406  D002               	goto	l2646
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;encoder.c: 425: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 12861  00B408  0E51               	movlw	81
 12862  00B40A  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12863  00B40C                     l2646:
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;encoder.c: 426: if(os.encoder1Count<0)
 12867                           
 12868                           ; BSR set to: 0
 12869  00B40C  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 12870  00B40E  D00B               	goto	l2643
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;encoder.c: 427: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 12874  00B410  0E51               	movlw	81
 12875  00B412                     L10:
 12876  00B412  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;encoder.c: 429: }
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;encoder.c: 428: break;
 12883  00B414  D008               	goto	l2643
 12884  00B416                     
 12885                           ; BSR set to: 0
 12886  00B416  0100               	movlb	0	; () banked
 12887  00B418  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 12888                           
 12889                           ; Switch size 1, requested type "space"
 12890                           ; Number of cases is 2, Range of values is 81 to 82
 12891                           ; switch strategies available:
 12892                           ; Name         Instructions Cycles
 12893                           ; simple_byte            7     4 (average)
 12894                           ;	Chosen strategy is simple_byte
 12895  00B41A  0A51               	xorlw	81	; case 81
 12896  00B41C  B4D8               	btfsc	status,2,c
 12897  00B41E  D7D9               	goto	l2639
 12898  00B420  0A03               	xorlw	3	; case 82
 12899  00B422  B4D8               	btfsc	status,2,c
 12900  00B424  D7E7               	goto	l2644
 12901  00B426                     l2643:
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;encoder.c: 430: if(os.button2==1)
 12905                           
 12906                           ; BSR set to: 0
 12907  00B426  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 12908  00B428  A4D8               	btfss	status,2,c
 12909  00B42A  D00A               	goto	l2648
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;encoder.c: 431: {;encoder.c: 432: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 12913  00B42C  C0ED  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 12914  00B430  C0EE  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 12915  00B434  EC80  F08C         	call	__encoder_next_arc_step_size	;wreg free
 12916  00B438  C060  F0ED         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 12917  00B43C  C061  F0EE         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 12918  00B440                     l2648:
 12919                           
 12920                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count>0)
 12921  00B440  0100               	movlb	0	; () banked
 12922  00B442  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 12923  00B444  0A80               	xorlw	128
 12924  00B446  0F7F               	addlw	-129
 12925  00B448  A0D8               	btfss	status,0,c
 12926  00B44A  D01C               	goto	l2650
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size += os.arc_step_size;
 12930  00B44C  51ED               	movf	(_os+26)& (0+255),w,b	;volatile
 12931  00B44E  27EF               	addwf	(_os+28)& (0+255),f,b	;volatile
 12932  00B450  51EE               	movf	(_os+27)& (0+255),w,b	;volatile
 12933  00B452  23F0               	addwfc	(_os+29)& (0+255),f,b	;volatile
 12934  00B454  0E00               	movlw	0
 12935  00B456  23F1               	addwfc	(_os+30)& (0+255),f,b	;volatile
 12936  00B458  0E00               	movlw	0
 12937  00B45A  23F2               	addwfc	(_os+31)& (0+255),f,b	;volatile
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;encoder.c: 437: if(os.arc_size>100000)
 12941  00B45C  BFF2               	btfsc	(_os+31)& (0+255),7,b	;volatile
 12942  00B45E  D012               	goto	l2650
 12943  00B460  51F2               	movf	(_os+31)& (0+255),w,b	;volatile
 12944  00B462  E108               	bnz	u22240
 12945  00B464  0EA1               	movlw	161
 12946  00B466  5DEF               	subwf	(_os+28)& (0+255),w,b	;volatile
 12947  00B468  0E86               	movlw	134
 12948  00B46A  59F0               	subwfb	(_os+29)& (0+255),w,b	;volatile
 12949  00B46C  0E01               	movlw	1
 12950  00B46E  59F1               	subwfb	(_os+30)& (0+255),w,b	;volatile
 12951  00B470  A0D8               	btfss	status,0,c
 12952  00B472  D008               	goto	l2650
 12953  00B474                     u22240:
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;encoder.c: 438: os.arc_size = 100000;
 12957  00B474  0EA0               	movlw	160
 12958  00B476  6FEF               	movwf	(_os+28)& (0+255),b	;volatile
 12959  00B478  0E86               	movlw	134
 12960  00B47A  6FF0               	movwf	(_os+29)& (0+255),b	;volatile
 12961  00B47C  0E01               	movlw	1
 12962  00B47E  6FF1               	movwf	(_os+30)& (0+255),b	;volatile
 12963  00B480  0E00               	movlw	0
 12964  00B482  6FF2               	movwf	(_os+31)& (0+255),b	;volatile
 12965  00B484                     l2650:
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;encoder.c: 439: };encoder.c: 440: if(os.encoder2Count<0)
 12969                           
 12970                           ; BSR set to: 0
 12971                           
 12972                           ; BSR set to: 0
 12973  00B484  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 12974  00B486  D15D               	goto	l2584
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;encoder.c: 441: {;encoder.c: 442: os.arc_size -= os.arc_step_size;
 12978  00B488  51ED               	movf	(_os+26)& (0+255),w,b	;volatile
 12979  00B48A  6FC4               	movwf	??_encoder_statemachine& (0+255),b
 12980  00B48C  51EE               	movf	(_os+27)& (0+255),w,b	;volatile
 12981  00B48E  6FC5               	movwf	(??_encoder_statemachine+1)& (0+255),b
 12982  00B490  6BC6               	clrf	(??_encoder_statemachine+2)& (0+255),b
 12983  00B492  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12984  00B494  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12985  00B496  5FEF               	subwf	(_os+28)& (0+255),f,b	;volatile
 12986  00B498  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12987  00B49A  5BF0               	subwfb	(_os+29)& (0+255),f,b	;volatile
 12988  00B49C  51C6               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 12989  00B49E  5BF1               	subwfb	(_os+30)& (0+255),f,b	;volatile
 12990  00B4A0  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12991  00B4A2  5BF2               	subwfb	(_os+31)& (0+255),f,b	;volatile
 12992                           
 12993                           ;encoder.c: 443: if(os.arc_size<1)
 12994  00B4A4  BFF2               	btfsc	(_os+31)& (0+255),7,b	;volatile
 12995  00B4A6  D007               	goto	u22260
 12996  00B4A8  51F2               	movf	(_os+31)& (0+255),w,b	;volatile
 12997  00B4AA  11F1               	iorwf	(_os+30)& (0+255),w,b	;volatile
 12998  00B4AC  11F0               	iorwf	(_os+29)& (0+255),w,b	;volatile
 12999  00B4AE  E102               	bnz	u22261
 13000  00B4B0  05EF               	decf	(_os+28)& (0+255),w,b	;volatile
 13001  00B4B2  B0D8               	btfsc	status,0,c
 13002  00B4B4                     u22261:
 13003  00B4B4  D146               	goto	l2584
 13004  00B4B6                     u22260:
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;encoder.c: 444: os.arc_size = 1;
 13008  00B4B6  0E01               	movlw	1
 13009  00B4B8  6FEF               	movwf	(_os+28)& (0+255),b	;volatile
 13010  00B4BA  0E00               	movlw	0
 13011  00B4BC  6FF0               	movwf	(_os+29)& (0+255),b	;volatile
 13012  00B4BE  0E00               	movlw	0
 13013  00B4C0  6FF1               	movwf	(_os+30)& (0+255),b	;volatile
 13014  00B4C2  0E00               	movlw	0
 13015  00B4C4  6FF2               	movwf	(_os+31)& (0+255),b	;volatile
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;encoder.c: 445: };encoder.c: 446: break;
 13019                           
 13020                           ; BSR set to: 0
 13021  00B4C6  D13D               	goto	l2584
 13022  00B4C8                     
 13023                           ; BSR set to: 0
 13024                           ;encoder.c: 449: if(os.encoder1Count>0)
 13025                           
 13026                           ; BSR set to: 0
 13027  00B4C8  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 13028  00B4CA  0A80               	xorlw	128
 13029  00B4CC  0F7F               	addlw	-129
 13030  00B4CE  A0D8               	btfss	status,0,c
 13031  00B4D0  D015               	goto	l2656
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;encoder.c: 450: {;encoder.c: 451: if(os.arc_speed<config.maximum_speed_arc)
 13035  00B4D2  0101               	movlb	1	; () banked
 13036  00B4D4  5188               	movf	(_config+15)& (0+255),w,b
 13037  00B4D6  0100               	movlb	0	; () banked
 13038  00B4D8  5DF3               	subwf	(_os+32)& (0+255),w,b	;volatile
 13039  00B4DA  0101               	movlb	1	; () banked
 13040  00B4DC  5189               	movf	(_config+16)& (0+255),w,b
 13041  00B4DE  0100               	movlb	0	; () banked
 13042  00B4E0  59F4               	subwfb	(_os+33)& (0+255),w,b	;volatile
 13043  00B4E2  B0D8               	btfsc	status,0,c
 13044  00B4E4  D002               	goto	l2655
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;encoder.c: 452: ++os.arc_speed;
 13048  00B4E6  4BF3               	infsnz	(_os+32)& (0+255),f,b	;volatile
 13049  00B4E8  2BF4               	incf	(_os+33)& (0+255),f,b	;volatile
 13050  00B4EA                     l2655:
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;encoder.c: 453: if(os.busy)
 13054                           
 13055                           ; BSR set to: 0
 13056  00B4EA  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 13057  00B4EC  B4D8               	btfsc	status,2,c
 13058  00B4EE  D006               	goto	l2656
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;encoder.c: 454: motor_change_speed(os.arc_speed);
 13062  00B4F0  C0F3  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 13063  00B4F4  C0F4  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 13064  00B4F8  EC54  F095         	call	_motor_change_speed	;wreg free
 13065  00B4FC                     l2656:
 13066                           
 13067                           ;encoder.c: 455: };encoder.c: 456: if(os.encoder1Count<0)
 13068  00B4FC  0100               	movlb	0	; () banked
 13069  00B4FE  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 13070  00B500  D04B               	goto	l2660
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;encoder.c: 457: {;encoder.c: 458: if(os.arc_speed>config.minimum_speed)
 13074  00B502  51F3               	movf	(_os+32)& (0+255),w,b	;volatile
 13075  00B504  0101               	movlb	1	; () banked
 13076  00B506  5D82               	subwf	(_config+9)& (0+255),w,b
 13077  00B508  0100               	movlb	0	; () banked
 13078  00B50A  51F4               	movf	(_os+33)& (0+255),w,b	;volatile
 13079  00B50C  0101               	movlb	1	; () banked
 13080  00B50E  5983               	subwfb	(_config+10)& (0+255),w,b
 13081  00B510  B0D8               	btfsc	status,0,c
 13082  00B512  D004               	goto	l2658
 13083                           
 13084                           ; BSR set to: 1
 13085                           ;encoder.c: 459: --os.arc_speed;
 13086  00B514  0100               	movlb	0	; () banked
 13087  00B516  07F3               	decf	(_os+32)& (0+255),f,b	;volatile
 13088  00B518  A0D8               	btfss	status,0,c
 13089  00B51A  07F4               	decf	(_os+33)& (0+255),f,b	;volatile
 13090  00B51C                     l2658:
 13091                           
 13092                           ;encoder.c: 460: if(os.busy)
 13093                           
 13094                           ; BSR set to: 0
 13095  00B51C  0100               	movlb	0	; () banked
 13096  00B51E  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 13097  00B520  B4D8               	btfsc	status,2,c
 13098  00B522  D03A               	goto	l2660
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;encoder.c: 461: motor_change_speed(os.arc_speed);
 13102  00B524  C0F3  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 13103  00B528  C0F4  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 13104  00B52C  EC54  F095         	call	_motor_change_speed	;wreg free
 13105                           
 13106                           ;encoder.c: 462: };encoder.c: 463: switch(os.displayState)
 13107  00B530  D033               	goto	l2660
 13108  00B532                     
 13109                           ;encoder.c: 466: if(os.button2==1)
 13110  00B532  0100               	movlb	0	; () banked
 13111  00B534  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13112  00B536  A4D8               	btfss	status,2,c
 13113  00B538  D006               	goto	l2662
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;encoder.c: 467: {;encoder.c: 468: motor_arc_move(MOTOR_DIRECTION_CCW);
 13117  00B53A  0EFF               	movlw	255
 13118  00B53C  ECC2  F080         	call	_motor_arc_move
 13119                           
 13120                           ;encoder.c: 469: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13121  00B540  0E62               	movlw	98
 13122  00B542  0100               	movlb	0	; () banked
 13123  00B544  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13124  00B546                     l2662:
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;encoder.c: 470: };encoder.c: 471: if(os.encoder2Count>0)
 13128                           
 13129                           ; BSR set to: 0
 13130  00B546  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13131  00B548  0A80               	xorlw	128
 13132  00B54A  0F7F               	addlw	-129
 13133  00B54C  A0D8               	btfss	status,0,c
 13134  00B54E  D0F9               	goto	l2584
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;encoder.c: 472: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13138  00B550  0E62               	movlw	98
 13139  00B552  D0C2               	goto	L17
 13140  00B554                     
 13141                           ; BSR set to: 0
 13142                           ;encoder.c: 475: if(os.button2==1)
 13143                           
 13144                           ; BSR set to: 0
 13145  00B554  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13146  00B556  A4D8               	btfss	status,2,c
 13147  00B558  D007               	goto	l2666
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;encoder.c: 476: {;encoder.c: 477: if(os.busy)
 13151  00B55A  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 13152  00B55C  A4D8               	btfss	status,2,c
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;encoder.c: 478: motor_stop();
 13156  00B55E  EC6A  F091         	call	_motor_stop	;wreg free
 13157                           
 13158                           ;encoder.c: 479: os.displayState = DISPLAY_STATE_MAIN_ARC;
 13159  00B562  0E03               	movlw	3
 13160  00B564  0100               	movlb	0	; () banked
 13161  00B566  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13162  00B568                     l2666:
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;encoder.c: 480: };encoder.c: 481: if(os.encoder2Count>0)
 13166                           
 13167                           ; BSR set to: 0
 13168  00B568  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13169  00B56A  0A80               	xorlw	128
 13170  00B56C  0F7F               	addlw	-129
 13171  00B56E  A0D8               	btfss	status,0,c
 13172  00B570  D002               	goto	l2668
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;encoder.c: 482: os.displayState = DISPLAY_STATE_ARC2_CW;
 13176  00B572  0E63               	movlw	99
 13177  00B574  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13178  00B576                     l2668:
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;encoder.c: 483: if(os.encoder2Count<0)
 13182                           
 13183                           ; BSR set to: 0
 13184  00B576  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13185  00B578  D0E4               	goto	l2584
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CCW;
 13189  00B57A  0E61               	movlw	97
 13190  00B57C  D0AD               	goto	L17
 13191  00B57E                     
 13192                           ; BSR set to: 0
 13193                           ;encoder.c: 487: if(os.button2==1)
 13194                           
 13195                           ; BSR set to: 0
 13196  00B57E  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13197  00B580  A4D8               	btfss	status,2,c
 13198  00B582  D006               	goto	l2671
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;encoder.c: 488: {;encoder.c: 489: motor_arc_move(MOTOR_DIRECTION_CW);
 13202  00B584  0E01               	movlw	1
 13203  00B586  ECC2  F080         	call	_motor_arc_move
 13204                           
 13205                           ;encoder.c: 490: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13206  00B58A  0E62               	movlw	98
 13207  00B58C  0100               	movlb	0	; () banked
 13208  00B58E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13209  00B590                     l2671:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;encoder.c: 491: };encoder.c: 492: if(os.encoder2Count<0)
 13213                           
 13214                           ; BSR set to: 0
 13215  00B590  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13216  00B592  D0D7               	goto	l2584
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;encoder.c: 493: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13220  00B594  0E62               	movlw	98
 13221  00B596  D0A0               	goto	L17
 13222  00B598                     l2660:
 13223                           
 13224                           ; BSR set to: 0
 13225  00B598  0100               	movlb	0	; () banked
 13226  00B59A  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 13227                           
 13228                           ; Switch size 1, requested type "space"
 13229                           ; Number of cases is 3, Range of values is 97 to 99
 13230                           ; switch strategies available:
 13231                           ; Name         Instructions Cycles
 13232                           ; simple_byte           10     6 (average)
 13233                           ;	Chosen strategy is simple_byte
 13234  00B59C  0A61               	xorlw	97	; case 97
 13235  00B59E  B4D8               	btfsc	status,2,c
 13236  00B5A0  D7C8               	goto	l2661
 13237  00B5A2  0A03               	xorlw	3	; case 98
 13238  00B5A4  B4D8               	btfsc	status,2,c
 13239  00B5A6  D7D6               	goto	l2665
 13240  00B5A8  0A01               	xorlw	1	; case 99
 13241  00B5AA  B4D8               	btfsc	status,2,c
 13242  00B5AC  D7E8               	goto	l2670
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;encoder.c: 496: break;
 13246  00B5AE  D0C9               	goto	l2584
 13247  00B5B0                     
 13248                           ; BSR set to: 0
 13249                           ;encoder.c: 499: if(os.button2==1)
 13250                           
 13251                           ; BSR set to: 0
 13252  00B5B0  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13253  00B5B2  A4D8               	btfss	status,2,c
 13254  00B5B4  D011               	goto	l2674
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;encoder.c: 500: {;encoder.c: 502: motor_go_to_steps_position(0);
 13258  00B5B6  0E00               	movlw	0
 13259  00B5B8  6F9E               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 13260  00B5BA  0E00               	movlw	0
 13261  00B5BC  6F9F               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 13262  00B5BE  0E00               	movlw	0
 13263  00B5C0  6FA0               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 13264  00B5C2  0E00               	movlw	0
 13265  00B5C4  6FA1               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 13266  00B5C6  ECBF  F063         	call	_motor_go_to_steps_position	;wreg free
 13267                           
 13268                           ;encoder.c: 504: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 13269  00B5CA  0E05               	movlw	5
 13270  00B5CC  0100               	movlb	0	; () banked
 13271  00B5CE  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;encoder.c: 505: os.divide_position = 0;
 13275  00B5D0  0E00               	movlw	0
 13276  00B5D2  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 13277  00B5D4  0E00               	movlw	0
 13278  00B5D6  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 13279  00B5D8                     l2674:
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;encoder.c: 506: };encoder.c: 507: if(os.button1==1)
 13283                           
 13284                           ; BSR set to: 0
 13285  00B5D8  05D7               	decf	(_os+4)& (0+255),w,b	;volatile
 13286  00B5DA  A4D8               	btfss	status,2,c
 13287  00B5DC  D0B2               	goto	l2584
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;encoder.c: 508: {;encoder.c: 509: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 13291  00B5DE  0E05               	movlw	5
 13292  00B5E0  D07B               	goto	L17
 13293  00B5E2                     
 13294                           ; BSR set to: 0
 13295                           ;encoder.c: 514: if(os.encoder1Count>0)
 13296                           
 13297                           ; BSR set to: 0
 13298  00B5E2  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 13299  00B5E4  0A80               	xorlw	128
 13300  00B5E6  0F7F               	addlw	-129
 13301  00B5E8  A0D8               	btfss	status,0,c
 13302  00B5EA  D012               	goto	l2678
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;encoder.c: 515: {;encoder.c: 516: if(os.manual_speed<config.maximum_speed_manual)
 13306  00B5EC  0101               	movlb	1	; () banked
 13307  00B5EE  518C               	movf	(_config+19)& (0+255),w,b
 13308  00B5F0  0100               	movlb	0	; () banked
 13309  00B5F2  5DF6               	subwf	(_os+35)& (0+255),w,b	;volatile
 13310  00B5F4  0101               	movlb	1	; () banked
 13311  00B5F6  518D               	movf	(_config+20)& (0+255),w,b
 13312  00B5F8  0100               	movlb	0	; () banked
 13313  00B5FA  59F7               	subwfb	(_os+36)& (0+255),w,b	;volatile
 13314  00B5FC  B0D8               	btfsc	status,0,c
 13315  00B5FE  D008               	goto	l2678
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;encoder.c: 517: {;encoder.c: 518: ++os.manual_speed;
 13319  00B600  4BF6               	infsnz	(_os+35)& (0+255),f,b	;volatile
 13320  00B602  2BF7               	incf	(_os+36)& (0+255),f,b	;volatile
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;encoder.c: 519: motor_change_speed(os.manual_speed);
 13324  00B604  C0F6  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 13325  00B608  C0F7  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 13326  00B60C  EC54  F095         	call	_motor_change_speed	;wreg free
 13327  00B610                     l2678:
 13328                           
 13329                           ;encoder.c: 520: };encoder.c: 522: };encoder.c: 523: if(os.encoder1Count<0)
 13330  00B610  0100               	movlb	0	; () banked
 13331  00B612  AFD6               	btfss	(_os+3)& (0+255),7,b	;volatile
 13332  00B614  D063               	goto	l2681
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;encoder.c: 524: {;encoder.c: 525: if(os.manual_speed>config.minimum_speed)
 13336  00B616  51F6               	movf	(_os+35)& (0+255),w,b	;volatile
 13337  00B618  0101               	movlb	1	; () banked
 13338  00B61A  5D82               	subwf	(_config+9)& (0+255),w,b
 13339  00B61C  0100               	movlb	0	; () banked
 13340  00B61E  51F7               	movf	(_os+36)& (0+255),w,b	;volatile
 13341  00B620  0101               	movlb	1	; () banked
 13342  00B622  5983               	subwfb	(_config+10)& (0+255),w,b
 13343  00B624  B0D8               	btfsc	status,0,c
 13344  00B626  D05A               	goto	l2681
 13345                           
 13346                           ; BSR set to: 1
 13347                           ;encoder.c: 526: {;encoder.c: 527: --os.manual_speed;
 13348  00B628  0100               	movlb	0	; () banked
 13349  00B62A  07F6               	decf	(_os+35)& (0+255),f,b	;volatile
 13350  00B62C  A0D8               	btfss	status,0,c
 13351  00B62E  07F7               	decf	(_os+36)& (0+255),f,b	;volatile
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;encoder.c: 528: motor_change_speed(os.manual_speed);
 13355  00B630  C0F6  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 13356  00B634  C0F7  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 13357  00B638  EC54  F095         	call	_motor_change_speed	;wreg free
 13358                           
 13359                           ;encoder.c: 529: };encoder.c: 530: };encoder.c: 531: switch(os.displayState)
 13360  00B63C  D04F               	goto	l2681
 13361  00B63E                     
 13362                           ;encoder.c: 534: if(os.button2==1)
 13363  00B63E  0100               	movlb	0	; () banked
 13364  00B640  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13365  00B642  A4D8               	btfss	status,2,c
 13366  00B644  D012               	goto	l2683
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;encoder.c: 535: {;encoder.c: 536: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 13370  00B646  0E00               	movlw	0
 13371  00B648  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13372  00B64A  0E00               	movlw	0
 13373  00B64C  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13374  00B64E  0E00               	movlw	0
 13375  00B650  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13376  00B652  0E00               	movlw	0
 13377  00B654  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13378  00B656  C0F6  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 13379  00B65A  C0F7  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 13380  00B65E  0EFF               	movlw	255
 13381  00B660  EC1A  F088         	call	_motor_schedule_command
 13382                           
 13383                           ;encoder.c: 537: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 13384  00B664  0E84               	movlw	132
 13385  00B666  0100               	movlb	0	; () banked
 13386  00B668  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13387  00B66A                     l2683:
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;encoder.c: 538: };encoder.c: 539: if(os.encoder2Count>0)
 13391                           
 13392                           ; BSR set to: 0
 13393  00B66A  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13394  00B66C  0A80               	xorlw	128
 13395  00B66E  0F7F               	addlw	-129
 13396  00B670  A0D8               	btfss	status,0,c
 13397  00B672  D067               	goto	l2584
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;encoder.c: 540: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13401  00B674  0E82               	movlw	130
 13402  00B676  D030               	goto	L17
 13403  00B678                     
 13404                           ; BSR set to: 0
 13405                           ;encoder.c: 543: if(os.button2==1)
 13406                           
 13407                           ; BSR set to: 0
 13408  00B678  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13409  00B67A  A4D8               	btfss	status,2,c
 13410  00B67C  D002               	goto	l2687
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;encoder.c: 544: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 13414  00B67E  0E04               	movlw	4
 13415  00B680  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13416  00B682                     l2687:
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;encoder.c: 545: if(os.encoder2Count>0)
 13420                           
 13421                           ; BSR set to: 0
 13422  00B682  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 13423  00B684  0A80               	xorlw	128
 13424  00B686  0F7F               	addlw	-129
 13425  00B688  A0D8               	btfss	status,0,c
 13426  00B68A  D002               	goto	l2688
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;encoder.c: 546: os.displayState = DISPLAY_STATE_MANUAL_CW;
 13430  00B68C  0E83               	movlw	131
 13431  00B68E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13432  00B690                     l2688:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;encoder.c: 547: if(os.encoder2Count<0)
 13436                           
 13437                           ; BSR set to: 0
 13438  00B690  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13439  00B692  D057               	goto	l2584
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 13443  00B694  0E81               	movlw	129
 13444  00B696  D020               	goto	L17
 13445  00B698                     
 13446                           ; BSR set to: 0
 13447                           ;encoder.c: 551: if(os.button2==1)
 13448                           
 13449                           ; BSR set to: 0
 13450  00B698  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13451  00B69A  A4D8               	btfss	status,2,c
 13452  00B69C  D011               	goto	l2691
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;encoder.c: 552: {;encoder.c: 553: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 13456  00B69E  0E84               	movlw	132
 13457  00B6A0  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;encoder.c: 554: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 13461  00B6A2  0E00               	movlw	0
 13462  00B6A4  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13463  00B6A6  0E00               	movlw	0
 13464  00B6A8  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13465  00B6AA  0E00               	movlw	0
 13466  00B6AC  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13467  00B6AE  0E00               	movlw	0
 13468  00B6B0  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13469  00B6B2  C0F6  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 13470  00B6B6  C0F7  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 13471  00B6BA  0E01               	movlw	1
 13472  00B6BC  EC1A  F088         	call	_motor_schedule_command
 13473  00B6C0                     l2691:
 13474                           
 13475                           ;encoder.c: 556: };encoder.c: 557: if(os.encoder2Count<0)
 13476  00B6C0  0100               	movlb	0	; () banked
 13477  00B6C2  AFD8               	btfss	(_os+5)& (0+255),7,b	;volatile
 13478  00B6C4  D03E               	goto	l2584
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;encoder.c: 558: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13482  00B6C6  0E82               	movlw	130
 13483  00B6C8  D007               	goto	L17
 13484  00B6CA                     
 13485                           ; BSR set to: 0
 13486                           ;encoder.c: 561: if(os.button2==1)
 13487                           
 13488                           ; BSR set to: 0
 13489  00B6CA  05D9               	decf	(_os+6)& (0+255),w,b	;volatile
 13490  00B6CC  A4D8               	btfss	status,2,c
 13491  00B6CE  D039               	goto	l2584
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;encoder.c: 562: {;encoder.c: 563: motor_stop();
 13495  00B6D0  EC6A  F091         	call	_motor_stop	;wreg free
 13496                           
 13497                           ;encoder.c: 564: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13498  00B6D4  0E82               	movlw	130
 13499  00B6D6  0100               	movlb	0	; () banked
 13500  00B6D8                     L17:
 13501  00B6D8  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;encoder.c: 567: }
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;encoder.c: 565: };encoder.c: 566: break;
 13508  00B6DA  D033               	goto	l2584
 13509  00B6DC                     l2681:
 13510                           
 13511                           ; BSR set to: 0
 13512  00B6DC  0100               	movlb	0	; () banked
 13513  00B6DE  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 13514                           
 13515                           ; Switch size 1, requested type "space"
 13516                           ; Number of cases is 4, Range of values is 129 to 132
 13517                           ; switch strategies available:
 13518                           ; Name         Instructions Cycles
 13519                           ; simple_byte           13     7 (average)
 13520                           ;	Chosen strategy is simple_byte
 13521  00B6E0  0A81               	xorlw	129	; case 129
 13522  00B6E2  B4D8               	btfsc	status,2,c
 13523  00B6E4  D7AC               	goto	l2682
 13524  00B6E6  0A03               	xorlw	3	; case 130
 13525  00B6E8  B4D8               	btfsc	status,2,c
 13526  00B6EA  D7C6               	goto	l2686
 13527  00B6EC  0A01               	xorlw	1	; case 131
 13528  00B6EE  B4D8               	btfsc	status,2,c
 13529  00B6F0  D7D3               	goto	l2690
 13530  00B6F2  0A07               	xorlw	7	; case 132
 13531  00B6F4  B4D8               	btfsc	status,2,c
 13532  00B6F6  D7E9               	goto	l2693
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;encoder.c: 569: }
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;encoder.c: 568: break;
 13539  00B6F8  D024               	goto	l2584
 13540  00B6FA                     l2549:
 13541                           
 13542                           ; BSR set to: 0
 13543                           
 13544                           ; BSR set to: 0
 13545  00B6FA  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 13546  00B6FC  0BF0               	andlw	240
 13547  00B6FE  6FC4               	movwf	??_encoder_statemachine& (0+255),b
 13548  00B700  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 13549                           
 13550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13551                           ; Switch size 1, requested type "space"
 13552                           ; Number of cases is 1, Range of values is 0 to 0
 13553                           ; switch strategies available:
 13554                           ; Name         Instructions Cycles
 13555                           ; simple_byte            4     3 (average)
 13556                           ;	Chosen strategy is simple_byte
 13557  00B702  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 13558  00B704  0A00               	xorlw	0	; case 0
 13559  00B706  A4D8               	btfss	status,2,c
 13560  00B708  D01C               	goto	l2584
 13561                           
 13562                           ; BSR set to: 0
 13563                           ; Switch size 1, requested type "space"
 13564                           ; Number of cases is 9, Range of values is 0 to 128
 13565                           ; switch strategies available:
 13566                           ; Name         Instructions Cycles
 13567                           ; simple_byte           28    15 (average)
 13568                           ;	Chosen strategy is simple_byte
 13569  00B70A  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 13570  00B70C  0A00               	xorlw	0	; case 0
 13571  00B70E  B4D8               	btfsc	status,2,c
 13572  00B710  D4BF               	goto	l2551
 13573  00B712  0A10               	xorlw	16	; case 16
 13574  00B714  B4D8               	btfsc	status,2,c
 13575  00B716  D4FB               	goto	l2586
 13576  00B718  0A30               	xorlw	48	; case 32
 13577  00B71A  B4D8               	btfsc	status,2,c
 13578  00B71C  D5E6               	goto	l2602
 13579  00B71E  0A10               	xorlw	16	; case 48
 13580  00B720  B4D8               	btfsc	status,2,c
 13581  00B722  D610               	goto	l2617
 13582  00B724  0A70               	xorlw	112	; case 64
 13583  00B726  B4D8               	btfsc	status,2,c
 13584  00B728  D63E               	goto	l2632
 13585  00B72A  0A10               	xorlw	16	; case 80
 13586  00B72C  B4D8               	btfsc	status,2,c
 13587  00B72E  D673               	goto	l2638
 13588  00B730  0A30               	xorlw	48	; case 96
 13589  00B732  B4D8               	btfsc	status,2,c
 13590  00B734  D6C9               	goto	l2653
 13591  00B736  0A10               	xorlw	16	; case 112
 13592  00B738  B4D8               	btfsc	status,2,c
 13593  00B73A  D73A               	goto	l2673
 13594  00B73C  0AF0               	xorlw	240	; case 128
 13595  00B73E  B4D8               	btfsc	status,2,c
 13596  00B740  D750               	goto	l2676
 13597  00B742                     l2584:
 13598                           
 13599                           ;encoder.c: 572: os.encoder1Count = 0;
 13600                           
 13601                           ; BSR set to: 0
 13602  00B742  0E00               	movlw	0
 13603  00B744  0100               	movlb	0	; () banked
 13604  00B746  6FD6               	movwf	(_os+3)& (0+255),b	;volatile
 13605                           
 13606                           ;encoder.c: 573: os.encoder2Count = 0;
 13607  00B748  0E00               	movlw	0
 13608  00B74A  6FD8               	movwf	(_os+5)& (0+255),b	;volatile
 13609                           
 13610                           ;encoder.c: 574: os.button1 = 0;
 13611  00B74C  0E00               	movlw	0
 13612  00B74E  6FD7               	movwf	(_os+4)& (0+255),b	;volatile
 13613                           
 13614                           ;encoder.c: 575: os.button2 = 0;
 13615  00B750  0E00               	movlw	0
 13616  00B752  6FD9               	movwf	(_os+6)& (0+255),b	;volatile
 13617                           
 13618                           ; BSR set to: 0
 13619  00B754  0012               	return		;funcret
 13620  00B756                     __end_of_encoder_statemachine:
 13621                           	opt stack 0
 13622                           tblptru	equ	0xFF8
 13623                           tblptrh	equ	0xFF7
 13624                           tblptrl	equ	0xFF6
 13625                           tablat	equ	0xFF5
 13626                           prodh	equ	0xFF4
 13627                           prodl	equ	0xFF3
 13628                           intcon	equ	0xFF2
 13629                           postinc0	equ	0xFEE
 13630                           wreg	equ	0xFE8
 13631                           postdec1	equ	0xFE5
 13632                           plusw1	equ	0xFE3
 13633                           fsr1h	equ	0xFE2
 13634                           fsr1l	equ	0xFE1
 13635                           indf2	equ	0xFDF
 13636                           postinc2	equ	0xFDE
 13637                           postdec2	equ	0xFDD
 13638                           plusw2	equ	0xFDB
 13639                           fsr2h	equ	0xFDA
 13640                           fsr2l	equ	0xFD9
 13641                           status	equ	0xFD8
 13642                           
 13643 ;; *************** function _motor_stop *****************
 13644 ;; Defined at:
 13645 ;;		line 433 in file "motor.c"
 13646 ;; Parameters:    Size  Location     Type
 13647 ;;		None
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      void 
 13652 ;; Registers used:
 13653 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13654 ;; Tracked objects:
 13655 ;;		On entry : 0/0
 13656 ;;		On exit  : 0/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13663 ;;Total ram usage:        2 bytes
 13664 ;; Hardware stack levels used:    1
 13665 ;; Hardware stack levels required when called:   10
 13666 ;; This function calls:
 13667 ;;		Nothing
 13668 ;; This function is called by:
 13669 ;;		_encoder_statemachine
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           	psect	text42
 13674  0122D4                     __ptext42:
 13675                           	opt stack 0
 13676  0122D4                     _motor_stop:
 13677                           	opt stack 19
 13678                           
 13679                           ;motor.c: 435: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;incstack = 0
 13683  0122D4  90D8               	bcf	status,0,c
 13684  0122D6  0100               	movlb	0	; () banked
 13685  0122D8  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 13686  0122DA  6EF6               	movwf	tblptrl,c
 13687  0122DC  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 13688  0122DE  6EF7               	movwf	tblptrh,c
 13689  0122E0  0E61               	movlw	low _motor_steps_lookup
 13690  0122E2  26F6               	addwf	tblptrl,f,c
 13691  0122E4  0E94               	movlw	high _motor_steps_lookup
 13692  0122E6  22F7               	addwfc	tblptrh,f,c
 13693  0122E8                     	if	1	;There are 3 active tblptr bytes
 13694  0122E8  6AF8               	clrf	tblptru,c
 13695  0122EA  0E00               	movlw	low (__mediumconst shr (0+16))
 13696  0122EC  22F8               	addwfc	tblptru,f,c
 13697  0122EE                     	endif
 13698  0122EE  0009               	tblrd		*+
 13699  0122F0  CFF5 F060          	movff	tablat,??_motor_stop
 13700  0122F4  0009               	tblrd		*+
 13701  0122F6  CFF5 F061          	movff	tablat,??_motor_stop+1
 13702  0122FA  5160               	movf	??_motor_stop& (0+255),w,b
 13703  0122FC  2416               	addwf	_motor_current_stepcount,w,c	;volatile
 13704  0122FE  0101               	movlb	1	; () banked
 13705  012300  6F3B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 13706  012302  0100               	movlb	0	; () banked
 13707  012304  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 13708  012306  2017               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 13709  012308  0101               	movlb	1	; () banked
 13710  01230A  6F3C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 13711  01230C  0E00               	movlw	0
 13712  01230E  2018               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 13713  012310  6F3D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 13714  012312  0E00               	movlw	0
 13715  012314  2019               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 13716  012316  6F3E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 13717                           
 13718                           ; BSR set to: 1
 13719  012318  0012               	return		;funcret
 13720  01231A                     __end_of_motor_stop:
 13721                           	opt stack 0
 13722                           tblptru	equ	0xFF8
 13723                           tblptrh	equ	0xFF7
 13724                           tblptrl	equ	0xFF6
 13725                           tablat	equ	0xFF5
 13726                           prodh	equ	0xFF4
 13727                           prodl	equ	0xFF3
 13728                           intcon	equ	0xFF2
 13729                           postinc0	equ	0xFEE
 13730                           wreg	equ	0xFE8
 13731                           postdec1	equ	0xFE5
 13732                           plusw1	equ	0xFE3
 13733                           fsr1h	equ	0xFE2
 13734                           fsr1l	equ	0xFE1
 13735                           indf2	equ	0xFDF
 13736                           postinc2	equ	0xFDE
 13737                           postdec2	equ	0xFDD
 13738                           plusw2	equ	0xFDB
 13739                           fsr2h	equ	0xFDA
 13740                           fsr2l	equ	0xFD9
 13741                           status	equ	0xFD8
 13742                           
 13743 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 13744 ;; Defined at:
 13745 ;;		line 41 in file "motor.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  degrees         2   47[BANK0 ] unsigned int 
 13748 ;; Auto vars:     Size  Location     Type
 13749 ;;  steps           4   51[BANK0 ] unsigned long 
 13750 ;; Return value:  Size  Location     Type
 13751 ;;                  4   47[BANK0 ] unsigned long 
 13752 ;; Registers used:
 13753 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13754 ;; Tracked objects:
 13755 ;;		On entry : 0/0
 13756 ;;		On exit  : 0/0
 13757 ;;		Unchanged: 0/0
 13758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13762 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13763 ;;Total ram usage:        8 bytes
 13764 ;; Hardware stack levels used:    1
 13765 ;; Hardware stack levels required when called:   12
 13766 ;; This function calls:
 13767 ;;		_motor_steps_from_degrees
 13768 ;; This function is called by:
 13769 ;;		_encoder_statemachine
 13770 ;; This function uses a non-reentrant model
 13771 ;;
 13772                           
 13773                           	psect	text43
 13774  01223E                     __ptext43:
 13775                           	opt stack 0
 13776  01223E                     _motor_nonzero_steps_from_degrees:
 13777                           	opt stack 17
 13778                           
 13779                           ;motor.c: 43: uint32_t steps;;motor.c: 44: steps = motor_steps_from_degrees(degrees);
 13780                           
 13781                           ; BSR set to: 1
 13782                           ;incstack = 0
 13783  01223E  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 13784  012242  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 13785  012246  EC89  F084         	call	_motor_steps_from_degrees	;wreg free
 13786  01224A  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 13787  01224E  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 13788  012252  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 13789  012256  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 13790                           
 13791                           ;motor.c: 45: if(steps==0)
 13792  01225A  0100               	movlb	0	; () banked
 13793  01225C  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 13794  01225E  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 13795  012260  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 13796  012262  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 13797  012264  A4D8               	btfss	status,2,c
 13798  012266  D008               	goto	l2330
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;motor.c: 46: steps = 1;
 13802  012268  0E01               	movlw	1
 13803  01226A  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 13804  01226C  0E00               	movlw	0
 13805  01226E  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 13806  012270  0E00               	movlw	0
 13807  012272  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 13808  012274  0E00               	movlw	0
 13809  012276  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 13810  012278                     l2330:
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;motor.c: 47: return steps;
 13814                           
 13815                           ; BSR set to: 0
 13816  012278  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 13817  01227C  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 13818  012280  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 13819  012284  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 13820  012288  0012               	return	
 13821  01228A                     __end_of_motor_nonzero_steps_from_degrees:
 13822                           	opt stack 0
 13823                           tblptru	equ	0xFF8
 13824                           tblptrh	equ	0xFF7
 13825                           tblptrl	equ	0xFF6
 13826                           tablat	equ	0xFF5
 13827                           prodh	equ	0xFF4
 13828                           prodl	equ	0xFF3
 13829                           intcon	equ	0xFF2
 13830                           postinc0	equ	0xFEE
 13831                           wreg	equ	0xFE8
 13832                           postdec1	equ	0xFE5
 13833                           plusw1	equ	0xFE3
 13834                           fsr1h	equ	0xFE2
 13835                           fsr1l	equ	0xFE1
 13836                           indf2	equ	0xFDF
 13837                           postinc2	equ	0xFDE
 13838                           postdec2	equ	0xFDD
 13839                           plusw2	equ	0xFDB
 13840                           fsr2h	equ	0xFDA
 13841                           fsr2l	equ	0xFD9
 13842                           status	equ	0xFD8
 13843                           
 13844 ;; *************** function _motor_steps_from_degrees *****************
 13845 ;; Defined at:
 13846 ;;		line 30 in file "motor.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;  degrees         2   39[BANK0 ] unsigned int 
 13849 ;; Auto vars:     Size  Location     Type
 13850 ;;  steps           4   43[BANK0 ] float 
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  4   39[BANK0 ] unsigned long 
 13853 ;; Registers used:
 13854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13860 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13864 ;;Total ram usage:        8 bytes
 13865 ;; Hardware stack levels used:    1
 13866 ;; Hardware stack levels required when called:   11
 13867 ;; This function calls:
 13868 ;;		___fldiv
 13869 ;;		___flmul
 13870 ;;		___fltol
 13871 ;;		___xxtofl
 13872 ;; This function is called by:
 13873 ;;		_motor_nonzero_steps_from_degrees
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           	psect	text44
 13878  010912                     __ptext44:
 13879                           	opt stack 0
 13880  010912                     _motor_steps_from_degrees:
 13881                           	opt stack 17
 13882                           
 13883                           ;motor.c: 32: float steps;;motor.c: 33: steps = (float) degrees;
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;incstack = 0
 13887  010912  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 13888  010916  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 13889  01091A  0100               	movlb	0	; () banked
 13890  01091C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13891  01091E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13892  010920  0E00               	movlw	0
 13893  010922  EC6A  F075         	call	___xxtofl
 13894  010926  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 13895  01092A  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 13896  01092E  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 13897  010932  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 13898                           
 13899                           ;motor.c: 34: steps *= config.full_circle_in_steps;
 13900  010936  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 13901  01093A  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 13902  01093E  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 13903  010942  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 13904  010946  C179  F060         	movff	_config,___xxtofl@val
 13905  01094A  C17A  F061         	movff	_config+1,___xxtofl@val+1
 13906  01094E  C17B  F062         	movff	_config+2,___xxtofl@val+2
 13907  010952  C17C  F063         	movff	_config+3,___xxtofl@val+3
 13908  010956  0E00               	movlw	0
 13909  010958  EC6A  F075         	call	___xxtofl
 13910  01095C  C060  F072         	movff	?___xxtofl,___flmul@a
 13911  010960  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 13912  010964  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 13913  010968  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 13914  01096C  EC78  F060         	call	___flmul	;wreg free
 13915  010970  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 13916  010974  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 13917  010978  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 13918  01097C  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 13919                           
 13920                           ;motor.c: 35: steps /= 36000;
 13921  010980  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 13922  010984  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 13923  010988  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 13924  01098C  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 13925  010990  0E00               	movlw	0
 13926  010992  0100               	movlb	0	; () banked
 13927  010994  6F72               	movwf	___fldiv@a& (0+255),b
 13928  010996  0EA0               	movlw	160
 13929  010998  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 13930  01099A  0E0C               	movlw	12
 13931  01099C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 13932  01099E  0E47               	movlw	71
 13933  0109A0  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 13934  0109A2  EC9D  F066         	call	___fldiv	;wreg free
 13935  0109A6  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 13936  0109AA  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 13937  0109AE  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 13938  0109B2  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 13939                           
 13940                           ;motor.c: 37: return (uint32_t) steps;
 13941  0109B6  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 13942  0109BA  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 13943  0109BE  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 13944  0109C2  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 13945  0109C6  EC32  F081         	call	___fltol	;wreg free
 13946  0109CA  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 13947  0109CE  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 13948  0109D2  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 13949  0109D6  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 13950  0109DA  0012               	return	
 13951  0109DC                     __end_of_motor_steps_from_degrees:
 13952                           	opt stack 0
 13953                           tblptru	equ	0xFF8
 13954                           tblptrh	equ	0xFF7
 13955                           tblptrl	equ	0xFF6
 13956                           tablat	equ	0xFF5
 13957                           prodh	equ	0xFF4
 13958                           prodl	equ	0xFF3
 13959                           intcon	equ	0xFF2
 13960                           postinc0	equ	0xFEE
 13961                           wreg	equ	0xFE8
 13962                           postdec1	equ	0xFE5
 13963                           plusw1	equ	0xFE3
 13964                           fsr1h	equ	0xFE2
 13965                           fsr1l	equ	0xFE1
 13966                           indf2	equ	0xFDF
 13967                           postinc2	equ	0xFDE
 13968                           postdec2	equ	0xFDD
 13969                           plusw2	equ	0xFDB
 13970                           fsr2h	equ	0xFDA
 13971                           fsr2l	equ	0xFD9
 13972                           status	equ	0xFD8
 13973                           
 13974 ;; *************** function _motor_divide_jump_to_nearest *****************
 13975 ;; Defined at:
 13976 ;;		line 559 in file "motor.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;		None
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;  divide_posit    4   96[BANK0 ] float 
 13981 ;;  nearest_posi    4   90[BANK0 ] unsigned long 
 13982 ;;  nearest_divi    2   94[BANK0 ] int 
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1    wreg      void 
 13985 ;; Registers used:
 13986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13993 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13995 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13996 ;;Total ram usage:       10 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:   13
 13999 ;; This function calls:
 14000 ;;		___fladd
 14001 ;;		___fldiv
 14002 ;;		___flmul
 14003 ;;		___fltol
 14004 ;;		___xxtofl
 14005 ;;		__step_position_from_divide_position
 14006 ;;		_motor_go_to_steps_position
 14007 ;; This function is called by:
 14008 ;;		_encoder_statemachine
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text45
 14013  00E5AA                     __ptext45:
 14014                           	opt stack 0
 14015  00E5AA                     _motor_divide_jump_to_nearest:
 14016                           	opt stack 16
 14017                           
 14018                           ;motor.c: 561: float divide_position_float;;motor.c: 562: int16_t nearest_divide_positio
      +                          n;;motor.c: 563: uint32_t nearest_position_in_steps;;motor.c: 565: divide_position_float
      +                           = (float) os.current_position_in_steps;
 14019                           
 14020                           ;incstack = 0
 14021  00E5AA  C0DA  F060         	movff	_os+7,___xxtofl@val	;volatile
 14022  00E5AE  C0DB  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 14023  00E5B2  C0DC  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 14024  00E5B6  C0DD  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 14025  00E5BA  0E00               	movlw	0
 14026  00E5BC  EC6A  F075         	call	___xxtofl
 14027  00E5C0  C060  F0C0         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 14028  00E5C4  C061  F0C1         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 14029  00E5C8  C062  F0C2         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 14030  00E5CC  C063  F0C3         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 14031                           
 14032                           ;motor.c: 566: divide_position_float *= (float) os.division;
 14033  00E5D0  C0C0  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 14034  00E5D4  C0C1  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 14035  00E5D8  C0C2  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 14036  00E5DC  C0C3  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 14037  00E5E0  EE20  F0E6         	lfsr	2,_os+19	;volatile
 14038  00E5E4  CFDE F060          	movff	postinc2,___xxtofl@val
 14039  00E5E8  CFDD F061          	movff	postdec2,___xxtofl@val+1
 14040  00E5EC  0100               	movlb	0	; () banked
 14041  00E5EE  0E00               	movlw	0
 14042  00E5F0  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14043  00E5F2  0EFF               	movlw	-1
 14044  00E5F4  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 14045  00E5F6  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 14046  00E5F8  0E01               	movlw	1
 14047  00E5FA  EC6A  F075         	call	___xxtofl
 14048  00E5FE  C060  F072         	movff	?___xxtofl,___flmul@a
 14049  00E602  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 14050  00E606  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 14051  00E60A  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 14052  00E60E  EC78  F060         	call	___flmul	;wreg free
 14053  00E612  C06E  F0C0         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 14054  00E616  C06F  F0C1         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 14055  00E61A  C070  F0C2         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 14056  00E61E  C071  F0C3         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 14057                           
 14058                           ;motor.c: 567: divide_position_float /= (float) config.full_circle_in_steps;
 14059  00E622  C0C0  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 14060  00E626  C0C1  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 14061  00E62A  C0C2  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 14062  00E62E  C0C3  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 14063  00E632  C179  F060         	movff	_config,___xxtofl@val
 14064  00E636  C17A  F061         	movff	_config+1,___xxtofl@val+1
 14065  00E63A  C17B  F062         	movff	_config+2,___xxtofl@val+2
 14066  00E63E  C17C  F063         	movff	_config+3,___xxtofl@val+3
 14067  00E642  0E00               	movlw	0
 14068  00E644  EC6A  F075         	call	___xxtofl
 14069  00E648  C060  F072         	movff	?___xxtofl,___fldiv@a
 14070  00E64C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 14071  00E650  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 14072  00E654  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 14073  00E658  EC9D  F066         	call	___fldiv	;wreg free
 14074  00E65C  C06E  F0C0         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 14075  00E660  C06F  F0C1         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 14076  00E664  C070  F0C2         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 14077  00E668  C071  F0C3         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 14078                           
 14079                           ;motor.c: 568: divide_position_float += 0.5;
 14080  00E66C  C0C0  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 14081  00E670  C0C1  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 14082  00E674  C0C2  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 14083  00E678  C0C3  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 14084  00E67C  0E00               	movlw	0
 14085  00E67E  0100               	movlb	0	; () banked
 14086  00E680  6F64               	movwf	___fladd@a& (0+255),b
 14087  00E682  0E00               	movlw	0
 14088  00E684  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14089  00E686  0E00               	movlw	0
 14090  00E688  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14091  00E68A  0E3F               	movlw	63
 14092  00E68C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14093  00E68E  EC21  F062         	call	___fladd	;wreg free
 14094  00E692  C060  F0C0         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 14095  00E696  C061  F0C1         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 14096  00E69A  C062  F0C2         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 14097  00E69E  C063  F0C3         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 14098                           
 14099                           ;motor.c: 569: nearest_divide_position = (int16_t) divide_position_float;
 14100  00E6A2  C0C0  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 14101  00E6A6  C0C1  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 14102  00E6AA  C0C2  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 14103  00E6AE  C0C3  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 14104  00E6B2  EC32  F081         	call	___fltol	;wreg free
 14105  00E6B6  C060  F0BE         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 14106  00E6BA  C061  F0BF         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 14107                           
 14108                           ;motor.c: 572: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 14109  00E6BE  C0BE  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 14110  00E6C2  C0BF  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 14111  00E6C6  ECDB  F07F         	call	__step_position_from_divide_position	;wreg free
 14112  00E6CA  C087  F0BA         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 14113  00E6CE  C088  F0BB         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 14114  00E6D2  C089  F0BC         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 14115  00E6D6  C08A  F0BD         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 14116                           
 14117                           ;motor.c: 575: os.divide_position = nearest_divide_position;
 14118  00E6DA  C0BE  F0E9         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 14119  00E6DE  C0BF  F0EA         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 14120                           
 14121                           ;motor.c: 576: motor_go_to_steps_position(nearest_position_in_steps);
 14122  00E6E2  C0BA  F09E         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 14123  00E6E6  C0BB  F09F         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 14124  00E6EA  C0BC  F0A0         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 14125  00E6EE  C0BD  F0A1         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 14126  00E6F2  ECBF  F063         	call	_motor_go_to_steps_position	;wreg free
 14127  00E6F6  0012               	return		;funcret
 14128  00E6F8                     __end_of_motor_divide_jump_to_nearest:
 14129                           	opt stack 0
 14130                           tblptru	equ	0xFF8
 14131                           tblptrh	equ	0xFF7
 14132                           tblptrl	equ	0xFF6
 14133                           tablat	equ	0xFF5
 14134                           prodh	equ	0xFF4
 14135                           prodl	equ	0xFF3
 14136                           intcon	equ	0xFF2
 14137                           postinc0	equ	0xFEE
 14138                           wreg	equ	0xFE8
 14139                           postdec1	equ	0xFE5
 14140                           plusw1	equ	0xFE3
 14141                           fsr1h	equ	0xFE2
 14142                           fsr1l	equ	0xFE1
 14143                           indf2	equ	0xFDF
 14144                           postinc2	equ	0xFDE
 14145                           postdec2	equ	0xFDD
 14146                           plusw2	equ	0xFDB
 14147                           fsr2h	equ	0xFDA
 14148                           fsr2l	equ	0xFD9
 14149                           status	equ	0xFD8
 14150                           
 14151 ;; *************** function ___fladd *****************
 14152 ;; Defined at:
 14153 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;  b               4    0[BANK0 ] void 
 14156 ;;  a               4    4[BANK0 ] void 
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;  grs             1   19[BANK0 ] unsigned char 
 14159 ;;  bexp            1   18[BANK0 ] unsigned char 
 14160 ;;  aexp            1   17[BANK0 ] unsigned char 
 14161 ;;  signs           1   16[BANK0 ] unsigned char 
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  4    0[BANK0 ] unsigned char 
 14164 ;; Registers used:
 14165 ;;		wreg, status,2, status,0
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14171 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14172 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14173 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14174 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14175 ;;Total ram usage:       20 bytes
 14176 ;; Hardware stack levels used:    1
 14177 ;; Hardware stack levels required when called:   10
 14178 ;; This function calls:
 14179 ;;		Nothing
 14180 ;; This function is called by:
 14181 ;;		_motor_divide_jump_to_nearest
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text46
 14186  00C442                     __ptext46:
 14187                           	opt stack 0
 14188  00C442                     ___fladd:
 14189                           	opt stack 18
 14190                           
 14191                           ;incstack = 0
 14192  00C442  0100               	movlb	0	; () banked
 14193  00C444  5163               	movf	(___fladd@b+3)& (0+255),w,b
 14194  00C446  0B80               	andlw	128
 14195  00C448  6F70               	movwf	___fladd@signs& (0+255),b
 14196  00C44A  5163               	movf	(___fladd@b+3)& (0+255),w,b
 14197  00C44C  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 14198  00C44E  6F72               	movwf	___fladd@bexp& (0+255),b
 14199                           
 14200                           ; BSR set to: 0
 14201  00C450  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
 14202                           
 14203                           ; BSR set to: 0
 14204  00C452  8172               	bsf	___fladd@bexp& (0+255),0,b
 14205                           
 14206                           ; BSR set to: 0
 14207                           
 14208                           ; BSR set to: 0
 14209  00C454  5172               	movf	___fladd@bexp& (0+255),w,b
 14210  00C456  B4D8               	btfsc	status,2,c
 14211  00C458  D00D               	goto	l3202
 14212                           
 14213                           ; BSR set to: 0
 14214  00C45A  2972               	incf	___fladd@bexp& (0+255),w,b
 14215  00C45C  A4D8               	btfss	status,2,c
 14216  00C45E  D008               	goto	l3203
 14217                           
 14218                           ; BSR set to: 0
 14219  00C460  0E00               	movlw	0
 14220  00C462  6F60               	movwf	___fladd@b& (0+255),b
 14221  00C464  0E00               	movlw	0
 14222  00C466  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14223  00C468  0E00               	movlw	0
 14224  00C46A  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14225  00C46C  0E00               	movlw	0
 14226  00C46E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14227  00C470                     l3203:
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  00C470  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 14233  00C472  D006               	goto	L18
 14234  00C474                     l3202:
 14235                           
 14236                           ; BSR set to: 0
 14237                           
 14238                           ; BSR set to: 0
 14239  00C474  0E00               	movlw	0
 14240  00C476  6F60               	movwf	___fladd@b& (0+255),b
 14241  00C478  0E00               	movlw	0
 14242  00C47A  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14243  00C47C  0E00               	movlw	0
 14244  00C47E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14245  00C480                     L18:
 14246  00C480  0E00               	movlw	0
 14247  00C482  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14248                           
 14249                           ; BSR set to: 0
 14250                           
 14251                           ; BSR set to: 0
 14252  00C484  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14253  00C486  0B80               	andlw	128
 14254  00C488  6F71               	movwf	___fladd@aexp& (0+255),b
 14255                           
 14256                           ; BSR set to: 0
 14257  00C48A  5170               	movf	___fladd@signs& (0+255),w,b
 14258  00C48C  1971               	xorwf	___fladd@aexp& (0+255),w,b
 14259  00C48E  A4D8               	btfss	status,2,c
 14260                           
 14261                           ; BSR set to: 0
 14262  00C490  8D70               	bsf	___fladd@signs& (0+255),6,b
 14263                           
 14264                           ; BSR set to: 0
 14265                           
 14266                           ; BSR set to: 0
 14267  00C492  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14268  00C494  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 14269  00C496  6F71               	movwf	___fladd@aexp& (0+255),b
 14270                           
 14271                           ; BSR set to: 0
 14272  00C498  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
 14273                           
 14274                           ; BSR set to: 0
 14275  00C49A  8171               	bsf	___fladd@aexp& (0+255),0,b
 14276                           
 14277                           ; BSR set to: 0
 14278                           
 14279                           ; BSR set to: 0
 14280  00C49C  5171               	movf	___fladd@aexp& (0+255),w,b
 14281  00C49E  B4D8               	btfsc	status,2,c
 14282  00C4A0  D00D               	goto	l3207
 14283                           
 14284                           ; BSR set to: 0
 14285  00C4A2  2971               	incf	___fladd@aexp& (0+255),w,b
 14286  00C4A4  A4D8               	btfss	status,2,c
 14287  00C4A6  D008               	goto	l3208
 14288                           
 14289                           ; BSR set to: 0
 14290  00C4A8  0E00               	movlw	0
 14291  00C4AA  6F64               	movwf	___fladd@a& (0+255),b
 14292  00C4AC  0E00               	movlw	0
 14293  00C4AE  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14294  00C4B0  0E00               	movlw	0
 14295  00C4B2  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14296  00C4B4  0E00               	movlw	0
 14297  00C4B6  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14298  00C4B8                     l3208:
 14299                           
 14300                           ; BSR set to: 0
 14301                           
 14302                           ; BSR set to: 0
 14303  00C4B8  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 14304  00C4BA  D006               	goto	L19
 14305  00C4BC                     l3207:
 14306                           
 14307                           ; BSR set to: 0
 14308                           
 14309                           ; BSR set to: 0
 14310  00C4BC  0E00               	movlw	0
 14311  00C4BE  6F64               	movwf	___fladd@a& (0+255),b
 14312  00C4C0  0E00               	movlw	0
 14313  00C4C2  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14314  00C4C4  0E00               	movlw	0
 14315  00C4C6  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14316  00C4C8                     L19:
 14317  00C4C8  0E00               	movlw	0
 14318  00C4CA  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14319                           
 14320                           ; BSR set to: 0
 14321                           
 14322                           ; BSR set to: 0
 14323  00C4CC  5172               	movf	___fladd@bexp& (0+255),w,b
 14324  00C4CE  5D71               	subwf	___fladd@aexp& (0+255),w,b
 14325  00C4D0  B0D8               	btfsc	status,0,c
 14326  00C4D2  D022               	goto	l3210
 14327                           
 14328                           ; BSR set to: 0
 14329  00C4D4  AD70               	btfss	___fladd@signs& (0+255),6,b
 14330  00C4D6  D002               	goto	l3211
 14331                           
 14332                           ; BSR set to: 0
 14333  00C4D8  0E80               	movlw	128
 14334  00C4DA  1B70               	xorwf	___fladd@signs& (0+255),f,b
 14335  00C4DC                     l3211:
 14336                           
 14337                           ; BSR set to: 0
 14338                           
 14339                           ; BSR set to: 0
 14340  00C4DC  C072  F073         	movff	___fladd@bexp,___fladd@grs
 14341                           
 14342                           ; BSR set to: 0
 14343  00C4E0  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 14344                           
 14345                           ; BSR set to: 0
 14346  00C4E4  C073  F071         	movff	___fladd@grs,___fladd@aexp
 14347                           
 14348                           ; BSR set to: 0
 14349  00C4E8  C060  F073         	movff	___fladd@b,___fladd@grs
 14350                           
 14351                           ; BSR set to: 0
 14352  00C4EC  C064  F060         	movff	___fladd@a,___fladd@b
 14353                           
 14354                           ; BSR set to: 0
 14355  00C4F0  C073  F064         	movff	___fladd@grs,___fladd@a
 14356                           
 14357                           ; BSR set to: 0
 14358  00C4F4  C061  F073         	movff	___fladd@b+1,___fladd@grs
 14359                           
 14360                           ; BSR set to: 0
 14361  00C4F8  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 14362                           
 14363                           ; BSR set to: 0
 14364  00C4FC  C073  F065         	movff	___fladd@grs,___fladd@a+1
 14365                           
 14366                           ; BSR set to: 0
 14367  00C500  C062  F073         	movff	___fladd@b+2,___fladd@grs
 14368                           
 14369                           ; BSR set to: 0
 14370  00C504  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 14371                           
 14372                           ; BSR set to: 0
 14373  00C508  C073  F066         	movff	___fladd@grs,___fladd@a+2
 14374                           
 14375                           ; BSR set to: 0
 14376  00C50C  C063  F073         	movff	___fladd@b+3,___fladd@grs
 14377                           
 14378                           ; BSR set to: 0
 14379  00C510  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 14380                           
 14381                           ; BSR set to: 0
 14382  00C514  C073  F067         	movff	___fladd@grs,___fladd@a+3
 14383  00C518                     l3210:
 14384                           
 14385                           ; BSR set to: 0
 14386                           
 14387                           ; BSR set to: 0
 14388  00C518  0E00               	movlw	0
 14389  00C51A  6F73               	movwf	___fladd@grs& (0+255),b
 14390                           
 14391                           ; BSR set to: 0
 14392  00C51C  5172               	movf	___fladd@bexp& (0+255),w,b
 14393  00C51E  6F68               	movwf	??___fladd& (0+255),b
 14394  00C520  6B69               	clrf	(??___fladd+1)& (0+255),b
 14395  00C522  1F68               	comf	??___fladd& (0+255),f,b
 14396  00C524  1F69               	comf	(??___fladd+1)& (0+255),f,b
 14397  00C526  4B68               	infsnz	??___fladd& (0+255),f,b
 14398  00C528  2B69               	incf	(??___fladd+1)& (0+255),f,b
 14399  00C52A  5171               	movf	___fladd@aexp& (0+255),w,b
 14400  00C52C  6F6A               	movwf	(??___fladd+2)& (0+255),b
 14401  00C52E  6B6B               	clrf	(??___fladd+3)& (0+255),b
 14402  00C530  5168               	movf	??___fladd& (0+255),w,b
 14403  00C532  276A               	addwf	(??___fladd+2)& (0+255),f,b
 14404  00C534  5169               	movf	(??___fladd+1)& (0+255),w,b
 14405  00C536  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 14406  00C538  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 14407  00C53A  D02C               	goto	l3214
 14408  00C53C  516B               	movf	(??___fladd+3)& (0+255),w,b
 14409  00C53E  E104               	bnz	u20100
 14410  00C540  0E1A               	movlw	26
 14411  00C542  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 14412  00C544  A0D8               	btfss	status,0,c
 14413  00C546  D026               	goto	l3214
 14414  00C548                     u20100:
 14415                           
 14416                           ; BSR set to: 0
 14417  00C548  5160               	movf	___fladd@b& (0+255),w,b
 14418  00C54A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 14419  00C54C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 14420  00C54E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 14421  00C550  B4D8               	btfsc	status,2,c
 14422  00C552  D002               	goto	u20110
 14423  00C554  0E01               	movlw	1
 14424  00C556  D001               	goto	u20120
 14425  00C558                     u20110:
 14426  00C558  0E00               	movlw	0
 14427  00C55A                     u20120:
 14428  00C55A  6F73               	movwf	___fladd@grs& (0+255),b
 14429                           
 14430                           ; BSR set to: 0
 14431  00C55C  0E00               	movlw	0
 14432  00C55E  6F60               	movwf	___fladd@b& (0+255),b
 14433  00C560  0E00               	movlw	0
 14434  00C562  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14435  00C564  0E00               	movlw	0
 14436  00C566  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14437  00C568  0E00               	movlw	0
 14438  00C56A  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14439                           
 14440                           ; BSR set to: 0
 14441  00C56C  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 14442  00C570  D015               	goto	u20150
 14443  00C572                     l3215:
 14444                           
 14445                           ; BSR set to: 0
 14446  00C572  A173               	btfss	___fladd@grs& (0+255),0,b
 14447  00C574  D005               	goto	l3216
 14448                           
 14449                           ; BSR set to: 0
 14450  00C576  90D8               	bcf	status,0,c
 14451  00C578  3173               	rrcf	___fladd@grs& (0+255),w,b
 14452  00C57A  0901               	iorlw	1
 14453  00C57C  6F73               	movwf	___fladd@grs& (0+255),b
 14454  00C57E  D002               	goto	l3217
 14455  00C580                     l3216:
 14456                           
 14457                           ; BSR set to: 0
 14458                           
 14459                           ; BSR set to: 0
 14460  00C580  90D8               	bcf	status,0,c
 14461  00C582  3373               	rrcf	___fladd@grs& (0+255),f,b
 14462  00C584                     l3217:
 14463                           
 14464                           ; BSR set to: 0
 14465                           
 14466                           ; BSR set to: 0
 14467  00C584  B160               	btfsc	___fladd@b& (0+255),0,b
 14468                           
 14469                           ; BSR set to: 0
 14470  00C586  8F73               	bsf	___fladd@grs& (0+255),7,b
 14471                           
 14472                           ; BSR set to: 0
 14473                           
 14474                           ; BSR set to: 0
 14475  00C588  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 14476  00C58A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 14477  00C58C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 14478  00C58E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 14479  00C590  3360               	rrcf	___fladd@b& (0+255),f,b
 14480                           
 14481                           ; BSR set to: 0
 14482  00C592  2B72               	incf	___fladd@bexp& (0+255),f,b
 14483  00C594                     l3214:
 14484                           
 14485                           ; BSR set to: 0
 14486  00C594  5171               	movf	___fladd@aexp& (0+255),w,b
 14487  00C596  5D72               	subwf	___fladd@bexp& (0+255),w,b
 14488  00C598  A0D8               	btfss	status,0,c
 14489  00C59A  D7EB               	goto	l3215
 14490  00C59C                     u20150:
 14491                           
 14492                           ; BSR set to: 0
 14493                           
 14494                           ; BSR set to: 0
 14495  00C59C  BD70               	btfsc	___fladd@signs& (0+255),6,b
 14496  00C59E  D028               	goto	l3220
 14497                           
 14498                           ; BSR set to: 0
 14499  00C5A0  5172               	movf	___fladd@bexp& (0+255),w,b
 14500  00C5A2  A4D8               	btfss	status,2,c
 14501  00C5A4  D009               	goto	l3221
 14502                           
 14503                           ; BSR set to: 0
 14504  00C5A6  0E00               	movlw	0
 14505  00C5A8  6F60               	movwf	?___fladd& (0+255),b
 14506  00C5AA  0E00               	movlw	0
 14507  00C5AC  6F61               	movwf	(?___fladd+1)& (0+255),b
 14508  00C5AE  0E00               	movlw	0
 14509  00C5B0  6F62               	movwf	(?___fladd+2)& (0+255),b
 14510  00C5B2  0E00               	movlw	0
 14511  00C5B4  6F63               	movwf	(?___fladd+3)& (0+255),b
 14512                           
 14513                           ; BSR set to: 0
 14514  00C5B6  0012               	return	
 14515  00C5B8                     l3221:
 14516                           
 14517                           ; BSR set to: 0
 14518                           
 14519                           ; BSR set to: 0
 14520  00C5B8  5164               	movf	___fladd@a& (0+255),w,b
 14521  00C5BA  2760               	addwf	___fladd@b& (0+255),f,b
 14522  00C5BC  5165               	movf	(___fladd@a+1)& (0+255),w,b
 14523  00C5BE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 14524  00C5C0  5166               	movf	(___fladd@a+2)& (0+255),w,b
 14525  00C5C2  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 14526  00C5C4  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14527  00C5C6  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 14528                           
 14529                           ; BSR set to: 0
 14530  00C5C8  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 14531  00C5CA  D082               	goto	u20280
 14532                           
 14533                           ; BSR set to: 0
 14534  00C5CC  A173               	btfss	___fladd@grs& (0+255),0,b
 14535  00C5CE  D005               	goto	l3224
 14536                           
 14537                           ; BSR set to: 0
 14538  00C5D0  90D8               	bcf	status,0,c
 14539  00C5D2  3173               	rrcf	___fladd@grs& (0+255),w,b
 14540  00C5D4  0901               	iorlw	1
 14541  00C5D6  6F73               	movwf	___fladd@grs& (0+255),b
 14542  00C5D8  D002               	goto	l3225
 14543  00C5DA                     l3224:
 14544                           
 14545                           ; BSR set to: 0
 14546                           
 14547                           ; BSR set to: 0
 14548  00C5DA  90D8               	bcf	status,0,c
 14549  00C5DC  3373               	rrcf	___fladd@grs& (0+255),f,b
 14550  00C5DE                     l3225:
 14551                           
 14552                           ; BSR set to: 0
 14553                           
 14554                           ; BSR set to: 0
 14555  00C5DE  B160               	btfsc	___fladd@b& (0+255),0,b
 14556                           
 14557                           ; BSR set to: 0
 14558  00C5E0  8F73               	bsf	___fladd@grs& (0+255),7,b
 14559                           
 14560                           ; BSR set to: 0
 14561                           
 14562                           ; BSR set to: 0
 14563  00C5E2  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 14564  00C5E4  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 14565  00C5E6  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 14566  00C5E8  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 14567  00C5EA  3360               	rrcf	___fladd@b& (0+255),f,b
 14568                           
 14569                           ; BSR set to: 0
 14570  00C5EC  2B72               	incf	___fladd@bexp& (0+255),f,b
 14571                           
 14572                           ; BSR set to: 0
 14573  00C5EE  D070               	goto	u20280
 14574  00C5F0                     l3220:
 14575                           
 14576                           ; BSR set to: 0
 14577                           
 14578                           ; BSR set to: 0
 14579  00C5F0  5164               	movf	___fladd@a& (0+255),w,b
 14580  00C5F2  5D60               	subwf	___fladd@b& (0+255),w,b
 14581  00C5F4  5165               	movf	(___fladd@a+1)& (0+255),w,b
 14582  00C5F6  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 14583  00C5F8  5166               	movf	(___fladd@a+2)& (0+255),w,b
 14584  00C5FA  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 14585  00C5FC  5163               	movf	(___fladd@b+3)& (0+255),w,b
 14586  00C5FE  0A80               	xorlw	128
 14587  00C600  6F68               	movwf	??___fladd& (0+255),b
 14588  00C602  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14589  00C604  0A80               	xorlw	128
 14590  00C606  5968               	subwfb	??___fladd& (0+255),w,b
 14591  00C608  B0D8               	btfsc	status,0,c
 14592  00C60A  D036               	goto	l3228
 14593                           
 14594                           ; BSR set to: 0
 14595  00C60C  C060  F068         	movff	___fladd@b,??___fladd
 14596  00C610  C061  F069         	movff	___fladd@b+1,??___fladd+1
 14597  00C614  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 14598  00C618  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 14599  00C61C  1F68               	comf	??___fladd& (0+255),f,b
 14600  00C61E  1F69               	comf	(??___fladd+1)& (0+255),f,b
 14601  00C620  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 14602  00C622  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 14603  00C624  2B68               	incf	??___fladd& (0+255),f,b
 14604  00C626  0E00               	movlw	0
 14605  00C628  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 14606  00C62A  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 14607  00C62C  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 14608  00C62E  5164               	movf	___fladd@a& (0+255),w,b
 14609  00C630  2568               	addwf	??___fladd& (0+255),w,b
 14610  00C632  6F6C               	movwf	(??___fladd+4)& (0+255),b
 14611  00C634  5165               	movf	(___fladd@a+1)& (0+255),w,b
 14612  00C636  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 14613  00C638  6F6D               	movwf	(??___fladd+5)& (0+255),b
 14614  00C63A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 14615  00C63C  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 14616  00C63E  6F6E               	movwf	(??___fladd+6)& (0+255),b
 14617  00C640  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14618  00C642  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 14619  00C644  6F6F               	movwf	(??___fladd+7)& (0+255),b
 14620  00C646  0EFF               	movlw	255
 14621  00C648  256C               	addwf	(??___fladd+4)& (0+255),w,b
 14622  00C64A  6F60               	movwf	___fladd@b& (0+255),b
 14623  00C64C  0EFF               	movlw	255
 14624  00C64E  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 14625  00C650  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14626  00C652  0EFF               	movlw	255
 14627  00C654  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 14628  00C656  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14629  00C658  0EFF               	movlw	255
 14630  00C65A  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 14631  00C65C  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14632  00C65E  0E80               	movlw	128
 14633  00C660  1B70               	xorwf	___fladd@signs& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636  00C662  6D73               	negf	___fladd@grs& (0+255),b
 14637                           
 14638                           ; BSR set to: 0
 14639  00C664  5173               	movf	___fladd@grs& (0+255),w,b
 14640  00C666  A4D8               	btfss	status,2,c
 14641  00C668  D00F               	goto	l3230
 14642                           
 14643                           ; BSR set to: 0
 14644  00C66A  0E01               	movlw	1
 14645  00C66C  2760               	addwf	___fladd@b& (0+255),f,b
 14646  00C66E  0E00               	movlw	0
 14647  00C670  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 14648  00C672  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 14649  00C674  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 14650                           
 14651                           ; BSR set to: 0
 14652  00C676  D008               	goto	l3230
 14653  00C678                     l3228:
 14654                           
 14655                           ; BSR set to: 0
 14656                           
 14657                           ; BSR set to: 0
 14658  00C678  5164               	movf	___fladd@a& (0+255),w,b
 14659  00C67A  5F60               	subwf	___fladd@b& (0+255),f,b
 14660  00C67C  5165               	movf	(___fladd@a+1)& (0+255),w,b
 14661  00C67E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 14662  00C680  5166               	movf	(___fladd@a+2)& (0+255),w,b
 14663  00C682  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 14664  00C684  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14665  00C686  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 14666  00C688                     l3230:
 14667                           
 14668                           ; BSR set to: 0
 14669  00C688  5160               	movf	___fladd@b& (0+255),w,b
 14670  00C68A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 14671  00C68C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 14672  00C68E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 14673  00C690  A4D8               	btfss	status,2,c
 14674  00C692  D01C               	goto	l3237
 14675                           
 14676                           ; BSR set to: 0
 14677  00C694  5173               	movf	___fladd@grs& (0+255),w,b
 14678  00C696  A4D8               	btfss	status,2,c
 14679  00C698  D019               	goto	l3237
 14680                           
 14681                           ; BSR set to: 0
 14682  00C69A  0E00               	movlw	0
 14683  00C69C  6F60               	movwf	?___fladd& (0+255),b
 14684  00C69E  0E00               	movlw	0
 14685  00C6A0  6F61               	movwf	(?___fladd+1)& (0+255),b
 14686  00C6A2  0E00               	movlw	0
 14687  00C6A4  6F62               	movwf	(?___fladd+2)& (0+255),b
 14688  00C6A6  0E00               	movlw	0
 14689  00C6A8  6F63               	movwf	(?___fladd+3)& (0+255),b
 14690                           
 14691                           ; BSR set to: 0
 14692  00C6AA  0012               	return	
 14693  00C6AC                     
 14694                           ; BSR set to: 0
 14695                           
 14696                           ; BSR set to: 0
 14697  00C6AC  90D8               	bcf	status,0,c
 14698  00C6AE  3760               	rlcf	___fladd@b& (0+255),f,b
 14699  00C6B0  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 14700  00C6B2  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 14701  00C6B4  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 14702                           
 14703                           ; BSR set to: 0
 14704  00C6B6  BF73               	btfsc	___fladd@grs& (0+255),7,b
 14705                           
 14706                           ; BSR set to: 0
 14707  00C6B8  8160               	bsf	___fladd@b& (0+255),0,b
 14708                           
 14709                           ; BSR set to: 0
 14710                           
 14711                           ; BSR set to: 0
 14712  00C6BA  A173               	btfss	___fladd@grs& (0+255),0,b
 14713  00C6BC  D002               	goto	l3235
 14714                           
 14715                           ; BSR set to: 0
 14716  00C6BE  80D8               	bsf	status,0,c
 14717  00C6C0  D001               	goto	L20
 14718  00C6C2                     l3235:
 14719                           
 14720                           ; BSR set to: 0
 14721                           
 14722                           ; BSR set to: 0
 14723  00C6C2  90D8               	bcf	status,0,c
 14724  00C6C4                     L20:
 14725  00C6C4  3773               	rlcf	___fladd@grs& (0+255),f,b
 14726                           
 14727                           ; BSR set to: 0
 14728                           
 14729                           ; BSR set to: 0
 14730  00C6C6  5172               	movf	___fladd@bexp& (0+255),w,b
 14731  00C6C8  A4D8               	btfss	status,2,c
 14732                           
 14733                           ; BSR set to: 0
 14734  00C6CA  0772               	decf	___fladd@bexp& (0+255),f,b
 14735  00C6CC                     l3237:
 14736                           
 14737                           ; BSR set to: 0
 14738                           
 14739                           ; BSR set to: 0
 14740                           
 14741                           ; BSR set to: 0
 14742  00C6CC  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 14743  00C6CE  D7EE               	goto	l3233
 14744  00C6D0                     u20280:
 14745                           
 14746                           ; BSR set to: 0
 14747                           
 14748                           ; BSR set to: 0
 14749                           
 14750                           ; BSR set to: 0
 14751  00C6D0  0E00               	movlw	0
 14752  00C6D2  6F71               	movwf	___fladd@aexp& (0+255),b
 14753                           
 14754                           ; BSR set to: 0
 14755  00C6D4  AF73               	btfss	___fladd@grs& (0+255),7,b
 14756  00C6D6  D00A               	goto	l3242
 14757                           
 14758                           ; BSR set to: 0
 14759  00C6D8  C073  F068         	movff	___fladd@grs,??___fladd
 14760  00C6DC  0E7F               	movlw	127
 14761  00C6DE  1768               	andwf	??___fladd& (0+255),f,b
 14762  00C6E0  A4D8               	btfss	status,2,c
 14763  00C6E2  D002               	goto	u20310
 14764                           
 14765                           ; BSR set to: 0
 14766                           
 14767                           ; BSR set to: 0
 14768  00C6E4  A160               	btfss	___fladd@b& (0+255),0,b
 14769  00C6E6  D002               	goto	l3242
 14770  00C6E8                     u20310:
 14771                           
 14772                           ; BSR set to: 0
 14773  00C6E8  0E01               	movlw	1
 14774  00C6EA  6F71               	movwf	___fladd@aexp& (0+255),b
 14775  00C6EC                     l3242:
 14776                           
 14777                           ; BSR set to: 0
 14778                           
 14779                           ; BSR set to: 0
 14780                           
 14781                           ; BSR set to: 0
 14782  00C6EC  5171               	movf	___fladd@aexp& (0+255),w,b
 14783  00C6EE  B4D8               	btfsc	status,2,c
 14784  00C6F0  D020               	goto	l3245
 14785                           
 14786                           ; BSR set to: 0
 14787  00C6F2  0E01               	movlw	1
 14788  00C6F4  2760               	addwf	___fladd@b& (0+255),f,b
 14789  00C6F6  0E00               	movlw	0
 14790  00C6F8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 14791  00C6FA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 14792  00C6FC  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 14793                           
 14794                           ; BSR set to: 0
 14795  00C6FE  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 14796  00C700  D018               	goto	l3245
 14797                           
 14798                           ; BSR set to: 0
 14799  00C702  C060  F068         	movff	___fladd@b,??___fladd
 14800  00C706  C061  F069         	movff	___fladd@b+1,??___fladd+1
 14801  00C70A  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 14802  00C70E  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 14803  00C712  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 14804  00C714  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 14805  00C716  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 14806  00C718  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 14807  00C71A  3368               	rrcf	??___fladd& (0+255),f,b
 14808  00C71C  C068  F060         	movff	??___fladd,___fladd@b
 14809  00C720  C069  F061         	movff	??___fladd+1,___fladd@b+1
 14810  00C724  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 14811  00C728  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 14812  00C72C  2972               	incf	___fladd@bexp& (0+255),w,b
 14813  00C72E  A4D8               	btfss	status,2,c
 14814                           
 14815                           ; BSR set to: 0
 14816  00C730  2B72               	incf	___fladd@bexp& (0+255),f,b
 14817  00C732                     l3245:
 14818                           
 14819                           ; BSR set to: 0
 14820                           
 14821                           ; BSR set to: 0
 14822                           
 14823                           ; BSR set to: 0
 14824                           
 14825                           ; BSR set to: 0
 14826  00C732  2972               	incf	___fladd@bexp& (0+255),w,b
 14827  00C734  B4D8               	btfsc	status,2,c
 14828  00C736  D003               	goto	u20360
 14829                           
 14830                           ; BSR set to: 0
 14831  00C738  5172               	movf	___fladd@bexp& (0+255),w,b
 14832  00C73A  A4D8               	btfss	status,2,c
 14833  00C73C  D00D               	goto	l3249
 14834  00C73E                     u20360:
 14835                           
 14836                           ; BSR set to: 0
 14837                           
 14838                           ; BSR set to: 0
 14839  00C73E  0E00               	movlw	0
 14840  00C740  6F60               	movwf	___fladd@b& (0+255),b
 14841  00C742  0E00               	movlw	0
 14842  00C744  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14843  00C746  0E00               	movlw	0
 14844  00C748  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14845  00C74A  0E00               	movlw	0
 14846  00C74C  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14847  00C74E  5172               	movf	___fladd@bexp& (0+255),w,b
 14848  00C750  A4D8               	btfss	status,2,c
 14849  00C752  D002               	goto	l3249
 14850                           
 14851                           ; BSR set to: 0
 14852  00C754  0E00               	movlw	0
 14853  00C756  6F70               	movwf	___fladd@signs& (0+255),b
 14854  00C758                     l3249:
 14855                           
 14856                           ; BSR set to: 0
 14857                           
 14858                           ; BSR set to: 0
 14859                           
 14860                           ; BSR set to: 0
 14861  00C758  A172               	btfss	___fladd@bexp& (0+255),0,b
 14862  00C75A  D002               	goto	l3250
 14863                           
 14864                           ; BSR set to: 0
 14865  00C75C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 14866  00C75E  D001               	goto	l3251
 14867  00C760                     l3250:
 14868                           
 14869                           ; BSR set to: 0
 14870                           
 14871                           ; BSR set to: 0
 14872  00C760  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 14873  00C762                     l3251:
 14874                           
 14875                           ; BSR set to: 0
 14876                           
 14877                           ; BSR set to: 0
 14878  00C762  90D8               	bcf	status,0,c
 14879  00C764  3172               	rrcf	___fladd@bexp& (0+255),w,b
 14880  00C766  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14881                           
 14882                           ; BSR set to: 0
 14883  00C768  BF70               	btfsc	___fladd@signs& (0+255),7,b
 14884                           
 14885                           ; BSR set to: 0
 14886  00C76A  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 14887                           
 14888                           ; BSR set to: 0
 14889                           
 14890                           ; BSR set to: 0
 14891  00C76C  C060  F060         	movff	___fladd@b,?___fladd
 14892  00C770  C061  F061         	movff	___fladd@b+1,?___fladd+1
 14893  00C774  C062  F062         	movff	___fladd@b+2,?___fladd+2
 14894  00C778  C063  F063         	movff	___fladd@b+3,?___fladd+3
 14895  00C77C  0012               	return	
 14896  00C77E                     __end_of___fladd:
 14897                           	opt stack 0
 14898                           tblptru	equ	0xFF8
 14899                           tblptrh	equ	0xFF7
 14900                           tblptrl	equ	0xFF6
 14901                           tablat	equ	0xFF5
 14902                           prodh	equ	0xFF4
 14903                           prodl	equ	0xFF3
 14904                           intcon	equ	0xFF2
 14905                           postinc0	equ	0xFEE
 14906                           wreg	equ	0xFE8
 14907                           postdec1	equ	0xFE5
 14908                           plusw1	equ	0xFE3
 14909                           fsr1h	equ	0xFE2
 14910                           fsr1l	equ	0xFE1
 14911                           indf2	equ	0xFDF
 14912                           postinc2	equ	0xFDE
 14913                           postdec2	equ	0xFDD
 14914                           plusw2	equ	0xFDB
 14915                           fsr2h	equ	0xFDA
 14916                           fsr2l	equ	0xFD9
 14917                           status	equ	0xFD8
 14918                           
 14919 ;; *************** function _motor_divide_jump *****************
 14920 ;; Defined at:
 14921 ;;		line 528 in file "motor.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;		None
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;  target_posit    4   91[BANK0 ] unsigned long 
 14926 ;;  target_divid    2   95[BANK0 ] int 
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14937 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14939 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14940 ;;Total ram usage:        7 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:   13
 14943 ;; This function calls:
 14944 ;;		__step_position_from_divide_position
 14945 ;;		_motor_go_to_steps_position
 14946 ;; This function is called by:
 14947 ;;		_encoder_statemachine
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           	psect	text47
 14952  0113DC                     __ptext47:
 14953                           	opt stack 0
 14954  0113DC                     _motor_divide_jump:
 14955                           	opt stack 16
 14956                           
 14957                           ;motor.c: 530: int16_t target_divide_position;;motor.c: 531: uint32_t target_position_in
      +                          _steps;;motor.c: 534: if(os.divide_jump_size>0)
 14958                           
 14959                           ; BSR set to: 0
 14960                           ;incstack = 0
 14961  0113DC  0100               	movlb	0	; () banked
 14962  0113DE  BFEC               	btfsc	(_os+25)& (0+255),7,b	;volatile
 14963  0113E0  D01C               	goto	l2433
 14964  0113E2  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 14965  0113E4  E103               	bnz	u21110
 14966  0113E6  05EB               	decf	(_os+24)& (0+255),w,b	;volatile
 14967  0113E8  A0D8               	btfss	status,0,c
 14968  0113EA  D017               	goto	l2433
 14969  0113EC                     u21110:
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;motor.c: 535: {;motor.c: 536: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 14973  0113EC  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 14974  0113EE  25E9               	addwf	(_os+22)& (0+255),w,b	;volatile
 14975  0113F0  6FBF               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 14976  0113F2  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 14977  0113F4  21EA               	addwfc	(_os+23)& (0+255),w,b	;volatile
 14978  0113F6  6FC0               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 14979                           
 14980                           ;motor.c: 537: if(target_divide_position>=os.division)
 14981  0113F8  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 14982  0113FA  5DBF               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 14983  0113FC  51C0               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 14984  0113FE  0A80               	xorlw	128
 14985  011400  6FBA               	movwf	??_motor_divide_jump& (0+255),b
 14986  011402  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 14987  011404  0A80               	xorlw	128
 14988  011406  59BA               	subwfb	??_motor_divide_jump& (0+255),w,b
 14989  011408  A0D8               	btfss	status,0,c
 14990  01140A  D015               	goto	l2436
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;motor.c: 538: {;motor.c: 539: target_divide_position -= os.division;
 14994  01140C  EE20  F0E6         	lfsr	2,_os+19	;volatile
 14995  011410  50DE               	movf	postinc2,w,c
 14996  011412  5FBF               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 14997  011414  50DD               	movf	postdec2,w,c
 14998  011416  5BC0               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;motor.c: 540: };motor.c: 541: }
 15002  011418  D00E               	goto	l2436
 15003  01141A                     l2433:
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;motor.c: 542: else;motor.c: 543: {;motor.c: 544: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 15007                           
 15008                           ; BSR set to: 0
 15009  01141A  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 15010  01141C  25E9               	addwf	(_os+22)& (0+255),w,b	;volatile
 15011  01141E  6FBF               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 15012  011420  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 15013  011422  21EA               	addwfc	(_os+23)& (0+255),w,b	;volatile
 15014  011424  6FC0               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 15015                           
 15016                           ;motor.c: 545: if(target_divide_position<0)
 15017  011426  AFC0               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 15018  011428  D006               	goto	l2436
 15019                           
 15020                           ; BSR set to: 0
 15021                           ;motor.c: 546: {;motor.c: 547: target_divide_position += os.division;
 15022  01142A  EE20  F0E6         	lfsr	2,_os+19	;volatile
 15023  01142E  50DE               	movf	postinc2,w,c
 15024  011430  27BF               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 15025  011432  50DD               	movf	postdec2,w,c
 15026  011434  23C0               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 15027  011436                     l2436:
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;motor.c: 548: };motor.c: 549: };motor.c: 552: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 15031                           
 15032                           ; BSR set to: 0
 15033                           
 15034                           ; BSR set to: 0
 15035  011436  C0BF  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 15036  01143A  C0C0  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 15037  01143E  ECDB  F07F         	call	__step_position_from_divide_position	;wreg free
 15038  011442  C087  F0BB         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 15039  011446  C088  F0BC         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 15040  01144A  C089  F0BD         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 15041  01144E  C08A  F0BE         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 15042                           
 15043                           ;motor.c: 555: os.divide_position = target_divide_position;
 15044  011452  C0BF  F0E9         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 15045  011456  C0C0  F0EA         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 15046                           
 15047                           ;motor.c: 556: motor_go_to_steps_position(target_position_in_steps);
 15048  01145A  C0BB  F09E         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 15049  01145E  C0BC  F09F         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 15050  011462  C0BD  F0A0         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 15051  011466  C0BE  F0A1         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 15052  01146A  ECBF  F063         	call	_motor_go_to_steps_position	;wreg free
 15053  01146E  0012               	return		;funcret
 15054  011470                     __end_of_motor_divide_jump:
 15055                           	opt stack 0
 15056                           tblptru	equ	0xFF8
 15057                           tblptrh	equ	0xFF7
 15058                           tblptrl	equ	0xFF6
 15059                           tablat	equ	0xFF5
 15060                           prodh	equ	0xFF4
 15061                           prodl	equ	0xFF3
 15062                           intcon	equ	0xFF2
 15063                           postinc0	equ	0xFEE
 15064                           wreg	equ	0xFE8
 15065                           postdec1	equ	0xFE5
 15066                           plusw1	equ	0xFE3
 15067                           fsr1h	equ	0xFE2
 15068                           fsr1l	equ	0xFE1
 15069                           indf2	equ	0xFDF
 15070                           postinc2	equ	0xFDE
 15071                           postdec2	equ	0xFDD
 15072                           plusw2	equ	0xFDB
 15073                           fsr2h	equ	0xFDA
 15074                           fsr2l	equ	0xFD9
 15075                           status	equ	0xFD8
 15076                           
 15077 ;; *************** function __step_position_from_divide_position *****************
 15078 ;; Defined at:
 15079 ;;		line 67 in file "motor.c"
 15080 ;; Parameters:    Size  Location     Type
 15081 ;;  divide_posit    2   39[BANK0 ] int 
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;  target_posit    4   43[BANK0 ] float 
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  4   39[BANK0 ] unsigned long 
 15086 ;; Registers used:
 15087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15094 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15096 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15097 ;;Total ram usage:        8 bytes
 15098 ;; Hardware stack levels used:    1
 15099 ;; Hardware stack levels required when called:   11
 15100 ;; This function calls:
 15101 ;;		___fldiv
 15102 ;;		___flmul
 15103 ;;		___fltol
 15104 ;;		___xxtofl
 15105 ;; This function is called by:
 15106 ;;		_motor_divide_jump
 15107 ;;		_motor_divide_jump_to_nearest
 15108 ;; This function uses a non-reentrant model
 15109 ;;
 15110                           
 15111                           	psect	text48
 15112  00FFB6                     __ptext48:
 15113                           	opt stack 0
 15114  00FFB6                     __step_position_from_divide_position:
 15115                           	opt stack 17
 15116                           
 15117                           ;motor.c: 69: float target_position;;motor.c: 72: target_position = (float) config.full_
      +                          circle_in_steps;
 15118                           
 15119                           ;incstack = 0
 15120  00FFB6  C179  F060         	movff	_config,___xxtofl@val
 15121  00FFBA  C17A  F061         	movff	_config+1,___xxtofl@val+1
 15122  00FFBE  C17B  F062         	movff	_config+2,___xxtofl@val+2
 15123  00FFC2  C17C  F063         	movff	_config+3,___xxtofl@val+3
 15124  00FFC6  0E00               	movlw	0
 15125  00FFC8  EC6A  F075         	call	___xxtofl
 15126  00FFCC  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 15127  00FFD0  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 15128  00FFD4  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 15129  00FFD8  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 15130                           
 15131                           ;motor.c: 73: target_position *= (float) divide_position;
 15132  00FFDC  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 15133  00FFE0  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 15134  00FFE4  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 15135  00FFE8  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 15136  00FFEC  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 15137  00FFF0  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 15138  00FFF4  0100               	movlb	0	; () banked
 15139  00FFF6  0E00               	movlw	0
 15140  00FFF8  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15141  00FFFA  0EFF               	movlw	-1
 15142  00FFFC  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15143  00FFFE  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15144  010000  0E01               	movlw	1
 15145  010002  EC6A  F075         	call	___xxtofl
 15146  010006  C060  F072         	movff	?___xxtofl,___flmul@a
 15147  01000A  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 15148  01000E  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 15149  010012  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 15150  010016  EC78  F060         	call	___flmul	;wreg free
 15151  01001A  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 15152  01001E  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 15153  010022  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 15154  010026  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 15155                           
 15156                           ;motor.c: 74: target_position /= (float) os.division;
 15157  01002A  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 15158  01002E  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 15159  010032  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 15160  010036  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 15161  01003A  EE20  F0E6         	lfsr	2,_os+19	;volatile
 15162  01003E  CFDE F060          	movff	postinc2,___xxtofl@val
 15163  010042  CFDD F061          	movff	postdec2,___xxtofl@val+1
 15164  010046  0100               	movlb	0	; () banked
 15165  010048  0E00               	movlw	0
 15166  01004A  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15167  01004C  0EFF               	movlw	-1
 15168  01004E  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15169  010050  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15170  010052  0E01               	movlw	1
 15171  010054  EC6A  F075         	call	___xxtofl
 15172  010058  C060  F072         	movff	?___xxtofl,___fldiv@a
 15173  01005C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 15174  010060  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 15175  010064  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 15176  010068  EC9D  F066         	call	___fldiv	;wreg free
 15177  01006C  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 15178  010070  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 15179  010074  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 15180  010078  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 15181                           
 15182                           ;motor.c: 76: return (uint32_t) target_position;
 15183  01007C  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 15184  010080  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 15185  010084  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 15186  010088  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 15187  01008C  EC32  F081         	call	___fltol	;wreg free
 15188  010090  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 15189  010094  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 15190  010098  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 15191  01009C  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 15192  0100A0  0012               	return	
 15193  0100A2                     __end_of__step_position_from_divide_position:
 15194                           	opt stack 0
 15195                           tblptru	equ	0xFF8
 15196                           tblptrh	equ	0xFF7
 15197                           tblptrl	equ	0xFF6
 15198                           tablat	equ	0xFF5
 15199                           prodh	equ	0xFF4
 15200                           prodl	equ	0xFF3
 15201                           intcon	equ	0xFF2
 15202                           postinc0	equ	0xFEE
 15203                           wreg	equ	0xFE8
 15204                           postdec1	equ	0xFE5
 15205                           plusw1	equ	0xFE3
 15206                           fsr1h	equ	0xFE2
 15207                           fsr1l	equ	0xFE1
 15208                           indf2	equ	0xFDF
 15209                           postinc2	equ	0xFDE
 15210                           postdec2	equ	0xFDD
 15211                           plusw2	equ	0xFDB
 15212                           fsr2h	equ	0xFDA
 15213                           fsr2l	equ	0xFD9
 15214                           status	equ	0xFD8
 15215                           
 15216 ;; *************** function _motor_change_speed *****************
 15217 ;; Defined at:
 15218 ;;		line 438 in file "motor.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  new_speed       2    0[BANK0 ] unsigned int 
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;		None
 15223 ;; Return value:  Size  Location     Type
 15224 ;;                  1    wreg      void 
 15225 ;; Registers used:
 15226 ;;		None
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15236 ;;Total ram usage:        2 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; Hardware stack levels required when called:   10
 15239 ;; This function calls:
 15240 ;;		Nothing
 15241 ;; This function is called by:
 15242 ;;		_encoder_statemachine
 15243 ;; This function uses a non-reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text49
 15247  012AA8                     __ptext49:
 15248                           	opt stack 0
 15249  012AA8                     _motor_change_speed:
 15250                           	opt stack 19
 15251                           
 15252                           ;motor.c: 440: motor_maximum_speed = new_speed;
 15253                           
 15254                           ;incstack = 0
 15255  012AA8  C060  F15B         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 15256  012AAC  C061  F15C         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 15257  012AB0  0012               	return		;funcret
 15258  012AB2                     __end_of_motor_change_speed:
 15259                           	opt stack 0
 15260                           tblptru	equ	0xFF8
 15261                           tblptrh	equ	0xFF7
 15262                           tblptrl	equ	0xFF6
 15263                           tablat	equ	0xFF5
 15264                           prodh	equ	0xFF4
 15265                           prodl	equ	0xFF3
 15266                           intcon	equ	0xFF2
 15267                           postinc0	equ	0xFEE
 15268                           wreg	equ	0xFE8
 15269                           postdec1	equ	0xFE5
 15270                           plusw1	equ	0xFE3
 15271                           fsr1h	equ	0xFE2
 15272                           fsr1l	equ	0xFE1
 15273                           indf2	equ	0xFDF
 15274                           postinc2	equ	0xFDE
 15275                           postdec2	equ	0xFDD
 15276                           plusw2	equ	0xFDB
 15277                           fsr2h	equ	0xFDA
 15278                           fsr2l	equ	0xFD9
 15279                           status	equ	0xFD8
 15280                           
 15281 ;; *************** function _motor_arc_move *****************
 15282 ;; Defined at:
 15283 ;;		line 579 in file "motor.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;  direction       1    wreg     enum E6622
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;  direction       1   62[BANK0 ] enum E6622
 15288 ;;  arc_in_steps    4   63[BANK0 ] float 
 15289 ;; Return value:  Size  Location     Type
 15290 ;;                  1    wreg      void 
 15291 ;; Registers used:
 15292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15293 ;; Tracked objects:
 15294 ;;		On entry : 0/0
 15295 ;;		On exit  : 0/0
 15296 ;;		Unchanged: 0/0
 15297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15299 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15301 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15302 ;;Total ram usage:        5 bytes
 15303 ;; Hardware stack levels used:    1
 15304 ;; Hardware stack levels required when called:   12
 15305 ;; This function calls:
 15306 ;;		___fldiv
 15307 ;;		___flmul
 15308 ;;		___fltol
 15309 ;;		___xxtofl
 15310 ;;		_motor_schedule_command
 15311 ;; This function is called by:
 15312 ;;		_encoder_statemachine
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text50
 15317  010184                     __ptext50:
 15318                           	opt stack 0
 15319  010184                     _motor_arc_move:
 15320                           	opt stack 17
 15321                           
 15322                           ;incstack = 0
 15323                           ;motor_arc_move@direction stored from wreg
 15324  010184  0100               	movlb	0	; () banked
 15325  010186  6F9E               	movwf	motor_arc_move@direction& (0+255),b
 15326                           
 15327                           ;motor.c: 581: float arc_in_steps;;motor.c: 583: arc_in_steps = (float) os.arc_size;
 15328  010188  C0EF  F060         	movff	_os+28,___xxtofl@val	;volatile
 15329  01018C  C0F0  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 15330  010190  C0F1  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 15331  010194  C0F2  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 15332  010198  0E01               	movlw	1
 15333  01019A  EC6A  F075         	call	___xxtofl
 15334  01019E  C060  F09F         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 15335  0101A2  C061  F0A0         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 15336  0101A6  C062  F0A1         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 15337  0101AA  C063  F0A2         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 15338                           
 15339                           ;motor.c: 584: arc_in_steps *= (float) config.full_circle_in_steps;
 15340  0101AE  C09F  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 15341  0101B2  C0A0  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 15342  0101B6  C0A1  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 15343  0101BA  C0A2  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 15344  0101BE  C179  F060         	movff	_config,___xxtofl@val
 15345  0101C2  C17A  F061         	movff	_config+1,___xxtofl@val+1
 15346  0101C6  C17B  F062         	movff	_config+2,___xxtofl@val+2
 15347  0101CA  C17C  F063         	movff	_config+3,___xxtofl@val+3
 15348  0101CE  0E00               	movlw	0
 15349  0101D0  EC6A  F075         	call	___xxtofl
 15350  0101D4  C060  F072         	movff	?___xxtofl,___flmul@a
 15351  0101D8  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 15352  0101DC  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 15353  0101E0  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 15354  0101E4  EC78  F060         	call	___flmul	;wreg free
 15355  0101E8  C06E  F09F         	movff	?___flmul,motor_arc_move@arc_in_steps
 15356  0101EC  C06F  F0A0         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 15357  0101F0  C070  F0A1         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 15358  0101F4  C071  F0A2         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 15359                           
 15360                           ;motor.c: 585: arc_in_steps /= (float) 36000;
 15361  0101F8  C09F  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 15362  0101FC  C0A0  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 15363  010200  C0A1  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 15364  010204  C0A2  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 15365  010208  0E00               	movlw	0
 15366  01020A  0100               	movlb	0	; () banked
 15367  01020C  6F72               	movwf	___fldiv@a& (0+255),b
 15368  01020E  0EA0               	movlw	160
 15369  010210  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 15370  010212  0E0C               	movlw	12
 15371  010214  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 15372  010216  0E47               	movlw	71
 15373  010218  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 15374  01021A  EC9D  F066         	call	___fldiv	;wreg free
 15375  01021E  C06E  F09F         	movff	?___fldiv,motor_arc_move@arc_in_steps
 15376  010222  C06F  F0A0         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 15377  010226  C070  F0A1         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 15378  01022A  C071  F0A2         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 15379                           
 15380                           ;motor.c: 586: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 15381  01022E  C09F  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 15382  010232  C0A0  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 15383  010236  C0A1  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 15384  01023A  C0A2  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 15385  01023E  EC32  F081         	call	___fltol	;wreg free
 15386  010242  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
 15387  010246  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
 15388  01024A  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
 15389  01024E  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
 15390  010252  C0F3  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
 15391  010256  C0F4  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 15392  01025A  0100               	movlb	0	; () banked
 15393  01025C  519E               	movf	motor_arc_move@direction& (0+255),w,b
 15394  01025E  EC1A  F088         	call	_motor_schedule_command
 15395  010262  0012               	return		;funcret
 15396  010264                     __end_of_motor_arc_move:
 15397                           	opt stack 0
 15398                           tblptru	equ	0xFF8
 15399                           tblptrh	equ	0xFF7
 15400                           tblptrl	equ	0xFF6
 15401                           tablat	equ	0xFF5
 15402                           prodh	equ	0xFF4
 15403                           prodl	equ	0xFF3
 15404                           intcon	equ	0xFF2
 15405                           postinc0	equ	0xFEE
 15406                           wreg	equ	0xFE8
 15407                           postdec1	equ	0xFE5
 15408                           plusw1	equ	0xFE3
 15409                           fsr1h	equ	0xFE2
 15410                           fsr1l	equ	0xFE1
 15411                           indf2	equ	0xFDF
 15412                           postinc2	equ	0xFDE
 15413                           postdec2	equ	0xFDD
 15414                           plusw2	equ	0xFDB
 15415                           fsr2h	equ	0xFDA
 15416                           fsr2l	equ	0xFD9
 15417                           status	equ	0xFD8
 15418                           
 15419 ;; *************** function ___flmul *****************
 15420 ;; Defined at:
 15421 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;  b               4   14[BANK0 ] void 
 15424 ;;  a               4   18[BANK0 ] void 
 15425 ;; Auto vars:     Size  Location     Type
 15426 ;;  prod            4   33[BANK0 ] struct .
 15427 ;;  grs             4   28[BANK0 ] unsigned long 
 15428 ;;  temp            2   37[BANK0 ] struct .
 15429 ;;  bexp            1   32[BANK0 ] unsigned char 
 15430 ;;  aexp            1   27[BANK0 ] unsigned char 
 15431 ;;  sign            1   26[BANK0 ] unsigned char 
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  4   14[BANK0 ] unsigned char 
 15434 ;; Registers used:
 15435 ;;		wreg, status,2, status,0, prodl, prodh
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15442 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15444 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15445 ;;Total ram usage:       25 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; Hardware stack levels required when called:   10
 15448 ;; This function calls:
 15449 ;;		Nothing
 15450 ;; This function is called by:
 15451 ;;		_main
 15452 ;;		_motor_steps_from_degrees
 15453 ;;		__step_position_from_divide_position
 15454 ;;		_motor_divide_jump_to_nearest
 15455 ;;		_motor_arc_move
 15456 ;;		_motor_go_to_degrees_position
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           	psect	text51
 15461  00C0F0                     __ptext51:
 15462                           	opt stack 0
 15463  00C0F0                     ___flmul:
 15464                           	opt stack 17
 15465                           
 15466                           ;incstack = 0
 15467  00C0F0  0100               	movlb	0	; () banked
 15468  00C0F2  5171               	movf	(___flmul@b+3)& (0+255),w,b
 15469  00C0F4  0B80               	andlw	128
 15470  00C0F6  6F7A               	movwf	___flmul@sign& (0+255),b
 15471  00C0F8  5171               	movf	(___flmul@b+3)& (0+255),w,b
 15472  00C0FA  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 15473  00C0FC  6F80               	movwf	___flmul@bexp& (0+255),b
 15474                           
 15475                           ; BSR set to: 0
 15476  00C0FE  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 15477                           
 15478                           ; BSR set to: 0
 15479  00C100  8180               	bsf	___flmul@bexp& (0+255),0,b
 15480                           
 15481                           ; BSR set to: 0
 15482                           
 15483                           ; BSR set to: 0
 15484  00C102  5180               	movf	___flmul@bexp& (0+255),w,b
 15485  00C104  B4D8               	btfsc	status,2,c
 15486  00C106  D00D               	goto	l3293
 15487                           
 15488                           ; BSR set to: 0
 15489  00C108  2980               	incf	___flmul@bexp& (0+255),w,b
 15490  00C10A  A4D8               	btfss	status,2,c
 15491  00C10C  D008               	goto	l3294
 15492                           
 15493                           ; BSR set to: 0
 15494  00C10E  0E00               	movlw	0
 15495  00C110  6F6E               	movwf	___flmul@b& (0+255),b
 15496  00C112  0E00               	movlw	0
 15497  00C114  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 15498  00C116  0E00               	movlw	0
 15499  00C118  6F70               	movwf	(___flmul@b+2)& (0+255),b
 15500  00C11A  0E00               	movlw	0
 15501  00C11C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 15502  00C11E                     l3294:
 15503                           
 15504                           ; BSR set to: 0
 15505                           
 15506                           ; BSR set to: 0
 15507  00C11E  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 15508  00C120  D008               	goto	l3295
 15509  00C122                     l3293:
 15510                           
 15511                           ; BSR set to: 0
 15512                           
 15513                           ; BSR set to: 0
 15514  00C122  0E00               	movlw	0
 15515  00C124  6F6E               	movwf	___flmul@b& (0+255),b
 15516  00C126  0E00               	movlw	0
 15517  00C128  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 15518  00C12A  0E00               	movlw	0
 15519  00C12C  6F70               	movwf	(___flmul@b+2)& (0+255),b
 15520  00C12E  0E00               	movlw	0
 15521  00C130  6F71               	movwf	(___flmul@b+3)& (0+255),b
 15522  00C132                     l3295:
 15523                           
 15524                           ; BSR set to: 0
 15525                           
 15526                           ; BSR set to: 0
 15527  00C132  5175               	movf	(___flmul@a+3)& (0+255),w,b
 15528  00C134  0B80               	andlw	128
 15529  00C136  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 15530                           
 15531                           ; BSR set to: 0
 15532  00C138  5175               	movf	(___flmul@a+3)& (0+255),w,b
 15533  00C13A  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 15534  00C13C  6F7B               	movwf	___flmul@aexp& (0+255),b
 15535                           
 15536                           ; BSR set to: 0
 15537  00C13E  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 15538                           
 15539                           ; BSR set to: 0
 15540  00C140  817B               	bsf	___flmul@aexp& (0+255),0,b
 15541                           
 15542                           ; BSR set to: 0
 15543                           
 15544                           ; BSR set to: 0
 15545  00C142  517B               	movf	___flmul@aexp& (0+255),w,b
 15546  00C144  B4D8               	btfsc	status,2,c
 15547  00C146  D00D               	goto	l3297
 15548                           
 15549                           ; BSR set to: 0
 15550  00C148  297B               	incf	___flmul@aexp& (0+255),w,b
 15551  00C14A  A4D8               	btfss	status,2,c
 15552  00C14C  D008               	goto	l3298
 15553                           
 15554                           ; BSR set to: 0
 15555  00C14E  0E00               	movlw	0
 15556  00C150  6F72               	movwf	___flmul@a& (0+255),b
 15557  00C152  0E00               	movlw	0
 15558  00C154  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15559  00C156  0E00               	movlw	0
 15560  00C158  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15561  00C15A  0E00               	movlw	0
 15562  00C15C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15563  00C15E                     l3298:
 15564                           
 15565                           ; BSR set to: 0
 15566                           
 15567                           ; BSR set to: 0
 15568  00C15E  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 15569  00C160  D008               	goto	l3299
 15570  00C162                     l3297:
 15571                           
 15572                           ; BSR set to: 0
 15573                           
 15574                           ; BSR set to: 0
 15575  00C162  0E00               	movlw	0
 15576  00C164  6F72               	movwf	___flmul@a& (0+255),b
 15577  00C166  0E00               	movlw	0
 15578  00C168  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15579  00C16A  0E00               	movlw	0
 15580  00C16C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15581  00C16E  0E00               	movlw	0
 15582  00C170  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15583  00C172                     l3299:
 15584                           
 15585                           ; BSR set to: 0
 15586  00C172  517B               	movf	___flmul@aexp& (0+255),w,b
 15587  00C174  B4D8               	btfsc	status,2,c
 15588  00C176  D003               	goto	u19000
 15589                           
 15590                           ; BSR set to: 0
 15591  00C178  5180               	movf	___flmul@bexp& (0+255),w,b
 15592  00C17A  A4D8               	btfss	status,2,c
 15593  00C17C  D009               	goto	l3300
 15594  00C17E                     u19000:
 15595                           
 15596                           ; BSR set to: 0
 15597                           
 15598                           ; BSR set to: 0
 15599  00C17E  0E00               	movlw	0
 15600  00C180  6F6E               	movwf	?___flmul& (0+255),b
 15601  00C182  0E00               	movlw	0
 15602  00C184  6F6F               	movwf	(?___flmul+1)& (0+255),b
 15603  00C186  0E00               	movlw	0
 15604  00C188  6F70               	movwf	(?___flmul+2)& (0+255),b
 15605  00C18A  0E00               	movlw	0
 15606  00C18C  6F71               	movwf	(?___flmul+3)& (0+255),b
 15607                           
 15608                           ; BSR set to: 0
 15609  00C18E  0012               	return	
 15610  00C190                     l3300:
 15611                           
 15612                           ; BSR set to: 0
 15613                           
 15614                           ; BSR set to: 0
 15615  00C190  5174               	movf	(___flmul@a+2)& (0+255),w,b
 15616  00C192  036E               	mulwf	___flmul@b& (0+255),b
 15617  00C194  CFF3 F085          	movff	prodl,___flmul@temp
 15618  00C198  CFF4 F086          	movff	prodh,___flmul@temp+1
 15619                           
 15620                           ; BSR set to: 0
 15621  00C19C  5185               	movf	___flmul@temp& (0+255),w,b
 15622  00C19E  6F7C               	movwf	___flmul@grs& (0+255),b
 15623  00C1A0  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 15624  00C1A2  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 15625  00C1A4  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 15626                           
 15627                           ; BSR set to: 0
 15628  00C1A6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15629  00C1A8  6F81               	movwf	___flmul@prod& (0+255),b
 15630  00C1AA  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 15631  00C1AC  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 15632  00C1AE  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 15633  00C1B0  5173               	movf	(___flmul@a+1)& (0+255),w,b
 15634  00C1B2  036F               	mulwf	(___flmul@b+1)& (0+255),b
 15635  00C1B4  CFF3 F085          	movff	prodl,___flmul@temp
 15636  00C1B8  CFF4 F086          	movff	prodh,___flmul@temp+1
 15637                           
 15638                           ; BSR set to: 0
 15639  00C1BC  5185               	movf	___flmul@temp& (0+255),w,b
 15640  00C1BE  277C               	addwf	___flmul@grs& (0+255),f,b
 15641  00C1C0  0E00               	movlw	0
 15642  00C1C2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15643  00C1C4  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15644  00C1C6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15645                           
 15646                           ; BSR set to: 0
 15647  00C1C8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15648  00C1CA  2781               	addwf	___flmul@prod& (0+255),f,b
 15649  00C1CC  0E00               	movlw	0
 15650  00C1CE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15651  00C1D0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15652  00C1D2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15653  00C1D4  5172               	movf	___flmul@a& (0+255),w,b
 15654  00C1D6  0370               	mulwf	(___flmul@b+2)& (0+255),b
 15655  00C1D8  CFF3 F085          	movff	prodl,___flmul@temp
 15656  00C1DC  CFF4 F086          	movff	prodh,___flmul@temp+1
 15657                           
 15658                           ; BSR set to: 0
 15659  00C1E0  5185               	movf	___flmul@temp& (0+255),w,b
 15660  00C1E2  277C               	addwf	___flmul@grs& (0+255),f,b
 15661  00C1E4  0E00               	movlw	0
 15662  00C1E6  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15663  00C1E8  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15664  00C1EA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15665                           
 15666                           ; BSR set to: 0
 15667  00C1EC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15668  00C1EE  2781               	addwf	___flmul@prod& (0+255),f,b
 15669  00C1F0  0E00               	movlw	0
 15670  00C1F2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15671  00C1F4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15672  00C1F6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15673                           
 15674                           ; BSR set to: 0
 15675  00C1F8  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 15676  00C1FC  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 15677  00C200  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 15678  00C204  6B7C               	clrf	___flmul@grs& (0+255),b
 15679                           
 15680                           ; BSR set to: 0
 15681  00C206  5172               	movf	___flmul@a& (0+255),w,b
 15682  00C208  036F               	mulwf	(___flmul@b+1)& (0+255),b
 15683  00C20A  CFF3 F085          	movff	prodl,___flmul@temp
 15684  00C20E  CFF4 F086          	movff	prodh,___flmul@temp+1
 15685                           
 15686                           ; BSR set to: 0
 15687  00C212  5185               	movf	___flmul@temp& (0+255),w,b
 15688  00C214  277C               	addwf	___flmul@grs& (0+255),f,b
 15689  00C216  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15690  00C218  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15691  00C21A  0E00               	movlw	0
 15692  00C21C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15693  00C21E  0E00               	movlw	0
 15694  00C220  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15695                           
 15696                           ; BSR set to: 0
 15697  00C222  5173               	movf	(___flmul@a+1)& (0+255),w,b
 15698  00C224  036E               	mulwf	___flmul@b& (0+255),b
 15699  00C226  CFF3 F085          	movff	prodl,___flmul@temp
 15700  00C22A  CFF4 F086          	movff	prodh,___flmul@temp+1
 15701                           
 15702                           ; BSR set to: 0
 15703  00C22E  5185               	movf	___flmul@temp& (0+255),w,b
 15704  00C230  277C               	addwf	___flmul@grs& (0+255),f,b
 15705  00C232  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15706  00C234  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15707  00C236  0E00               	movlw	0
 15708  00C238  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15709  00C23A  0E00               	movlw	0
 15710  00C23C  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15711                           
 15712                           ; BSR set to: 0
 15713  00C23E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 15714  00C242  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 15715  00C246  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 15716  00C24A  6B7C               	clrf	___flmul@grs& (0+255),b
 15717  00C24C  5172               	movf	___flmul@a& (0+255),w,b
 15718  00C24E  036E               	mulwf	___flmul@b& (0+255),b
 15719  00C250  CFF3 F085          	movff	prodl,___flmul@temp
 15720  00C254  CFF4 F086          	movff	prodh,___flmul@temp+1
 15721                           
 15722                           ; BSR set to: 0
 15723  00C258  5185               	movf	___flmul@temp& (0+255),w,b
 15724  00C25A  277C               	addwf	___flmul@grs& (0+255),f,b
 15725  00C25C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15726  00C25E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15727  00C260  0E00               	movlw	0
 15728  00C262  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15729  00C264  0E00               	movlw	0
 15730  00C266  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15731                           
 15732                           ; BSR set to: 0
 15733  00C268  5174               	movf	(___flmul@a+2)& (0+255),w,b
 15734  00C26A  036F               	mulwf	(___flmul@b+1)& (0+255),b
 15735  00C26C  CFF3 F085          	movff	prodl,___flmul@temp
 15736  00C270  CFF4 F086          	movff	prodh,___flmul@temp+1
 15737  00C274  5185               	movf	___flmul@temp& (0+255),w,b
 15738  00C276  2781               	addwf	___flmul@prod& (0+255),f,b
 15739  00C278  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15740  00C27A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15741  00C27C  0E00               	movlw	0
 15742  00C27E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15743  00C280  0E00               	movlw	0
 15744  00C282  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15745                           
 15746                           ; BSR set to: 0
 15747  00C284  5173               	movf	(___flmul@a+1)& (0+255),w,b
 15748  00C286  0370               	mulwf	(___flmul@b+2)& (0+255),b
 15749  00C288  CFF3 F085          	movff	prodl,___flmul@temp
 15750  00C28C  CFF4 F086          	movff	prodh,___flmul@temp+1
 15751                           
 15752                           ; BSR set to: 0
 15753  00C290  5185               	movf	___flmul@temp& (0+255),w,b
 15754  00C292  2781               	addwf	___flmul@prod& (0+255),f,b
 15755  00C294  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15756  00C296  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15757  00C298  0E00               	movlw	0
 15758  00C29A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15759  00C29C  0E00               	movlw	0
 15760  00C29E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15761  00C2A0  5174               	movf	(___flmul@a+2)& (0+255),w,b
 15762  00C2A2  0370               	mulwf	(___flmul@b+2)& (0+255),b
 15763  00C2A4  CFF3 F085          	movff	prodl,___flmul@temp
 15764  00C2A8  CFF4 F086          	movff	prodh,___flmul@temp+1
 15765                           
 15766                           ; BSR set to: 0
 15767  00C2AC  5185               	movf	___flmul@temp& (0+255),w,b
 15768  00C2AE  6F76               	movwf	??___flmul& (0+255),b
 15769  00C2B0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15770  00C2B2  6F77               	movwf	(??___flmul+1)& (0+255),b
 15771  00C2B4  6B78               	clrf	(??___flmul+2)& (0+255),b
 15772  00C2B6  6B79               	clrf	(??___flmul+3)& (0+255),b
 15773  00C2B8  C078  F079         	movff	??___flmul+2,??___flmul+3
 15774  00C2BC  C077  F078         	movff	??___flmul+1,??___flmul+2
 15775  00C2C0  C076  F077         	movff	??___flmul,??___flmul+1
 15776  00C2C4  6B76               	clrf	??___flmul& (0+255),b
 15777  00C2C6  5176               	movf	??___flmul& (0+255),w,b
 15778  00C2C8  2781               	addwf	___flmul@prod& (0+255),f,b
 15779  00C2CA  5177               	movf	(??___flmul+1)& (0+255),w,b
 15780  00C2CC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15781  00C2CE  5178               	movf	(??___flmul+2)& (0+255),w,b
 15782  00C2D0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15783  00C2D2  5179               	movf	(??___flmul+3)& (0+255),w,b
 15784  00C2D4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15785                           
 15786                           ; BSR set to: 0
 15787  00C2D6  C07C  F076         	movff	___flmul@grs,??___flmul
 15788  00C2DA  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 15789  00C2DE  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 15790  00C2E2  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 15791  00C2E6  0E19               	movlw	25
 15792  00C2E8  D005               	goto	u19010
 15793  00C2EA                     u19015:
 15794  00C2EA  90D8               	bcf	status,0,c
 15795  00C2EC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 15796  00C2EE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 15797  00C2F0  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 15798  00C2F2  3376               	rrcf	??___flmul& (0+255),f,b
 15799  00C2F4                     u19010:
 15800  00C2F4  2EE8               	decfsz	wreg,f,c
 15801  00C2F6  D7F9               	goto	u19015
 15802  00C2F8  5176               	movf	??___flmul& (0+255),w,b
 15803  00C2FA  2781               	addwf	___flmul@prod& (0+255),f,b
 15804  00C2FC  5177               	movf	(??___flmul+1)& (0+255),w,b
 15805  00C2FE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15806  00C300  5178               	movf	(??___flmul+2)& (0+255),w,b
 15807  00C302  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15808  00C304  5179               	movf	(??___flmul+3)& (0+255),w,b
 15809  00C306  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15810                           
 15811                           ; BSR set to: 0
 15812  00C308  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 15813  00C30C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 15814  00C310  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 15815  00C314  6B7C               	clrf	___flmul@grs& (0+255),b
 15816                           
 15817                           ; BSR set to: 0
 15818  00C316  517B               	movf	___flmul@aexp& (0+255),w,b
 15819  00C318  C080  F076         	movff	___flmul@bexp,??___flmul
 15820  00C31C  6B77               	clrf	(??___flmul+1)& (0+255),b
 15821  00C31E  2776               	addwf	??___flmul& (0+255),f,b
 15822  00C320  0E00               	movlw	0
 15823  00C322  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 15824  00C324  0E82               	movlw	130
 15825  00C326  2576               	addwf	??___flmul& (0+255),w,b
 15826  00C328  6F85               	movwf	___flmul@temp& (0+255),b
 15827  00C32A  0EFF               	movlw	255
 15828  00C32C  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 15829  00C32E  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 15830  00C330  D00F               	goto	l3304
 15831  00C332                     
 15832                           ; BSR set to: 0
 15833                           
 15834                           ; BSR set to: 0
 15835  00C332  90D8               	bcf	status,0,c
 15836  00C334  3781               	rlcf	___flmul@prod& (0+255),f,b
 15837  00C336  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15838  00C338  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15839  00C33A  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15840                           
 15841                           ; BSR set to: 0
 15842  00C33C  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 15843                           
 15844                           ; BSR set to: 0
 15845  00C33E  8181               	bsf	___flmul@prod& (0+255),0,b
 15846                           
 15847                           ; BSR set to: 0
 15848  00C340  90D8               	bcf	status,0,c
 15849  00C342  377C               	rlcf	___flmul@grs& (0+255),f,b
 15850  00C344  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15851  00C346  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15852  00C348  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15853  00C34A  0785               	decf	___flmul@temp& (0+255),f,b
 15854  00C34C  A0D8               	btfss	status,0,c
 15855  00C34E  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 15856  00C350                     l3304:
 15857                           
 15858                           ; BSR set to: 0
 15859                           
 15860                           ; BSR set to: 0
 15861  00C350  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 15862  00C352  D7EF               	goto	l3305
 15863                           
 15864                           ; BSR set to: 0
 15865                           
 15866                           ; BSR set to: 0
 15867  00C354  0E00               	movlw	0
 15868  00C356  6F7B               	movwf	___flmul@aexp& (0+255),b
 15869                           
 15870                           ; BSR set to: 0
 15871  00C358  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 15872  00C35A  D016               	goto	l3311
 15873                           
 15874                           ; BSR set to: 0
 15875  00C35C  0EFF               	movlw	255
 15876  00C35E  157C               	andwf	___flmul@grs& (0+255),w,b
 15877  00C360  6F76               	movwf	??___flmul& (0+255),b
 15878  00C362  0EFF               	movlw	255
 15879  00C364  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 15880  00C366  6F77               	movwf	(??___flmul+1)& (0+255),b
 15881  00C368  0EFF               	movlw	255
 15882  00C36A  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 15883  00C36C  6F78               	movwf	(??___flmul+2)& (0+255),b
 15884  00C36E  0E7F               	movlw	127
 15885  00C370  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 15886  00C372  6F79               	movwf	(??___flmul+3)& (0+255),b
 15887  00C374  5176               	movf	??___flmul& (0+255),w,b
 15888  00C376  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 15889  00C378  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 15890  00C37A  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 15891  00C37C  A4D8               	btfss	status,2,c
 15892  00C37E  D002               	goto	u19060
 15893                           
 15894                           ; BSR set to: 0
 15895                           
 15896                           ; BSR set to: 0
 15897  00C380  A181               	btfss	___flmul@prod& (0+255),0,b
 15898  00C382  D002               	goto	l3311
 15899  00C384                     u19060:
 15900                           
 15901                           ; BSR set to: 0
 15902  00C384  0E01               	movlw	1
 15903  00C386  6F7B               	movwf	___flmul@aexp& (0+255),b
 15904  00C388                     l3311:
 15905                           
 15906                           ; BSR set to: 0
 15907                           
 15908                           ; BSR set to: 0
 15909                           
 15910                           ; BSR set to: 0
 15911  00C388  517B               	movf	___flmul@aexp& (0+255),w,b
 15912  00C38A  B4D8               	btfsc	status,2,c
 15913  00C38C  D01F               	goto	l3313
 15914                           
 15915                           ; BSR set to: 0
 15916  00C38E  0E01               	movlw	1
 15917  00C390  2781               	addwf	___flmul@prod& (0+255),f,b
 15918  00C392  0E00               	movlw	0
 15919  00C394  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15920  00C396  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15921  00C398  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15922                           
 15923                           ; BSR set to: 0
 15924  00C39A  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 15925  00C39C  D017               	goto	l3313
 15926                           
 15927                           ; BSR set to: 0
 15928  00C39E  C081  F076         	movff	___flmul@prod,??___flmul
 15929  00C3A2  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 15930  00C3A6  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 15931  00C3AA  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 15932  00C3AE  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 15933  00C3B0  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 15934  00C3B2  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 15935  00C3B4  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 15936  00C3B6  3376               	rrcf	??___flmul& (0+255),f,b
 15937  00C3B8  C076  F081         	movff	??___flmul,___flmul@prod
 15938  00C3BC  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 15939  00C3C0  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 15940  00C3C4  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 15941                           
 15942                           ; BSR set to: 0
 15943  00C3C8  4B85               	infsnz	___flmul@temp& (0+255),f,b
 15944  00C3CA  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 15945  00C3CC                     l3313:
 15946                           
 15947                           ; BSR set to: 0
 15948                           
 15949                           ; BSR set to: 0
 15950                           
 15951                           ; BSR set to: 0
 15952  00C3CC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15953  00C3CE  D00D               	goto	l3314
 15954  00C3D0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15955  00C3D2  E103               	bnz	u19090
 15956  00C3D4  2985               	incf	___flmul@temp& (0+255),w,b
 15957  00C3D6  A0D8               	btfss	status,0,c
 15958  00C3D8  D008               	goto	l3314
 15959  00C3DA                     u19090:
 15960                           
 15961                           ; BSR set to: 0
 15962  00C3DA  0E00               	movlw	0
 15963  00C3DC  6F81               	movwf	___flmul@prod& (0+255),b
 15964  00C3DE  0E00               	movlw	0
 15965  00C3E0  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 15966  00C3E2  0E80               	movlw	128
 15967  00C3E4  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 15968  00C3E6  0E7F               	movlw	127
 15969  00C3E8  D020               	goto	L21
 15970  00C3EA                     l3314:
 15971                           
 15972                           ; BSR set to: 0
 15973                           
 15974                           ; BSR set to: 0
 15975  00C3EA  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15976  00C3EC  D005               	goto	u19100
 15977  00C3EE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 15978  00C3F0  E10E               	bnz	l3316
 15979  00C3F2  0585               	decf	___flmul@temp& (0+255),w,b
 15980  00C3F4  B0D8               	btfsc	status,0,c
 15981  00C3F6  D00B               	goto	l3316
 15982  00C3F8                     u19100:
 15983                           
 15984                           ; BSR set to: 0
 15985  00C3F8  0E00               	movlw	0
 15986  00C3FA  6F81               	movwf	___flmul@prod& (0+255),b
 15987  00C3FC  0E00               	movlw	0
 15988  00C3FE  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 15989  00C400  0E00               	movlw	0
 15990  00C402  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 15991  00C404  0E00               	movlw	0
 15992  00C406  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 15993  00C408  0E00               	movlw	0
 15994  00C40A  6F7A               	movwf	___flmul@sign& (0+255),b
 15995  00C40C  D00F               	goto	l3317
 15996  00C40E                     l3316:
 15997                           
 15998                           ; BSR set to: 0
 15999  00C40E  C085  F080         	movff	___flmul@temp,___flmul@bexp
 16000                           
 16001                           ; BSR set to: 0
 16002  00C412  0EFF               	movlw	255
 16003  00C414  1781               	andwf	___flmul@prod& (0+255),f,b
 16004  00C416  0EFF               	movlw	255
 16005  00C418  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 16006  00C41A  0E7F               	movlw	127
 16007  00C41C  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 16008  00C41E  0E00               	movlw	0
 16009  00C420  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 16010                           
 16011                           ; BSR set to: 0
 16012  00C422  B180               	btfsc	___flmul@bexp& (0+255),0,b
 16013                           
 16014                           ; BSR set to: 0
 16015  00C424  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 16016                           
 16017                           ; BSR set to: 0
 16018                           
 16019                           ; BSR set to: 0
 16020  00C426  90D8               	bcf	status,0,c
 16021  00C428  3180               	rrcf	___flmul@bexp& (0+255),w,b
 16022  00C42A                     L21:
 16023  00C42A  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 16024  00C42C                     l3317:
 16025                           
 16026                           ; BSR set to: 0
 16027                           
 16028                           ; BSR set to: 0
 16029                           
 16030                           ; BSR set to: 0
 16031  00C42C  517A               	movf	___flmul@sign& (0+255),w,b
 16032  00C42E  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16033                           
 16034                           ; BSR set to: 0
 16035  00C430  C081  F06E         	movff	___flmul@prod,?___flmul
 16036  00C434  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 16037  00C438  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 16038  00C43C  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 16039  00C440  0012               	return	
 16040  00C442                     __end_of___flmul:
 16041                           	opt stack 0
 16042                           tblptru	equ	0xFF8
 16043                           tblptrh	equ	0xFF7
 16044                           tblptrl	equ	0xFF6
 16045                           tablat	equ	0xFF5
 16046                           prodh	equ	0xFF4
 16047                           prodl	equ	0xFF3
 16048                           intcon	equ	0xFF2
 16049                           postinc0	equ	0xFEE
 16050                           wreg	equ	0xFE8
 16051                           postdec1	equ	0xFE5
 16052                           plusw1	equ	0xFE3
 16053                           fsr1h	equ	0xFE2
 16054                           fsr1l	equ	0xFE1
 16055                           indf2	equ	0xFDF
 16056                           postinc2	equ	0xFDE
 16057                           postdec2	equ	0xFDD
 16058                           plusw2	equ	0xFDB
 16059                           fsr2h	equ	0xFDA
 16060                           fsr2l	equ	0xFD9
 16061                           status	equ	0xFD8
 16062                           
 16063 ;; *************** function __encoder_next_setup_stepsize *****************
 16064 ;; Defined at:
 16065 ;;		line 24 in file "encoder.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;		None
 16070 ;; Return value:  Size  Location     Type
 16071 ;;                  2    0[BANK0 ] unsigned int 
 16072 ;; Registers used:
 16073 ;;		wreg, status,2, status,0
 16074 ;; Tracked objects:
 16075 ;;		On entry : 0/0
 16076 ;;		On exit  : 0/0
 16077 ;;		Unchanged: 0/0
 16078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16083 ;;Total ram usage:        4 bytes
 16084 ;; Hardware stack levels used:    1
 16085 ;; Hardware stack levels required when called:   10
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		_encoder_statemachine
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093                           	psect	text52
 16094  011890                     __ptext52:
 16095                           	opt stack 0
 16096  011890                     __encoder_next_setup_stepsize:
 16097                           	opt stack 19
 16098                           
 16099                           ;encoder.c: 26: switch(old_stepsize)
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;incstack = 0
 16103  011890  D01A               	goto	l2480
 16104  011892                     
 16105                           ;encoder.c: 29: return 100;
 16106  011892  0E00               	movlw	0
 16107  011894  0100               	movlb	0	; () banked
 16108  011896  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 16109  011898  0E64               	movlw	100
 16110  01189A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 16111                           
 16112                           ; BSR set to: 0
 16113  01189C  0012               	return	
 16114  01189E                     
 16115                           ; BSR set to: 0
 16116                           ;encoder.c: 31: return 10;
 16117                           
 16118                           ; BSR set to: 0
 16119  01189E  0E00               	movlw	0
 16120  0118A0  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 16121  0118A2  0E0A               	movlw	10
 16122  0118A4  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 16123                           
 16124                           ; BSR set to: 0
 16125  0118A6  0012               	return	
 16126  0118A8                     
 16127                           ; BSR set to: 0
 16128                           ;encoder.c: 33: return 1;
 16129                           
 16130                           ; BSR set to: 0
 16131  0118A8  0E00               	movlw	0
 16132  0118AA  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 16133  0118AC  0E01               	movlw	1
 16134  0118AE  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 16135                           
 16136                           ; BSR set to: 0
 16137  0118B0  0012               	return	
 16138  0118B2                     
 16139                           ; BSR set to: 0
 16140                           ;encoder.c: 35: return 1000;
 16141                           
 16142                           ; BSR set to: 0
 16143  0118B2  0E03               	movlw	3
 16144  0118B4  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 16145  0118B6  0EE8               	movlw	232
 16146  0118B8  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 16147                           
 16148                           ; BSR set to: 0
 16149  0118BA  0012               	return	
 16150  0118BC                     
 16151                           ; BSR set to: 0
 16152                           ;encoder.c: 37: return 100;
 16153                           
 16154                           ; BSR set to: 0
 16155  0118BC  0E00               	movlw	0
 16156  0118BE  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 16157  0118C0  0E64               	movlw	100
 16158  0118C2  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 16159                           
 16160                           ; BSR set to: 0
 16161                           ;encoder.c: 38: }
 16162                           
 16163                           ; BSR set to: 0
 16164  0118C4  0012               	return	
 16165  0118C6                     l2480:
 16166                           
 16167                           ; BSR set to: 0
 16168  0118C6  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 16169  0118CA  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 16170                           
 16171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16172                           ; Switch size 1, requested type "space"
 16173                           ; Number of cases is 2, Range of values is 0 to 3
 16174                           ; switch strategies available:
 16175                           ; Name         Instructions Cycles
 16176                           ; simple_byte            7     4 (average)
 16177                           ;	Chosen strategy is simple_byte
 16178  0118CE  0100               	movlb	0	; () banked
 16179  0118D0  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 16180  0118D2  0A00               	xorlw	0	; case 0
 16181  0118D4  B4D8               	btfsc	status,2,c
 16182  0118D6  D004               	goto	l23357
 16183  0118D8  0A03               	xorlw	3	; case 3
 16184  0118DA  B4D8               	btfsc	status,2,c
 16185  0118DC  D00C               	goto	l23359
 16186  0118DE  D7EE               	goto	l2486
 16187  0118E0                     l23357:
 16188                           
 16189                           ; BSR set to: 0
 16190                           ; Switch size 1, requested type "space"
 16191                           ; Number of cases is 3, Range of values is 1 to 100
 16192                           ; switch strategies available:
 16193                           ; Name         Instructions Cycles
 16194                           ; simple_byte           10     6 (average)
 16195                           ;	Chosen strategy is simple_byte
 16196  0118E0  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 16197  0118E2  0A01               	xorlw	1	; case 1
 16198  0118E4  B4D8               	btfsc	status,2,c
 16199  0118E6  D7E5               	goto	l2485
 16200  0118E8  0A0B               	xorlw	11	; case 10
 16201  0118EA  B4D8               	btfsc	status,2,c
 16202  0118EC  D7DD               	goto	l2484
 16203  0118EE  0A6E               	xorlw	110	; case 100
 16204  0118F0  B4D8               	btfsc	status,2,c
 16205  0118F2  D7D5               	goto	l2483
 16206  0118F4  D7E3               	goto	l2486
 16207  0118F6                     l23359:
 16208                           
 16209                           ; BSR set to: 0
 16210                           ; Switch size 1, requested type "space"
 16211                           ; Number of cases is 1, Range of values is 232 to 232
 16212                           ; switch strategies available:
 16213                           ; Name         Instructions Cycles
 16214                           ; simple_byte            4     3 (average)
 16215                           ;	Chosen strategy is simple_byte
 16216  0118F6  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 16217  0118F8  0AE8               	xorlw	232	; case 232
 16218  0118FA  B4D8               	btfsc	status,2,c
 16219  0118FC  D7CA               	goto	l2481
 16220  0118FE  D7DE               	goto	l2486
 16221  011900                     __end_of__encoder_next_setup_stepsize:
 16222                           	opt stack 0
 16223                           tblptru	equ	0xFF8
 16224                           tblptrh	equ	0xFF7
 16225                           tblptrl	equ	0xFF6
 16226                           tablat	equ	0xFF5
 16227                           prodh	equ	0xFF4
 16228                           prodl	equ	0xFF3
 16229                           intcon	equ	0xFF2
 16230                           postinc0	equ	0xFEE
 16231                           wreg	equ	0xFE8
 16232                           postdec1	equ	0xFE5
 16233                           plusw1	equ	0xFE3
 16234                           fsr1h	equ	0xFE2
 16235                           fsr1l	equ	0xFE1
 16236                           indf2	equ	0xFDF
 16237                           postinc2	equ	0xFDE
 16238                           postdec2	equ	0xFDD
 16239                           plusw2	equ	0xFDB
 16240                           fsr2h	equ	0xFDA
 16241                           fsr2l	equ	0xFD9
 16242                           status	equ	0xFD8
 16243                           
 16244 ;; *************** function __encoder_next_divide_step_size *****************
 16245 ;; Defined at:
 16246 ;;		line 41 in file "encoder.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;  old_stepsize    1    wreg     unsigned char 
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 16251 ;; Return value:  Size  Location     Type
 16252 ;;                  1    wreg      unsigned char 
 16253 ;; Registers used:
 16254 ;;		wreg, status,2, status,0
 16255 ;; Tracked objects:
 16256 ;;		On entry : 0/0
 16257 ;;		On exit  : 0/0
 16258 ;;		Unchanged: 0/0
 16259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16263 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16264 ;;Total ram usage:        1 bytes
 16265 ;; Hardware stack levels used:    1
 16266 ;; Hardware stack levels required when called:   10
 16267 ;; This function calls:
 16268 ;;		Nothing
 16269 ;; This function is called by:
 16270 ;;		_encoder_statemachine
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text53
 16275  0127D8                     __ptext53:
 16276                           	opt stack 0
 16277  0127D8                     __encoder_next_divide_step_size:
 16278                           	opt stack 19
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;incstack = 0
 16282                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 16283  0127D8  0100               	movlb	0	; () banked
 16284  0127DA  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 16285                           
 16286                           ;encoder.c: 43: switch(old_stepsize)
 16287  0127DC  D008               	goto	l2490
 16288  0127DE                     
 16289                           ;encoder.c: 46: return 10;
 16290  0127DE  0E0A               	movlw	10
 16291  0127E0  0012               	return	
 16292  0127E2                     
 16293                           ;encoder.c: 48: return 1;
 16294  0127E2  0E01               	movlw	1
 16295  0127E4  0012               	return	
 16296  0127E6                     
 16297                           ;encoder.c: 50: return 100;
 16298  0127E6  0E64               	movlw	100
 16299  0127E8  0012               	return	
 16300  0127EA                     
 16301                           ;encoder.c: 52: return 1;
 16302  0127EA  0E01               	movlw	1
 16303                           
 16304                           ;encoder.c: 53: }
 16305  0127EC  0012               	return	
 16306  0127EE                     l2490:
 16307  0127EE  0100               	movlb	0	; () banked
 16308  0127F0  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 16309                           
 16310                           ; Switch size 1, requested type "space"
 16311                           ; Number of cases is 3, Range of values is 1 to 100
 16312                           ; switch strategies available:
 16313                           ; Name         Instructions Cycles
 16314                           ; simple_byte           10     6 (average)
 16315                           ;	Chosen strategy is simple_byte
 16316  0127F2  0A01               	xorlw	1	; case 1
 16317  0127F4  B4D8               	btfsc	status,2,c
 16318  0127F6  D7F7               	goto	l2494
 16319  0127F8  0A0B               	xorlw	11	; case 10
 16320  0127FA  B4D8               	btfsc	status,2,c
 16321  0127FC  D7F2               	goto	l2493
 16322  0127FE  0A6E               	xorlw	110	; case 100
 16323  012800  B4D8               	btfsc	status,2,c
 16324  012802  D7ED               	goto	l2491
 16325  012804  D7F2               	goto	l2495
 16326  012806                     __end_of__encoder_next_divide_step_size:
 16327                           	opt stack 0
 16328                           tblptru	equ	0xFF8
 16329                           tblptrh	equ	0xFF7
 16330                           tblptrl	equ	0xFF6
 16331                           tablat	equ	0xFF5
 16332                           prodh	equ	0xFF4
 16333                           prodl	equ	0xFF3
 16334                           intcon	equ	0xFF2
 16335                           postinc0	equ	0xFEE
 16336                           wreg	equ	0xFE8
 16337                           postdec1	equ	0xFE5
 16338                           plusw1	equ	0xFE3
 16339                           fsr1h	equ	0xFE2
 16340                           fsr1l	equ	0xFE1
 16341                           indf2	equ	0xFDF
 16342                           postinc2	equ	0xFDE
 16343                           postdec2	equ	0xFDD
 16344                           plusw2	equ	0xFDB
 16345                           fsr2h	equ	0xFDA
 16346                           fsr2l	equ	0xFD9
 16347                           status	equ	0xFD8
 16348                           
 16349 ;; *************** function __encoder_next_arc_step_size *****************
 16350 ;; Defined at:
 16351 ;;		line 56 in file "encoder.c"
 16352 ;; Parameters:    Size  Location     Type
 16353 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 16354 ;; Auto vars:     Size  Location     Type
 16355 ;;		None
 16356 ;; Return value:  Size  Location     Type
 16357 ;;                  2    0[BANK0 ] unsigned int 
 16358 ;; Registers used:
 16359 ;;		wreg, status,2, status,0
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16368 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16369 ;;Total ram usage:        4 bytes
 16370 ;; Hardware stack levels used:    1
 16371 ;; Hardware stack levels required when called:   10
 16372 ;; This function calls:
 16373 ;;		Nothing
 16374 ;; This function is called by:
 16375 ;;		_encoder_statemachine
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           	psect	text54
 16380  011900                     __ptext54:
 16381                           	opt stack 0
 16382  011900                     __encoder_next_arc_step_size:
 16383                           	opt stack 19
 16384                           
 16385                           ;encoder.c: 58: switch(old_stepsize)
 16386                           
 16387                           ;incstack = 0
 16388  011900  D01A               	goto	l2499
 16389  011902                     
 16390                           ;encoder.c: 61: return 100;
 16391  011902  0E00               	movlw	0
 16392  011904  0100               	movlb	0	; () banked
 16393  011906  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 16394  011908  0E64               	movlw	100
 16395  01190A  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 16396                           
 16397                           ; BSR set to: 0
 16398  01190C  0012               	return	
 16399  01190E                     
 16400                           ; BSR set to: 0
 16401                           ;encoder.c: 63: return 10;
 16402                           
 16403                           ; BSR set to: 0
 16404  01190E  0E00               	movlw	0
 16405  011910  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 16406  011912  0E0A               	movlw	10
 16407  011914  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 16408                           
 16409                           ; BSR set to: 0
 16410  011916  0012               	return	
 16411  011918                     
 16412                           ; BSR set to: 0
 16413                           ;encoder.c: 65: return 1;
 16414                           
 16415                           ; BSR set to: 0
 16416  011918  0E00               	movlw	0
 16417  01191A  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 16418  01191C  0E01               	movlw	1
 16419  01191E  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 16420                           
 16421                           ; BSR set to: 0
 16422  011920  0012               	return	
 16423  011922                     
 16424                           ; BSR set to: 0
 16425                           ;encoder.c: 67: return 1000;
 16426                           
 16427                           ; BSR set to: 0
 16428  011922  0E03               	movlw	3
 16429  011924  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 16430  011926  0EE8               	movlw	232
 16431  011928  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 16432                           
 16433                           ; BSR set to: 0
 16434  01192A  0012               	return	
 16435  01192C                     
 16436                           ; BSR set to: 0
 16437                           ;encoder.c: 69: return 100;
 16438                           
 16439                           ; BSR set to: 0
 16440  01192C  0E00               	movlw	0
 16441  01192E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 16442  011930  0E64               	movlw	100
 16443  011932  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 16444                           
 16445                           ; BSR set to: 0
 16446                           ;encoder.c: 70: }
 16447                           
 16448                           ; BSR set to: 0
 16449  011934  0012               	return	
 16450  011936                     l2499:
 16451                           
 16452                           ; BSR set to: 0
 16453  011936  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 16454  01193A  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 16455                           
 16456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16457                           ; Switch size 1, requested type "space"
 16458                           ; Number of cases is 2, Range of values is 0 to 3
 16459                           ; switch strategies available:
 16460                           ; Name         Instructions Cycles
 16461                           ; simple_byte            7     4 (average)
 16462                           ;	Chosen strategy is simple_byte
 16463  01193E  0100               	movlb	0	; () banked
 16464  011940  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 16465  011942  0A00               	xorlw	0	; case 0
 16466  011944  B4D8               	btfsc	status,2,c
 16467  011946  D004               	goto	l23361
 16468  011948  0A03               	xorlw	3	; case 3
 16469  01194A  B4D8               	btfsc	status,2,c
 16470  01194C  D00C               	goto	l23363
 16471  01194E  D7EE               	goto	l2505
 16472  011950                     l23361:
 16473                           
 16474                           ; BSR set to: 0
 16475                           ; Switch size 1, requested type "space"
 16476                           ; Number of cases is 3, Range of values is 1 to 100
 16477                           ; switch strategies available:
 16478                           ; Name         Instructions Cycles
 16479                           ; simple_byte           10     6 (average)
 16480                           ;	Chosen strategy is simple_byte
 16481  011950  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 16482  011952  0A01               	xorlw	1	; case 1
 16483  011954  B4D8               	btfsc	status,2,c
 16484  011956  D7E5               	goto	l2504
 16485  011958  0A0B               	xorlw	11	; case 10
 16486  01195A  B4D8               	btfsc	status,2,c
 16487  01195C  D7DD               	goto	l2503
 16488  01195E  0A6E               	xorlw	110	; case 100
 16489  011960  B4D8               	btfsc	status,2,c
 16490  011962  D7D5               	goto	l2502
 16491  011964  D7E3               	goto	l2505
 16492  011966                     l23363:
 16493                           
 16494                           ; BSR set to: 0
 16495                           ; Switch size 1, requested type "space"
 16496                           ; Number of cases is 1, Range of values is 232 to 232
 16497                           ; switch strategies available:
 16498                           ; Name         Instructions Cycles
 16499                           ; simple_byte            4     3 (average)
 16500                           ;	Chosen strategy is simple_byte
 16501  011966  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 16502  011968  0AE8               	xorlw	232	; case 232
 16503  01196A  B4D8               	btfsc	status,2,c
 16504  01196C  D7CA               	goto	l2500
 16505  01196E  D7DE               	goto	l2505
 16506  011970                     __end_of__encoder_next_arc_step_size:
 16507                           	opt stack 0
 16508                           tblptru	equ	0xFF8
 16509                           tblptrh	equ	0xFF7
 16510                           tblptrl	equ	0xFF6
 16511                           tablat	equ	0xFF5
 16512                           prodh	equ	0xFF4
 16513                           prodl	equ	0xFF3
 16514                           intcon	equ	0xFF2
 16515                           postinc0	equ	0xFEE
 16516                           wreg	equ	0xFE8
 16517                           postdec1	equ	0xFE5
 16518                           plusw1	equ	0xFE3
 16519                           fsr1h	equ	0xFE2
 16520                           fsr1l	equ	0xFE1
 16521                           indf2	equ	0xFDF
 16522                           postinc2	equ	0xFDE
 16523                           postdec2	equ	0xFDD
 16524                           plusw2	equ	0xFDB
 16525                           fsr2h	equ	0xFDA
 16526                           fsr2l	equ	0xFD9
 16527                           status	equ	0xFD8
 16528                           
 16529 ;; *************** function __divide_jump_size_increment *****************
 16530 ;; Defined at:
 16531 ;;		line 73 in file "encoder.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;		None
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;		None
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  1    wreg      void 
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, status,0
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16549 ;;Total ram usage:        1 bytes
 16550 ;; Hardware stack levels used:    1
 16551 ;; Hardware stack levels required when called:   10
 16552 ;; This function calls:
 16553 ;;		Nothing
 16554 ;; This function is called by:
 16555 ;;		_encoder_statemachine
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           	psect	text55
 16560  0125CC                     __ptext55:
 16561                           	opt stack 0
 16562  0125CC                     __divide_jump_size_increment:
 16563                           	opt stack 19
 16564                           
 16565                           ;encoder.c: 75: ++os.divide_jump_size;
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;incstack = 0
 16569  0125CC  0100               	movlb	0	; () banked
 16570  0125CE  4BEB               	infsnz	(_os+24)& (0+255),f,b	;volatile
 16571  0125D0  2BEC               	incf	(_os+25)& (0+255),f,b	;volatile
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;encoder.c: 76: if(os.divide_jump_size==0)
 16575  0125D2  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 16576  0125D4  11EC               	iorwf	(_os+25)& (0+255),w,b	;volatile
 16577  0125D6  A4D8               	btfss	status,2,c
 16578  0125D8  D004               	goto	l2509
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;encoder.c: 77: os.divide_jump_size = 1;
 16582  0125DA  0E00               	movlw	0
 16583  0125DC  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
 16584  0125DE  0E01               	movlw	1
 16585  0125E0  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
 16586  0125E2                     l2509:
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 16590                           
 16591                           ; BSR set to: 0
 16592  0125E2  51E6               	movf	(_os+19)& (0+255),w,b	;volatile
 16593  0125E4  5DEB               	subwf	(_os+24)& (0+255),w,b	;volatile
 16594  0125E6  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 16595  0125E8  0A80               	xorlw	128
 16596  0125EA  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 16597  0125EC  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 16598  0125EE  0A80               	xorlw	128
 16599  0125F0  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 16600  0125F2  A0D8               	btfss	status,0,c
 16601  0125F4  0012               	return	
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 16605  0125F6  0EFF               	movlw	255
 16606  0125F8  25E6               	addwf	(_os+19)& (0+255),w,b	;volatile
 16607  0125FA  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
 16608  0125FC  0EFF               	movlw	255
 16609  0125FE  21E7               	addwfc	(_os+20)& (0+255),w,b	;volatile
 16610  012600  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
 16611  012602  0012               	return	
 16612  012604                     __end_of__divide_jump_size_increment:
 16613                           	opt stack 0
 16614                           tblptru	equ	0xFF8
 16615                           tblptrh	equ	0xFF7
 16616                           tblptrl	equ	0xFF6
 16617                           tablat	equ	0xFF5
 16618                           prodh	equ	0xFF4
 16619                           prodl	equ	0xFF3
 16620                           intcon	equ	0xFF2
 16621                           postinc0	equ	0xFEE
 16622                           wreg	equ	0xFE8
 16623                           postdec1	equ	0xFE5
 16624                           plusw1	equ	0xFE3
 16625                           fsr1h	equ	0xFE2
 16626                           fsr1l	equ	0xFE1
 16627                           indf2	equ	0xFDF
 16628                           postinc2	equ	0xFDE
 16629                           postdec2	equ	0xFDD
 16630                           plusw2	equ	0xFDB
 16631                           fsr2h	equ	0xFDA
 16632                           fsr2l	equ	0xFD9
 16633                           status	equ	0xFD8
 16634                           
 16635 ;; *************** function __divide_jump_size_decrement *****************
 16636 ;; Defined at:
 16637 ;;		line 82 in file "encoder.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16653 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16654 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16655 ;;Total ram usage:        3 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:   10
 16658 ;; This function calls:
 16659 ;;		Nothing
 16660 ;; This function is called by:
 16661 ;;		_encoder_statemachine
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           	psect	text56
 16666  011C32                     __ptext56:
 16667                           	opt stack 0
 16668  011C32                     __divide_jump_size_decrement:
 16669                           	opt stack 19
 16670                           
 16671                           ;encoder.c: 84: --os.divide_jump_size;
 16672                           
 16673                           ; BSR set to: 0
 16674                           ;incstack = 0
 16675  011C32  0100               	movlb	0	; () banked
 16676  011C34  07EB               	decf	(_os+24)& (0+255),f,b	;volatile
 16677  011C36  A0D8               	btfss	status,0,c
 16678  011C38  07EC               	decf	(_os+25)& (0+255),f,b	;volatile
 16679                           
 16680                           ; BSR set to: 0
 16681                           ;encoder.c: 85: if(os.divide_jump_size==0)
 16682  011C3A  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 16683  011C3C  11EC               	iorwf	(_os+25)& (0+255),w,b	;volatile
 16684  011C3E  A4D8               	btfss	status,2,c
 16685  011C40  D002               	goto	l2514
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;encoder.c: 86: os.divide_jump_size = -1;
 16689  011C42  69EB               	setf	(_os+24)& (0+255),b	;volatile
 16690  011C44  69EC               	setf	(_os+25)& (0+255),b	;volatile
 16691  011C46                     l2514:
 16692                           
 16693                           ; BSR set to: 0
 16694                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 16695                           
 16696                           ; BSR set to: 0
 16697  011C46  EE20  F0E6         	lfsr	2,_os+19	;volatile
 16698  011C4A  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 16699  011C4E  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 16700  011C52  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 16701  011C54  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 16702  011C56  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 16703  011C58  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 16704  011C5A  51EB               	movf	(_os+24)& (0+255),w,b	;volatile
 16705  011C5C  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 16706  011C5E  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 16707  011C60  0A80               	xorlw	128
 16708  011C62  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 16709  011C64  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 16710  011C66  0A80               	xorlw	128
 16711  011C68  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 16712  011C6A  A0D8               	btfss	status,0,c
 16713  011C6C  0012               	return	
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 16717  011C6E  EE20  F0E6         	lfsr	2,_os+19	;volatile
 16718  011C72  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 16719  011C76  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 16720  011C7A  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 16721  011C7C  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 16722  011C7E  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 16723  011C80  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 16724  011C82  0E01               	movlw	1
 16725  011C84  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 16726  011C86  6FEB               	movwf	(_os+24)& (0+255),b	;volatile
 16727  011C88  0E00               	movlw	0
 16728  011C8A  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 16729  011C8C  6FEC               	movwf	(_os+25)& (0+255),b	;volatile
 16730  011C8E  0012               	return	
 16731  011C90                     __end_of__divide_jump_size_decrement:
 16732                           	opt stack 0
 16733                           tblptru	equ	0xFF8
 16734                           tblptrh	equ	0xFF7
 16735                           tblptrl	equ	0xFF6
 16736                           tablat	equ	0xFF5
 16737                           prodh	equ	0xFF4
 16738                           prodl	equ	0xFF3
 16739                           intcon	equ	0xFF2
 16740                           postinc0	equ	0xFEE
 16741                           wreg	equ	0xFE8
 16742                           postdec1	equ	0xFE5
 16743                           plusw1	equ	0xFE3
 16744                           fsr1h	equ	0xFE2
 16745                           fsr1l	equ	0xFE1
 16746                           indf2	equ	0xFDF
 16747                           postinc2	equ	0xFDE
 16748                           postdec2	equ	0xFDD
 16749                           plusw2	equ	0xFDB
 16750                           fsr2h	equ	0xFDA
 16751                           fsr2l	equ	0xFD9
 16752                           status	equ	0xFD8
 16753                           
 16754 ;; *************** function _display_prepare *****************
 16755 ;; Defined at:
 16756 ;;		line 230 in file "display.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;		None
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;  temp           10   94[BANK0 ] unsigned char [10]
 16761 ;;  cntr            1  105[BANK0 ] unsigned char 
 16762 ;;  space           1  104[BANK0 ] unsigned char 
 16763 ;; Return value:  Size  Location     Type
 16764 ;;                  1    wreg      void 
 16765 ;; Registers used:
 16766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16767 ;; Tracked objects:
 16768 ;;		On entry : 0/0
 16769 ;;		On exit  : 0/0
 16770 ;;		Unchanged: 0/0
 16771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16773 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16774 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16775 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16776 ;;Total ram usage:       14 bytes
 16777 ;; Hardware stack levels used:    1
 16778 ;; Hardware stack levels required when called:   15
 16779 ;; This function calls:
 16780 ;;		__display_clear
 16781 ;;		__display_itoa
 16782 ;;		__display_itoa_long
 16783 ;;		__display_padded_itoa
 16784 ;;		__display_signed_itoa
 16785 ;;		_memcpy
 16786 ;;		_motor_speed_from_index
 16787 ;;		_strlen
 16788 ;; This function is called by:
 16789 ;;		_main
 16790 ;; This function uses a non-reentrant model
 16791 ;;
 16792                           
 16793                           	psect	text57
 16794  00A238                     __ptext57:
 16795                           	opt stack 0
 16796  00A238                     _display_prepare:
 16797                           	opt stack 15
 16798                           
 16799                           ;display.c: 232: uint8_t cntr;;display.c: 233: uint8_t space;;display.c: 234: char temp[
      +                          10];;display.c: 236: switch(os.displayState & 0xF0)
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;incstack = 0
 16803  00A238  EF05  F057         	goto	l1330
 16804  00A23C                     
 16805                           ;display.c: 240: memcpy(display_content, dc_main, sizeof display_content);
 16806  00A23C  0E78               	movlw	low _display_content
 16807  00A23E  0100               	movlb	0	; () banked
 16808  00A240  6F60               	movwf	memcpy@d1& (0+255),b
 16809  00A242  0E02               	movlw	high _display_content
 16810  00A244  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16811  00A246  0E6E               	movlw	low _dc_main
 16812  00A248  6F62               	movwf	memcpy@s1& (0+255),b
 16813  00A24A  0EA0               	movlw	high _dc_main
 16814  00A24C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16815  00A24E  0E00               	movlw	0
 16816  00A250  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16817  00A252  0E50               	movlw	80
 16818  00A254  6F64               	movwf	memcpy@n& (0+255),b
 16819  00A256  ECE9  F08D         	call	_memcpy	;wreg free
 16820                           
 16821                           ;display.c: 241: switch(os.displayState)
 16822  00A25A  D00F               	goto	l1332
 16823  00A25C                     
 16824                           ;display.c: 244: display_content[1][0] = '>';
 16825  00A25C  0E3E               	movlw	62
 16826  00A25E  0102               	movlb	2	; () banked
 16827  00A260  6F8C               	movwf	(_display_content+20)& (0+255),b
 16828                           
 16829                           ;display.c: 245: break;
 16830  00A262  EF32  F057         	goto	l1339
 16831  00A266                     
 16832                           ;display.c: 247: display_content[1][9] = '>';
 16833                           
 16834                           ; BSR set to: 2
 16835  00A266  0E3E               	movlw	62
 16836  00A268  0102               	movlb	2	; () banked
 16837  00A26A  6F95               	movwf	(_display_content+29)& (0+255),b
 16838                           
 16839                           ;display.c: 248: break;
 16840  00A26C  EF32  F057         	goto	l1339
 16841  00A270                     
 16842                           ;display.c: 253: display_content[2][9] = '>';
 16843                           
 16844                           ; BSR set to: 2
 16845  00A270  0E3E               	movlw	62
 16846  00A272  0102               	movlb	2	; () banked
 16847  00A274  6FA9               	movwf	(_display_content+49)& (0+255),b
 16848                           
 16849                           ;display.c: 254: break;
 16850  00A276  EF32  F057         	goto	l1339
 16851  00A27A                     l1332:
 16852                           
 16853                           ; BSR set to: 2
 16854  00A27A  0100               	movlb	0	; () banked
 16855  00A27C  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 16856                           
 16857                           ; Switch size 1, requested type "space"
 16858                           ; Number of cases is 5, Range of values is 1 to 5
 16859                           ; switch strategies available:
 16860                           ; Name         Instructions Cycles
 16861                           ; simple_byte           16     9 (average)
 16862                           ;	Chosen strategy is simple_byte
 16863  00A27E  0A01               	xorlw	1	; case 1
 16864  00A280  B4D8               	btfsc	status,2,c
 16865  00A282  D7EC               	goto	l1333
 16866  00A284  0A03               	xorlw	3	; case 2
 16867  00A286  B4D8               	btfsc	status,2,c
 16868  00A288  D7EE               	goto	l1335
 16869  00A28A  0A01               	xorlw	1	; case 3
 16870  00A28C  B4D8               	btfsc	status,2,c
 16871  00A28E  D064               	goto	l1352
 16872  00A290  0A07               	xorlw	7	; case 4
 16873  00A292  B4D8               	btfsc	status,2,c
 16874  00A294  D7ED               	goto	l1337
 16875  00A296  0A01               	xorlw	1	; case 5
 16876  00A298  D06F               	goto	L79
 16877  00A29A                     
 16878                           ; BSR set to: 0
 16879                           ;display.c: 262: memcpy(display_content, dc_setup1, sizeof display_content);
 16880                           
 16881                           ; BSR set to: 0
 16882  00A29A  0E78               	movlw	low _display_content
 16883  00A29C  6F60               	movwf	memcpy@d1& (0+255),b
 16884  00A29E  0E02               	movlw	high _display_content
 16885  00A2A0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16886  00A2A2  0E1E               	movlw	low _dc_setup1
 16887  00A2A4  6F62               	movwf	memcpy@s1& (0+255),b
 16888  00A2A6  0EA0               	movlw	high _dc_setup1
 16889  00A2A8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16890  00A2AA  0E00               	movlw	0
 16891  00A2AC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16892  00A2AE  0E50               	movlw	80
 16893  00A2B0  6F64               	movwf	memcpy@n& (0+255),b
 16894  00A2B2  ECE9  F08D         	call	_memcpy	;wreg free
 16895                           
 16896                           ;display.c: 263: _display_itoa(os.setup_step_size, 2, temp);
 16897  00A2B6  C0E3  F095         	movff	_os+16,__display_itoa@value	;volatile
 16898  00A2BA  C0E4  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 16899  00A2BE  0E02               	movlw	2
 16900  00A2C0  0100               	movlb	0	; () banked
 16901  00A2C2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 16902  00A2C4  0EBE               	movlw	low display_prepare@temp
 16903  00A2C6  6F98               	movwf	__display_itoa@text& (0+255),b
 16904  00A2C8  0E00               	movlw	high display_prepare@temp
 16905  00A2CA  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 16906  00A2CC  EC9F  F06B         	call	__display_itoa	;wreg free
 16907                           
 16908                           ;display.c: 264: if(os.setup_step_size>999)
 16909  00A2D0  0EE8               	movlw	232
 16910  00A2D2  0100               	movlb	0	; () banked
 16911  00A2D4  5DE3               	subwf	(_os+16)& (0+255),w,b	;volatile
 16912  00A2D6  0E03               	movlw	3
 16913  00A2D8  59E4               	subwfb	(_os+17)& (0+255),w,b	;volatile
 16914  00A2DA  A0D8               	btfss	status,0,c
 16915  00A2DC  D002               	goto	l1341
 16916                           
 16917                           ; BSR set to: 0
 16918                           ;display.c: 265: space = 0;
 16919  00A2DE  0E00               	movlw	0
 16920  00A2E0  D001               	goto	L22
 16921  00A2E2                     l1341:
 16922                           
 16923                           ; BSR set to: 0
 16924                           ;display.c: 266: else;display.c: 267: space = 1;
 16925                           
 16926                           ; BSR set to: 0
 16927  00A2E2  0E01               	movlw	1
 16928  00A2E4                     L22:
 16929  00A2E4  6FC8               	movwf	display_prepare@space& (0+255),b
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;display.c: 268: for(cntr=0; temp[cntr]; ++cntr)
 16933  00A2E6  0E00               	movlw	0
 16934  00A2E8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16935  00A2EA  D018               	goto	l1343
 16936  00A2EC                     
 16937                           ; BSR set to: 0
 16938                           ;display.c: 269: {;display.c: 270: display_content[3][space+cntr] = temp[cntr];
 16939                           
 16940                           ; BSR set to: 0
 16941  00A2EC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16942  00A2EE  0D01               	mullw	1
 16943  00A2F0  0EBE               	movlw	low display_prepare@temp
 16944  00A2F2  24F3               	addwf	prodl,w,c
 16945  00A2F4  6ED9               	movwf	fsr2l,c
 16946  00A2F6  0E00               	movlw	high display_prepare@temp
 16947  00A2F8  20F4               	addwfc	prodh,w,c
 16948  00A2FA  6EDA               	movwf	fsr2h,c
 16949  00A2FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16950  00A2FE  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 16951  00A302  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16952  00A304  27BC               	addwf	??_display_prepare& (0+255),f,b
 16953  00A306  0E00               	movlw	0
 16954  00A308  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16955  00A30A  0EB4               	movlw	low (_display_content+60)
 16956  00A30C  25BC               	addwf	??_display_prepare& (0+255),w,b
 16957  00A30E  6EE1               	movwf	fsr1l,c
 16958  00A310  0E02               	movlw	high (_display_content+60)
 16959  00A312  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16960  00A314  6EE2               	movwf	fsr1h,c
 16961  00A316  CFDF FFE7          	movff	indf2,indf1
 16962                           
 16963                           ; BSR set to: 0
 16964  00A31A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16965  00A31C                     l1343:
 16966                           
 16967                           ; BSR set to: 0
 16968                           
 16969                           ; BSR set to: 0
 16970  00A31C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16971  00A31E  0D01               	mullw	1
 16972  00A320  0EBE               	movlw	low display_prepare@temp
 16973  00A322  24F3               	addwf	prodl,w,c
 16974  00A324  6ED9               	movwf	fsr2l,c
 16975  00A326  0E00               	movlw	high display_prepare@temp
 16976  00A328  20F4               	addwfc	prodh,w,c
 16977  00A32A  6EDA               	movwf	fsr2h,c
 16978  00A32C  50DF               	movf	indf2,w,c
 16979  00A32E  A4D8               	btfss	status,2,c
 16980  00A330  D7DD               	goto	l1344
 16981                           
 16982                           ; BSR set to: 2
 16983                           
 16984                           ; BSR set to: 2
 16985                           ;display.c: 280: }
 16986                           
 16987                           ;display.c: 279: break;
 16988                           
 16989                           ;display.c: 278: display_content[3][12] = '>';
 16990                           
 16991                           ; BSR set to: 2
 16992                           
 16993                           ;display.c: 277: case DISPLAY_STATE_SETUP1_CANCEL:
 16994                           
 16995                           ;display.c: 276: break;
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;display.c: 275: display_content[2][12] = '>';
 16999                           
 17000                           ; BSR set to: 0
 17001                           
 17002                           ;display.c: 273: {;display.c: 274: case DISPLAY_STATE_SETUP1_CONFIRM:
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;display.c: 271: };display.c: 272: switch(os.displayState)
 17006  00A332  0100               	movlb	0	; () banked
 17007  00A334  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 17008                           
 17009                           ; Switch size 1, requested type "space"
 17010                           ; Number of cases is 2, Range of values is 17 to 18
 17011                           ; switch strategies available:
 17012                           ; Name         Instructions Cycles
 17013                           ; simple_byte            7     4 (average)
 17014                           ;	Chosen strategy is simple_byte
 17015  00A336  0A11               	xorlw	17	; case 17
 17016  00A338  D08C               	goto	L28
 17017  00A33A                     
 17018                           ; BSR set to: 0
 17019                           ;display.c: 284: memcpy(display_content, dc_setup2, sizeof display_content);
 17020                           
 17021                           ; BSR set to: 0
 17022  00A33A  0E78               	movlw	low _display_content
 17023  00A33C  6F60               	movwf	memcpy@d1& (0+255),b
 17024  00A33E  0E02               	movlw	high _display_content
 17025  00A340  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17026  00A342  0ECE               	movlw	low _dc_setup2
 17027  00A344  6F62               	movwf	memcpy@s1& (0+255),b
 17028  00A346  0E9F               	movlw	high _dc_setup2
 17029  00A348  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17030  00A34A  0E00               	movlw	0
 17031  00A34C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17032  00A34E  0E50               	movlw	80
 17033  00A350  6F64               	movwf	memcpy@n& (0+255),b
 17034  00A352  ECE9  F08D         	call	_memcpy	;wreg free
 17035                           
 17036                           ;display.c: 285: switch(os.displayState)
 17037  00A356  D00A               	goto	l1351
 17038  00A358                     l1352:
 17039                           
 17040                           ;display.c: 288: display_content[2][0] = '>';
 17041  00A358  0E3E               	movlw	62
 17042  00A35A  0102               	movlb	2	; () banked
 17043  00A35C  6FA0               	movwf	(_display_content+40)& (0+255),b
 17044                           
 17045                           ;display.c: 289: break;
 17046  00A35E  EF32  F057         	goto	l1339
 17047  00A362                     l1354:
 17048                           
 17049                           ;display.c: 291: display_content[3][0] = '>';
 17050                           
 17051                           ; BSR set to: 2
 17052  00A362  0E3E               	movlw	62
 17053  00A364  0102               	movlb	2	; () banked
 17054  00A366  6FB4               	movwf	(_display_content+60)& (0+255),b
 17055                           
 17056                           ; BSR set to: 2
 17057                           ;display.c: 293: }
 17058                           
 17059                           ;display.c: 292: break;
 17060  00A368  EF32  F057         	goto	l1339
 17061  00A36C                     l1351:
 17062                           
 17063                           ; BSR set to: 2
 17064  00A36C  0100               	movlb	0	; () banked
 17065  00A36E  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 17066                           
 17067                           ; Switch size 1, requested type "space"
 17068                           ; Number of cases is 2, Range of values is 33 to 34
 17069                           ; switch strategies available:
 17070                           ; Name         Instructions Cycles
 17071                           ; simple_byte            7     4 (average)
 17072                           ;	Chosen strategy is simple_byte
 17073  00A370  0A21               	xorlw	33	; case 33
 17074  00A372  B4D8               	btfsc	status,2,c
 17075  00A374  D7F1               	goto	l1352
 17076  00A376  0A03               	xorlw	3	; case 34
 17077  00A378                     L79:
 17078  00A378  B4D8               	btfsc	status,2,c
 17079  00A37A  D7F3               	goto	l1354
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;display.c: 294: break;
 17083  00A37C  EF32  F057         	goto	l1339
 17084  00A380                     
 17085                           ; BSR set to: 0
 17086                           ;display.c: 297: memcpy(display_content, dc_divide1, sizeof display_content);
 17087                           
 17088                           ; BSR set to: 0
 17089  00A380  0E78               	movlw	low _display_content
 17090  00A382  6F60               	movwf	memcpy@d1& (0+255),b
 17091  00A384  0E02               	movlw	high _display_content
 17092  00A386  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17093  00A388  0E7E               	movlw	low _dc_divide1
 17094  00A38A  6F62               	movwf	memcpy@s1& (0+255),b
 17095  00A38C  0E9F               	movlw	high _dc_divide1
 17096  00A38E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17097  00A390  0E00               	movlw	0
 17098  00A392  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17099  00A394  0E50               	movlw	80
 17100  00A396  6F64               	movwf	memcpy@n& (0+255),b
 17101  00A398  ECE9  F08D         	call	_memcpy	;wreg free
 17102                           
 17103                           ;display.c: 299: _display_padded_itoa(os.divide_step_size, 3, temp);
 17104  00A39C  C0E8  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 17105  00A3A0  0100               	movlb	0	; () banked
 17106  00A3A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 17107  00A3A4  0E03               	movlw	3
 17108  00A3A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 17109  00A3A8  0EBE               	movlw	low display_prepare@temp
 17110  00A3AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 17111  00A3AC  0E00               	movlw	high display_prepare@temp
 17112  00A3AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 17113  00A3B0  EC51  F080         	call	__display_padded_itoa	;wreg free
 17114                           
 17115                           ;display.c: 300: for(cntr=0; cntr<3; ++cntr)
 17116  00A3B4  0E00               	movlw	0
 17117  00A3B6  0100               	movlb	0	; () banked
 17118  00A3B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17119  00A3BA                     l21953:
 17120                           
 17121                           ; BSR set to: 0
 17122  00A3BA  0E02               	movlw	2
 17123  00A3BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 17124  00A3BE  D001               	goto	l1356
 17125  00A3C0  D014               	goto	u22600
 17126  00A3C2                     l1356:
 17127                           
 17128                           ; BSR set to: 0
 17129                           ;display.c: 301: {;display.c: 302: display_content[2][cntr] = temp[cntr];
 17130                           
 17131                           ; BSR set to: 0
 17132  00A3C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17133  00A3C4  0D01               	mullw	1
 17134  00A3C6  0EBE               	movlw	low display_prepare@temp
 17135  00A3C8  24F3               	addwf	prodl,w,c
 17136  00A3CA  6ED9               	movwf	fsr2l,c
 17137  00A3CC  0E00               	movlw	high display_prepare@temp
 17138  00A3CE  20F4               	addwfc	prodh,w,c
 17139  00A3D0  6EDA               	movwf	fsr2h,c
 17140  00A3D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17141  00A3D4  0D01               	mullw	1
 17142  00A3D6  0EA0               	movlw	low (_display_content+40)
 17143  00A3D8  24F3               	addwf	prodl,w,c
 17144  00A3DA  6EE1               	movwf	fsr1l,c
 17145  00A3DC  0E02               	movlw	high (_display_content+40)
 17146  00A3DE  20F4               	addwfc	prodh,w,c
 17147  00A3E0  6EE2               	movwf	fsr1h,c
 17148  00A3E2  CFDF FFE7          	movff	indf2,indf1
 17149                           
 17150                           ; BSR set to: 0
 17151  00A3E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17152  00A3E8  D7E8               	goto	l21953
 17153  00A3EA                     u22600:
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;display.c: 303: };display.c: 305: _display_padded_itoa(os.division, 4, temp);
 17157                           
 17158                           ; BSR set to: 0
 17159  00A3EA  C0E6  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 17160  00A3EE  C0E7  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 17161  00A3F2  0E04               	movlw	4
 17162  00A3F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 17163  00A3F6  0EBE               	movlw	low display_prepare@temp
 17164  00A3F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 17165  00A3FA  0E00               	movlw	high display_prepare@temp
 17166  00A3FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 17167  00A3FE  EC51  F080         	call	__display_padded_itoa	;wreg free
 17168                           
 17169                           ;display.c: 306: for(cntr=0; cntr<4; ++cntr)
 17170  00A402  0E00               	movlw	0
 17171  00A404  0100               	movlb	0	; () banked
 17172  00A406  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17173  00A408                     l21967:
 17174                           
 17175                           ; BSR set to: 0
 17176  00A408  0E03               	movlw	3
 17177  00A40A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 17178  00A40C  D001               	goto	l1358
 17179  00A40E  D01E               	goto	l1360
 17180  00A410                     l1358:
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;display.c: 307: {;display.c: 308: display_content[3][cntr] = temp[cntr];
 17184                           
 17185                           ; BSR set to: 0
 17186  00A410  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17187  00A412  0D01               	mullw	1
 17188  00A414  0EBE               	movlw	low display_prepare@temp
 17189  00A416  24F3               	addwf	prodl,w,c
 17190  00A418  6ED9               	movwf	fsr2l,c
 17191  00A41A  0E00               	movlw	high display_prepare@temp
 17192  00A41C  20F4               	addwfc	prodh,w,c
 17193  00A41E  6EDA               	movwf	fsr2h,c
 17194  00A420  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17195  00A422  0D01               	mullw	1
 17196  00A424  0EB4               	movlw	low (_display_content+60)
 17197  00A426  24F3               	addwf	prodl,w,c
 17198  00A428  6EE1               	movwf	fsr1l,c
 17199  00A42A  0E02               	movlw	high (_display_content+60)
 17200  00A42C  20F4               	addwfc	prodh,w,c
 17201  00A42E  6EE2               	movwf	fsr1h,c
 17202  00A430  CFDF FFE7          	movff	indf2,indf1
 17203                           
 17204                           ; BSR set to: 0
 17205  00A434  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17206  00A436  D7E8               	goto	l21967
 17207  00A438                     
 17208                           ; BSR set to: 0
 17209                           ;display.c: 313: display_content[2][12] = '>';
 17210                           
 17211                           ; BSR set to: 0
 17212  00A438  0E3E               	movlw	62
 17213  00A43A  0102               	movlb	2	; () banked
 17214  00A43C  6FAC               	movwf	(_display_content+52)& (0+255),b
 17215                           
 17216                           ;display.c: 314: break;
 17217  00A43E  EF32  F057         	goto	l1339
 17218  00A442                     
 17219                           ;display.c: 316: display_content[3][12] = '>';
 17220                           
 17221                           ; BSR set to: 2
 17222  00A442  0E3E               	movlw	62
 17223  00A444  0102               	movlb	2	; () banked
 17224  00A446  6FC0               	movwf	(_display_content+72)& (0+255),b
 17225                           
 17226                           ; BSR set to: 2
 17227                           ;display.c: 318: }
 17228                           
 17229                           ;display.c: 317: break;
 17230  00A448  EF32  F057         	goto	l1339
 17231  00A44C                     l1360:
 17232                           
 17233                           ; BSR set to: 2
 17234  00A44C  0100               	movlb	0	; () banked
 17235  00A44E  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 17236                           
 17237                           ; Switch size 1, requested type "space"
 17238                           ; Number of cases is 2, Range of values is 49 to 50
 17239                           ; switch strategies available:
 17240                           ; Name         Instructions Cycles
 17241                           ; simple_byte            7     4 (average)
 17242                           ;	Chosen strategy is simple_byte
 17243  00A450  0A31               	xorlw	49	; case 49
 17244  00A452                     L28:
 17245  00A452  B4D8               	btfsc	status,2,c
 17246  00A454  D7F1               	goto	l1361
 17247  00A456  0A03               	xorlw	3	; case 50
 17248  00A458  B4D8               	btfsc	status,2,c
 17249  00A45A  D7F3               	goto	l1363
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;display.c: 319: break;
 17253  00A45C  EF32  F057         	goto	l1339
 17254  00A460                     
 17255                           ; BSR set to: 0
 17256                           ;display.c: 322: memcpy(display_content, dc_divide2, sizeof display_content);
 17257                           
 17258                           ; BSR set to: 0
 17259  00A460  0E78               	movlw	low _display_content
 17260  00A462  6F60               	movwf	memcpy@d1& (0+255),b
 17261  00A464  0E02               	movlw	high _display_content
 17262  00A466  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17263  00A468  0E2E               	movlw	low _dc_divide2
 17264  00A46A  6F62               	movwf	memcpy@s1& (0+255),b
 17265  00A46C  0E9F               	movlw	high _dc_divide2
 17266  00A46E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17267  00A470  0E00               	movlw	0
 17268  00A472  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17269  00A474  0E50               	movlw	80
 17270  00A476  6F64               	movwf	memcpy@n& (0+255),b
 17271  00A478  ECE9  F08D         	call	_memcpy	;wreg free
 17272                           
 17273                           ;display.c: 324: _display_padded_itoa(os.division, 0, temp);
 17274  00A47C  C0E6  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 17275  00A480  C0E7  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 17276  00A484  0E00               	movlw	0
 17277  00A486  0100               	movlb	0	; () banked
 17278  00A488  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 17279  00A48A  0EBE               	movlw	low display_prepare@temp
 17280  00A48C  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 17281  00A48E  0E00               	movlw	high display_prepare@temp
 17282  00A490  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 17283  00A492  EC51  F080         	call	__display_padded_itoa	;wreg free
 17284                           
 17285                           ;display.c: 325: for(cntr=0; temp[cntr]; ++cntr)
 17286  00A496  0E00               	movlw	0
 17287  00A498  0100               	movlb	0	; () banked
 17288  00A49A  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17289  00A49C  D018               	goto	l1365
 17290  00A49E                     
 17291                           ; BSR set to: 0
 17292                           ;display.c: 326: {;display.c: 327: display_content[0][cntr+8] = temp[cntr];
 17293                           
 17294                           ; BSR set to: 0
 17295  00A49E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17296  00A4A0  0D01               	mullw	1
 17297  00A4A2  0EBE               	movlw	low display_prepare@temp
 17298  00A4A4  24F3               	addwf	prodl,w,c
 17299  00A4A6  6ED9               	movwf	fsr2l,c
 17300  00A4A8  0E00               	movlw	high display_prepare@temp
 17301  00A4AA  20F4               	addwfc	prodh,w,c
 17302  00A4AC  6EDA               	movwf	fsr2h,c
 17303  00A4AE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17304  00A4B0  6FBC               	movwf	??_display_prepare& (0+255),b
 17305  00A4B2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17306  00A4B4  0E08               	movlw	8
 17307  00A4B6  27BC               	addwf	??_display_prepare& (0+255),f,b
 17308  00A4B8  0E00               	movlw	0
 17309  00A4BA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17310  00A4BC  0E78               	movlw	low _display_content
 17311  00A4BE  25BC               	addwf	??_display_prepare& (0+255),w,b
 17312  00A4C0  6EE1               	movwf	fsr1l,c
 17313  00A4C2  0E02               	movlw	high _display_content
 17314  00A4C4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17315  00A4C6  6EE2               	movwf	fsr1h,c
 17316  00A4C8  CFDF FFE7          	movff	indf2,indf1
 17317                           
 17318                           ; BSR set to: 0
 17319  00A4CC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17320  00A4CE                     l1365:
 17321                           
 17322                           ; BSR set to: 0
 17323                           
 17324                           ; BSR set to: 0
 17325  00A4CE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17326  00A4D0  0D01               	mullw	1
 17327  00A4D2  0EBE               	movlw	low display_prepare@temp
 17328  00A4D4  24F3               	addwf	prodl,w,c
 17329  00A4D6  6ED9               	movwf	fsr2l,c
 17330  00A4D8  0E00               	movlw	high display_prepare@temp
 17331  00A4DA  20F4               	addwfc	prodh,w,c
 17332  00A4DC  6EDA               	movwf	fsr2h,c
 17333  00A4DE  50DF               	movf	indf2,w,c
 17334  00A4E0  A4D8               	btfss	status,2,c
 17335  00A4E2  D7DD               	goto	l1366
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;display.c: 328: };display.c: 330: display_content[0][cntr+8] = ',';
 17339                           
 17340                           ; BSR set to: 0
 17341  00A4E4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17342  00A4E6  6FBC               	movwf	??_display_prepare& (0+255),b
 17343  00A4E8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17344  00A4EA  0E08               	movlw	8
 17345  00A4EC  27BC               	addwf	??_display_prepare& (0+255),f,b
 17346  00A4EE  0E00               	movlw	0
 17347  00A4F0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17348  00A4F2  0E78               	movlw	low _display_content
 17349  00A4F4  25BC               	addwf	??_display_prepare& (0+255),w,b
 17350  00A4F6  6ED9               	movwf	fsr2l,c
 17351  00A4F8  0E02               	movlw	high _display_content
 17352  00A4FA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17353  00A4FC  6EDA               	movwf	fsr2h,c
 17354  00A4FE  0E2C               	movlw	44
 17355  00A500  6EDF               	movwf	indf2,c
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;display.c: 331: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 17359  00A502  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 17360  00A504  A4D8               	btfss	status,2,c
 17361  00A506  D023               	goto	l1368
 17362                           
 17363                           ; BSR set to: 0
 17364                           ;display.c: 332: {;display.c: 333: display_content[0][cntr+10] = 'C';
 17365  00A508  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17366  00A50A  6FBC               	movwf	??_display_prepare& (0+255),b
 17367  00A50C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17368  00A50E  0E0A               	movlw	10
 17369  00A510  27BC               	addwf	??_display_prepare& (0+255),f,b
 17370  00A512  0E00               	movlw	0
 17371  00A514  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17372  00A516  0E78               	movlw	low _display_content
 17373  00A518  25BC               	addwf	??_display_prepare& (0+255),w,b
 17374  00A51A  6ED9               	movwf	fsr2l,c
 17375  00A51C  0E02               	movlw	high _display_content
 17376  00A51E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17377  00A520  6EDA               	movwf	fsr2h,c
 17378  00A522  0E43               	movlw	67
 17379  00A524  6EDF               	movwf	indf2,c
 17380                           
 17381                           ;display.c: 334: display_content[0][cntr+11] = 'C';
 17382  00A526  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17383  00A528  6FBC               	movwf	??_display_prepare& (0+255),b
 17384  00A52A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17385  00A52C  0E0B               	movlw	11
 17386  00A52E  27BC               	addwf	??_display_prepare& (0+255),f,b
 17387  00A530  0E00               	movlw	0
 17388  00A532  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17389  00A534  0E78               	movlw	low _display_content
 17390  00A536  25BC               	addwf	??_display_prepare& (0+255),w,b
 17391  00A538  6ED9               	movwf	fsr2l,c
 17392  00A53A  0E02               	movlw	high _display_content
 17393  00A53C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17394  00A53E  6EDA               	movwf	fsr2h,c
 17395  00A540  0E43               	movlw	67
 17396  00A542  6EDF               	movwf	indf2,c
 17397                           
 17398                           ;display.c: 335: display_content[0][cntr+12] = 'W';
 17399  00A544  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17400  00A546  6FBC               	movwf	??_display_prepare& (0+255),b
 17401  00A548  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17402  00A54A  0E0C               	movlw	12
 17403  00A54C  D013               	goto	L29
 17404  00A54E                     l1368:
 17405                           
 17406                           ; BSR set to: 0
 17407                           ;display.c: 337: else;display.c: 338: {;display.c: 339: display_content[0][cntr+10] = 'C
      +                          ';
 17408                           
 17409                           ; BSR set to: 0
 17410  00A54E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17411  00A550  6FBC               	movwf	??_display_prepare& (0+255),b
 17412  00A552  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17413  00A554  0E0A               	movlw	10
 17414  00A556  27BC               	addwf	??_display_prepare& (0+255),f,b
 17415  00A558  0E00               	movlw	0
 17416  00A55A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17417  00A55C  0E78               	movlw	low _display_content
 17418  00A55E  25BC               	addwf	??_display_prepare& (0+255),w,b
 17419  00A560  6ED9               	movwf	fsr2l,c
 17420  00A562  0E02               	movlw	high _display_content
 17421  00A564  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17422  00A566  6EDA               	movwf	fsr2h,c
 17423  00A568  0E43               	movlw	67
 17424  00A56A  6EDF               	movwf	indf2,c
 17425                           
 17426                           ;display.c: 340: display_content[0][cntr+11] = 'W';
 17427  00A56C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17428  00A56E  6FBC               	movwf	??_display_prepare& (0+255),b
 17429  00A570  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17430  00A572  0E0B               	movlw	11
 17431  00A574                     L29:
 17432  00A574  27BC               	addwf	??_display_prepare& (0+255),f,b
 17433  00A576  0E00               	movlw	0
 17434  00A578  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17435  00A57A  0E78               	movlw	low _display_content
 17436  00A57C  25BC               	addwf	??_display_prepare& (0+255),w,b
 17437  00A57E  6ED9               	movwf	fsr2l,c
 17438  00A580  0E02               	movlw	high _display_content
 17439  00A582  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17440  00A584  6EDA               	movwf	fsr2h,c
 17441  00A586  0E57               	movlw	87
 17442  00A588  6EDF               	movwf	indf2,c
 17443                           
 17444                           ; BSR set to: 0
 17445                           ;display.c: 341: };display.c: 343: _display_padded_itoa(os.divide_position, 0, temp);
 17446                           
 17447                           ; BSR set to: 0
 17448  00A58A  C0E9  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 17449  00A58E  C0EA  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 17450  00A592  0E00               	movlw	0
 17451  00A594  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 17452  00A596  0EBE               	movlw	low display_prepare@temp
 17453  00A598  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 17454  00A59A  0E00               	movlw	high display_prepare@temp
 17455  00A59C  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 17456  00A59E  EC51  F080         	call	__display_padded_itoa	;wreg free
 17457                           
 17458                           ;display.c: 344: for(cntr=0; temp[cntr]; ++cntr)
 17459  00A5A2  0E00               	movlw	0
 17460  00A5A4  0100               	movlb	0	; () banked
 17461  00A5A6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17462  00A5A8  D018               	goto	l1370
 17463  00A5AA                     
 17464                           ; BSR set to: 0
 17465                           ;display.c: 345: {;display.c: 346: display_content[1][cntr+5] = temp[cntr];
 17466                           
 17467                           ; BSR set to: 0
 17468  00A5AA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17469  00A5AC  0D01               	mullw	1
 17470  00A5AE  0EBE               	movlw	low display_prepare@temp
 17471  00A5B0  24F3               	addwf	prodl,w,c
 17472  00A5B2  6ED9               	movwf	fsr2l,c
 17473  00A5B4  0E00               	movlw	high display_prepare@temp
 17474  00A5B6  20F4               	addwfc	prodh,w,c
 17475  00A5B8  6EDA               	movwf	fsr2h,c
 17476  00A5BA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17477  00A5BC  6FBC               	movwf	??_display_prepare& (0+255),b
 17478  00A5BE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17479  00A5C0  0E05               	movlw	5
 17480  00A5C2  27BC               	addwf	??_display_prepare& (0+255),f,b
 17481  00A5C4  0E00               	movlw	0
 17482  00A5C6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17483  00A5C8  0E8C               	movlw	low (_display_content+20)
 17484  00A5CA  25BC               	addwf	??_display_prepare& (0+255),w,b
 17485  00A5CC  6EE1               	movwf	fsr1l,c
 17486  00A5CE  0E02               	movlw	high (_display_content+20)
 17487  00A5D0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17488  00A5D2  6EE2               	movwf	fsr1h,c
 17489  00A5D4  CFDF FFE7          	movff	indf2,indf1
 17490                           
 17491                           ; BSR set to: 0
 17492  00A5D8  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17493  00A5DA                     l1370:
 17494                           
 17495                           ; BSR set to: 0
 17496                           
 17497                           ; BSR set to: 0
 17498  00A5DA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17499  00A5DC  0D01               	mullw	1
 17500  00A5DE  0EBE               	movlw	low display_prepare@temp
 17501  00A5E0  24F3               	addwf	prodl,w,c
 17502  00A5E2  6ED9               	movwf	fsr2l,c
 17503  00A5E4  0E00               	movlw	high display_prepare@temp
 17504  00A5E6  20F4               	addwfc	prodh,w,c
 17505  00A5E8  6EDA               	movwf	fsr2h,c
 17506  00A5EA  50DF               	movf	indf2,w,c
 17507  00A5EC  A4D8               	btfss	status,2,c
 17508  00A5EE  D7DD               	goto	l1371
 17509                           
 17510                           ; BSR set to: 0
 17511                           ;display.c: 347: };display.c: 349: display_content[1][cntr+6] = '(';
 17512                           
 17513                           ; BSR set to: 0
 17514  00A5F0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17515  00A5F2  6FBC               	movwf	??_display_prepare& (0+255),b
 17516  00A5F4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17517  00A5F6  0E06               	movlw	6
 17518  00A5F8  27BC               	addwf	??_display_prepare& (0+255),f,b
 17519  00A5FA  0E00               	movlw	0
 17520  00A5FC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17521  00A5FE  0E8C               	movlw	low (_display_content+20)
 17522  00A600  25BC               	addwf	??_display_prepare& (0+255),w,b
 17523  00A602  6ED9               	movwf	fsr2l,c
 17524  00A604  0E02               	movlw	high (_display_content+20)
 17525  00A606  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17526  00A608  6EDA               	movwf	fsr2h,c
 17527  00A60A  0E28               	movlw	40
 17528  00A60C  6EDF               	movwf	indf2,c
 17529                           
 17530                           ; BSR set to: 0
 17531                           ;display.c: 350: space = cntr + 7;
 17532  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17533  00A610  0F07               	addlw	7
 17534  00A612  6FC8               	movwf	display_prepare@space& (0+255),b
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;display.c: 351: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 17538  00A614  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 17539  00A618  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 17540  00A61C  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 17541  00A61E  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 17542  00A620  0E02               	movlw	2
 17543  00A622  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 17544  00A624  0EBE               	movlw	low display_prepare@temp
 17545  00A626  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 17546  00A628  0E00               	movlw	high display_prepare@temp
 17547  00A62A  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 17548  00A62C  ECC7  F07A         	call	__display_itoa_long	;wreg free
 17549                           
 17550                           ;display.c: 352: for(cntr=0; temp[cntr]; ++cntr)
 17551  00A630  0E00               	movlw	0
 17552  00A632  0100               	movlb	0	; () banked
 17553  00A634  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17554  00A636  D018               	goto	l1373
 17555  00A638                     
 17556                           ; BSR set to: 0
 17557                           ;display.c: 353: {;display.c: 354: display_content[1][cntr+space] = temp[cntr];
 17558                           
 17559                           ; BSR set to: 0
 17560  00A638  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17561  00A63A  0D01               	mullw	1
 17562  00A63C  0EBE               	movlw	low display_prepare@temp
 17563  00A63E  24F3               	addwf	prodl,w,c
 17564  00A640  6ED9               	movwf	fsr2l,c
 17565  00A642  0E00               	movlw	high display_prepare@temp
 17566  00A644  20F4               	addwfc	prodh,w,c
 17567  00A646  6EDA               	movwf	fsr2h,c
 17568  00A648  51C8               	movf	display_prepare@space& (0+255),w,b
 17569  00A64A  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 17570  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17571  00A650  27BC               	addwf	??_display_prepare& (0+255),f,b
 17572  00A652  0E00               	movlw	0
 17573  00A654  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17574  00A656  0E8C               	movlw	low (_display_content+20)
 17575  00A658  25BC               	addwf	??_display_prepare& (0+255),w,b
 17576  00A65A  6EE1               	movwf	fsr1l,c
 17577  00A65C  0E02               	movlw	high (_display_content+20)
 17578  00A65E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17579  00A660  6EE2               	movwf	fsr1h,c
 17580  00A662  CFDF FFE7          	movff	indf2,indf1
 17581                           
 17582                           ; BSR set to: 0
 17583  00A666  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17584  00A668                     l1373:
 17585                           
 17586                           ; BSR set to: 0
 17587                           
 17588                           ; BSR set to: 0
 17589  00A668  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17590  00A66A  0D01               	mullw	1
 17591  00A66C  0EBE               	movlw	low display_prepare@temp
 17592  00A66E  24F3               	addwf	prodl,w,c
 17593  00A670  6ED9               	movwf	fsr2l,c
 17594  00A672  0E00               	movlw	high display_prepare@temp
 17595  00A674  20F4               	addwfc	prodh,w,c
 17596  00A676  6EDA               	movwf	fsr2h,c
 17597  00A678  50DF               	movf	indf2,w,c
 17598  00A67A  A4D8               	btfss	status,2,c
 17599  00A67C  D7DD               	goto	l1374
 17600                           
 17601                           ; BSR set to: 0
 17602                           ;display.c: 355: };display.c: 356: display_content[1][cntr+space] = 0x01;
 17603                           
 17604                           ; BSR set to: 0
 17605  00A67E  51C8               	movf	display_prepare@space& (0+255),w,b
 17606  00A680  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 17607  00A684  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17608  00A686  27BC               	addwf	??_display_prepare& (0+255),f,b
 17609  00A688  0E00               	movlw	0
 17610  00A68A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17611  00A68C  0E8C               	movlw	low (_display_content+20)
 17612  00A68E  25BC               	addwf	??_display_prepare& (0+255),w,b
 17613  00A690  6ED9               	movwf	fsr2l,c
 17614  00A692  0E02               	movlw	high (_display_content+20)
 17615  00A694  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17616  00A696  6EDA               	movwf	fsr2h,c
 17617  00A698  0E01               	movlw	1
 17618  00A69A  6EDF               	movwf	indf2,c
 17619                           
 17620                           ;display.c: 357: display_content[1][cntr+space+1] = ')';
 17621  00A69C  51C8               	movf	display_prepare@space& (0+255),w,b
 17622  00A69E  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 17623  00A6A2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17624  00A6A4  27BC               	addwf	??_display_prepare& (0+255),f,b
 17625  00A6A6  0E00               	movlw	0
 17626  00A6A8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17627  00A6AA  0E01               	movlw	1
 17628  00A6AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 17629  00A6AE  0E00               	movlw	0
 17630  00A6B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17631  00A6B2  0E8C               	movlw	low (_display_content+20)
 17632  00A6B4  25BC               	addwf	??_display_prepare& (0+255),w,b
 17633  00A6B6  6ED9               	movwf	fsr2l,c
 17634  00A6B8  0E02               	movlw	high (_display_content+20)
 17635  00A6BA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17636  00A6BC  6EDA               	movwf	fsr2h,c
 17637  00A6BE  0E29               	movlw	41
 17638  00A6C0  6EDF               	movwf	indf2,c
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;display.c: 359: _display_signed_itoa(os.divide_jump_size, temp);
 17642  00A6C2  C0EB  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 17643  00A6C6  C0EC  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 17644  00A6CA  0EBE               	movlw	low display_prepare@temp
 17645  00A6CC  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 17646  00A6CE  0E00               	movlw	high display_prepare@temp
 17647  00A6D0  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 17648  00A6D2  EC8D  F091         	call	__display_signed_itoa	;wreg free
 17649                           
 17650                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 17651  00A6D6  0E00               	movlw	0
 17652  00A6D8  0100               	movlb	0	; () banked
 17653  00A6DA  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17654  00A6DC  D018               	goto	l1376
 17655  00A6DE                     
 17656                           ; BSR set to: 0
 17657                           ;display.c: 361: {;display.c: 362: display_content[2][cntr+11] = temp[cntr];
 17658                           
 17659                           ; BSR set to: 0
 17660  00A6DE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17661  00A6E0  0D01               	mullw	1
 17662  00A6E2  0EBE               	movlw	low display_prepare@temp
 17663  00A6E4  24F3               	addwf	prodl,w,c
 17664  00A6E6  6ED9               	movwf	fsr2l,c
 17665  00A6E8  0E00               	movlw	high display_prepare@temp
 17666  00A6EA  20F4               	addwfc	prodh,w,c
 17667  00A6EC  6EDA               	movwf	fsr2h,c
 17668  00A6EE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17669  00A6F0  6FBC               	movwf	??_display_prepare& (0+255),b
 17670  00A6F2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17671  00A6F4  0E0B               	movlw	11
 17672  00A6F6  27BC               	addwf	??_display_prepare& (0+255),f,b
 17673  00A6F8  0E00               	movlw	0
 17674  00A6FA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17675  00A6FC  0EA0               	movlw	low (_display_content+40)
 17676  00A6FE  25BC               	addwf	??_display_prepare& (0+255),w,b
 17677  00A700  6EE1               	movwf	fsr1l,c
 17678  00A702  0E02               	movlw	high (_display_content+40)
 17679  00A704  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17680  00A706  6EE2               	movwf	fsr1h,c
 17681  00A708  CFDF FFE7          	movff	indf2,indf1
 17682                           
 17683                           ; BSR set to: 0
 17684  00A70C  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17685  00A70E                     l1376:
 17686                           
 17687                           ; BSR set to: 0
 17688                           
 17689                           ; BSR set to: 0
 17690  00A70E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17691  00A710  0D01               	mullw	1
 17692  00A712  0EBE               	movlw	low display_prepare@temp
 17693  00A714  24F3               	addwf	prodl,w,c
 17694  00A716  6ED9               	movwf	fsr2l,c
 17695  00A718  0E00               	movlw	high display_prepare@temp
 17696  00A71A  20F4               	addwfc	prodh,w,c
 17697  00A71C  6EDA               	movwf	fsr2h,c
 17698  00A71E  50DF               	movf	indf2,w,c
 17699  00A720  B4D8               	btfsc	status,2,c
 17700  00A722  D3A0               	goto	l1339
 17701  00A724  D7DC               	goto	l1377
 17702  00A726                     
 17703                           ; BSR set to: 0
 17704                           ;display.c: 367: memcpy(display_content, dc_arc1, sizeof display_content);
 17705                           
 17706                           ; BSR set to: 0
 17707  00A726  0E78               	movlw	low _display_content
 17708  00A728  6F60               	movwf	memcpy@d1& (0+255),b
 17709  00A72A  0E02               	movlw	high _display_content
 17710  00A72C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17711  00A72E  0EDE               	movlw	low _dc_arc1
 17712  00A730  6F62               	movwf	memcpy@s1& (0+255),b
 17713  00A732  0E9E               	movlw	high _dc_arc1
 17714  00A734  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17715  00A736  0E00               	movlw	0
 17716  00A738  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17717  00A73A  0E50               	movlw	80
 17718  00A73C  6F64               	movwf	memcpy@n& (0+255),b
 17719  00A73E  ECE9  F08D         	call	_memcpy	;wreg free
 17720                           
 17721                           ;display.c: 368: switch(os.displayState)
 17722  00A742  D008               	goto	l1380
 17723  00A744                     
 17724                           ;display.c: 371: display_content[2][12] = '>';
 17725  00A744  0E3E               	movlw	62
 17726  00A746  0102               	movlb	2	; () banked
 17727  00A748  6FAC               	movwf	(_display_content+52)& (0+255),b
 17728                           
 17729                           ;display.c: 372: break;
 17730  00A74A  D00C               	goto	l1382
 17731  00A74C                     
 17732                           ;display.c: 374: display_content[3][12] = '>';
 17733                           
 17734                           ; BSR set to: 2
 17735  00A74C  0E3E               	movlw	62
 17736  00A74E  0102               	movlb	2	; () banked
 17737  00A750  6FC0               	movwf	(_display_content+72)& (0+255),b
 17738                           
 17739                           ; BSR set to: 2
 17740                           ;display.c: 376: }
 17741                           
 17742                           ;display.c: 375: break;
 17743  00A752  D008               	goto	l1382
 17744  00A754                     l1380:
 17745                           
 17746                           ; BSR set to: 2
 17747  00A754  0100               	movlb	0	; () banked
 17748  00A756  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 17749                           
 17750                           ; Switch size 1, requested type "space"
 17751                           ; Number of cases is 2, Range of values is 81 to 82
 17752                           ; switch strategies available:
 17753                           ; Name         Instructions Cycles
 17754                           ; simple_byte            7     4 (average)
 17755                           ;	Chosen strategy is simple_byte
 17756  00A758  0A51               	xorlw	81	; case 81
 17757  00A75A  B4D8               	btfsc	status,2,c
 17758  00A75C  D7F3               	goto	l1381
 17759  00A75E  0A03               	xorlw	3	; case 82
 17760  00A760  B4D8               	btfsc	status,2,c
 17761  00A762  D7F4               	goto	l1383
 17762  00A764                     l1382:
 17763                           
 17764                           ;display.c: 379: _display_itoa_long(os.arc_size, 2, temp);
 17765                           
 17766                           ; BSR set to: 0
 17767  00A764  C0EF  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 17768  00A768  C0F0  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 17769  00A76C  C0F1  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 17770  00A770  C0F2  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 17771  00A774  0E02               	movlw	2
 17772  00A776  0100               	movlb	0	; () banked
 17773  00A778  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 17774  00A77A  0EBE               	movlw	low display_prepare@temp
 17775  00A77C  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 17776  00A77E  0E00               	movlw	high display_prepare@temp
 17777  00A780  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 17778  00A782  ECC7  F07A         	call	__display_itoa_long	;wreg free
 17779                           
 17780                           ;display.c: 380: for(cntr=0; temp[cntr]; ++cntr)
 17781  00A786  0E00               	movlw	0
 17782  00A788  0100               	movlb	0	; () banked
 17783  00A78A  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17784  00A78C  D018               	goto	l1384
 17785  00A78E                     
 17786                           ; BSR set to: 0
 17787                           ;display.c: 381: {;display.c: 382: display_content[1][10+cntr] = temp[cntr];
 17788                           
 17789                           ; BSR set to: 0
 17790  00A78E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17791  00A790  0D01               	mullw	1
 17792  00A792  0EBE               	movlw	low display_prepare@temp
 17793  00A794  24F3               	addwf	prodl,w,c
 17794  00A796  6ED9               	movwf	fsr2l,c
 17795  00A798  0E00               	movlw	high display_prepare@temp
 17796  00A79A  20F4               	addwfc	prodh,w,c
 17797  00A79C  6EDA               	movwf	fsr2h,c
 17798  00A79E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17799  00A7A0  6FBC               	movwf	??_display_prepare& (0+255),b
 17800  00A7A2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17801  00A7A4  0E0A               	movlw	10
 17802  00A7A6  27BC               	addwf	??_display_prepare& (0+255),f,b
 17803  00A7A8  0E00               	movlw	0
 17804  00A7AA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17805  00A7AC  0E8C               	movlw	low (_display_content+20)
 17806  00A7AE  25BC               	addwf	??_display_prepare& (0+255),w,b
 17807  00A7B0  6EE1               	movwf	fsr1l,c
 17808  00A7B2  0E02               	movlw	high (_display_content+20)
 17809  00A7B4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17810  00A7B6  6EE2               	movwf	fsr1h,c
 17811  00A7B8  CFDF FFE7          	movff	indf2,indf1
 17812                           
 17813                           ; BSR set to: 0
 17814  00A7BC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17815  00A7BE                     l1384:
 17816                           
 17817                           ; BSR set to: 0
 17818                           
 17819                           ; BSR set to: 0
 17820  00A7BE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17821  00A7C0  0D01               	mullw	1
 17822  00A7C2  0EBE               	movlw	low display_prepare@temp
 17823  00A7C4  24F3               	addwf	prodl,w,c
 17824  00A7C6  6ED9               	movwf	fsr2l,c
 17825  00A7C8  0E00               	movlw	high display_prepare@temp
 17826  00A7CA  20F4               	addwfc	prodh,w,c
 17827  00A7CC  6EDA               	movwf	fsr2h,c
 17828  00A7CE  50DF               	movf	indf2,w,c
 17829  00A7D0  A4D8               	btfss	status,2,c
 17830  00A7D2  D7DD               	goto	l1385
 17831                           
 17832                           ; BSR set to: 0
 17833                           ;display.c: 383: };display.c: 384: display_content[1][10+cntr] = 0x01;
 17834                           
 17835                           ; BSR set to: 0
 17836  00A7D4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17837  00A7D6  6FBC               	movwf	??_display_prepare& (0+255),b
 17838  00A7D8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17839  00A7DA  0E0A               	movlw	10
 17840  00A7DC  27BC               	addwf	??_display_prepare& (0+255),f,b
 17841  00A7DE  0E00               	movlw	0
 17842  00A7E0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17843  00A7E2  0E8C               	movlw	low (_display_content+20)
 17844  00A7E4  25BC               	addwf	??_display_prepare& (0+255),w,b
 17845  00A7E6  6ED9               	movwf	fsr2l,c
 17846  00A7E8  0E02               	movlw	high (_display_content+20)
 17847  00A7EA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17848  00A7EC  6EDA               	movwf	fsr2h,c
 17849  00A7EE  0E01               	movlw	1
 17850  00A7F0  6EDF               	movwf	indf2,c
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;display.c: 387: _display_itoa(os.arc_step_size, 2, temp);
 17854  00A7F2  C0ED  F095         	movff	_os+26,__display_itoa@value	;volatile
 17855  00A7F6  C0EE  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 17856  00A7FA  0E02               	movlw	2
 17857  00A7FC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17858  00A7FE  0EBE               	movlw	low display_prepare@temp
 17859  00A800  6F98               	movwf	__display_itoa@text& (0+255),b
 17860  00A802  0E00               	movlw	high display_prepare@temp
 17861  00A804  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17862  00A806  EC9F  F06B         	call	__display_itoa	;wreg free
 17863                           
 17864                           ;display.c: 388: if(os.arc_step_size>999)
 17865  00A80A  0EE8               	movlw	232
 17866  00A80C  0100               	movlb	0	; () banked
 17867  00A80E  5DED               	subwf	(_os+26)& (0+255),w,b	;volatile
 17868  00A810  0E03               	movlw	3
 17869  00A812  59EE               	subwfb	(_os+27)& (0+255),w,b	;volatile
 17870  00A814  A0D8               	btfss	status,0,c
 17871  00A816  D002               	goto	l1387
 17872                           
 17873                           ; BSR set to: 0
 17874                           ;display.c: 389: space = 0;
 17875  00A818  0E00               	movlw	0
 17876  00A81A  D001               	goto	L23
 17877  00A81C                     l1387:
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;display.c: 390: else;display.c: 391: space = 1;
 17881                           
 17882                           ; BSR set to: 0
 17883  00A81C  0E01               	movlw	1
 17884  00A81E                     L23:
 17885  00A81E  6FC8               	movwf	display_prepare@space& (0+255),b
 17886                           
 17887                           ; BSR set to: 0
 17888                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 17889  00A820  0E00               	movlw	0
 17890  00A822  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17891  00A824  D018               	goto	l1389
 17892  00A826                     
 17893                           ; BSR set to: 0
 17894                           ;display.c: 393: {;display.c: 394: display_content[3][space+cntr] = temp[cntr];
 17895                           
 17896                           ; BSR set to: 0
 17897  00A826  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17898  00A828  0D01               	mullw	1
 17899  00A82A  0EBE               	movlw	low display_prepare@temp
 17900  00A82C  24F3               	addwf	prodl,w,c
 17901  00A82E  6ED9               	movwf	fsr2l,c
 17902  00A830  0E00               	movlw	high display_prepare@temp
 17903  00A832  20F4               	addwfc	prodh,w,c
 17904  00A834  6EDA               	movwf	fsr2h,c
 17905  00A836  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17906  00A838  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 17907  00A83C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17908  00A83E  27BC               	addwf	??_display_prepare& (0+255),f,b
 17909  00A840  0E00               	movlw	0
 17910  00A842  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17911  00A844  0EB4               	movlw	low (_display_content+60)
 17912  00A846  25BC               	addwf	??_display_prepare& (0+255),w,b
 17913  00A848  6EE1               	movwf	fsr1l,c
 17914  00A84A  0E02               	movlw	high (_display_content+60)
 17915  00A84C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17916  00A84E  6EE2               	movwf	fsr1h,c
 17917  00A850  CFDF FFE7          	movff	indf2,indf1
 17918                           
 17919                           ; BSR set to: 0
 17920  00A854  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17921  00A856                     l1389:
 17922                           
 17923                           ; BSR set to: 0
 17924                           
 17925                           ; BSR set to: 0
 17926  00A856  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17927  00A858  0D01               	mullw	1
 17928  00A85A  0EBE               	movlw	low display_prepare@temp
 17929  00A85C  24F3               	addwf	prodl,w,c
 17930  00A85E  6ED9               	movwf	fsr2l,c
 17931  00A860  0E00               	movlw	high display_prepare@temp
 17932  00A862  20F4               	addwfc	prodh,w,c
 17933  00A864  6EDA               	movwf	fsr2h,c
 17934  00A866  50DF               	movf	indf2,w,c
 17935  00A868  A4D8               	btfss	status,2,c
 17936  00A86A  D7DD               	goto	l1390
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;display.c: 395: };display.c: 396: display_content[3][space+cntr] = 0x01 ;
 17940                           
 17941                           ; BSR set to: 0
 17942  00A86C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17943  00A86E  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 17944  00A872  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17945  00A874  27BC               	addwf	??_display_prepare& (0+255),f,b
 17946  00A876  0E00               	movlw	0
 17947  00A878  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17948  00A87A  0EB4               	movlw	low (_display_content+60)
 17949  00A87C  25BC               	addwf	??_display_prepare& (0+255),w,b
 17950  00A87E  6ED9               	movwf	fsr2l,c
 17951  00A880  0E02               	movlw	high (_display_content+60)
 17952  00A882  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17953  00A884  6EDA               	movwf	fsr2h,c
 17954  00A886  0E01               	movlw	1
 17955  00A888  D25B               	goto	L26
 17956  00A88A                     
 17957                           ; BSR set to: 0
 17958                           ;display.c: 401: memcpy(display_content, dc_arc2, sizeof display_content);
 17959                           
 17960                           ; BSR set to: 0
 17961  00A88A  0E78               	movlw	low _display_content
 17962  00A88C  6F60               	movwf	memcpy@d1& (0+255),b
 17963  00A88E  0E02               	movlw	high _display_content
 17964  00A890  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17965  00A892  0E8E               	movlw	low _dc_arc2
 17966  00A894  6F62               	movwf	memcpy@s1& (0+255),b
 17967  00A896  0E9E               	movlw	high _dc_arc2
 17968  00A898  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17969  00A89A  0E00               	movlw	0
 17970  00A89C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17971  00A89E  0E50               	movlw	80
 17972  00A8A0  6F64               	movwf	memcpy@n& (0+255),b
 17973  00A8A2  ECE9  F08D         	call	_memcpy	;wreg free
 17974                           
 17975                           ;display.c: 402: switch(os.displayState)
 17976  00A8A6  D025               	goto	l1393
 17977  00A8A8                     
 17978                           ;display.c: 405: display_content[2][6] = 'W';
 17979  00A8A8  0E57               	movlw	87
 17980  00A8AA  0102               	movlb	2	; () banked
 17981  00A8AC  6FA6               	movwf	(_display_content+46)& (0+255),b
 17982                           
 17983                           ;display.c: 406: display_content[2][7] = ' ';
 17984  00A8AE  0E20               	movlw	32
 17985  00A8B0  6FA7               	movwf	(_display_content+47)& (0+255),b
 17986                           
 17987                           ;display.c: 407: break;
 17988  00A8B2  D027               	goto	l1395
 17989  00A8B4                     
 17990                           ;display.c: 409: memcpy(display_content[2], "        ", 8);
 17991                           
 17992                           ; BSR set to: 2
 17993  00A8B4  0EA0               	movlw	low (_display_content+40)
 17994  00A8B6  0100               	movlb	0	; () banked
 17995  00A8B8  6F60               	movwf	memcpy@d1& (0+255),b
 17996  00A8BA  0E02               	movlw	high (_display_content+40)
 17997  00A8BC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17998  00A8BE  0E1C               	movlw	low STR_1
 17999  00A8C0  6F62               	movwf	memcpy@s1& (0+255),b
 18000  00A8C2  0EA2               	movlw	high STR_1
 18001  00A8C4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18002  00A8C6  0E00               	movlw	0
 18003  00A8C8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18004  00A8CA  0E08               	movlw	8
 18005  00A8CC  6F64               	movwf	memcpy@n& (0+255),b
 18006  00A8CE  ECE9  F08D         	call	_memcpy	;wreg free
 18007                           
 18008                           ;display.c: 410: memcpy(display_content[3], "Cancel", 6);
 18009  00A8D2  0EB4               	movlw	low (_display_content+60)
 18010  00A8D4  0100               	movlb	0	; () banked
 18011  00A8D6  6F60               	movwf	memcpy@d1& (0+255),b
 18012  00A8D8  0E02               	movlw	high (_display_content+60)
 18013  00A8DA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18014  00A8DC  0E25               	movlw	low STR_2
 18015  00A8DE  6F62               	movwf	memcpy@s1& (0+255),b
 18016  00A8E0  0EA2               	movlw	high STR_2
 18017  00A8E2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18018  00A8E4  0E00               	movlw	0
 18019  00A8E6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18020  00A8E8  0E06               	movlw	6
 18021  00A8EA  6F64               	movwf	memcpy@n& (0+255),b
 18022  00A8EC  ECE9  F08D         	call	_memcpy	;wreg free
 18023                           
 18024                           ;display.c: 412: }
 18025                           
 18026                           ;display.c: 411: break;
 18027  00A8F0  D008               	goto	l1395
 18028  00A8F2                     l1393:
 18029  00A8F2  0100               	movlb	0	; () banked
 18030  00A8F4  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 18031                           
 18032                           ; Switch size 1, requested type "space"
 18033                           ; Number of cases is 2, Range of values is 98 to 99
 18034                           ; switch strategies available:
 18035                           ; Name         Instructions Cycles
 18036                           ; simple_byte            7     4 (average)
 18037                           ;	Chosen strategy is simple_byte
 18038  00A8F6  0A62               	xorlw	98	; case 98
 18039  00A8F8  B4D8               	btfsc	status,2,c
 18040  00A8FA  D7DC               	goto	l1396
 18041  00A8FC  0A01               	xorlw	1	; case 99
 18042  00A8FE  B4D8               	btfsc	status,2,c
 18043  00A900  D7D3               	goto	l1394
 18044  00A902                     l1395:
 18045                           
 18046                           ;display.c: 415: _display_itoa_long(os.arc_size, 2, temp);
 18047                           
 18048                           ; BSR set to: 0
 18049  00A902  C0EF  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 18050  00A906  C0F0  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 18051  00A90A  C0F1  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 18052  00A90E  C0F2  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 18053  00A912  0E02               	movlw	2
 18054  00A914  0100               	movlb	0	; () banked
 18055  00A916  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 18056  00A918  0EBE               	movlw	low display_prepare@temp
 18057  00A91A  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 18058  00A91C  0E00               	movlw	high display_prepare@temp
 18059  00A91E  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 18060  00A920  ECC7  F07A         	call	__display_itoa_long	;wreg free
 18061                           
 18062                           ;display.c: 416: for(cntr=0; temp[cntr]; ++cntr)
 18063  00A924  0E00               	movlw	0
 18064  00A926  0100               	movlb	0	; () banked
 18065  00A928  6FC9               	movwf	display_prepare@cntr& (0+255),b
 18066  00A92A  D018               	goto	l1397
 18067  00A92C                     
 18068                           ; BSR set to: 0
 18069                           ;display.c: 417: {;display.c: 418: display_content[0][10+cntr] = temp[cntr];
 18070                           
 18071                           ; BSR set to: 0
 18072  00A92C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18073  00A92E  0D01               	mullw	1
 18074  00A930  0EBE               	movlw	low display_prepare@temp
 18075  00A932  24F3               	addwf	prodl,w,c
 18076  00A934  6ED9               	movwf	fsr2l,c
 18077  00A936  0E00               	movlw	high display_prepare@temp
 18078  00A938  20F4               	addwfc	prodh,w,c
 18079  00A93A  6EDA               	movwf	fsr2h,c
 18080  00A93C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18081  00A93E  6FBC               	movwf	??_display_prepare& (0+255),b
 18082  00A940  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18083  00A942  0E0A               	movlw	10
 18084  00A944  27BC               	addwf	??_display_prepare& (0+255),f,b
 18085  00A946  0E00               	movlw	0
 18086  00A948  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18087  00A94A  0E78               	movlw	low _display_content
 18088  00A94C  25BC               	addwf	??_display_prepare& (0+255),w,b
 18089  00A94E  6EE1               	movwf	fsr1l,c
 18090  00A950  0E02               	movlw	high _display_content
 18091  00A952  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18092  00A954  6EE2               	movwf	fsr1h,c
 18093  00A956  CFDF FFE7          	movff	indf2,indf1
 18094                           
 18095                           ; BSR set to: 0
 18096  00A95A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 18097  00A95C                     l1397:
 18098                           
 18099                           ; BSR set to: 0
 18100                           
 18101                           ; BSR set to: 0
 18102  00A95C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18103  00A95E  0D01               	mullw	1
 18104  00A960  0EBE               	movlw	low display_prepare@temp
 18105  00A962  24F3               	addwf	prodl,w,c
 18106  00A964  6ED9               	movwf	fsr2l,c
 18107  00A966  0E00               	movlw	high display_prepare@temp
 18108  00A968  20F4               	addwfc	prodh,w,c
 18109  00A96A  6EDA               	movwf	fsr2h,c
 18110  00A96C  50DF               	movf	indf2,w,c
 18111  00A96E  A4D8               	btfss	status,2,c
 18112  00A970  D7DD               	goto	l1398
 18113                           
 18114                           ; BSR set to: 0
 18115                           ;display.c: 419: };display.c: 420: display_content[0][10+cntr] = 0x01;
 18116                           
 18117                           ; BSR set to: 0
 18118  00A972  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18119  00A974  6FBC               	movwf	??_display_prepare& (0+255),b
 18120  00A976  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18121  00A978  0E0A               	movlw	10
 18122  00A97A  27BC               	addwf	??_display_prepare& (0+255),f,b
 18123  00A97C  0E00               	movlw	0
 18124  00A97E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18125  00A980  0E78               	movlw	low _display_content
 18126  00A982  25BC               	addwf	??_display_prepare& (0+255),w,b
 18127  00A984  6ED9               	movwf	fsr2l,c
 18128  00A986  0E02               	movlw	high _display_content
 18129  00A988  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18130  00A98A  6EDA               	movwf	fsr2h,c
 18131  00A98C  0E01               	movlw	1
 18132  00A98E  6EDF               	movwf	indf2,c
 18133                           
 18134                           ; BSR set to: 0
 18135                           ;display.c: 423: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 18136  00A990  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 18137  00A994  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 18138  00A998  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 18139  00A99A  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 18140  00A99C  0E02               	movlw	2
 18141  00A99E  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 18142  00A9A0  0EBE               	movlw	low display_prepare@temp
 18143  00A9A2  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 18144  00A9A4  0E00               	movlw	high display_prepare@temp
 18145  00A9A6  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 18146  00A9A8  ECC7  F07A         	call	__display_itoa_long	;wreg free
 18147                           
 18148                           ;display.c: 424: space = 6-strlen(temp);
 18149  00A9AC  0EBE               	movlw	low display_prepare@temp
 18150  00A9AE  0100               	movlb	0	; () banked
 18151  00A9B0  6F60               	movwf	strlen@s& (0+255),b
 18152  00A9B2  0E00               	movlw	high display_prepare@temp
 18153  00A9B4  6F61               	movwf	(strlen@s+1)& (0+255),b
 18154  00A9B6  EC35  F092         	call	_strlen	;wreg free
 18155  00A9BA  0100               	movlb	0	; () banked
 18156  00A9BC  5160               	movf	?_strlen& (0+255),w,b
 18157  00A9BE  0800               	sublw	0
 18158  00A9C0  0F06               	addlw	6
 18159  00A9C2  6FC8               	movwf	display_prepare@space& (0+255),b
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;display.c: 425: for(cntr=0; temp[cntr]; ++cntr)
 18163  00A9C4  0E00               	movlw	0
 18164  00A9C6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 18165  00A9C8  D01C               	goto	l1400
 18166  00A9CA                     
 18167                           ; BSR set to: 0
 18168                           ;display.c: 426: {;display.c: 427: display_content[1][13+space+cntr] = temp[cntr];
 18169                           
 18170                           ; BSR set to: 0
 18171  00A9CA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18172  00A9CC  0D01               	mullw	1
 18173  00A9CE  0EBE               	movlw	low display_prepare@temp
 18174  00A9D0  24F3               	addwf	prodl,w,c
 18175  00A9D2  6ED9               	movwf	fsr2l,c
 18176  00A9D4  0E00               	movlw	high display_prepare@temp
 18177  00A9D6  20F4               	addwfc	prodh,w,c
 18178  00A9D8  6EDA               	movwf	fsr2h,c
 18179  00A9DA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18180  00A9DC  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 18181  00A9E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18182  00A9E2  27BC               	addwf	??_display_prepare& (0+255),f,b
 18183  00A9E4  0E00               	movlw	0
 18184  00A9E6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18185  00A9E8  0E0D               	movlw	13
 18186  00A9EA  27BC               	addwf	??_display_prepare& (0+255),f,b
 18187  00A9EC  0E00               	movlw	0
 18188  00A9EE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18189  00A9F0  0E8C               	movlw	low (_display_content+20)
 18190  00A9F2  25BC               	addwf	??_display_prepare& (0+255),w,b
 18191  00A9F4  6EE1               	movwf	fsr1l,c
 18192  00A9F6  0E02               	movlw	high (_display_content+20)
 18193  00A9F8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18194  00A9FA  6EE2               	movwf	fsr1h,c
 18195  00A9FC  CFDF FFE7          	movff	indf2,indf1
 18196                           
 18197                           ; BSR set to: 0
 18198  00AA00  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 18199  00AA02                     l1400:
 18200                           
 18201                           ; BSR set to: 0
 18202                           
 18203                           ; BSR set to: 0
 18204  00AA02  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18205  00AA04  0D01               	mullw	1
 18206  00AA06  0EBE               	movlw	low display_prepare@temp
 18207  00AA08  24F3               	addwf	prodl,w,c
 18208  00AA0A  6ED9               	movwf	fsr2l,c
 18209  00AA0C  0E00               	movlw	high display_prepare@temp
 18210  00AA0E  20F4               	addwfc	prodh,w,c
 18211  00AA10  6EDA               	movwf	fsr2h,c
 18212  00AA12  50DF               	movf	indf2,w,c
 18213  00AA14  A4D8               	btfss	status,2,c
 18214  00AA16  D7D9               	goto	l1401
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;display.c: 428: };display.c: 431: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 18218                           
 18219                           ; BSR set to: 0
 18220  00AA18  C0F3  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 18221  00AA1C  C0F4  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 18222  00AA20  EC14  F095         	call	_motor_speed_from_index	;wreg free
 18223  00AA24  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 18224  00AA28  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 18225  00AA2C  0E02               	movlw	2
 18226  00AA2E  0100               	movlb	0	; () banked
 18227  00AA30  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18228  00AA32  0EBE               	movlw	low display_prepare@temp
 18229  00AA34  6F98               	movwf	__display_itoa@text& (0+255),b
 18230  00AA36  0E00               	movlw	high display_prepare@temp
 18231  00AA38  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 18232  00AA3A  EC9F  F06B         	call	__display_itoa	;wreg free
 18233                           
 18234                           ;display.c: 432: for(cntr=0; temp[cntr]; ++cntr)
 18235  00AA3E  0E00               	movlw	0
 18236  00AA40  0100               	movlb	0	; () banked
 18237  00AA42  6FC9               	movwf	display_prepare@cntr& (0+255),b
 18238  00AA44  D018               	goto	l1403
 18239  00AA46                     
 18240                           ; BSR set to: 0
 18241                           ;display.c: 433: {;display.c: 434: display_content[3][11+cntr] = temp[cntr];
 18242                           
 18243                           ; BSR set to: 0
 18244  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18245  00AA48  0D01               	mullw	1
 18246  00AA4A  0EBE               	movlw	low display_prepare@temp
 18247  00AA4C  24F3               	addwf	prodl,w,c
 18248  00AA4E  6ED9               	movwf	fsr2l,c
 18249  00AA50  0E00               	movlw	high display_prepare@temp
 18250  00AA52  20F4               	addwfc	prodh,w,c
 18251  00AA54  6EDA               	movwf	fsr2h,c
 18252  00AA56  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18253  00AA58  6FBC               	movwf	??_display_prepare& (0+255),b
 18254  00AA5A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18255  00AA5C  0E0B               	movlw	11
 18256  00AA5E  27BC               	addwf	??_display_prepare& (0+255),f,b
 18257  00AA60  0E00               	movlw	0
 18258  00AA62  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18259  00AA64  0EB4               	movlw	low (_display_content+60)
 18260  00AA66  25BC               	addwf	??_display_prepare& (0+255),w,b
 18261  00AA68  6EE1               	movwf	fsr1l,c
 18262  00AA6A  0E02               	movlw	high (_display_content+60)
 18263  00AA6C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18264  00AA6E  6EE2               	movwf	fsr1h,c
 18265  00AA70  CFDF FFE7          	movff	indf2,indf1
 18266                           
 18267                           ; BSR set to: 0
 18268  00AA74  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 18269  00AA76                     l1403:
 18270                           
 18271                           ; BSR set to: 0
 18272                           
 18273                           ; BSR set to: 0
 18274  00AA76  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18275  00AA78  0D01               	mullw	1
 18276  00AA7A  0EBE               	movlw	low display_prepare@temp
 18277  00AA7C  24F3               	addwf	prodl,w,c
 18278  00AA7E  6ED9               	movwf	fsr2l,c
 18279  00AA80  0E00               	movlw	high display_prepare@temp
 18280  00AA82  20F4               	addwfc	prodh,w,c
 18281  00AA84  6EDA               	movwf	fsr2h,c
 18282  00AA86  50DF               	movf	indf2,w,c
 18283  00AA88  A4D8               	btfss	status,2,c
 18284  00AA8A  D7DD               	goto	l1404
 18285  00AA8C  D12D               	goto	L80
 18286  00AA8E                     
 18287                           ; BSR set to: 0
 18288                           ;display.c: 447: memcpy(display_content, dc_zero, sizeof display_content);
 18289                           
 18290                           ; BSR set to: 0
 18291  00AA8E  0E78               	movlw	low _display_content
 18292  00AA90  6F60               	movwf	memcpy@d1& (0+255),b
 18293  00AA92  0E02               	movlw	high _display_content
 18294  00AA94  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18295  00AA96  0E3E               	movlw	low _dc_zero
 18296  00AA98  6F62               	movwf	memcpy@s1& (0+255),b
 18297  00AA9A  0E9E               	movlw	high _dc_zero
 18298  00AA9C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18299  00AA9E  0E00               	movlw	0
 18300  00AAA0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18301  00AAA2  0E50               	movlw	80
 18302  00AAA4  6F64               	movwf	memcpy@n& (0+255),b
 18303  00AAA6  ECE9  F08D         	call	_memcpy	;wreg free
 18304                           
 18305                           ;display.c: 450: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 18306  00AAAA  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 18307  00AAAE  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 18308  00AAB2  0100               	movlb	0	; () banked
 18309  00AAB4  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 18310  00AAB6  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 18311  00AAB8  0E02               	movlw	2
 18312  00AABA  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 18313  00AABC  0EBE               	movlw	low display_prepare@temp
 18314  00AABE  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 18315  00AAC0  0E00               	movlw	high display_prepare@temp
 18316  00AAC2  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 18317  00AAC4  ECC7  F07A         	call	__display_itoa_long	;wreg free
 18318                           
 18319                           ;display.c: 451: for(cntr=0; temp[cntr]; ++cntr)
 18320  00AAC8  0E00               	movlw	0
 18321  00AACA  0100               	movlb	0	; () banked
 18322  00AACC  6FC9               	movwf	display_prepare@cntr& (0+255),b
 18323  00AACE  D018               	goto	l1407
 18324  00AAD0                     
 18325                           ; BSR set to: 0
 18326                           ;display.c: 452: {;display.c: 453: display_content[1][13+cntr] = temp[cntr];
 18327                           
 18328                           ; BSR set to: 0
 18329  00AAD0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18330  00AAD2  0D01               	mullw	1
 18331  00AAD4  0EBE               	movlw	low display_prepare@temp
 18332  00AAD6  24F3               	addwf	prodl,w,c
 18333  00AAD8  6ED9               	movwf	fsr2l,c
 18334  00AADA  0E00               	movlw	high display_prepare@temp
 18335  00AADC  20F4               	addwfc	prodh,w,c
 18336  00AADE  6EDA               	movwf	fsr2h,c
 18337  00AAE0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18338  00AAE2  6FBC               	movwf	??_display_prepare& (0+255),b
 18339  00AAE4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18340  00AAE6  0E0D               	movlw	13
 18341  00AAE8  27BC               	addwf	??_display_prepare& (0+255),f,b
 18342  00AAEA  0E00               	movlw	0
 18343  00AAEC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18344  00AAEE  0E8C               	movlw	low (_display_content+20)
 18345  00AAF0  25BC               	addwf	??_display_prepare& (0+255),w,b
 18346  00AAF2  6EE1               	movwf	fsr1l,c
 18347  00AAF4  0E02               	movlw	high (_display_content+20)
 18348  00AAF6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18349  00AAF8  6EE2               	movwf	fsr1h,c
 18350  00AAFA  CFDF FFE7          	movff	indf2,indf1
 18351                           
 18352                           ; BSR set to: 0
 18353  00AAFE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 18354  00AB00                     l1407:
 18355                           
 18356                           ; BSR set to: 0
 18357                           
 18358                           ; BSR set to: 0
 18359  00AB00  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18360  00AB02  0D01               	mullw	1
 18361  00AB04  0EBE               	movlw	low display_prepare@temp
 18362  00AB06  24F3               	addwf	prodl,w,c
 18363  00AB08  6ED9               	movwf	fsr2l,c
 18364  00AB0A  0E00               	movlw	high display_prepare@temp
 18365  00AB0C  20F4               	addwfc	prodh,w,c
 18366  00AB0E  6EDA               	movwf	fsr2h,c
 18367  00AB10  50DF               	movf	indf2,w,c
 18368  00AB12  A4D8               	btfss	status,2,c
 18369  00AB14  D7DD               	goto	l1408
 18370                           
 18371                           ; BSR set to: 0
 18372                           ;display.c: 454: };display.c: 455: display_content[1][13+cntr] = 0x01;
 18373                           
 18374                           ; BSR set to: 0
 18375  00AB16  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18376  00AB18  6FBC               	movwf	??_display_prepare& (0+255),b
 18377  00AB1A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18378  00AB1C  0E0D               	movlw	13
 18379  00AB1E  27BC               	addwf	??_display_prepare& (0+255),f,b
 18380  00AB20  0E00               	movlw	0
 18381  00AB22  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18382  00AB24  0E8C               	movlw	low (_display_content+20)
 18383  00AB26  25BC               	addwf	??_display_prepare& (0+255),w,b
 18384  00AB28  6ED9               	movwf	fsr2l,c
 18385  00AB2A  0E02               	movlw	high (_display_content+20)
 18386  00AB2C  D6AA               	goto	L35
 18387  00AB2E                     
 18388                           ; BSR set to: 0
 18389                           ;display.c: 460: memcpy(display_content, dc_manual, sizeof display_content);
 18390                           
 18391                           ; BSR set to: 0
 18392  00AB2E  0E78               	movlw	low _display_content
 18393  00AB30  6F60               	movwf	memcpy@d1& (0+255),b
 18394  00AB32  0E02               	movlw	high _display_content
 18395  00AB34  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18396  00AB36  0EEE               	movlw	low _dc_manual
 18397  00AB38  6F62               	movwf	memcpy@s1& (0+255),b
 18398  00AB3A  0E9D               	movlw	high _dc_manual
 18399  00AB3C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18400  00AB3E  0E00               	movlw	0
 18401  00AB40  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18402  00AB42  0E50               	movlw	80
 18403  00AB44  6F64               	movwf	memcpy@n& (0+255),b
 18404  00AB46  ECE9  F08D         	call	_memcpy	;wreg free
 18405                           
 18406                           ;display.c: 461: switch(os.displayState)
 18407  00AB4A  D044               	goto	l1411
 18408  00AB4C                     
 18409                           ;display.c: 464: display_content[2][6] = 'W';
 18410  00AB4C  0E57               	movlw	87
 18411  00AB4E  0102               	movlb	2	; () banked
 18412  00AB50  6FA6               	movwf	(_display_content+46)& (0+255),b
 18413                           
 18414                           ;display.c: 465: display_content[2][7] = ' ';
 18415  00AB52  0E20               	movlw	32
 18416  00AB54  6FA7               	movwf	(_display_content+47)& (0+255),b
 18417                           
 18418                           ;display.c: 466: break;
 18419  00AB56  D049               	goto	l1413
 18420  00AB58                     
 18421                           ;display.c: 468: memcpy(display_content[2], "        ", 8);
 18422                           
 18423                           ; BSR set to: 2
 18424  00AB58  0EA0               	movlw	low (_display_content+40)
 18425  00AB5A  0100               	movlb	0	; () banked
 18426  00AB5C  6F60               	movwf	memcpy@d1& (0+255),b
 18427  00AB5E  0E02               	movlw	high (_display_content+40)
 18428  00AB60  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18429  00AB62  0E1C               	movlw	low STR_1
 18430  00AB64  6F62               	movwf	memcpy@s1& (0+255),b
 18431  00AB66  0EA2               	movlw	high STR_1
 18432  00AB68  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18433  00AB6A  0E00               	movlw	0
 18434  00AB6C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18435  00AB6E  0E08               	movlw	8
 18436  00AB70  6F64               	movwf	memcpy@n& (0+255),b
 18437  00AB72  ECE9  F08D         	call	_memcpy	;wreg free
 18438                           
 18439                           ;display.c: 469: memcpy(display_content[3], "Cancel", 6);
 18440  00AB76  0EB4               	movlw	low (_display_content+60)
 18441  00AB78  0100               	movlb	0	; () banked
 18442  00AB7A  6F60               	movwf	memcpy@d1& (0+255),b
 18443  00AB7C  0E02               	movlw	high (_display_content+60)
 18444  00AB7E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18445  00AB80  0E25               	movlw	low STR_2
 18446  00AB82  6F62               	movwf	memcpy@s1& (0+255),b
 18447  00AB84  0EA2               	movlw	high STR_2
 18448  00AB86  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18449  00AB88  0E00               	movlw	0
 18450  00AB8A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18451  00AB8C  0E06               	movlw	6
 18452  00AB8E  6F64               	movwf	memcpy@n& (0+255),b
 18453  00AB90  ECE9  F08D         	call	_memcpy	;wreg free
 18454                           
 18455                           ;display.c: 470: break;
 18456  00AB94  D02A               	goto	l1413
 18457  00AB96                     
 18458                           ;display.c: 472: memcpy(&display_content[2][0], "        ", 8);
 18459  00AB96  0EA0               	movlw	low (_display_content+40)
 18460  00AB98  0100               	movlb	0	; () banked
 18461  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 18462  00AB9C  0E02               	movlw	high (_display_content+40)
 18463  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18464  00ABA0  0E1C               	movlw	low STR_1
 18465  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 18466  00ABA4  0EA2               	movlw	high STR_1
 18467  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18468  00ABA8  0E00               	movlw	0
 18469  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18470  00ABAC  0E08               	movlw	8
 18471  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 18472  00ABB0  ECE9  F08D         	call	_memcpy	;wreg free
 18473                           
 18474                           ;display.c: 473: memcpy(&display_content[3][0], "Stop ", 5);
 18475  00ABB4  0EB4               	movlw	low (_display_content+60)
 18476  00ABB6  0100               	movlb	0	; () banked
 18477  00ABB8  6F60               	movwf	memcpy@d1& (0+255),b
 18478  00ABBA  0E02               	movlw	high (_display_content+60)
 18479  00ABBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 18480  00ABBE  0E2C               	movlw	low STR_6
 18481  00ABC0  6F62               	movwf	memcpy@s1& (0+255),b
 18482  00ABC2  0EA2               	movlw	high STR_6
 18483  00ABC4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18484  00ABC6  0E00               	movlw	0
 18485  00ABC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18486  00ABCA  0E05               	movlw	5
 18487  00ABCC  6F64               	movwf	memcpy@n& (0+255),b
 18488  00ABCE  ECE9  F08D         	call	_memcpy	;wreg free
 18489                           
 18490                           ;display.c: 475: }
 18491                           
 18492                           ;display.c: 474: break;
 18493  00ABD2  D00B               	goto	l1413
 18494  00ABD4                     l1411:
 18495  00ABD4  0100               	movlb	0	; () banked
 18496  00ABD6  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 18497                           
 18498                           ; Switch size 1, requested type "space"
 18499                           ; Number of cases is 3, Range of values is 130 to 132
 18500                           ; switch strategies available:
 18501                           ; Name         Instructions Cycles
 18502                           ; simple_byte           10     6 (average)
 18503                           ;	Chosen strategy is simple_byte
 18504  00ABD8  0A82               	xorlw	130	; case 130
 18505  00ABDA  B4D8               	btfsc	status,2,c
 18506  00ABDC  D7BD               	goto	l1414
 18507  00ABDE  0A01               	xorlw	1	; case 131
 18508  00ABE0  B4D8               	btfsc	status,2,c
 18509  00ABE2  D7B4               	goto	l1412
 18510  00ABE4  0A07               	xorlw	7	; case 132
 18511  00ABE6  B4D8               	btfsc	status,2,c
 18512  00ABE8  D7D6               	goto	l1415
 18513  00ABEA                     l1413:
 18514                           
 18515                           ;display.c: 478: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 18516                           
 18517                           ; BSR set to: 0
 18518  00ABEA  C0DE  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 18519  00ABEE  C0DF  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 18520  00ABF2  0100               	movlb	0	; () banked
 18521  00ABF4  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 18522  00ABF6  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 18523  00ABF8  0E02               	movlw	2
 18524  00ABFA  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 18525  00ABFC  0EBE               	movlw	low display_prepare@temp
 18526  00ABFE  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 18527  00AC00  0E00               	movlw	high display_prepare@temp
 18528  00AC02  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 18529  00AC04  ECC7  F07A         	call	__display_itoa_long	;wreg free
 18530                           
 18531                           ;display.c: 479: space = 7-strlen(temp);
 18532  00AC08  0EBE               	movlw	low display_prepare@temp
 18533  00AC0A  0100               	movlb	0	; () banked
 18534  00AC0C  6F60               	movwf	strlen@s& (0+255),b
 18535  00AC0E  0E00               	movlw	high display_prepare@temp
 18536  00AC10  6F61               	movwf	(strlen@s+1)& (0+255),b
 18537  00AC12  EC35  F092         	call	_strlen	;wreg free
 18538  00AC16  0100               	movlb	0	; () banked
 18539  00AC18  5160               	movf	?_strlen& (0+255),w,b
 18540  00AC1A  0800               	sublw	0
 18541  00AC1C  0F07               	addlw	7
 18542  00AC1E  6FC8               	movwf	display_prepare@space& (0+255),b
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 18546  00AC20  0E00               	movlw	0
 18547  00AC22  6FC9               	movwf	display_prepare@cntr& (0+255),b
 18548  00AC24  D01C               	goto	l1416
 18549  00AC26                     
 18550                           ; BSR set to: 0
 18551                           ;display.c: 481: {;display.c: 482: display_content[1][12+space+cntr] = temp[cntr];
 18552                           
 18553                           ; BSR set to: 0
 18554  00AC26  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18555  00AC28  0D01               	mullw	1
 18556  00AC2A  0EBE               	movlw	low display_prepare@temp
 18557  00AC2C  24F3               	addwf	prodl,w,c
 18558  00AC2E  6ED9               	movwf	fsr2l,c
 18559  00AC30  0E00               	movlw	high display_prepare@temp
 18560  00AC32  20F4               	addwfc	prodh,w,c
 18561  00AC34  6EDA               	movwf	fsr2h,c
 18562  00AC36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18563  00AC38  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 18564  00AC3C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18565  00AC3E  27BC               	addwf	??_display_prepare& (0+255),f,b
 18566  00AC40  0E00               	movlw	0
 18567  00AC42  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18568  00AC44  0E0C               	movlw	12
 18569  00AC46  27BC               	addwf	??_display_prepare& (0+255),f,b
 18570  00AC48  0E00               	movlw	0
 18571  00AC4A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18572  00AC4C  0E8C               	movlw	low (_display_content+20)
 18573  00AC4E  25BC               	addwf	??_display_prepare& (0+255),w,b
 18574  00AC50  6EE1               	movwf	fsr1l,c
 18575  00AC52  0E02               	movlw	high (_display_content+20)
 18576  00AC54  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18577  00AC56  6EE2               	movwf	fsr1h,c
 18578  00AC58  CFDF FFE7          	movff	indf2,indf1
 18579                           
 18580                           ; BSR set to: 0
 18581  00AC5C  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 18582  00AC5E                     l1416:
 18583                           
 18584                           ; BSR set to: 0
 18585                           
 18586                           ; BSR set to: 0
 18587  00AC5E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18588  00AC60  0D01               	mullw	1
 18589  00AC62  0EBE               	movlw	low display_prepare@temp
 18590  00AC64  24F3               	addwf	prodl,w,c
 18591  00AC66  6ED9               	movwf	fsr2l,c
 18592  00AC68  0E00               	movlw	high display_prepare@temp
 18593  00AC6A  20F4               	addwfc	prodh,w,c
 18594  00AC6C  6EDA               	movwf	fsr2h,c
 18595  00AC6E  50DF               	movf	indf2,w,c
 18596  00AC70  A4D8               	btfss	status,2,c
 18597  00AC72  D7D9               	goto	l1417
 18598                           
 18599                           ; BSR set to: 0
 18600                           ;display.c: 483: };display.c: 486: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 18601                           
 18602                           ; BSR set to: 0
 18603  00AC74  C0F6  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 18604  00AC78  C0F7  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 18605  00AC7C  EC14  F095         	call	_motor_speed_from_index	;wreg free
 18606  00AC80  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 18607  00AC84  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 18608  00AC88  0E02               	movlw	2
 18609  00AC8A  0100               	movlb	0	; () banked
 18610  00AC8C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18611  00AC8E  0EBE               	movlw	low display_prepare@temp
 18612  00AC90  6F98               	movwf	__display_itoa@text& (0+255),b
 18613  00AC92  0E00               	movlw	high display_prepare@temp
 18614  00AC94  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 18615  00AC96  EC9F  F06B         	call	__display_itoa	;wreg free
 18616                           
 18617                           ;display.c: 487: for(cntr=0; temp[cntr]; ++cntr)
 18618  00AC9A  0E00               	movlw	0
 18619  00AC9C  0100               	movlb	0	; () banked
 18620  00AC9E  6FC9               	movwf	display_prepare@cntr& (0+255),b
 18621  00ACA0  D018               	goto	l1419
 18622  00ACA2                     
 18623                           ; BSR set to: 0
 18624                           ;display.c: 488: {;display.c: 489: display_content[3][11+cntr] = temp[cntr];
 18625                           
 18626                           ; BSR set to: 0
 18627  00ACA2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18628  00ACA4  0D01               	mullw	1
 18629  00ACA6  0EBE               	movlw	low display_prepare@temp
 18630  00ACA8  24F3               	addwf	prodl,w,c
 18631  00ACAA  6ED9               	movwf	fsr2l,c
 18632  00ACAC  0E00               	movlw	high display_prepare@temp
 18633  00ACAE  20F4               	addwfc	prodh,w,c
 18634  00ACB0  6EDA               	movwf	fsr2h,c
 18635  00ACB2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18636  00ACB4  6FBC               	movwf	??_display_prepare& (0+255),b
 18637  00ACB6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18638  00ACB8  0E0B               	movlw	11
 18639  00ACBA  27BC               	addwf	??_display_prepare& (0+255),f,b
 18640  00ACBC  0E00               	movlw	0
 18641  00ACBE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18642  00ACC0  0EB4               	movlw	low (_display_content+60)
 18643  00ACC2  25BC               	addwf	??_display_prepare& (0+255),w,b
 18644  00ACC4  6EE1               	movwf	fsr1l,c
 18645  00ACC6  0E02               	movlw	high (_display_content+60)
 18646  00ACC8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18647  00ACCA  6EE2               	movwf	fsr1h,c
 18648  00ACCC  CFDF FFE7          	movff	indf2,indf1
 18649                           
 18650                           ; BSR set to: 0
 18651  00ACD0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 18652  00ACD2                     l1419:
 18653                           
 18654                           ; BSR set to: 0
 18655                           
 18656                           ; BSR set to: 0
 18657  00ACD2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18658  00ACD4  0D01               	mullw	1
 18659  00ACD6  0EBE               	movlw	low display_prepare@temp
 18660  00ACD8  24F3               	addwf	prodl,w,c
 18661  00ACDA  6ED9               	movwf	fsr2l,c
 18662  00ACDC  0E00               	movlw	high display_prepare@temp
 18663  00ACDE  20F4               	addwfc	prodh,w,c
 18664  00ACE0  6EDA               	movwf	fsr2h,c
 18665  00ACE2  50DF               	movf	indf2,w,c
 18666  00ACE4  A4D8               	btfss	status,2,c
 18667  00ACE6  D7DD               	goto	l1420
 18668  00ACE8                     L80:
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;display.c: 490: };display.c: 491: display_content[3][11+cntr] = 0x01;
 18672                           
 18673                           ; BSR set to: 0
 18674  00ACE8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18675  00ACEA  6FBC               	movwf	??_display_prepare& (0+255),b
 18676  00ACEC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18677  00ACEE  0E0B               	movlw	11
 18678  00ACF0  27BC               	addwf	??_display_prepare& (0+255),f,b
 18679  00ACF2  0E00               	movlw	0
 18680  00ACF4  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18681  00ACF6  0EB4               	movlw	low (_display_content+60)
 18682  00ACF8  25BC               	addwf	??_display_prepare& (0+255),w,b
 18683  00ACFA  6ED9               	movwf	fsr2l,c
 18684  00ACFC  0E02               	movlw	high (_display_content+60)
 18685  00ACFE  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18686  00AD00  6EDA               	movwf	fsr2h,c
 18687  00AD02  0E01               	movlw	1
 18688  00AD04  6EDF               	movwf	indf2,c
 18689                           
 18690                           ;display.c: 492: display_content[3][12+cntr] = '/';
 18691  00AD06  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18692  00AD08  6FBC               	movwf	??_display_prepare& (0+255),b
 18693  00AD0A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18694  00AD0C  0E0C               	movlw	12
 18695  00AD0E  27BC               	addwf	??_display_prepare& (0+255),f,b
 18696  00AD10  0E00               	movlw	0
 18697  00AD12  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18698  00AD14  0EB4               	movlw	low (_display_content+60)
 18699  00AD16  25BC               	addwf	??_display_prepare& (0+255),w,b
 18700  00AD18  6ED9               	movwf	fsr2l,c
 18701  00AD1A  0E02               	movlw	high (_display_content+60)
 18702  00AD1C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18703  00AD1E  6EDA               	movwf	fsr2h,c
 18704  00AD20  0E2F               	movlw	47
 18705  00AD22  6EDF               	movwf	indf2,c
 18706                           
 18707                           ;display.c: 493: display_content[3][13+cntr] = 's';
 18708  00AD24  51C9               	movf	display_prepare@cntr& (0+255),w,b
 18709  00AD26  6FBC               	movwf	??_display_prepare& (0+255),b
 18710  00AD28  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18711  00AD2A  0E0D               	movlw	13
 18712  00AD2C  27BC               	addwf	??_display_prepare& (0+255),f,b
 18713  00AD2E  0E00               	movlw	0
 18714  00AD30  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 18715  00AD32  0EB4               	movlw	low (_display_content+60)
 18716  00AD34  25BC               	addwf	??_display_prepare& (0+255),w,b
 18717  00AD36  6ED9               	movwf	fsr2l,c
 18718  00AD38  0E02               	movlw	high (_display_content+60)
 18719  00AD3A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 18720  00AD3C  6EDA               	movwf	fsr2h,c
 18721  00AD3E  0E73               	movlw	115
 18722  00AD40                     L26:
 18723  00AD40  6EDF               	movwf	indf2,c
 18724                           
 18725                           ;display.c: 494: break;
 18726  00AD42  D090               	goto	l1339
 18727  00AD44                     
 18728                           ; BSR set to: 0
 18729                           ;display.c: 497: _display_clear();
 18730                           
 18731                           ; BSR set to: 0
 18732  00AD44  EC45  F091         	call	__display_clear	;wreg free
 18733                           
 18734                           ;display.c: 498: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 18735  00AD48  0100               	movlb	0	; () banked
 18736  00AD4A  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 18737  00AD4C  6F95               	movwf	__display_itoa@value& (0+255),b
 18738  00AD4E  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 18739  00AD50  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 18740  00AD52  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 18741  00AD54  0E00               	movlw	0
 18742  00AD56  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18743  00AD58  0E78               	movlw	low _display_content
 18744  00AD5A  6F98               	movwf	__display_itoa@text& (0+255),b
 18745  00AD5C  0E02               	movlw	high _display_content
 18746  00AD5E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 18747  00AD60  EC9F  F06B         	call	__display_itoa	;wreg free
 18748                           
 18749                           ;display.c: 499: if(PORTEbits.RE2)
 18750  00AD64  A484               	btfss	3972,2,c	;volatile
 18751  00AD66  D002               	goto	l1423
 18752                           
 18753                           ;display.c: 500: display_content[0][8] = 'H';
 18754  00AD68  0E48               	movlw	72
 18755  00AD6A  D001               	goto	L30
 18756  00AD6C                     l1423:
 18757                           
 18758                           ;display.c: 501: else;display.c: 502: display_content[0][8] = 'L';
 18759                           
 18760                           ; BSR set to: 2
 18761  00AD6C  0E4C               	movlw	76
 18762  00AD6E                     L30:
 18763  00AD6E  0102               	movlb	2	; () banked
 18764  00AD70  6F80               	movwf	(_display_content+8)& (0+255),b
 18765                           
 18766                           ; BSR set to: 2
 18767                           ;display.c: 503: if(PORTEbits.RE0)
 18768                           
 18769                           ; BSR set to: 2
 18770  00AD72  A084               	btfss	3972,0,c	;volatile
 18771  00AD74  D002               	goto	l1425
 18772                           
 18773                           ; BSR set to: 2
 18774                           ;display.c: 504: display_content[0][9] = 'H';
 18775  00AD76  0E48               	movlw	72
 18776  00AD78  D001               	goto	L31
 18777  00AD7A                     l1425:
 18778                           
 18779                           ; BSR set to: 2
 18780                           ;display.c: 505: else;display.c: 506: display_content[0][9] = 'L';
 18781                           
 18782                           ; BSR set to: 2
 18783  00AD7A  0E4C               	movlw	76
 18784  00AD7C                     L31:
 18785  00AD7C  6F81               	movwf	(_display_content+9)& (0+255),b
 18786                           
 18787                           ; BSR set to: 2
 18788                           ;display.c: 507: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 18789                           
 18790                           ; BSR set to: 2
 18791  00AD7E  0100               	movlb	0	; () banked
 18792  00AD80  51D7               	movf	(_os+4)& (0+255),w,b	;volatile
 18793  00AD82  6F95               	movwf	__display_itoa@value& (0+255),b
 18794  00AD84  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 18795  00AD86  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 18796  00AD88  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 18797  00AD8A  0E00               	movlw	0
 18798  00AD8C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18799  00AD8E  0E8C               	movlw	low (_display_content+20)
 18800  00AD90  6F98               	movwf	__display_itoa@text& (0+255),b
 18801  00AD92  0E02               	movlw	high (_display_content+20)
 18802  00AD94  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 18803  00AD96  EC9F  F06B         	call	__display_itoa	;wreg free
 18804                           
 18805                           ;display.c: 508: if(PORTEbits.RE1)
 18806  00AD9A  A284               	btfss	3972,1,c	;volatile
 18807  00AD9C  D002               	goto	l1427
 18808                           
 18809                           ;display.c: 509: display_content[1][8] = 'H';
 18810  00AD9E  0E48               	movlw	72
 18811  00ADA0  D001               	goto	L32
 18812  00ADA2                     l1427:
 18813                           
 18814                           ;display.c: 510: else;display.c: 511: display_content[1][8] = 'L';
 18815                           
 18816                           ; BSR set to: 2
 18817  00ADA2  0E4C               	movlw	76
 18818  00ADA4                     L32:
 18819  00ADA4  0102               	movlb	2	; () banked
 18820  00ADA6  6F94               	movwf	(_display_content+28)& (0+255),b
 18821                           
 18822                           ; BSR set to: 2
 18823                           ;display.c: 512: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 18824                           
 18825                           ; BSR set to: 2
 18826  00ADA8  0100               	movlb	0	; () banked
 18827  00ADAA  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 18828  00ADAC  6F95               	movwf	__display_itoa@value& (0+255),b
 18829  00ADAE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 18830  00ADB0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 18831  00ADB2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 18832  00ADB4  0E00               	movlw	0
 18833  00ADB6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18834  00ADB8  0EA0               	movlw	low (_display_content+40)
 18835  00ADBA  6F98               	movwf	__display_itoa@text& (0+255),b
 18836  00ADBC  0E02               	movlw	high (_display_content+40)
 18837  00ADBE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 18838  00ADC0  EC9F  F06B         	call	__display_itoa	;wreg free
 18839                           
 18840                           ;display.c: 513: if(PORTAbits.RA0)
 18841  00ADC4  A080               	btfss	3968,0,c	;volatile
 18842  00ADC6  D002               	goto	l1429
 18843                           
 18844                           ;display.c: 514: display_content[2][8] = 'H';
 18845  00ADC8  0E48               	movlw	72
 18846  00ADCA  D001               	goto	L33
 18847  00ADCC                     l1429:
 18848                           
 18849                           ;display.c: 515: else;display.c: 516: display_content[2][8] = 'L';
 18850                           
 18851                           ; BSR set to: 2
 18852  00ADCC  0E4C               	movlw	76
 18853  00ADCE                     L33:
 18854  00ADCE  0102               	movlb	2	; () banked
 18855  00ADD0  6FA8               	movwf	(_display_content+48)& (0+255),b
 18856                           
 18857                           ; BSR set to: 2
 18858                           ;display.c: 517: if(PORTAbits.RA2)
 18859                           
 18860                           ; BSR set to: 2
 18861  00ADD2  A480               	btfss	3968,2,c	;volatile
 18862  00ADD4  D002               	goto	l1431
 18863                           
 18864                           ; BSR set to: 2
 18865                           ;display.c: 518: display_content[2][9] = 'H';
 18866  00ADD6  0E48               	movlw	72
 18867  00ADD8  D001               	goto	L34
 18868  00ADDA                     l1431:
 18869                           
 18870                           ; BSR set to: 2
 18871                           ;display.c: 519: else;display.c: 520: display_content[2][9] = 'L';
 18872                           
 18873                           ; BSR set to: 2
 18874  00ADDA  0E4C               	movlw	76
 18875  00ADDC                     L34:
 18876  00ADDC  6FA9               	movwf	(_display_content+49)& (0+255),b
 18877                           
 18878                           ; BSR set to: 2
 18879                           ;display.c: 521: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 18880                           
 18881                           ; BSR set to: 2
 18882  00ADDE  0100               	movlb	0	; () banked
 18883  00ADE0  51D9               	movf	(_os+6)& (0+255),w,b	;volatile
 18884  00ADE2  6F95               	movwf	__display_itoa@value& (0+255),b
 18885  00ADE4  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 18886  00ADE6  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 18887  00ADE8  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 18888  00ADEA  0E00               	movlw	0
 18889  00ADEC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18890  00ADEE  0EB4               	movlw	low (_display_content+60)
 18891  00ADF0  6F98               	movwf	__display_itoa@text& (0+255),b
 18892  00ADF2  0E02               	movlw	high (_display_content+60)
 18893  00ADF4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 18894  00ADF6  EC9F  F06B         	call	__display_itoa	;wreg free
 18895                           
 18896                           ;display.c: 522: if(PORTAbits.RA1)
 18897  00ADFA  A280               	btfss	3968,1,c	;volatile
 18898  00ADFC  D002               	goto	l1433
 18899                           
 18900                           ;display.c: 523: display_content[3][8] = 'H';
 18901  00ADFE  0E48               	movlw	72
 18902  00AE00  D001               	goto	L27
 18903  00AE02                     l1433:
 18904                           
 18905                           ;display.c: 524: else;display.c: 525: display_content[3][8] = 'L';
 18906                           
 18907                           ; BSR set to: 2
 18908  00AE02  0E4C               	movlw	76
 18909  00AE04                     L27:
 18910  00AE04  0102               	movlb	2	; () banked
 18911  00AE06  6FBC               	movwf	(_display_content+68)& (0+255),b
 18912                           
 18913                           ; BSR set to: 2
 18914                           ;display.c: 527: }
 18915                           
 18916                           ; BSR set to: 2
 18917                           ;display.c: 526: break;
 18918  00AE08  D02D               	goto	l1339
 18919  00AE0A                     l1330:
 18920                           
 18921                           ; BSR set to: 2
 18922  00AE0A  0100               	movlb	0	; () banked
 18923  00AE0C  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 18924  00AE0E  0BF0               	andlw	240
 18925  00AE10  6FBC               	movwf	??_display_prepare& (0+255),b
 18926  00AE12  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 18927                           
 18928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18929                           ; Switch size 1, requested type "space"
 18930                           ; Number of cases is 1, Range of values is 0 to 0
 18931                           ; switch strategies available:
 18932                           ; Name         Instructions Cycles
 18933                           ; simple_byte            4     3 (average)
 18934                           ;	Chosen strategy is simple_byte
 18935  00AE14  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 18936  00AE16  0A00               	xorlw	0	; case 0
 18937  00AE18  A4D8               	btfss	status,2,c
 18938  00AE1A  D024               	goto	l1339
 18939                           
 18940                           ; BSR set to: 0
 18941                           ; Switch size 1, requested type "space"
 18942                           ; Number of cases is 10, Range of values is 0 to 240
 18943                           ; switch strategies available:
 18944                           ; Name         Instructions Cycles
 18945                           ; simple_byte           31    16 (average)
 18946                           ;	Chosen strategy is simple_byte
 18947  00AE1C  51BC               	movf	??_display_prepare& (0+255),w,b
 18948  00AE1E  0A00               	xorlw	0	; case 0
 18949  00AE20  B4D8               	btfsc	status,2,c
 18950  00AE22  EF1E  F051         	goto	l1331
 18951  00AE26  0A10               	xorlw	16	; case 16
 18952  00AE28  B4D8               	btfsc	status,2,c
 18953  00AE2A  EF4D  F051         	goto	l1340
 18954  00AE2E  0A30               	xorlw	48	; case 32
 18955  00AE30  B4D8               	btfsc	status,2,c
 18956  00AE32  EF9D  F051         	goto	l1350
 18957  00AE36  0A10               	xorlw	16	; case 48
 18958  00AE38  B4D8               	btfsc	status,2,c
 18959  00AE3A  EFC0  F051         	goto	l1355
 18960  00AE3E  0A70               	xorlw	112	; case 64
 18961  00AE40  B4D8               	btfsc	status,2,c
 18962  00AE42  EF30  F052         	goto	l1364
 18963  00AE46  0A10               	xorlw	16	; case 80
 18964  00AE48  B4D8               	btfsc	status,2,c
 18965  00AE4A  D46D               	goto	l1379
 18966  00AE4C  0A30               	xorlw	48	; case 96
 18967  00AE4E  B4D8               	btfsc	status,2,c
 18968  00AE50  D51C               	goto	l1392
 18969  00AE52  0A10               	xorlw	16	; case 112
 18970  00AE54  B4D8               	btfsc	status,2,c
 18971  00AE56  D61B               	goto	l1406
 18972  00AE58  0AF0               	xorlw	240	; case 128
 18973  00AE5A  B4D8               	btfsc	status,2,c
 18974  00AE5C  D668               	goto	l1410
 18975  00AE5E  0A70               	xorlw	112	; case 240
 18976  00AE60  B4D8               	btfsc	status,2,c
 18977  00AE62  D770               	goto	l1422
 18978  00AE64                     l1339:
 18979                           
 18980                           ;display.c: 529: if(!PORTDbits.RD2)
 18981  00AE64  B483               	btfsc	3971,2,c	;volatile
 18982  00AE66  0012               	return	
 18983                           
 18984                           ;display.c: 530: {;display.c: 531: display_content[0][0] = 'E';
 18985  00AE68  0E45               	movlw	69
 18986  00AE6A  0102               	movlb	2	; () banked
 18987  00AE6C  6F78               	movwf	_display_content& (0+255),b
 18988                           
 18989                           ;display.c: 532: display_content[0][1] = 'R';
 18990  00AE6E  0E52               	movlw	82
 18991  00AE70  6F79               	movwf	(_display_content+1)& (0+255),b
 18992                           
 18993                           ;display.c: 533: display_content[0][2] = 'R';
 18994  00AE72  0E52               	movlw	82
 18995  00AE74  6F7A               	movwf	(_display_content+2)& (0+255),b
 18996                           
 18997                           ;display.c: 534: display_content[0][3] = 'O';
 18998  00AE76  0E4F               	movlw	79
 18999  00AE78  6F7B               	movwf	(_display_content+3)& (0+255),b
 19000                           
 19001                           ;display.c: 535: display_content[0][4] = 'R';
 19002  00AE7A  0E52               	movlw	82
 19003  00AE7C  6F7C               	movwf	(_display_content+4)& (0+255),b
 19004  00AE7E  0012               	return	
 19005  00AE80                     __end_of_display_prepare:
 19006                           	opt stack 0
 19007                           tblptru	equ	0xFF8
 19008                           tblptrh	equ	0xFF7
 19009                           tblptrl	equ	0xFF6
 19010                           tablat	equ	0xFF5
 19011                           prodh	equ	0xFF4
 19012                           prodl	equ	0xFF3
 19013                           intcon	equ	0xFF2
 19014                           postinc0	equ	0xFEE
 19015                           wreg	equ	0xFE8
 19016                           indf1	equ	0xFE7
 19017                           postdec1	equ	0xFE5
 19018                           plusw1	equ	0xFE3
 19019                           fsr1h	equ	0xFE2
 19020                           fsr1l	equ	0xFE1
 19021                           indf2	equ	0xFDF
 19022                           postinc2	equ	0xFDE
 19023                           postdec2	equ	0xFDD
 19024                           plusw2	equ	0xFDB
 19025                           fsr2h	equ	0xFDA
 19026                           fsr2l	equ	0xFD9
 19027                           status	equ	0xFD8
 19028                           
 19029 ;; *************** function _motor_speed_from_index *****************
 19030 ;; Defined at:
 19031 ;;		line 89 in file "motor.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;  speed_index     2   51[BANK0 ] unsigned int 
 19034 ;; Auto vars:     Size  Location     Type
 19035 ;;		None
 19036 ;; Return value:  Size  Location     Type
 19037 ;;                  2   51[BANK0 ] unsigned int 
 19038 ;; Registers used:
 19039 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19040 ;; Tracked objects:
 19041 ;;		On entry : 0/0
 19042 ;;		On exit  : 0/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19048 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19049 ;;Total ram usage:        2 bytes
 19050 ;; Hardware stack levels used:    1
 19051 ;; Hardware stack levels required when called:   12
 19052 ;; This function calls:
 19053 ;;		__motor_get_speed_in_degrees
 19054 ;; This function is called by:
 19055 ;;		_display_prepare
 19056 ;; This function uses a non-reentrant model
 19057 ;;
 19058                           
 19059                           	psect	text58
 19060  012A28                     __ptext58:
 19061                           	opt stack 0
 19062  012A28                     _motor_speed_from_index:
 19063                           	opt stack 17
 19064                           
 19065                           ;motor.c: 91: return _motor_get_speed_in_degrees(speed_index);
 19066                           
 19067                           ;incstack = 0
 19068  012A28  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 19069  012A2C  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 19070  012A30  EC50  F077         	call	__motor_get_speed_in_degrees	;wreg free
 19071  012A34  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 19072  012A38  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 19073  012A3C  0012               	return	
 19074  012A3E                     __end_of_motor_speed_from_index:
 19075                           	opt stack 0
 19076                           tblptru	equ	0xFF8
 19077                           tblptrh	equ	0xFF7
 19078                           tblptrl	equ	0xFF6
 19079                           tablat	equ	0xFF5
 19080                           prodh	equ	0xFF4
 19081                           prodl	equ	0xFF3
 19082                           intcon	equ	0xFF2
 19083                           postinc0	equ	0xFEE
 19084                           wreg	equ	0xFE8
 19085                           indf1	equ	0xFE7
 19086                           postdec1	equ	0xFE5
 19087                           plusw1	equ	0xFE3
 19088                           fsr1h	equ	0xFE2
 19089                           fsr1l	equ	0xFE1
 19090                           indf2	equ	0xFDF
 19091                           postinc2	equ	0xFDE
 19092                           postdec2	equ	0xFDD
 19093                           plusw2	equ	0xFDB
 19094                           fsr2h	equ	0xFDA
 19095                           fsr2l	equ	0xFD9
 19096                           status	equ	0xFD8
 19097                           
 19098 ;; *************** function __motor_get_speed_in_degrees *****************
 19099 ;; Defined at:
 19100 ;;		line 50 in file "motor.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;  speed_index     2   39[BANK0 ] unsigned int 
 19103 ;; Auto vars:     Size  Location     Type
 19104 ;;  lookup          4   47[BANK0 ] unsigned long 
 19105 ;;  speed           4   43[BANK0 ] float 
 19106 ;; Return value:  Size  Location     Type
 19107 ;;                  2   39[BANK0 ] unsigned int 
 19108 ;; Registers used:
 19109 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19110 ;; Tracked objects:
 19111 ;;		On entry : 0/0
 19112 ;;		On exit  : 0/0
 19113 ;;		Unchanged: 0/0
 19114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19116 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19118 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19119 ;;Total ram usage:       12 bytes
 19120 ;; Hardware stack levels used:    1
 19121 ;; Hardware stack levels required when called:   11
 19122 ;; This function calls:
 19123 ;;		___fldiv
 19124 ;;		___fltol
 19125 ;;		___lmul
 19126 ;;		___xxtofl
 19127 ;; This function is called by:
 19128 ;;		_motor_speed_from_index
 19129 ;;		_motor_get_maximum_speed
 19130 ;;		_motor_get_current_speed
 19131 ;; This function uses a non-reentrant model
 19132 ;;
 19133                           
 19134                           	psect	text59
 19135  00EEA0                     __ptext59:
 19136                           	opt stack 0
 19137  00EEA0                     __motor_get_speed_in_degrees:
 19138                           	opt stack 17
 19139                           
 19140                           ;motor.c: 52: uint32_t lookup;;motor.c: 53: float speed;;motor.c: 55: lookup = motor_spe
      +                          ed_lookup[speed_index];
 19141                           
 19142                           ;incstack = 0
 19143  00EEA0  90D8               	bcf	status,0,c
 19144  00EEA2  0100               	movlb	0	; () banked
 19145  00EEA4  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 19146  00EEA6  6EF6               	movwf	tblptrl,c
 19147  00EEA8  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 19148  00EEAA  6EF7               	movwf	tblptrh,c
 19149  00EEAC  0E93               	movlw	low _motor_speed_lookup
 19150  00EEAE  26F6               	addwf	tblptrl,f,c
 19151  00EEB0  0E90               	movlw	high _motor_speed_lookup
 19152  00EEB2  22F7               	addwfc	tblptrh,f,c
 19153  00EEB4                     	if	1	;There are 3 active tblptr bytes
 19154  00EEB4  6AF8               	clrf	tblptru,c
 19155  00EEB6  0E00               	movlw	low (__mediumconst shr (0+16))
 19156  00EEB8  22F8               	addwfc	tblptru,f,c
 19157  00EEBA                     	endif
 19158  00EEBA  0009               	tblrd		*+
 19159  00EEBC  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 19160  00EEC0  0009               	tblrd		*+
 19161  00EEC2  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 19162  00EEC6  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 19163  00EECA  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 19164  00EECE  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 19165  00EED0  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 19166                           
 19167                           ; BSR set to: 0
 19168                           ;motor.c: 56: lookup *= 16;
 19169  00EED2  0E04               	movlw	4
 19170  00EED4                     u19885:
 19171  00EED4  90D8               	bcf	status,0,c
 19172  00EED6  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 19173  00EED8  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 19174  00EEDA  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 19175  00EEDC  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 19176  00EEDE  2EE8               	decfsz	wreg,f,c
 19177  00EEE0  D7F9               	goto	u19885
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;motor.c: 57: lookup *= 360;
 19181  00EEE2  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 19182  00EEE6  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 19183  00EEEA  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 19184  00EEEE  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 19185  00EEF2  0E68               	movlw	104
 19186  00EEF4  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19187  00EEF6  0E01               	movlw	1
 19188  00EEF8  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19189  00EEFA  0E00               	movlw	0
 19190  00EEFC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19191  00EEFE  0E00               	movlw	0
 19192  00EF00  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19193  00EF02  EC58  F08F         	call	___lmul	;wreg free
 19194  00EF06  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 19195  00EF0A  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 19196  00EF0E  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 19197  00EF12  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 19198                           
 19199                           ;motor.c: 58: lookup *= 100;
 19200  00EF16  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 19201  00EF1A  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 19202  00EF1E  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 19203  00EF22  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 19204  00EF26  0E64               	movlw	100
 19205  00EF28  0100               	movlb	0	; () banked
 19206  00EF2A  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19207  00EF2C  0E00               	movlw	0
 19208  00EF2E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19209  00EF30  0E00               	movlw	0
 19210  00EF32  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19211  00EF34  0E00               	movlw	0
 19212  00EF36  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19213  00EF38  EC58  F08F         	call	___lmul	;wreg free
 19214  00EF3C  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 19215  00EF40  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 19216  00EF44  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 19217  00EF48  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 19218                           
 19219                           ;motor.c: 60: speed = (float) lookup;
 19220  00EF4C  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 19221  00EF50  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 19222  00EF54  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 19223  00EF58  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 19224  00EF5C  0E00               	movlw	0
 19225  00EF5E  EC6A  F075         	call	___xxtofl
 19226  00EF62  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 19227  00EF66  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 19228  00EF6A  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 19229  00EF6E  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 19230                           
 19231                           ;motor.c: 61: speed /= config.full_circle_in_steps;
 19232  00EF72  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 19233  00EF76  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 19234  00EF7A  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 19235  00EF7E  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 19236  00EF82  C179  F060         	movff	_config,___xxtofl@val
 19237  00EF86  C17A  F061         	movff	_config+1,___xxtofl@val+1
 19238  00EF8A  C17B  F062         	movff	_config+2,___xxtofl@val+2
 19239  00EF8E  C17C  F063         	movff	_config+3,___xxtofl@val+3
 19240  00EF92  0E00               	movlw	0
 19241  00EF94  EC6A  F075         	call	___xxtofl
 19242  00EF98  C060  F072         	movff	?___xxtofl,___fldiv@a
 19243  00EF9C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 19244  00EFA0  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 19245  00EFA4  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 19246  00EFA8  EC9D  F066         	call	___fldiv	;wreg free
 19247  00EFAC  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 19248  00EFB0  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 19249  00EFB4  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 19250  00EFB8  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 19251                           
 19252                           ;motor.c: 64: return (uint16_t) speed;
 19253  00EFBC  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 19254  00EFC0  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 19255  00EFC4  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 19256  00EFC8  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 19257  00EFCC  EC32  F081         	call	___fltol	;wreg free
 19258  00EFD0  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 19259  00EFD4  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 19260  00EFD8  0012               	return	
 19261  00EFDA                     __end_of__motor_get_speed_in_degrees:
 19262                           	opt stack 0
 19263                           tblptru	equ	0xFF8
 19264                           tblptrh	equ	0xFF7
 19265                           tblptrl	equ	0xFF6
 19266                           tablat	equ	0xFF5
 19267                           prodh	equ	0xFF4
 19268                           prodl	equ	0xFF3
 19269                           intcon	equ	0xFF2
 19270                           postinc0	equ	0xFEE
 19271                           wreg	equ	0xFE8
 19272                           indf1	equ	0xFE7
 19273                           postdec1	equ	0xFE5
 19274                           plusw1	equ	0xFE3
 19275                           fsr1h	equ	0xFE2
 19276                           fsr1l	equ	0xFE1
 19277                           indf2	equ	0xFDF
 19278                           postinc2	equ	0xFDE
 19279                           postdec2	equ	0xFDD
 19280                           plusw2	equ	0xFDB
 19281                           fsr2h	equ	0xFDA
 19282                           fsr2l	equ	0xFD9
 19283                           status	equ	0xFD8
 19284                           
 19285 ;; *************** function ___xxtofl *****************
 19286 ;; Defined at:
 19287 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 19288 ;; Parameters:    Size  Location     Type
 19289 ;;  sign            1    wreg     unsigned char 
 19290 ;;  val             4    0[BANK0 ] long 
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;  sign            1    8[BANK0 ] unsigned char 
 19293 ;;  arg             4   10[BANK0 ] unsigned long 
 19294 ;;  exp             1    9[BANK0 ] unsigned char 
 19295 ;; Return value:  Size  Location     Type
 19296 ;;                  4    0[BANK0 ] unsigned char 
 19297 ;; Registers used:
 19298 ;;		wreg, status,2, status,0
 19299 ;; Tracked objects:
 19300 ;;		On entry : 0/0
 19301 ;;		On exit  : 0/0
 19302 ;;		Unchanged: 0/0
 19303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19304 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19305 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19306 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19307 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19308 ;;Total ram usage:       14 bytes
 19309 ;; Hardware stack levels used:    1
 19310 ;; Hardware stack levels required when called:   10
 19311 ;; This function calls:
 19312 ;;		Nothing
 19313 ;; This function is called by:
 19314 ;;		_main
 19315 ;;		_motor_steps_from_degrees
 19316 ;;		__motor_get_speed_in_degrees
 19317 ;;		__step_position_from_divide_position
 19318 ;;		_motor_divide_jump_to_nearest
 19319 ;;		_motor_arc_move
 19320 ;;		_motor_go_to_degrees_position
 19321 ;; This function uses a non-reentrant model
 19322 ;;
 19323                           
 19324                           	psect	text60
 19325  00EAD4                     __ptext60:
 19326                           	opt stack 0
 19327  00EAD4                     ___xxtofl:
 19328                           	opt stack 17
 19329                           
 19330                           ;incstack = 0
 19331                           ;___xxtofl@sign stored from wreg
 19332  00EAD4  0100               	movlb	0	; () banked
 19333  00EAD6  6F68               	movwf	___xxtofl@sign& (0+255),b
 19334  00EAD8  0100               	movlb	0	; () banked
 19335  00EADA  5168               	movf	___xxtofl@sign& (0+255),w,b
 19336  00EADC  A4D8               	btfss	status,2,c
 19337                           
 19338                           ; BSR set to: 0
 19339  00EADE  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19340  00EAE0  D01A               	goto	l3340
 19341                           
 19342                           ; BSR set to: 0
 19343  00EAE2  C060  F064         	movff	___xxtofl@val,??___xxtofl
 19344  00EAE6  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 19345  00EAEA  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 19346  00EAEE  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 19347  00EAF2  1F64               	comf	??___xxtofl& (0+255),f,b
 19348  00EAF4  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 19349  00EAF6  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 19350  00EAF8  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 19351  00EAFA  2B64               	incf	??___xxtofl& (0+255),f,b
 19352  00EAFC  0E00               	movlw	0
 19353  00EAFE  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 19354  00EB00  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 19355  00EB02  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 19356  00EB04  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 19357  00EB08  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 19358  00EB0C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 19359  00EB10  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 19360  00EB14  D008               	goto	l3341
 19361  00EB16                     l3340:
 19362                           
 19363                           ; BSR set to: 0
 19364  00EB16  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 19365  00EB1A  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 19366  00EB1E  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 19367  00EB22  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 19368  00EB26                     l3341:
 19369                           
 19370                           ; BSR set to: 0
 19371                           
 19372                           ; BSR set to: 0
 19373  00EB26  5160               	movf	___xxtofl@val& (0+255),w,b
 19374  00EB28  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 19375  00EB2A  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 19376  00EB2C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 19377  00EB2E  A4D8               	btfss	status,2,c
 19378  00EB30  D009               	goto	l3342
 19379                           
 19380                           ; BSR set to: 0
 19381  00EB32  0E00               	movlw	0
 19382  00EB34  6F60               	movwf	?___xxtofl& (0+255),b
 19383  00EB36  0E00               	movlw	0
 19384  00EB38  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 19385  00EB3A  0E00               	movlw	0
 19386  00EB3C  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 19387  00EB3E  0E00               	movlw	0
 19388  00EB40  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 19389                           
 19390                           ; BSR set to: 0
 19391  00EB42  0012               	return	
 19392  00EB44                     l3342:
 19393                           
 19394                           ; BSR set to: 0
 19395                           
 19396                           ; BSR set to: 0
 19397  00EB44  0E96               	movlw	150
 19398  00EB46  6F69               	movwf	___xxtofl@exp& (0+255),b
 19399  00EB48  D006               	goto	l3344
 19400  00EB4A                     
 19401                           ; BSR set to: 0
 19402                           
 19403                           ; BSR set to: 0
 19404  00EB4A  2B69               	incf	___xxtofl@exp& (0+255),f,b
 19405  00EB4C  90D8               	bcf	status,0,c
 19406  00EB4E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19407  00EB50  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19408  00EB52  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19409  00EB54  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 19410  00EB56                     l3344:
 19411                           
 19412                           ; BSR set to: 0
 19413                           
 19414                           ; BSR set to: 0
 19415  00EB56  0E00               	movlw	0
 19416  00EB58  156A               	andwf	___xxtofl@arg& (0+255),w,b
 19417  00EB5A  6F64               	movwf	??___xxtofl& (0+255),b
 19418  00EB5C  0E00               	movlw	0
 19419  00EB5E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 19420  00EB60  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 19421  00EB62  0E00               	movlw	0
 19422  00EB64  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 19423  00EB66  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 19424  00EB68  0EFE               	movlw	254
 19425  00EB6A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 19426  00EB6C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 19427  00EB6E  5164               	movf	??___xxtofl& (0+255),w,b
 19428  00EB70  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 19429  00EB72  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 19430  00EB74  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 19431  00EB76  B4D8               	btfsc	status,2,c
 19432  00EB78  D00D               	goto	l3347
 19433  00EB7A  D7E7               	goto	l3345
 19434  00EB7C                     
 19435                           ; BSR set to: 0
 19436                           
 19437                           ; BSR set to: 0
 19438  00EB7C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 19439                           
 19440                           ; BSR set to: 0
 19441  00EB7E  0E01               	movlw	1
 19442  00EB80  276A               	addwf	___xxtofl@arg& (0+255),f,b
 19443  00EB82  0E00               	movlw	0
 19444  00EB84  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 19445  00EB86  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 19446  00EB88  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 19447                           
 19448                           ; BSR set to: 0
 19449  00EB8A  90D8               	bcf	status,0,c
 19450  00EB8C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19451  00EB8E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19452  00EB90  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19453  00EB92  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 19454  00EB94                     l3347:
 19455                           
 19456                           ; BSR set to: 0
 19457  00EB94  0E00               	movlw	0
 19458  00EB96  156A               	andwf	___xxtofl@arg& (0+255),w,b
 19459  00EB98  6F64               	movwf	??___xxtofl& (0+255),b
 19460  00EB9A  0E00               	movlw	0
 19461  00EB9C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 19462  00EB9E  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 19463  00EBA0  0E00               	movlw	0
 19464  00EBA2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 19465  00EBA4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 19466  00EBA6  0EFF               	movlw	255
 19467  00EBA8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 19468  00EBAA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 19469  00EBAC  5164               	movf	??___xxtofl& (0+255),w,b
 19470  00EBAE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 19471  00EBB0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 19472  00EBB2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 19473  00EBB4  B4D8               	btfsc	status,2,c
 19474  00EBB6  D007               	goto	l3350
 19475  00EBB8  D7E1               	goto	l3348
 19476  00EBBA                     
 19477                           ; BSR set to: 0
 19478                           
 19479                           ; BSR set to: 0
 19480  00EBBA  0769               	decf	___xxtofl@exp& (0+255),f,b
 19481  00EBBC  90D8               	bcf	status,0,c
 19482  00EBBE  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 19483  00EBC0  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 19484  00EBC2  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 19485  00EBC4  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 19486  00EBC6                     l3350:
 19487                           
 19488                           ; BSR set to: 0
 19489                           
 19490                           ; BSR set to: 0
 19491  00EBC6  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 19492  00EBC8  D003               	goto	u19250
 19493                           
 19494                           ; BSR set to: 0
 19495  00EBCA  0E02               	movlw	2
 19496  00EBCC  6169               	cpfslt	___xxtofl@exp& (0+255),b
 19497  00EBCE  D7F5               	goto	l3351
 19498  00EBD0                     u19250:
 19499                           
 19500                           ; BSR set to: 0
 19501                           
 19502                           ; BSR set to: 0
 19503  00EBD0  A169               	btfss	___xxtofl@exp& (0+255),0,b
 19504                           
 19505                           ; BSR set to: 0
 19506  00EBD2  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 19507                           
 19508                           ; BSR set to: 0
 19509                           
 19510                           ; BSR set to: 0
 19511  00EBD4  90D8               	bcf	status,0,c
 19512  00EBD6  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 19513                           
 19514                           ; BSR set to: 0
 19515  00EBD8  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 19516  00EBDC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 19517  00EBDE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 19518  00EBE0  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 19519  00EBE2  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 19520  00EBE6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 19521  00EBE8  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 19522  00EBEA  6B64               	clrf	??___xxtofl& (0+255),b
 19523  00EBEC  5164               	movf	??___xxtofl& (0+255),w,b
 19524  00EBEE  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 19525  00EBF0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 19526  00EBF2  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 19527  00EBF4  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 19528  00EBF6  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 19529  00EBF8  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 19530  00EBFA  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 19531                           
 19532                           ; BSR set to: 0
 19533  00EBFC  5168               	movf	___xxtofl@sign& (0+255),w,b
 19534  00EBFE  A4D8               	btfss	status,2,c
 19535                           
 19536                           ; BSR set to: 0
 19537  00EC00  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19538  00EC02  D001               	goto	l3356
 19539                           
 19540                           ; BSR set to: 0
 19541  00EC04  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 19542  00EC06                     l3356:
 19543                           
 19544                           ; BSR set to: 0
 19545                           
 19546                           ; BSR set to: 0
 19547  00EC06  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 19548  00EC0A  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 19549  00EC0E  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 19550  00EC12  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 19551  00EC16  0012               	return	
 19552  00EC18                     __end_of___xxtofl:
 19553                           	opt stack 0
 19554                           tblptru	equ	0xFF8
 19555                           tblptrh	equ	0xFF7
 19556                           tblptrl	equ	0xFF6
 19557                           tablat	equ	0xFF5
 19558                           prodh	equ	0xFF4
 19559                           prodl	equ	0xFF3
 19560                           intcon	equ	0xFF2
 19561                           postinc0	equ	0xFEE
 19562                           wreg	equ	0xFE8
 19563                           indf1	equ	0xFE7
 19564                           postdec1	equ	0xFE5
 19565                           plusw1	equ	0xFE3
 19566                           fsr1h	equ	0xFE2
 19567                           fsr1l	equ	0xFE1
 19568                           indf2	equ	0xFDF
 19569                           postinc2	equ	0xFDE
 19570                           postdec2	equ	0xFDD
 19571                           plusw2	equ	0xFDB
 19572                           fsr2h	equ	0xFDA
 19573                           fsr2l	equ	0xFD9
 19574                           status	equ	0xFD8
 19575                           
 19576 ;; *************** function ___lmul *****************
 19577 ;; Defined at:
 19578 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 19579 ;; Parameters:    Size  Location     Type
 19580 ;;  multiplier      4    0[BANK0 ] unsigned long 
 19581 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 19582 ;; Auto vars:     Size  Location     Type
 19583 ;;  product         4    8[BANK0 ] unsigned long 
 19584 ;; Return value:  Size  Location     Type
 19585 ;;                  4    0[BANK0 ] unsigned long 
 19586 ;; Registers used:
 19587 ;;		wreg, status,2, status,0
 19588 ;; Tracked objects:
 19589 ;;		On entry : 0/0
 19590 ;;		On exit  : 0/0
 19591 ;;		Unchanged: 0/0
 19592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19593 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19594 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19596 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19597 ;;Total ram usage:       12 bytes
 19598 ;; Hardware stack levels used:    1
 19599 ;; Hardware stack levels required when called:   10
 19600 ;; This function calls:
 19601 ;;		Nothing
 19602 ;; This function is called by:
 19603 ;;		__motor_get_speed_in_degrees
 19604 ;; This function uses a non-reentrant model
 19605 ;;
 19606                           
 19607                           	psect	text61
 19608  011EB0                     __ptext61:
 19609                           	opt stack 0
 19610  011EB0                     ___lmul:
 19611                           	opt stack 17
 19612                           
 19613                           ; BSR set to: 0
 19614                           ;incstack = 0
 19615  011EB0  0E00               	movlw	0
 19616  011EB2  0100               	movlb	0	; () banked
 19617  011EB4  6F68               	movwf	___lmul@product& (0+255),b
 19618  011EB6  0E00               	movlw	0
 19619  011EB8  6F69               	movwf	(___lmul@product+1)& (0+255),b
 19620  011EBA  0E00               	movlw	0
 19621  011EBC  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 19622  011EBE  0E00               	movlw	0
 19623  011EC0  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 19624  011EC2                     
 19625                           ; BSR set to: 0
 19626                           
 19627                           ; BSR set to: 0
 19628  011EC2  A160               	btfss	___lmul@multiplier& (0+255),0,b
 19629  011EC4  D008               	goto	l2707
 19630                           
 19631                           ; BSR set to: 0
 19632  011EC6  5164               	movf	___lmul@multiplicand& (0+255),w,b
 19633  011EC8  2768               	addwf	___lmul@product& (0+255),f,b
 19634  011ECA  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19635  011ECC  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 19636  011ECE  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19637  011ED0  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 19638  011ED2  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19639  011ED4  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 19640  011ED6                     l2707:
 19641                           
 19642                           ; BSR set to: 0
 19643                           
 19644                           ; BSR set to: 0
 19645  011ED6  90D8               	bcf	status,0,c
 19646  011ED8  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 19647  011EDA  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19648  011EDC  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19649  011EDE  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19650                           
 19651                           ; BSR set to: 0
 19652  011EE0  90D8               	bcf	status,0,c
 19653  011EE2  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19654  011EE4  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19655  011EE6  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19656  011EE8  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 19657  011EEA  5160               	movf	___lmul@multiplier& (0+255),w,b
 19658  011EEC  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19659  011EEE  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19660  011EF0  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19661  011EF2  A4D8               	btfss	status,2,c
 19662  011EF4  D7E6               	goto	l2706
 19663                           
 19664                           ; BSR set to: 0
 19665  011EF6  C068  F060         	movff	___lmul@product,?___lmul
 19666  011EFA  C069  F061         	movff	___lmul@product+1,?___lmul+1
 19667  011EFE  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 19668  011F02  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 19669                           
 19670                           ; BSR set to: 0
 19671  011F06  0012               	return		;funcret
 19672  011F08                     __end_of___lmul:
 19673                           	opt stack 0
 19674                           tblptru	equ	0xFF8
 19675                           tblptrh	equ	0xFF7
 19676                           tblptrl	equ	0xFF6
 19677                           tablat	equ	0xFF5
 19678                           prodh	equ	0xFF4
 19679                           prodl	equ	0xFF3
 19680                           intcon	equ	0xFF2
 19681                           postinc0	equ	0xFEE
 19682                           wreg	equ	0xFE8
 19683                           indf1	equ	0xFE7
 19684                           postdec1	equ	0xFE5
 19685                           plusw1	equ	0xFE3
 19686                           fsr1h	equ	0xFE2
 19687                           fsr1l	equ	0xFE1
 19688                           indf2	equ	0xFDF
 19689                           postinc2	equ	0xFDE
 19690                           postdec2	equ	0xFDD
 19691                           plusw2	equ	0xFDB
 19692                           fsr2h	equ	0xFDA
 19693                           fsr2l	equ	0xFD9
 19694                           status	equ	0xFD8
 19695                           
 19696 ;; *************** function ___fltol *****************
 19697 ;; Defined at:
 19698 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 19699 ;; Parameters:    Size  Location     Type
 19700 ;;  f1              4    0[BANK0 ] unsigned long 
 19701 ;; Auto vars:     Size  Location     Type
 19702 ;;  exp1            1    9[BANK0 ] unsigned char 
 19703 ;;  sign1           1    8[BANK0 ] unsigned char 
 19704 ;; Return value:  Size  Location     Type
 19705 ;;                  4    0[BANK0 ] long 
 19706 ;; Registers used:
 19707 ;;		wreg, status,2, status,0
 19708 ;; Tracked objects:
 19709 ;;		On entry : 0/0
 19710 ;;		On exit  : 0/0
 19711 ;;		Unchanged: 0/0
 19712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19716 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19717 ;;Total ram usage:       10 bytes
 19718 ;; Hardware stack levels used:    1
 19719 ;; Hardware stack levels required when called:   10
 19720 ;; This function calls:
 19721 ;;		Nothing
 19722 ;; This function is called by:
 19723 ;;		_main
 19724 ;;		_motor_steps_from_degrees
 19725 ;;		__motor_get_speed_in_degrees
 19726 ;;		__step_position_from_divide_position
 19727 ;;		_motor_divide_jump_to_nearest
 19728 ;;		_motor_arc_move
 19729 ;;		_motor_go_to_degrees_position
 19730 ;; This function uses a non-reentrant model
 19731 ;;
 19732                           
 19733                           	psect	text62
 19734  010264                     __ptext62:
 19735                           	opt stack 0
 19736  010264                     ___fltol:
 19737                           	opt stack 17
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;incstack = 0
 19741  010264  0100               	movlb	0	; () banked
 19742  010266  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 19743  010268  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 19744  01026A  6F69               	movwf	___fltol@exp1& (0+255),b
 19745  01026C  5169               	movf	___fltol@exp1& (0+255),w,b
 19746  01026E  A4D8               	btfss	status,2,c
 19747  010270  D009               	goto	l2985
 19748                           
 19749                           ; BSR set to: 0
 19750  010272  0E00               	movlw	0
 19751  010274  6F60               	movwf	?___fltol& (0+255),b
 19752  010276  0E00               	movlw	0
 19753  010278  6F61               	movwf	(?___fltol+1)& (0+255),b
 19754  01027A  0E00               	movlw	0
 19755  01027C  6F62               	movwf	(?___fltol+2)& (0+255),b
 19756  01027E  0E00               	movlw	0
 19757  010280  6F63               	movwf	(?___fltol+3)& (0+255),b
 19758                           
 19759                           ; BSR set to: 0
 19760  010282  0012               	return	
 19761  010284                     l2985:
 19762                           
 19763                           ; BSR set to: 0
 19764                           
 19765                           ; BSR set to: 0
 19766  010284  C060  F064         	movff	___fltol@f1,??___fltol
 19767  010288  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 19768  01028C  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 19769  010290  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 19770  010294  0E20               	movlw	32
 19771  010296  D005               	goto	u19130
 19772  010298                     u19135:
 19773  010298  90D8               	bcf	status,0,c
 19774  01029A  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 19775  01029C  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 19776  01029E  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 19777  0102A0  3364               	rrcf	??___fltol& (0+255),f,b
 19778  0102A2                     u19130:
 19779  0102A2  2EE8               	decfsz	wreg,f,c
 19780  0102A4  D7F9               	goto	u19135
 19781  0102A6  5164               	movf	??___fltol& (0+255),w,b
 19782  0102A8  6F68               	movwf	___fltol@sign1& (0+255),b
 19783                           
 19784                           ; BSR set to: 0
 19785  0102AA  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 19786                           
 19787                           ; BSR set to: 0
 19788  0102AC  0EFF               	movlw	255
 19789  0102AE  1760               	andwf	___fltol@f1& (0+255),f,b
 19790  0102B0  0EFF               	movlw	255
 19791  0102B2  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 19792  0102B4  0EFF               	movlw	255
 19793  0102B6  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 19794  0102B8  0E00               	movlw	0
 19795  0102BA  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 19796                           
 19797                           ; BSR set to: 0
 19798  0102BC  0E96               	movlw	150
 19799  0102BE  5F69               	subwf	___fltol@exp1& (0+255),f,b
 19800                           
 19801                           ; BSR set to: 0
 19802  0102C0  AF69               	btfss	___fltol@exp1& (0+255),7,b
 19803  0102C2  D016               	goto	l2987
 19804                           
 19805                           ; BSR set to: 0
 19806  0102C4  5169               	movf	___fltol@exp1& (0+255),w,b
 19807  0102C6  0A80               	xorlw	128
 19808  0102C8  0F97               	addlw	151
 19809  0102CA  B0D8               	btfsc	status,0,c
 19810  0102CC  D009               	goto	l2988
 19811                           
 19812                           ; BSR set to: 0
 19813  0102CE  0E00               	movlw	0
 19814  0102D0  6F60               	movwf	?___fltol& (0+255),b
 19815  0102D2  0E00               	movlw	0
 19816  0102D4  6F61               	movwf	(?___fltol+1)& (0+255),b
 19817  0102D6  0E00               	movlw	0
 19818  0102D8  6F62               	movwf	(?___fltol+2)& (0+255),b
 19819  0102DA  0E00               	movlw	0
 19820  0102DC  6F63               	movwf	(?___fltol+3)& (0+255),b
 19821                           
 19822                           ; BSR set to: 0
 19823  0102DE  0012               	return	
 19824  0102E0                     l2988:
 19825                           
 19826                           ; BSR set to: 0
 19827                           
 19828                           ; BSR set to: 0
 19829                           
 19830                           ; BSR set to: 0
 19831  0102E0  90D8               	bcf	status,0,c
 19832  0102E2  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 19833  0102E4  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 19834  0102E6  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 19835  0102E8  3360               	rrcf	___fltol@f1& (0+255),f,b
 19836                           
 19837                           ; BSR set to: 0
 19838  0102EA  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 19839  0102EC  D7F9               	goto	l2988
 19840                           
 19841                           ; BSR set to: 0
 19842  0102EE  D015               	goto	u19170
 19843  0102F0                     l2987:
 19844                           
 19845                           ; BSR set to: 0
 19846                           
 19847                           ; BSR set to: 0
 19848  0102F0  0E1F               	movlw	31
 19849  0102F2  6569               	cpfsgt	___fltol@exp1& (0+255),b
 19850  0102F4  D00F               	goto	l2993
 19851                           
 19852                           ; BSR set to: 0
 19853  0102F6  0E00               	movlw	0
 19854  0102F8  6F60               	movwf	?___fltol& (0+255),b
 19855  0102FA  0E00               	movlw	0
 19856  0102FC  6F61               	movwf	(?___fltol+1)& (0+255),b
 19857  0102FE  0E00               	movlw	0
 19858  010300  6F62               	movwf	(?___fltol+2)& (0+255),b
 19859  010302  0E00               	movlw	0
 19860  010304  6F63               	movwf	(?___fltol+3)& (0+255),b
 19861                           
 19862                           ; BSR set to: 0
 19863  010306  0012               	return	
 19864  010308                     
 19865                           ; BSR set to: 0
 19866                           
 19867                           ; BSR set to: 0
 19868  010308  90D8               	bcf	status,0,c
 19869  01030A  3760               	rlcf	___fltol@f1& (0+255),f,b
 19870  01030C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 19871  01030E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 19872  010310  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 19873  010312  0769               	decf	___fltol@exp1& (0+255),f,b
 19874  010314                     l2993:
 19875                           
 19876                           ; BSR set to: 0
 19877                           
 19878                           ; BSR set to: 0
 19879  010314  5169               	movf	___fltol@exp1& (0+255),w,b
 19880  010316  A4D8               	btfss	status,2,c
 19881  010318  D7F7               	goto	l2994
 19882  01031A                     u19170:
 19883                           
 19884                           ; BSR set to: 0
 19885                           
 19886                           ; BSR set to: 0
 19887                           
 19888                           ; BSR set to: 0
 19889  01031A  5168               	movf	___fltol@sign1& (0+255),w,b
 19890  01031C  B4D8               	btfsc	status,2,c
 19891  01031E  D008               	goto	l2996
 19892                           
 19893                           ; BSR set to: 0
 19894  010320  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 19895  010322  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 19896  010324  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 19897  010326  6D60               	negf	___fltol@f1& (0+255),b
 19898  010328  0E00               	movlw	0
 19899  01032A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 19900  01032C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 19901  01032E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 19902  010330                     l2996:
 19903                           
 19904                           ; BSR set to: 0
 19905                           
 19906                           ; BSR set to: 0
 19907  010330  C060  F060         	movff	___fltol@f1,?___fltol
 19908  010334  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 19909  010338  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 19910  01033C  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 19911  010340  0012               	return	
 19912  010342                     __end_of___fltol:
 19913                           	opt stack 0
 19914                           tblptru	equ	0xFF8
 19915                           tblptrh	equ	0xFF7
 19916                           tblptrl	equ	0xFF6
 19917                           tablat	equ	0xFF5
 19918                           prodh	equ	0xFF4
 19919                           prodl	equ	0xFF3
 19920                           intcon	equ	0xFF2
 19921                           postinc0	equ	0xFEE
 19922                           wreg	equ	0xFE8
 19923                           indf1	equ	0xFE7
 19924                           postdec1	equ	0xFE5
 19925                           plusw1	equ	0xFE3
 19926                           fsr1h	equ	0xFE2
 19927                           fsr1l	equ	0xFE1
 19928                           indf2	equ	0xFDF
 19929                           postinc2	equ	0xFDE
 19930                           postdec2	equ	0xFDD
 19931                           plusw2	equ	0xFDB
 19932                           fsr2h	equ	0xFDA
 19933                           fsr2l	equ	0xFD9
 19934                           status	equ	0xFD8
 19935                           
 19936 ;; *************** function ___fldiv *****************
 19937 ;; Defined at:
 19938 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 19939 ;; Parameters:    Size  Location     Type
 19940 ;;  b               4   14[BANK0 ] long 
 19941 ;;  a               4   18[BANK0 ] long 
 19942 ;; Auto vars:     Size  Location     Type
 19943 ;;  grs             4   33[BANK0 ] unsigned long 
 19944 ;;  rem             4   26[BANK0 ] unsigned long 
 19945 ;;  new_exp         2   31[BANK0 ] int 
 19946 ;;  aexp            1   38[BANK0 ] unsigned char 
 19947 ;;  bexp            1   37[BANK0 ] unsigned char 
 19948 ;;  sign            1   30[BANK0 ] unsigned char 
 19949 ;; Return value:  Size  Location     Type
 19950 ;;                  4   14[BANK0 ] unsigned char 
 19951 ;; Registers used:
 19952 ;;		wreg, status,2, status,0
 19953 ;; Tracked objects:
 19954 ;;		On entry : 0/0
 19955 ;;		On exit  : 0/0
 19956 ;;		Unchanged: 0/0
 19957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19958 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19959 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19961 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19962 ;;Total ram usage:       25 bytes
 19963 ;; Hardware stack levels used:    1
 19964 ;; Hardware stack levels required when called:   10
 19965 ;; This function calls:
 19966 ;;		Nothing
 19967 ;; This function is called by:
 19968 ;;		_main
 19969 ;;		_motor_steps_from_degrees
 19970 ;;		__motor_get_speed_in_degrees
 19971 ;;		__step_position_from_divide_position
 19972 ;;		_motor_divide_jump_to_nearest
 19973 ;;		_motor_arc_move
 19974 ;;		_motor_go_to_degrees_position
 19975 ;; This function uses a non-reentrant model
 19976 ;;
 19977                           
 19978                           	psect	text63
 19979  00CD3A                     __ptext63:
 19980                           	opt stack 0
 19981  00CD3A                     ___fldiv:
 19982                           	opt stack 17
 19983                           
 19984                           ; BSR set to: 0
 19985                           ;incstack = 0
 19986  00CD3A  0100               	movlb	0	; () banked
 19987  00CD3C  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 19988  00CD3E  0B80               	andlw	128
 19989  00CD40  6F7E               	movwf	___fldiv@sign& (0+255),b
 19990  00CD42  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 19991  00CD44  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 19992  00CD46  6F85               	movwf	___fldiv@bexp& (0+255),b
 19993                           
 19994                           ; BSR set to: 0
 19995  00CD48  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 19996                           
 19997                           ; BSR set to: 0
 19998  00CD4A  8185               	bsf	___fldiv@bexp& (0+255),0,b
 19999                           
 20000                           ; BSR set to: 0
 20001                           
 20002                           ; BSR set to: 0
 20003  00CD4C  5185               	movf	___fldiv@bexp& (0+255),w,b
 20004  00CD4E  B4D8               	btfsc	status,2,c
 20005  00CD50  D00D               	goto	l3259
 20006                           
 20007                           ; BSR set to: 0
 20008  00CD52  2985               	incf	___fldiv@bexp& (0+255),w,b
 20009  00CD54  A4D8               	btfss	status,2,c
 20010  00CD56  D008               	goto	l3260
 20011                           
 20012                           ; BSR set to: 0
 20013  00CD58  0E00               	movlw	0
 20014  00CD5A  6F6E               	movwf	___fldiv@b& (0+255),b
 20015  00CD5C  0E00               	movlw	0
 20016  00CD5E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20017  00CD60  0E00               	movlw	0
 20018  00CD62  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20019  00CD64  0E00               	movlw	0
 20020  00CD66  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20021  00CD68                     l3260:
 20022                           
 20023                           ; BSR set to: 0
 20024                           
 20025                           ; BSR set to: 0
 20026  00CD68  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 20027  00CD6A  D006               	goto	L36
 20028  00CD6C                     l3259:
 20029                           
 20030                           ; BSR set to: 0
 20031                           
 20032                           ; BSR set to: 0
 20033  00CD6C  0E00               	movlw	0
 20034  00CD6E  6F6E               	movwf	___fldiv@b& (0+255),b
 20035  00CD70  0E00               	movlw	0
 20036  00CD72  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20037  00CD74  0E00               	movlw	0
 20038  00CD76  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20039  00CD78                     L36:
 20040  00CD78  0E00               	movlw	0
 20041  00CD7A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20042                           
 20043                           ; BSR set to: 0
 20044                           
 20045                           ; BSR set to: 0
 20046  00CD7C  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 20047  00CD7E  0B80               	andlw	128
 20048  00CD80  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 20049                           
 20050                           ; BSR set to: 0
 20051  00CD82  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 20052  00CD84  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 20053  00CD86  6F86               	movwf	___fldiv@aexp& (0+255),b
 20054                           
 20055                           ; BSR set to: 0
 20056  00CD88  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 20057                           
 20058                           ; BSR set to: 0
 20059  00CD8A  8186               	bsf	___fldiv@aexp& (0+255),0,b
 20060                           
 20061                           ; BSR set to: 0
 20062                           
 20063                           ; BSR set to: 0
 20064  00CD8C  5186               	movf	___fldiv@aexp& (0+255),w,b
 20065  00CD8E  B4D8               	btfsc	status,2,c
 20066  00CD90  D00D               	goto	l3263
 20067                           
 20068                           ; BSR set to: 0
 20069  00CD92  2986               	incf	___fldiv@aexp& (0+255),w,b
 20070  00CD94  A4D8               	btfss	status,2,c
 20071  00CD96  D008               	goto	l3264
 20072                           
 20073                           ; BSR set to: 0
 20074  00CD98  0E00               	movlw	0
 20075  00CD9A  6F72               	movwf	___fldiv@a& (0+255),b
 20076  00CD9C  0E00               	movlw	0
 20077  00CD9E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 20078  00CDA0  0E00               	movlw	0
 20079  00CDA2  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 20080  00CDA4  0E00               	movlw	0
 20081  00CDA6  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 20082  00CDA8                     l3264:
 20083                           
 20084                           ; BSR set to: 0
 20085                           
 20086                           ; BSR set to: 0
 20087  00CDA8  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 20088  00CDAA  D006               	goto	L37
 20089  00CDAC                     l3263:
 20090                           
 20091                           ; BSR set to: 0
 20092                           
 20093                           ; BSR set to: 0
 20094  00CDAC  0E00               	movlw	0
 20095  00CDAE  6F72               	movwf	___fldiv@a& (0+255),b
 20096  00CDB0  0E00               	movlw	0
 20097  00CDB2  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 20098  00CDB4  0E00               	movlw	0
 20099  00CDB6  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 20100  00CDB8                     L37:
 20101  00CDB8  0E00               	movlw	0
 20102  00CDBA  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 20103                           
 20104                           ; BSR set to: 0
 20105                           
 20106                           ; BSR set to: 0
 20107  00CDBC  5172               	movf	___fldiv@a& (0+255),w,b
 20108  00CDBE  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 20109  00CDC0  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 20110  00CDC2  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 20111  00CDC4  A4D8               	btfss	status,2,c
 20112  00CDC6  D017               	goto	l3266
 20113                           
 20114                           ; BSR set to: 0
 20115  00CDC8  0E00               	movlw	0
 20116  00CDCA  6F6E               	movwf	___fldiv@b& (0+255),b
 20117  00CDCC  0E00               	movlw	0
 20118  00CDCE  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20119  00CDD0  0E00               	movlw	0
 20120  00CDD2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20121  00CDD4  0E00               	movlw	0
 20122  00CDD6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20123                           
 20124                           ; BSR set to: 0
 20125  00CDD8  0E80               	movlw	128
 20126  00CDDA  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 20127  00CDDC  0E7F               	movlw	127
 20128  00CDDE  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 20129                           
 20130                           ; BSR set to: 0
 20131  00CDE0  517E               	movf	___fldiv@sign& (0+255),w,b
 20132  00CDE2  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 20133                           
 20134                           ; BSR set to: 0
 20135  00CDE4  C06E  F06E         	movff	___fldiv@b,?___fldiv
 20136  00CDE8  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 20137  00CDEC  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 20138  00CDF0  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 20139                           
 20140                           ; BSR set to: 0
 20141  00CDF4  0012               	return	
 20142  00CDF6                     l3266:
 20143                           
 20144                           ; BSR set to: 0
 20145                           
 20146                           ; BSR set to: 0
 20147  00CDF6  5185               	movf	___fldiv@bexp& (0+255),w,b
 20148  00CDF8  A4D8               	btfss	status,2,c
 20149  00CDFA  D011               	goto	l3268
 20150                           
 20151                           ; BSR set to: 0
 20152  00CDFC  0E00               	movlw	0
 20153  00CDFE  6F6E               	movwf	___fldiv@b& (0+255),b
 20154  00CE00  0E00               	movlw	0
 20155  00CE02  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20156  00CE04  0E00               	movlw	0
 20157  00CE06  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20158  00CE08  0E00               	movlw	0
 20159  00CE0A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20160                           
 20161                           ; BSR set to: 0
 20162  00CE0C  C06E  F06E         	movff	___fldiv@b,?___fldiv
 20163  00CE10  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 20164  00CE14  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 20165  00CE18  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 20166                           
 20167                           ; BSR set to: 0
 20168  00CE1C  0012               	return	
 20169  00CE1E                     l3268:
 20170                           
 20171                           ; BSR set to: 0
 20172                           
 20173                           ; BSR set to: 0
 20174  00CE1E  5186               	movf	___fldiv@aexp& (0+255),w,b
 20175  00CE20  6F76               	movwf	??___fldiv& (0+255),b
 20176  00CE22  6B77               	clrf	(??___fldiv+1)& (0+255),b
 20177  00CE24  1F76               	comf	??___fldiv& (0+255),f,b
 20178  00CE26  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 20179  00CE28  4B76               	infsnz	??___fldiv& (0+255),f,b
 20180  00CE2A  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 20181  00CE2C  5185               	movf	___fldiv@bexp& (0+255),w,b
 20182  00CE2E  6F78               	movwf	(??___fldiv+2)& (0+255),b
 20183  00CE30  6B79               	clrf	(??___fldiv+3)& (0+255),b
 20184  00CE32  5176               	movf	??___fldiv& (0+255),w,b
 20185  00CE34  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 20186  00CE36  5177               	movf	(??___fldiv+1)& (0+255),w,b
 20187  00CE38  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 20188  00CE3A  0E7F               	movlw	127
 20189  00CE3C  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 20190  00CE3E  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 20191  00CE40  0E00               	movlw	0
 20192  00CE42  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 20193  00CE44  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 20194                           
 20195                           ; BSR set to: 0
 20196  00CE46  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 20197  00CE4A  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 20198  00CE4E  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 20199  00CE52  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 20200                           
 20201                           ; BSR set to: 0
 20202  00CE56  0E00               	movlw	0
 20203  00CE58  6F6E               	movwf	___fldiv@b& (0+255),b
 20204  00CE5A  0E00               	movlw	0
 20205  00CE5C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20206  00CE5E  0E00               	movlw	0
 20207  00CE60  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20208  00CE62  0E00               	movlw	0
 20209  00CE64  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20210                           
 20211                           ; BSR set to: 0
 20212  00CE66  0E00               	movlw	0
 20213  00CE68  6F81               	movwf	___fldiv@grs& (0+255),b
 20214  00CE6A  0E00               	movlw	0
 20215  00CE6C  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 20216  00CE6E  0E00               	movlw	0
 20217  00CE70  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 20218  00CE72  0E00               	movlw	0
 20219  00CE74  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 20220                           
 20221                           ; BSR set to: 0
 20222  00CE76  0E00               	movlw	0
 20223  00CE78  6F86               	movwf	___fldiv@aexp& (0+255),b
 20224  00CE7A  D028               	goto	l3269
 20225  00CE7C                     
 20226                           ; BSR set to: 0
 20227                           
 20228                           ; BSR set to: 0
 20229  00CE7C  5186               	movf	___fldiv@aexp& (0+255),w,b
 20230  00CE7E  B4D8               	btfsc	status,2,c
 20231  00CE80  D011               	goto	l3271
 20232                           
 20233                           ; BSR set to: 0
 20234  00CE82  90D8               	bcf	status,0,c
 20235  00CE84  377A               	rlcf	___fldiv@rem& (0+255),f,b
 20236  00CE86  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 20237  00CE88  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 20238  00CE8A  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 20239  00CE8C  90D8               	bcf	status,0,c
 20240  00CE8E  376E               	rlcf	___fldiv@b& (0+255),f,b
 20241  00CE90  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 20242  00CE92  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 20243  00CE94  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 20244                           
 20245                           ; BSR set to: 0
 20246  00CE96  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 20247                           
 20248                           ; BSR set to: 0
 20249  00CE98  816E               	bsf	___fldiv@b& (0+255),0,b
 20250                           
 20251                           ; BSR set to: 0
 20252  00CE9A  90D8               	bcf	status,0,c
 20253  00CE9C  3781               	rlcf	___fldiv@grs& (0+255),f,b
 20254  00CE9E  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 20255  00CEA0  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 20256  00CEA2  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 20257  00CEA4                     l3271:
 20258                           
 20259                           ; BSR set to: 0
 20260                           
 20261                           ; BSR set to: 0
 20262  00CEA4  5172               	movf	___fldiv@a& (0+255),w,b
 20263  00CEA6  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 20264  00CEA8  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 20265  00CEAA  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 20266  00CEAC  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 20267  00CEAE  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 20268  00CEB0  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 20269  00CEB2  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 20270  00CEB4  A0D8               	btfss	status,0,c
 20271  00CEB6  D009               	goto	l3273
 20272                           
 20273                           ; BSR set to: 0
 20274  00CEB8  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 20275                           
 20276                           ; BSR set to: 0
 20277  00CEBA  5172               	movf	___fldiv@a& (0+255),w,b
 20278  00CEBC  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 20279  00CEBE  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 20280  00CEC0  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 20281  00CEC2  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 20282  00CEC4  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 20283  00CEC6  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 20284  00CEC8  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 20285  00CECA                     l3273:
 20286                           
 20287                           ; BSR set to: 0
 20288                           
 20289                           ; BSR set to: 0
 20290  00CECA  2B86               	incf	___fldiv@aexp& (0+255),f,b
 20291  00CECC                     l3269:
 20292                           
 20293                           ; BSR set to: 0
 20294  00CECC  0E19               	movlw	25
 20295  00CECE  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 20296  00CED0  D7D5               	goto	l3270
 20297                           
 20298                           ; BSR set to: 0
 20299                           
 20300                           ; BSR set to: 0
 20301  00CED2  517A               	movf	___fldiv@rem& (0+255),w,b
 20302  00CED4  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 20303  00CED6  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 20304  00CED8  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 20305  00CEDA  B4D8               	btfsc	status,2,c
 20306  00CEDC  D011               	goto	l3276
 20307                           
 20308                           ; BSR set to: 0
 20309  00CEDE  8181               	bsf	___fldiv@grs& (0+255),0,b
 20310                           
 20311                           ; BSR set to: 0
 20312  00CEE0  D00F               	goto	l3276
 20313  00CEE2                     
 20314                           ; BSR set to: 0
 20315                           
 20316                           ; BSR set to: 0
 20317  00CEE2  90D8               	bcf	status,0,c
 20318  00CEE4  376E               	rlcf	___fldiv@b& (0+255),f,b
 20319  00CEE6  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 20320  00CEE8  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 20321  00CEEA  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 20322                           
 20323                           ; BSR set to: 0
 20324  00CEEC  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 20325                           
 20326                           ; BSR set to: 0
 20327  00CEEE  816E               	bsf	___fldiv@b& (0+255),0,b
 20328                           
 20329                           ; BSR set to: 0
 20330  00CEF0  90D8               	bcf	status,0,c
 20331  00CEF2  3781               	rlcf	___fldiv@grs& (0+255),f,b
 20332  00CEF4  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 20333  00CEF6  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 20334  00CEF8  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 20335  00CEFA  077F               	decf	___fldiv@new_exp& (0+255),f,b
 20336  00CEFC  A0D8               	btfss	status,0,c
 20337  00CEFE  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 20338  00CF00                     l3276:
 20339                           
 20340                           ; BSR set to: 0
 20341                           
 20342                           ; BSR set to: 0
 20343  00CF00  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 20344  00CF02  D7EF               	goto	l3277
 20345                           
 20346                           ; BSR set to: 0
 20347                           
 20348                           ; BSR set to: 0
 20349  00CF04  0E00               	movlw	0
 20350  00CF06  6F86               	movwf	___fldiv@aexp& (0+255),b
 20351                           
 20352                           ; BSR set to: 0
 20353  00CF08  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 20354  00CF0A  D016               	goto	l3283
 20355                           
 20356                           ; BSR set to: 0
 20357  00CF0C  0EFF               	movlw	255
 20358  00CF0E  1581               	andwf	___fldiv@grs& (0+255),w,b
 20359  00CF10  6F76               	movwf	??___fldiv& (0+255),b
 20360  00CF12  0EFF               	movlw	255
 20361  00CF14  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 20362  00CF16  6F77               	movwf	(??___fldiv+1)& (0+255),b
 20363  00CF18  0EFF               	movlw	255
 20364  00CF1A  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 20365  00CF1C  6F78               	movwf	(??___fldiv+2)& (0+255),b
 20366  00CF1E  0E7F               	movlw	127
 20367  00CF20  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 20368  00CF22  6F79               	movwf	(??___fldiv+3)& (0+255),b
 20369  00CF24  5176               	movf	??___fldiv& (0+255),w,b
 20370  00CF26  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 20371  00CF28  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 20372  00CF2A  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 20373  00CF2C  A4D8               	btfss	status,2,c
 20374  00CF2E  D002               	goto	u18870
 20375                           
 20376                           ; BSR set to: 0
 20377                           
 20378                           ; BSR set to: 0
 20379  00CF30  A16E               	btfss	___fldiv@b& (0+255),0,b
 20380  00CF32  D002               	goto	l3283
 20381  00CF34                     u18870:
 20382                           
 20383                           ; BSR set to: 0
 20384  00CF34  0E01               	movlw	1
 20385  00CF36  6F86               	movwf	___fldiv@aexp& (0+255),b
 20386  00CF38                     l3283:
 20387                           
 20388                           ; BSR set to: 0
 20389                           
 20390                           ; BSR set to: 0
 20391                           
 20392                           ; BSR set to: 0
 20393  00CF38  5186               	movf	___fldiv@aexp& (0+255),w,b
 20394  00CF3A  B4D8               	btfsc	status,2,c
 20395  00CF3C  D01F               	goto	l3285
 20396                           
 20397                           ; BSR set to: 0
 20398  00CF3E  0E01               	movlw	1
 20399  00CF40  276E               	addwf	___fldiv@b& (0+255),f,b
 20400  00CF42  0E00               	movlw	0
 20401  00CF44  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 20402  00CF46  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 20403  00CF48  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 20404                           
 20405                           ; BSR set to: 0
 20406  00CF4A  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 20407  00CF4C  D017               	goto	l3285
 20408                           
 20409                           ; BSR set to: 0
 20410  00CF4E  C06E  F076         	movff	___fldiv@b,??___fldiv
 20411  00CF52  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 20412  00CF56  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 20413  00CF5A  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 20414  00CF5E  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 20415  00CF60  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 20416  00CF62  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 20417  00CF64  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 20418  00CF66  3376               	rrcf	??___fldiv& (0+255),f,b
 20419  00CF68  C076  F06E         	movff	??___fldiv,___fldiv@b
 20420  00CF6C  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 20421  00CF70  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 20422  00CF74  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 20423                           
 20424                           ; BSR set to: 0
 20425  00CF78  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 20426  00CF7A  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 20427  00CF7C                     l3285:
 20428                           
 20429                           ; BSR set to: 0
 20430                           
 20431                           ; BSR set to: 0
 20432                           
 20433                           ; BSR set to: 0
 20434  00CF7C  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 20435  00CF7E  D010               	goto	l3286
 20436  00CF80  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 20437  00CF82  E103               	bnz	u18900
 20438  00CF84  297F               	incf	___fldiv@new_exp& (0+255),w,b
 20439  00CF86  A0D8               	btfss	status,0,c
 20440  00CF88  D00B               	goto	l3286
 20441  00CF8A                     u18900:
 20442                           
 20443                           ; BSR set to: 0
 20444  00CF8A  0E00               	movlw	0
 20445  00CF8C  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 20446  00CF8E  697F               	setf	___fldiv@new_exp& (0+255),b
 20447  00CF90  0E00               	movlw	0
 20448  00CF92  6F6E               	movwf	___fldiv@b& (0+255),b
 20449  00CF94  0E00               	movlw	0
 20450  00CF96  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20451  00CF98  0E00               	movlw	0
 20452  00CF9A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20453  00CF9C  0E00               	movlw	0
 20454  00CF9E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20455  00CFA0                     l3286:
 20456                           
 20457                           ; BSR set to: 0
 20458                           
 20459                           ; BSR set to: 0
 20460  00CFA0  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 20461  00CFA2  D005               	goto	u18910
 20462  00CFA4  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 20463  00CFA6  E111               	bnz	l19317
 20464  00CFA8  057F               	decf	___fldiv@new_exp& (0+255),w,b
 20465  00CFAA  B0D8               	btfsc	status,0,c
 20466  00CFAC  D00E               	goto	l3287
 20467  00CFAE                     u18910:
 20468                           
 20469                           ; BSR set to: 0
 20470  00CFAE  0E00               	movlw	0
 20471  00CFB0  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 20472  00CFB2  0E00               	movlw	0
 20473  00CFB4  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 20474  00CFB6  0E00               	movlw	0
 20475  00CFB8  6F6E               	movwf	___fldiv@b& (0+255),b
 20476  00CFBA  0E00               	movlw	0
 20477  00CFBC  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 20478  00CFBE  0E00               	movlw	0
 20479  00CFC0  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 20480  00CFC2  0E00               	movlw	0
 20481  00CFC4  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20482  00CFC6  0E00               	movlw	0
 20483  00CFC8  6F7E               	movwf	___fldiv@sign& (0+255),b
 20484  00CFCA                     l3287:
 20485  00CFCA                     l19317:
 20486                           
 20487                           ; BSR set to: 0
 20488  00CFCA  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 20489                           
 20490                           ; BSR set to: 0
 20491  00CFCE  A185               	btfss	___fldiv@bexp& (0+255),0,b
 20492  00CFD0  D002               	goto	l3288
 20493                           
 20494                           ; BSR set to: 0
 20495  00CFD2  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 20496  00CFD4  D001               	goto	l3289
 20497  00CFD6                     l3288:
 20498                           
 20499                           ; BSR set to: 0
 20500                           
 20501                           ; BSR set to: 0
 20502  00CFD6  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 20503  00CFD8                     l3289:
 20504                           
 20505                           ; BSR set to: 0
 20506                           
 20507                           ; BSR set to: 0
 20508  00CFD8  90D8               	bcf	status,0,c
 20509  00CFDA  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 20510  00CFDC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 20511                           
 20512                           ; BSR set to: 0
 20513  00CFDE  517E               	movf	___fldiv@sign& (0+255),w,b
 20514  00CFE0  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 20515                           
 20516                           ; BSR set to: 0
 20517  00CFE2  C06E  F06E         	movff	___fldiv@b,?___fldiv
 20518  00CFE6  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 20519  00CFEA  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 20520  00CFEE  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 20521  00CFF2  0012               	return	
 20522  00CFF4                     __end_of___fldiv:
 20523                           	opt stack 0
 20524                           tblptru	equ	0xFF8
 20525                           tblptrh	equ	0xFF7
 20526                           tblptrl	equ	0xFF6
 20527                           tablat	equ	0xFF5
 20528                           prodh	equ	0xFF4
 20529                           prodl	equ	0xFF3
 20530                           intcon	equ	0xFF2
 20531                           postinc0	equ	0xFEE
 20532                           wreg	equ	0xFE8
 20533                           indf1	equ	0xFE7
 20534                           postdec1	equ	0xFE5
 20535                           plusw1	equ	0xFE3
 20536                           fsr1h	equ	0xFE2
 20537                           fsr1l	equ	0xFE1
 20538                           indf2	equ	0xFDF
 20539                           postinc2	equ	0xFDE
 20540                           postdec2	equ	0xFDD
 20541                           plusw2	equ	0xFDB
 20542                           fsr2h	equ	0xFDA
 20543                           fsr2l	equ	0xFD9
 20544                           status	equ	0xFD8
 20545                           
 20546 ;; *************** function __display_signed_itoa *****************
 20547 ;; Defined at:
 20548 ;;		line 116 in file "display.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;  value           2   47[BANK0 ] int 
 20551 ;;  text            2   49[BANK0 ] PTR unsigned char 
 20552 ;;		 -> display_prepare@temp(10), 
 20553 ;; Auto vars:     Size  Location     Type
 20554 ;;		None
 20555 ;; Return value:  Size  Location     Type
 20556 ;;                  1    wreg      void 
 20557 ;; Registers used:
 20558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20559 ;; Tracked objects:
 20560 ;;		On entry : 0/0
 20561 ;;		On exit  : 0/0
 20562 ;;		Unchanged: 0/0
 20563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20564 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20567 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20568 ;;Total ram usage:        4 bytes
 20569 ;; Hardware stack levels used:    1
 20570 ;; Hardware stack levels required when called:   14
 20571 ;; This function calls:
 20572 ;;		__display_padded_itoa
 20573 ;; This function is called by:
 20574 ;;		_display_prepare
 20575 ;; This function uses a non-reentrant model
 20576 ;;
 20577                           
 20578                           	psect	text64
 20579  01231A                     __ptext64:
 20580                           	opt stack 0
 20581  01231A                     __display_signed_itoa:
 20582                           	opt stack 15
 20583                           
 20584                           ;display.c: 118: if(value<0)
 20585                           
 20586                           ; BSR set to: 0
 20587                           ;incstack = 0
 20588  01231A  0100               	movlb	0	; () banked
 20589  01231C  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 20590  01231E  D00A               	goto	l1294
 20591                           
 20592                           ; BSR set to: 0
 20593                           ;display.c: 119: {;display.c: 120: value = -value;
 20594  012320  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 20595  012322  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 20596  012324  B0D8               	btfsc	status,0,c
 20597  012326  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;display.c: 121: text[0] = '-';
 20601  012328  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 20602  01232C  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 20603  012330  0E2D               	movlw	45
 20604  012332  D005               	goto	L38
 20605  012334                     l1294:
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;display.c: 123: else;display.c: 124: {;display.c: 125: text[0] = '+';
 20609                           
 20610                           ; BSR set to: 0
 20611  012334  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 20612  012338  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 20613  01233C  0E2B               	movlw	43
 20614  01233E                     L38:
 20615  01233E  6EDF               	movwf	indf2,c
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;display.c: 126: };display.c: 127: _display_padded_itoa(value, 0, &text[1]);
 20619                           
 20620                           ; BSR set to: 0
 20621  012340  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 20622  012344  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 20623  012348  0E00               	movlw	0
 20624  01234A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 20625  01234C  0E01               	movlw	1
 20626  01234E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 20627  012350  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 20628  012352  0E00               	movlw	0
 20629  012354  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 20630  012356  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 20631  012358  EC51  F080         	call	__display_padded_itoa	;wreg free
 20632  01235C  0012               	return		;funcret
 20633  01235E                     __end_of__display_signed_itoa:
 20634                           	opt stack 0
 20635                           tblptru	equ	0xFF8
 20636                           tblptrh	equ	0xFF7
 20637                           tblptrl	equ	0xFF6
 20638                           tablat	equ	0xFF5
 20639                           prodh	equ	0xFF4
 20640                           prodl	equ	0xFF3
 20641                           intcon	equ	0xFF2
 20642                           postinc0	equ	0xFEE
 20643                           wreg	equ	0xFE8
 20644                           indf1	equ	0xFE7
 20645                           postdec1	equ	0xFE5
 20646                           plusw1	equ	0xFE3
 20647                           fsr1h	equ	0xFE2
 20648                           fsr1l	equ	0xFE1
 20649                           indf2	equ	0xFDF
 20650                           postinc2	equ	0xFDE
 20651                           postdec2	equ	0xFDD
 20652                           plusw2	equ	0xFDB
 20653                           fsr2h	equ	0xFDA
 20654                           fsr2l	equ	0xFD9
 20655                           status	equ	0xFD8
 20656                           
 20657 ;; *************** function __display_padded_itoa *****************
 20658 ;; Defined at:
 20659 ;;		line 94 in file "display.c"
 20660 ;; Parameters:    Size  Location     Type
 20661 ;;  value           2   24[BANK0 ] int 
 20662 ;;  length          1   26[BANK0 ] unsigned char 
 20663 ;;  text            2   27[BANK0 ] PTR unsigned char 
 20664 ;;		 -> display_prepare@temp(10), 
 20665 ;; Auto vars:     Size  Location     Type
 20666 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 20667 ;;  padding         1   46[BANK0 ] unsigned char 
 20668 ;;  pos             1   45[BANK0 ] unsigned char 
 20669 ;;  len             1   44[BANK0 ] unsigned char 
 20670 ;; Return value:  Size  Location     Type
 20671 ;;                  1    wreg      void 
 20672 ;; Registers used:
 20673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20674 ;; Tracked objects:
 20675 ;;		On entry : 0/0
 20676 ;;		On exit  : 0/0
 20677 ;;		Unchanged: 0/0
 20678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20679 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20680 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20681 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20682 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20683 ;;Total ram usage:       23 bytes
 20684 ;; Hardware stack levels used:    1
 20685 ;; Hardware stack levels required when called:   13
 20686 ;; This function calls:
 20687 ;;		_itoa
 20688 ;;		_strlen
 20689 ;; This function is called by:
 20690 ;;		__display_signed_itoa
 20691 ;;		_display_prepare
 20692 ;; This function uses a non-reentrant model
 20693 ;;
 20694                           
 20695                           	psect	text65
 20696  0100A2                     __ptext65:
 20697                           	opt stack 0
 20698  0100A2                     __display_padded_itoa:
 20699                           	opt stack 15
 20700                           
 20701                           ;display.c: 96: uint8_t pos;;display.c: 97: uint8_t padding;;display.c: 99: uint8_t len;
      +                          ;display.c: 100: char tmp[10];;display.c: 101: itoa(tmp, value, 10);
 20702                           
 20703                           ;incstack = 0
 20704  0100A2  0E82               	movlw	low __display_padded_itoa@tmp
 20705  0100A4  0100               	movlb	0	; () banked
 20706  0100A6  6F70               	movwf	itoa@buf& (0+255),b
 20707  0100A8  0E00               	movlw	high __display_padded_itoa@tmp
 20708  0100AA  6F71               	movwf	(itoa@buf+1)& (0+255),b
 20709  0100AC  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 20710  0100B0  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 20711  0100B4  0E00               	movlw	0
 20712  0100B6  6F75               	movwf	(itoa@base+1)& (0+255),b
 20713  0100B8  0E0A               	movlw	10
 20714  0100BA  6F74               	movwf	itoa@base& (0+255),b
 20715  0100BC  ECAF  F091         	call	_itoa	;wreg free
 20716                           
 20717                           ;display.c: 102: len = strlen(tmp);
 20718  0100C0  0E82               	movlw	low __display_padded_itoa@tmp
 20719  0100C2  0100               	movlb	0	; () banked
 20720  0100C4  6F60               	movwf	strlen@s& (0+255),b
 20721  0100C6  0E00               	movlw	high __display_padded_itoa@tmp
 20722  0100C8  6F61               	movwf	(strlen@s+1)& (0+255),b
 20723  0100CA  EC35  F092         	call	_strlen	;wreg free
 20724  0100CE  0100               	movlb	0	; () banked
 20725  0100D0  5160               	movf	?_strlen& (0+255),w,b
 20726  0100D2  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 20727                           
 20728                           ; BSR set to: 0
 20729                           ;display.c: 103: padding = 0;
 20730  0100D4  0E00               	movlw	0
 20731  0100D6  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 20732                           
 20733                           ;display.c: 104: while((padding+len)<length)
 20734  0100D8  D00B               	goto	l1285
 20735  0100DA                     
 20736                           ; BSR set to: 0
 20737                           ;display.c: 105: {;display.c: 106: text[padding] = ' ';
 20738                           
 20739                           ; BSR set to: 0
 20740  0100DA  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 20741  0100DC  0D01               	mullw	1
 20742  0100DE  50F3               	movf	prodl,w,c
 20743  0100E0  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 20744  0100E2  6ED9               	movwf	fsr2l,c
 20745  0100E4  50F4               	movf	prodh,w,c
 20746  0100E6  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 20747  0100E8  6EDA               	movwf	fsr2h,c
 20748  0100EA  0E20               	movlw	32
 20749  0100EC  6EDF               	movwf	indf2,c
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;display.c: 107: ++padding;
 20753  0100EE  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 20754  0100F0                     l1285:
 20755                           
 20756                           ; BSR set to: 0
 20757                           
 20758                           ; BSR set to: 0
 20759  0100F0  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 20760  0100F2  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 20761  0100F4  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 20762  0100F6  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 20763  0100F8  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 20764  0100FC  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 20765  0100FE  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 20766  010100  0E00               	movlw	0
 20767  010102  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 20768  010104  517D               	movf	??__display_padded_itoa& (0+255),w,b
 20769  010106  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 20770  010108  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 20771  01010A  0A80               	xorlw	128
 20772  01010C  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 20773  01010E  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 20774  010110  0A80               	xorlw	128
 20775  010112  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 20776  010114  A0D8               	btfss	status,0,c
 20777  010116  D7E1               	goto	l1286
 20778                           
 20779                           ; BSR set to: 0
 20780                           ;display.c: 108: };display.c: 109: for(pos=0; tmp[pos]; ++pos)
 20781                           
 20782                           ; BSR set to: 0
 20783  010118  0E00               	movlw	0
 20784  01011A  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 20785  01011C  D018               	goto	l1288
 20786  01011E                     
 20787                           ; BSR set to: 0
 20788                           ;display.c: 110: {;display.c: 111: text[pos+padding] = tmp[pos];
 20789                           
 20790                           ; BSR set to: 0
 20791  01011E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 20792  010120  0D01               	mullw	1
 20793  010122  0E82               	movlw	low __display_padded_itoa@tmp
 20794  010124  24F3               	addwf	prodl,w,c
 20795  010126  6ED9               	movwf	fsr2l,c
 20796  010128  0E00               	movlw	high __display_padded_itoa@tmp
 20797  01012A  20F4               	addwfc	prodh,w,c
 20798  01012C  6EDA               	movwf	fsr2h,c
 20799  01012E  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 20800  010130  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 20801  010134  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 20802  010136  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 20803  010138  0E00               	movlw	0
 20804  01013A  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 20805  01013C  517D               	movf	??__display_padded_itoa& (0+255),w,b
 20806  01013E  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 20807  010140  6EE1               	movwf	fsr1l,c
 20808  010142  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 20809  010144  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 20810  010146  6EE2               	movwf	fsr1h,c
 20811  010148  CFDF FFE7          	movff	indf2,indf1
 20812                           
 20813                           ; BSR set to: 0
 20814  01014C  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 20815  01014E                     l1288:
 20816                           
 20817                           ; BSR set to: 0
 20818                           
 20819                           ; BSR set to: 0
 20820  01014E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 20821  010150  0D01               	mullw	1
 20822  010152  0E82               	movlw	low __display_padded_itoa@tmp
 20823  010154  24F3               	addwf	prodl,w,c
 20824  010156  6ED9               	movwf	fsr2l,c
 20825  010158  0E00               	movlw	high __display_padded_itoa@tmp
 20826  01015A  20F4               	addwfc	prodh,w,c
 20827  01015C  6EDA               	movwf	fsr2h,c
 20828  01015E  50DF               	movf	indf2,w,c
 20829  010160  A4D8               	btfss	status,2,c
 20830  010162  D7DD               	goto	l1289
 20831                           
 20832                           ; BSR set to: 0
 20833                           ;display.c: 112: };display.c: 113: text[pos+padding] = 0x00;
 20834                           
 20835                           ; BSR set to: 0
 20836  010164  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 20837  010166  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 20838  01016A  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 20839  01016C  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 20840  01016E  0E00               	movlw	0
 20841  010170  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 20842  010172  517D               	movf	??__display_padded_itoa& (0+255),w,b
 20843  010174  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 20844  010176  6ED9               	movwf	fsr2l,c
 20845  010178  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 20846  01017A  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 20847  01017C  6EDA               	movwf	fsr2h,c
 20848  01017E  0E00               	movlw	0
 20849  010180  6EDF               	movwf	indf2,c
 20850                           
 20851                           ; BSR set to: 0
 20852  010182  0012               	return		;funcret
 20853  010184                     __end_of__display_padded_itoa:
 20854                           	opt stack 0
 20855                           tblptru	equ	0xFF8
 20856                           tblptrh	equ	0xFF7
 20857                           tblptrl	equ	0xFF6
 20858                           tablat	equ	0xFF5
 20859                           prodh	equ	0xFF4
 20860                           prodl	equ	0xFF3
 20861                           intcon	equ	0xFF2
 20862                           postinc0	equ	0xFEE
 20863                           wreg	equ	0xFE8
 20864                           indf1	equ	0xFE7
 20865                           postdec1	equ	0xFE5
 20866                           plusw1	equ	0xFE3
 20867                           fsr1h	equ	0xFE2
 20868                           fsr1l	equ	0xFE1
 20869                           indf2	equ	0xFDF
 20870                           postinc2	equ	0xFDE
 20871                           postdec2	equ	0xFDD
 20872                           plusw2	equ	0xFDB
 20873                           fsr2h	equ	0xFDA
 20874                           fsr2l	equ	0xFD9
 20875                           status	equ	0xFD8
 20876                           
 20877 ;; *************** function __display_itoa_long *****************
 20878 ;; Defined at:
 20879 ;;		line 198 in file "display.c"
 20880 ;; Parameters:    Size  Location     Type
 20881 ;;  value           4   77[BANK0 ] long 
 20882 ;;  decimals        1   81[BANK0 ] unsigned char 
 20883 ;;  text            2   82[BANK0 ] PTR unsigned char 
 20884 ;;		 -> display_prepare@temp(10), 
 20885 ;; Auto vars:     Size  Location     Type
 20886 ;;  short_value     2   89[BANK0 ] int 
 20887 ;;  last_digit      1   91[BANK0 ] char 
 20888 ;;  length          1   88[BANK0 ] unsigned char 
 20889 ;; Return value:  Size  Location     Type
 20890 ;;                  1    wreg      void 
 20891 ;; Registers used:
 20892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20893 ;; Tracked objects:
 20894 ;;		On entry : 0/0
 20895 ;;		On exit  : 0/0
 20896 ;;		Unchanged: 0/0
 20897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20898 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20901 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20902 ;;Total ram usage:       15 bytes
 20903 ;; Hardware stack levels used:    1
 20904 ;; Hardware stack levels required when called:   14
 20905 ;; This function calls:
 20906 ;;		___aldiv
 20907 ;;		___almod
 20908 ;;		__display_itoa
 20909 ;;		_strlen
 20910 ;; This function is called by:
 20911 ;;		_display_prepare
 20912 ;; This function uses a non-reentrant model
 20913 ;;
 20914                           
 20915                           	psect	text66
 20916  00F58E                     __ptext66:
 20917                           	opt stack 0
 20918  00F58E                     __display_itoa_long:
 20919                           	opt stack 15
 20920                           
 20921                           ;display.c: 200: int16_t short_value;;display.c: 201: int8_t last_digit;;display.c: 202:
      +                           uint8_t length;;display.c: 204: short_value = (int16_t) value;
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;incstack = 0
 20925  00F58E  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 20926  00F592  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 20927                           
 20928                           ;display.c: 205: if(short_value==value)
 20929  00F596  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 20930  00F59A  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 20931  00F59E  0E00               	movlw	0
 20932  00F5A0  0100               	movlb	0	; () banked
 20933  00F5A2  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 20934  00F5A4  0EFF               	movlw	255
 20935  00F5A6  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 20936  00F5A8  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 20937  00F5AA  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 20938  00F5AC  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 20939  00F5AE  E117               	bnz	l20807
 20940  00F5B0  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 20941  00F5B2  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 20942  00F5B4  E114               	bnz	l20807
 20943  00F5B6  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 20944  00F5B8  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 20945  00F5BA  E111               	bnz	l20807
 20946  00F5BC  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 20947  00F5BE  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 20948  00F5C0  A4D8               	btfss	status,2,c
 20949  00F5C2  D00D               	goto	l1321
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;display.c: 206: {;display.c: 207: _display_itoa(short_value, decimals, text);
 20953  00F5C4  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 20954  00F5C8  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 20955  00F5CC  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 20956  00F5D0  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 20957  00F5D4  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 20958  00F5D8  EC9F  F06B         	call	__display_itoa	;wreg free
 20959                           
 20960                           ;display.c: 208: }
 20961  00F5DC  0012               	return	
 20962  00F5DE                     l1321:
 20963  00F5DE                     l20807:
 20964                           
 20965                           ;display.c: 209: else;display.c: 210: {;display.c: 211: short_value = value / 10;
 20966  00F5DE  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 20967  00F5E2  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 20968  00F5E6  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 20969  00F5EA  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 20970  00F5EE  0E0A               	movlw	10
 20971  00F5F0  0100               	movlb	0	; () banked
 20972  00F5F2  6F64               	movwf	___aldiv@divisor& (0+255),b
 20973  00F5F4  0E00               	movlw	0
 20974  00F5F6  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 20975  00F5F8  0E00               	movlw	0
 20976  00F5FA  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 20977  00F5FC  0E00               	movlw	0
 20978  00F5FE  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 20979  00F600  EC22  F084         	call	___aldiv	;wreg free
 20980  00F604  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 20981  00F608  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 20982                           
 20983                           ;display.c: 212: _display_itoa(short_value, decimals-1, text);
 20984  00F60C  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 20985  00F610  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 20986  00F614  0100               	movlb	0	; () banked
 20987  00F616  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 20988  00F618  6F97               	movwf	__display_itoa@decimals& (0+255),b
 20989  00F61A  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 20990  00F61E  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 20991  00F622  EC9F  F06B         	call	__display_itoa	;wreg free
 20992                           
 20993                           ;display.c: 213: length = strlen(text);
 20994  00F626  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 20995  00F62A  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 20996  00F62E  EC35  F092         	call	_strlen	;wreg free
 20997  00F632  0100               	movlb	0	; () banked
 20998  00F634  5160               	movf	?_strlen& (0+255),w,b
 20999  00F636  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 21000                           
 21001                           ; BSR set to: 0
 21002                           ;display.c: 214: last_digit = value % 10;
 21003  00F638  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 21004  00F63C  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 21005  00F640  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 21006  00F644  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 21007  00F648  0E0A               	movlw	10
 21008  00F64A  6F64               	movwf	___almod@divisor& (0+255),b
 21009  00F64C  0E00               	movlw	0
 21010  00F64E  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 21011  00F650  0E00               	movlw	0
 21012  00F652  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 21013  00F654  0E00               	movlw	0
 21014  00F656  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 21015  00F658  EC1A  F087         	call	___almod	;wreg free
 21016  00F65C  0100               	movlb	0	; () banked
 21017  00F65E  5160               	movf	?___almod& (0+255),w,b
 21018  00F660  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 21019                           
 21020                           ; BSR set to: 0
 21021                           ;display.c: 215: if(last_digit<0)
 21022  00F662  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;display.c: 216: last_digit = -last_digit;
 21026  00F664  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 21027                           
 21028                           ; BSR set to: 0
 21029                           ;display.c: 217: text[length] = last_digit + 0x30;
 21030                           
 21031                           ; BSR set to: 0
 21032  00F666  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 21033  00F668  0D01               	mullw	1
 21034  00F66A  50F3               	movf	prodl,w,c
 21035  00F66C  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 21036  00F66E  6ED9               	movwf	fsr2l,c
 21037  00F670  50F4               	movf	prodh,w,c
 21038  00F672  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 21039  00F674  6EDA               	movwf	fsr2h,c
 21040  00F676  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 21041  00F678  0F30               	addlw	48
 21042  00F67A  6EDF               	movwf	indf2,c
 21043                           
 21044                           ; BSR set to: 0
 21045                           ;display.c: 218: text[length+1] = 0x00;
 21046  00F67C  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 21047  00F67E  6FB4               	movwf	??__display_itoa_long& (0+255),b
 21048  00F680  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 21049  00F682  0E01               	movlw	1
 21050  00F684  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 21051  00F686  0E00               	movlw	0
 21052  00F688  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 21053  00F68A  51B4               	movf	??__display_itoa_long& (0+255),w,b
 21054  00F68C  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 21055  00F68E  6ED9               	movwf	fsr2l,c
 21056  00F690  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 21057  00F692  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 21058  00F694  6EDA               	movwf	fsr2h,c
 21059  00F696  0E00               	movlw	0
 21060  00F698  6EDF               	movwf	indf2,c
 21061  00F69A  0012               	return	
 21062  00F69C                     __end_of__display_itoa_long:
 21063                           	opt stack 0
 21064                           tblptru	equ	0xFF8
 21065                           tblptrh	equ	0xFF7
 21066                           tblptrl	equ	0xFF6
 21067                           tablat	equ	0xFF5
 21068                           prodh	equ	0xFF4
 21069                           prodl	equ	0xFF3
 21070                           intcon	equ	0xFF2
 21071                           postinc0	equ	0xFEE
 21072                           wreg	equ	0xFE8
 21073                           indf1	equ	0xFE7
 21074                           postdec1	equ	0xFE5
 21075                           plusw1	equ	0xFE3
 21076                           fsr1h	equ	0xFE2
 21077                           fsr1l	equ	0xFE1
 21078                           indf2	equ	0xFDF
 21079                           postinc2	equ	0xFDE
 21080                           postdec2	equ	0xFDD
 21081                           plusw2	equ	0xFDB
 21082                           fsr2h	equ	0xFDA
 21083                           fsr2l	equ	0xFD9
 21084                           status	equ	0xFD8
 21085                           
 21086 ;; *************** function __display_itoa *****************
 21087 ;; Defined at:
 21088 ;;		line 130 in file "display.c"
 21089 ;; Parameters:    Size  Location     Type
 21090 ;;  value           2   53[BANK0 ] int 
 21091 ;;  decimals        1   55[BANK0 ] unsigned char 
 21092 ;;  text            2   56[BANK0 ] PTR unsigned char 
 21093 ;;		 -> display_prepare@temp(10), display_content(80), 
 21094 ;; Auto vars:     Size  Location     Type
 21095 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 21096 ;;  pos             1   76[BANK0 ] unsigned char 
 21097 ;;  missing         1   75[BANK0 ] char 
 21098 ;;  len             1   74[BANK0 ] unsigned char 
 21099 ;; Return value:  Size  Location     Type
 21100 ;;                  1    wreg      void 
 21101 ;; Registers used:
 21102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21103 ;; Tracked objects:
 21104 ;;		On entry : 0/0
 21105 ;;		On exit  : 0/0
 21106 ;;		Unchanged: 0/0
 21107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21108 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21109 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21110 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21111 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21112 ;;Total ram usage:       24 bytes
 21113 ;; Hardware stack levels used:    1
 21114 ;; Hardware stack levels required when called:   13
 21115 ;; This function calls:
 21116 ;;		_itoa
 21117 ;;		_strlen
 21118 ;; This function is called by:
 21119 ;;		__display_itoa_long
 21120 ;;		_display_prepare
 21121 ;; This function uses a non-reentrant model
 21122 ;;
 21123                           
 21124                           	psect	text67
 21125  00D73E                     __ptext67:
 21126                           	opt stack 0
 21127  00D73E                     __display_itoa:
 21128                           	opt stack 15
 21129                           
 21130                           ;display.c: 132: uint8_t pos;;display.c: 133: uint8_t len;;display.c: 134: int8_t missin
      +                          g;;display.c: 135: char tmp[10];;display.c: 136: itoa(tmp, value, 10);
 21131                           
 21132                           ;incstack = 0
 21133  00D73E  0EA0               	movlw	low __display_itoa@tmp
 21134  00D740  0100               	movlb	0	; () banked
 21135  00D742  6F70               	movwf	itoa@buf& (0+255),b
 21136  00D744  0E00               	movlw	high __display_itoa@tmp
 21137  00D746  6F71               	movwf	(itoa@buf+1)& (0+255),b
 21138  00D748  C095  F072         	movff	__display_itoa@value,itoa@val
 21139  00D74C  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 21140  00D750  0E00               	movlw	0
 21141  00D752  6F75               	movwf	(itoa@base+1)& (0+255),b
 21142  00D754  0E0A               	movlw	10
 21143  00D756  6F74               	movwf	itoa@base& (0+255),b
 21144  00D758  ECAF  F091         	call	_itoa	;wreg free
 21145                           
 21146                           ;display.c: 137: len = strlen(tmp);
 21147  00D75C  0EA0               	movlw	low __display_itoa@tmp
 21148  00D75E  0100               	movlb	0	; () banked
 21149  00D760  6F60               	movwf	strlen@s& (0+255),b
 21150  00D762  0E00               	movlw	high __display_itoa@tmp
 21151  00D764  6F61               	movwf	(strlen@s+1)& (0+255),b
 21152  00D766  EC35  F092         	call	_strlen	;wreg free
 21153  00D76A  0100               	movlb	0	; () banked
 21154  00D76C  5160               	movf	?_strlen& (0+255),w,b
 21155  00D76E  6FAA               	movwf	__display_itoa@len& (0+255),b
 21156                           
 21157                           ; BSR set to: 0
 21158                           ;display.c: 139: if(value<0)
 21159  00D770  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 21160  00D772  D054               	goto	l1299
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;display.c: 140: {;display.c: 141: missing = decimals + 2 - len;
 21164  00D774  51AA               	movf	__display_itoa@len& (0+255),w,b
 21165  00D776  0800               	sublw	0
 21166  00D778  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 21167  00D77A  0F02               	addlw	2
 21168  00D77C  6FAB               	movwf	__display_itoa@missing& (0+255),b
 21169                           
 21170                           ;display.c: 142: if(missing>0)
 21171  00D77E  51AB               	movf	__display_itoa@missing& (0+255),w,b
 21172  00D780  0A80               	xorlw	128
 21173  00D782  0F7F               	addlw	-129
 21174  00D784  A0D8               	btfss	status,0,c
 21175  00D786  D090               	goto	l1306
 21176                           
 21177                           ; BSR set to: 0
 21178                           ;display.c: 143: {;display.c: 144: for(pos=decimals;pos!=0xFF;--pos)
 21179  00D788  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 21180  00D78C                     l19699:
 21181                           
 21182                           ; BSR set to: 0
 21183  00D78C  29AC               	incf	__display_itoa@pos& (0+255),w,b
 21184  00D78E  B4D8               	btfsc	status,2,c
 21185  00D790  D042               	goto	u19480
 21186                           
 21187                           ; BSR set to: 0
 21188                           ;display.c: 145: {;display.c: 146: if(pos>=missing)
 21189                           
 21190                           ; BSR set to: 0
 21191                           
 21192                           ; BSR set to: 0
 21193  00D792  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21194  00D794  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 21195  00D796  D004               	goto	u19470
 21196  00D798  0AFF               	xorlw	255
 21197  00D79A  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 21198  00D79C  B0D8               	btfsc	status,0,c
 21199  00D79E  D02A               	goto	l1303
 21200  00D7A0                     u19470:
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;display.c: 147: {;display.c: 148: tmp[pos+1] = tmp[pos+1-missing];
 21204  00D7A0  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 21205  00D7A4  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 21206  00D7A6  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 21207  00D7A8  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 21208  00D7AA  1F9A               	comf	??__display_itoa& (0+255),f,b
 21209  00D7AC  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 21210  00D7AE  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 21211  00D7B0  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 21212  00D7B2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21213  00D7B4  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 21214  00D7B6  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 21215  00D7B8  519A               	movf	??__display_itoa& (0+255),w,b
 21216  00D7BA  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 21217  00D7BC  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 21218  00D7BE  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 21219  00D7C0  0E01               	movlw	1
 21220  00D7C2  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 21221  00D7C4  0E00               	movlw	0
 21222  00D7C6  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 21223  00D7C8  0EA0               	movlw	low __display_itoa@tmp
 21224  00D7CA  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 21225  00D7CC  6ED9               	movwf	fsr2l,c
 21226  00D7CE  0E00               	movlw	high __display_itoa@tmp
 21227  00D7D0  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 21228  00D7D2  6EDA               	movwf	fsr2h,c
 21229  00D7D4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21230  00D7D6  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 21231  00D7D8  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 21232  00D7DA  0E01               	movlw	1
 21233  00D7DC  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 21234  00D7DE  0E00               	movlw	0
 21235  00D7E0  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 21236  00D7E2  0EA0               	movlw	low __display_itoa@tmp
 21237  00D7E4  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 21238  00D7E6  6EE1               	movwf	fsr1l,c
 21239  00D7E8  0E00               	movlw	high __display_itoa@tmp
 21240  00D7EA  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 21241  00D7EC  6EE2               	movwf	fsr1h,c
 21242  00D7EE  CFDF FFE7          	movff	indf2,indf1
 21243                           
 21244                           ;display.c: 149: }
 21245  00D7F2  D00F               	goto	l1304
 21246  00D7F4                     l1303:
 21247                           
 21248                           ; BSR set to: 0
 21249                           ;display.c: 150: else;display.c: 151: {;display.c: 152: tmp[pos+1] = '0';
 21250                           
 21251                           ; BSR set to: 0
 21252  00D7F4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21253  00D7F6  6F9A               	movwf	??__display_itoa& (0+255),b
 21254  00D7F8  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 21255  00D7FA  0E01               	movlw	1
 21256  00D7FC  279A               	addwf	??__display_itoa& (0+255),f,b
 21257  00D7FE  0E00               	movlw	0
 21258  00D800  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 21259  00D802  0EA0               	movlw	low __display_itoa@tmp
 21260  00D804  259A               	addwf	??__display_itoa& (0+255),w,b
 21261  00D806  6ED9               	movwf	fsr2l,c
 21262  00D808  0E00               	movlw	high __display_itoa@tmp
 21263  00D80A  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 21264  00D80C  6EDA               	movwf	fsr2h,c
 21265  00D80E  0E30               	movlw	48
 21266  00D810  6EDF               	movwf	indf2,c
 21267  00D812                     l1304:
 21268                           
 21269                           ; BSR set to: 0
 21270                           
 21271                           ; BSR set to: 0
 21272  00D812  07AC               	decf	__display_itoa@pos& (0+255),f,b
 21273  00D814  D7BB               	goto	l19699
 21274  00D816                     u19480:
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;display.c: 153: };display.c: 154: };display.c: 155: len = decimals + 2;
 21278                           
 21279                           ; BSR set to: 0
 21280  00D816  5197               	movf	__display_itoa@decimals& (0+255),w,b
 21281  00D818  0F02               	addlw	2
 21282  00D81A  D045               	goto	L39
 21283  00D81C                     l1299:
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;display.c: 158: else;display.c: 159: {;display.c: 160: missing = decimals + 1 - len;
 21287                           
 21288                           ; BSR set to: 0
 21289  00D81C  51AA               	movf	__display_itoa@len& (0+255),w,b
 21290  00D81E  0800               	sublw	0
 21291  00D820  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 21292  00D822  6F9A               	movwf	??__display_itoa& (0+255),b
 21293  00D824  299A               	incf	??__display_itoa& (0+255),w,b
 21294  00D826  6FAB               	movwf	__display_itoa@missing& (0+255),b
 21295                           
 21296                           ;display.c: 161: if(missing>0)
 21297  00D828  51AB               	movf	__display_itoa@missing& (0+255),w,b
 21298  00D82A  0A80               	xorlw	128
 21299  00D82C  0F7F               	addlw	-129
 21300  00D82E  A0D8               	btfss	status,0,c
 21301  00D830  D03B               	goto	l1306
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;display.c: 162: {;display.c: 163: for(pos=decimals;pos!=0xFF;--pos)
 21305  00D832  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 21306  00D836                     l19719:
 21307                           
 21308                           ; BSR set to: 0
 21309  00D836  29AC               	incf	__display_itoa@pos& (0+255),w,b
 21310  00D838  B4D8               	btfsc	status,2,c
 21311  00D83A  D034               	goto	u19520
 21312                           
 21313                           ; BSR set to: 0
 21314                           ;display.c: 164: {;display.c: 165: if(pos>=missing)
 21315                           
 21316                           ; BSR set to: 0
 21317                           
 21318                           ; BSR set to: 0
 21319  00D83C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21320  00D83E  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 21321  00D840  D004               	goto	u19510
 21322  00D842  0AFF               	xorlw	255
 21323  00D844  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 21324  00D846  B0D8               	btfsc	status,0,c
 21325  00D848  D021               	goto	l1309
 21326  00D84A                     u19510:
 21327                           
 21328                           ; BSR set to: 0
 21329                           ;display.c: 166: {;display.c: 167: tmp[pos] = tmp[pos-missing];
 21330  00D84A  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 21331  00D84E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 21332  00D850  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 21333  00D852  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 21334  00D854  1F9A               	comf	??__display_itoa& (0+255),f,b
 21335  00D856  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 21336  00D858  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 21337  00D85A  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 21338  00D85C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21339  00D85E  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 21340  00D860  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 21341  00D862  519A               	movf	??__display_itoa& (0+255),w,b
 21342  00D864  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 21343  00D866  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 21344  00D868  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 21345  00D86A  0EA0               	movlw	low __display_itoa@tmp
 21346  00D86C  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 21347  00D86E  6ED9               	movwf	fsr2l,c
 21348  00D870  0E00               	movlw	high __display_itoa@tmp
 21349  00D872  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 21350  00D874  6EDA               	movwf	fsr2h,c
 21351  00D876  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21352  00D878  0D01               	mullw	1
 21353  00D87A  0EA0               	movlw	low __display_itoa@tmp
 21354  00D87C  24F3               	addwf	prodl,w,c
 21355  00D87E  6EE1               	movwf	fsr1l,c
 21356  00D880  0E00               	movlw	high __display_itoa@tmp
 21357  00D882  20F4               	addwfc	prodh,w,c
 21358  00D884  6EE2               	movwf	fsr1h,c
 21359  00D886  CFDF FFE7          	movff	indf2,indf1
 21360                           
 21361                           ;display.c: 168: }
 21362  00D88A  D00A               	goto	l1310
 21363  00D88C                     l1309:
 21364                           
 21365                           ; BSR set to: 0
 21366                           ;display.c: 169: else;display.c: 170: {;display.c: 171: tmp[pos] = '0';
 21367                           
 21368                           ; BSR set to: 0
 21369  00D88C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21370  00D88E  0D01               	mullw	1
 21371  00D890  0EA0               	movlw	low __display_itoa@tmp
 21372  00D892  24F3               	addwf	prodl,w,c
 21373  00D894  6ED9               	movwf	fsr2l,c
 21374  00D896  0E00               	movlw	high __display_itoa@tmp
 21375  00D898  20F4               	addwfc	prodh,w,c
 21376  00D89A  6EDA               	movwf	fsr2h,c
 21377  00D89C  0E30               	movlw	48
 21378  00D89E  6EDF               	movwf	indf2,c
 21379  00D8A0                     l1310:
 21380                           
 21381                           ; BSR set to: 0
 21382                           
 21383                           ; BSR set to: 0
 21384  00D8A0  07AC               	decf	__display_itoa@pos& (0+255),f,b
 21385  00D8A2  D7C9               	goto	l19719
 21386  00D8A4                     u19520:
 21387                           
 21388                           ; BSR set to: 0
 21389                           ;display.c: 172: };display.c: 173: };display.c: 174: len = decimals + 1;
 21390                           
 21391                           ; BSR set to: 0
 21392  00D8A4  2997               	incf	__display_itoa@decimals& (0+255),w,b
 21393  00D8A6                     L39:
 21394  00D8A6  6FAA               	movwf	__display_itoa@len& (0+255),b
 21395  00D8A8                     l1306:
 21396                           
 21397                           ; BSR set to: 0
 21398                           ;display.c: 175: };display.c: 176: };display.c: 178: decimals = len - decimals - 1;
 21399                           
 21400                           ; BSR set to: 0
 21401  00D8A8  5197               	movf	__display_itoa@decimals& (0+255),w,b
 21402  00D8AA  0800               	sublw	0
 21403  00D8AC  25AA               	addwf	__display_itoa@len& (0+255),w,b
 21404  00D8AE  6F9A               	movwf	??__display_itoa& (0+255),b
 21405  00D8B0  059A               	decf	??__display_itoa& (0+255),w,b
 21406  00D8B2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;display.c: 180: for(pos=0;pos<len;++pos)
 21410  00D8B4  0E00               	movlw	0
 21411  00D8B6  6FAC               	movwf	__display_itoa@pos& (0+255),b
 21412  00D8B8  D023               	goto	l1311
 21413  00D8BA                     
 21414                           ; BSR set to: 0
 21415                           ;display.c: 181: {;display.c: 182: text[pos] = tmp[pos];
 21416                           
 21417                           ; BSR set to: 0
 21418  00D8BA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21419  00D8BC  0D01               	mullw	1
 21420  00D8BE  0EA0               	movlw	low __display_itoa@tmp
 21421  00D8C0  24F3               	addwf	prodl,w,c
 21422  00D8C2  6ED9               	movwf	fsr2l,c
 21423  00D8C4  0E00               	movlw	high __display_itoa@tmp
 21424  00D8C6  20F4               	addwfc	prodh,w,c
 21425  00D8C8  6EDA               	movwf	fsr2h,c
 21426  00D8CA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21427  00D8CC  0D01               	mullw	1
 21428  00D8CE  50F3               	movf	prodl,w,c
 21429  00D8D0  2598               	addwf	__display_itoa@text& (0+255),w,b
 21430  00D8D2  6EE1               	movwf	fsr1l,c
 21431  00D8D4  50F4               	movf	prodh,w,c
 21432  00D8D6  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21433  00D8D8  6EE2               	movwf	fsr1h,c
 21434  00D8DA  CFDF FFE7          	movff	indf2,indf1
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;display.c: 183: if(pos==decimals)
 21438  00D8DE  5197               	movf	__display_itoa@decimals& (0+255),w,b
 21439  00D8E0  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 21440  00D8E2  A4D8               	btfss	status,2,c
 21441  00D8E4  D00C               	goto	l1313
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;display.c: 184: {;display.c: 186: ++pos;
 21445  00D8E6  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 21446                           
 21447                           ; BSR set to: 0
 21448                           ;display.c: 187: text[pos] = '.';
 21449  00D8E8  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21450  00D8EA  0D01               	mullw	1
 21451  00D8EC  50F3               	movf	prodl,w,c
 21452  00D8EE  2598               	addwf	__display_itoa@text& (0+255),w,b
 21453  00D8F0  6ED9               	movwf	fsr2l,c
 21454  00D8F2  50F4               	movf	prodh,w,c
 21455  00D8F4  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21456  00D8F6  6EDA               	movwf	fsr2h,c
 21457  00D8F8  0E2E               	movlw	46
 21458  00D8FA  6EDF               	movwf	indf2,c
 21459                           
 21460                           ;display.c: 188: break;
 21461  00D8FC  D01E               	goto	l1315
 21462  00D8FE                     l1313:
 21463                           
 21464                           ; BSR set to: 0
 21465                           
 21466                           ; BSR set to: 0
 21467  00D8FE  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 21468  00D900                     l1311:
 21469                           
 21470                           ; BSR set to: 0
 21471                           
 21472                           ; BSR set to: 0
 21473  00D900  51AA               	movf	__display_itoa@len& (0+255),w,b
 21474  00D902  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 21475  00D904  B0D8               	btfsc	status,0,c
 21476  00D906  D019               	goto	l1315
 21477  00D908  D7D8               	goto	l1312
 21478  00D90A                     
 21479                           ; BSR set to: 0
 21480                           ;display.c: 192: {;display.c: 193: text[pos+1] = tmp[pos];
 21481                           
 21482                           ; BSR set to: 0
 21483  00D90A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21484  00D90C  0D01               	mullw	1
 21485  00D90E  0EA0               	movlw	low __display_itoa@tmp
 21486  00D910  24F3               	addwf	prodl,w,c
 21487  00D912  6ED9               	movwf	fsr2l,c
 21488  00D914  0E00               	movlw	high __display_itoa@tmp
 21489  00D916  20F4               	addwfc	prodh,w,c
 21490  00D918  6EDA               	movwf	fsr2h,c
 21491  00D91A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21492  00D91C  6F9A               	movwf	??__display_itoa& (0+255),b
 21493  00D91E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 21494  00D920  0E01               	movlw	1
 21495  00D922  279A               	addwf	??__display_itoa& (0+255),f,b
 21496  00D924  0E00               	movlw	0
 21497  00D926  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 21498  00D928  519A               	movf	??__display_itoa& (0+255),w,b
 21499  00D92A  2598               	addwf	__display_itoa@text& (0+255),w,b
 21500  00D92C  6EE1               	movwf	fsr1l,c
 21501  00D92E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 21502  00D930  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21503  00D932  6EE2               	movwf	fsr1h,c
 21504  00D934  CFDF FFE7          	movff	indf2,indf1
 21505                           
 21506                           ; BSR set to: 0
 21507  00D938  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 21508  00D93A                     l1315:
 21509                           
 21510                           ; BSR set to: 0
 21511                           
 21512                           ; BSR set to: 0
 21513  00D93A  51AA               	movf	__display_itoa@len& (0+255),w,b
 21514  00D93C  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 21515  00D93E  A0D8               	btfss	status,0,c
 21516  00D940  D7E4               	goto	l1316
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;display.c: 194: };display.c: 195: text[pos+1] = 0;
 21520                           
 21521                           ; BSR set to: 0
 21522  00D942  51AC               	movf	__display_itoa@pos& (0+255),w,b
 21523  00D944  6F9A               	movwf	??__display_itoa& (0+255),b
 21524  00D946  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 21525  00D948  0E01               	movlw	1
 21526  00D94A  279A               	addwf	??__display_itoa& (0+255),f,b
 21527  00D94C  0E00               	movlw	0
 21528  00D94E  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 21529  00D950  519A               	movf	??__display_itoa& (0+255),w,b
 21530  00D952  2598               	addwf	__display_itoa@text& (0+255),w,b
 21531  00D954  6ED9               	movwf	fsr2l,c
 21532  00D956  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 21533  00D958  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21534  00D95A  6EDA               	movwf	fsr2h,c
 21535  00D95C  0E00               	movlw	0
 21536  00D95E  6EDF               	movwf	indf2,c
 21537                           
 21538                           ; BSR set to: 0
 21539  00D960  0012               	return		;funcret
 21540  00D962                     __end_of__display_itoa:
 21541                           	opt stack 0
 21542                           tblptru	equ	0xFF8
 21543                           tblptrh	equ	0xFF7
 21544                           tblptrl	equ	0xFF6
 21545                           tablat	equ	0xFF5
 21546                           prodh	equ	0xFF4
 21547                           prodl	equ	0xFF3
 21548                           intcon	equ	0xFF2
 21549                           postinc0	equ	0xFEE
 21550                           wreg	equ	0xFE8
 21551                           indf1	equ	0xFE7
 21552                           postdec1	equ	0xFE5
 21553                           plusw1	equ	0xFE3
 21554                           fsr1h	equ	0xFE2
 21555                           fsr1l	equ	0xFE1
 21556                           indf2	equ	0xFDF
 21557                           postinc2	equ	0xFDE
 21558                           postdec2	equ	0xFDD
 21559                           plusw2	equ	0xFDB
 21560                           fsr2h	equ	0xFDA
 21561                           fsr2l	equ	0xFD9
 21562                           status	equ	0xFD8
 21563                           
 21564 ;; *************** function _strlen *****************
 21565 ;; Defined at:
 21566 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 21567 ;; Parameters:    Size  Location     Type
 21568 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21569 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 21570 ;; Auto vars:     Size  Location     Type
 21571 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21572 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 21573 ;; Return value:  Size  Location     Type
 21574 ;;                  2    0[BANK0 ] unsigned int 
 21575 ;; Registers used:
 21576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21577 ;; Tracked objects:
 21578 ;;		On entry : 0/0
 21579 ;;		On exit  : 0/0
 21580 ;;		Unchanged: 0/0
 21581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21585 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21586 ;;Total ram usage:        6 bytes
 21587 ;; Hardware stack levels used:    1
 21588 ;; Hardware stack levels required when called:   10
 21589 ;; This function calls:
 21590 ;;		Nothing
 21591 ;; This function is called by:
 21592 ;;		__display_padded_itoa
 21593 ;;		__display_itoa
 21594 ;;		__display_itoa_long
 21595 ;;		_display_prepare
 21596 ;; This function uses a non-reentrant model
 21597 ;;
 21598                           
 21599                           	psect	text68
 21600  01246A                     __ptext68:
 21601                           	opt stack 0
 21602  01246A                     _strlen:
 21603                           	opt stack 19
 21604                           
 21605                           ; BSR set to: 0
 21606                           ;incstack = 0
 21607  01246A  C060  F064         	movff	strlen@s,strlen@cp
 21608  01246E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21609  012472  D003               	goto	l3385
 21610  012474  0100               	movlb	0	; () banked
 21611  012476  4B64               	infsnz	strlen@cp& (0+255),f,b
 21612  012478  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21613  01247A                     l3385:
 21614                           
 21615                           ; BSR set to: 0
 21616  01247A  C064  FFD9         	movff	strlen@cp,fsr2l
 21617  01247E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 21618  012482  50DF               	movf	indf2,w,c
 21619  012484  A4D8               	btfss	status,2,c
 21620  012486  D7F6               	goto	l3386
 21621  012488  C060  F062         	movff	strlen@s,??_strlen
 21622  01248C  C061  F063         	movff	strlen@s+1,??_strlen+1
 21623  012490  0100               	movlb	0	; () banked
 21624  012492  1F62               	comf	??_strlen& (0+255),f,b
 21625  012494  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21626  012496  4B62               	infsnz	??_strlen& (0+255),f,b
 21627  012498  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21628  01249A  5164               	movf	strlen@cp& (0+255),w,b
 21629  01249C  2562               	addwf	??_strlen& (0+255),w,b
 21630  01249E  6F60               	movwf	?_strlen& (0+255),b
 21631  0124A0  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21632  0124A2  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21633  0124A4  6F61               	movwf	(?_strlen+1)& (0+255),b
 21634  0124A6  0012               	return	
 21635  0124A8                     __end_of_strlen:
 21636                           	opt stack 0
 21637                           tblptru	equ	0xFF8
 21638                           tblptrh	equ	0xFF7
 21639                           tblptrl	equ	0xFF6
 21640                           tablat	equ	0xFF5
 21641                           prodh	equ	0xFF4
 21642                           prodl	equ	0xFF3
 21643                           intcon	equ	0xFF2
 21644                           postinc0	equ	0xFEE
 21645                           wreg	equ	0xFE8
 21646                           indf1	equ	0xFE7
 21647                           postdec1	equ	0xFE5
 21648                           plusw1	equ	0xFE3
 21649                           fsr1h	equ	0xFE2
 21650                           fsr1l	equ	0xFE1
 21651                           indf2	equ	0xFDF
 21652                           postinc2	equ	0xFDE
 21653                           postdec2	equ	0xFDD
 21654                           plusw2	equ	0xFDB
 21655                           fsr2h	equ	0xFDA
 21656                           fsr2l	equ	0xFD9
 21657                           status	equ	0xFD8
 21658                           
 21659 ;; *************** function _itoa *****************
 21660 ;; Defined at:
 21661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 21662 ;; Parameters:    Size  Location     Type
 21663 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 21664 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 21665 ;;  val             2   18[BANK0 ] int 
 21666 ;;  base            2   20[BANK0 ] int 
 21667 ;; Auto vars:     Size  Location     Type
 21668 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 21669 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 21670 ;; Return value:  Size  Location     Type
 21671 ;;                  2   16[BANK0 ] PTR unsigned char 
 21672 ;; Registers used:
 21673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21674 ;; Tracked objects:
 21675 ;;		On entry : 0/0
 21676 ;;		On exit  : 0/0
 21677 ;;		Unchanged: 0/0
 21678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21679 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21680 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21682 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21683 ;;Total ram usage:        8 bytes
 21684 ;; Hardware stack levels used:    1
 21685 ;; Hardware stack levels required when called:   12
 21686 ;; This function calls:
 21687 ;;		_utoa
 21688 ;; This function is called by:
 21689 ;;		__display_padded_itoa
 21690 ;;		__display_itoa
 21691 ;; This function uses a non-reentrant model
 21692 ;;
 21693                           
 21694                           	psect	text69
 21695  01235E                     __ptext69:
 21696                           	opt stack 0
 21697  01235E                     _itoa:
 21698                           	opt stack 15
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;incstack = 0
 21702  01235E  C070  F076         	movff	itoa@buf,itoa@cp
 21703  012362  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 21704  012366  0100               	movlb	0	; () banked
 21705  012368  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 21706  01236A  D00C               	goto	l3361
 21707                           
 21708                           ; BSR set to: 0
 21709  01236C  C070  FFD9         	movff	itoa@buf,fsr2l
 21710  012370  C071  FFDA         	movff	itoa@buf+1,fsr2h
 21711  012374  0E2D               	movlw	45
 21712  012376  6EDF               	movwf	indf2,c
 21713                           
 21714                           ; BSR set to: 0
 21715  012378  4B70               	infsnz	itoa@buf& (0+255),f,b
 21716  01237A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 21717                           
 21718                           ; BSR set to: 0
 21719  01237C  6D72               	negf	itoa@val& (0+255),b
 21720  01237E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 21721  012380  B0D8               	btfsc	status,0,c
 21722  012382  2B73               	incf	(itoa@val+1)& (0+255),f,b
 21723  012384                     l3361:
 21724                           
 21725                           ; BSR set to: 0
 21726                           
 21727                           ; BSR set to: 0
 21728  012384  C070  F067         	movff	itoa@buf,utoa@buf
 21729  012388  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 21730  01238C  C072  F069         	movff	itoa@val,utoa@val
 21731  012390  C073  F06A         	movff	itoa@val+1,utoa@val+1
 21732  012394  C074  F06B         	movff	itoa@base,utoa@base
 21733  012398  C075  F06C         	movff	itoa@base+1,utoa@base+1
 21734  01239C  EC71  F087         	call	_utoa	;wreg free
 21735  0123A0  0012               	return	
 21736  0123A2                     __end_of_itoa:
 21737                           	opt stack 0
 21738                           tblptru	equ	0xFF8
 21739                           tblptrh	equ	0xFF7
 21740                           tblptrl	equ	0xFF6
 21741                           tablat	equ	0xFF5
 21742                           prodh	equ	0xFF4
 21743                           prodl	equ	0xFF3
 21744                           intcon	equ	0xFF2
 21745                           postinc0	equ	0xFEE
 21746                           wreg	equ	0xFE8
 21747                           indf1	equ	0xFE7
 21748                           postdec1	equ	0xFE5
 21749                           plusw1	equ	0xFE3
 21750                           fsr1h	equ	0xFE2
 21751                           fsr1l	equ	0xFE1
 21752                           indf2	equ	0xFDF
 21753                           postinc2	equ	0xFDE
 21754                           postdec2	equ	0xFDD
 21755                           plusw2	equ	0xFDB
 21756                           fsr2h	equ	0xFDA
 21757                           fsr2l	equ	0xFD9
 21758                           status	equ	0xFD8
 21759                           
 21760 ;; *************** function _utoa *****************
 21761 ;; Defined at:
 21762 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 21763 ;; Parameters:    Size  Location     Type
 21764 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 21765 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 21766 ;;  val             2    9[BANK0 ] unsigned int 
 21767 ;;  base            2   11[BANK0 ] int 
 21768 ;; Auto vars:     Size  Location     Type
 21769 ;;  v               2   13[BANK0 ] unsigned int 
 21770 ;;  c               1   15[BANK0 ] unsigned char 
 21771 ;; Return value:  Size  Location     Type
 21772 ;;                  2    7[BANK0 ] PTR unsigned char 
 21773 ;; Registers used:
 21774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21775 ;; Tracked objects:
 21776 ;;		On entry : 0/0
 21777 ;;		On exit  : 0/0
 21778 ;;		Unchanged: 0/0
 21779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21783 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21784 ;;Total ram usage:        9 bytes
 21785 ;; Hardware stack levels used:    1
 21786 ;; Hardware stack levels required when called:   11
 21787 ;; This function calls:
 21788 ;;		___lwdiv
 21789 ;;		___lwmod
 21790 ;; This function is called by:
 21791 ;;		_itoa
 21792 ;; This function uses a non-reentrant model
 21793 ;;
 21794                           
 21795                           	psect	text70
 21796  010EE2                     __ptext70:
 21797                           	opt stack 0
 21798  010EE2                     _utoa:
 21799                           	opt stack 15
 21800                           
 21801                           ;incstack = 0
 21802  010EE2  C069  F06D         	movff	utoa@val,utoa@v
 21803  010EE6  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 21804  010EEA  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 21805  010EEE  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 21806  010EF2  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21807  010EF6  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21808  010EFA  ECD9  F08F         	call	___lwdiv	;wreg free
 21809  010EFE  C060  F06D         	movff	?___lwdiv,utoa@v
 21810  010F02  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 21811  010F06  0100               	movlb	0	; () banked
 21812  010F08  4B67               	infsnz	utoa@buf& (0+255),f,b
 21813  010F0A  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21814                           
 21815                           ; BSR set to: 0
 21816  010F0C  516D               	movf	utoa@v& (0+255),w,b
 21817  010F0E  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 21818  010F10  A4D8               	btfss	status,2,c
 21819  010F12  D7EB               	goto	l3365
 21820                           
 21821                           ; BSR set to: 0
 21822                           
 21823                           ; BSR set to: 0
 21824  010F14  C067  FFD9         	movff	utoa@buf,fsr2l
 21825  010F18  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21826  010F1C  0E00               	movlw	0
 21827  010F1E  6EDF               	movwf	indf2,c
 21828                           
 21829                           ; BSR set to: 0
 21830  010F20  0767               	decf	utoa@buf& (0+255),f,b
 21831  010F22  A0D8               	btfss	status,0,c
 21832  010F24  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21833  010F26                     
 21834                           ; BSR set to: 0
 21835                           
 21836                           ; BSR set to: 0
 21837  010F26  C069  F060         	movff	utoa@val,___lwmod@dividend
 21838  010F2A  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 21839  010F2E  C06B  F062         	movff	utoa@base,___lwmod@divisor
 21840  010F32  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 21841  010F36  ECD1  F091         	call	___lwmod	;wreg free
 21842  010F3A  0100               	movlb	0	; () banked
 21843  010F3C  5160               	movf	?___lwmod& (0+255),w,b
 21844  010F3E  6F6F               	movwf	utoa@c& (0+255),b
 21845                           
 21846                           ; BSR set to: 0
 21847  010F40  C069  F060         	movff	utoa@val,___lwdiv@dividend
 21848  010F44  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 21849  010F48  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21850  010F4C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21851  010F50  ECD9  F08F         	call	___lwdiv	;wreg free
 21852  010F54  C060  F069         	movff	?___lwdiv,utoa@val
 21853  010F58  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 21854  010F5C  0E09               	movlw	9
 21855  010F5E  0100               	movlb	0	; () banked
 21856  010F60  656F               	cpfsgt	utoa@c& (0+255),b
 21857  010F62  D002               	goto	l3368
 21858                           
 21859                           ; BSR set to: 0
 21860  010F64  0E07               	movlw	7
 21861  010F66  276F               	addwf	utoa@c& (0+255),f,b
 21862  010F68                     l3368:
 21863                           
 21864                           ; BSR set to: 0
 21865  010F68  0E30               	movlw	48
 21866  010F6A  276F               	addwf	utoa@c& (0+255),f,b
 21867                           
 21868                           ; BSR set to: 0
 21869  010F6C  C067  FFD9         	movff	utoa@buf,fsr2l
 21870  010F70  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21871  010F74  C06F  FFDF         	movff	utoa@c,indf2
 21872                           
 21873                           ; BSR set to: 0
 21874  010F78  0767               	decf	utoa@buf& (0+255),f,b
 21875  010F7A  A0D8               	btfss	status,0,c
 21876  010F7C  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21877                           
 21878                           ; BSR set to: 0
 21879  010F7E  5169               	movf	utoa@val& (0+255),w,b
 21880  010F80  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 21881  010F82  A4D8               	btfss	status,2,c
 21882  010F84  D7D0               	goto	l3367
 21883                           
 21884                           ; BSR set to: 0
 21885                           ;	Return value of _utoa is never used
 21886                           
 21887                           ; BSR set to: 0
 21888  010F86  4B67               	infsnz	utoa@buf& (0+255),f,b
 21889  010F88  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21890  010F8A  0012               	return	
 21891  010F8C                     __end_of_utoa:
 21892                           	opt stack 0
 21893                           tblptru	equ	0xFF8
 21894                           tblptrh	equ	0xFF7
 21895                           tblptrl	equ	0xFF6
 21896                           tablat	equ	0xFF5
 21897                           prodh	equ	0xFF4
 21898                           prodl	equ	0xFF3
 21899                           intcon	equ	0xFF2
 21900                           postinc0	equ	0xFEE
 21901                           wreg	equ	0xFE8
 21902                           indf1	equ	0xFE7
 21903                           postdec1	equ	0xFE5
 21904                           plusw1	equ	0xFE3
 21905                           fsr1h	equ	0xFE2
 21906                           fsr1l	equ	0xFE1
 21907                           indf2	equ	0xFDF
 21908                           postinc2	equ	0xFDE
 21909                           postdec2	equ	0xFDD
 21910                           plusw2	equ	0xFDB
 21911                           fsr2h	equ	0xFDA
 21912                           fsr2l	equ	0xFD9
 21913                           status	equ	0xFD8
 21914                           
 21915 ;; *************** function ___lwmod *****************
 21916 ;; Defined at:
 21917 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 21918 ;; Parameters:    Size  Location     Type
 21919 ;;  dividend        2    0[BANK0 ] unsigned int 
 21920 ;;  divisor         2    2[BANK0 ] unsigned int 
 21921 ;; Auto vars:     Size  Location     Type
 21922 ;;  counter         1    4[BANK0 ] unsigned char 
 21923 ;; Return value:  Size  Location     Type
 21924 ;;                  2    0[BANK0 ] unsigned int 
 21925 ;; Registers used:
 21926 ;;		wreg, status,2, status,0
 21927 ;; Tracked objects:
 21928 ;;		On entry : 0/0
 21929 ;;		On exit  : 0/0
 21930 ;;		Unchanged: 0/0
 21931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21935 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21936 ;;Total ram usage:        5 bytes
 21937 ;; Hardware stack levels used:    1
 21938 ;; Hardware stack levels required when called:   10
 21939 ;; This function calls:
 21940 ;;		Nothing
 21941 ;; This function is called by:
 21942 ;;		_utoa
 21943 ;; This function uses a non-reentrant model
 21944 ;;
 21945                           
 21946                           	psect	text71
 21947  0123A2                     __ptext71:
 21948                           	opt stack 0
 21949  0123A2                     ___lwmod:
 21950                           	opt stack 15
 21951                           
 21952                           ; BSR set to: 0
 21953                           ;incstack = 0
 21954  0123A2  0100               	movlb	0	; () banked
 21955  0123A4  5162               	movf	___lwmod@divisor& (0+255),w,b
 21956  0123A6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21957  0123A8  B4D8               	btfsc	status,2,c
 21958  0123AA  D018               	goto	l3192
 21959                           
 21960                           ; BSR set to: 0
 21961  0123AC  0E01               	movlw	1
 21962  0123AE  6F64               	movwf	___lwmod@counter& (0+255),b
 21963  0123B0  D004               	goto	l3187
 21964  0123B2                     
 21965                           ; BSR set to: 0
 21966                           
 21967                           ; BSR set to: 0
 21968  0123B2  90D8               	bcf	status,0,c
 21969  0123B4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 21970  0123B6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21971  0123B8  2B64               	incf	___lwmod@counter& (0+255),f,b
 21972  0123BA                     l3187:
 21973                           
 21974                           ; BSR set to: 0
 21975                           
 21976                           ; BSR set to: 0
 21977  0123BA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21978  0123BC  D7FA               	goto	l3188
 21979  0123BE                     u17810:
 21980                           
 21981                           ; BSR set to: 0
 21982                           
 21983                           ; BSR set to: 0
 21984                           
 21985                           ; BSR set to: 0
 21986  0123BE  5162               	movf	___lwmod@divisor& (0+255),w,b
 21987  0123C0  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 21988  0123C2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21989  0123C4  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21990  0123C6  A0D8               	btfss	status,0,c
 21991  0123C8  D004               	goto	l3191
 21992                           
 21993                           ; BSR set to: 0
 21994  0123CA  5162               	movf	___lwmod@divisor& (0+255),w,b
 21995  0123CC  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 21996  0123CE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21997  0123D0  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21998  0123D2                     l3191:
 21999                           
 22000                           ; BSR set to: 0
 22001                           
 22002                           ; BSR set to: 0
 22003  0123D2  90D8               	bcf	status,0,c
 22004  0123D4  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 22005  0123D6  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 22006                           
 22007                           ; BSR set to: 0
 22008  0123D8  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 22009  0123DA  D7F1               	goto	u17810
 22010  0123DC                     l3192:
 22011                           
 22012                           ; BSR set to: 0
 22013                           
 22014                           ; BSR set to: 0
 22015  0123DC  C060  F060         	movff	___lwmod@dividend,?___lwmod
 22016  0123E0  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 22017                           
 22018                           ; BSR set to: 0
 22019  0123E4  0012               	return		;funcret
 22020  0123E6                     __end_of___lwmod:
 22021                           	opt stack 0
 22022                           tblptru	equ	0xFF8
 22023                           tblptrh	equ	0xFF7
 22024                           tblptrl	equ	0xFF6
 22025                           tablat	equ	0xFF5
 22026                           prodh	equ	0xFF4
 22027                           prodl	equ	0xFF3
 22028                           intcon	equ	0xFF2
 22029                           postinc0	equ	0xFEE
 22030                           wreg	equ	0xFE8
 22031                           indf1	equ	0xFE7
 22032                           postdec1	equ	0xFE5
 22033                           plusw1	equ	0xFE3
 22034                           fsr1h	equ	0xFE2
 22035                           fsr1l	equ	0xFE1
 22036                           indf2	equ	0xFDF
 22037                           postinc2	equ	0xFDE
 22038                           postdec2	equ	0xFDD
 22039                           plusw2	equ	0xFDB
 22040                           fsr2h	equ	0xFDA
 22041                           fsr2l	equ	0xFD9
 22042                           status	equ	0xFD8
 22043                           
 22044 ;; *************** function ___lwdiv *****************
 22045 ;; Defined at:
 22046 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 22047 ;; Parameters:    Size  Location     Type
 22048 ;;  dividend        2    0[BANK0 ] unsigned int 
 22049 ;;  divisor         2    2[BANK0 ] unsigned int 
 22050 ;; Auto vars:     Size  Location     Type
 22051 ;;  quotient        2    5[BANK0 ] unsigned int 
 22052 ;;  counter         1    4[BANK0 ] unsigned char 
 22053 ;; Return value:  Size  Location     Type
 22054 ;;                  2    0[BANK0 ] unsigned int 
 22055 ;; Registers used:
 22056 ;;		wreg, status,2, status,0
 22057 ;; Tracked objects:
 22058 ;;		On entry : 0/0
 22059 ;;		On exit  : 0/0
 22060 ;;		Unchanged: 0/0
 22061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22063 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22065 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22066 ;;Total ram usage:        7 bytes
 22067 ;; Hardware stack levels used:    1
 22068 ;; Hardware stack levels required when called:   10
 22069 ;; This function calls:
 22070 ;;		Nothing
 22071 ;; This function is called by:
 22072 ;;		_utoa
 22073 ;; This function uses a non-reentrant model
 22074 ;;
 22075                           
 22076                           	psect	text72
 22077  011FB2                     __ptext72:
 22078                           	opt stack 0
 22079  011FB2                     ___lwdiv:
 22080                           	opt stack 15
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;incstack = 0
 22084  011FB2  0E00               	movlw	0
 22085  011FB4  0100               	movlb	0	; () banked
 22086  011FB6  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 22087  011FB8  0E00               	movlw	0
 22088  011FBA  6F65               	movwf	___lwdiv@quotient& (0+255),b
 22089                           
 22090                           ; BSR set to: 0
 22091  011FBC  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22092  011FBE  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 22093  011FC0  B4D8               	btfsc	status,2,c
 22094  011FC2  D01C               	goto	l3182
 22095                           
 22096                           ; BSR set to: 0
 22097  011FC4  0E01               	movlw	1
 22098  011FC6  6F64               	movwf	___lwdiv@counter& (0+255),b
 22099  011FC8  D004               	goto	l3177
 22100  011FCA                     
 22101                           ; BSR set to: 0
 22102                           
 22103                           ; BSR set to: 0
 22104  011FCA  90D8               	bcf	status,0,c
 22105  011FCC  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 22106  011FCE  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 22107  011FD0  2B64               	incf	___lwdiv@counter& (0+255),f,b
 22108  011FD2                     l3177:
 22109                           
 22110                           ; BSR set to: 0
 22111                           
 22112                           ; BSR set to: 0
 22113  011FD2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 22114  011FD4  D7FA               	goto	l3178
 22115  011FD6                     u17780:
 22116                           
 22117                           ; BSR set to: 0
 22118                           
 22119                           ; BSR set to: 0
 22120                           
 22121                           ; BSR set to: 0
 22122  011FD6  90D8               	bcf	status,0,c
 22123  011FD8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 22124  011FDA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22125                           
 22126                           ; BSR set to: 0
 22127  011FDC  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22128  011FDE  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 22129  011FE0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22130  011FE2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22131  011FE4  A0D8               	btfss	status,0,c
 22132  011FE6  D005               	goto	l3181
 22133                           
 22134                           ; BSR set to: 0
 22135  011FE8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22136  011FEA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 22137  011FEC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22138  011FEE  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22139                           
 22140                           ; BSR set to: 0
 22141  011FF0  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 22142  011FF2                     l3181:
 22143                           
 22144                           ; BSR set to: 0
 22145                           
 22146                           ; BSR set to: 0
 22147  011FF2  90D8               	bcf	status,0,c
 22148  011FF4  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22149  011FF6  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 22150                           
 22151                           ; BSR set to: 0
 22152  011FF8  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 22153  011FFA  D7ED               	goto	u17780
 22154  011FFC                     l3182:
 22155                           
 22156                           ; BSR set to: 0
 22157                           
 22158                           ; BSR set to: 0
 22159  011FFC  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 22160  012000  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 22161                           
 22162                           ; BSR set to: 0
 22163  012004  0012               	return		;funcret
 22164  012006                     __end_of___lwdiv:
 22165                           	opt stack 0
 22166                           tblptru	equ	0xFF8
 22167                           tblptrh	equ	0xFF7
 22168                           tblptrl	equ	0xFF6
 22169                           tablat	equ	0xFF5
 22170                           prodh	equ	0xFF4
 22171                           prodl	equ	0xFF3
 22172                           intcon	equ	0xFF2
 22173                           postinc0	equ	0xFEE
 22174                           wreg	equ	0xFE8
 22175                           indf1	equ	0xFE7
 22176                           postdec1	equ	0xFE5
 22177                           plusw1	equ	0xFE3
 22178                           fsr1h	equ	0xFE2
 22179                           fsr1l	equ	0xFE1
 22180                           indf2	equ	0xFDF
 22181                           postinc2	equ	0xFDE
 22182                           postdec2	equ	0xFDD
 22183                           plusw2	equ	0xFDB
 22184                           fsr2h	equ	0xFDA
 22185                           fsr2l	equ	0xFD9
 22186                           status	equ	0xFD8
 22187                           
 22188 ;; *************** function ___almod *****************
 22189 ;; Defined at:
 22190 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;  dividend        4    0[BANK0 ] long 
 22193 ;;  divisor         4    4[BANK0 ] long 
 22194 ;; Auto vars:     Size  Location     Type
 22195 ;;  sign            1    9[BANK0 ] unsigned char 
 22196 ;;  counter         1    8[BANK0 ] unsigned char 
 22197 ;; Return value:  Size  Location     Type
 22198 ;;                  4    0[BANK0 ] long 
 22199 ;; Registers used:
 22200 ;;		wreg, status,2, status,0
 22201 ;; Tracked objects:
 22202 ;;		On entry : 0/0
 22203 ;;		On exit  : 0/0
 22204 ;;		Unchanged: 0/0
 22205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22206 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22207 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22209 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22210 ;;Total ram usage:       10 bytes
 22211 ;; Hardware stack levels used:    1
 22212 ;; Hardware stack levels required when called:   10
 22213 ;; This function calls:
 22214 ;;		Nothing
 22215 ;; This function is called by:
 22216 ;;		__display_itoa_long
 22217 ;; This function uses a non-reentrant model
 22218 ;;
 22219                           
 22220                           	psect	text73
 22221  010E34                     __ptext73:
 22222                           	opt stack 0
 22223  010E34                     ___almod:
 22224                           	opt stack 18
 22225                           
 22226                           ; BSR set to: 0
 22227                           ;incstack = 0
 22228  010E34  0E00               	movlw	0
 22229  010E36  0100               	movlb	0	; () banked
 22230  010E38  6F69               	movwf	___almod@sign& (0+255),b
 22231                           
 22232                           ; BSR set to: 0
 22233  010E3A  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 22234  010E3C  D00A               	goto	l2779
 22235                           
 22236                           ; BSR set to: 0
 22237  010E3E  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 22238  010E40  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 22239  010E42  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 22240  010E44  6D60               	negf	___almod@dividend& (0+255),b
 22241  010E46  0E00               	movlw	0
 22242  010E48  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 22243  010E4A  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 22244  010E4C  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 22245                           
 22246                           ; BSR set to: 0
 22247  010E4E  0E01               	movlw	1
 22248  010E50  6F69               	movwf	___almod@sign& (0+255),b
 22249  010E52                     l2779:
 22250                           
 22251                           ; BSR set to: 0
 22252                           
 22253                           ; BSR set to: 0
 22254  010E52  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 22255  010E54  D008               	goto	l2780
 22256                           
 22257                           ; BSR set to: 0
 22258  010E56  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 22259  010E58  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 22260  010E5A  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 22261  010E5C  6D64               	negf	___almod@divisor& (0+255),b
 22262  010E5E  0E00               	movlw	0
 22263  010E60  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 22264  010E62  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 22265  010E64  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 22266  010E66                     l2780:
 22267                           
 22268                           ; BSR set to: 0
 22269                           
 22270                           ; BSR set to: 0
 22271  010E66  5164               	movf	___almod@divisor& (0+255),w,b
 22272  010E68  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 22273  010E6A  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 22274  010E6C  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 22275  010E6E  B4D8               	btfsc	status,2,c
 22276  010E70  D024               	goto	l2787
 22277                           
 22278                           ; BSR set to: 0
 22279  010E72  0E01               	movlw	1
 22280  010E74  6F68               	movwf	___almod@counter& (0+255),b
 22281  010E76  D006               	goto	l2782
 22282  010E78                     
 22283                           ; BSR set to: 0
 22284                           
 22285                           ; BSR set to: 0
 22286  010E78  90D8               	bcf	status,0,c
 22287  010E7A  3764               	rlcf	___almod@divisor& (0+255),f,b
 22288  010E7C  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 22289  010E7E  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 22290  010E80  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 22291  010E82  2B68               	incf	___almod@counter& (0+255),f,b
 22292  010E84                     l2782:
 22293                           
 22294                           ; BSR set to: 0
 22295                           
 22296                           ; BSR set to: 0
 22297  010E84  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 22298  010E86  D7F8               	goto	l2783
 22299  010E88                     u19980:
 22300                           
 22301                           ; BSR set to: 0
 22302                           
 22303                           ; BSR set to: 0
 22304                           
 22305                           ; BSR set to: 0
 22306  010E88  5164               	movf	___almod@divisor& (0+255),w,b
 22307  010E8A  5D60               	subwf	___almod@dividend& (0+255),w,b
 22308  010E8C  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 22309  010E8E  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 22310  010E90  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 22311  010E92  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 22312  010E94  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 22313  010E96  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 22314  010E98  A0D8               	btfss	status,0,c
 22315  010E9A  D008               	goto	l2786
 22316                           
 22317                           ; BSR set to: 0
 22318  010E9C  5164               	movf	___almod@divisor& (0+255),w,b
 22319  010E9E  5F60               	subwf	___almod@dividend& (0+255),f,b
 22320  010EA0  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 22321  010EA2  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 22322  010EA4  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 22323  010EA6  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 22324  010EA8  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 22325  010EAA  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 22326  010EAC                     l2786:
 22327                           
 22328                           ; BSR set to: 0
 22329                           
 22330                           ; BSR set to: 0
 22331  010EAC  90D8               	bcf	status,0,c
 22332  010EAE  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 22333  010EB0  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 22334  010EB2  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 22335  010EB4  3364               	rrcf	___almod@divisor& (0+255),f,b
 22336                           
 22337                           ; BSR set to: 0
 22338  010EB6  2F68               	decfsz	___almod@counter& (0+255),f,b
 22339  010EB8  D7E7               	goto	u19980
 22340  010EBA                     l2787:
 22341                           
 22342                           ; BSR set to: 0
 22343                           
 22344                           ; BSR set to: 0
 22345                           
 22346                           ; BSR set to: 0
 22347  010EBA  5169               	movf	___almod@sign& (0+255),w,b
 22348  010EBC  B4D8               	btfsc	status,2,c
 22349  010EBE  D008               	goto	l2788
 22350                           
 22351                           ; BSR set to: 0
 22352  010EC0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 22353  010EC2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 22354  010EC4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 22355  010EC6  6D60               	negf	___almod@dividend& (0+255),b
 22356  010EC8  0E00               	movlw	0
 22357  010ECA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 22358  010ECC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 22359  010ECE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 22360  010ED0                     l2788:
 22361                           
 22362                           ; BSR set to: 0
 22363                           
 22364                           ; BSR set to: 0
 22365  010ED0  C060  F060         	movff	___almod@dividend,?___almod
 22366  010ED4  C061  F061         	movff	___almod@dividend+1,?___almod+1
 22367  010ED8  C062  F062         	movff	___almod@dividend+2,?___almod+2
 22368  010EDC  C063  F063         	movff	___almod@dividend+3,?___almod+3
 22369  010EE0  0012               	return	
 22370  010EE2                     __end_of___almod:
 22371                           	opt stack 0
 22372                           tblptru	equ	0xFF8
 22373                           tblptrh	equ	0xFF7
 22374                           tblptrl	equ	0xFF6
 22375                           tablat	equ	0xFF5
 22376                           prodh	equ	0xFF4
 22377                           prodl	equ	0xFF3
 22378                           intcon	equ	0xFF2
 22379                           postinc0	equ	0xFEE
 22380                           wreg	equ	0xFE8
 22381                           indf1	equ	0xFE7
 22382                           postdec1	equ	0xFE5
 22383                           plusw1	equ	0xFE3
 22384                           fsr1h	equ	0xFE2
 22385                           fsr1l	equ	0xFE1
 22386                           indf2	equ	0xFDF
 22387                           postinc2	equ	0xFDE
 22388                           postdec2	equ	0xFDD
 22389                           plusw2	equ	0xFDB
 22390                           fsr2h	equ	0xFDA
 22391                           fsr2l	equ	0xFD9
 22392                           status	equ	0xFD8
 22393                           
 22394 ;; *************** function ___aldiv *****************
 22395 ;; Defined at:
 22396 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;  dividend        4    0[BANK0 ] long 
 22399 ;;  divisor         4    4[BANK0 ] long 
 22400 ;; Auto vars:     Size  Location     Type
 22401 ;;  quotient        4   10[BANK0 ] long 
 22402 ;;  sign            1    9[BANK0 ] unsigned char 
 22403 ;;  counter         1    8[BANK0 ] unsigned char 
 22404 ;; Return value:  Size  Location     Type
 22405 ;;                  4    0[BANK0 ] long 
 22406 ;; Registers used:
 22407 ;;		wreg, status,2, status,0
 22408 ;; Tracked objects:
 22409 ;;		On entry : 0/0
 22410 ;;		On exit  : 0/0
 22411 ;;		Unchanged: 0/0
 22412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22413 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22414 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22416 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22417 ;;Total ram usage:       14 bytes
 22418 ;; Hardware stack levels used:    1
 22419 ;; Hardware stack levels required when called:   10
 22420 ;; This function calls:
 22421 ;;		Nothing
 22422 ;; This function is called by:
 22423 ;;		__display_itoa_long
 22424 ;; This function uses a non-reentrant model
 22425 ;;
 22426                           
 22427                           	psect	text74
 22428  010844                     __ptext74:
 22429                           	opt stack 0
 22430  010844                     ___aldiv:
 22431                           	opt stack 18
 22432                           
 22433                           ; BSR set to: 0
 22434                           ;incstack = 0
 22435  010844  0E00               	movlw	0
 22436  010846  0100               	movlb	0	; () banked
 22437  010848  6F69               	movwf	___aldiv@sign& (0+255),b
 22438                           
 22439                           ; BSR set to: 0
 22440  01084A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 22441  01084C  D00A               	goto	l2766
 22442                           
 22443                           ; BSR set to: 0
 22444  01084E  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 22445  010850  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 22446  010852  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 22447  010854  6D64               	negf	___aldiv@divisor& (0+255),b
 22448  010856  0E00               	movlw	0
 22449  010858  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 22450  01085A  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 22451  01085C  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 22452                           
 22453                           ; BSR set to: 0
 22454  01085E  0E01               	movlw	1
 22455  010860  6F69               	movwf	___aldiv@sign& (0+255),b
 22456  010862                     l2766:
 22457                           
 22458                           ; BSR set to: 0
 22459                           
 22460                           ; BSR set to: 0
 22461  010862  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 22462  010864  D00A               	goto	l2767
 22463                           
 22464                           ; BSR set to: 0
 22465  010866  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 22466  010868  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 22467  01086A  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 22468  01086C  6D60               	negf	___aldiv@dividend& (0+255),b
 22469  01086E  0E00               	movlw	0
 22470  010870  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 22471  010872  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 22472  010874  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 22473                           
 22474                           ; BSR set to: 0
 22475  010876  0E01               	movlw	1
 22476  010878  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 22477  01087A                     l2767:
 22478                           
 22479                           ; BSR set to: 0
 22480                           
 22481                           ; BSR set to: 0
 22482  01087A  0E00               	movlw	0
 22483  01087C  6F6A               	movwf	___aldiv@quotient& (0+255),b
 22484  01087E  0E00               	movlw	0
 22485  010880  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 22486  010882  0E00               	movlw	0
 22487  010884  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 22488  010886  0E00               	movlw	0
 22489  010888  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 22490                           
 22491                           ; BSR set to: 0
 22492  01088A  5164               	movf	___aldiv@divisor& (0+255),w,b
 22493  01088C  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 22494  01088E  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 22495  010890  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 22496  010892  B4D8               	btfsc	status,2,c
 22497  010894  D02A               	goto	l2774
 22498                           
 22499                           ; BSR set to: 0
 22500  010896  0E01               	movlw	1
 22501  010898  6F68               	movwf	___aldiv@counter& (0+255),b
 22502  01089A  D006               	goto	l2769
 22503  01089C                     
 22504                           ; BSR set to: 0
 22505                           
 22506                           ; BSR set to: 0
 22507  01089C  90D8               	bcf	status,0,c
 22508  01089E  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 22509  0108A0  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 22510  0108A2  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 22511  0108A4  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 22512  0108A6  2B68               	incf	___aldiv@counter& (0+255),f,b
 22513  0108A8                     l2769:
 22514                           
 22515                           ; BSR set to: 0
 22516                           
 22517                           ; BSR set to: 0
 22518  0108A8  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 22519  0108AA  D7F8               	goto	l2770
 22520  0108AC                     u19920:
 22521                           
 22522                           ; BSR set to: 0
 22523                           
 22524                           ; BSR set to: 0
 22525                           
 22526                           ; BSR set to: 0
 22527  0108AC  90D8               	bcf	status,0,c
 22528  0108AE  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 22529  0108B0  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 22530  0108B2  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 22531  0108B4  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 22532                           
 22533                           ; BSR set to: 0
 22534  0108B6  5164               	movf	___aldiv@divisor& (0+255),w,b
 22535  0108B8  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 22536  0108BA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 22537  0108BC  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 22538  0108BE  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 22539  0108C0  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 22540  0108C2  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 22541  0108C4  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 22542  0108C6  A0D8               	btfss	status,0,c
 22543  0108C8  D009               	goto	l2773
 22544                           
 22545                           ; BSR set to: 0
 22546  0108CA  5164               	movf	___aldiv@divisor& (0+255),w,b
 22547  0108CC  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 22548  0108CE  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 22549  0108D0  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 22550  0108D2  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 22551  0108D4  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 22552  0108D6  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 22553  0108D8  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 22554                           
 22555                           ; BSR set to: 0
 22556  0108DA  816A               	bsf	___aldiv@quotient& (0+255),0,b
 22557  0108DC                     l2773:
 22558                           
 22559                           ; BSR set to: 0
 22560                           
 22561                           ; BSR set to: 0
 22562  0108DC  90D8               	bcf	status,0,c
 22563  0108DE  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 22564  0108E0  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 22565  0108E2  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 22566  0108E4  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 22567                           
 22568                           ; BSR set to: 0
 22569  0108E6  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 22570  0108E8  D7E1               	goto	u19920
 22571  0108EA                     l2774:
 22572                           
 22573                           ; BSR set to: 0
 22574                           
 22575                           ; BSR set to: 0
 22576                           
 22577                           ; BSR set to: 0
 22578  0108EA  5169               	movf	___aldiv@sign& (0+255),w,b
 22579  0108EC  B4D8               	btfsc	status,2,c
 22580  0108EE  D008               	goto	l2775
 22581                           
 22582                           ; BSR set to: 0
 22583  0108F0  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 22584  0108F2  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 22585  0108F4  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 22586  0108F6  6D6A               	negf	___aldiv@quotient& (0+255),b
 22587  0108F8  0E00               	movlw	0
 22588  0108FA  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 22589  0108FC  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 22590  0108FE  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 22591  010900                     l2775:
 22592                           
 22593                           ; BSR set to: 0
 22594                           
 22595                           ; BSR set to: 0
 22596  010900  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 22597  010904  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 22598  010908  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 22599  01090C  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 22600  010910  0012               	return	
 22601  010912                     __end_of___aldiv:
 22602                           	opt stack 0
 22603                           tblptru	equ	0xFF8
 22604                           tblptrh	equ	0xFF7
 22605                           tblptrl	equ	0xFF6
 22606                           tablat	equ	0xFF5
 22607                           prodh	equ	0xFF4
 22608                           prodl	equ	0xFF3
 22609                           intcon	equ	0xFF2
 22610                           postinc0	equ	0xFEE
 22611                           wreg	equ	0xFE8
 22612                           indf1	equ	0xFE7
 22613                           postdec1	equ	0xFE5
 22614                           plusw1	equ	0xFE3
 22615                           fsr1h	equ	0xFE2
 22616                           fsr1l	equ	0xFE1
 22617                           indf2	equ	0xFDF
 22618                           postinc2	equ	0xFDE
 22619                           postdec2	equ	0xFDD
 22620                           plusw2	equ	0xFDB
 22621                           fsr2h	equ	0xFDA
 22622                           fsr2l	equ	0xFD9
 22623                           status	equ	0xFD8
 22624                           
 22625 ;; *************** function __display_clear *****************
 22626 ;; Defined at:
 22627 ;;		line 81 in file "display.c"
 22628 ;; Parameters:    Size  Location     Type
 22629 ;;		None
 22630 ;; Auto vars:     Size  Location     Type
 22631 ;;  col             1    3[BANK0 ] unsigned char 
 22632 ;;  row             1    2[BANK0 ] unsigned char 
 22633 ;; Return value:  Size  Location     Type
 22634 ;;                  1    wreg      void 
 22635 ;; Registers used:
 22636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22637 ;; Tracked objects:
 22638 ;;		On entry : 0/0
 22639 ;;		On exit  : 0/0
 22640 ;;		Unchanged: 0/0
 22641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22643 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22646 ;;Total ram usage:        4 bytes
 22647 ;; Hardware stack levels used:    1
 22648 ;; Hardware stack levels required when called:   10
 22649 ;; This function calls:
 22650 ;;		Nothing
 22651 ;; This function is called by:
 22652 ;;		_display_prepare
 22653 ;; This function uses a non-reentrant model
 22654 ;;
 22655                           
 22656                           	psect	text75
 22657  01228A                     __ptext75:
 22658                           	opt stack 0
 22659  01228A                     __display_clear:
 22660                           	opt stack 19
 22661                           
 22662                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;incstack = 0
 22666  01228A  0E00               	movlw	0
 22667  01228C  0100               	movlb	0	; () banked
 22668  01228E  6F62               	movwf	__display_clear@row& (0+255),b
 22669  012290                     l20771:
 22670                           
 22671                           ; BSR set to: 0
 22672  012290  0E03               	movlw	3
 22673  012292  6562               	cpfsgt	__display_clear@row& (0+255),b
 22674  012294  D001               	goto	l1278
 22675  012296  0012               	return	
 22676  012298                     l1278:
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 22680                           
 22681                           ; BSR set to: 0
 22682  012298  0E00               	movlw	0
 22683  01229A  6F63               	movwf	__display_clear@col& (0+255),b
 22684  01229C                     l20777:
 22685                           
 22686                           ; BSR set to: 0
 22687  01229C  0E13               	movlw	19
 22688  01229E  6563               	cpfsgt	__display_clear@col& (0+255),b
 22689  0122A0  D001               	goto	l1280
 22690  0122A2  D016               	goto	u20780
 22691  0122A4                     l1280:
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 22695                           
 22696                           ; BSR set to: 0
 22697  0122A4  5162               	movf	__display_clear@row& (0+255),w,b
 22698  0122A6  0D14               	mullw	20
 22699  0122A8  0E78               	movlw	low _display_content
 22700  0122AA  6F60               	movwf	??__display_clear& (0+255),b
 22701  0122AC  0E02               	movlw	high _display_content
 22702  0122AE  6F61               	movwf	(??__display_clear+1)& (0+255),b
 22703  0122B0  50F3               	movf	prodl,w,c
 22704  0122B2  2760               	addwf	??__display_clear& (0+255),f,b
 22705  0122B4  50F4               	movf	prodh,w,c
 22706  0122B6  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 22707  0122B8  5163               	movf	__display_clear@col& (0+255),w,b
 22708  0122BA  0D01               	mullw	1
 22709  0122BC  50F3               	movf	prodl,w,c
 22710  0122BE  2560               	addwf	??__display_clear& (0+255),w,b
 22711  0122C0  6ED9               	movwf	fsr2l,c
 22712  0122C2  50F4               	movf	prodh,w,c
 22713  0122C4  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 22714  0122C6  6EDA               	movwf	fsr2h,c
 22715  0122C8  0E20               	movlw	32
 22716  0122CA  6EDF               	movwf	indf2,c
 22717                           
 22718                           ; BSR set to: 0
 22719  0122CC  2B63               	incf	__display_clear@col& (0+255),f,b
 22720  0122CE  D7E6               	goto	l20777
 22721  0122D0                     u20780:
 22722                           
 22723                           ; BSR set to: 0
 22724                           
 22725                           ; BSR set to: 0
 22726  0122D0  2B62               	incf	__display_clear@row& (0+255),f,b
 22727  0122D2  D7DE               	goto	l20771
 22728  0122D4                     __end_of__display_clear:
 22729                           	opt stack 0
 22730                           tblptru	equ	0xFF8
 22731                           tblptrh	equ	0xFF7
 22732                           tblptrl	equ	0xFF6
 22733                           tablat	equ	0xFF5
 22734                           prodh	equ	0xFF4
 22735                           prodl	equ	0xFF3
 22736                           intcon	equ	0xFF2
 22737                           postinc0	equ	0xFEE
 22738                           wreg	equ	0xFE8
 22739                           indf1	equ	0xFE7
 22740                           postdec1	equ	0xFE5
 22741                           plusw1	equ	0xFE3
 22742                           fsr1h	equ	0xFE2
 22743                           fsr1l	equ	0xFE1
 22744                           indf2	equ	0xFDF
 22745                           postinc2	equ	0xFDE
 22746                           postdec2	equ	0xFDD
 22747                           plusw2	equ	0xFDB
 22748                           fsr2h	equ	0xFDA
 22749                           fsr2l	equ	0xFD9
 22750                           status	equ	0xFD8
 22751                           
 22752 ;; *************** function _USBDeviceInit *****************
 22753 ;; Defined at:
 22754 ;;		line 277 in file "usb_device.c"
 22755 ;; Parameters:    Size  Location     Type
 22756 ;;		None
 22757 ;; Auto vars:     Size  Location     Type
 22758 ;;  i               1    8[BANK0 ] unsigned char 
 22759 ;; Return value:  Size  Location     Type
 22760 ;;                  1    wreg      void 
 22761 ;; Registers used:
 22762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22763 ;; Tracked objects:
 22764 ;;		On entry : 0/0
 22765 ;;		On exit  : 0/0
 22766 ;;		Unchanged: 0/0
 22767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22772 ;;Total ram usage:        1 bytes
 22773 ;; Hardware stack levels used:    1
 22774 ;; Hardware stack levels required when called:   11
 22775 ;; This function calls:
 22776 ;;		_memset
 22777 ;; This function is called by:
 22778 ;;		_main
 22779 ;; This function uses a non-reentrant model
 22780 ;;
 22781                           
 22782                           	psect	text76
 22783  00E846                     __ptext76:
 22784                           	opt stack 0
 22785  00E846                     _USBDeviceInit:
 22786                           	opt stack 19
 22787                           
 22788                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 22789                           
 22790                           ; BSR set to: 0
 22791                           ;incstack = 0
 22792  00E846  98A0               	bcf	4000,4,c	;volatile
 22793                           
 22794                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 22795  00E848  0E00               	movlw	0
 22796  00E84A  6E63               	movwf	3939,c	;volatile
 22797                           
 22798                           ;usb_device.c: 291: {UIR = 0;};
 22799  00E84C  0E00               	movlw	0
 22800  00E84E  6E62               	movwf	3938,c	;volatile
 22801                           
 22802                           ;usb_device.c: 294: UEP0 = 0;
 22803  00E850  0E00               	movlw	0
 22804  00E852  010F               	movlb	15	; () banked
 22805  00E854  6F26               	movwf	38,b	;volatile
 22806                           
 22807                           ; BSR set to: 15
 22808                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 22809  00E856  0E27               	movlw	39
 22810  00E858  0100               	movlb	0	; () banked
 22811  00E85A  6F60               	movwf	memset@p1& (0+255),b
 22812  00E85C  0E0F               	movlw	15
 22813  00E85E  6F61               	movwf	(memset@p1+1)& (0+255),b
 22814  00E860  0E00               	movlw	0
 22815  00E862  6F63               	movwf	(memset@c+1)& (0+255),b
 22816  00E864  0E00               	movlw	0
 22817  00E866  6F62               	movwf	memset@c& (0+255),b
 22818  00E868  0E00               	movlw	0
 22819  00E86A  6F65               	movwf	(memset@n+1)& (0+255),b
 22820  00E86C  0E02               	movlw	2
 22821  00E86E  6F64               	movwf	memset@n& (0+255),b
 22822  00E870  ECBC  F093         	call	_memset	;wreg free
 22823                           
 22824                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22825  00E874  0E16               	movlw	22
 22826  00E876  010F               	movlb	15	; () banked
 22827  00E878  6F39               	movwf	57,b	;volatile
 22828                           
 22829                           ; BSR set to: 15
 22830  00E87A  0E9F               	movlw	159
 22831  00E87C  6F37               	movwf	55,b	;volatile
 22832                           
 22833                           ; BSR set to: 15
 22834  00E87E  0E7B               	movlw	123
 22835  00E880  6F36               	movwf	54,b	;volatile
 22836                           
 22837                           ; BSR set to: 15
 22838                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 22839  00E882  0E00               	movlw	0
 22840  00E884  0100               	movlb	0	; () banked
 22841  00E886  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22842  00E888                     l21171:
 22843                           
 22844                           ; BSR set to: 0
 22845  00E888  0E0B               	movlw	11
 22846  00E88A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22847  00E88C  D001               	goto	l145
 22848  00E88E  D00E               	goto	u21190
 22849  00E890                     l145:
 22850                           
 22851                           ; BSR set to: 0
 22852                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 22853                           
 22854                           ; BSR set to: 0
 22855  00E890  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22856  00E892  0D04               	mullw	4
 22857  00E894  0E00               	movlw	0
 22858  00E896  24F3               	addwf	prodl,w,c
 22859  00E898  6ED9               	movwf	fsr2l,c
 22860  00E89A  0E0D               	movlw	13
 22861  00E89C  20F4               	addwfc	prodh,w,c
 22862  00E89E  6EDA               	movwf	fsr2h,c
 22863  00E8A0  6ADE               	clrf	postinc2,c
 22864  00E8A2  6ADE               	clrf	postinc2,c
 22865  00E8A4  6ADE               	clrf	postinc2,c
 22866  00E8A6  6ADD               	clrf	postdec2,c
 22867                           
 22868                           ; BSR set to: 0
 22869  00E8A8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 22870  00E8AA  D7EE               	goto	l21171
 22871  00E8AC                     u21190:
 22872                           
 22873                           ; BSR set to: 0
 22874                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 22875  00E8AC  8C65               	bsf	3941,6,c	;volatile
 22876                           
 22877                           ; BSR set to: 0
 22878                           ;usb_device.c: 316: UADDR = 0x00;
 22879  00E8AE  0E00               	movlw	0
 22880  00E8B0  010F               	movlb	15	; () banked
 22881  00E8B2  6F38               	movwf	56,b	;volatile
 22882                           
 22883                           ; BSR set to: 15
 22884                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 22885  00E8B4  9865               	bcf	3941,4,c	;volatile
 22886                           
 22887                           ; BSR set to: 15
 22888                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 22889  00E8B6  9C65               	bcf	3941,6,c	;volatile
 22890  00E8B8                     
 22891                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 22892                           
 22893                           ; BSR set to: 15
 22894  00E8B8  9662               	bcf	3938,3,c	;volatile
 22895                           
 22896                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 22897  00E8BA  0E00               	movlw	0
 22898  00E8BC  6E0D               	movwf	_inPipes+3,c	;volatile
 22899                           
 22900                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 22901  00E8BE  0E00               	movlw	0
 22902  00E8C0  6E04               	movwf	_outPipes+3,c	;volatile
 22903                           
 22904                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 22905  00E8C2  0E00               	movlw	0
 22906  00E8C4  6E06               	movwf	_outPipes+5,c	;volatile
 22907  00E8C6  0E00               	movlw	0
 22908  00E8C8  6E05               	movwf	_outPipes+4,c	;volatile
 22909                           
 22910                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 22911  00E8CA  B662               	btfsc	3938,3,c	;volatile
 22912  00E8CC  D7F5               	goto	l147
 22913                           
 22914                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 22915  00E8CE  0E01               	movlw	1
 22916  00E8D0  0101               	movlb	1	; () banked
 22917  00E8D2  6F75               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22918                           
 22919                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 22920  00E8D4  0E01               	movlw	1
 22921  00E8D6  6F74               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22922                           
 22923                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 22924  00E8D8  0E00               	movlw	0
 22925  00E8DA  6F73               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22926                           
 22927                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 22928  00E8DC  0E00               	movlw	0
 22929  00E8DE  6F72               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22930                           
 22931                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 22932  00E8E0  0E00               	movlw	0
 22933  00E8E2  6F77               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22934                           
 22935                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 22936  00E8E4  0E00               	movlw	0
 22937  00E8E6  0100               	movlb	0	; () banked
 22938  00E8E8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 22939  00E8EA                     l21199:
 22940                           
 22941                           ; BSR set to: 0
 22942  00E8EA  0E02               	movlw	2
 22943  00E8EC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 22944  00E8EE  D001               	goto	l149
 22945  00E8F0  D02E               	goto	u21220
 22946  00E8F2                     l149:
 22947                           
 22948                           ; BSR set to: 0
 22949                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 22950                           
 22951                           ; BSR set to: 0
 22952  00E8F2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22953  00E8F4  0D02               	mullw	2
 22954  00E8F6  0E10               	movlw	low _pBDTEntryIn
 22955  00E8F8  24F3               	addwf	prodl,w,c
 22956  00E8FA  6ED9               	movwf	fsr2l,c
 22957  00E8FC  0E00               	movlw	high _pBDTEntryIn
 22958  00E8FE  20F4               	addwfc	prodh,w,c
 22959  00E900  6EDA               	movwf	fsr2h,c
 22960  00E902  0E00               	movlw	0
 22961  00E904  6EDE               	movwf	postinc2,c
 22962  00E906  0E00               	movlw	0
 22963  00E908  6EDD               	movwf	postdec2,c
 22964                           
 22965                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 22966  00E90A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22967  00E90C  0D02               	mullw	2
 22968  00E90E  0E31               	movlw	low _pBDTEntryOut
 22969  00E910  24F3               	addwf	prodl,w,c
 22970  00E912  6ED9               	movwf	fsr2l,c
 22971  00E914  0E01               	movlw	high _pBDTEntryOut
 22972  00E916  20F4               	addwfc	prodh,w,c
 22973  00E918  6EDA               	movwf	fsr2h,c
 22974  00E91A  0E00               	movlw	0
 22975  00E91C  6EDE               	movwf	postinc2,c
 22976  00E91E  0E00               	movlw	0
 22977  00E920  6EDD               	movwf	postdec2,c
 22978                           
 22979                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 22980  00E922  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22981  00E924  0D01               	mullw	1
 22982  00E926  0E58               	movlw	low _ep_data_in
 22983  00E928  24F3               	addwf	prodl,w,c
 22984  00E92A  6ED9               	movwf	fsr2l,c
 22985  00E92C  0E01               	movlw	high _ep_data_in
 22986  00E92E  20F4               	addwfc	prodh,w,c
 22987  00E930  6EDA               	movwf	fsr2h,c
 22988  00E932  0E00               	movlw	0
 22989  00E934  6EDF               	movwf	indf2,c
 22990                           
 22991                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 22992  00E936  5168               	movf	USBDeviceInit@i& (0+255),w,b
 22993  00E938  0D01               	mullw	1
 22994  00E93A  0E55               	movlw	low _ep_data_out
 22995  00E93C  24F3               	addwf	prodl,w,c
 22996  00E93E  6ED9               	movwf	fsr2l,c
 22997  00E940  0E01               	movlw	high _ep_data_out
 22998  00E942  20F4               	addwfc	prodh,w,c
 22999  00E944  6EDA               	movwf	fsr2h,c
 23000  00E946  0E00               	movlw	0
 23001  00E948  6EDF               	movwf	indf2,c
 23002                           
 23003                           ; BSR set to: 0
 23004  00E94A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 23005  00E94C  D7CE               	goto	l21199
 23006  00E94E                     u21220:
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 23010                           
 23011                           ; BSR set to: 0
 23012  00E94E  0E08               	movlw	8
 23013  00E950  6E10               	movwf	_pBDTEntryIn,c
 23014  00E952  0E0D               	movlw	13
 23015  00E954  6E11               	movwf	_pBDTEntryIn+1,c
 23016                           
 23017                           ; BSR set to: 0
 23018                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 23019  00E956  0E16               	movlw	22
 23020  00E958  010F               	movlb	15	; () banked
 23021  00E95A  6F26               	movwf	38,b	;volatile
 23022                           
 23023                           ; BSR set to: 15
 23024                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 23025  00E95C  0E0D               	movlw	13
 23026  00E95E  010D               	movlb	13	; () banked
 23027  00E960  6F03               	movwf	3,b	;volatile
 23028  00E962  0E30               	movlw	48
 23029  00E964  6F02               	movwf	2,b	;volatile
 23030                           
 23031                           ; BSR set to: 13
 23032                           ;usb_device.c: 359: BDT[0].CNT = 8;
 23033  00E966  0E08               	movlw	8
 23034  00E968  6F01               	movwf	1,b	;volatile
 23035                           
 23036                           ; BSR set to: 13
 23037                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 23038  00E96A  0E04               	movlw	4
 23039  00E96C  6F00               	movwf	0,b	;volatile
 23040                           
 23041                           ; BSR set to: 13
 23042                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 23043  00E96E  8F00               	bsf	0,7,b	;volatile
 23044                           
 23045                           ; BSR set to: 13
 23046                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 23047  00E970  0E00               	movlw	0
 23048  00E972  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 23049                           
 23050                           ; BSR set to: 13
 23051                           ;usb_device.c: 366: USB1msTickCount = 0;
 23052  00E974  0E00               	movlw	0
 23053  00E976  0101               	movlb	1	; () banked
 23054  00E978  6F4B               	movwf	_USB1msTickCount& (0+255),b	;volatile
 23055  00E97A  0E00               	movlw	0
 23056  00E97C  6F4C               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 23057  00E97E  0E00               	movlw	0
 23058  00E980  6F4D               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 23059  00E982  0E00               	movlw	0
 23060  00E984  6F4E               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 23061                           
 23062                           ; BSR set to: 1
 23063                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 23064  00E986  0E00               	movlw	0
 23065  00E988  6F71               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 23066                           
 23067                           ; BSR set to: 1
 23068                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 23069  00E98A  0E00               	movlw	0
 23070  00E98C  6E2B               	movwf	_USBDeviceState,c	;volatile
 23071                           
 23072                           ; BSR set to: 1
 23073  00E98E  0012               	return		;funcret
 23074  00E990                     __end_of_USBDeviceInit:
 23075                           	opt stack 0
 23076                           tblptru	equ	0xFF8
 23077                           tblptrh	equ	0xFF7
 23078                           tblptrl	equ	0xFF6
 23079                           tablat	equ	0xFF5
 23080                           prodh	equ	0xFF4
 23081                           prodl	equ	0xFF3
 23082                           intcon	equ	0xFF2
 23083                           postinc0	equ	0xFEE
 23084                           wreg	equ	0xFE8
 23085                           indf1	equ	0xFE7
 23086                           postdec1	equ	0xFE5
 23087                           plusw1	equ	0xFE3
 23088                           fsr1h	equ	0xFE2
 23089                           fsr1l	equ	0xFE1
 23090                           indf2	equ	0xFDF
 23091                           postinc2	equ	0xFDE
 23092                           postdec2	equ	0xFDD
 23093                           plusw2	equ	0xFDB
 23094                           fsr2h	equ	0xFDA
 23095                           fsr2l	equ	0xFD9
 23096                           status	equ	0xFD8
 23097                           
 23098 ;; *************** function _memset *****************
 23099 ;; Defined at:
 23100 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 23101 ;; Parameters:    Size  Location     Type
 23102 ;;  p1              2    0[BANK0 ] PTR void 
 23103 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23104 ;;  c               2    2[BANK0 ] int 
 23105 ;;  n               2    4[BANK0 ] unsigned int 
 23106 ;; Auto vars:     Size  Location     Type
 23107 ;;  p               2    6[BANK0 ] PTR unsigned char 
 23108 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  2    0[BANK0 ] PTR void 
 23111 ;; Registers used:
 23112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/0
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23118 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23121 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23122 ;;Total ram usage:        8 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; Hardware stack levels required when called:   10
 23125 ;; This function calls:
 23126 ;;		Nothing
 23127 ;; This function is called by:
 23128 ;;		_USBDeviceInit
 23129 ;; This function uses a non-reentrant model
 23130 ;;
 23131                           
 23132                           	psect	text77
 23133  012778                     __ptext77:
 23134                           	opt stack 0
 23135  012778                     _memset:
 23136                           	opt stack 19
 23137                           
 23138                           ; BSR set to: 1
 23139                           ;incstack = 0
 23140  012778  C060  F066         	movff	memset@p1,memset@p
 23141  01277C  C061  F067         	movff	memset@p1+1,memset@p+1
 23142  012780  D009               	goto	l3379
 23143  012782                     l20433:
 23144  012782  C066  FFD9         	movff	memset@p,fsr2l
 23145  012786  C067  FFDA         	movff	memset@p+1,fsr2h
 23146  01278A  C062  FFDF         	movff	memset@c,indf2
 23147  01278E  0100               	movlb	0	; () banked
 23148  012790  4B66               	infsnz	memset@p& (0+255),f,b
 23149  012792  2B67               	incf	(memset@p+1)& (0+255),f,b
 23150  012794                     l3379:
 23151                           
 23152                           ; BSR set to: 0
 23153  012794  0100               	movlb	0	; () banked
 23154  012796  0764               	decf	memset@n& (0+255),f,b
 23155  012798  A0D8               	btfss	status,0,c
 23156  01279A  0765               	decf	(memset@n+1)& (0+255),f,b
 23157  01279C  2964               	incf	memset@n& (0+255),w,b
 23158  01279E  E1F1               	bnz	l20433
 23159  0127A0  2965               	incf	(memset@n+1)& (0+255),w,b
 23160  0127A2  B4D8               	btfsc	status,2,c
 23161  0127A4  0012               	return	
 23162  0127A6  D7ED               	goto	l3380
 23163  0127A8                     __end_of_memset:
 23164                           	opt stack 0
 23165                           tblptru	equ	0xFF8
 23166                           tblptrh	equ	0xFF7
 23167                           tblptrl	equ	0xFF6
 23168                           tablat	equ	0xFF5
 23169                           prodh	equ	0xFF4
 23170                           prodl	equ	0xFF3
 23171                           intcon	equ	0xFF2
 23172                           postinc0	equ	0xFEE
 23173                           wreg	equ	0xFE8
 23174                           indf1	equ	0xFE7
 23175                           postdec1	equ	0xFE5
 23176                           plusw1	equ	0xFE3
 23177                           fsr1h	equ	0xFE2
 23178                           fsr1l	equ	0xFE1
 23179                           indf2	equ	0xFDF
 23180                           postinc2	equ	0xFDE
 23181                           postdec2	equ	0xFDD
 23182                           plusw2	equ	0xFDB
 23183                           fsr2h	equ	0xFDA
 23184                           fsr2l	equ	0xFD9
 23185                           status	equ	0xFD8
 23186                           
 23187 ;; *************** function _USBDeviceAttach *****************
 23188 ;; Defined at:
 23189 ;;		line 1354 in file "usb_device.c"
 23190 ;; Parameters:    Size  Location     Type
 23191 ;;		None
 23192 ;; Auto vars:     Size  Location     Type
 23193 ;;		None
 23194 ;; Return value:  Size  Location     Type
 23195 ;;                  1    wreg      void 
 23196 ;; Registers used:
 23197 ;;		wreg, status,2
 23198 ;; Tracked objects:
 23199 ;;		On entry : 0/0
 23200 ;;		On exit  : 0/0
 23201 ;;		Unchanged: 0/0
 23202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23207 ;;Total ram usage:        0 bytes
 23208 ;; Hardware stack levels used:    1
 23209 ;; Hardware stack levels required when called:   10
 23210 ;; This function calls:
 23211 ;;		Nothing
 23212 ;; This function is called by:
 23213 ;;		_main
 23214 ;; This function uses a non-reentrant model
 23215 ;;
 23216                           
 23217                           	psect	text78
 23218  012746                     __ptext78:
 23219                           	opt stack 0
 23220  012746                     _USBDeviceAttach:
 23221                           	opt stack 20
 23222                           
 23223                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 23224                           
 23225                           ; BSR set to: 0
 23226                           ;incstack = 0
 23227  012746  502B               	movf	_USBDeviceState,w,c	;volatile
 23228  012748  A4D8               	btfss	status,2,c
 23229  01274A  0012               	return	
 23230                           
 23231                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 23232  01274C  0E00               	movlw	0
 23233  01274E  6E65               	movwf	3941,c	;volatile
 23234                           
 23235                           ;usb_device.c: 1365: UIE = 0;
 23236  012750  0E00               	movlw	0
 23237  012752  010F               	movlb	15	; () banked
 23238  012754  6F36               	movwf	54,b	;volatile
 23239                           
 23240                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 23241  012756  0E16               	movlw	22
 23242  012758  6F39               	movwf	57,b	;volatile
 23243  01275A  0E9F               	movlw	159
 23244  01275C  6F37               	movwf	55,b	;volatile
 23245  01275E  0E7B               	movlw	123
 23246  012760  6F36               	movwf	54,b	;volatile
 23247                           
 23248                           ; BSR set to: 15
 23249                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 23250  012762  8ED0               	bsf	4048,7,c	;volatile
 23251                           
 23252                           ; BSR set to: 15
 23253  012764  88A2               	bsf	4002,4,c	;volatile
 23254                           
 23255                           ; BSR set to: 15
 23256  012766  88A0               	bsf	4000,4,c	;volatile
 23257                           
 23258                           ; BSR set to: 15
 23259  012768  8EF2               	bsf	intcon,7,c	;volatile
 23260                           
 23261                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 23262  01276A  D001               	goto	l206
 23263  01276C                     l207:
 23264  01276C  8665               	bsf	3941,3,c	;volatile
 23265  01276E                     l206:
 23266  01276E  A665               	btfss	3941,3,c	;volatile
 23267  012770  D7FD               	goto	l207
 23268                           
 23269                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 23270  012772  0E01               	movlw	1
 23271  012774  6E2B               	movwf	_USBDeviceState,c	;volatile
 23272  012776  0012               	return	
 23273  012778                     __end_of_USBDeviceAttach:
 23274                           	opt stack 0
 23275                           tblptru	equ	0xFF8
 23276                           tblptrh	equ	0xFF7
 23277                           tblptrl	equ	0xFF6
 23278                           tablat	equ	0xFF5
 23279                           prodh	equ	0xFF4
 23280                           prodl	equ	0xFF3
 23281                           intcon	equ	0xFF2
 23282                           postinc0	equ	0xFEE
 23283                           wreg	equ	0xFE8
 23284                           indf1	equ	0xFE7
 23285                           postdec1	equ	0xFE5
 23286                           plusw1	equ	0xFE3
 23287                           fsr1h	equ	0xFE2
 23288                           fsr1l	equ	0xFE1
 23289                           indf2	equ	0xFDF
 23290                           postinc2	equ	0xFDE
 23291                           postdec2	equ	0xFDD
 23292                           plusw2	equ	0xFDB
 23293                           fsr2h	equ	0xFDA
 23294                           fsr2l	equ	0xFD9
 23295                           status	equ	0xFD8
 23296                           
 23297 ;; *************** function _SYSTEM_Initialize *****************
 23298 ;; Defined at:
 23299 ;;		line 39 in file "system.c"
 23300 ;; Parameters:    Size  Location     Type
 23301 ;;  state           1    wreg     enum E6623
 23302 ;; Auto vars:     Size  Location     Type
 23303 ;;  state           1    0[BANK0 ] enum E6623
 23304 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 23305 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 23306 ;; Return value:  Size  Location     Type
 23307 ;;                  1    wreg      void 
 23308 ;; Registers used:
 23309 ;;		wreg, status,2, status,0
 23310 ;; Tracked objects:
 23311 ;;		On entry : 0/0
 23312 ;;		On exit  : 0/0
 23313 ;;		Unchanged: 0/0
 23314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23316 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23318 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23319 ;;Total ram usage:        5 bytes
 23320 ;; Hardware stack levels used:    1
 23321 ;; Hardware stack levels required when called:   10
 23322 ;; This function calls:
 23323 ;;		Nothing
 23324 ;; This function is called by:
 23325 ;;		_main
 23326 ;; This function uses a non-reentrant model
 23327 ;;
 23328                           
 23329                           	psect	text79
 23330  011DA4                     __ptext79:
 23331                           	opt stack 0
 23332  011DA4                     _SYSTEM_Initialize:
 23333                           	opt stack 20
 23334                           
 23335                           ;incstack = 0
 23336                           ;SYSTEM_Initialize@state stored from wreg
 23337  011DA4  0100               	movlb	0	; () banked
 23338  011DA6  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 23339                           
 23340                           ;system.c: 41: switch(state)
 23341  011DA8  D01E               	goto	l892
 23342  011DAA                     
 23343                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 23344  011DAA  0E02               	movlw	2
 23345  011DAC  0100               	movlb	0	; () banked
 23346  011DAE  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 23347  011DB0  0E58               	movlw	88
 23348  011DB2  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 23352  011DB4  8C9B               	bsf	3995,6,c	;volatile
 23353  011DB6                     l21351:
 23354                           
 23355                           ; BSR set to: 0
 23356  011DB6  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 23357  011DB8  A0D8               	btfss	status,0,c
 23358  011DBA  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 23359  011DBC  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 23360  011DBE  E1FB               	bnz	l21351
 23361  011DC0  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 23362  011DC2  B4D8               	btfsc	status,2,c
 23363  011DC4  0012               	return	
 23364  011DC6  D7F7               	goto	l895
 23365  011DC8                     
 23366                           ; BSR set to: 0
 23367                           ;system.c: 78: OSCCON = 0x70;
 23368                           
 23369                           ; BSR set to: 0
 23370  011DC8  0E70               	movlw	112
 23371  011DCA  6ED3               	movwf	4051,c	;volatile
 23372                           
 23373                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 23374  011DCC  0E03               	movlw	3
 23375  011DCE  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3114+1)& (0+255),b
 23376  011DD0  0E20               	movlw	32
 23377  011DD2  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3114& (0+255),b
 23378  011DD4                     l21355:
 23379                           
 23380                           ; BSR set to: 0
 23381  011DD4  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3114& (0+255),f,b
 23382  011DD6  A0D8               	btfss	status,0,c
 23383  011DD8  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3114+1)& (0+255),f,b
 23384  011DDA  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3114& (0+255),w,b
 23385  011DDC  E1FB               	bnz	l21355
 23386  011DDE  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3114+1)& (0+255),w,b
 23387  011DE0  B4D8               	btfsc	status,2,c
 23388  011DE2  0012               	return	
 23389  011DE4  D7F7               	goto	l901
 23390  011DE6                     l892:
 23391                           
 23392                           ; BSR set to: 0
 23393  011DE6  0100               	movlb	0	; () banked
 23394  011DE8  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 23395                           
 23396                           ; Switch size 1, requested type "space"
 23397                           ; Number of cases is 3, Range of values is 0 to 2
 23398                           ; switch strategies available:
 23399                           ; Name         Instructions Cycles
 23400                           ; simple_byte           10     6 (average)
 23401                           ;	Chosen strategy is simple_byte
 23402  011DEA  0A00               	xorlw	0	; case 0
 23403  011DEC  B4D8               	btfsc	status,2,c
 23404  011DEE  D7DD               	goto	l893
 23405  011DF0  0A01               	xorlw	1	; case 1
 23406  011DF2  B4D8               	btfsc	status,2,c
 23407  011DF4  0012               	return	
 23408  011DF6  0A03               	xorlw	3	; case 2
 23409  011DF8  A4D8               	btfss	status,2,c
 23410  011DFA  0012               	return	
 23411  011DFC  D7E5               	goto	l899
 23412  011DFE                     __end_of_SYSTEM_Initialize:
 23413                           	opt stack 0
 23414                           tblptru	equ	0xFF8
 23415                           tblptrh	equ	0xFF7
 23416                           tblptrl	equ	0xFF6
 23417                           tablat	equ	0xFF5
 23418                           prodh	equ	0xFF4
 23419                           prodl	equ	0xFF3
 23420                           intcon	equ	0xFF2
 23421                           postinc0	equ	0xFEE
 23422                           wreg	equ	0xFE8
 23423                           indf1	equ	0xFE7
 23424                           postdec1	equ	0xFE5
 23425                           plusw1	equ	0xFE3
 23426                           fsr1h	equ	0xFE2
 23427                           fsr1l	equ	0xFE1
 23428                           indf2	equ	0xFDF
 23429                           postinc2	equ	0xFDE
 23430                           postdec2	equ	0xFDD
 23431                           plusw2	equ	0xFDB
 23432                           fsr2h	equ	0xFDA
 23433                           fsr2l	equ	0xFD9
 23434                           status	equ	0xFD8
 23435                           
 23436 ;; *************** function _APP_DeviceMSDTasks *****************
 23437 ;; Defined at:
 23438 ;;		line 110 in file "app_device_msd.c"
 23439 ;; Parameters:    Size  Location     Type
 23440 ;;		None
 23441 ;; Auto vars:     Size  Location     Type
 23442 ;;		None
 23443 ;; Return value:  Size  Location     Type
 23444 ;;                  1    wreg      void 
 23445 ;; Registers used:
 23446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23447 ;; Tracked objects:
 23448 ;;		On entry : 0/0
 23449 ;;		On exit  : 0/0
 23450 ;;		Unchanged: 0/0
 23451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23456 ;;Total ram usage:        0 bytes
 23457 ;; Hardware stack levels used:    1
 23458 ;; Hardware stack levels required when called:   21
 23459 ;; This function calls:
 23460 ;;		_MSDTasks
 23461 ;; This function is called by:
 23462 ;;		_main
 23463 ;; This function uses a non-reentrant model
 23464 ;;
 23465                           
 23466                           	psect	text80
 23467  012A52                     __ptext80:
 23468                           	opt stack 0
 23469  012A52                     _APP_DeviceMSDTasks:
 23470                           	opt stack 9
 23471                           
 23472                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 23473                           
 23474                           ; BSR set to: 0
 23475                           ;incstack = 0
 23476  012A52  0E20               	movlw	32
 23477  012A54  602B               	cpfslt	_USBDeviceState,c	;volatile
 23478  012A56  D001               	goto	l981
 23479  012A58  0012               	return	
 23480  012A5A                     l981:
 23481                           
 23482                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 23483  012A5A  B265               	btfsc	3941,1,c	;volatile
 23484  012A5C  0012               	return	
 23485                           
 23486                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 23487                           
 23488                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 23489  012A5E  EC72  F06A         	call	_MSDTasks	;wreg free
 23490  012A62  0012               	return		;funcret
 23491  012A64                     __end_of_APP_DeviceMSDTasks:
 23492                           	opt stack 0
 23493                           tblptru	equ	0xFF8
 23494                           tblptrh	equ	0xFF7
 23495                           tblptrl	equ	0xFF6
 23496                           tablat	equ	0xFF5
 23497                           prodh	equ	0xFF4
 23498                           prodl	equ	0xFF3
 23499                           intcon	equ	0xFF2
 23500                           postinc0	equ	0xFEE
 23501                           wreg	equ	0xFE8
 23502                           indf1	equ	0xFE7
 23503                           postdec1	equ	0xFE5
 23504                           plusw1	equ	0xFE3
 23505                           fsr1h	equ	0xFE2
 23506                           fsr1l	equ	0xFE1
 23507                           indf2	equ	0xFDF
 23508                           postinc2	equ	0xFDE
 23509                           postdec2	equ	0xFDD
 23510                           plusw2	equ	0xFDB
 23511                           fsr2h	equ	0xFDA
 23512                           fsr2l	equ	0xFD9
 23513                           status	equ	0xFD8
 23514                           
 23515 ;; *************** function _MSDTasks *****************
 23516 ;; Defined at:
 23517 ;;		line 335 in file "usb_device_msd.c"
 23518 ;; Parameters:    Size  Location     Type
 23519 ;;		None
 23520 ;; Auto vars:     Size  Location     Type
 23521 ;;  i               1   81[BANK0 ] unsigned char 
 23522 ;; Return value:  Size  Location     Type
 23523 ;;                  1    wreg      unsigned char 
 23524 ;; Registers used:
 23525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23526 ;; Tracked objects:
 23527 ;;		On entry : 0/0
 23528 ;;		On exit  : 0/0
 23529 ;;		Unchanged: 0/0
 23530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23532 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23533 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23534 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23535 ;;Total ram usage:        6 bytes
 23536 ;; Hardware stack levels used:    1
 23537 ;; Hardware stack levels required when called:   20
 23538 ;; This function calls:
 23539 ;;		_MSDProcessCommand
 23540 ;;		_USBStallEndpoint
 23541 ;;		_USBTransferOnePacket
 23542 ;; This function is called by:
 23543 ;;		_APP_DeviceMSDTasks
 23544 ;; This function uses a non-reentrant model
 23545 ;;
 23546                           
 23547                           	psect	text81
 23548  00D4E4                     __ptext81:
 23549                           	opt stack 0
 23550  00D4E4                     _MSDTasks:
 23551                           	opt stack 9
 23552                           
 23553                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 23554                           
 23555                           ;incstack = 0
 23556  00D4E4  0E20               	movlw	32
 23557  00D4E6  182B               	xorwf	_USBDeviceState,w,c	;volatile
 23558  00D4E8  A4D8               	btfss	status,2,c
 23559  00D4EA  0012               	return	
 23560                           
 23561                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 23562                           
 23563                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 23564  00D4EC  98A0               	bcf	4000,4,c	;volatile
 23565                           
 23566                           ;usb_device_msd.c: 357: switch(MSD_State)
 23567  00D4EE  D116               	goto	l570
 23568  00D4F0                     
 23569                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 23570  00D4F0  0100               	movlb	0	; () banked
 23571  00D4F2  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 23572  00D4F4  11CF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23573  00D4F6  B4D8               	btfsc	status,2,c
 23574  00D4F8  D006               	goto	u20470
 23575                           
 23576                           ; BSR set to: 0
 23577  00D4FA  C0CE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23578  00D4FE  C0CF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23579  00D502  BEDF               	btfsc	indf2,7,c
 23580  00D504  D11A               	goto	l586
 23581  00D506                     u20470:
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 23585                           
 23586                           ; BSR set to: 0
 23587  00D506  0E00               	movlw	0
 23588  00D508  6FB1               	movwf	MSDTasks@i& (0+255),b
 23589  00D50A                     l20497:
 23590                           
 23591                           ; BSR set to: 0
 23592  00D50A  0E1E               	movlw	30
 23593  00D50C  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 23594  00D50E  D001               	goto	l575
 23595  00D510  D014               	goto	u20490
 23596  00D512                     l575:
 23597                           
 23598                           ; BSR set to: 0
 23599                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 23600                           
 23601                           ; BSR set to: 0
 23602  00D512  51B1               	movf	MSDTasks@i& (0+255),w,b
 23603  00D514  0D01               	mullw	1
 23604  00D516  0E40               	movlw	64
 23605  00D518  24F3               	addwf	prodl,w,c
 23606  00D51A  6ED9               	movwf	fsr2l,c
 23607  00D51C  0E0D               	movlw	13
 23608  00D51E  20F4               	addwfc	prodh,w,c
 23609  00D520  6EDA               	movwf	fsr2h,c
 23610  00D522  51B1               	movf	MSDTasks@i& (0+255),w,b
 23611  00D524  0D01               	mullw	1
 23612  00D526  0E00               	movlw	low _gblCBW
 23613  00D528  24F3               	addwf	prodl,w,c
 23614  00D52A  6EE1               	movwf	fsr1l,c
 23615  00D52C  0E01               	movlw	high _gblCBW
 23616  00D52E  20F4               	addwfc	prodh,w,c
 23617  00D530  6EE2               	movwf	fsr1h,c
 23618  00D532  CFDF FFE7          	movff	indf2,indf1
 23619                           
 23620                           ; BSR set to: 0
 23621  00D536  2BB1               	incf	MSDTasks@i& (0+255),f,b
 23622  00D538  D7E8               	goto	l20497
 23623  00D53A                     u20490:
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 23627                           
 23628                           ; BSR set to: 0
 23629  00D53A  EE20 F001          	lfsr	2,1
 23630  00D53E  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 23631  00D540  26D9               	addwf	fsr2l,f,c
 23632  00D542  51CF               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 23633  00D544  22DA               	addwfc	fsr2h,f,c
 23634  00D546  0E1F               	movlw	31
 23635  00D548  18DE               	xorwf	postinc2,w,c
 23636  00D54A  A4D8               	btfss	status,2,c
 23637  00D54C  D073               	goto	l577
 23638                           
 23639                           ; BSR set to: 0
 23640  00D54E  0E55               	movlw	85
 23641  00D550  0101               	movlb	1	; () banked
 23642  00D552  1900               	xorwf	_gblCBW& (0+255),w,b
 23643  00D554  E16F               	bnz	l577
 23644  00D556  0E53               	movlw	83
 23645  00D558  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 23646  00D55A  E16C               	bnz	l577
 23647  00D55C  0E42               	movlw	66
 23648  00D55E  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 23649  00D560  E169               	bnz	l577
 23650  00D562  0E43               	movlw	67
 23651  00D564  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 23652  00D566  A4D8               	btfss	status,2,c
 23653  00D568  D065               	goto	l577
 23654                           
 23655                           ; BSR set to: 1
 23656                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 23657  00D56A  0E01               	movlw	1
 23658  00D56C  6F6C               	movwf	_MSDCBWValid& (0+255),b
 23659                           
 23660                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 23661  00D56E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 23662  00D570  A4D8               	btfss	status,2,c
 23663  00D572  D053               	goto	l578
 23664                           
 23665                           ; BSR set to: 1
 23666  00D574  0E11               	movlw	17
 23667  00D576  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 23668  00D578  D050               	goto	l578
 23669                           
 23670                           ; BSR set to: 1
 23671  00D57A  510E               	movf	(_gblCBW+14)& (0+255),w,b
 23672  00D57C  B4D8               	btfsc	status,2,c
 23673  00D57E  D04D               	goto	l578
 23674                           
 23675                           ; BSR set to: 1
 23676  00D580  C10C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 23677  00D584  0E3F               	movlw	63
 23678  00D586  0100               	movlb	0	; () banked
 23679  00D588  17AC               	andwf	??_MSDTasks& (0+255),f,b
 23680  00D58A  A4D8               	btfss	status,2,c
 23681  00D58C  D046               	goto	l578
 23682                           
 23683                           ; BSR set to: 0
 23684                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 23685  00D58E  0E55               	movlw	85
 23686  00D590  010D               	movlb	13	; () banked
 23687  00D592  6F80               	movwf	128,b	;volatile
 23688  00D594  0E53               	movlw	83
 23689  00D596  6F81               	movwf	129,b	;volatile
 23690  00D598  0E42               	movlw	66
 23691  00D59A  6F82               	movwf	130,b	;volatile
 23692  00D59C  0E53               	movlw	83
 23693  00D59E  6F83               	movwf	131,b	;volatile
 23694                           
 23695                           ; BSR set to: 13
 23696                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 23697  00D5A0  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 23698  00D5A4  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 23699  00D5A8  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 23700  00D5AC  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 23701                           
 23702                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 23703  00D5B0  0E00               	movlw	0
 23704  00D5B2  6F88               	movwf	136,b	;volatile
 23705  00D5B4  0E00               	movlw	0
 23706  00D5B6  6F89               	movwf	137,b	;volatile
 23707  00D5B8  0E00               	movlw	0
 23708  00D5BA  6F8A               	movwf	138,b	;volatile
 23709  00D5BC  0E00               	movlw	0
 23710  00D5BE  6F8B               	movwf	139,b	;volatile
 23711                           
 23712                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 23713  00D5C0  0E00               	movlw	0
 23714  00D5C2  6F8C               	movwf	140,b	;volatile
 23715                           
 23716                           ; BSR set to: 13
 23717                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 23718  00D5C4  0100               	movlb	0	; () banked
 23719  00D5C6  69D1               	setf	_MSDCommandState& (0+255),b
 23720                           
 23721                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 23722  00D5C8  0E00               	movlw	0
 23723  00D5CA  0101               	movlb	1	; () banked
 23724  00D5CC  6F70               	movwf	_MSDReadState& (0+255),b
 23725                           
 23726                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 23727  00D5CE  0E00               	movlw	0
 23728  00D5D0  6E25               	movwf	_MSDWriteState,c
 23729                           
 23730                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 23731  00D5D2  0E00               	movlw	0
 23732  00D5D4  6F6F               	movwf	_MSDRetryAttempt& (0+255),b
 23733                           
 23734                           ; BSR set to: 1
 23735                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 23736  00D5D6  0E03               	movlw	3
 23737  00D5D8  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 23738  00D5DA  B4D8               	btfsc	status,2,c
 23739  00D5DC  D008               	goto	l579
 23740                           
 23741                           ; BSR set to: 1
 23742                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 23743  00D5DE  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 23744  00D5E0  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 23745  00D5E2  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 23746  00D5E4  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 23747                           
 23748                           ; BSR set to: 1
 23749                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 23750  00D5E6  0E00               	movlw	0
 23751  00D5E8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23752                           
 23753                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 23754  00D5EA  0E00               	movlw	0
 23755  00D5EC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23756  00D5EE                     l579:
 23757                           
 23758                           ; BSR set to: 1
 23759                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 23760                           
 23761                           ; BSR set to: 1
 23762  00D5EE  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 23763  00D5F0  D002               	goto	l580
 23764                           
 23765                           ; BSR set to: 1
 23766                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 23767  00D5F2  0E01               	movlw	1
 23768  00D5F4  D001               	goto	L41
 23769  00D5F6                     l580:
 23770                           
 23771                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 23772                           
 23773                           ; BSR set to: 0
 23774  00D5F6  0E02               	movlw	2
 23775  00D5F8                     L41:
 23776  00D5F8  0100               	movlb	0	; () banked
 23777  00D5FA  6FD2               	movwf	_MSD_State& (0+255),b
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 23781                           
 23782                           ; BSR set to: 0
 23783  00D5FC  0101               	movlb	1	; () banked
 23784  00D5FE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23785  00D600  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23786  00D602  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23787  00D604  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 23788  00D606  B4D8               	btfsc	status,2,c
 23789  00D608  D002               	goto	l582
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 23793  00D60A  0E00               	movlw	0
 23794  00D60C  D001               	goto	L42
 23795  00D60E                     l582:
 23796                           
 23797                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 23798                           
 23799                           ; BSR set to: 0
 23800  00D60E  0E01               	movlw	1
 23801  00D610                     L42:
 23802  00D610  0100               	movlb	0	; () banked
 23803  00D612  6FD0               	movwf	_MSDHostNoData& (0+255),b
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 23807                           
 23808                           ; BSR set to: 0
 23809  00D614  C10F  F0D1         	movff	_gblCBW+15,_MSDCommandState
 23810                           
 23811                           ;usb_device_msd.c: 454: }
 23812  00D618  D090               	goto	l586
 23813  00D61A                     l578:
 23814                           
 23815                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 23816                           
 23817                           ; BSR set to: 0
 23818  00D61A  0E01               	movlw	1
 23819  00D61C  0100               	movlb	0	; () banked
 23820  00D61E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23821  00D620  0E02               	movlw	2
 23822  00D622  EC5B  F07C         	call	_USBStallEndpoint
 23823                           
 23824                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 23825  00D626  0E00               	movlw	0
 23826  00D628  0100               	movlb	0	; () banked
 23827  00D62A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23828  00D62C  0E02               	movlw	2
 23829  00D62E  EC5B  F07C         	call	_USBStallEndpoint
 23830                           
 23831                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 23832  00D632  D083               	goto	l586
 23833  00D634                     l577:
 23834                           
 23835                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 23836  00D634  0E01               	movlw	1
 23837  00D636  0100               	movlb	0	; () banked
 23838  00D638  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23839  00D63A  0E02               	movlw	2
 23840  00D63C  EC5B  F07C         	call	_USBStallEndpoint
 23841                           
 23842                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 23843  00D640  0E00               	movlw	0
 23844  00D642  0100               	movlb	0	; () banked
 23845  00D644  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23846  00D646  0E02               	movlw	2
 23847  00D648  EC5B  F07C         	call	_USBStallEndpoint
 23848                           
 23849                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 23850  00D64C  0E00               	movlw	0
 23851  00D64E  0101               	movlb	1	; () banked
 23852  00D650  6F6C               	movwf	_MSDCBWValid& (0+255),b
 23853                           
 23854                           ; BSR set to: 1
 23855                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 23856                           
 23857                           ; BSR set to: 1
 23858  00D652  D073               	goto	l586
 23859  00D654                     
 23860                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 23861                           
 23862                           ; BSR set to: 1
 23863  00D654  ECED  F077         	call	_MSDProcessCommand	;wreg free
 23864  00D658  0AFF               	xorlw	255
 23865  00D65A  A4D8               	btfss	status,2,c
 23866  00D65C  D06E               	goto	l586
 23867  00D65E  D011               	goto	l591
 23868  00D660                     
 23869                           ; BSR set to: 0
 23870                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 23871                           
 23872                           ; BSR set to: 0
 23873  00D660  ECED  F077         	call	_MSDProcessCommand	;wreg free
 23874  00D664  0AFF               	xorlw	255
 23875  00D666  A4D8               	btfss	status,2,c
 23876  00D668  D068               	goto	l586
 23877                           
 23878                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 23879  00D66A  010D               	movlb	13	; () banked
 23880  00D66C  518C               	movf	140,w,b	;volatile
 23881  00D66E  A4D8               	btfss	status,2,c
 23882  00D670  D008               	goto	l591
 23883                           
 23884                           ; BSR set to: 13
 23885  00D672  5188               	movf	136,w,b	;volatile
 23886  00D674  1189               	iorwf	137,w,b	;volatile
 23887  00D676  118A               	iorwf	138,w,b	;volatile
 23888  00D678  118B               	iorwf	139,w,b	;volatile
 23889  00D67A  B4D8               	btfsc	status,2,c
 23890  00D67C  D002               	goto	l591
 23891                           
 23892                           ; BSR set to: 13
 23893                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 23894  00D67E  0E02               	movlw	2
 23895  00D680  6F8C               	movwf	140,b	;volatile
 23896  00D682                     l591:
 23897                           
 23898                           ; BSR set to: 13
 23899                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 23900  00D682  0E03               	movlw	3
 23901  00D684  D03C               	goto	L40
 23902  00D686                     
 23903                           ; BSR set to: 0
 23904                           
 23905                           ; BSR set to: 0
 23906  00D686  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 23907  00D68A  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 23908                           
 23909                           ; BSR set to: 0
 23910                           
 23911                           ; BSR set to: 0
 23912                           
 23913                           ; BSR set to: 0
 23914  00D68E  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 23915  00D690  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 23916  00D692  B4D8               	btfsc	status,2,c
 23917  00D694  D00A               	goto	l593
 23918                           
 23919                           ; BSR set to: 0
 23920  00D696  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 23921  00D69A  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 23922                           
 23923                           ; BSR set to: 0
 23924                           
 23925                           ; BSR set to: 0
 23926                           
 23927                           ; BSR set to: 0
 23928                           
 23929                           ; BSR set to: 0
 23930  00D69E  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 23931  00D6A2  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 23932  00D6A6  BEDF               	btfsc	indf2,7,c
 23933  00D6A8  D048               	goto	l586
 23934  00D6AA                     l593:
 23935                           
 23936                           ; BSR set to: 0
 23937                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 23938                           
 23939                           ; BSR set to: 0
 23940  00D6AA  0E01               	movlw	1
 23941  00D6AC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23942  00D6AE  0E80               	movlw	128
 23943  00D6B0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23944  00D6B2  0E0D               	movlw	13
 23945  00D6B4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23946  00D6B6  0E0D               	movlw	13
 23947  00D6B8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23948  00D6BA  0E02               	movlw	2
 23949  00D6BC  ECE0  F07C         	call	_USBTransferOnePacket
 23950  00D6C0  C060  F0CC         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23951  00D6C4  C061  F0CD         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23952                           
 23953                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 23954  00D6C8  0100               	movlb	0	; () banked
 23955  00D6CA  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 23956  00D6CC  11CF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23957  00D6CE  B4D8               	btfsc	status,2,c
 23958  00D6D0  D006               	goto	u20660
 23959                           
 23960                           ; BSR set to: 0
 23961  00D6D2  C0CE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23962  00D6D6  C0CF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23963  00D6DA  BEDF               	btfsc	indf2,7,c
 23964  00D6DC  D00F               	goto	l602
 23965  00D6DE                     u20660:
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 23969                           
 23970                           ; BSR set to: 0
 23971  00D6DE  0E00               	movlw	0
 23972  00D6E0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23973  00D6E2  0E40               	movlw	64
 23974  00D6E4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23975  00D6E6  0E0D               	movlw	13
 23976  00D6E8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23977  00D6EA  0E40               	movlw	64
 23978  00D6EC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23979  00D6EE  0E02               	movlw	2
 23980  00D6F0  ECE0  F07C         	call	_USBTransferOnePacket
 23981  00D6F4  C060  F0CE         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23982  00D6F8  C061  F0CF         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23983  00D6FC                     l602:
 23984                           
 23985                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 23986  00D6FC  0E00               	movlw	0
 23987  00D6FE                     L40:
 23988  00D6FE  0100               	movlb	0	; () banked
 23989  00D700  6FD2               	movwf	_MSD_State& (0+255),b
 23990                           
 23991                           ;usb_device_msd.c: 513: break;
 23992  00D702  D01B               	goto	l586
 23993  00D704                     
 23994                           ; BSR set to: 0
 23995                           ;usb_device_msd.c: 518: MSD_State=0x00;
 23996                           
 23997                           ; BSR set to: 0
 23998  00D704  0E00               	movlw	0
 23999  00D706  6FD2               	movwf	_MSD_State& (0+255),b
 24000                           
 24001                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 24002  00D708  0E02               	movlw	2
 24003  00D70A  010D               	movlb	13	; () banked
 24004  00D70C  6F8C               	movwf	140,b	;volatile
 24005                           
 24006                           ; BSR set to: 13
 24007                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 24008  00D70E  0E00               	movlw	0
 24009  00D710  0100               	movlb	0	; () banked
 24010  00D712  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24011  00D714  0E02               	movlw	2
 24012  00D716  EC5B  F07C         	call	_USBStallEndpoint
 24013                           
 24014                           ;usb_device_msd.c: 521: }
 24015  00D71A  D00F               	goto	l586
 24016  00D71C                     l570:
 24017  00D71C  0100               	movlb	0	; () banked
 24018  00D71E  51D2               	movf	_MSD_State& (0+255),w,b
 24019                           
 24020                           ; Switch size 1, requested type "space"
 24021                           ; Number of cases is 4, Range of values is 0 to 3
 24022                           ; switch strategies available:
 24023                           ; Name         Instructions Cycles
 24024                           ; simple_byte           13     7 (average)
 24025                           ;	Chosen strategy is simple_byte
 24026  00D720  0A00               	xorlw	0	; case 0
 24027  00D722  B4D8               	btfsc	status,2,c
 24028  00D724  D6E5               	goto	l571
 24029  00D726  0A01               	xorlw	1	; case 1
 24030  00D728  B4D8               	btfsc	status,2,c
 24031  00D72A  D794               	goto	l587
 24032  00D72C  0A03               	xorlw	3	; case 2
 24033  00D72E  B4D8               	btfsc	status,2,c
 24034  00D730  D797               	goto	l589
 24035  00D732  0A01               	xorlw	1	; case 3
 24036  00D734  B4D8               	btfsc	status,2,c
 24037  00D736  D7A7               	goto	l592
 24038  00D738  D7E5               	goto	l605
 24039  00D73A                     l586:
 24040                           
 24041                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 24042  00D73A  88A0               	bsf	4000,4,c	;volatile
 24043                           
 24044                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 24045  00D73C  0012               	return		;funcret
 24046  00D73E                     __end_of_MSDTasks:
 24047                           	opt stack 0
 24048                           tblptru	equ	0xFF8
 24049                           tblptrh	equ	0xFF7
 24050                           tblptrl	equ	0xFF6
 24051                           tablat	equ	0xFF5
 24052                           prodh	equ	0xFF4
 24053                           prodl	equ	0xFF3
 24054                           intcon	equ	0xFF2
 24055                           postinc0	equ	0xFEE
 24056                           wreg	equ	0xFE8
 24057                           indf1	equ	0xFE7
 24058                           postdec1	equ	0xFE5
 24059                           plusw1	equ	0xFE3
 24060                           fsr1h	equ	0xFE2
 24061                           fsr1l	equ	0xFE1
 24062                           indf2	equ	0xFDF
 24063                           postinc2	equ	0xFDE
 24064                           postdec2	equ	0xFDD
 24065                           plusw2	equ	0xFDB
 24066                           fsr2h	equ	0xFDA
 24067                           fsr2l	equ	0xFD9
 24068                           status	equ	0xFD8
 24069                           
 24070 ;; *************** function _MSDProcessCommand *****************
 24071 ;; Defined at:
 24072 ;;		line 553 in file "usb_device_msd.c"
 24073 ;; Parameters:    Size  Location     Type
 24074 ;;		None
 24075 ;; Auto vars:     Size  Location     Type
 24076 ;;		None
 24077 ;; Return value:  Size  Location     Type
 24078 ;;                  1    wreg      unsigned char 
 24079 ;; Registers used:
 24080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24081 ;; Tracked objects:
 24082 ;;		On entry : 0/0
 24083 ;;		On exit  : 0/0
 24084 ;;		Unchanged: 0/0
 24085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24088 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24089 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24090 ;;Total ram usage:        5 bytes
 24091 ;; Hardware stack levels used:    1
 24092 ;; Hardware stack levels required when called:   19
 24093 ;; This function calls:
 24094 ;;		_ExternalFlash_MediaDetect
 24095 ;;		_ExternalFlash_MediaInitialize
 24096 ;;		_MSDProcessCommandMediaAbsent
 24097 ;;		_MSDProcessCommandMediaPresent
 24098 ;; This function is called by:
 24099 ;;		_MSDTasks
 24100 ;; This function uses a non-reentrant model
 24101 ;;
 24102                           
 24103                           	psect	text82
 24104  00EFDA                     __ptext82:
 24105                           	opt stack 0
 24106  00EFDA                     _MSDProcessCommand:
 24107                           	opt stack 9
 24108                           
 24109                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 24110                           
 24111                           ;incstack = 0
 24112  00EFDA  C1AD  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 24113  00EFDE  C1AE  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 24114  00EFE2  EE21  F0A1         	lfsr	2,_LUN+9
 24115  00EFE6  D801               	call	u19298
 24116  00EFE8  D00A               	goto	u19299
 24117  00EFEA                     u19298:
 24118  00EFEA  0005               	push	
 24119  00EFEC  6EFA               	movwf	pclath,c
 24120  00EFEE  50DE               	movf	postinc2,w,c
 24121  00EFF0  6EFD               	movwf	tosl,c
 24122  00EFF2  50DE               	movf	postinc2,w,c
 24123  00EFF4  6EFE               	movwf	tosh,c
 24124  00EFF6  50DE               	movf	postinc2,w,c
 24125  00EFF8  6EFF               	movwf	tosu,c
 24126  00EFFA  50FA               	movf	pclath,w,c
 24127  00EFFC  0012               	return		;indir
 24128  00EFFE                     u19299:
 24129  00EFFE  0900               	iorlw	0
 24130  00F000  B4D8               	btfsc	status,2,c
 24131  00F002  D00C               	goto	u19310
 24132  00F004  0101               	movlb	1	; () banked
 24133  00F006  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24134  00F008  0D01               	mullw	1
 24135  00F00A  0E6D               	movlw	low _SoftDetach
 24136  00F00C  24F3               	addwf	prodl,w,c
 24137  00F00E  6ED9               	movwf	fsr2l,c
 24138  00F010  0E01               	movlw	high _SoftDetach
 24139  00F012  20F4               	addwfc	prodh,w,c
 24140  00F014  6EDA               	movwf	fsr2h,c
 24141  00F016  04DE               	decf	postinc2,w,c
 24142  00F018  A4D8               	btfss	status,2,c
 24143  00F01A  D01D               	goto	l608
 24144  00F01C                     u19310:
 24145                           
 24146                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 24147                           
 24148                           ; BSR set to: 1
 24149  00F01C  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 24150  00F020  0E01               	movlw	1
 24151  00F022  0100               	movlb	0	; () banked
 24152  00F024  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 24153  00F026  0E00               	movlw	0
 24154  00F028  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 24155  00F02A  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 24156  00F02C  D003               	goto	u19324
 24157  00F02E                     u19325:
 24158  00F02E  90D8               	bcf	status,0,c
 24159  00F030  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 24160  00F032  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 24161  00F034                     u19324:
 24162  00F034  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 24163  00F036  D7FB               	goto	u19325
 24164  00F038  0100               	movlb	0	; () banked
 24165  00F03A  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 24166  00F03C  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 24167  00F03E  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 24168  00F040  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 24169  00F042  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 24170  00F044  0101               	movlb	1	; () banked
 24171  00F046  1761               	andwf	_gblMediaPresent& (0+255),f,b
 24172  00F048  0100               	movlb	0	; () banked
 24173  00F04A  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 24174  00F04C  0101               	movlb	1	; () banked
 24175  00F04E  1762               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 24176                           
 24177                           ; BSR set to: 1
 24178                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 24179  00F050  EC56  F08D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 24180                           
 24181                           ;usb_device_msd.c: 563: }
 24182  00F054  D058               	goto	l615
 24183  00F056                     l608:
 24184                           
 24185                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 24186  00F056  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 24187  00F05A  0E01               	movlw	1
 24188  00F05C  0100               	movlb	0	; () banked
 24189  00F05E  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 24190  00F060  0E00               	movlw	0
 24191  00F062  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 24192  00F064  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 24193  00F066  D003               	goto	u19334
 24194  00F068                     u19335:
 24195  00F068  90D8               	bcf	status,0,c
 24196  00F06A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 24197  00F06C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 24198  00F06E                     u19334:
 24199  00F06E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 24200  00F070  D7FB               	goto	u19335
 24201  00F072  0101               	movlb	1	; () banked
 24202  00F074  5161               	movf	_gblMediaPresent& (0+255),w,b
 24203  00F076  0100               	movlb	0	; () banked
 24204  00F078  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 24205  00F07A  0101               	movlb	1	; () banked
 24206  00F07C  5162               	movf	(_gblMediaPresent+1)& (0+255),w,b
 24207  00F07E  0100               	movlb	0	; () banked
 24208  00F080  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 24209  00F082  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 24210  00F084  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 24211  00F086  A4D8               	btfss	status,2,c
 24212  00F088  D03C               	goto	l612
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 24216  00F08A  C1AD  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 24217  00F08E  C1AE  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 24218  00F092  D801               	call	u19358
 24219  00F094  D00B               	goto	u19359
 24220  00F096                     u19358:
 24221  00F096  0005               	push	
 24222  00F098  6EFA               	movwf	pclath,c
 24223  00F09A  0101               	movlb	1	; () banked
 24224  00F09C  5198               	movf	_LUN& (0+255),w,b
 24225  00F09E  6EFD               	movwf	tosl,c
 24226  00F0A0  5199               	movf	(_LUN+1)& (0+255),w,b
 24227  00F0A2  6EFE               	movwf	tosh,c
 24228  00F0A4  519A               	movf	(_LUN+2)& (0+255),w,b
 24229  00F0A6  6EFF               	movwf	tosu,c
 24230  00F0A8  50FA               	movf	pclath,w,c
 24231  00F0AA  0012               	return		;indir
 24232  00F0AC                     u19359:
 24233  00F0AC  0100               	movlb	0	; () banked
 24234  00F0AE  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 24235  00F0B0  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 24236  00F0B2  B4D8               	btfsc	status,2,c
 24237  00F0B4  D023               	goto	l613
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 24241  00F0B6  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 24242  00F0BA  0E01               	movlw	1
 24243  00F0BC  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 24244  00F0BE  0E00               	movlw	0
 24245  00F0C0  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 24246  00F0C2  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 24247  00F0C4  D003               	goto	u19374
 24248  00F0C6                     u19375:
 24249  00F0C6  90D8               	bcf	status,0,c
 24250  00F0C8  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 24251  00F0CA  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 24252  00F0CC                     u19374:
 24253  00F0CC  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 24254  00F0CE  D7FB               	goto	u19375
 24255  00F0D0  0100               	movlb	0	; () banked
 24256  00F0D2  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 24257  00F0D4  0101               	movlb	1	; () banked
 24258  00F0D6  1361               	iorwf	_gblMediaPresent& (0+255),f,b
 24259  00F0D8  0100               	movlb	0	; () banked
 24260  00F0DA  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 24261  00F0DC  0101               	movlb	1	; () banked
 24262  00F0DE  1362               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 24263                           
 24264                           ; BSR set to: 1
 24265                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 24266  00F0E0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24267  00F0E2  0BF0               	andlw	-16
 24268  00F0E4  0906               	iorlw	6
 24269  00F0E6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24270                           
 24271                           ; BSR set to: 1
 24272                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 24273  00F0E8  0E28               	movlw	40
 24274  00F0EA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24275                           
 24276                           ; BSR set to: 1
 24277                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 24278  00F0EC  0E00               	movlw	0
 24279  00F0EE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24280                           
 24281                           ; BSR set to: 1
 24282                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 24283  00F0F0  0E01               	movlw	1
 24284  00F0F2  010D               	movlb	13	; () banked
 24285  00F0F4  6F8C               	movwf	140,b	;volatile
 24286                           
 24287                           ; BSR set to: 13
 24288                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 24289  00F0F6  EC93  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24290                           
 24291                           ;usb_device_msd.c: 589: }
 24292  00F0FA  D005               	goto	l615
 24293  00F0FC                     l613:
 24294                           
 24295                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 24296  00F0FC  EC56  F08D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 24297                           
 24298                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 24299  00F100  D002               	goto	l615
 24300  00F102                     l612:
 24301                           
 24302                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 24303  00F102  EC93  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24304  00F106                     l615:
 24305                           
 24306                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 24307  00F106  0100               	movlb	0	; () banked
 24308  00F108  51D1               	movf	_MSDCommandState& (0+255),w,b
 24309  00F10A  0012               	return	
 24310  00F10C                     __end_of_MSDProcessCommand:
 24311                           	opt stack 0
 24312                           tosu	equ	0xFFF
 24313                           tosh	equ	0xFFE
 24314                           tosl	equ	0xFFD
 24315                           pclath	equ	0xFFA
 24316                           tblptru	equ	0xFF8
 24317                           tblptrh	equ	0xFF7
 24318                           tblptrl	equ	0xFF6
 24319                           tablat	equ	0xFF5
 24320                           prodh	equ	0xFF4
 24321                           prodl	equ	0xFF3
 24322                           intcon	equ	0xFF2
 24323                           postinc0	equ	0xFEE
 24324                           wreg	equ	0xFE8
 24325                           indf1	equ	0xFE7
 24326                           postdec1	equ	0xFE5
 24327                           plusw1	equ	0xFE3
 24328                           fsr1h	equ	0xFE2
 24329                           fsr1l	equ	0xFE1
 24330                           indf2	equ	0xFDF
 24331                           postinc2	equ	0xFDE
 24332                           postdec2	equ	0xFDD
 24333                           plusw2	equ	0xFDB
 24334                           fsr2h	equ	0xFDA
 24335                           fsr2l	equ	0xFD9
 24336                           status	equ	0xFD8
 24337                           
 24338 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 24339 ;; Defined at:
 24340 ;;		line 635 in file "usb_device_msd.c"
 24341 ;; Parameters:    Size  Location     Type
 24342 ;;		None
 24343 ;; Auto vars:     Size  Location     Type
 24344 ;;		None
 24345 ;; Return value:  Size  Location     Type
 24346 ;;                  1    wreg      void 
 24347 ;; Registers used:
 24348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24349 ;; Tracked objects:
 24350 ;;		On entry : 0/0
 24351 ;;		On exit  : 0/0
 24352 ;;		Unchanged: 0/0
 24353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24358 ;;Total ram usage:        0 bytes
 24359 ;; Hardware stack levels used:    1
 24360 ;; Hardware stack levels required when called:   18
 24361 ;; This function calls:
 24362 ;;		_MSDErrorHandler
 24363 ;;		_MSDProcessCommandMediaPresent
 24364 ;;		_ResetSenseData
 24365 ;; This function is called by:
 24366 ;;		_MSDProcessCommand
 24367 ;; This function uses a non-reentrant model
 24368 ;;
 24369                           
 24370                           	psect	text83
 24371  011AAC                     __ptext83:
 24372                           	opt stack 0
 24373  011AAC                     _MSDProcessCommandMediaAbsent:
 24374                           	opt stack 9
 24375                           
 24376                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 24377                           
 24378                           ; BSR set to: 0
 24379                           ;incstack = 0
 24380  011AAC  D01E               	goto	l619
 24381  011AAE                     
 24382                           ;usb_device_msd.c: 646: ResetSenseData();
 24383  011AAE  EC87  F08D         	call	_ResetSenseData	;wreg free
 24384                           
 24385                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 24386  011AB2  0101               	movlb	1	; () banked
 24387  011AB4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24388  011AB6  0BF0               	andlw	-16
 24389  011AB8  0902               	iorlw	2
 24390  011ABA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24391                           
 24392                           ; BSR set to: 1
 24393                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 24394  011ABC  0E3A               	movlw	58
 24395  011ABE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24396                           
 24397                           ; BSR set to: 1
 24398                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 24399  011AC0  0E00               	movlw	0
 24400  011AC2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24401                           
 24402                           ; BSR set to: 1
 24403                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 24404  011AC4  EC93  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24405                           
 24406                           ;usb_device_msd.c: 655: break;
 24407  011AC8  0012               	return	
 24408  011ACA                     
 24409                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 24410  011ACA  0E01               	movlw	1
 24411  011ACC  010D               	movlb	13	; () banked
 24412  011ACE  6F8C               	movwf	140,b	;volatile
 24413                           
 24414                           ; BSR set to: 13
 24415                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 24416  011AD0  0100               	movlb	0	; () banked
 24417  011AD2  69D1               	setf	_MSDCommandState& (0+255),b
 24418                           
 24419                           ;usb_device_msd.c: 665: break;
 24420  011AD4  0012               	return	
 24421  011AD6                     
 24422                           ; BSR set to: 0
 24423                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 24424                           
 24425                           ; BSR set to: 0
 24426  011AD6  EC93  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24427                           
 24428                           ;usb_device_msd.c: 671: break;
 24429  011ADA  0012               	return	
 24430  011ADC                     
 24431                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 24432  011ADC  EC93  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24433                           
 24434                           ;usb_device_msd.c: 677: break;
 24435  011AE0  0012               	return	
 24436  011AE2                     
 24437                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 24438  011AE2  0E7F               	movlw	127
 24439  011AE4  ECB1  F079         	call	_MSDErrorHandler
 24440                           
 24441                           ;usb_device_msd.c: 685: }
 24442                           
 24443                           ;usb_device_msd.c: 684: break;
 24444  011AE8  0012               	return	
 24445  011AEA                     l619:
 24446  011AEA  0100               	movlb	0	; () banked
 24447  011AEC  51D1               	movf	_MSDCommandState& (0+255),w,b
 24448                           
 24449                           ; Switch size 1, requested type "space"
 24450                           ; Number of cases is 5, Range of values is 0 to 253
 24451                           ; switch strategies available:
 24452                           ; Name         Instructions Cycles
 24453                           ; simple_byte           16     9 (average)
 24454                           ;	Chosen strategy is simple_byte
 24455  011AEE  0A00               	xorlw	0	; case 0
 24456  011AF0  B4D8               	btfsc	status,2,c
 24457  011AF2  D7EB               	goto	l622
 24458  011AF4  0A03               	xorlw	3	; case 3
 24459  011AF6  B4D8               	btfsc	status,2,c
 24460  011AF8  D7DA               	goto	l620
 24461  011AFA  0A11               	xorlw	17	; case 18
 24462  011AFC  B4D8               	btfsc	status,2,c
 24463  011AFE  D7EB               	goto	l624
 24464  011B00  0A0C               	xorlw	12	; case 30
 24465  011B02  B4D8               	btfsc	status,2,c
 24466  011B04  D7E2               	goto	l622
 24467  011B06  0AE3               	xorlw	227	; case 253
 24468  011B08  B4D8               	btfsc	status,2,c
 24469  011B0A  D7E8               	goto	l625
 24470  011B0C  D7EA               	goto	l626
 24471  011B0E                     __end_of_MSDProcessCommandMediaAbsent:
 24472                           	opt stack 0
 24473                           tosu	equ	0xFFF
 24474                           tosh	equ	0xFFE
 24475                           tosl	equ	0xFFD
 24476                           pclath	equ	0xFFA
 24477                           tblptru	equ	0xFF8
 24478                           tblptrh	equ	0xFF7
 24479                           tblptrl	equ	0xFF6
 24480                           tablat	equ	0xFF5
 24481                           prodh	equ	0xFF4
 24482                           prodl	equ	0xFF3
 24483                           intcon	equ	0xFF2
 24484                           postinc0	equ	0xFEE
 24485                           wreg	equ	0xFE8
 24486                           indf1	equ	0xFE7
 24487                           postdec1	equ	0xFE5
 24488                           plusw1	equ	0xFE3
 24489                           fsr1h	equ	0xFE2
 24490                           fsr1l	equ	0xFE1
 24491                           indf2	equ	0xFDF
 24492                           postinc2	equ	0xFDE
 24493                           postdec2	equ	0xFDD
 24494                           plusw2	equ	0xFDB
 24495                           fsr2h	equ	0xFDA
 24496                           fsr2l	equ	0xFD9
 24497                           status	equ	0xFD8
 24498                           
 24499 ;; *************** function _MSDProcessCommandMediaPresent *****************
 24500 ;; Defined at:
 24501 ;;		line 712 in file "usb_device_msd.c"
 24502 ;; Parameters:    Size  Location     Type
 24503 ;;		None
 24504 ;; Auto vars:     Size  Location     Type
 24505 ;;  capacity        4   66[BANK0 ] struct .
 24506 ;;  sectorSize      4   62[BANK0 ] struct .
 24507 ;;  i               1   70[BANK0 ] unsigned char 
 24508 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 24509 ;; Return value:  Size  Location     Type
 24510 ;;                  1    wreg      void 
 24511 ;; Registers used:
 24512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24513 ;; Tracked objects:
 24514 ;;		On entry : 0/0
 24515 ;;		On exit  : 0/0
 24516 ;;		Unchanged: 0/0
 24517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24519 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24520 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24521 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24522 ;;Total ram usage:       14 bytes
 24523 ;; Hardware stack levels used:    1
 24524 ;; Hardware stack levels required when called:   17
 24525 ;; This function calls:
 24526 ;;		_ExternalFlash_CapacityRead
 24527 ;;		_ExternalFlash_SectorSizeRead
 24528 ;;		_ExternalFlash_WriteProtectStateGet
 24529 ;;		_MSDCheckForErrorCases
 24530 ;;		_MSDComputeDeviceInAndResidue
 24531 ;;		_MSDErrorHandler
 24532 ;;		_MSDReadHandler
 24533 ;;		_MSDWriteHandler
 24534 ;;		_ResetSenseData
 24535 ;;		_USBTransferOnePacket
 24536 ;;		_memcpy
 24537 ;; This function is called by:
 24538 ;;		_MSDProcessCommand
 24539 ;;		_MSDProcessCommandMediaAbsent
 24540 ;; This function uses a non-reentrant model
 24541 ;;
 24542                           
 24543                           	psect	text84
 24544  00BD26                     __ptext84:
 24545                           	opt stack 0
 24546  00BD26                     _MSDProcessCommandMediaPresent:
 24547                           	opt stack 10
 24548                           
 24549                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 24550                           
 24551                           ;incstack = 0
 24552  00BD26  D1BF               	goto	l630
 24553  00BD28                     
 24554                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 24555  00BD28  ECBA  F06E         	call	_MSDReadHandler	;wreg free
 24556  00BD2C  0900               	iorlw	0
 24557  00BD2E  A4D8               	btfss	status,2,c
 24558  00BD30  0012               	return	
 24559                           
 24560                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 24561  00BD32  0100               	movlb	0	; () banked
 24562  00BD34  69D1               	setf	_MSDCommandState& (0+255),b
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 24566  00BD36  0012               	return	
 24567  00BD38                     
 24568                           ; BSR set to: 0
 24569                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 24570                           
 24571                           ; BSR set to: 0
 24572  00BD38  EC31  F065         	call	_MSDWriteHandler	;wreg free
 24573  00BD3C  0900               	iorlw	0
 24574  00BD3E  A4D8               	btfss	status,2,c
 24575  00BD40  0012               	return	
 24576                           
 24577                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 24578  00BD42  0100               	movlb	0	; () banked
 24579  00BD44  69D1               	setf	_MSDCommandState& (0+255),b
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 24583  00BD46  0012               	return	
 24584  00BD48                     
 24585                           ; BSR set to: 0
 24586                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 24587                           
 24588                           ; BSR set to: 0
 24589  00BD48  05D0               	decf	_MSDHostNoData& (0+255),w,b
 24590  00BD4A  A4D8               	btfss	status,2,c
 24591  00BD4C  D002               	goto	l637
 24592                           
 24593                           ; BSR set to: 0
 24594                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 24595  00BD4E  69D1               	setf	_MSDCommandState& (0+255),b
 24596                           
 24597                           ;usb_device_msd.c: 751: break;
 24598  00BD50  0012               	return	
 24599  00BD52                     l637:
 24600                           
 24601                           ; BSR set to: 0
 24602                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 24603  00BD52  C112  F01B         	movff	_gblCBW+18,_TransferLength+1
 24604                           
 24605                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 24606  00BD56  C113  F01A         	movff	_gblCBW+19,_TransferLength
 24607                           
 24608                           ; BSR set to: 0
 24609                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 24610  00BD5A  C01A  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 24611  00BD5E  C01B  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 24612  00BD62  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 24613  00BD64  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 24614  00BD66  EC67  F07E         	call	_MSDCheckForErrorCases	;wreg free
 24615  00BD6A  0900               	iorlw	0
 24616  00BD6C  A4D8               	btfss	status,2,c
 24617  00BD6E  0012               	return	
 24618                           
 24619                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 24620                           
 24621                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 24622  00BD70  0E00               	movlw	0
 24623  00BD72  0100               	movlb	0	; () banked
 24624  00BD74  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 24625  00BD76  0E24               	movlw	36
 24626  00BD78  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 24627  00BD7A  EC6A  F086         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24628                           
 24629                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 24630  00BD7E  0E00               	movlw	0
 24631  00BD80  0100               	movlb	0	; () banked
 24632  00BD82  6F60               	movwf	memcpy@d1& (0+255),b
 24633  00BD84  0E06               	movlw	6
 24634  00BD86  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24635  00BD88  0E60               	movlw	low _inq_resp
 24636  00BD8A  6F62               	movwf	memcpy@s1& (0+255),b
 24637  00BD8C  0EA1               	movlw	high _inq_resp
 24638  00BD8E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24639  00BD90  0E00               	movlw	0
 24640  00BD92  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24641  00BD94  0E24               	movlw	36
 24642  00BD96  6F64               	movwf	memcpy@n& (0+255),b
 24643  00BD98  ECE9  F08D         	call	_memcpy	;wreg free
 24644                           
 24645                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 24646  00BD9C  0EFD               	movlw	253
 24647  00BD9E  0100               	movlb	0	; () banked
 24648  00BDA0  6FD1               	movwf	_MSDCommandState& (0+255),b
 24649                           
 24650                           ;usb_device_msd.c: 773: break;
 24651  00BDA2  0012               	return	
 24652  00BDA4                     
 24653                           ; BSR set to: 0
 24654                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 24655                           
 24656                           ; BSR set to: 0
 24657  00BDA4  C1AD  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 24658  00BDA8  C1AE  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 24659  00BDAC  EE21  F09B         	lfsr	2,_LUN+3
 24660  00BDB0  D801               	call	u18088
 24661  00BDB2  D00A               	goto	u18089
 24662  00BDB4                     u18088:
 24663  00BDB4  0005               	push	
 24664  00BDB6  6EFA               	movwf	pclath,c
 24665  00BDB8  50DE               	movf	postinc2,w,c
 24666  00BDBA  6EFD               	movwf	tosl,c
 24667  00BDBC  50DE               	movf	postinc2,w,c
 24668  00BDBE  6EFE               	movwf	tosh,c
 24669  00BDC0  50DE               	movf	postinc2,w,c
 24670  00BDC2  6EFF               	movwf	tosu,c
 24671  00BDC4  50FA               	movf	pclath,w,c
 24672  00BDC6  0012               	return		;indir
 24673  00BDC8                     u18089:
 24674  00BDC8  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 24675  00BDCC  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 24676  00BDD0  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 24677  00BDD4  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 24678                           
 24679                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 24680  00BDD8  C1AD  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 24681  00BDDC  C1AE  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 24682  00BDE0  EE21  F09E         	lfsr	2,_LUN+6
 24683  00BDE4  D801               	call	u18098
 24684  00BDE6  D00A               	goto	u18099
 24685  00BDE8                     u18098:
 24686  00BDE8  0005               	push	
 24687  00BDEA  6EFA               	movwf	pclath,c
 24688  00BDEC  50DE               	movf	postinc2,w,c
 24689  00BDEE  6EFD               	movwf	tosl,c
 24690  00BDF0  50DE               	movf	postinc2,w,c
 24691  00BDF2  6EFE               	movwf	tosh,c
 24692  00BDF4  50DE               	movf	postinc2,w,c
 24693  00BDF6  6EFF               	movwf	tosu,c
 24694  00BDF8  50FA               	movf	pclath,w,c
 24695  00BDFA  0012               	return		;indir
 24696  00BDFC                     u18099:
 24697  00BDFC  0100               	movlb	0	; () banked
 24698  00BDFE  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 24699  00BE02  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 24700  00BE06  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 24701  00BE08  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 24702                           
 24703                           ; BSR set to: 0
 24704                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 24705  00BE0A  EE26 F000          	lfsr	2,1536
 24706  00BE0E  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 24707                           
 24708                           ; BSR set to: 0
 24709                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 24710  00BE12  EE26 F001          	lfsr	2,1537	;volatile
 24711  00BE16  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 24712                           
 24713                           ; BSR set to: 0
 24714                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 24715  00BE1A  EE26 F002          	lfsr	2,1538	;volatile
 24716  00BE1E  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 24720  00BE22  EE26 F003          	lfsr	2,1539	;volatile
 24721  00BE26  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 24722                           
 24723                           ; BSR set to: 0
 24724                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 24725  00BE2A  EE26 F004          	lfsr	2,1540	;volatile
 24726  00BE2E  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 24727                           
 24728                           ; BSR set to: 0
 24729                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 24730  00BE32  EE26 F005          	lfsr	2,1541	;volatile
 24731  00BE36  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 24735  00BE3A  EE26 F006          	lfsr	2,1542	;volatile
 24736  00BE3E  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 24737                           
 24738                           ; BSR set to: 0
 24739                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 24740  00BE42  EE26 F007          	lfsr	2,1543	;volatile
 24741  00BE46  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 24742                           
 24743                           ; BSR set to: 0
 24744                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 24745  00BE4A  0E00               	movlw	0
 24746  00BE4C  6E1B               	movwf	_TransferLength+1,c
 24747  00BE4E  0E08               	movlw	8
 24748  00BE50  6E1A               	movwf	_TransferLength,c
 24749                           
 24750                           ; BSR set to: 0
 24751                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 24752  00BE52  0E00               	movlw	0
 24753  00BE54  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 24754  00BE56  0E08               	movlw	8
 24755  00BE58  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 24756  00BE5A  EC6A  F086         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24757                           
 24758                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 24759  00BE5E  0EFD               	movlw	253
 24760  00BE60  0100               	movlb	0	; () banked
 24761  00BE62  6FD1               	movwf	_MSDCommandState& (0+255),b
 24762                           
 24763                           ;usb_device_msd.c: 802: break;
 24764  00BE64  0012               	return	
 24765  00BE66                     
 24766                           ; BSR set to: 0
 24767                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 24768                           
 24769                           ; BSR set to: 0
 24770  00BE66  05D0               	decf	_MSDHostNoData& (0+255),w,b
 24771  00BE68  A4D8               	btfss	status,2,c
 24772  00BE6A  D002               	goto	l641
 24773                           
 24774                           ; BSR set to: 0
 24775                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 24776  00BE6C  69D1               	setf	_MSDCommandState& (0+255),b
 24777                           
 24778                           ;usb_device_msd.c: 814: break;
 24779  00BE6E  0012               	return	
 24780  00BE70                     l641:
 24781                           
 24782                           ; BSR set to: 0
 24783                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 24784                           
 24785                           ; BSR set to: 0
 24786  00BE70  0E00               	movlw	0
 24787  00BE72  6E1B               	movwf	_TransferLength+1,c
 24788  00BE74  0E12               	movlw	18
 24789  00BE76  6E1A               	movwf	_TransferLength,c
 24790                           
 24791                           ; BSR set to: 0
 24792                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 24793  00BE78  0E00               	movlw	0
 24794  00BE7A  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 24795  00BE7C  0E12               	movlw	18
 24796  00BE7E  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 24797  00BE80  EC6A  F086         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24798                           
 24799                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 24800  00BE84  0E00               	movlw	0
 24801  00BE86  0100               	movlb	0	; () banked
 24802  00BE88  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 24803  00BE8A                     l18273:
 24804                           
 24805                           ; BSR set to: 0
 24806  00BE8A  0E11               	movlw	17
 24807  00BE8C  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 24808  00BE8E  D001               	goto	l642
 24809  00BE90  D014               	goto	u18120
 24810  00BE92                     l642:
 24811                           
 24812                           ; BSR set to: 0
 24813                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 24814                           
 24815                           ; BSR set to: 0
 24816  00BE92  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 24817  00BE94  0D01               	mullw	1
 24818  00BE96  0E1F               	movlw	low _gblSenseData
 24819  00BE98  24F3               	addwf	prodl,w,c
 24820  00BE9A  6ED9               	movwf	fsr2l,c
 24821  00BE9C  0E01               	movlw	high _gblSenseData
 24822  00BE9E  20F4               	addwfc	prodh,w,c
 24823  00BEA0  6EDA               	movwf	fsr2h,c
 24824  00BEA2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 24825  00BEA4  0D01               	mullw	1
 24826  00BEA6  0E00               	movlw	0
 24827  00BEA8  24F3               	addwf	prodl,w,c
 24828  00BEAA  6EE1               	movwf	fsr1l,c
 24829  00BEAC  0E06               	movlw	6
 24830  00BEAE  20F4               	addwfc	prodh,w,c
 24831  00BEB0  6EE2               	movwf	fsr1h,c
 24832  00BEB2  CFDF FFE7          	movff	indf2,indf1
 24833                           
 24834                           ; BSR set to: 0
 24835  00BEB6  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 24836  00BEB8  D7E8               	goto	l18273
 24837  00BEBA                     u18120:
 24838                           
 24839                           ; BSR set to: 0
 24840                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 24841                           
 24842                           ; BSR set to: 0
 24843  00BEBA  0EFD               	movlw	253
 24844  00BEBC  6FD1               	movwf	_MSDCommandState& (0+255),b
 24845                           
 24846                           ;usb_device_msd.c: 827: break;
 24847  00BEBE  0012               	return	
 24848  00BEC0                     l644:
 24849                           
 24850                           ; BSR set to: 0
 24851                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 24852  00BEC0  0E03               	movlw	3
 24853  00BEC2  CFE8 F600          	movff	wreg,1536
 24854                           
 24855                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 24856  00BEC6  0E00               	movlw	0
 24857  00BEC8  CFE8 F601          	movff	wreg,1537	;volatile
 24858                           
 24859                           ; BSR set to: 0
 24860                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 24861  00BECC  C1AD  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 24862  00BED0  C1AE  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 24863  00BED4  EE21  F0A7         	lfsr	2,_LUN+15
 24864  00BED8  D801               	call	u18138
 24865  00BEDA  D00A               	goto	u18139
 24866  00BEDC                     u18138:
 24867  00BEDC  0005               	push	
 24868  00BEDE  6EFA               	movwf	pclath,c
 24869  00BEE0  50DE               	movf	postinc2,w,c
 24870  00BEE2  6EFD               	movwf	tosl,c
 24871  00BEE4  50DE               	movf	postinc2,w,c
 24872  00BEE6  6EFE               	movwf	tosh,c
 24873  00BEE8  50DE               	movf	postinc2,w,c
 24874  00BEEA  6EFF               	movwf	tosu,c
 24875  00BEEC  50FA               	movf	pclath,w,c
 24876  00BEEE  0012               	return		;indir
 24877  00BEF0                     u18139:
 24878  00BEF0  0900               	iorlw	0
 24879  00BEF2  A4D8               	btfss	status,2,c
 24880  00BEF4  D005               	goto	l646
 24881  00BEF6  0E00               	movlw	0
 24882  00BEF8  0100               	movlb	0	; () banked
 24883  00BEFA  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 24884  00BEFC  0E00               	movlw	0
 24885  00BEFE  D004               	goto	L43
 24886  00BF00                     l646:
 24887                           
 24888                           ; BSR set to: 0
 24889  00BF00  0E00               	movlw	0
 24890  00BF02  0100               	movlb	0	; () banked
 24891  00BF04  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 24892  00BF06  0E80               	movlw	128
 24893  00BF08                     L43:
 24894  00BF08  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 24895                           
 24896                           ; BSR set to: 0
 24897                           
 24898                           ; BSR set to: 0
 24899  00BF0A  EE26 F002          	lfsr	2,1538	;volatile
 24900  00BF0E  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 24901                           
 24902                           ; BSR set to: 0
 24903                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 24904  00BF12  0E00               	movlw	0
 24905  00BF14  CFE8 F603          	movff	wreg,1539	;volatile
 24906                           
 24907                           ; BSR set to: 0
 24908                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 24909  00BF18  0E00               	movlw	0
 24910  00BF1A  6E1B               	movwf	_TransferLength+1,c
 24911  00BF1C  0E04               	movlw	4
 24912  00BF1E  6E1A               	movwf	_TransferLength,c
 24913                           
 24914                           ; BSR set to: 0
 24915                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 24916  00BF20  0E00               	movlw	0
 24917  00BF22  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 24918  00BF24  0E04               	movlw	4
 24919  00BF26  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 24920  00BF28  EC6A  F086         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24921                           
 24922                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 24923  00BF2C  0EFD               	movlw	253
 24924  00BF2E  0100               	movlb	0	; () banked
 24925  00BF30  6FD1               	movwf	_MSDCommandState& (0+255),b
 24926                           
 24927                           ;usb_device_msd.c: 839: break;
 24928  00BF32  0012               	return	
 24929  00BF34                     
 24930                           ; BSR set to: 0
 24931                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 24932                           
 24933                           ; BSR set to: 0
 24934  00BF34  0101               	movlb	1	; () banked
 24935  00BF36  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24936  00BF38  0BF0               	andlw	-16
 24937  00BF3A  0905               	iorlw	5
 24938  00BF3C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24939                           
 24940                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 24941  00BF3E  0E20               	movlw	32
 24942  00BF40  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24943                           
 24944                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 24945  00BF42  0E00               	movlw	0
 24946  00BF44  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24947                           
 24948                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 24949  00BF46  0E01               	movlw	1
 24950  00BF48  010D               	movlb	13	; () banked
 24951  00BF4A  6F8C               	movwf	140,b	;volatile
 24952                           
 24953                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 24954  00BF4C  0E00               	movlw	0
 24955  00BF4E  6F88               	movwf	136,b	;volatile
 24956  00BF50  0E00               	movlw	0
 24957  00BF52  6F89               	movwf	137,b	;volatile
 24958  00BF54  0E00               	movlw	0
 24959  00BF56  6F8A               	movwf	138,b	;volatile
 24960  00BF58  0E00               	movlw	0
 24961  00BF5A  6F8B               	movwf	139,b	;volatile
 24962                           
 24963                           ; BSR set to: 13
 24964                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 24965  00BF5C  0100               	movlb	0	; () banked
 24966  00BF5E  69D1               	setf	_MSDCommandState& (0+255),b
 24967                           
 24968                           ;usb_device_msd.c: 848: break;
 24969  00BF60  0012               	return	
 24970  00BF62                     
 24971                           ; BSR set to: 0
 24972                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 24973                           
 24974                           ; BSR set to: 0
 24975  00BF62  0E00               	movlw	0
 24976  00BF64  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 24977  00BF66  0E00               	movlw	0
 24978  00BF68  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 24979  00BF6A  0E00               	movlw	0
 24980  00BF6C  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 24981  00BF6E  0E00               	movlw	0
 24982  00BF70  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 24983  00BF72  EC67  F07E         	call	_MSDCheckForErrorCases	;wreg free
 24984  00BF76  0900               	iorlw	0
 24985  00BF78  A4D8               	btfss	status,2,c
 24986  00BF7A  0012               	return	
 24987                           
 24988                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 24989                           
 24990                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 24991  00BF7C  0101               	movlb	1	; () banked
 24992  00BF7E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24993  00BF80  0B0F               	andlw	15
 24994  00BF82  0A06               	xorlw	6
 24995  00BF84  A4D8               	btfss	status,2,c
 24996  00BF86  D007               	goto	l652
 24997                           
 24998                           ; BSR set to: 1
 24999  00BF88  010D               	movlb	13	; () banked
 25000  00BF8A  058C               	decf	140,w,b	;volatile
 25001  00BF8C  A4D8               	btfss	status,2,c
 25002  00BF8E  D003               	goto	l652
 25003                           
 25004                           ; BSR set to: 13
 25005                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 25006  00BF90  0100               	movlb	0	; () banked
 25007  00BF92  69D1               	setf	_MSDCommandState& (0+255),b
 25008                           
 25009                           ;usb_device_msd.c: 870: }
 25010  00BF94  0012               	return	
 25011  00BF96                     l652:
 25012                           
 25013                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 25014                           
 25015                           ; BSR set to: 0
 25016  00BF96  EC87  F08D         	call	_ResetSenseData	;wreg free
 25017                           
 25018                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 25019  00BF9A  0E00               	movlw	0
 25020  00BF9C  010D               	movlb	13	; () banked
 25021  00BF9E  6F88               	movwf	136,b	;volatile
 25022  00BFA0  0E00               	movlw	0
 25023  00BFA2  6F89               	movwf	137,b	;volatile
 25024  00BFA4  0E00               	movlw	0
 25025  00BFA6  6F8A               	movwf	138,b	;volatile
 25026  00BFA8  0E00               	movlw	0
 25027  00BFAA  6F8B               	movwf	139,b	;volatile
 25028                           
 25029                           ; BSR set to: 13
 25030                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 25031  00BFAC  0100               	movlb	0	; () banked
 25032  00BFAE  69D1               	setf	_MSDCommandState& (0+255),b
 25033                           
 25034                           ; BSR set to: 0
 25035                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 25036  00BFB0  0012               	return	
 25037  00BFB2                     
 25038                           ; BSR set to: 0
 25039                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 25040                           
 25041                           ; BSR set to: 0
 25042                           
 25043                           ; BSR set to: 0
 25044  00BFB2  0E00               	movlw	0
 25045  00BFB4  010D               	movlb	13	; () banked
 25046  00BFB6  6F88               	movwf	136,b	;volatile
 25047  00BFB8  0E00               	movlw	0
 25048  00BFBA  6F89               	movwf	137,b	;volatile
 25049  00BFBC  0E00               	movlw	0
 25050  00BFBE  6F8A               	movwf	138,b	;volatile
 25051  00BFC0  0E00               	movlw	0
 25052  00BFC2  6F8B               	movwf	139,b	;volatile
 25053                           
 25054                           ; BSR set to: 13
 25055                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 25056  00BFC4  0100               	movlb	0	; () banked
 25057  00BFC6  69D1               	setf	_MSDCommandState& (0+255),b
 25058                           
 25059                           ;usb_device_msd.c: 885: break;
 25060  00BFC8  0012               	return	
 25061  00BFCA                     
 25062                           ; BSR set to: 0
 25063                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 25064                           
 25065                           ; BSR set to: 0
 25066  00BFCA  51CC               	movf	_USBMSDInHandle& (0+255),w,b
 25067  00BFCC  11CD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25068  00BFCE  B4D8               	btfsc	status,2,c
 25069  00BFD0  D006               	goto	u18190
 25070                           
 25071                           ; BSR set to: 0
 25072  00BFD2  C0CC  FFD9         	movff	_USBMSDInHandle,fsr2l
 25073  00BFD6  C0CD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25074  00BFDA  BEDF               	btfsc	indf2,7,c
 25075  00BFDC  0012               	return	
 25076  00BFDE                     u18190:
 25077                           
 25078                           ; BSR set to: 0
 25079                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 25080                           
 25081                           ; BSR set to: 0
 25082  00BFDE  0101               	movlb	1	; () banked
 25083  00BFE0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25084  00BFE2  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25085  00BFE4  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25086  00BFE6  E104               	bnz	u18200
 25087  00BFE8  0E40               	movlw	64
 25088  00BFEA  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 25089  00BFEC  A0D8               	btfss	status,0,c
 25090  00BFEE  D00B               	goto	l660
 25091  00BFF0                     u18200:
 25092                           
 25093                           ; BSR set to: 1
 25094                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 25095  00BFF0  0E40               	movlw	64
 25096  00BFF2  0100               	movlb	0	; () banked
 25097  00BFF4  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 25098                           
 25099                           ; BSR set to: 0
 25100                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 25101  00BFF6  0E40               	movlw	64
 25102  00BFF8  0101               	movlb	1	; () banked
 25103  00BFFA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25104  00BFFC  0E00               	movlw	0
 25105  00BFFE  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25106  00C000  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25107  00C002  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25108                           
 25109                           ;usb_device_msd.c: 900: }
 25110  00C004  D00A               	goto	l661
 25111  00C006                     l660:
 25112                           
 25113                           ; BSR set to: 1
 25114                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 25115  00C006  C108  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 25116                           
 25117                           ; BSR set to: 1
 25118                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 25119  00C00A  0E00               	movlw	0
 25120  00C00C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 25121  00C00E  0E00               	movlw	0
 25122  00C010  6F09               	movwf	(_gblCBW+9)& (0+255),b
 25123  00C012  0E00               	movlw	0
 25124  00C014  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 25125  00C016  0E00               	movlw	0
 25126  00C018  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 25127  00C01A                     l661:
 25128                           
 25129                           ; BSR set to: 1
 25130                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 25131                           
 25132                           ; BSR set to: 1
 25133  00C01A  0100               	movlb	0	; () banked
 25134  00C01C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 25135  00C01E  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 25136  00C020  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 25137  00C022  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 25138  00C024  5C1A               	subwf	_TransferLength,w,c
 25139  00C026  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 25140  00C028  581B               	subwfb	_TransferLength+1,w,c
 25141  00C02A  A0D8               	btfss	status,0,c
 25142  00C02C  D005               	goto	l662
 25143                           
 25144                           ; BSR set to: 0
 25145                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 25146  00C02E  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 25147  00C030  5E1A               	subwf	_TransferLength,f,c
 25148  00C032  0E00               	movlw	0
 25149  00C034  5A1B               	subwfb	_TransferLength+1,f,c
 25150                           
 25151                           ;usb_device_msd.c: 918: }
 25152  00C036  D01A               	goto	u18230
 25153  00C038                     l662:
 25154                           
 25155                           ; BSR set to: 0
 25156                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 25157                           
 25158                           ; BSR set to: 0
 25159  00C038  0E00               	movlw	0
 25160  00C03A  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 25161  00C03C  D013               	goto	l664
 25162  00C03E                     
 25163                           ; BSR set to: 0
 25164                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 25165                           
 25166                           ; BSR set to: 0
 25167  00C03E  501A               	movf	_TransferLength,w,c
 25168  00C040  101B               	iorwf	_TransferLength+1,w,c
 25169  00C042  B4D8               	btfsc	status,2,c
 25170  00C044  D004               	goto	l666
 25171                           
 25172                           ; BSR set to: 0
 25173                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 25174  00C046  061A               	decf	_TransferLength,f,c
 25175  00C048  A0D8               	btfss	status,0,c
 25176  00C04A  061B               	decf	_TransferLength+1,f,c
 25177                           
 25178                           ;usb_device_msd.c: 932: }
 25179  00C04C  D00A               	goto	l667
 25180  00C04E                     l666:
 25181                           
 25182                           ; BSR set to: 0
 25183                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 25184                           
 25185                           ; BSR set to: 0
 25186  00C04E  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 25187  00C050  0D01               	mullw	1
 25188  00C052  0E00               	movlw	0
 25189  00C054  24F3               	addwf	prodl,w,c
 25190  00C056  6ED9               	movwf	fsr2l,c
 25191  00C058  0E06               	movlw	6
 25192  00C05A  20F4               	addwfc	prodh,w,c
 25193  00C05C  6EDA               	movwf	fsr2h,c
 25194  00C05E  0E00               	movlw	0
 25195  00C060  6EDF               	movwf	indf2,c
 25196  00C062                     l667:
 25197                           
 25198                           ; BSR set to: 0
 25199                           
 25200                           ; BSR set to: 0
 25201  00C062  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 25202  00C064                     l664:
 25203                           
 25204                           ; BSR set to: 0
 25205                           
 25206                           ; BSR set to: 0
 25207  00C064  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 25208  00C066  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 25209  00C068  A0D8               	btfss	status,0,c
 25210  00C06A  D7E9               	goto	l665
 25211  00C06C                     u18230:
 25212                           
 25213                           ; BSR set to: 0
 25214                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 25215                           
 25216                           ; BSR set to: 0
 25217                           
 25218                           ; BSR set to: 0
 25219  00C06C  0E01               	movlw	1
 25220  00C06E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 25221  00C070  0E00               	movlw	0
 25222  00C072  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 25223  00C074  0E06               	movlw	6
 25224  00C076  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 25225  00C078  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 25226  00C07C  0E02               	movlw	2
 25227  00C07E  ECE0  F07C         	call	_USBTransferOnePacket
 25228  00C082  C060  F0CC         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25229  00C086  C061  F0CD         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25230                           
 25231                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 25232  00C08A  0101               	movlb	1	; () banked
 25233  00C08C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25234  00C08E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25235  00C090  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25236  00C092  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 25237  00C094  A4D8               	btfss	status,2,c
 25238  00C096  0012               	return	
 25239                           
 25240                           ; BSR set to: 1
 25241                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 25242  00C098  0100               	movlb	0	; () banked
 25243  00C09A  69D1               	setf	_MSDCommandState& (0+255),b
 25244                           
 25245                           ; BSR set to: 0
 25246                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 25247                           
 25248                           ; BSR set to: 0
 25249                           
 25250                           ;usb_device_msd.c: 949: break;
 25251  00C09C  0012               	return	
 25252  00C09E                     
 25253                           ; BSR set to: 0
 25254                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 25255                           
 25256                           ; BSR set to: 0
 25257                           
 25258                           ;usb_device_msd.c: 954: default:
 25259                           
 25260                           ; BSR set to: 0
 25261  00C09E  0E7F               	movlw	127
 25262  00C0A0  ECB1  F079         	call	_MSDErrorHandler
 25263                           
 25264                           ;usb_device_msd.c: 960: }
 25265                           
 25266                           ;usb_device_msd.c: 959: break;
 25267  00C0A4  0012               	return	
 25268  00C0A6                     l630:
 25269  00C0A6  0100               	movlb	0	; () banked
 25270  00C0A8  51D1               	movf	_MSDCommandState& (0+255),w,b
 25271                           
 25272                           ; Switch size 1, requested type "space"
 25273                           ; Number of cases is 12, Range of values is 0 to 254
 25274                           ; switch strategies available:
 25275                           ; Name         Instructions Cycles
 25276                           ; simple_byte           37    19 (average)
 25277                           ;	Chosen strategy is simple_byte
 25278  00C0AA  0A00               	xorlw	0	; case 0
 25279  00C0AC  B4D8               	btfsc	status,2,c
 25280  00C0AE  D759               	goto	l650
 25281  00C0B0  0A03               	xorlw	3	; case 3
 25282  00C0B2  B4D8               	btfsc	status,2,c
 25283  00C0B4  D6D8               	goto	l640
 25284  00C0B6  0A11               	xorlw	17	; case 18
 25285  00C0B8  B4D8               	btfsc	status,2,c
 25286  00C0BA  D646               	goto	l636
 25287  00C0BC  0A08               	xorlw	8	; case 26
 25288  00C0BE  B4D8               	btfsc	status,2,c
 25289  00C0C0  D6FF               	goto	l644
 25290  00C0C2  0A01               	xorlw	1	; case 27
 25291  00C0C4  B4D8               	btfsc	status,2,c
 25292  00C0C6  D775               	goto	l654
 25293  00C0C8  0A05               	xorlw	5	; case 30
 25294  00C0CA  B4D8               	btfsc	status,2,c
 25295  00C0CC  D733               	goto	l649
 25296  00C0CE  0A3B               	xorlw	59	; case 37
 25297  00C0D0  B4D8               	btfsc	status,2,c
 25298  00C0D2  D668               	goto	l639
 25299  00C0D4  0A0D               	xorlw	13	; case 40
 25300  00C0D6  B4D8               	btfsc	status,2,c
 25301  00C0D8  D627               	goto	l631
 25302  00C0DA  0A02               	xorlw	2	; case 42
 25303  00C0DC  B4D8               	btfsc	status,2,c
 25304  00C0DE  D62C               	goto	l634
 25305  00C0E0  0A05               	xorlw	5	; case 47
 25306  00C0E2  B4D8               	btfsc	status,2,c
 25307  00C0E4  D766               	goto	l654
 25308  00C0E6  0AD2               	xorlw	210	; case 253
 25309  00C0E8  B4D8               	btfsc	status,2,c
 25310  00C0EA  D76F               	goto	l656
 25311  00C0EC  0A03               	xorlw	3	; case 254
 25312  00C0EE  D7D7               	goto	l670
 25313  00C0F0                     __end_of_MSDProcessCommandMediaPresent:
 25314                           	opt stack 0
 25315                           tosu	equ	0xFFF
 25316                           tosh	equ	0xFFE
 25317                           tosl	equ	0xFFD
 25318                           pclath	equ	0xFFA
 25319                           tblptru	equ	0xFF8
 25320                           tblptrh	equ	0xFF7
 25321                           tblptrl	equ	0xFF6
 25322                           tablat	equ	0xFF5
 25323                           prodh	equ	0xFF4
 25324                           prodl	equ	0xFF3
 25325                           intcon	equ	0xFF2
 25326                           postinc0	equ	0xFEE
 25327                           wreg	equ	0xFE8
 25328                           indf1	equ	0xFE7
 25329                           postdec1	equ	0xFE5
 25330                           plusw1	equ	0xFE3
 25331                           fsr1h	equ	0xFE2
 25332                           fsr1l	equ	0xFE1
 25333                           indf2	equ	0xFDF
 25334                           postinc2	equ	0xFDE
 25335                           postdec2	equ	0xFDD
 25336                           plusw2	equ	0xFDB
 25337                           fsr2h	equ	0xFDA
 25338                           fsr2l	equ	0xFD9
 25339                           status	equ	0xFD8
 25340                           
 25341 ;; *************** function _MSDWriteHandler *****************
 25342 ;; Defined at:
 25343 ;;		line 1188 in file "usb_device_msd.c"
 25344 ;; Parameters:    Size  Location     Type
 25345 ;;		None
 25346 ;; Auto vars:     Size  Location     Type
 25347 ;;		None
 25348 ;; Return value:  Size  Location     Type
 25349 ;;                  1    wreg      unsigned char 
 25350 ;; Registers used:
 25351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25352 ;; Tracked objects:
 25353 ;;		On entry : 0/0
 25354 ;;		On exit  : 0/0
 25355 ;;		Unchanged: 0/0
 25356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25359 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25360 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25361 ;;Total ram usage:        5 bytes
 25362 ;; Hardware stack levels used:    1
 25363 ;; Hardware stack levels required when called:   13
 25364 ;; This function calls:
 25365 ;;		_ExternalFlash_SectorWrite
 25366 ;;		_ExternalFlash_WriteProtectStateGet
 25367 ;;		_MSDCheckForErrorCases
 25368 ;;		_USBStallEndpoint
 25369 ;;		_USBTransferOnePacket
 25370 ;; This function is called by:
 25371 ;;		_MSDProcessCommandMediaPresent
 25372 ;; This function uses a non-reentrant model
 25373 ;;
 25374                           
 25375                           	psect	text85
 25376  00CA62                     __ptext85:
 25377                           	opt stack 0
 25378  00CA62                     _MSDWriteHandler:
 25379                           	opt stack 13
 25380                           
 25381                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 25382                           
 25383                           ;incstack = 0
 25384  00CA62  D158               	goto	l700
 25385  00CA64                     l701:
 25386                           
 25387                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 25388  00CA64  C111  F14A         	movff	_gblCBW+17,_LBA+3
 25389                           
 25390                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 25391  00CA68  C112  F149         	movff	_gblCBW+18,_LBA+2
 25392                           
 25393                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 25394  00CA6C  C113  F148         	movff	_gblCBW+19,_LBA+1
 25395                           
 25396                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 25397  00CA70  C114  F147         	movff	_gblCBW+20,_LBA
 25398                           
 25399                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 25400  00CA74  C116  F01B         	movff	_gblCBW+22,_TransferLength+1
 25401                           
 25402                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 25403  00CA78  C117  F01A         	movff	_gblCBW+23,_TransferLength
 25404                           
 25405                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25406  00CA7C  501A               	movf	_TransferLength,w,c
 25407  00CA7E  0100               	movlb	0	; () banked
 25408  00CA80  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 25409  00CA82  501B               	movf	_TransferLength+1,w,c
 25410  00CA84  6F72               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 25411  00CA86  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 25412  00CA88  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 25413  00CA8A  0E09               	movlw	9
 25414  00CA8C                     u17395:
 25415  00CA8C  90D8               	bcf	status,0,c
 25416  00CA8E  3771               	rlcf	??_MSDWriteHandler& (0+255),f,b
 25417  00CA90  3772               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 25418  00CA92  3773               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 25419  00CA94  3774               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 25420  00CA96  2EE8               	decfsz	wreg,f,c
 25421  00CA98  D7F9               	goto	u17395
 25422  00CA9A  C071  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 25423  00CA9E  C072  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25424  00CAA2  C073  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25425  00CAA6  C074  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25426  00CAAA  EC67  F07E         	call	_MSDCheckForErrorCases	;wreg free
 25427  00CAAE  0900               	iorlw	0
 25428  00CAB0  A4D8               	btfss	status,2,c
 25429  00CAB2  D141               	goto	l703
 25430                           
 25431                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 25432                           
 25433                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 25434  00CAB4  C1AD  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 25435  00CAB8  C1AE  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 25436  00CABC  EE21  F0A7         	lfsr	2,_LUN+15
 25437  00CAC0  D801               	call	u17418
 25438  00CAC2  D00A               	goto	u17419
 25439  00CAC4                     u17418:
 25440  00CAC4  0005               	push	
 25441  00CAC6  6EFA               	movwf	pclath,c
 25442  00CAC8  50DE               	movf	postinc2,w,c
 25443  00CACA  6EFD               	movwf	tosl,c
 25444  00CACC  50DE               	movf	postinc2,w,c
 25445  00CACE  6EFE               	movwf	tosh,c
 25446  00CAD0  50DE               	movf	postinc2,w,c
 25447  00CAD2  6EFF               	movwf	tosu,c
 25448  00CAD4  50FA               	movf	pclath,w,c
 25449  00CAD6  0012               	return		;indir
 25450  00CAD8                     u17419:
 25451  00CAD8  0900               	iorlw	0
 25452  00CADA  B4D8               	btfsc	status,2,c
 25453  00CADC  D016               	goto	l704
 25454                           
 25455                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 25456  00CADE  0E01               	movlw	1
 25457  00CAE0  010D               	movlb	13	; () banked
 25458  00CAE2  6F8C               	movwf	140,b	;volatile
 25459                           
 25460                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 25461  00CAE4  0101               	movlb	1	; () banked
 25462  00CAE6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25463  00CAE8  0BF0               	andlw	-16
 25464  00CAEA  0907               	iorlw	7
 25465  00CAEC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25466                           
 25467                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 25468  00CAEE  0E27               	movlw	39
 25469  00CAF0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25470                           
 25471                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 25472  00CAF2  0E00               	movlw	0
 25473  00CAF4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25474                           
 25475                           ; BSR set to: 1
 25476                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 25477  00CAF6  0E00               	movlw	0
 25478  00CAF8  0100               	movlb	0	; () banked
 25479  00CAFA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25480  00CAFC  0E02               	movlw	2
 25481  00CAFE  EC5B  F07C         	call	_USBStallEndpoint
 25482                           
 25483                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 25484  00CB02  0E00               	movlw	0
 25485  00CB04  6E25               	movwf	_MSDWriteState,c
 25486                           
 25487                           ;usb_device_msd.c: 1228: return MSDWriteState;
 25488  00CB06  5025               	movf	_MSDWriteState,w,c
 25489  00CB08  0012               	return	
 25490  00CB0A                     l704:
 25491                           
 25492                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 25493  00CB0A  0E01               	movlw	1
 25494  00CB0C  0100               	movlb	0	; () banked
 25495  00CB0E  6FD2               	movwf	_MSD_State& (0+255),b
 25496  00CB10                     
 25497                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 25498                           
 25499                           ; BSR set to: 0
 25500  00CB10  501A               	movf	_TransferLength,w,c
 25501  00CB12  101B               	iorwf	_TransferLength+1,w,c
 25502  00CB14  B4D8               	btfsc	status,2,c
 25503  00CB16  D0FB               	goto	l17917
 25504                           
 25505                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 25506                           
 25507                           ;usb_device_msd.c: 1238: break;
 25508                           
 25509                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 25510  00CB18  0E03               	movlw	3
 25511  00CB1A  6E25               	movwf	_MSDWriteState,c
 25512                           
 25513                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 25514  00CB1C  0E00               	movlw	0
 25515  00CB1E  0101               	movlb	1	; () banked
 25516  00CB20  6F65               	movwf	_ptrNextData& (0+255),b
 25517  00CB22  0E06               	movlw	6
 25518  00CB24  6F66               	movwf	(_ptrNextData+1)& (0+255),b
 25519                           
 25520                           ; BSR set to: 1
 25521                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 25522  00CB26  0E00               	movlw	0
 25523  00CB28  010D               	movlb	13	; () banked
 25524  00CB2A  6F88               	movwf	136,b	;volatile
 25525  00CB2C  0E02               	movlw	2
 25526  00CB2E  6F89               	movwf	137,b	;volatile
 25527  00CB30  0E00               	movlw	0
 25528  00CB32  6F8A               	movwf	138,b	;volatile
 25529  00CB34  0E00               	movlw	0
 25530  00CB36  6F8B               	movwf	139,b	;volatile
 25531  00CB38                     l708:
 25532                           
 25533                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 25534  00CB38  010D               	movlb	13	; () banked
 25535  00CB3A  5188               	movf	136,w,b	;volatile
 25536  00CB3C  1189               	iorwf	137,w,b	;volatile
 25537  00CB3E  118A               	iorwf	138,w,b	;volatile
 25538  00CB40  118B               	iorwf	139,w,b	;volatile
 25539  00CB42  B4D8               	btfsc	status,2,c
 25540  00CB44  D01D               	goto	l709
 25541                           
 25542                           ; BSR set to: 13
 25543                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 25544  00CB46  0100               	movlb	0	; () banked
 25545  00CB48  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 25546  00CB4A  11CF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25547  00CB4C  B4D8               	btfsc	status,2,c
 25548  00CB4E  D006               	goto	l710
 25549                           
 25550                           ; BSR set to: 0
 25551  00CB50  C0CE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25552  00CB54  C0CF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25553  00CB58  BEDF               	btfsc	indf2,7,c
 25554  00CB5A  D0ED               	goto	l703
 25555  00CB5C                     l710:
 25556                           
 25557                           ; BSR set to: 0
 25558                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 25559                           
 25560                           ; BSR set to: 0
 25561  00CB5C  0E00               	movlw	0
 25562  00CB5E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 25563  00CB60  C165  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 25564  00CB64  C166  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25565  00CB68  0E40               	movlw	64
 25566  00CB6A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 25567  00CB6C  0E02               	movlw	2
 25568  00CB6E  ECE0  F07C         	call	_USBTransferOnePacket
 25569  00CB72  C060  F0CE         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 25570  00CB76  C061  F0CF         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 25571                           
 25572                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 25573  00CB7A  0E04               	movlw	4
 25574  00CB7C  6E25               	movwf	_MSDWriteState,c
 25575                           
 25576                           ;usb_device_msd.c: 1260: }
 25577  00CB7E  D023               	goto	l711
 25578  00CB80                     l709:
 25579                           
 25580                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 25581  00CB80  C1AD  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 25582  00CB84  C1AE  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 25583  00CB88  EE21  F0A7         	lfsr	2,_LUN+15
 25584  00CB8C  D801               	call	u17478
 25585  00CB8E  D00A               	goto	u17479
 25586  00CB90                     u17478:
 25587  00CB90  0005               	push	
 25588  00CB92  6EFA               	movwf	pclath,c
 25589  00CB94  50DE               	movf	postinc2,w,c
 25590  00CB96  6EFD               	movwf	tosl,c
 25591  00CB98  50DE               	movf	postinc2,w,c
 25592  00CB9A  6EFE               	movwf	tosh,c
 25593  00CB9C  50DE               	movf	postinc2,w,c
 25594  00CB9E  6EFF               	movwf	tosu,c
 25595  00CBA0  50FA               	movf	pclath,w,c
 25596  00CBA2  0012               	return		;indir
 25597  00CBA4                     u17479:
 25598  00CBA4  0900               	iorlw	0
 25599  00CBA6  B4D8               	btfsc	status,2,c
 25600  00CBA8  D00C               	goto	l712
 25601                           
 25602                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 25603  00CBAA  0E01               	movlw	1
 25604  00CBAC  010D               	movlb	13	; () banked
 25605  00CBAE  6F8C               	movwf	140,b	;volatile
 25606                           
 25607                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 25608  00CBB0  0101               	movlb	1	; () banked
 25609  00CBB2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25610  00CBB4  0BF0               	andlw	-16
 25611  00CBB6  0902               	iorlw	2
 25612  00CBB8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25613                           
 25614                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 25615  00CBBA  0E27               	movlw	39
 25616  00CBBC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25617                           
 25618                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 25619  00CBBE  0E00               	movlw	0
 25620  00CBC0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25621  00CBC2                     l712:
 25622                           
 25623                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 25624  00CBC2  0E02               	movlw	2
 25625  00CBC4  D0A5               	goto	L47
 25626  00CBC6                     l711:
 25627                           
 25628                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 25629                           
 25630                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 25631  00CBC6  0100               	movlb	0	; () banked
 25632  00CBC8  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 25633  00CBCA  11CF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25634  00CBCC  B4D8               	btfsc	status,2,c
 25635  00CBCE  D006               	goto	l714
 25636                           
 25637                           ; BSR set to: 0
 25638  00CBD0  C0CE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25639  00CBD4  C0CF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25640  00CBD8  BEDF               	btfsc	indf2,7,c
 25641  00CBDA  D0AD               	goto	l703
 25642  00CBDC                     l714:
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 25646                           
 25647                           ; BSR set to: 0
 25648  00CBDC  EE20 F001          	lfsr	2,1
 25649  00CBE0  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 25650  00CBE2  26D9               	addwf	fsr2l,f,c
 25651  00CBE4  51CF               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 25652  00CBE6  22DA               	addwfc	fsr2h,f,c
 25653  00CBE8  50DF               	movf	indf2,w,c
 25654  00CBEA  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 25655  00CBEC  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 25656  00CBF0  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 25657  00CBF2  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 25658  00CBF4  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 25659  00CBF6  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 25660  00CBF8  0101               	movlb	1	; () banked
 25661  00CBFA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25662  00CBFC  0100               	movlb	0	; () banked
 25663  00CBFE  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 25664  00CC00  0101               	movlb	1	; () banked
 25665  00CC02  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25666  00CC04  0100               	movlb	0	; () banked
 25667  00CC06  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 25668  00CC08  0101               	movlb	1	; () banked
 25669  00CC0A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25670  00CC0C  0100               	movlb	0	; () banked
 25671  00CC0E  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 25672  00CC10  0101               	movlb	1	; () banked
 25673  00CC12  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25674                           
 25675                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 25676  00CC14  0100               	movlb	0	; () banked
 25677  00CC16  EE20 F001          	lfsr	2,1
 25678  00CC1A  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 25679  00CC1C  26D9               	addwf	fsr2l,f,c
 25680  00CC1E  51CF               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 25681  00CC20  22DA               	addwfc	fsr2h,f,c
 25682  00CC22  50DF               	movf	indf2,w,c
 25683  00CC24  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 25684  00CC26  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 25685  00CC2A  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 25686  00CC2C  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 25687  00CC2E  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 25688  00CC30  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 25689  00CC32  010D               	movlb	13	; () banked
 25690  00CC34  5F88               	subwf	136,f,b	;volatile
 25691  00CC36  0100               	movlb	0	; () banked
 25692  00CC38  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 25693  00CC3A  010D               	movlb	13	; () banked
 25694  00CC3C  5B89               	subwfb	137,f,b	;volatile
 25695  00CC3E  0100               	movlb	0	; () banked
 25696  00CC40  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 25697  00CC42  010D               	movlb	13	; () banked
 25698  00CC44  5B8A               	subwfb	138,f,b	;volatile
 25699  00CC46  0100               	movlb	0	; () banked
 25700  00CC48  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 25701  00CC4A  010D               	movlb	13	; () banked
 25702  00CC4C  5B8B               	subwfb	139,f,b	;volatile
 25703                           
 25704                           ; BSR set to: 13
 25705                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 25706  00CC4E  0E40               	movlw	64
 25707  00CC50  0101               	movlb	1	; () banked
 25708  00CC52  2765               	addwf	_ptrNextData& (0+255),f,b
 25709  00CC54  0E00               	movlw	0
 25710  00CC56  2366               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25711                           
 25712                           ; BSR set to: 1
 25713                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 25714  00CC58  0E03               	movlw	3
 25715  00CC5A  D05A               	goto	L47
 25716  00CC5C                     
 25717                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 25718                           
 25719                           ; BSR set to: 1
 25720  00CC5C  010D               	movlb	13	; () banked
 25721  00CC5E  518C               	movf	140,w,b	;volatile
 25722  00CC60  A4D8               	btfss	status,2,c
 25723  00CC62  D040               	goto	l719
 25724                           
 25725                           ; BSR set to: 13
 25726                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 25727  00CC64  C1AD  F060         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 25728  00CC68  C1AE  F061         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 25729  00CC6C  C147  F062         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 25730  00CC70  C148  F063         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 25731  00CC74  C149  F064         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 25732  00CC78  C14A  F065         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 25733  00CC7C  0E00               	movlw	0
 25734  00CC7E  0100               	movlb	0	; () banked
 25735  00CC80  6F66               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 25736  00CC82  0E06               	movlw	6
 25737  00CC84  6F67               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 25738  00CC86  0101               	movlb	1	; () banked
 25739  00CC88  5147               	movf	_LBA& (0+255),w,b
 25740  00CC8A  1148               	iorwf	(_LBA+1)& (0+255),w,b
 25741  00CC8C  1149               	iorwf	(_LBA+2)& (0+255),w,b
 25742  00CC8E  114A               	iorwf	(_LBA+3)& (0+255),w,b
 25743  00CC90  A4D8               	btfss	status,2,c
 25744  00CC92  D002               	goto	u17520
 25745  00CC94  0E01               	movlw	1
 25746  00CC96  D001               	goto	u17530
 25747  00CC98                     u17520:
 25748  00CC98  0E00               	movlw	0
 25749  00CC9A                     u17530:
 25750  00CC9A  0100               	movlb	0	; () banked
 25751  00CC9C  6F68               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 25752  00CC9E  EE21  F0AA         	lfsr	2,_LUN+18
 25753  00CCA2  D801               	call	u17548
 25754  00CCA4  D00A               	goto	u17549
 25755  00CCA6                     u17548:
 25756  00CCA6  0005               	push	
 25757  00CCA8  6EFA               	movwf	pclath,c
 25758  00CCAA  50DE               	movf	postinc2,w,c
 25759  00CCAC  6EFD               	movwf	tosl,c
 25760  00CCAE  50DE               	movf	postinc2,w,c
 25761  00CCB0  6EFE               	movwf	tosh,c
 25762  00CCB2  50DE               	movf	postinc2,w,c
 25763  00CCB4  6EFF               	movwf	tosu,c
 25764  00CCB6  50FA               	movf	pclath,w,c
 25765  00CCB8  0012               	return		;indir
 25766  00CCBA                     u17549:
 25767  00CCBA  06E8               	decf	wreg,f,c
 25768  00CCBC  B4D8               	btfsc	status,2,c
 25769  00CCBE  D012               	goto	l719
 25770                           
 25771                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 25772  00CCC0  0E64               	movlw	100
 25773  00CCC2  0101               	movlb	1	; () banked
 25774  00CCC4  616F               	cpfslt	_MSDRetryAttempt& (0+255),b
 25775  00CCC6  D002               	goto	l718
 25776                           
 25777                           ; BSR set to: 1
 25778                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 25779  00CCC8  2B6F               	incf	_MSDRetryAttempt& (0+255),f,b
 25780                           
 25781                           ;usb_device_msd.c: 1314: break;
 25782  00CCCA  D035               	goto	l703
 25783  00CCCC                     l718:
 25784                           
 25785                           ; BSR set to: 1
 25786                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 25787                           
 25788                           ; BSR set to: 1
 25789  00CCCC  0E01               	movlw	1
 25790  00CCCE  010D               	movlb	13	; () banked
 25791  00CCD0  6F8C               	movwf	140,b	;volatile
 25792                           
 25793                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 25794  00CCD2  0101               	movlb	1	; () banked
 25795  00CCD4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25796  00CCD6  0BF0               	andlw	-16
 25797  00CCD8  0903               	iorlw	3
 25798  00CCDA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25799                           
 25800                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 25801  00CCDC  0E00               	movlw	0
 25802  00CCDE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25803                           
 25804                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 25805  00CCE0  0E00               	movlw	0
 25806  00CCE2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25807  00CCE4                     l719:
 25808                           
 25809                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 25810                           
 25811                           ; BSR set to: 1
 25812                           
 25813                           ; BSR set to: 1
 25814                           
 25815                           ; BSR set to: 1
 25816  00CCE4  0E01               	movlw	1
 25817  00CCE6  0101               	movlb	1	; () banked
 25818  00CCE8  2747               	addwf	_LBA& (0+255),f,b
 25819  00CCEA  0E00               	movlw	0
 25820  00CCEC  2348               	addwfc	(_LBA+1)& (0+255),f,b
 25821  00CCEE  2349               	addwfc	(_LBA+2)& (0+255),f,b
 25822  00CCF0  234A               	addwfc	(_LBA+3)& (0+255),f,b
 25823                           
 25824                           ; BSR set to: 1
 25825                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 25826  00CCF2  061A               	decf	_TransferLength,f,c
 25827  00CCF4  A0D8               	btfss	status,0,c
 25828  00CCF6  061B               	decf	_TransferLength+1,f,c
 25829                           
 25830                           ; BSR set to: 1
 25831                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 25832  00CCF8  0E01               	movlw	1
 25833  00CCFA  D00A               	goto	L47
 25834  00CCFC                     
 25835                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 25836                           
 25837                           ; BSR set to: 1
 25838  00CCFC  0E02               	movlw	2
 25839  00CCFE  010D               	movlb	13	; () banked
 25840  00CD00  6F8C               	movwf	140,b	;volatile
 25841                           
 25842                           ; BSR set to: 13
 25843                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 25844  00CD02  0E00               	movlw	0
 25845  00CD04  0100               	movlb	0	; () banked
 25846  00CD06  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25847  00CD08  0E02               	movlw	2
 25848  00CD0A  EC5B  F07C         	call	_USBStallEndpoint
 25849  00CD0E                     l17917:
 25850                           
 25851                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 25852  00CD0E  0E00               	movlw	0
 25853  00CD10                     L47:
 25854  00CD10  6E25               	movwf	_MSDWriteState,c
 25855                           
 25856                           ;usb_device_msd.c: 1345: }
 25857                           
 25858                           ;usb_device_msd.c: 1344: break;
 25859  00CD12  D011               	goto	l703
 25860  00CD14                     l700:
 25861  00CD14  5025               	movf	_MSDWriteState,w,c
 25862                           
 25863                           ; Switch size 1, requested type "space"
 25864                           ; Number of cases is 5, Range of values is 0 to 4
 25865                           ; switch strategies available:
 25866                           ; Name         Instructions Cycles
 25867                           ; simple_byte           16     9 (average)
 25868                           ;	Chosen strategy is simple_byte
 25869  00CD16  0A00               	xorlw	0	; case 0
 25870  00CD18  B4D8               	btfsc	status,2,c
 25871  00CD1A  D6A4               	goto	l701
 25872  00CD1C  0A01               	xorlw	1	; case 1
 25873  00CD1E  B4D8               	btfsc	status,2,c
 25874  00CD20  D6F7               	goto	l706
 25875  00CD22  0A03               	xorlw	3	; case 2
 25876  00CD24  B4D8               	btfsc	status,2,c
 25877  00CD26  D79A               	goto	l715
 25878  00CD28  0A01               	xorlw	1	; case 3
 25879  00CD2A  B4D8               	btfsc	status,2,c
 25880  00CD2C  D705               	goto	l708
 25881  00CD2E  0A07               	xorlw	7	; case 4
 25882  00CD30  B4D8               	btfsc	status,2,c
 25883  00CD32  D749               	goto	l711
 25884  00CD34  D7E3               	goto	l720
 25885  00CD36                     l703:
 25886                           
 25887                           ;usb_device_msd.c: 1347: return MSDWriteState;
 25888  00CD36  5025               	movf	_MSDWriteState,w,c
 25889  00CD38  0012               	return	
 25890  00CD3A                     __end_of_MSDWriteHandler:
 25891                           	opt stack 0
 25892                           tosu	equ	0xFFF
 25893                           tosh	equ	0xFFE
 25894                           tosl	equ	0xFFD
 25895                           pclath	equ	0xFFA
 25896                           tblptru	equ	0xFF8
 25897                           tblptrh	equ	0xFF7
 25898                           tblptrl	equ	0xFF6
 25899                           tablat	equ	0xFF5
 25900                           prodh	equ	0xFF4
 25901                           prodl	equ	0xFF3
 25902                           intcon	equ	0xFF2
 25903                           postinc0	equ	0xFEE
 25904                           wreg	equ	0xFE8
 25905                           indf1	equ	0xFE7
 25906                           postdec1	equ	0xFE5
 25907                           plusw1	equ	0xFE3
 25908                           fsr1h	equ	0xFE2
 25909                           fsr1l	equ	0xFE1
 25910                           indf2	equ	0xFDF
 25911                           postinc2	equ	0xFDE
 25912                           postdec2	equ	0xFDD
 25913                           plusw2	equ	0xFDB
 25914                           fsr2h	equ	0xFDA
 25915                           fsr2l	equ	0xFD9
 25916                           status	equ	0xFD8
 25917                           
 25918 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 25919 ;; Defined at:
 25920 ;;		line 34 in file "external_flash.c"
 25921 ;; Parameters:    Size  Location     Type
 25922 ;;  config          2    0[BANK0 ] PTR void 
 25923 ;;		 -> NULL(0), 
 25924 ;; Auto vars:     Size  Location     Type
 25925 ;;		None
 25926 ;; Return value:  Size  Location     Type
 25927 ;;                  1    wreg      unsigned char 
 25928 ;; Registers used:
 25929 ;;		wreg
 25930 ;; Tracked objects:
 25931 ;;		On entry : 0/0
 25932 ;;		On exit  : 0/0
 25933 ;;		Unchanged: 0/0
 25934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25939 ;;Total ram usage:        2 bytes
 25940 ;; Hardware stack levels used:    1
 25941 ;; Hardware stack levels required when called:   10
 25942 ;; This function calls:
 25943 ;;		Nothing
 25944 ;; This function is called by:
 25945 ;;		_MSDWriteHandler
 25946 ;;		_MSDProcessCommandMediaPresent
 25947 ;; This function uses a non-reentrant model
 25948 ;;
 25949                           
 25950                           	psect	text86
 25951  012ADA                     __ptext86:
 25952                           	opt stack 0
 25953  012ADA                     _ExternalFlash_WriteProtectStateGet:
 25954                           	opt stack 15
 25955                           
 25956                           ;external_flash.c: 37: return 0;
 25957                           
 25958                           ;incstack = 0
 25959  012ADA  0E00               	movlw	0
 25960  012ADC  0012               	return	
 25961  012ADE                     __end_of_ExternalFlash_WriteProtectStateGet:
 25962                           	opt stack 0
 25963                           tosu	equ	0xFFF
 25964                           tosh	equ	0xFFE
 25965                           tosl	equ	0xFFD
 25966                           pclath	equ	0xFFA
 25967                           tblptru	equ	0xFF8
 25968                           tblptrh	equ	0xFF7
 25969                           tblptrl	equ	0xFF6
 25970                           tablat	equ	0xFF5
 25971                           prodh	equ	0xFF4
 25972                           prodl	equ	0xFF3
 25973                           intcon	equ	0xFF2
 25974                           postinc0	equ	0xFEE
 25975                           wreg	equ	0xFE8
 25976                           indf1	equ	0xFE7
 25977                           postdec1	equ	0xFE5
 25978                           plusw1	equ	0xFE3
 25979                           fsr1h	equ	0xFE2
 25980                           fsr1l	equ	0xFE1
 25981                           indf2	equ	0xFDF
 25982                           postinc2	equ	0xFDE
 25983                           postdec2	equ	0xFDD
 25984                           plusw2	equ	0xFDB
 25985                           fsr2h	equ	0xFDA
 25986                           fsr2l	equ	0xFD9
 25987                           status	equ	0xFD8
 25988                           
 25989 ;; *************** function _ExternalFlash_SectorWrite *****************
 25990 ;; Defined at:
 25991 ;;		line 56 in file "external_flash.c"
 25992 ;; Parameters:    Size  Location     Type
 25993 ;;  config          2    0[BANK0 ] PTR void 
 25994 ;;		 -> NULL(0), 
 25995 ;;  sector_addr     4    2[BANK0 ] unsigned long 
 25996 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 25997 ;;		 -> msd_buffer(512), 
 25998 ;;  allowWriteTo    1    8[BANK0 ] unsigned char 
 25999 ;; Auto vars:     Size  Location     Type
 26000 ;;		None
 26001 ;; Return value:  Size  Location     Type
 26002 ;;                  1    wreg      unsigned char 
 26003 ;; Registers used:
 26004 ;;		wreg
 26005 ;; Tracked objects:
 26006 ;;		On entry : 0/0
 26007 ;;		On exit  : 0/0
 26008 ;;		Unchanged: 0/0
 26009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26010 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26013 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26014 ;;Total ram usage:        9 bytes
 26015 ;; Hardware stack levels used:    1
 26016 ;; Hardware stack levels required when called:   10
 26017 ;; This function calls:
 26018 ;;		Nothing
 26019 ;; This function is called by:
 26020 ;;		_MSDWriteHandler
 26021 ;; This function uses a non-reentrant model
 26022 ;;
 26023                           
 26024                           	psect	text87
 26025  012ADE                     __ptext87:
 26026                           	opt stack 0
 26027  012ADE                     _ExternalFlash_SectorWrite:
 26028                           	opt stack 15
 26029                           
 26030                           ;external_flash.c: 69: return 1;
 26031                           
 26032                           ;incstack = 0
 26033  012ADE  0E01               	movlw	1
 26034  012AE0  0012               	return	
 26035  012AE2                     __end_of_ExternalFlash_SectorWrite:
 26036                           	opt stack 0
 26037                           tosu	equ	0xFFF
 26038                           tosh	equ	0xFFE
 26039                           tosl	equ	0xFFD
 26040                           pclath	equ	0xFFA
 26041                           tblptru	equ	0xFF8
 26042                           tblptrh	equ	0xFF7
 26043                           tblptrl	equ	0xFF6
 26044                           tablat	equ	0xFF5
 26045                           prodh	equ	0xFF4
 26046                           prodl	equ	0xFF3
 26047                           intcon	equ	0xFF2
 26048                           postinc0	equ	0xFEE
 26049                           wreg	equ	0xFE8
 26050                           indf1	equ	0xFE7
 26051                           postdec1	equ	0xFE5
 26052                           plusw1	equ	0xFE3
 26053                           fsr1h	equ	0xFE2
 26054                           fsr1l	equ	0xFE1
 26055                           indf2	equ	0xFDF
 26056                           postinc2	equ	0xFDE
 26057                           postdec2	equ	0xFDD
 26058                           plusw2	equ	0xFDB
 26059                           fsr2h	equ	0xFDA
 26060                           fsr2l	equ	0xFD9
 26061                           status	equ	0xFD8
 26062                           
 26063 ;; *************** function _MSDReadHandler *****************
 26064 ;; Defined at:
 26065 ;;		line 1038 in file "usb_device_msd.c"
 26066 ;; Parameters:    Size  Location     Type
 26067 ;;		None
 26068 ;; Auto vars:     Size  Location     Type
 26069 ;;		None
 26070 ;; Return value:  Size  Location     Type
 26071 ;;                  1    wreg      unsigned char 
 26072 ;; Registers used:
 26073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26074 ;; Tracked objects:
 26075 ;;		On entry : 0/0
 26076 ;;		On exit  : 0/0
 26077 ;;		Unchanged: 0/0
 26078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26081 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26083 ;;Total ram usage:        4 bytes
 26084 ;; Hardware stack levels used:    1
 26085 ;; Hardware stack levels required when called:   16
 26086 ;; This function calls:
 26087 ;;		_ExternalFlash_SectorRead
 26088 ;;		_MSDCheckForErrorCases
 26089 ;;		_USBStallEndpoint
 26090 ;;		_USBTransferOnePacket
 26091 ;; This function is called by:
 26092 ;;		_MSDProcessCommandMediaPresent
 26093 ;; This function uses a non-reentrant model
 26094 ;;
 26095                           
 26096                           	psect	text88
 26097  00DD74                     __ptext88:
 26098                           	opt stack 0
 26099  00DD74                     _MSDReadHandler:
 26100                           	opt stack 10
 26101                           
 26102                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 26103                           
 26104                           ;incstack = 0
 26105  00DD74  D0DC               	goto	l681
 26106  00DD76                     l682:
 26107                           
 26108                           ; BSR set to: 1
 26109                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 26110  00DD76  C111  F14A         	movff	_gblCBW+17,_LBA+3
 26111                           
 26112                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 26113  00DD7A  C112  F149         	movff	_gblCBW+18,_LBA+2
 26114                           
 26115                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 26116  00DD7E  C113  F148         	movff	_gblCBW+19,_LBA+1
 26117                           
 26118                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 26119  00DD82  C114  F147         	movff	_gblCBW+20,_LBA
 26120                           
 26121                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 26122  00DD86  C116  F01B         	movff	_gblCBW+22,_TransferLength+1
 26123                           
 26124                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 26125  00DD8A  C117  F01A         	movff	_gblCBW+23,_TransferLength
 26126                           
 26127                           ; BSR set to: 1
 26128                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 26129  00DD8E  501A               	movf	_TransferLength,w,c
 26130  00DD90  0100               	movlb	0	; () banked
 26131  00DD92  6F95               	movwf	??_MSDReadHandler& (0+255),b
 26132  00DD94  501B               	movf	_TransferLength+1,w,c
 26133  00DD96  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 26134  00DD98  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 26135  00DD9A  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 26136  00DD9C  0E09               	movlw	9
 26137  00DD9E                     u17285:
 26138  00DD9E  90D8               	bcf	status,0,c
 26139  00DDA0  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 26140  00DDA2  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 26141  00DDA4  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 26142  00DDA6  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 26143  00DDA8  2EE8               	decfsz	wreg,f,c
 26144  00DDAA  D7F9               	goto	u17285
 26145  00DDAC  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 26146  00DDB0  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 26147  00DDB4  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 26148  00DDB8  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 26149  00DDBC  EC67  F07E         	call	_MSDCheckForErrorCases	;wreg free
 26150  00DDC0  0900               	iorlw	0
 26151  00DDC2  A4D8               	btfss	status,2,c
 26152  00DDC4  D0C6               	goto	l684
 26153                           
 26154                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 26155                           
 26156                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 26157  00DDC6  0E01               	movlw	1
 26158  00DDC8  0101               	movlb	1	; () banked
 26159  00DDCA  6F70               	movwf	_MSDReadState& (0+255),b
 26160  00DDCC                     
 26161                           ; BSR set to: 1
 26162                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 26163                           
 26164                           ; BSR set to: 1
 26165  00DDCC  501A               	movf	_TransferLength,w,c
 26166  00DDCE  101B               	iorwf	_TransferLength+1,w,c
 26167  00DDD0  A4D8               	btfss	status,2,c
 26168  00DDD2  D002               	goto	l686
 26169                           
 26170                           ; BSR set to: 1
 26171                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 26172  00DDD4  0E00               	movlw	0
 26173  00DDD6  D04A               	goto	L48
 26174  00DDD8                     l686:
 26175                           
 26176                           ; BSR set to: 1
 26177                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 26178                           
 26179                           ; BSR set to: 1
 26180  00DDD8  061A               	decf	_TransferLength,f,c
 26181  00DDDA  A0D8               	btfss	status,0,c
 26182  00DDDC  061B               	decf	_TransferLength+1,f,c
 26183                           
 26184                           ; BSR set to: 1
 26185                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 26186  00DDDE  0E02               	movlw	2
 26187  00DDE0  6F70               	movwf	_MSDReadState& (0+255),b
 26188  00DDE2                     
 26189                           ; BSR set to: 1
 26190                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 26191                           
 26192                           ; BSR set to: 1
 26193  00DDE2  0100               	movlb	0	; () banked
 26194  00DDE4  51CC               	movf	_USBMSDInHandle& (0+255),w,b
 26195  00DDE6  11CD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26196  00DDE8  B4D8               	btfsc	status,2,c
 26197  00DDEA  D006               	goto	l688
 26198                           
 26199                           ; BSR set to: 0
 26200  00DDEC  C0CC  FFD9         	movff	_USBMSDInHandle,fsr2l
 26201  00DDF0  C0CD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26202  00DDF4  BEDF               	btfsc	indf2,7,c
 26203  00DDF6  D0AD               	goto	l684
 26204  00DDF8                     l688:
 26205                           
 26206                           ; BSR set to: 0
 26207                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 26208                           
 26209                           ; BSR set to: 0
 26210  00DDF8  C1AD  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 26211  00DDFC  C1AE  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 26212  00DE00  C147  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 26213  00DE04  C148  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 26214  00DE08  C149  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 26215  00DE0C  C14A  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 26216  00DE10  0E00               	movlw	0
 26217  00DE12  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 26218  00DE14  0E06               	movlw	6
 26219  00DE16  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 26220  00DE18  EE21  F0A4         	lfsr	2,_LUN+12
 26221  00DE1C  D801               	call	u17338
 26222  00DE1E  D00A               	goto	u17339
 26223  00DE20                     u17338:
 26224  00DE20  0005               	push	
 26225  00DE22  6EFA               	movwf	pclath,c
 26226  00DE24  50DE               	movf	postinc2,w,c
 26227  00DE26  6EFD               	movwf	tosl,c
 26228  00DE28  50DE               	movf	postinc2,w,c
 26229  00DE2A  6EFE               	movwf	tosh,c
 26230  00DE2C  50DE               	movf	postinc2,w,c
 26231  00DE2E  6EFF               	movwf	tosu,c
 26232  00DE30  50FA               	movf	pclath,w,c
 26233  00DE32  0012               	return		;indir
 26234  00DE34                     u17339:
 26235  00DE34  06E8               	decf	wreg,f,c
 26236  00DE36  B4D8               	btfsc	status,2,c
 26237  00DE38  D01B               	goto	l691
 26238                           
 26239                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 26240  00DE3A  0E64               	movlw	100
 26241  00DE3C  0101               	movlb	1	; () banked
 26242  00DE3E  616F               	cpfslt	_MSDRetryAttempt& (0+255),b
 26243  00DE40  D002               	goto	l690
 26244                           
 26245                           ; BSR set to: 1
 26246                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 26247  00DE42  2B6F               	incf	_MSDRetryAttempt& (0+255),f,b
 26248                           
 26249                           ;usb_device_msd.c: 1088: break;
 26250  00DE44  D086               	goto	l684
 26251  00DE46                     l690:
 26252                           
 26253                           ; BSR set to: 1
 26254                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 26255                           
 26256                           ; BSR set to: 1
 26257  00DE46  0E02               	movlw	2
 26258  00DE48  010D               	movlb	13	; () banked
 26259  00DE4A  6F8C               	movwf	140,b	;volatile
 26260                           
 26261                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 26262  00DE4C  0101               	movlb	1	; () banked
 26263  00DE4E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26264  00DE50  0BF0               	andlw	-16
 26265  00DE52  0903               	iorlw	3
 26266  00DE54  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26267                           
 26268                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 26269  00DE56  0E00               	movlw	0
 26270  00DE58  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26271                           
 26272                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 26273  00DE5A  0E00               	movlw	0
 26274  00DE5C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 26278  00DE5E  0E01               	movlw	1
 26279  00DE60  0100               	movlb	0	; () banked
 26280  00DE62  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26281  00DE64  0E02               	movlw	2
 26282  00DE66  EC5B  F07C         	call	_USBStallEndpoint
 26283  00DE6A  D05E               	goto	l17829
 26284  00DE6C                     L48:
 26285  00DE6C  6F70               	movwf	_MSDReadState& (0+255),b
 26286                           
 26287                           ;usb_device_msd.c: 1109: break;
 26288  00DE6E  D071               	goto	l684
 26289  00DE70                     l691:
 26290                           
 26291                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 26292                           
 26293                           ; BSR set to: 1
 26294                           
 26295                           ; BSR set to: 1
 26296  00DE70  0E01               	movlw	1
 26297  00DE72  0101               	movlb	1	; () banked
 26298  00DE74  2747               	addwf	_LBA& (0+255),f,b
 26299  00DE76  0E00               	movlw	0
 26300  00DE78  2348               	addwfc	(_LBA+1)& (0+255),f,b
 26301  00DE7A  2349               	addwfc	(_LBA+2)& (0+255),f,b
 26302  00DE7C  234A               	addwfc	(_LBA+3)& (0+255),f,b
 26303                           
 26304                           ; BSR set to: 1
 26305                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 26306  00DE7E  0E00               	movlw	0
 26307  00DE80  010D               	movlb	13	; () banked
 26308  00DE82  6F88               	movwf	136,b	;volatile
 26309  00DE84  0E02               	movlw	2
 26310  00DE86  6F89               	movwf	137,b	;volatile
 26311  00DE88  0E00               	movlw	0
 26312  00DE8A  6F8A               	movwf	138,b	;volatile
 26313  00DE8C  0E00               	movlw	0
 26314  00DE8E  6F8B               	movwf	139,b	;volatile
 26315                           
 26316                           ; BSR set to: 13
 26317                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 26318  00DE90  0E00               	movlw	0
 26319  00DE92  0101               	movlb	1	; () banked
 26320  00DE94  6F65               	movwf	_ptrNextData& (0+255),b
 26321  00DE96  0E06               	movlw	6
 26322  00DE98  6F66               	movwf	(_ptrNextData+1)& (0+255),b
 26323                           
 26324                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 26325  00DE9A  0E03               	movlw	3
 26326  00DE9C  6F70               	movwf	_MSDReadState& (0+255),b
 26327  00DE9E                     
 26328                           ; BSR set to: 1
 26329                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 26330                           
 26331                           ; BSR set to: 1
 26332  00DE9E  010D               	movlb	13	; () banked
 26333  00DEA0  5188               	movf	136,w,b	;volatile
 26334  00DEA2  1189               	iorwf	137,w,b	;volatile
 26335  00DEA4  118A               	iorwf	138,w,b	;volatile
 26336  00DEA6  118B               	iorwf	139,w,b	;volatile
 26337  00DEA8  A4D8               	btfss	status,2,c
 26338  00DEAA  D002               	goto	l693
 26339                           
 26340                           ; BSR set to: 13
 26341                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 26342  00DEAC  0E01               	movlw	1
 26343  00DEAE  D03D               	goto	L50
 26344  00DEB0                     l693:
 26345                           
 26346                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 26347                           
 26348                           ; BSR set to: 1
 26349  00DEB0  0E04               	movlw	4
 26350  00DEB2  0101               	movlb	1	; () banked
 26351  00DEB4  6F70               	movwf	_MSDReadState& (0+255),b
 26352  00DEB6                     
 26353                           ; BSR set to: 1
 26354                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 26355                           
 26356                           ; BSR set to: 1
 26357  00DEB6  0100               	movlb	0	; () banked
 26358  00DEB8  51CC               	movf	_USBMSDInHandle& (0+255),w,b
 26359  00DEBA  11CD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26360  00DEBC  B4D8               	btfsc	status,2,c
 26361  00DEBE  D006               	goto	l695
 26362                           
 26363                           ; BSR set to: 0
 26364  00DEC0  C0CC  FFD9         	movff	_USBMSDInHandle,fsr2l
 26365  00DEC4  C0CD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26366  00DEC8  BEDF               	btfsc	indf2,7,c
 26367  00DECA  D043               	goto	l684
 26368  00DECC                     l695:
 26369                           
 26370                           ; BSR set to: 0
 26371                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 26372                           
 26373                           ; BSR set to: 0
 26374  00DECC  0E01               	movlw	1
 26375  00DECE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 26376  00DED0  C165  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 26377  00DED4  C166  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 26378  00DED8  0E40               	movlw	64
 26379  00DEDA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 26380  00DEDC  0E02               	movlw	2
 26381  00DEDE  ECE0  F07C         	call	_USBTransferOnePacket
 26382  00DEE2  C060  F0CC         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 26383  00DEE6  C061  F0CD         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 26384                           
 26385                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 26386  00DEEA  0E03               	movlw	3
 26387  00DEEC  0101               	movlb	1	; () banked
 26388  00DEEE  6F70               	movwf	_MSDReadState& (0+255),b
 26389                           
 26390                           ; BSR set to: 1
 26391                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 26392  00DEF0  0E40               	movlw	64
 26393  00DEF2  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 26394  00DEF4  0E00               	movlw	0
 26395  00DEF6  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 26396  00DEF8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 26397  00DEFA  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 26398                           
 26399                           ; BSR set to: 1
 26400                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 26401  00DEFC  0E40               	movlw	64
 26402  00DEFE  010D               	movlb	13	; () banked
 26403  00DF00  5F88               	subwf	136,f,b	;volatile
 26404  00DF02  0E00               	movlw	0
 26405  00DF04  5B89               	subwfb	137,f,b	;volatile
 26406  00DF06  5B8A               	subwfb	138,f,b	;volatile
 26407  00DF08  5B8B               	subwfb	139,f,b	;volatile
 26408                           
 26409                           ; BSR set to: 13
 26410                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 26411  00DF0A  0E40               	movlw	64
 26412  00DF0C  0101               	movlb	1	; () banked
 26413  00DF0E  2765               	addwf	_ptrNextData& (0+255),f,b
 26414  00DF10  0E00               	movlw	0
 26415  00DF12  2366               	addwfc	(_ptrNextData+1)& (0+255),f,b
 26416                           
 26417                           ;usb_device_msd.c: 1149: break;
 26418  00DF14  D01E               	goto	l684
 26419  00DF16                     
 26420                           ; BSR set to: 1
 26421                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 26422                           
 26423                           ; BSR set to: 1
 26424  00DF16  0E02               	movlw	2
 26425  00DF18  010D               	movlb	13	; () banked
 26426  00DF1A  6F8C               	movwf	140,b	;volatile
 26427                           
 26428                           ; BSR set to: 13
 26429                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 26430  00DF1C  0E01               	movlw	1
 26431  00DF1E  0100               	movlb	0	; () banked
 26432  00DF20  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26433  00DF22  0E02               	movlw	2
 26434  00DF24  EC5B  F07C         	call	_USBStallEndpoint
 26435  00DF28                     l17829:
 26436                           
 26437                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 26438  00DF28  0E00               	movlw	0
 26439  00DF2A                     L50:
 26440  00DF2A  0101               	movlb	1	; () banked
 26441  00DF2C  D79F               	goto	L48
 26442  00DF2E                     l681:
 26443                           
 26444                           ; BSR set to: 1
 26445  00DF2E  0101               	movlb	1	; () banked
 26446  00DF30  5170               	movf	_MSDReadState& (0+255),w,b
 26447                           
 26448                           ; Switch size 1, requested type "space"
 26449                           ; Number of cases is 5, Range of values is 0 to 4
 26450                           ; switch strategies available:
 26451                           ; Name         Instructions Cycles
 26452                           ; simple_byte           16     9 (average)
 26453                           ;	Chosen strategy is simple_byte
 26454  00DF32  0A00               	xorlw	0	; case 0
 26455  00DF34  B4D8               	btfsc	status,2,c
 26456  00DF36  D71F               	goto	l682
 26457  00DF38  0A01               	xorlw	1	; case 1
 26458  00DF3A  B4D8               	btfsc	status,2,c
 26459  00DF3C  D747               	goto	l685
 26460  00DF3E  0A03               	xorlw	3	; case 2
 26461  00DF40  B4D8               	btfsc	status,2,c
 26462  00DF42  D74F               	goto	l687
 26463  00DF44  0A01               	xorlw	1	; case 3
 26464  00DF46  B4D8               	btfsc	status,2,c
 26465  00DF48  D7AA               	goto	l692
 26466  00DF4A  0A07               	xorlw	7	; case 4
 26467  00DF4C  B4D8               	btfsc	status,2,c
 26468  00DF4E  D7B3               	goto	l694
 26469  00DF50  D7E2               	goto	l696
 26470  00DF52                     l684:
 26471                           
 26472                           ;usb_device_msd.c: 1161: return MSDReadState;
 26473                           
 26474                           ; BSR set to: 1
 26475  00DF52  0101               	movlb	1	; () banked
 26476  00DF54  5170               	movf	_MSDReadState& (0+255),w,b
 26477  00DF56  0012               	return	
 26478  00DF58                     __end_of_MSDReadHandler:
 26479                           	opt stack 0
 26480                           tosu	equ	0xFFF
 26481                           tosh	equ	0xFFE
 26482                           tosl	equ	0xFFD
 26483                           pclath	equ	0xFFA
 26484                           tblptru	equ	0xFF8
 26485                           tblptrh	equ	0xFF7
 26486                           tblptrl	equ	0xFF6
 26487                           tablat	equ	0xFF5
 26488                           prodh	equ	0xFF4
 26489                           prodl	equ	0xFF3
 26490                           intcon	equ	0xFF2
 26491                           postinc0	equ	0xFEE
 26492                           wreg	equ	0xFE8
 26493                           indf1	equ	0xFE7
 26494                           postdec1	equ	0xFE5
 26495                           plusw1	equ	0xFE3
 26496                           fsr1h	equ	0xFE2
 26497                           fsr1l	equ	0xFE1
 26498                           indf2	equ	0xFDF
 26499                           postinc2	equ	0xFDE
 26500                           postdec2	equ	0xFDD
 26501                           plusw2	equ	0xFDB
 26502                           fsr2h	equ	0xFDA
 26503                           fsr2l	equ	0xFD9
 26504                           status	equ	0xFD8
 26505                           
 26506 ;; *************** function _MSDCheckForErrorCases *****************
 26507 ;; Defined at:
 26508 ;;		line 1434 in file "usb_device_msd.c"
 26509 ;; Parameters:    Size  Location     Type
 26510 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 26511 ;; Auto vars:     Size  Location     Type
 26512 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 26513 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 26514 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 26515 ;; Return value:  Size  Location     Type
 26516 ;;                  1    wreg      unsigned char 
 26517 ;; Registers used:
 26518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26519 ;; Tracked objects:
 26520 ;;		On entry : 0/0
 26521 ;;		On exit  : 0/0
 26522 ;;		Unchanged: 0/0
 26523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26525 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26527 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26528 ;;Total ram usage:        7 bytes
 26529 ;; Hardware stack levels used:    1
 26530 ;; Hardware stack levels required when called:   12
 26531 ;; This function calls:
 26532 ;;		_MSDErrorHandler
 26533 ;; This function is called by:
 26534 ;;		_MSDProcessCommandMediaPresent
 26535 ;;		_MSDReadHandler
 26536 ;;		_MSDWriteHandler
 26537 ;; This function uses a non-reentrant model
 26538 ;;
 26539                           
 26540                           	psect	text89
 26541  00FCCE                     __ptext89:
 26542                           	opt stack 0
 26543  00FCCE                     _MSDCheckForErrorCases:
 26544                           	opt stack 13
 26545                           
 26546                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 26547                           
 26548                           ; BSR set to: 1
 26549                           ;incstack = 0
 26550  00FCCE  0100               	movlb	0	; () banked
 26551  00FCD0  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 26552  00FCD2  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 26553  00FCD4  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 26554  00FCD6  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 26555  00FCD8  A4D8               	btfss	status,2,c
 26556  00FCDA  D002               	goto	l726
 26557                           
 26558                           ; BSR set to: 0
 26559                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 26560  00FCDC  0E01               	movlw	1
 26561  00FCDE  D001               	goto	L51
 26562  00FCE0                     l726:
 26563                           
 26564                           ; BSR set to: 0
 26565                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 26566                           
 26567                           ; BSR set to: 0
 26568  00FCE0  0E00               	movlw	0
 26569  00FCE2                     L51:
 26570  00FCE2  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 26571                           
 26572                           ; BSR set to: 0
 26573                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 26574                           
 26575                           ; BSR set to: 0
 26576  00FCE4  05D0               	decf	_MSDHostNoData& (0+255),w,b
 26577  00FCE6  A4D8               	btfss	status,2,c
 26578  00FCE8  D005               	goto	l728
 26579                           
 26580                           ; BSR set to: 0
 26581  00FCEA  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 26582  00FCEC  A4D8               	btfss	status,2,c
 26583  00FCEE  D002               	goto	l728
 26584                           
 26585                           ; BSR set to: 0
 26586                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 26587  00FCF0  0E00               	movlw	0
 26588                           
 26589                           ; BSR set to: 0
 26590  00FCF2  0012               	return	
 26591  00FCF4                     l728:
 26592                           
 26593                           ; BSR set to: 0
 26594                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 26595                           
 26596                           ; BSR set to: 0
 26597  00FCF4  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 26598  00FCF6  0101               	movlb	1	; () banked
 26599  00FCF8  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 26600  00FCFA  E120               	bnz	l17643
 26601  00FCFC  0100               	movlb	0	; () banked
 26602  00FCFE  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 26603  00FD00  0101               	movlb	1	; () banked
 26604  00FD02  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 26605  00FD04  E11B               	bnz	l17643
 26606  00FD06  0100               	movlb	0	; () banked
 26607  00FD08  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 26608  00FD0A  0101               	movlb	1	; () banked
 26609  00FD0C  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 26610  00FD0E  E116               	bnz	l17643
 26611  00FD10  0100               	movlb	0	; () banked
 26612  00FD12  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 26613  00FD14  0101               	movlb	1	; () banked
 26614  00FD16  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 26615  00FD18  A4D8               	btfss	status,2,c
 26616  00FD1A  D010               	goto	l734
 26617                           
 26618                           ; BSR set to: 1
 26619                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 26620  00FD1C  0100               	movlb	0	; () banked
 26621  00FD1E  05D2               	decf	_MSD_State& (0+255),w,b
 26622  00FD20  A4D8               	btfss	status,2,c
 26623  00FD22  D006               	goto	l731
 26624                           
 26625                           ; BSR set to: 0
 26626                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 26627  00FD24  0E2A               	movlw	42
 26628  00FD26  19D1               	xorwf	_MSDCommandState& (0+255),w,b
 26629  00FD28  B4D8               	btfsc	status,2,c
 26630  00FD2A  D008               	goto	l734
 26631                           
 26632                           ; BSR set to: 0
 26633                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 26634  00FD2C  0E00               	movlw	0
 26635                           
 26636                           ; BSR set to: 0
 26637  00FD2E  0012               	return	
 26638  00FD30                     l731:
 26639                           
 26640                           ; BSR set to: 0
 26641                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 26642                           
 26643                           ; BSR set to: 0
 26644  00FD30  0E2A               	movlw	42
 26645  00FD32  19D1               	xorwf	_MSDCommandState& (0+255),w,b
 26646  00FD34  A4D8               	btfss	status,2,c
 26647  00FD36  D002               	goto	l734
 26648                           
 26649                           ; BSR set to: 0
 26650                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 26651  00FD38  0E00               	movlw	0
 26652                           
 26653                           ; BSR set to: 0
 26654  00FD3A  0012               	return	
 26655  00FD3C                     l734:
 26656  00FD3C                     l17643:
 26657                           
 26658                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 26659  00FD3C  0101               	movlb	1	; () banked
 26660  00FD3E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26661  00FD40  0100               	movlb	0	; () banked
 26662  00FD42  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 26663  00FD44  0101               	movlb	1	; () banked
 26664  00FD46  5109               	movf	(_gblCBW+9)& (0+255),w,b
 26665  00FD48  0100               	movlb	0	; () banked
 26666  00FD4A  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 26667  00FD4C  0101               	movlb	1	; () banked
 26668  00FD4E  510A               	movf	(_gblCBW+10)& (0+255),w,b
 26669  00FD50  0100               	movlb	0	; () banked
 26670  00FD52  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 26671  00FD54  0101               	movlb	1	; () banked
 26672  00FD56  510B               	movf	(_gblCBW+11)& (0+255),w,b
 26673  00FD58  0100               	movlb	0	; () banked
 26674  00FD5A  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 26675  00FD5C  B0D8               	btfsc	status,0,c
 26676  00FD5E  D002               	goto	l735
 26677                           
 26678                           ; BSR set to: 0
 26679                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 26680  00FD60  0E01               	movlw	1
 26681  00FD62  D001               	goto	L52
 26682  00FD64                     l735:
 26683                           
 26684                           ; BSR set to: 0
 26685                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 26686                           
 26687                           ; BSR set to: 0
 26688  00FD64  0E00               	movlw	0
 26689  00FD66                     L52:
 26690  00FD66  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 26691                           
 26692                           ; BSR set to: 0
 26693                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 26694                           
 26695                           ; BSR set to: 0
 26696  00FD68  0E02               	movlw	2
 26697  00FD6A  19D2               	xorwf	_MSD_State& (0+255),w,b
 26698  00FD6C  A4D8               	btfss	status,2,c
 26699  00FD6E  D014               	goto	l737
 26700                           
 26701                           ; BSR set to: 0
 26702                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 26703  00FD70  0E2A               	movlw	42
 26704  00FD72  19D1               	xorwf	_MSDCommandState& (0+255),w,b
 26705  00FD74  B4D8               	btfsc	status,2,c
 26706  00FD76  D005               	goto	l738
 26707                           
 26708                           ; BSR set to: 0
 26709  00FD78  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 26710  00FD7A  A4D8               	btfss	status,2,c
 26711  00FD7C  D002               	goto	l738
 26712  00FD7E                     u17170:
 26713                           
 26714                           ; BSR set to: 0
 26715                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 26716  00FD7E  0E05               	movlw	5
 26717  00FD80  D01D               	goto	L55
 26718  00FD82                     l738:
 26719                           
 26720                           ; BSR set to: 0
 26721                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 26722                           
 26723                           ; BSR set to: 0
 26724  00FD82  05D0               	decf	_MSDHostNoData& (0+255),w,b
 26725  00FD84  B4D8               	btfsc	status,2,c
 26726  00FD86  D00F               	goto	u17220
 26727                           
 26728                           ; BSR set to: 0
 26729                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 26730                           
 26731                           ; BSR set to: 0
 26732                           
 26733                           ; BSR set to: 0
 26734                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 26735  00FD88  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 26736  00FD8A  B4D8               	btfsc	status,2,c
 26737  00FD8C  D003               	goto	u17200
 26738                           
 26739                           ; BSR set to: 0
 26740                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 26741                           
 26742                           ; BSR set to: 0
 26743                           
 26744                           ; BSR set to: 0
 26745                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 26746  00FD8E  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 26747  00FD90  A4D8               	btfss	status,2,c
 26748  00FD92  D7F5               	goto	u17170
 26749  00FD94                     u17200:
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 26753  00FD94  0E04               	movlw	4
 26754  00FD96  D012               	goto	L55
 26755  00FD98                     l737:
 26756                           
 26757                           ; BSR set to: 0
 26758                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 26759                           
 26760                           ; BSR set to: 0
 26761  00FD98  0E2A               	movlw	42
 26762  00FD9A  19D1               	xorwf	_MSDCommandState& (0+255),w,b
 26763  00FD9C  B4D8               	btfsc	status,2,c
 26764  00FD9E  D00D               	goto	l753
 26765                           
 26766                           ; BSR set to: 0
 26767                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 26768                           
 26769                           ; BSR set to: 0
 26770                           
 26771                           ; BSR set to: 0
 26772                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 26773  00FDA0  05D0               	decf	_MSDHostNoData& (0+255),w,b
 26774  00FDA2  A4D8               	btfss	status,2,c
 26775  00FDA4  D002               	goto	l749
 26776  00FDA6                     u17220:
 26777                           
 26778                           ; BSR set to: 0
 26779                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 26780  00FDA6  0E01               	movlw	1
 26781  00FDA8  D009               	goto	L55
 26782  00FDAA                     l749:
 26783                           
 26784                           ; BSR set to: 0
 26785                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 26786                           
 26787                           ; BSR set to: 0
 26788  00FDAA  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 26789  00FDAC  B4D8               	btfsc	status,2,c
 26790  00FDAE  D003               	goto	u17240
 26791                           
 26792                           ; BSR set to: 0
 26793                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 26794                           
 26795                           ; BSR set to: 0
 26796                           
 26797                           ; BSR set to: 0
 26798                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 26799  00FDB0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 26800  00FDB2  A4D8               	btfss	status,2,c
 26801  00FDB4  D002               	goto	l753
 26802  00FDB6                     u17240:
 26803                           
 26804                           ; BSR set to: 0
 26805                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 26806  00FDB6  0E02               	movlw	2
 26807  00FDB8  D001               	goto	L55
 26808  00FDBA                     l753:
 26809                           
 26810                           ; BSR set to: 0
 26811                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 26812                           
 26813                           ; BSR set to: 0
 26814  00FDBA  0E03               	movlw	3
 26815  00FDBC                     L55:
 26816  00FDBC  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 26817                           
 26818                           ; BSR set to: 0
 26819                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 26820                           
 26821                           ; BSR set to: 0
 26822                           
 26823                           ; BSR set to: 0
 26824                           
 26825                           ; BSR set to: 0
 26826                           
 26827                           ; BSR set to: 0
 26828                           
 26829                           ; BSR set to: 0
 26830  00FDBE  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 26831  00FDC0  ECB1  F079         	call	_MSDErrorHandler
 26832                           
 26833                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 26834  00FDC4  0100               	movlb	0	; () banked
 26835  00FDC6  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 26836  00FDC8  0012               	return	
 26837  00FDCA                     __end_of_MSDCheckForErrorCases:
 26838                           	opt stack 0
 26839                           tosu	equ	0xFFF
 26840                           tosh	equ	0xFFE
 26841                           tosl	equ	0xFFD
 26842                           pclath	equ	0xFFA
 26843                           tblptru	equ	0xFF8
 26844                           tblptrh	equ	0xFF7
 26845                           tblptrl	equ	0xFF6
 26846                           tablat	equ	0xFF5
 26847                           prodh	equ	0xFF4
 26848                           prodl	equ	0xFF3
 26849                           intcon	equ	0xFF2
 26850                           postinc0	equ	0xFEE
 26851                           wreg	equ	0xFE8
 26852                           indf1	equ	0xFE7
 26853                           postdec1	equ	0xFE5
 26854                           plusw1	equ	0xFE3
 26855                           fsr1h	equ	0xFE2
 26856                           fsr1l	equ	0xFE1
 26857                           indf2	equ	0xFDF
 26858                           postinc2	equ	0xFDE
 26859                           postdec2	equ	0xFDD
 26860                           plusw2	equ	0xFDB
 26861                           fsr2h	equ	0xFDA
 26862                           fsr2l	equ	0xFD9
 26863                           status	equ	0xFD8
 26864                           
 26865 ;; *************** function _MSDErrorHandler *****************
 26866 ;; Defined at:
 26867 ;;		line 1577 in file "usb_device_msd.c"
 26868 ;; Parameters:    Size  Location     Type
 26869 ;;  ErrorCase       1    wreg     unsigned char 
 26870 ;; Auto vars:     Size  Location     Type
 26871 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 26872 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 26873 ;; Return value:  Size  Location     Type
 26874 ;;                  1    wreg      void 
 26875 ;; Registers used:
 26876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26877 ;; Tracked objects:
 26878 ;;		On entry : 0/0
 26879 ;;		On exit  : 0/0
 26880 ;;		Unchanged: 0/0
 26881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26886 ;;Total ram usage:        2 bytes
 26887 ;; Hardware stack levels used:    1
 26888 ;; Hardware stack levels required when called:   11
 26889 ;; This function calls:
 26890 ;;		_ResetSenseData
 26891 ;;		_USBStallEndpoint
 26892 ;; This function is called by:
 26893 ;;		_MSDProcessCommandMediaAbsent
 26894 ;;		_MSDProcessCommandMediaPresent
 26895 ;;		_MSDCheckForErrorCases
 26896 ;; This function uses a non-reentrant model
 26897 ;;
 26898                           
 26899                           	psect	text90
 26900  00F362                     __ptext90:
 26901                           	opt stack 0
 26902  00F362                     _MSDErrorHandler:
 26903                           	opt stack 13
 26904                           
 26905                           ; BSR set to: 0
 26906                           ;incstack = 0
 26907                           ;MSDErrorHandler@ErrorCase stored from wreg
 26908  00F362  0100               	movlb	0	; () banked
 26909  00F364  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 26910                           
 26911                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 26912  00F366  0100               	movlb	0	; () banked
 26913  00F368  51CC               	movf	_USBMSDInHandle& (0+255),w,b
 26914  00F36A  11CD               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26915  00F36C  B4D8               	btfsc	status,2,c
 26916  00F36E  D006               	goto	u16990
 26917                           
 26918                           ; BSR set to: 0
 26919  00F370  C0CC  FFD9         	movff	_USBMSDInHandle,fsr2l
 26920  00F374  C0CD  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26921  00F378  BEDF               	btfsc	indf2,7,c
 26922  00F37A  0012               	return	
 26923  00F37C                     u16990:
 26924                           
 26925                           ; BSR set to: 0
 26926                           
 26927                           ; BSR set to: 0
 26928  00F37C  51CE               	movf	_USBMSDOutHandle& (0+255),w,b
 26929  00F37E  11CF               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26930  00F380  B4D8               	btfsc	status,2,c
 26931  00F382  D006               	goto	l757
 26932                           
 26933                           ; BSR set to: 0
 26934  00F384  C0CE  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26935  00F388  C0CF  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26936  00F38C  BEDF               	btfsc	indf2,7,c
 26937  00F38E  0012               	return	
 26938  00F390                     l757:
 26939                           
 26940                           ; BSR set to: 0
 26941                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 26942  00F390  C0D2  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 26943                           
 26944                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 26945  00F394  69D1               	setf	_MSDCommandState& (0+255),b
 26946                           
 26947                           ; BSR set to: 0
 26948                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 26949  00F396  0E00               	movlw	0
 26950  00F398  0101               	movlb	1	; () banked
 26951  00F39A  6F70               	movwf	_MSDReadState& (0+255),b
 26952                           
 26953                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 26954  00F39C  0E00               	movlw	0
 26955  00F39E  6E25               	movwf	_MSDWriteState,c
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 26959  00F3A0  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 26960  00F3A4  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 26961  00F3A8  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 26962  00F3AC  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 26963                           
 26964                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 26965  00F3B0  0E01               	movlw	1
 26966  00F3B2  010D               	movlb	13	; () banked
 26967  00F3B4  6F8C               	movwf	140,b	;volatile
 26968                           
 26969                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 26970  00F3B6  0E03               	movlw	3
 26971  00F3B8  0100               	movlb	0	; () banked
 26972  00F3BA  6FD2               	movwf	_MSD_State& (0+255),b
 26973                           
 26974                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 26975  00F3BC  D04B               	goto	l763
 26976  00F3BE                     
 26977                           ; BSR set to: 0
 26978                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 26979                           
 26980                           ; BSR set to: 0
 26981  00F3BE  0E02               	movlw	2
 26982  00F3C0  010D               	movlb	13	; () banked
 26983  00F3C2  6F8C               	movwf	140,b	;volatile
 26984                           
 26985                           ;usb_device_msd.c: 1607: break;
 26986  00F3C4  0012               	return	
 26987  00F3C6                     
 26988                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 26989                           
 26990                           ; BSR set to: 13
 26991  00F3C6  0E01               	movlw	1
 26992  00F3C8  0100               	movlb	0	; () banked
 26993  00F3CA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26994  00F3CC  0E02               	movlw	2
 26995  00F3CE  EC5B  F07C         	call	_USBStallEndpoint
 26996                           
 26997                           ;usb_device_msd.c: 1611: break;
 26998  00F3D2  0012               	return	
 26999  00F3D4                     
 27000                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 27001  00F3D4  0E02               	movlw	2
 27002  00F3D6  010D               	movlb	13	; () banked
 27003  00F3D8  6F8C               	movwf	140,b	;volatile
 27004                           
 27005                           ; BSR set to: 13
 27006                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 27007  00F3DA  0E01               	movlw	1
 27008  00F3DC  0100               	movlb	0	; () banked
 27009  00F3DE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27010  00F3E0  0E02               	movlw	2
 27011  00F3E2  EC5B  F07C         	call	_USBStallEndpoint
 27012                           
 27013                           ;usb_device_msd.c: 1616: break;
 27014  00F3E6  0012               	return	
 27015  00F3E8                     
 27016                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 27017  00F3E8  0E00               	movlw	0
 27018  00F3EA  0100               	movlb	0	; () banked
 27019  00F3EC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27020  00F3EE  0E02               	movlw	2
 27021  00F3F0  EC5B  F07C         	call	_USBStallEndpoint
 27022                           
 27023                           ;usb_device_msd.c: 1620: break;
 27024  00F3F4  0012               	return	
 27025  00F3F6                     
 27026                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 27027  00F3F6  0E02               	movlw	2
 27028  00F3F8  010D               	movlb	13	; () banked
 27029  00F3FA  6F8C               	movwf	140,b	;volatile
 27030                           
 27031                           ; BSR set to: 13
 27032                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 27033  00F3FC  0E00               	movlw	0
 27034  00F3FE  0100               	movlb	0	; () banked
 27035  00F400  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27036  00F402  0E02               	movlw	2
 27037  00F404  EC5B  F07C         	call	_USBStallEndpoint
 27038                           
 27039                           ;usb_device_msd.c: 1625: break;
 27040  00F408  0012               	return	
 27041  00F40A                     
 27042                           ;usb_device_msd.c: 1628: ResetSenseData();
 27043  00F40A  EC87  F08D         	call	_ResetSenseData	;wreg free
 27044                           
 27045                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 27046  00F40E  0101               	movlb	1	; () banked
 27047  00F410  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27048  00F412  0BF0               	andlw	-16
 27049  00F414  0905               	iorlw	5
 27050  00F416  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 27051                           
 27052                           ; BSR set to: 1
 27053                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 27054  00F418  0E20               	movlw	32
 27055  00F41A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27056                           
 27057                           ; BSR set to: 1
 27058                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 27059  00F41C  0E00               	movlw	0
 27060  00F41E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27061                           
 27062                           ; BSR set to: 1
 27063                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 27064  00F420  0E02               	movlw	2
 27065  00F422  0100               	movlb	0	; () banked
 27066  00F424  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 27067  00F426  A4D8               	btfss	status,2,c
 27068  00F428  D00E               	goto	l771
 27069                           
 27070                           ; BSR set to: 0
 27071  00F42A  0101               	movlb	1	; () banked
 27072  00F42C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27073  00F42E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 27074  00F430  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 27075  00F432  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 27076  00F434  B4D8               	btfsc	status,2,c
 27077  00F436  D007               	goto	l771
 27078                           
 27079                           ; BSR set to: 1
 27080                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 27081  00F438  0E00               	movlw	0
 27082  00F43A  0100               	movlb	0	; () banked
 27083  00F43C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27084  00F43E  0E02               	movlw	2
 27085  00F440  EC5B  F07C         	call	_USBStallEndpoint
 27086                           
 27087                           ;usb_device_msd.c: 1636: }
 27088  00F444  0012               	return	
 27089  00F446                     l771:
 27090                           
 27091                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 27092  00F446  0E01               	movlw	1
 27093  00F448  0100               	movlb	0	; () banked
 27094  00F44A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27095  00F44C  0E02               	movlw	2
 27096  00F44E  EC5B  F07C         	call	_USBStallEndpoint
 27097                           
 27098                           ;usb_device_msd.c: 1644: }
 27099                           
 27100                           ;usb_device_msd.c: 1643: break;
 27101                           
 27102                           ;usb_device_msd.c: 1642: default:
 27103                           
 27104                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 27105  00F452  0012               	return	
 27106  00F454                     l763:
 27107  00F454  0100               	movlb	0	; () banked
 27108  00F456  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 27109                           
 27110                           ; Switch size 1, requested type "space"
 27111                           ; Number of cases is 6, Range of values is 1 to 127
 27112                           ; switch strategies available:
 27113                           ; Name         Instructions Cycles
 27114                           ; simple_byte           19    10 (average)
 27115                           ;	Chosen strategy is simple_byte
 27116  00F458  0A01               	xorlw	1	; case 1
 27117  00F45A  B4D8               	btfsc	status,2,c
 27118  00F45C  D7B0               	goto	l764
 27119  00F45E  0A03               	xorlw	3	; case 2
 27120  00F460  B4D8               	btfsc	status,2,c
 27121  00F462  D7B1               	goto	l766
 27122  00F464  0A01               	xorlw	1	; case 3
 27123  00F466  B4D8               	btfsc	status,2,c
 27124  00F468  D7B5               	goto	l767
 27125  00F46A  0A07               	xorlw	7	; case 4
 27126  00F46C  B4D8               	btfsc	status,2,c
 27127  00F46E  D7BC               	goto	l768
 27128  00F470  0A01               	xorlw	1	; case 5
 27129  00F472  B4D8               	btfsc	status,2,c
 27130  00F474  D7C0               	goto	l769
 27131  00F476  0A7A               	xorlw	122	; case 127
 27132  00F478  A4D8               	btfss	status,2,c
 27133  00F47A  0012               	return	
 27134  00F47C  D7C6               	goto	l770
 27135  00F47E                     __end_of_MSDErrorHandler:
 27136                           	opt stack 0
 27137                           tosu	equ	0xFFF
 27138                           tosh	equ	0xFFE
 27139                           tosl	equ	0xFFD
 27140                           pclath	equ	0xFFA
 27141                           tblptru	equ	0xFF8
 27142                           tblptrh	equ	0xFF7
 27143                           tblptrl	equ	0xFF6
 27144                           tablat	equ	0xFF5
 27145                           prodh	equ	0xFF4
 27146                           prodl	equ	0xFF3
 27147                           intcon	equ	0xFF2
 27148                           postinc0	equ	0xFEE
 27149                           wreg	equ	0xFE8
 27150                           indf1	equ	0xFE7
 27151                           postdec1	equ	0xFE5
 27152                           plusw1	equ	0xFE3
 27153                           fsr1h	equ	0xFE2
 27154                           fsr1l	equ	0xFE1
 27155                           indf2	equ	0xFDF
 27156                           postinc2	equ	0xFDE
 27157                           postdec2	equ	0xFDD
 27158                           plusw2	equ	0xFDB
 27159                           fsr2h	equ	0xFDA
 27160                           fsr2l	equ	0xFD9
 27161                           status	equ	0xFD8
 27162                           
 27163 ;; *************** function _USBStallEndpoint *****************
 27164 ;; Defined at:
 27165 ;;		line 1073 in file "usb_device.c"
 27166 ;; Parameters:    Size  Location     Type
 27167 ;;  ep              1    wreg     unsigned char 
 27168 ;;  dir             1    0[BANK0 ] unsigned char 
 27169 ;; Auto vars:     Size  Location     Type
 27170 ;;  ep              1    5[BANK0 ] unsigned char 
 27171 ;;  p               2    6[BANK0 ] PTR struct __BDT
 27172 ;;		 -> BDT(48), 
 27173 ;; Return value:  Size  Location     Type
 27174 ;;                  1    wreg      void 
 27175 ;; Registers used:
 27176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27177 ;; Tracked objects:
 27178 ;;		On entry : 0/0
 27179 ;;		On exit  : 0/0
 27180 ;;		Unchanged: 0/0
 27181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27182 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27183 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27185 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27186 ;;Total ram usage:        8 bytes
 27187 ;; Hardware stack levels used:    1
 27188 ;; Hardware stack levels required when called:   10
 27189 ;; This function calls:
 27190 ;;		Nothing
 27191 ;; This function is called by:
 27192 ;;		_MSDTasks
 27193 ;;		_MSDReadHandler
 27194 ;;		_MSDWriteHandler
 27195 ;;		_MSDErrorHandler
 27196 ;; This function uses a non-reentrant model
 27197 ;;
 27198                           
 27199                           	psect	text91
 27200  00F8B6                     __ptext91:
 27201                           	opt stack 0
 27202  00F8B6                     _USBStallEndpoint:
 27203                           	opt stack 18
 27204                           
 27205                           ;incstack = 0
 27206                           ;USBStallEndpoint@ep stored from wreg
 27207  00F8B6  0100               	movlb	0	; () banked
 27208  00F8B8  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 27209                           
 27210                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 27211  00F8BA  0100               	movlb	0	; () banked
 27212  00F8BC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 27213  00F8BE  A4D8               	btfss	status,2,c
 27214  00F8C0  D02B               	goto	l192
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 27218  00F8C2  EE20 F001          	lfsr	2,1
 27219  00F8C6  501C               	movf	_pBDTEntryEP0OutNext,w,c
 27220  00F8C8  26D9               	addwf	fsr2l,f,c
 27221  00F8CA  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 27222  00F8CC  22DA               	addwfc	fsr2h,f,c
 27223  00F8CE  0E08               	movlw	8
 27224  00F8D0  6EDF               	movwf	indf2,c
 27225                           
 27226                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27227  00F8D2  EE20 F002          	lfsr	2,2
 27228  00F8D6  501C               	movf	_pBDTEntryEP0OutNext,w,c
 27229  00F8D8  26D9               	addwf	fsr2l,f,c
 27230  00F8DA  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 27231  00F8DC  22DA               	addwfc	fsr2h,f,c
 27232  00F8DE  0E30               	movlw	48
 27233  00F8E0  6EDE               	movwf	postinc2,c
 27234  00F8E2  0E0D               	movlw	13
 27235  00F8E4  6EDD               	movwf	postdec2,c
 27236                           
 27237                           ; BSR set to: 0
 27238                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27239  00F8E6  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27240  00F8EA  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27241  00F8EE  0E0C               	movlw	12
 27242  00F8F0  6EDF               	movwf	indf2,c
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27246  00F8F2  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27247  00F8F6  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27248  00F8FA  0E00               	movlw	0
 27249  00F8FC  8EDB               	bsf	plusw2,7,c
 27250                           
 27251                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 27252  00F8FE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 27253  00F902  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27254  00F906  0E04               	movlw	4
 27255  00F908  6EDF               	movwf	indf2,c
 27256                           
 27257                           ; BSR set to: 0
 27258                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27259  00F90A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 27260  00F90E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27261  00F912  0E00               	movlw	0
 27262  00F914  8EDB               	bsf	plusw2,7,c
 27263                           
 27264                           ;usb_device.c: 1089: }
 27265  00F916  0012               	return	
 27266  00F918                     l192:
 27267                           
 27268                           ; BSR set to: 0
 27269                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 27270                           
 27271                           ; BSR set to: 0
 27272  00F918  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 27273  00F91A  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 27274  00F91C  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 27275  00F91E  90D8               	bcf	status,0,c
 27276  00F920  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 27277  00F922  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 27278  00F924  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 27279  00F926  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 27280  00F928  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 27281  00F92A  90D8               	bcf	status,0,c
 27282  00F92C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27283  00F92E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27284  00F930  90D8               	bcf	status,0,c
 27285  00F932  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27286  00F934  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27287  00F936  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 27288  00F938  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 27289  00F93A  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 27290  00F93C  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 27291  00F93E  90D8               	bcf	status,0,c
 27292  00F940  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27293  00F942  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27294  00F944  90D8               	bcf	status,0,c
 27295  00F946  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27296  00F948  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27297  00F94A  0E00               	movlw	0
 27298  00F94C  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 27299  00F94E  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 27300  00F950  0E0D               	movlw	13
 27301  00F952  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 27302  00F954  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 27306  00F956  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27307  00F95A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27308  00F95E  0E00               	movlw	0
 27309  00F960  84DB               	bsf	plusw2,2,c
 27310                           
 27311                           ; BSR set to: 0
 27312                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 27313  00F962  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27314  00F966  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27315  00F96A  0E00               	movlw	0
 27316  00F96C  8EDB               	bsf	plusw2,7,c
 27317                           
 27318                           ; BSR set to: 0
 27319                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 27320  00F96E  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 27321  00F970  0D04               	mullw	4
 27322  00F972  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 27323  00F976  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 27324  00F97A  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 27325  00F97C  0D02               	mullw	2
 27326  00F97E  50F3               	movf	prodl,w,c
 27327  00F980  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 27328  00F982  50F4               	movf	prodh,w,c
 27329  00F984  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 27330  00F986  90D8               	bcf	status,0,c
 27331  00F988  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 27332  00F98A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 27333  00F98C  90D8               	bcf	status,0,c
 27334  00F98E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 27335  00F990  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 27336  00F992  0E04               	movlw	4
 27337  00F994  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 27338  00F996  0E00               	movlw	0
 27339  00F998  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 27340  00F99A  0E00               	movlw	0
 27341  00F99C  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 27342  00F99E  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 27343  00F9A0  0E0D               	movlw	13
 27344  00F9A2  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 27345  00F9A4  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 27346                           
 27347                           ; BSR set to: 0
 27348                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 27349  00F9A6  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27350  00F9AA  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27351  00F9AE  0E00               	movlw	0
 27352  00F9B0  84DB               	bsf	plusw2,2,c
 27353                           
 27354                           ; BSR set to: 0
 27355                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 27356  00F9B2  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27357  00F9B6  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27358  00F9BA  0E00               	movlw	0
 27359  00F9BC  8EDB               	bsf	plusw2,7,c
 27360  00F9BE  0012               	return	
 27361  00F9C0                     __end_of_USBStallEndpoint:
 27362                           	opt stack 0
 27363                           tosu	equ	0xFFF
 27364                           tosh	equ	0xFFE
 27365                           tosl	equ	0xFFD
 27366                           pclath	equ	0xFFA
 27367                           tblptru	equ	0xFF8
 27368                           tblptrh	equ	0xFF7
 27369                           tblptrl	equ	0xFF6
 27370                           tablat	equ	0xFF5
 27371                           prodh	equ	0xFF4
 27372                           prodl	equ	0xFF3
 27373                           intcon	equ	0xFF2
 27374                           postinc0	equ	0xFEE
 27375                           wreg	equ	0xFE8
 27376                           indf1	equ	0xFE7
 27377                           postdec1	equ	0xFE5
 27378                           plusw1	equ	0xFE3
 27379                           fsr1h	equ	0xFE2
 27380                           fsr1l	equ	0xFE1
 27381                           indf2	equ	0xFDF
 27382                           postinc2	equ	0xFDE
 27383                           postdec2	equ	0xFDD
 27384                           plusw2	equ	0xFDB
 27385                           fsr2h	equ	0xFDA
 27386                           fsr2l	equ	0xFD9
 27387                           status	equ	0xFD8
 27388                           
 27389 ;; *************** function _ResetSenseData *****************
 27390 ;; Defined at:
 27391 ;;		line 1373 in file "usb_device_msd.c"
 27392 ;; Parameters:    Size  Location     Type
 27393 ;;		None
 27394 ;; Auto vars:     Size  Location     Type
 27395 ;;		None
 27396 ;; Return value:  Size  Location     Type
 27397 ;;                  1    wreg      void 
 27398 ;; Registers used:
 27399 ;;		wreg, status,2
 27400 ;; Tracked objects:
 27401 ;;		On entry : 0/0
 27402 ;;		On exit  : 0/0
 27403 ;;		Unchanged: 0/0
 27404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27409 ;;Total ram usage:        0 bytes
 27410 ;; Hardware stack levels used:    1
 27411 ;; Hardware stack levels required when called:   10
 27412 ;; This function calls:
 27413 ;;		Nothing
 27414 ;; This function is called by:
 27415 ;;		_MSDProcessCommandMediaAbsent
 27416 ;;		_MSDProcessCommandMediaPresent
 27417 ;;		_MSDErrorHandler
 27418 ;; This function uses a non-reentrant model
 27419 ;;
 27420                           
 27421                           	psect	text92
 27422  011B0E                     __ptext92:
 27423                           	opt stack 0
 27424  011B0E                     _ResetSenseData:
 27425                           	opt stack 16
 27426                           
 27427                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 27428                           
 27429                           ; BSR set to: 0
 27430                           ;incstack = 0
 27431  011B0E  0101               	movlb	1	; () banked
 27432  011B10  911F               	bcf	_gblSenseData& (0+255),0,b
 27433  011B12  931F               	bcf	_gblSenseData& (0+255),1,b
 27434  011B14  951F               	bcf	_gblSenseData& (0+255),2,b
 27435  011B16  971F               	bcf	_gblSenseData& (0+255),3,b
 27436  011B18  891F               	bsf	_gblSenseData& (0+255),4,b
 27437  011B1A  8B1F               	bsf	_gblSenseData& (0+255),5,b
 27438  011B1C  8D1F               	bsf	_gblSenseData& (0+255),6,b
 27439                           
 27440                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 27441  011B1E  9F1F               	bcf	_gblSenseData& (0+255),7,b
 27442                           
 27443                           ; BSR set to: 1
 27444                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 27445  011B20  0E00               	movlw	0
 27446  011B22  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 27447                           
 27448                           ; BSR set to: 1
 27449                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 27450  011B24  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 27451  011B26  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 27452  011B28  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 27453  011B2A  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 27454                           
 27455                           ; BSR set to: 1
 27456                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 27457  011B2C  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 27458                           
 27459                           ; BSR set to: 1
 27460                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 27461  011B2E  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 27462                           
 27463                           ; BSR set to: 1
 27464                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 27465  011B30  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 27466                           
 27467                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 27468  011B32  0E00               	movlw	0
 27469  011B34  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 27470                           
 27471                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 27472  011B36  0E00               	movlw	0
 27473  011B38  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 27474                           
 27475                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 27476  011B3A  0E00               	movlw	0
 27477  011B3C  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 27478                           
 27479                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 27480  011B3E  0E00               	movlw	0
 27481  011B40  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 27482                           
 27483                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 27484  011B42  0E0A               	movlw	10
 27485  011B44  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 27486                           
 27487                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 27488  011B46  0E00               	movlw	0
 27489  011B48  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 27490  011B4A  0E00               	movlw	0
 27491  011B4C  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 27492  011B4E  0E00               	movlw	0
 27493  011B50  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 27494  011B52  0E00               	movlw	0
 27495  011B54  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 27496                           
 27497                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 27498  011B56  0E00               	movlw	0
 27499  011B58  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27500                           
 27501                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 27502  011B5A  0E00               	movlw	0
 27503  011B5C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27504                           
 27505                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 27506  011B5E  0E00               	movlw	0
 27507  011B60  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 27508                           
 27509                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 27510  011B62  0E00               	movlw	0
 27511  011B64  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 27512                           
 27513                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 27514  011B66  0E00               	movlw	0
 27515  011B68  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 27516                           
 27517                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 27518  011B6A  0E00               	movlw	0
 27519  011B6C  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 27520                           
 27521                           ; BSR set to: 1
 27522  011B6E  0012               	return		;funcret
 27523  011B70                     __end_of_ResetSenseData:
 27524                           	opt stack 0
 27525                           tosu	equ	0xFFF
 27526                           tosh	equ	0xFFE
 27527                           tosl	equ	0xFFD
 27528                           pclath	equ	0xFFA
 27529                           tblptru	equ	0xFF8
 27530                           tblptrh	equ	0xFF7
 27531                           tblptrl	equ	0xFF6
 27532                           tablat	equ	0xFF5
 27533                           prodh	equ	0xFF4
 27534                           prodl	equ	0xFF3
 27535                           intcon	equ	0xFF2
 27536                           postinc0	equ	0xFEE
 27537                           wreg	equ	0xFE8
 27538                           indf1	equ	0xFE7
 27539                           postdec1	equ	0xFE5
 27540                           plusw1	equ	0xFE3
 27541                           fsr1h	equ	0xFE2
 27542                           fsr1l	equ	0xFE1
 27543                           indf2	equ	0xFDF
 27544                           postinc2	equ	0xFDE
 27545                           postdec2	equ	0xFDD
 27546                           plusw2	equ	0xFDB
 27547                           fsr2h	equ	0xFDA
 27548                           fsr2l	equ	0xFD9
 27549                           status	equ	0xFD8
 27550                           
 27551 ;; *************** function _ExternalFlash_SectorRead *****************
 27552 ;; Defined at:
 27553 ;;		line 40 in file "external_flash.c"
 27554 ;; Parameters:    Size  Location     Type
 27555 ;;  config          2   43[BANK0 ] PTR void 
 27556 ;;		 -> NULL(0), 
 27557 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 27558 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 27559 ;;		 -> msd_buffer(512), 
 27560 ;; Auto vars:     Size  Location     Type
 27561 ;;  page            2   51[BANK0 ] unsigned int 
 27562 ;; Return value:  Size  Location     Type
 27563 ;;                  1    wreg      unsigned char 
 27564 ;; Registers used:
 27565 ;;		wreg, status,2, status,0, cstack
 27566 ;; Tracked objects:
 27567 ;;		On entry : 0/0
 27568 ;;		On exit  : 0/0
 27569 ;;		Unchanged: 0/0
 27570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27571 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27574 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27575 ;;Total ram usage:       10 bytes
 27576 ;; Hardware stack levels used:    1
 27577 ;; Hardware stack levels required when called:   15
 27578 ;; This function calls:
 27579 ;;		_flash_sector_read
 27580 ;; This function is called by:
 27581 ;;		_MSDReadHandler
 27582 ;; This function uses a non-reentrant model
 27583 ;;
 27584                           
 27585                           	psect	text93
 27586  0126AA                     __ptext93:
 27587                           	opt stack 0
 27588  0126AA                     _ExternalFlash_SectorRead:
 27589                           	opt stack 10
 27590                           
 27591                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 27592                           
 27593                           ; BSR set to: 1
 27594                           ;incstack = 0
 27595  0126AA  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 27596  0126AE  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 27597                           
 27598                           ;external_flash.c: 45: if(sector_addr >= 8192)
 27599  0126B2  0100               	movlb	0	; () banked
 27600  0126B4  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 27601  0126B6  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 27602  0126B8  E104               	bnz	u17250
 27603  0126BA  0E20               	movlw	32
 27604  0126BC  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 27605  0126BE  A0D8               	btfss	status,0,c
 27606  0126C0  D002               	goto	l1629
 27607  0126C2                     u17250:
 27608                           
 27609                           ; BSR set to: 0
 27610                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 27611  0126C2  0E00               	movlw	0
 27612                           
 27613                           ; BSR set to: 0
 27614  0126C4  0012               	return	
 27615  0126C6                     l1629:
 27616                           
 27617                           ; BSR set to: 0
 27618                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 27619                           
 27620                           ; BSR set to: 0
 27621  0126C6  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 27622  0126CA  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 27623  0126CE  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 27624  0126D2  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 27625  0126D6  EC70  F094         	call	_flash_sector_read	;wreg free
 27626                           
 27627                           ;external_flash.c: 53: return 1;
 27628  0126DA  0E01               	movlw	1
 27629  0126DC  0012               	return	
 27630  0126DE                     __end_of_ExternalFlash_SectorRead:
 27631                           	opt stack 0
 27632                           tosu	equ	0xFFF
 27633                           tosh	equ	0xFFE
 27634                           tosl	equ	0xFFD
 27635                           pclath	equ	0xFFA
 27636                           tblptru	equ	0xFF8
 27637                           tblptrh	equ	0xFF7
 27638                           tblptrl	equ	0xFF6
 27639                           tablat	equ	0xFF5
 27640                           prodh	equ	0xFF4
 27641                           prodl	equ	0xFF3
 27642                           intcon	equ	0xFF2
 27643                           postinc0	equ	0xFEE
 27644                           wreg	equ	0xFE8
 27645                           indf1	equ	0xFE7
 27646                           postdec1	equ	0xFE5
 27647                           plusw1	equ	0xFE3
 27648                           fsr1h	equ	0xFE2
 27649                           fsr1l	equ	0xFE1
 27650                           indf2	equ	0xFDF
 27651                           postinc2	equ	0xFDE
 27652                           postdec2	equ	0xFDD
 27653                           plusw2	equ	0xFDB
 27654                           fsr2h	equ	0xFDA
 27655                           fsr2l	equ	0xFD9
 27656                           status	equ	0xFD8
 27657                           
 27658 ;; *************** function _flash_sector_read *****************
 27659 ;; Defined at:
 27660 ;;		line 426 in file "flash.c"
 27661 ;; Parameters:    Size  Location     Type
 27662 ;;  page            2   39[BANK0 ] unsigned int 
 27663 ;;  data            2   41[BANK0 ] PTR unsigned char 
 27664 ;;		 -> buffer(512), msd_buffer(512), 
 27665 ;; Auto vars:     Size  Location     Type
 27666 ;;		None
 27667 ;; Return value:  Size  Location     Type
 27668 ;;                  1    wreg      void 
 27669 ;; Registers used:
 27670 ;;		wreg, status,2, status,0, cstack
 27671 ;; Tracked objects:
 27672 ;;		On entry : 0/0
 27673 ;;		On exit  : 0/0
 27674 ;;		Unchanged: 0/0
 27675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27679 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27680 ;;Total ram usage:        4 bytes
 27681 ;; Hardware stack levels used:    1
 27682 ;; Hardware stack levels required when called:   14
 27683 ;; This function calls:
 27684 ;;		__flash_partial_read
 27685 ;; This function is called by:
 27686 ;;		_ExternalFlash_SectorRead
 27687 ;;		_fat_get_format_status
 27688 ;;		__get_available_cluster
 27689 ;;		__find_nth_cluster
 27690 ;;		__make_cluster_chain
 27691 ;;		_fat_find_file
 27692 ;; This function uses a non-reentrant model
 27693 ;;
 27694                           
 27695                           	psect	text94
 27696  0128E0                     __ptext94:
 27697                           	opt stack 0
 27698  0128E0                     _flash_sector_read:
 27699                           	opt stack 13
 27700                           
 27701                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 27702                           
 27703                           ;incstack = 0
 27704  0128E0  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 27705  0128E4  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 27706  0128E8  0E00               	movlw	0
 27707  0128EA  0100               	movlb	0	; () banked
 27708  0128EC  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 27709  0128EE  0E00               	movlw	0
 27710  0128F0  6F75               	movwf	__flash_partial_read@start& (0+255),b
 27711  0128F2  0E02               	movlw	2
 27712  0128F4  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 27713  0128F6  0E00               	movlw	0
 27714  0128F8  6F77               	movwf	__flash_partial_read@length& (0+255),b
 27715  0128FA  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 27716  0128FE  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 27717  012902  ECD1  F08B         	call	__flash_partial_read	;wreg free
 27718  012906  0012               	return		;funcret
 27719  012908                     __end_of_flash_sector_read:
 27720                           	opt stack 0
 27721                           tosu	equ	0xFFF
 27722                           tosh	equ	0xFFE
 27723                           tosl	equ	0xFFD
 27724                           pclath	equ	0xFFA
 27725                           tblptru	equ	0xFF8
 27726                           tblptrh	equ	0xFF7
 27727                           tblptrl	equ	0xFF6
 27728                           tablat	equ	0xFF5
 27729                           prodh	equ	0xFF4
 27730                           prodl	equ	0xFF3
 27731                           intcon	equ	0xFF2
 27732                           postinc0	equ	0xFEE
 27733                           wreg	equ	0xFE8
 27734                           indf1	equ	0xFE7
 27735                           postdec1	equ	0xFE5
 27736                           plusw1	equ	0xFE3
 27737                           fsr1h	equ	0xFE2
 27738                           fsr1l	equ	0xFE1
 27739                           indf2	equ	0xFDF
 27740                           postinc2	equ	0xFDE
 27741                           postdec2	equ	0xFDD
 27742                           plusw2	equ	0xFDB
 27743                           fsr2h	equ	0xFDA
 27744                           fsr2l	equ	0xFD9
 27745                           status	equ	0xFD8
 27746                           
 27747 ;; *************** function __flash_partial_read *****************
 27748 ;; Defined at:
 27749 ;;		line 309 in file "flash.c"
 27750 ;; Parameters:    Size  Location     Type
 27751 ;;  page            2   19[BANK0 ] unsigned int 
 27752 ;;  start           2   21[BANK0 ] unsigned int 
 27753 ;;  length          2   23[BANK0 ] unsigned int 
 27754 ;;  data            2   25[BANK0 ] PTR unsigned char 
 27755 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 27756 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 27757 ;;		 -> buffer(512), msd_buffer(512), 
 27758 ;; Auto vars:     Size  Location     Type
 27759 ;;  command         4   31[BANK0 ] unsigned char [4]
 27760 ;;  address         4   35[BANK0 ] unsigned long 
 27761 ;; Return value:  Size  Location     Type
 27762 ;;                  1    wreg      void 
 27763 ;; Registers used:
 27764 ;;		wreg, status,2, status,0, cstack
 27765 ;; Tracked objects:
 27766 ;;		On entry : 0/0
 27767 ;;		On exit  : 0/0
 27768 ;;		Unchanged: 0/0
 27769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27770 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27771 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27773 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27774 ;;Total ram usage:       20 bytes
 27775 ;; Hardware stack levels used:    1
 27776 ;; Hardware stack levels required when called:   13
 27777 ;; This function calls:
 27778 ;;		__flash_is_busy
 27779 ;;		_spi_tx_rx
 27780 ;; This function is called by:
 27781 ;;		_flash_sector_read
 27782 ;;		_flash_partial_read
 27783 ;; This function uses a non-reentrant model
 27784 ;;
 27785                           
 27786                           	psect	text95
 27787  0117A2                     __ptext95:
 27788                           	opt stack 0
 27789  0117A2                     __flash_partial_read:
 27790                           	opt stack 13
 27791                           
 27792                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 27793                           
 27794                           ;incstack = 0
 27795  0117A2  ECB9  F094         	call	__flash_is_busy	;wreg free
 27796  0117A6  0900               	iorlw	0
 27797  0117A8  A4D8               	btfss	status,2,c
 27798  0117AA  D7FB               	goto	__flash_partial_read
 27799                           
 27800                           ;flash.c: 318: address = page;
 27801  0117AC  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 27802  0117B0  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 27803  0117B4  0100               	movlb	0	; () banked
 27804  0117B6  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 27805  0117B8  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 27806                           
 27807                           ; BSR set to: 0
 27808                           ;flash.c: 319: address <<= 9;
 27809  0117BA  0E09               	movlw	9
 27810  0117BC                     u16915:
 27811  0117BC  90D8               	bcf	status,0,c
 27812  0117BE  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 27813  0117C0  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 27814  0117C2  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 27815  0117C4  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 27816  0117C6  2EE8               	decfsz	wreg,f,c
 27817  0117C8  D7F9               	goto	u16915
 27818                           
 27819                           ; BSR set to: 0
 27820                           ;flash.c: 320: address |= start;
 27821  0117CA  5175               	movf	__flash_partial_read@start& (0+255),w,b
 27822  0117CC  6F7B               	movwf	??__flash_partial_read& (0+255),b
 27823  0117CE  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 27824  0117D0  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 27825  0117D2  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 27826  0117D4  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 27827  0117D6  517B               	movf	??__flash_partial_read& (0+255),w,b
 27828  0117D8  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 27829  0117DA  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 27830  0117DC  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 27831  0117DE  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 27832  0117E0  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 27833  0117E2  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 27834  0117E4  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 27835                           
 27836                           ; BSR set to: 0
 27837                           ;flash.c: 323: command[0] = 0x03;
 27838  0117E6  0E03               	movlw	3
 27839  0117E8  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 27840                           
 27841                           ; BSR set to: 0
 27842                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 27843  0117EA  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 27844                           
 27845                           ; BSR set to: 0
 27846                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 27847  0117EE  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 27848  0117F0  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 27849                           
 27850                           ; BSR set to: 0
 27851                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 27852  0117F2  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 27853                           
 27854                           ; BSR set to: 0
 27855                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 27856  0117F6  0E7F               	movlw	low __flash_partial_read@command
 27857  0117F8  6F60               	movwf	spi_tx_rx@command& (0+255),b
 27858  0117FA  0E00               	movlw	high __flash_partial_read@command
 27859  0117FC  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 27860  0117FE  0E00               	movlw	0
 27861  011800  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 27862  011802  0E04               	movlw	4
 27863  011804  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 27864  011806  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 27865  01180A  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 27866  01180E  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 27867  011812  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 27868  011816  EC0B  F089         	call	_spi_tx_rx	;wreg free
 27869  01181A  0012               	return		;funcret
 27870  01181C                     __end_of__flash_partial_read:
 27871                           	opt stack 0
 27872                           tosu	equ	0xFFF
 27873                           tosh	equ	0xFFE
 27874                           tosl	equ	0xFFD
 27875                           pclath	equ	0xFFA
 27876                           tblptru	equ	0xFF8
 27877                           tblptrh	equ	0xFF7
 27878                           tblptrl	equ	0xFF6
 27879                           tablat	equ	0xFF5
 27880                           prodh	equ	0xFF4
 27881                           prodl	equ	0xFF3
 27882                           intcon	equ	0xFF2
 27883                           postinc0	equ	0xFEE
 27884                           wreg	equ	0xFE8
 27885                           indf1	equ	0xFE7
 27886                           postdec1	equ	0xFE5
 27887                           plusw1	equ	0xFE3
 27888                           fsr1h	equ	0xFE2
 27889                           fsr1l	equ	0xFE1
 27890                           indf2	equ	0xFDF
 27891                           postinc2	equ	0xFDE
 27892                           postdec2	equ	0xFDD
 27893                           plusw2	equ	0xFDB
 27894                           fsr2h	equ	0xFDA
 27895                           fsr2l	equ	0xFD9
 27896                           status	equ	0xFD8
 27897                           
 27898 ;; *************** function __flash_is_busy *****************
 27899 ;; Defined at:
 27900 ;;		line 281 in file "flash.c"
 27901 ;; Parameters:    Size  Location     Type
 27902 ;;		None
 27903 ;; Auto vars:     Size  Location     Type
 27904 ;;  status          2   17[BANK0 ] unsigned int 
 27905 ;; Return value:  Size  Location     Type
 27906 ;;                  1    wreg      unsigned char 
 27907 ;; Registers used:
 27908 ;;		wreg, status,2, status,0, cstack
 27909 ;; Tracked objects:
 27910 ;;		On entry : 0/0
 27911 ;;		On exit  : 0/0
 27912 ;;		Unchanged: 0/0
 27913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27918 ;;Total ram usage:        2 bytes
 27919 ;; Hardware stack levels used:    1
 27920 ;; Hardware stack levels required when called:   12
 27921 ;; This function calls:
 27922 ;;		__flash_get_status
 27923 ;;		__flash_wakeup
 27924 ;; This function is called by:
 27925 ;;		__flash_set_page_size
 27926 ;;		__flash_compare_page_to_buffer
 27927 ;;		__flash_write_to_buffer
 27928 ;;		__flash_write_page_from_buffer
 27929 ;;		__flash_partial_read
 27930 ;;		__flash_copy_page_to_buffer
 27931 ;;		__flash_erase_page
 27932 ;;		__flash_buffer_read
 27933 ;;		_flash_is_busy
 27934 ;;		_flash_set_power_state
 27935 ;;		_flash_partial_write
 27936 ;; This function uses a non-reentrant model
 27937 ;;
 27938                           
 27939                           	psect	text96
 27940  012972                     __ptext96:
 27941                           	opt stack 0
 27942  012972                     __flash_is_busy:
 27943                           	opt stack 15
 27944                           
 27945                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 27946                           
 27947                           ;incstack = 0
 27948  012972  5024               	movf	_power_state,w,c
 27949  012974  A4D8               	btfss	status,2,c
 27950                           
 27951                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 27952  012976  EC56  F090         	call	__flash_wakeup	;wreg free
 27953                           
 27954                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 27955  01297A  EC6F  F093         	call	__flash_get_status	;wreg free
 27956  01297E  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 27957  012982  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 27958                           
 27959                           ;flash.c: 295: if(status & 0b0000000010000000)
 27960  012986  0100               	movlb	0	; () banked
 27961  012988  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 27962  01298A  D002               	goto	l1535
 27963                           
 27964                           ; BSR set to: 0
 27965                           ;flash.c: 296: {;flash.c: 298: return 0;
 27966  01298C  0E00               	movlw	0
 27967                           
 27968                           ; BSR set to: 0
 27969                           ;flash.c: 299: }
 27970                           
 27971                           ; BSR set to: 0
 27972  01298E  0012               	return	
 27973  012990                     l1535:
 27974                           
 27975                           ; BSR set to: 0
 27976                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 27977                           
 27978                           ; BSR set to: 0
 27979  012990  0E01               	movlw	1
 27980                           
 27981                           ; BSR set to: 0
 27982  012992  0012               	return	
 27983  012994                     __end_of__flash_is_busy:
 27984                           	opt stack 0
 27985                           tosu	equ	0xFFF
 27986                           tosh	equ	0xFFE
 27987                           tosl	equ	0xFFD
 27988                           pclath	equ	0xFFA
 27989                           tblptru	equ	0xFF8
 27990                           tblptrh	equ	0xFF7
 27991                           tblptrl	equ	0xFF6
 27992                           tablat	equ	0xFF5
 27993                           prodh	equ	0xFF4
 27994                           prodl	equ	0xFF3
 27995                           intcon	equ	0xFF2
 27996                           postinc0	equ	0xFEE
 27997                           wreg	equ	0xFE8
 27998                           indf1	equ	0xFE7
 27999                           postdec1	equ	0xFE5
 28000                           plusw1	equ	0xFE3
 28001                           fsr1h	equ	0xFE2
 28002                           fsr1l	equ	0xFE1
 28003                           indf2	equ	0xFDF
 28004                           postinc2	equ	0xFDE
 28005                           postdec2	equ	0xFDD
 28006                           plusw2	equ	0xFDB
 28007                           fsr2h	equ	0xFDA
 28008                           fsr2l	equ	0xFD9
 28009                           status	equ	0xFD8
 28010                           
 28011 ;; *************** function __flash_wakeup *****************
 28012 ;; Defined at:
 28013 ;;		line 128 in file "flash.c"
 28014 ;; Parameters:    Size  Location     Type
 28015 ;;		None
 28016 ;; Auto vars:     Size  Location     Type
 28017 ;;  command         1    8[BANK0 ] unsigned char 
 28018 ;; Return value:  Size  Location     Type
 28019 ;;                  1    wreg      void 
 28020 ;; Registers used:
 28021 ;;		wreg, status,2, status,0, cstack
 28022 ;; Tracked objects:
 28023 ;;		On entry : 0/0
 28024 ;;		On exit  : 0/0
 28025 ;;		Unchanged: 0/0
 28026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28031 ;;Total ram usage:        1 bytes
 28032 ;; Hardware stack levels used:    1
 28033 ;; Hardware stack levels required when called:   11
 28034 ;; This function calls:
 28035 ;;		_spi_tx
 28036 ;; This function is called by:
 28037 ;;		__flash_is_busy
 28038 ;;		_flash_set_power_state
 28039 ;; This function uses a non-reentrant model
 28040 ;;
 28041                           
 28042                           	psect	text97
 28043  0120AC                     __ptext97:
 28044                           	opt stack 0
 28045  0120AC                     __flash_wakeup:
 28046                           	opt stack 15
 28047                           
 28048                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 28049                           
 28050                           ; BSR set to: 0
 28051                           ;incstack = 0
 28052  0120AC  D020               	goto	l1484
 28053  0120AE                     
 28054                           ;flash.c: 135: command = 0xAB;
 28055  0120AE  0EAB               	movlw	171
 28056  0120B0  0100               	movlb	0	; () banked
 28057  0120B2  6F68               	movwf	__flash_wakeup@command& (0+255),b
 28058                           
 28059                           ; BSR set to: 0
 28060                           ;flash.c: 136: spi_tx(&command, 1);
 28061  0120B4  0E68               	movlw	low __flash_wakeup@command
 28062  0120B6  6F60               	movwf	spi_tx@data& (0+255),b
 28063  0120B8  0E00               	movlw	high __flash_wakeup@command
 28064  0120BA  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 28065  0120BC  0E00               	movlw	0
 28066  0120BE  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 28067  0120C0  0E01               	movlw	1
 28068  0120C2  6F62               	movwf	spi_tx@length& (0+255),b
 28069  0120C4  ECFF  F08E         	call	_spi_tx	;wreg free
 28070                           
 28071                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 28072  0120C8  0E17               	movlw	23
 28073  0120CA                     u23837:
 28074  0120CA  2EE8               	decfsz	wreg,f,c
 28075  0120CC  D7FE               	bra	u23837
 28076  0120CE  F000               	nop	
 28077                           
 28078                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 28079  0120D0  0E00               	movlw	0
 28080  0120D2  6E24               	movwf	_power_state,c
 28081                           
 28082                           ;flash.c: 139: break;
 28083  0120D4  0012               	return	
 28084  0120D6                     l1487:
 28085                           
 28086                           ;flash.c: 144: LATDbits.LD7 = 0;
 28087  0120D6  9E8C               	bcf	3980,7,c	;volatile
 28088                           
 28089                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 28090  0120D8  0E0D               	movlw	13
 28091  0120DA                     u23847:
 28092  0120DA  2EE8               	decfsz	wreg,f,c
 28093  0120DC  D7FE               	bra	u23847
 28094  0120DE  F000               	nop	
 28095                           
 28096                           ;flash.c: 146: LATDbits.LD7 = 1;
 28097  0120E0  8E8C               	bsf	3980,7,c	;volatile
 28098                           
 28099                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 28100  0120E2  0E50               	movlw	80
 28101  0120E4                     u23857:
 28102  0120E4  2EE8               	decfsz	wreg,f,c
 28103  0120E6  D7FE               	bra	u23857
 28104                           
 28105                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 28106  0120E8  0E00               	movlw	0
 28107  0120EA  6E24               	movwf	_power_state,c
 28108                           
 28109                           ;flash.c: 150: }
 28110                           
 28111                           ;flash.c: 149: break;
 28112  0120EC  0012               	return	
 28113  0120EE                     l1484:
 28114  0120EE  5024               	movf	_power_state,w,c
 28115                           
 28116                           ; Switch size 1, requested type "space"
 28117                           ; Number of cases is 2, Range of values is 1 to 2
 28118                           ; switch strategies available:
 28119                           ; Name         Instructions Cycles
 28120                           ; simple_byte            7     4 (average)
 28121                           ;	Chosen strategy is simple_byte
 28122  0120F0  0A01               	xorlw	1	; case 1
 28123  0120F2  B4D8               	btfsc	status,2,c
 28124  0120F4  D7DC               	goto	l1485
 28125  0120F6  0A03               	xorlw	3	; case 2
 28126  0120F8  A4D8               	btfss	status,2,c
 28127  0120FA  0012               	return	
 28128  0120FC  D7EC               	goto	l1487
 28129  0120FE                     __end_of__flash_wakeup:
 28130                           	opt stack 0
 28131                           tosu	equ	0xFFF
 28132                           tosh	equ	0xFFE
 28133                           tosl	equ	0xFFD
 28134                           pclath	equ	0xFFA
 28135                           tblptru	equ	0xFF8
 28136                           tblptrh	equ	0xFF7
 28137                           tblptrl	equ	0xFF6
 28138                           tablat	equ	0xFF5
 28139                           prodh	equ	0xFF4
 28140                           prodl	equ	0xFF3
 28141                           intcon	equ	0xFF2
 28142                           postinc0	equ	0xFEE
 28143                           wreg	equ	0xFE8
 28144                           indf1	equ	0xFE7
 28145                           postdec1	equ	0xFE5
 28146                           plusw1	equ	0xFE3
 28147                           fsr1h	equ	0xFE2
 28148                           fsr1l	equ	0xFE1
 28149                           indf2	equ	0xFDF
 28150                           postinc2	equ	0xFDE
 28151                           postdec2	equ	0xFDD
 28152                           plusw2	equ	0xFDB
 28153                           fsr2h	equ	0xFDA
 28154                           fsr2l	equ	0xFD9
 28155                           status	equ	0xFD8
 28156                           
 28157 ;; *************** function _spi_tx *****************
 28158 ;; Defined at:
 28159 ;;		line 108 in file "spi.c"
 28160 ;; Parameters:    Size  Location     Type
 28161 ;;  data            2    0[BANK0 ] PTR unsigned char 
 28162 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 28163 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 28164 ;;  length          2    2[BANK0 ] unsigned int 
 28165 ;; Auto vars:     Size  Location     Type
 28166 ;;		None
 28167 ;; Return value:  Size  Location     Type
 28168 ;;                  1    wreg      void 
 28169 ;; Registers used:
 28170 ;;		wreg, status,2, status,0
 28171 ;; Tracked objects:
 28172 ;;		On entry : 0/0
 28173 ;;		On exit  : 0/0
 28174 ;;		Unchanged: 0/0
 28175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28176 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28178 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28179 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28180 ;;Total ram usage:        8 bytes
 28181 ;; Hardware stack levels used:    1
 28182 ;; Hardware stack levels required when called:   10
 28183 ;; This function calls:
 28184 ;;		Nothing
 28185 ;; This function is called by:
 28186 ;;		__flash_set_page_size
 28187 ;;		__flash_wakeup
 28188 ;;		__flash_compare_page_to_buffer
 28189 ;;		__flash_write_page_from_buffer
 28190 ;;		__flash_copy_page_to_buffer
 28191 ;;		__flash_erase_page
 28192 ;;		_flash_set_power_state
 28193 ;; This function uses a non-reentrant model
 28194 ;;
 28195                           
 28196                           	psect	text98
 28197  011DFE                     __ptext98:
 28198                           	opt stack 0
 28199  011DFE                     _spi_tx:
 28200                           	opt stack 17
 28201                           
 28202                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 28203                           
 28204                           ;incstack = 0
 28205  011DFE  9E88               	bcf	3976,7,c	;volatile
 28206                           
 28207                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 28208  011E00  9C88               	bcf	3976,6,c	;volatile
 28209                           
 28210                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 28211  011E02  8A88               	bsf	3976,5,c	;volatile
 28212                           
 28213                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 28214  011E04  9888               	bcf	3976,4,c	;volatile
 28215                           
 28216                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 28217  011E06  9688               	bcf	3976,3,c	;volatile
 28218                           
 28219                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 28220  011E08  8488               	bsf	3976,2,c	;volatile
 28221                           
 28222                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 28223  011E0A  9288               	bcf	3976,1,c	;volatile
 28224                           
 28225                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 28226  011E0C  9886               	bcf	3974,4,c	;volatile
 28227  011E0E  9A86               	bcf	3974,5,c	;volatile
 28228  011E10  9C86               	bcf	3974,6,c	;volatile
 28229  011E12  9E86               	bcf	3974,7,c	;volatile
 28230                           
 28231                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 28232  011E14  9086               	bcf	3974,0,c	;volatile
 28233  011E16  9286               	bcf	3974,1,c	;volatile
 28234  011E18  9486               	bcf	3974,2,c	;volatile
 28235  011E1A  9686               	bcf	3974,3,c	;volatile
 28236                           
 28237                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 28238  011E1C  0100               	movlb	0	; () banked
 28239  011E1E  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 28240  011E20  6E6A               	movwf	3946,c	;volatile
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 28244  011E22  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 28245                           
 28246                           ; BSR set to: 0
 28247                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 28248  011E26  0EFF               	movlw	255
 28249  011E28  6F64               	movwf	??_spi_tx& (0+255),b
 28250  011E2A  0EFF               	movlw	255
 28251  011E2C  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 28252  011E2E  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 28253  011E32  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 28254  011E36  5164               	movf	??_spi_tx& (0+255),w,b
 28255  011E38  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 28256  011E3A  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 28257  011E3C  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 28258  011E3E  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 28259  011E42  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 28260  011E44  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 28261  011E46  6E66               	movwf	3942,c	;volatile
 28262                           
 28263                           ; BSR set to: 0
 28264                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 28265  011E48  0562               	decf	spi_tx@length& (0+255),w,b
 28266  011E4A  6E67               	movwf	3943,c	;volatile
 28267                           
 28268                           ; BSR set to: 0
 28269                           ;spi.c: 136: LATDbits.LD7 = 0;
 28270  011E4C  9E8C               	bcf	3980,7,c	;volatile
 28271                           
 28272                           ; BSR set to: 0
 28273                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 28274  011E4E  8088               	bsf	3976,0,c	;volatile
 28275  011E50                     
 28276                           ; BSR set to: 0
 28277  011E50  B088               	btfsc	3976,0,c	;volatile
 28278  011E52  D7FE               	goto	l2123
 28279                           
 28280                           ;spi.c: 139: LATDbits.LD7 = 1;
 28281  011E54  8E8C               	bsf	3980,7,c	;volatile
 28282  011E56  0012               	return		;funcret
 28283  011E58                     __end_of_spi_tx:
 28284                           	opt stack 0
 28285                           tosu	equ	0xFFF
 28286                           tosh	equ	0xFFE
 28287                           tosl	equ	0xFFD
 28288                           pclath	equ	0xFFA
 28289                           tblptru	equ	0xFF8
 28290                           tblptrh	equ	0xFF7
 28291                           tblptrl	equ	0xFF6
 28292                           tablat	equ	0xFF5
 28293                           prodh	equ	0xFF4
 28294                           prodl	equ	0xFF3
 28295                           intcon	equ	0xFF2
 28296                           postinc0	equ	0xFEE
 28297                           wreg	equ	0xFE8
 28298                           indf1	equ	0xFE7
 28299                           postdec1	equ	0xFE5
 28300                           plusw1	equ	0xFE3
 28301                           fsr1h	equ	0xFE2
 28302                           fsr1l	equ	0xFE1
 28303                           indf2	equ	0xFDF
 28304                           postinc2	equ	0xFDE
 28305                           postdec2	equ	0xFDD
 28306                           plusw2	equ	0xFDB
 28307                           fsr2h	equ	0xFDA
 28308                           fsr2l	equ	0xFD9
 28309                           status	equ	0xFD8
 28310                           
 28311 ;; *************** function __flash_get_status *****************
 28312 ;; Defined at:
 28313 ;;		line 117 in file "flash.c"
 28314 ;; Parameters:    Size  Location     Type
 28315 ;;		None
 28316 ;; Auto vars:     Size  Location     Type
 28317 ;;  status          2   15[BANK0 ] unsigned int 
 28318 ;;  command         1   14[BANK0 ] unsigned char 
 28319 ;; Return value:  Size  Location     Type
 28320 ;;                  2   12[BANK0 ] unsigned int 
 28321 ;; Registers used:
 28322 ;;		wreg, status,2, status,0, cstack
 28323 ;; Tracked objects:
 28324 ;;		On entry : 0/0
 28325 ;;		On exit  : 0/0
 28326 ;;		Unchanged: 0/0
 28327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28329 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28331 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28332 ;;Total ram usage:        5 bytes
 28333 ;; Hardware stack levels used:    1
 28334 ;; Hardware stack levels required when called:   11
 28335 ;; This function calls:
 28336 ;;		_spi_tx_rx
 28337 ;; This function is called by:
 28338 ;;		__flash_compare_page_to_buffer
 28339 ;;		__flash_is_busy
 28340 ;; This function uses a non-reentrant model
 28341 ;;
 28342                           
 28343                           	psect	text99
 28344  0126DE                     __ptext99:
 28345                           	opt stack 0
 28346  0126DE                     __flash_get_status:
 28347                           	opt stack 15
 28348                           
 28349                           ;flash.c: 121: uint8_t command = 0xD7;
 28350                           
 28351                           ;incstack = 0
 28352  0126DE  0ED7               	movlw	215
 28353  0126E0  0100               	movlb	0	; () banked
 28354  0126E2  6F6E               	movwf	__flash_get_status@command& (0+255),b
 28355                           
 28356                           ; BSR set to: 0
 28357                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 28358  0126E4  0E6E               	movlw	low __flash_get_status@command
 28359  0126E6  6F60               	movwf	spi_tx_rx@command& (0+255),b
 28360  0126E8  0E00               	movlw	high __flash_get_status@command
 28361  0126EA  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 28362  0126EC  0E00               	movlw	0
 28363  0126EE  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 28364  0126F0  0E01               	movlw	1
 28365  0126F2  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 28366  0126F4  0E6F               	movlw	low __flash_get_status@status
 28367  0126F6  6F64               	movwf	spi_tx_rx@data& (0+255),b
 28368  0126F8  0E00               	movlw	high __flash_get_status@status
 28369  0126FA  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 28370  0126FC  0E00               	movlw	0
 28371  0126FE  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 28372  012700  0E02               	movlw	2
 28373  012702  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 28374  012704  EC0B  F089         	call	_spi_tx_rx	;wreg free
 28375                           
 28376                           ;flash.c: 124: return status;
 28377  012708  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 28378  01270C  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 28379  012710  0012               	return	
 28380  012712                     __end_of__flash_get_status:
 28381                           	opt stack 0
 28382                           tosu	equ	0xFFF
 28383                           tosh	equ	0xFFE
 28384                           tosl	equ	0xFFD
 28385                           pclath	equ	0xFFA
 28386                           tblptru	equ	0xFF8
 28387                           tblptrh	equ	0xFF7
 28388                           tblptrl	equ	0xFF6
 28389                           tablat	equ	0xFF5
 28390                           prodh	equ	0xFF4
 28391                           prodl	equ	0xFF3
 28392                           intcon	equ	0xFF2
 28393                           postinc0	equ	0xFEE
 28394                           wreg	equ	0xFE8
 28395                           indf1	equ	0xFE7
 28396                           postdec1	equ	0xFE5
 28397                           plusw1	equ	0xFE3
 28398                           fsr1h	equ	0xFE2
 28399                           fsr1l	equ	0xFE1
 28400                           indf2	equ	0xFDF
 28401                           postinc2	equ	0xFDE
 28402                           postdec2	equ	0xFDD
 28403                           plusw2	equ	0xFDB
 28404                           fsr2h	equ	0xFDA
 28405                           fsr2l	equ	0xFD9
 28406                           status	equ	0xFD8
 28407                           
 28408 ;; *************** function _spi_tx_rx *****************
 28409 ;; Defined at:
 28410 ;;		line 199 in file "spi.c"
 28411 ;; Parameters:    Size  Location     Type
 28412 ;;  command         2    0[BANK0 ] PTR unsigned char 
 28413 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 28414 ;;  command_leng    2    2[BANK0 ] unsigned int 
 28415 ;;  data            2    4[BANK0 ] PTR unsigned char 
 28416 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 28417 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 28418 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 28419 ;;  data_length     2    6[BANK0 ] unsigned int 
 28420 ;; Auto vars:     Size  Location     Type
 28421 ;;		None
 28422 ;; Return value:  Size  Location     Type
 28423 ;;                  1    wreg      void 
 28424 ;; Registers used:
 28425 ;;		wreg, status,2, status,0
 28426 ;; Tracked objects:
 28427 ;;		On entry : 0/0
 28428 ;;		On exit  : 0/0
 28429 ;;		Unchanged: 0/0
 28430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28431 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28433 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28434 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28435 ;;Total ram usage:       12 bytes
 28436 ;; Hardware stack levels used:    1
 28437 ;; Hardware stack levels required when called:   10
 28438 ;; This function calls:
 28439 ;;		Nothing
 28440 ;; This function is called by:
 28441 ;;		__flash_get_status
 28442 ;;		__flash_partial_read
 28443 ;;		__flash_buffer_read
 28444 ;; This function uses a non-reentrant model
 28445 ;;
 28446                           
 28447                           	psect	text100
 28448  011216                     __ptext100:
 28449                           	opt stack 0
 28450  011216                     _spi_tx_rx:
 28451                           	opt stack 15
 28452                           
 28453                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 28454                           
 28455                           ;incstack = 0
 28456  011216  9E88               	bcf	3976,7,c	;volatile
 28457                           
 28458                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 28459  011218  9C88               	bcf	3976,6,c	;volatile
 28460                           
 28461                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 28462  01121A  8A88               	bsf	3976,5,c	;volatile
 28463                           
 28464                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 28465  01121C  9888               	bcf	3976,4,c	;volatile
 28466                           
 28467                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 28468  01121E  9688               	bcf	3976,3,c	;volatile
 28469                           
 28470                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 28471  011220  8488               	bsf	3976,2,c	;volatile
 28472                           
 28473                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 28474  011222  9288               	bcf	3976,1,c	;volatile
 28475                           
 28476                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 28477  011224  9886               	bcf	3974,4,c	;volatile
 28478  011226  9A86               	bcf	3974,5,c	;volatile
 28479  011228  9C86               	bcf	3974,6,c	;volatile
 28480  01122A  9E86               	bcf	3974,7,c	;volatile
 28481                           
 28482                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 28483  01122C  9086               	bcf	3974,0,c	;volatile
 28484  01122E  9286               	bcf	3974,1,c	;volatile
 28485  011230  9486               	bcf	3974,2,c	;volatile
 28486  011232  9686               	bcf	3974,3,c	;volatile
 28487                           
 28488                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 28489  011234  0100               	movlb	0	; () banked
 28490  011236  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 28491  011238  6E6A               	movwf	3946,c	;volatile
 28492                           
 28493                           ; BSR set to: 0
 28494                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 28495  01123A  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 28499  01123E  0EFF               	movlw	255
 28500  011240  6F68               	movwf	??_spi_tx_rx& (0+255),b
 28501  011242  0EFF               	movlw	255
 28502  011244  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 28503  011246  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 28504  01124A  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 28505  01124E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 28506  011250  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 28507  011252  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 28508  011254  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 28509  011256  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 28510  01125A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 28511  01125C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 28512  01125E  6E66               	movwf	3942,c	;volatile
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 28516  011260  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 28517  011262  6E67               	movwf	3943,c	;volatile
 28518                           
 28519                           ; BSR set to: 0
 28520                           ;spi.c: 227: LATDbits.LD7 = 0;
 28521  011264  9E8C               	bcf	3980,7,c	;volatile
 28522                           
 28523                           ; BSR set to: 0
 28524                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 28525  011266  8088               	bsf	3976,0,c	;volatile
 28526  011268                     
 28527                           ; BSR set to: 0
 28528  011268  B088               	btfsc	3976,0,c	;volatile
 28529  01126A  D7FE               	goto	l2138
 28530                           
 28531                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 28532  01126C  9A88               	bcf	3976,5,c	;volatile
 28533                           
 28534                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 28535  01126E  8888               	bsf	3976,4,c	;volatile
 28536                           
 28537                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 28538  011270  9688               	bcf	3976,3,c	;volatile
 28539                           
 28540                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 28541  011272  9488               	bcf	3976,2,c	;volatile
 28542                           
 28543                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 28544  011274  0100               	movlb	0	; () banked
 28545  011276  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 28546  011278  6E68               	movwf	3944,c	;volatile
 28547                           
 28548                           ; BSR set to: 0
 28549                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 28550  01127A  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 28551                           
 28552                           ; BSR set to: 0
 28553                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 28554  01127E  0EFF               	movlw	255
 28555  011280  6F68               	movwf	??_spi_tx_rx& (0+255),b
 28556  011282  0EFF               	movlw	255
 28557  011284  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 28558  011286  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 28559  01128A  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 28560  01128E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 28561  011290  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 28562  011292  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 28563  011294  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 28564  011296  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 28565  01129A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 28566  01129C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 28567  01129E  6E66               	movwf	3942,c	;volatile
 28568                           
 28569                           ; BSR set to: 0
 28570                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 28571  0112A0  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 28572  0112A2  6E67               	movwf	3943,c	;volatile
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 28576  0112A4  8088               	bsf	3976,0,c	;volatile
 28577  0112A6                     
 28578                           ; BSR set to: 0
 28579  0112A6  B088               	btfsc	3976,0,c	;volatile
 28580  0112A8  D7FE               	goto	l2141
 28581                           
 28582                           ;spi.c: 254: LATDbits.LD7 = 1;
 28583  0112AA  8E8C               	bsf	3980,7,c	;volatile
 28584  0112AC  0012               	return		;funcret
 28585  0112AE                     __end_of_spi_tx_rx:
 28586                           	opt stack 0
 28587                           tosu	equ	0xFFF
 28588                           tosh	equ	0xFFE
 28589                           tosl	equ	0xFFD
 28590                           pclath	equ	0xFFA
 28591                           tblptru	equ	0xFF8
 28592                           tblptrh	equ	0xFF7
 28593                           tblptrl	equ	0xFF6
 28594                           tablat	equ	0xFF5
 28595                           prodh	equ	0xFF4
 28596                           prodl	equ	0xFF3
 28597                           intcon	equ	0xFF2
 28598                           postinc0	equ	0xFEE
 28599                           wreg	equ	0xFE8
 28600                           indf1	equ	0xFE7
 28601                           postdec1	equ	0xFE5
 28602                           plusw1	equ	0xFE3
 28603                           fsr1h	equ	0xFE2
 28604                           fsr1l	equ	0xFE1
 28605                           indf2	equ	0xFDF
 28606                           postinc2	equ	0xFDE
 28607                           postdec2	equ	0xFDD
 28608                           plusw2	equ	0xFDB
 28609                           fsr2h	equ	0xFDA
 28610                           fsr2l	equ	0xFD9
 28611                           status	equ	0xFD8
 28612                           
 28613 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 28614 ;; Defined at:
 28615 ;;		line 993 in file "usb_device_msd.c"
 28616 ;; Parameters:    Size  Location     Type
 28617 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 28618 ;; Auto vars:     Size  Location     Type
 28619 ;;		None
 28620 ;; Return value:  Size  Location     Type
 28621 ;;                  1    wreg      void 
 28622 ;; Registers used:
 28623 ;;		wreg, status,2, status,0
 28624 ;; Tracked objects:
 28625 ;;		On entry : 0/0
 28626 ;;		On exit  : 0/0
 28627 ;;		Unchanged: 0/0
 28628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28631 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28632 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28633 ;;Total ram usage:        6 bytes
 28634 ;; Hardware stack levels used:    1
 28635 ;; Hardware stack levels required when called:   10
 28636 ;; This function calls:
 28637 ;;		Nothing
 28638 ;; This function is called by:
 28639 ;;		_MSDProcessCommandMediaPresent
 28640 ;; This function uses a non-reentrant model
 28641 ;;
 28642                           
 28643                           	psect	text101
 28644  010CD4                     __ptext101:
 28645                           	opt stack 0
 28646  010CD4                     _MSDComputeDeviceInAndResidue:
 28647                           	opt stack 16
 28648                           
 28649                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 28650                           
 28651                           ;incstack = 0
 28652  010CD4  0100               	movlb	0	; () banked
 28653  010CD6  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 28654  010CD8  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 28655  010CDA  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 28656  010CDC  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 28657  010CDE  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 28658  010CE0  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 28659  010CE2  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 28660  010CE4  0101               	movlb	1	; () banked
 28661  010CE6  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 28662  010CE8  0100               	movlb	0	; () banked
 28663  010CEA  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 28664  010CEC  0101               	movlb	1	; () banked
 28665  010CEE  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 28666  010CF0  0100               	movlb	0	; () banked
 28667  010CF2  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 28668  010CF4  0101               	movlb	1	; () banked
 28669  010CF6  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 28670  010CF8  0100               	movlb	0	; () banked
 28671  010CFA  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 28672  010CFC  0101               	movlb	1	; () banked
 28673  010CFE  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 28674  010D00  B0D8               	btfsc	status,0,c
 28675  010D02  D00E               	goto	l675
 28676                           
 28677                           ; BSR set to: 1
 28678                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 28679  010D04  0E00               	movlw	0
 28680  010D06  010D               	movlb	13	; () banked
 28681  010D08  6F88               	movwf	136,b	;volatile
 28682  010D0A  0E00               	movlw	0
 28683  010D0C  6F89               	movwf	137,b	;volatile
 28684  010D0E  0E00               	movlw	0
 28685  010D10  6F8A               	movwf	138,b	;volatile
 28686  010D12  0E00               	movlw	0
 28687  010D14  6F8B               	movwf	139,b	;volatile
 28688                           
 28689                           ; BSR set to: 13
 28690                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 28691  010D16  C108  F01A         	movff	_gblCBW+8,_TransferLength
 28692  010D1A  C109  F01B         	movff	_gblCBW+9,_TransferLength+1
 28693                           
 28694                           ;usb_device_msd.c: 1002: }
 28695  010D1E  0012               	return	
 28696  010D20                     l675:
 28697                           
 28698                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 28699                           
 28700                           ; BSR set to: 13
 28701  010D20  501A               	movf	_TransferLength,w,c
 28702  010D22  0100               	movlb	0	; () banked
 28703  010D24  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 28704  010D26  501B               	movf	_TransferLength+1,w,c
 28705  010D28  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 28706  010D2A  B0D8               	btfsc	status,0,c
 28707  010D2C  D004               	goto	l677
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 28711  010D2E  C060  F01A         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 28712  010D32  C061  F01B         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 28713  010D36                     l677:
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 28717                           
 28718                           ; BSR set to: 0
 28719  010D36  501A               	movf	_TransferLength,w,c
 28720  010D38  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 28721  010D3A  501B               	movf	_TransferLength+1,w,c
 28722  010D3C  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 28723  010D3E  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 28724  010D40  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 28725  010D42  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 28726  010D44  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 28727  010D46  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 28728  010D48  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 28729  010D4A  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 28730  010D4C  0E00               	movlw	0
 28731  010D4E  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 28732  010D50  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 28733  010D52  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 28734  010D54  0101               	movlb	1	; () banked
 28735  010D56  5108               	movf	(_gblCBW+8)& (0+255),w,b
 28736  010D58  0100               	movlb	0	; () banked
 28737  010D5A  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 28738  010D5C  010D               	movlb	13	; () banked
 28739  010D5E  6F88               	movwf	136,b	;volatile
 28740  010D60  0101               	movlb	1	; () banked
 28741  010D62  5109               	movf	(_gblCBW+9)& (0+255),w,b
 28742  010D64  0100               	movlb	0	; () banked
 28743  010D66  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 28744  010D68  010D               	movlb	13	; () banked
 28745  010D6A  6F89               	movwf	137,b	;volatile
 28746  010D6C  0101               	movlb	1	; () banked
 28747  010D6E  510A               	movf	(_gblCBW+10)& (0+255),w,b
 28748  010D70  0100               	movlb	0	; () banked
 28749  010D72  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 28750  010D74  010D               	movlb	13	; () banked
 28751  010D76  6F8A               	movwf	138,b	;volatile
 28752  010D78  0101               	movlb	1	; () banked
 28753  010D7A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 28754  010D7C  0100               	movlb	0	; () banked
 28755  010D7E  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 28756  010D80  010D               	movlb	13	; () banked
 28757  010D82  6F8B               	movwf	139,b	;volatile
 28758  010D84  0012               	return	
 28759  010D86                     __end_of_MSDComputeDeviceInAndResidue:
 28760                           	opt stack 0
 28761                           tosu	equ	0xFFF
 28762                           tosh	equ	0xFFE
 28763                           tosl	equ	0xFFD
 28764                           pclath	equ	0xFFA
 28765                           tblptru	equ	0xFF8
 28766                           tblptrh	equ	0xFF7
 28767                           tblptrl	equ	0xFF6
 28768                           tablat	equ	0xFF5
 28769                           prodh	equ	0xFF4
 28770                           prodl	equ	0xFF3
 28771                           intcon	equ	0xFF2
 28772                           postinc0	equ	0xFEE
 28773                           wreg	equ	0xFE8
 28774                           indf1	equ	0xFE7
 28775                           postdec1	equ	0xFE5
 28776                           plusw1	equ	0xFE3
 28777                           fsr1h	equ	0xFE2
 28778                           fsr1l	equ	0xFE1
 28779                           indf2	equ	0xFDF
 28780                           postinc2	equ	0xFDE
 28781                           postdec2	equ	0xFDD
 28782                           plusw2	equ	0xFDB
 28783                           fsr2h	equ	0xFDA
 28784                           fsr2l	equ	0xFD9
 28785                           status	equ	0xFD8
 28786                           
 28787 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 28788 ;; Defined at:
 28789 ;;		line 18 in file "external_flash.c"
 28790 ;; Parameters:    Size  Location     Type
 28791 ;;  config          2    0[BANK0 ] PTR void 
 28792 ;;		 -> NULL(0), 
 28793 ;; Auto vars:     Size  Location     Type
 28794 ;;		None
 28795 ;; Return value:  Size  Location     Type
 28796 ;;                  2    0[BANK0 ] unsigned int 
 28797 ;; Registers used:
 28798 ;;		wreg, status,2
 28799 ;; Tracked objects:
 28800 ;;		On entry : 0/0
 28801 ;;		On exit  : 0/0
 28802 ;;		Unchanged: 0/0
 28803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28807 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28808 ;;Total ram usage:        2 bytes
 28809 ;; Hardware stack levels used:    1
 28810 ;; Hardware stack levels required when called:   10
 28811 ;; This function calls:
 28812 ;;		Nothing
 28813 ;; This function is called by:
 28814 ;;		_MSDProcessCommandMediaPresent
 28815 ;; This function uses a non-reentrant model
 28816 ;;
 28817                           
 28818                           	psect	text102
 28819  012A92                     __ptext102:
 28820                           	opt stack 0
 28821  012A92                     _ExternalFlash_SectorSizeRead:
 28822                           	opt stack 16
 28823                           
 28824                           ;external_flash.c: 20: return 512;
 28825                           
 28826                           ; BSR set to: 13
 28827                           ;incstack = 0
 28828  012A92  0E02               	movlw	2
 28829  012A94  0100               	movlb	0	; () banked
 28830  012A96  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 28831  012A98  0E00               	movlw	0
 28832  012A9A  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 28833  012A9C  0012               	return	
 28834  012A9E                     __end_of_ExternalFlash_SectorSizeRead:
 28835                           	opt stack 0
 28836                           tosu	equ	0xFFF
 28837                           tosh	equ	0xFFE
 28838                           tosl	equ	0xFFD
 28839                           pclath	equ	0xFFA
 28840                           tblptru	equ	0xFF8
 28841                           tblptrh	equ	0xFF7
 28842                           tblptrl	equ	0xFF6
 28843                           tablat	equ	0xFF5
 28844                           prodh	equ	0xFF4
 28845                           prodl	equ	0xFF3
 28846                           intcon	equ	0xFF2
 28847                           postinc0	equ	0xFEE
 28848                           wreg	equ	0xFE8
 28849                           indf1	equ	0xFE7
 28850                           postdec1	equ	0xFE5
 28851                           plusw1	equ	0xFE3
 28852                           fsr1h	equ	0xFE2
 28853                           fsr1l	equ	0xFE1
 28854                           indf2	equ	0xFDF
 28855                           postinc2	equ	0xFDE
 28856                           postdec2	equ	0xFDD
 28857                           plusw2	equ	0xFDB
 28858                           fsr2h	equ	0xFDA
 28859                           fsr2l	equ	0xFD9
 28860                           status	equ	0xFD8
 28861                           
 28862 ;; *************** function _ExternalFlash_CapacityRead *****************
 28863 ;; Defined at:
 28864 ;;		line 23 in file "external_flash.c"
 28865 ;; Parameters:    Size  Location     Type
 28866 ;;  config          2    0[BANK0 ] PTR void 
 28867 ;;		 -> NULL(0), 
 28868 ;; Auto vars:     Size  Location     Type
 28869 ;;		None
 28870 ;; Return value:  Size  Location     Type
 28871 ;;                  4    0[BANK0 ] unsigned long 
 28872 ;; Registers used:
 28873 ;;		wreg, status,2
 28874 ;; Tracked objects:
 28875 ;;		On entry : 0/0
 28876 ;;		On exit  : 0/0
 28877 ;;		Unchanged: 0/0
 28878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28879 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28883 ;;Total ram usage:        4 bytes
 28884 ;; Hardware stack levels used:    1
 28885 ;; Hardware stack levels required when called:   10
 28886 ;; This function calls:
 28887 ;;		Nothing
 28888 ;; This function is called by:
 28889 ;;		_MSDProcessCommandMediaPresent
 28890 ;; This function uses a non-reentrant model
 28891 ;;
 28892                           
 28893                           	psect	text103
 28894  012A3E                     __ptext103:
 28895                           	opt stack 0
 28896  012A3E                     _ExternalFlash_CapacityRead:
 28897                           	opt stack 16
 28898                           
 28899                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 28900                           
 28901                           ; BSR set to: 0
 28902                           ;incstack = 0
 28903  012A3E  0EFF               	movlw	255
 28904  012A40  0100               	movlb	0	; () banked
 28905  012A42  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 28906  012A44  0E1F               	movlw	31
 28907  012A46  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 28908  012A48  0E00               	movlw	0
 28909  012A4A  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 28910  012A4C  0E00               	movlw	0
 28911  012A4E  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 28912  012A50  0012               	return	
 28913  012A52                     __end_of_ExternalFlash_CapacityRead:
 28914                           	opt stack 0
 28915                           tosu	equ	0xFFF
 28916                           tosh	equ	0xFFE
 28917                           tosl	equ	0xFFD
 28918                           pclath	equ	0xFFA
 28919                           tblptru	equ	0xFF8
 28920                           tblptrh	equ	0xFF7
 28921                           tblptrl	equ	0xFF6
 28922                           tablat	equ	0xFF5
 28923                           prodh	equ	0xFF4
 28924                           prodl	equ	0xFF3
 28925                           intcon	equ	0xFF2
 28926                           postinc0	equ	0xFEE
 28927                           wreg	equ	0xFE8
 28928                           indf1	equ	0xFE7
 28929                           postdec1	equ	0xFE5
 28930                           plusw1	equ	0xFE3
 28931                           fsr1h	equ	0xFE2
 28932                           fsr1l	equ	0xFE1
 28933                           indf2	equ	0xFDF
 28934                           postinc2	equ	0xFDE
 28935                           postdec2	equ	0xFDD
 28936                           plusw2	equ	0xFDB
 28937                           fsr2h	equ	0xFDA
 28938                           fsr2l	equ	0xFD9
 28939                           status	equ	0xFD8
 28940                           
 28941 ;; *************** function _ExternalFlash_MediaInitialize *****************
 28942 ;; Defined at:
 28943 ;;		line 10 in file "external_flash.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  config          2    0[BANK0 ] PTR void 
 28946 ;;		 -> NULL(0), 
 28947 ;; Auto vars:     Size  Location     Type
 28948 ;;		None
 28949 ;; Return value:  Size  Location     Type
 28950 ;;                  2    0[BANK0 ] PTR struct .
 28951 ;; Registers used:
 28952 ;;		wreg, status,2, status,0
 28953 ;; Tracked objects:
 28954 ;;		On entry : 0/0
 28955 ;;		On exit  : 0/0
 28956 ;;		Unchanged: 0/0
 28957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28962 ;;Total ram usage:        2 bytes
 28963 ;; Hardware stack levels used:    1
 28964 ;; Hardware stack levels required when called:   10
 28965 ;; This function calls:
 28966 ;;		Nothing
 28967 ;; This function is called by:
 28968 ;;		_USBMSDInit
 28969 ;;		_MSDProcessCommand
 28970 ;; This function uses a non-reentrant model
 28971 ;;
 28972                           
 28973                           	psect	text104
 28974  012994                     __ptext104:
 28975                           	opt stack 0
 28976  012994                     _ExternalFlash_MediaInitialize:
 28977                           	opt stack 0
 28978                           
 28979                           ; BSR set to: 0
 28980                           ;Skip over the trampoline to the duplicate function for level 2
 28981  012994  B25B               	btfsc	btemp,1,c
 28982  012996  EF07  F095         	goto	i2_ExternalFlash_MediaInitialize
 28983  01299A                     _ExternalFlash_MediaInitialize$intlevel0:
 28984                           	opt stack 17
 28985                           
 28986                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 28987                           
 28988                           ;incstack = 0
 28989  01299A  0101               	movlb	1	; () banked
 28990  01299C  8190               	bsf	(_mediaInformation+1)& (0+255),0,b
 28991                           
 28992                           ; BSR set to: 1
 28993                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 28994  01299E  0E02               	movlw	2
 28995  0129A0  6F92               	movwf	(_mediaInformation+3)& (0+255),b
 28996  0129A2  0E00               	movlw	0
 28997  0129A4  6F91               	movwf	(_mediaInformation+2)& (0+255),b
 28998                           
 28999                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 29000  0129A6  0E00               	movlw	0
 29001  0129A8  6F8F               	movwf	_mediaInformation& (0+255),b
 29002                           
 29003                           ; BSR set to: 1
 29004                           ;external_flash.c: 15: return &mediaInformation;
 29005  0129AA  0E8F               	movlw	low _mediaInformation
 29006  0129AC  0100               	movlb	0	; () banked
 29007  0129AE  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 29008  0129B0  0E01               	movlw	high _mediaInformation
 29009  0129B2  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 29010  0129B4  0012               	return	
 29011  0129B6                     __end_of_ExternalFlash_MediaInitialize:
 29012                           	opt stack 0
 29013                           tosu	equ	0xFFF
 29014                           tosh	equ	0xFFE
 29015                           tosl	equ	0xFFD
 29016                           pclath	equ	0xFFA
 29017                           tblptru	equ	0xFF8
 29018                           tblptrh	equ	0xFF7
 29019                           tblptrl	equ	0xFF6
 29020                           tablat	equ	0xFF5
 29021                           prodh	equ	0xFF4
 29022                           prodl	equ	0xFF3
 29023                           intcon	equ	0xFF2
 29024                           postinc0	equ	0xFEE
 29025                           wreg	equ	0xFE8
 29026                           indf1	equ	0xFE7
 29027                           postdec1	equ	0xFE5
 29028                           plusw1	equ	0xFE3
 29029                           fsr1h	equ	0xFE2
 29030                           fsr1l	equ	0xFE1
 29031                           indf2	equ	0xFDF
 29032                           postinc2	equ	0xFDE
 29033                           postdec2	equ	0xFDD
 29034                           plusw2	equ	0xFDB
 29035                           fsr2h	equ	0xFDA
 29036                           fsr2l	equ	0xFD9
 29037                           status	equ	0xFD8
 29038                           
 29039 ;; *************** function _ExternalFlash_MediaDetect *****************
 29040 ;; Defined at:
 29041 ;;		line 29 in file "external_flash.c"
 29042 ;; Parameters:    Size  Location     Type
 29043 ;;  config          2    0[BANK0 ] PTR void 
 29044 ;;		 -> NULL(0), 
 29045 ;; Auto vars:     Size  Location     Type
 29046 ;;		None
 29047 ;; Return value:  Size  Location     Type
 29048 ;;                  1    wreg      unsigned char 
 29049 ;; Registers used:
 29050 ;;		wreg
 29051 ;; Tracked objects:
 29052 ;;		On entry : 0/0
 29053 ;;		On exit  : 0/0
 29054 ;;		Unchanged: 0/0
 29055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29060 ;;Total ram usage:        2 bytes
 29061 ;; Hardware stack levels used:    1
 29062 ;; Hardware stack levels required when called:   10
 29063 ;; This function calls:
 29064 ;;		Nothing
 29065 ;; This function is called by:
 29066 ;;		_USBMSDInit
 29067 ;;		_MSDProcessCommand
 29068 ;; This function uses a non-reentrant model
 29069 ;;
 29070                           
 29071                           	psect	text105
 29072  012AB2                     __ptext105:
 29073                           	opt stack 0
 29074  012AB2                     _ExternalFlash_MediaDetect:
 29075                           	opt stack 0
 29076                           
 29077                           ; BSR set to: 0
 29078                           ;Skip over the trampoline to the duplicate function for level 2
 29079  012AB2  B25B               	btfsc	btemp,1,c
 29080  012AB4  EF71  F095         	goto	i2_ExternalFlash_MediaDetect
 29081  012AB8                     _ExternalFlash_MediaDetect$intlevel0:
 29082                           	opt stack 17
 29083                           
 29084                           ;external_flash.c: 31: return 1;
 29085                           
 29086                           ;incstack = 0
 29087  012AB8  0E01               	movlw	1
 29088  012ABA  0012               	return	
 29089  012ABC                     __end_of_ExternalFlash_MediaDetect:
 29090                           	opt stack 0
 29091                           tosu	equ	0xFFF
 29092                           tosh	equ	0xFFE
 29093                           tosl	equ	0xFFD
 29094                           pclath	equ	0xFFA
 29095                           tblptru	equ	0xFF8
 29096                           tblptrh	equ	0xFF7
 29097                           tblptrl	equ	0xFF6
 29098                           tablat	equ	0xFF5
 29099                           prodh	equ	0xFF4
 29100                           prodl	equ	0xFF3
 29101                           intcon	equ	0xFF2
 29102                           postinc0	equ	0xFEE
 29103                           wreg	equ	0xFE8
 29104                           indf1	equ	0xFE7
 29105                           postdec1	equ	0xFE5
 29106                           plusw1	equ	0xFE3
 29107                           fsr1h	equ	0xFE2
 29108                           fsr1l	equ	0xFE1
 29109                           indf2	equ	0xFDF
 29110                           postinc2	equ	0xFDE
 29111                           postdec2	equ	0xFDD
 29112                           plusw2	equ	0xFDB
 29113                           fsr2h	equ	0xFDA
 29114                           fsr2l	equ	0xFD9
 29115                           status	equ	0xFD8
 29116                           
 29117 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 29118 ;; Defined at:
 29119 ;;		line 73 in file "app_device_custom_hid.c"
 29120 ;; Parameters:    Size  Location     Type
 29121 ;;		None
 29122 ;; Auto vars:     Size  Location     Type
 29123 ;;  idx             1    0        unsigned char 
 29124 ;; Return value:  Size  Location     Type
 29125 ;;                  1    wreg      void 
 29126 ;; Registers used:
 29127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29128 ;; Tracked objects:
 29129 ;;		On entry : 0/0
 29130 ;;		On exit  : 0/0
 29131 ;;		Unchanged: 0/0
 29132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29137 ;;Total ram usage:        0 bytes
 29138 ;; Hardware stack levels used:    1
 29139 ;; Hardware stack levels required when called:   15
 29140 ;; This function calls:
 29141 ;;		_USBTransferOnePacket
 29142 ;;		_api_parse
 29143 ;;		_api_prepare
 29144 ;; This function is called by:
 29145 ;;		_main
 29146 ;; This function uses a non-reentrant model
 29147 ;;
 29148                           
 29149                           	psect	text106
 29150  010F8C                     __ptext106:
 29151                           	opt stack 0
 29152  010F8C                     _APP_DeviceCustomHIDTasks:
 29153                           	opt stack 15
 29154                           
 29155                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 29156                           
 29157                           ;incstack = 0
 29158  010F8C  0E20               	movlw	32
 29159  010F8E  602B               	cpfslt	_USBDeviceState,c	;volatile
 29160  010F90  D001               	goto	l939
 29161  010F92  0012               	return	
 29162  010F94                     l939:
 29163                           
 29164                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 29165  010F94  B265               	btfsc	3941,1,c	;volatile
 29166  010F96  0012               	return	
 29167                           
 29168                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 29169                           
 29170                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 29171  010F98  0101               	movlb	1	; () banked
 29172  010F9A  515F               	movf	_USBOutHandle& (0+255),w,b
 29173  010F9C  1160               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 29174  010F9E  B4D8               	btfsc	status,2,c
 29175  010FA0  D006               	goto	u21560
 29176                           
 29177                           ; BSR set to: 1
 29178  010FA2  C15F  FFD9         	movff	_USBOutHandle,fsr2l
 29179  010FA6  C160  FFDA         	movff	_USBOutHandle+1,fsr2h
 29180  010FAA  BEDF               	btfsc	indf2,7,c
 29181  010FAC  0012               	return	
 29182  010FAE                     u21560:
 29183                           
 29184                           ; BSR set to: 1
 29185                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 29186                           
 29187                           ; BSR set to: 1
 29188  010FAE  515D               	movf	_USBInHandle& (0+255),w,b
 29189  010FB0  115E               	iorwf	(_USBInHandle+1)& (0+255),w,b
 29190  010FB2  B4D8               	btfsc	status,2,c
 29191  010FB4  D006               	goto	u21580
 29192                           
 29193                           ; BSR set to: 1
 29194  010FB6  C15D  FFD9         	movff	_USBInHandle,fsr2l
 29195  010FBA  C15E  FFDA         	movff	_USBInHandle+1,fsr2h
 29196  010FBE  BEDF               	btfsc	indf2,7,c
 29197  010FC0  D01B               	goto	l945
 29198  010FC2                     u21580:
 29199                           
 29200                           ; BSR set to: 1
 29201                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 29202                           
 29203                           ; BSR set to: 1
 29204  010FC2  0E38               	movlw	low _ReceivedDataBuffer
 29205  010FC4  0100               	movlb	0	; () banked
 29206  010FC6  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 29207  010FC8  0E02               	movlw	high _ReceivedDataBuffer
 29208  010FCA  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 29209  010FCC  0E00               	movlw	low _ToSendDataBuffer
 29210  010FCE  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 29211  010FD0  0E03               	movlw	high _ToSendDataBuffer
 29212  010FD2  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 29213  010FD4  ECA1  F081         	call	_api_prepare	;wreg free
 29214                           
 29215                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 29216  010FD8  0E01               	movlw	1
 29217  010FDA  0100               	movlb	0	; () banked
 29218  010FDC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29219  010FDE  0E00               	movlw	low _ToSendDataBuffer
 29220  010FE0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29221  010FE2  0E03               	movlw	high _ToSendDataBuffer
 29222  010FE4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29223  010FE6  0E40               	movlw	64
 29224  010FE8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29225  010FEA  0E01               	movlw	1
 29226  010FEC  ECE0  F07C         	call	_USBTransferOnePacket
 29227  010FF0  C060  F15D         	movff	?_USBTransferOnePacket,_USBInHandle
 29228  010FF4  C061  F15E         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 29229  010FF8                     l945:
 29230                           
 29231                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 29232  010FF8  0E38               	movlw	low _ReceivedDataBuffer
 29233  010FFA  0100               	movlb	0	; () banked
 29234  010FFC  6FBB               	movwf	api_parse@inBuffer& (0+255),b
 29235  010FFE  0E02               	movlw	high _ReceivedDataBuffer
 29236  011000  6FBC               	movwf	(api_parse@inBuffer+1)& (0+255),b
 29237  011002  0E40               	movlw	64
 29238  011004  6FBD               	movwf	api_parse@receivedDataLength& (0+255),b
 29239  011006  0E00               	movlw	low _ToSendDataBuffer
 29240  011008  6FBE               	movwf	api_parse@outBuffer& (0+255),b
 29241  01100A  0E03               	movlw	high _ToSendDataBuffer
 29242  01100C  6FBF               	movwf	(api_parse@outBuffer+1)& (0+255),b
 29243  01100E  EC1C  F079         	call	_api_parse	;wreg free
 29244                           
 29245                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 29246  011012  0E00               	movlw	0
 29247  011014  0100               	movlb	0	; () banked
 29248  011016  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29249  011018  0E38               	movlw	low _ReceivedDataBuffer
 29250  01101A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29251  01101C  0E02               	movlw	high _ReceivedDataBuffer
 29252  01101E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29253  011020  0E40               	movlw	64
 29254  011022  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29255  011024  0E01               	movlw	1
 29256  011026  ECE0  F07C         	call	_USBTransferOnePacket
 29257  01102A  C060  F15F         	movff	?_USBTransferOnePacket,_USBOutHandle
 29258  01102E  C061  F160         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 29259  011032  0012               	return	
 29260  011034                     __end_of_APP_DeviceCustomHIDTasks:
 29261                           	opt stack 0
 29262                           tosu	equ	0xFFF
 29263                           tosh	equ	0xFFE
 29264                           tosl	equ	0xFFD
 29265                           pclath	equ	0xFFA
 29266                           tblptru	equ	0xFF8
 29267                           tblptrh	equ	0xFF7
 29268                           tblptrl	equ	0xFF6
 29269                           tablat	equ	0xFF5
 29270                           prodh	equ	0xFF4
 29271                           prodl	equ	0xFF3
 29272                           intcon	equ	0xFF2
 29273                           postinc0	equ	0xFEE
 29274                           wreg	equ	0xFE8
 29275                           indf1	equ	0xFE7
 29276                           postdec1	equ	0xFE5
 29277                           plusw1	equ	0xFE3
 29278                           fsr1h	equ	0xFE2
 29279                           fsr1l	equ	0xFE1
 29280                           indf2	equ	0xFDF
 29281                           postinc2	equ	0xFDE
 29282                           postdec2	equ	0xFDD
 29283                           plusw2	equ	0xFDB
 29284                           fsr2h	equ	0xFDA
 29285                           fsr2l	equ	0xFD9
 29286                           status	equ	0xFD8
 29287                           
 29288 ;; *************** function _api_prepare *****************
 29289 ;; Defined at:
 29290 ;;		line 35 in file "api.c"
 29291 ;; Parameters:    Size  Location     Type
 29292 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 29293 ;;		 -> ReceivedDataBuffer(64), 
 29294 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 29295 ;;		 -> ToSendDataBuffer(64), 
 29296 ;; Auto vars:     Size  Location     Type
 29297 ;;  command         1   20[BANK0 ] enum E6715
 29298 ;; Return value:  Size  Location     Type
 29299 ;;                  1    wreg      void 
 29300 ;; Registers used:
 29301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29302 ;; Tracked objects:
 29303 ;;		On entry : 0/0
 29304 ;;		On exit  : 0/0
 29305 ;;		Unchanged: 0/0
 29306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29310 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29311 ;;Total ram usage:        5 bytes
 29312 ;; Hardware stack levels used:    1
 29313 ;; Hardware stack levels required when called:   12
 29314 ;; This function calls:
 29315 ;;		__fill_buffer_get_display
 29316 ;;		__fill_buffer_get_mode_details
 29317 ;;		__fill_buffer_get_status
 29318 ;;		_memcpy
 29319 ;; This function is called by:
 29320 ;;		_APP_DeviceCustomHIDTasks
 29321 ;; This function uses a non-reentrant model
 29322 ;;
 29323                           
 29324                           	psect	text107
 29325  010342                     __ptext107:
 29326                           	opt stack 0
 29327  010342                     _api_prepare:
 29328                           	opt stack 17
 29329                           
 29330                           ;api.c: 37: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 29331                           
 29332                           ;incstack = 0
 29333  010342  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 29334  010346  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 29335  01034A  50DF               	movf	indf2,w,c
 29336  01034C  0100               	movlb	0	; () banked
 29337  01034E  6F74               	movwf	api_prepare@command& (0+255),b
 29338                           
 29339                           ; BSR set to: 0
 29340                           ;api.c: 39: if(command>0x7F)
 29341  010350  0E7F               	movlw	127
 29342  010352  6574               	cpfsgt	api_prepare@command& (0+255),b
 29343  010354  D051               	goto	l2175
 29344                           
 29345                           ; BSR set to: 0
 29346                           ;api.c: 46: outBuffer[0] = 0x99;
 29347                           
 29348                           ; BSR set to: 0
 29349                           
 29350                           ;api.c: 42: {;api.c: 45: default:
 29351                           
 29352                           ; BSR set to: 0
 29353                           ;api.c: 40: {;api.c: 41: switch(command)
 29354  010356  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 29355  01035A  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 29356  01035E  0E99               	movlw	153
 29357  010360  6EDF               	movwf	indf2,c
 29358                           
 29359                           ; BSR set to: 0
 29360                           ;api.c: 47: outBuffer[1] = 0x99;
 29361  010362  EE20 F001          	lfsr	2,1
 29362  010366  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 29363  010368  26D9               	addwf	fsr2l,f,c
 29364  01036A  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 29365  01036C  22DA               	addwfc	fsr2h,f,c
 29366  01036E  0E99               	movlw	153
 29367  010370  6EDF               	movwf	indf2,c
 29368                           
 29369                           ;api.c: 48: }
 29370  010372  0012               	return	
 29371  010374                     
 29372                           ; BSR set to: 0
 29373                           ;api.c: 61: _fill_buffer_get_status(outBuffer);
 29374                           
 29375                           ; BSR set to: 0
 29376  010374  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 29377  010378  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 29378  01037C  ECAC  F06F         	call	__fill_buffer_get_status	;wreg free
 29379                           
 29380                           ;api.c: 62: break;
 29381  010380  0012               	return	
 29382  010382                     
 29383                           ;api.c: 66: _fill_buffer_get_display(outBuffer, 0);
 29384  010382  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 29385  010386  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 29386  01038A  0E00               	movlw	0
 29387  01038C  0100               	movlb	0	; () banked
 29388  01038E  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 29389  010390  EC0E  F086         	call	__fill_buffer_get_display	;wreg free
 29390                           
 29391                           ;api.c: 67: break;
 29392  010394  0012               	return	
 29393  010396                     
 29394                           ;api.c: 71: _fill_buffer_get_display(outBuffer, 1);
 29395  010396  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 29396  01039A  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 29397  01039E  0E01               	movlw	1
 29398  0103A0  0100               	movlb	0	; () banked
 29399  0103A2  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 29400  0103A4  EC0E  F086         	call	__fill_buffer_get_display	;wreg free
 29401                           
 29402                           ;api.c: 72: break;
 29403  0103A8  0012               	return	
 29404  0103AA                     
 29405                           ;api.c: 76: _fill_buffer_get_mode_details(outBuffer);
 29406  0103AA  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 29407  0103AE  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 29408  0103B2  EC5A  F071         	call	__fill_buffer_get_mode_details	;wreg free
 29409                           
 29410                           ;api.c: 77: break;
 29411  0103B6  0012               	return	
 29412  0103B8                     
 29413                           ;api.c: 81: memcpy(outBuffer, inBuffer, 64);
 29414  0103B8  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 29415  0103BC  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 29416  0103C0  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 29417  0103C4  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 29418  0103C8  0E00               	movlw	0
 29419  0103CA  0100               	movlb	0	; () banked
 29420  0103CC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29421  0103CE  0E40               	movlw	64
 29422  0103D0  6F64               	movwf	memcpy@n& (0+255),b
 29423  0103D2  ECE9  F08D         	call	_memcpy	;wreg free
 29424                           
 29425                           ;api.c: 82: break;
 29426  0103D6  0012               	return	
 29427  0103D8                     
 29428                           ;api.c: 85: outBuffer[0] = 0x99;
 29429  0103D8  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 29430  0103DC  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 29431  0103E0  0E99               	movlw	153
 29432  0103E2  6EDF               	movwf	indf2,c
 29433                           
 29434                           ;api.c: 86: outBuffer[1] = 0x99;
 29435  0103E4  0100               	movlb	0	; () banked
 29436  0103E6  EE20 F001          	lfsr	2,1
 29437  0103EA  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 29438  0103EC  26D9               	addwf	fsr2l,f,c
 29439  0103EE  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 29440  0103F0  22DA               	addwfc	fsr2h,f,c
 29441  0103F2  0E99               	movlw	153
 29442  0103F4  6EDF               	movwf	indf2,c
 29443                           
 29444                           ;api.c: 87: }
 29445  0103F6  0012               	return	
 29446  0103F8                     l2175:
 29447                           
 29448                           ; BSR set to: 0
 29449                           
 29450                           ; BSR set to: 0
 29451  0103F8  5174               	movf	api_prepare@command& (0+255),w,b
 29452                           
 29453                           ; Switch size 1, requested type "space"
 29454                           ; Number of cases is 6, Range of values is 0 to 32
 29455                           ; switch strategies available:
 29456                           ; Name         Instructions Cycles
 29457                           ; simple_byte           19    10 (average)
 29458                           ;	Chosen strategy is simple_byte
 29459  0103FA  0A00               	xorlw	0	; case 0
 29460  0103FC  B4D8               	btfsc	status,2,c
 29461  0103FE  0012               	return	
 29462  010400  0A10               	xorlw	16	; case 16
 29463  010402  B4D8               	btfsc	status,2,c
 29464  010404  D7B7               	goto	l2178
 29465  010406  0A01               	xorlw	1	; case 17
 29466  010408  B4D8               	btfsc	status,2,c
 29467  01040A  D7BB               	goto	l2179
 29468  01040C  0A03               	xorlw	3	; case 18
 29469  01040E  B4D8               	btfsc	status,2,c
 29470  010410  D7C2               	goto	l2180
 29471  010412  0A01               	xorlw	1	; case 19
 29472  010414  B4D8               	btfsc	status,2,c
 29473  010416  D7C9               	goto	l2181
 29474  010418  0A33               	xorlw	51	; case 32
 29475  01041A  B4D8               	btfsc	status,2,c
 29476  01041C  D7CD               	goto	l2182
 29477  01041E  D7DC               	goto	l2183
 29478  010420                     __end_of_api_prepare:
 29479                           	opt stack 0
 29480                           tosu	equ	0xFFF
 29481                           tosh	equ	0xFFE
 29482                           tosl	equ	0xFFD
 29483                           pclath	equ	0xFFA
 29484                           tblptru	equ	0xFF8
 29485                           tblptrh	equ	0xFF7
 29486                           tblptrl	equ	0xFF6
 29487                           tablat	equ	0xFF5
 29488                           prodh	equ	0xFF4
 29489                           prodl	equ	0xFF3
 29490                           intcon	equ	0xFF2
 29491                           postinc0	equ	0xFEE
 29492                           wreg	equ	0xFE8
 29493                           indf1	equ	0xFE7
 29494                           postdec1	equ	0xFE5
 29495                           plusw1	equ	0xFE3
 29496                           fsr1h	equ	0xFE2
 29497                           fsr1l	equ	0xFE1
 29498                           indf2	equ	0xFDF
 29499                           postinc2	equ	0xFDE
 29500                           postdec2	equ	0xFDD
 29501                           plusw2	equ	0xFDB
 29502                           fsr2h	equ	0xFDA
 29503                           fsr2l	equ	0xFD9
 29504                           status	equ	0xFD8
 29505                           
 29506 ;; *************** function __fill_buffer_get_status *****************
 29507 ;; Defined at:
 29508 ;;		line 168 in file "api.c"
 29509 ;; Parameters:    Size  Location     Type
 29510 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 29511 ;;		 -> ToSendDataBuffer(64), 
 29512 ;; Auto vars:     Size  Location     Type
 29513 ;;		None
 29514 ;; Return value:  Size  Location     Type
 29515 ;;                  1    wreg      void 
 29516 ;; Registers used:
 29517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29518 ;; Tracked objects:
 29519 ;;		On entry : 0/0
 29520 ;;		On exit  : 0/0
 29521 ;;		Unchanged: 0/0
 29522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29523 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29526 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29527 ;;Total ram usage:        2 bytes
 29528 ;; Hardware stack levels used:    1
 29529 ;; Hardware stack levels required when called:   11
 29530 ;; This function calls:
 29531 ;;		_memcpy
 29532 ;; This function is called by:
 29533 ;;		_api_prepare
 29534 ;; This function uses a non-reentrant model
 29535 ;;
 29536                           
 29537                           	psect	text108
 29538  00DF58                     __ptext108:
 29539                           	opt stack 0
 29540  00DF58                     __fill_buffer_get_status:
 29541                           	opt stack 17
 29542                           
 29543                           ;api.c: 171: outBuffer[0] = DATAREQUEST_GET_STATUS;
 29544                           
 29545                           ;incstack = 0
 29546  00DF58  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 29547  00DF5C  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 29548  00DF60  0E10               	movlw	16
 29549  00DF62  6EDF               	movwf	indf2,c
 29550                           
 29551                           ;api.c: 174: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 29552  00DF64  0100               	movlb	0	; () banked
 29553  00DF66  EE20 F001          	lfsr	2,1
 29554  00DF6A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29555  00DF6C  26D9               	addwf	fsr2l,f,c
 29556  00DF6E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29557  00DF70  22DA               	addwfc	fsr2h,f,c
 29558  00DF72  0EA1               	movlw	161
 29559  00DF74  6EDF               	movwf	indf2,c
 29560                           
 29561                           ; BSR set to: 0
 29562                           ;api.c: 175: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 29563  00DF76  EE20 F002          	lfsr	2,2
 29564  00DF7A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29565  00DF7C  26D9               	addwf	fsr2l,f,c
 29566  00DF7E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29567  00DF80  22DA               	addwfc	fsr2h,f,c
 29568  00DF82  0E62               	movlw	98
 29569  00DF84  6EDF               	movwf	indf2,c
 29570                           
 29571                           ; BSR set to: 0
 29572                           ;api.c: 178: outBuffer[3] = 0x00;
 29573  00DF86  EE20 F003          	lfsr	2,3
 29574  00DF8A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29575  00DF8C  26D9               	addwf	fsr2l,f,c
 29576  00DF8E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29577  00DF90  22DA               	addwfc	fsr2h,f,c
 29578  00DF92  0E00               	movlw	0
 29579  00DF94  6EDF               	movwf	indf2,c
 29580                           
 29581                           ; BSR set to: 0
 29582                           ;api.c: 179: outBuffer[4] = 0x03;
 29583  00DF96  EE20 F004          	lfsr	2,4
 29584  00DF9A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29585  00DF9C  26D9               	addwf	fsr2l,f,c
 29586  00DF9E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29587  00DFA0  22DA               	addwfc	fsr2h,f,c
 29588  00DFA2  0E03               	movlw	3
 29589  00DFA4  6EDF               	movwf	indf2,c
 29590                           
 29591                           ; BSR set to: 0
 29592                           ;api.c: 180: outBuffer[5] = 0x00;
 29593  00DFA6  EE20 F005          	lfsr	2,5
 29594  00DFAA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29595  00DFAC  26D9               	addwf	fsr2l,f,c
 29596  00DFAE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29597  00DFB0  22DA               	addwfc	fsr2h,f,c
 29598  00DFB2  0E00               	movlw	0
 29599  00DFB4  6EDF               	movwf	indf2,c
 29600                           
 29601                           ; BSR set to: 0
 29602                           ;api.c: 183: outBuffer[6] = os.subTimeSlot;
 29603  00DFB6  EE20 F006          	lfsr	2,6
 29604  00DFBA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29605  00DFBC  26D9               	addwf	fsr2l,f,c
 29606  00DFBE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29607  00DFC0  22DA               	addwfc	fsr2h,f,c
 29608  00DFC2  C0D3  FFDF         	movff	_os,indf2	;volatile
 29609                           
 29610                           ; BSR set to: 0
 29611                           ;api.c: 184: outBuffer[7] = os.timeSlot;
 29612  00DFC6  EE20 F007          	lfsr	2,7
 29613  00DFCA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29614  00DFCC  26D9               	addwf	fsr2l,f,c
 29615  00DFCE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29616  00DFD0  22DA               	addwfc	fsr2h,f,c
 29617  00DFD2  C0D4  FFDF         	movff	_os+1,indf2	;volatile
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;api.c: 185: outBuffer[8] = os.done;
 29621  00DFD6  EE20 F008          	lfsr	2,8
 29622  00DFDA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29623  00DFDC  26D9               	addwf	fsr2l,f,c
 29624  00DFDE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29625  00DFE0  22DA               	addwfc	fsr2h,f,c
 29626  00DFE2  C0D5  FFDF         	movff	_os+2,indf2	;volatile
 29627                           
 29628                           ; BSR set to: 0
 29629                           ;api.c: 186: outBuffer[9] = os.encoder1Count;
 29630  00DFE6  EE20 F009          	lfsr	2,9
 29631  00DFEA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29632  00DFEC  26D9               	addwf	fsr2l,f,c
 29633  00DFEE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29634  00DFF0  22DA               	addwfc	fsr2h,f,c
 29635  00DFF2  C0D6  FFDF         	movff	_os+3,indf2	;volatile
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;api.c: 187: outBuffer[10] = os.button1;
 29639  00DFF6  EE20 F00A          	lfsr	2,10
 29640  00DFFA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29641  00DFFC  26D9               	addwf	fsr2l,f,c
 29642  00DFFE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29643  00E000  22DA               	addwfc	fsr2h,f,c
 29644  00E002  C0D7  FFDF         	movff	_os+4,indf2	;volatile
 29645                           
 29646                           ; BSR set to: 0
 29647                           ;api.c: 188: outBuffer[11] = os.encoder2Count;
 29648  00E006  EE20 F00B          	lfsr	2,11
 29649  00E00A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29650  00E00C  26D9               	addwf	fsr2l,f,c
 29651  00E00E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29652  00E010  22DA               	addwfc	fsr2h,f,c
 29653  00E012  C0D8  FFDF         	movff	_os+5,indf2	;volatile
 29654                           
 29655                           ; BSR set to: 0
 29656                           ;api.c: 189: outBuffer[12] = os.button2;
 29657  00E016  EE20 F00C          	lfsr	2,12
 29658  00E01A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29659  00E01C  26D9               	addwf	fsr2l,f,c
 29660  00E01E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29661  00E020  22DA               	addwfc	fsr2h,f,c
 29662  00E022  C0D9  FFDF         	movff	_os+6,indf2	;volatile
 29663                           
 29664                           ; BSR set to: 0
 29665                           ;api.c: 190: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 29666  00E026  0E0D               	movlw	13
 29667  00E028  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29668  00E02A  6F60               	movwf	memcpy@d1& (0+255),b
 29669  00E02C  0E00               	movlw	0
 29670  00E02E  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29671  00E030  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29672  00E032  0EDA               	movlw	low (_os+7)
 29673  00E034  6F62               	movwf	memcpy@s1& (0+255),b
 29674  00E036  0E00               	movlw	high (_os+7)
 29675  00E038  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29676  00E03A  0E00               	movlw	0
 29677  00E03C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29678  00E03E  0E04               	movlw	4
 29679  00E040  6F64               	movwf	memcpy@n& (0+255),b
 29680  00E042  ECE9  F08D         	call	_memcpy	;wreg free
 29681                           
 29682                           ;api.c: 195: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 29683  00E046  0E11               	movlw	17
 29684  00E048  0100               	movlb	0	; () banked
 29685  00E04A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29686  00E04C  6F60               	movwf	memcpy@d1& (0+255),b
 29687  00E04E  0E00               	movlw	0
 29688  00E050  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29689  00E052  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29690  00E054  0EDE               	movlw	low (_os+11)
 29691  00E056  6F62               	movwf	memcpy@s1& (0+255),b
 29692  00E058  0E00               	movlw	high (_os+11)
 29693  00E05A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29694  00E05C  0E00               	movlw	0
 29695  00E05E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29696  00E060  0E04               	movlw	4
 29697  00E062  6F64               	movwf	memcpy@n& (0+255),b
 29698  00E064  ECE9  F08D         	call	_memcpy	;wreg free
 29699                           
 29700                           ;api.c: 200: outBuffer[21] = os.displayState;
 29701  00E068  0100               	movlb	0	; () banked
 29702  00E06A  EE20 F015          	lfsr	2,21
 29703  00E06E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29704  00E070  26D9               	addwf	fsr2l,f,c
 29705  00E072  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29706  00E074  22DA               	addwfc	fsr2h,f,c
 29707  00E076  C0E0  FFDF         	movff	_os+13,indf2	;volatile
 29708                           
 29709                           ; BSR set to: 0
 29710                           ;api.c: 201: outBuffer[22] = os.beep_count;
 29711  00E07A  EE20 F016          	lfsr	2,22
 29712  00E07E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29713  00E080  26D9               	addwf	fsr2l,f,c
 29714  00E082  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29715  00E084  22DA               	addwfc	fsr2h,f,c
 29716  00E086  C0F9  FFDF         	movff	_os+38,indf2	;volatile
 29717                           
 29718                           ; BSR set to: 0
 29719                           ;api.c: 202: outBuffer[23] = ((unsigned char)((os.internal_temperature)&0xFF));
 29720  00E08A  EE20 F017          	lfsr	2,23
 29721  00E08E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29722  00E090  26D9               	addwf	fsr2l,f,c
 29723  00E092  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29724  00E094  22DA               	addwfc	fsr2h,f,c
 29725  00E096  C0FA  FFDF         	movff	_os+39,indf2	;volatile
 29726                           
 29727                           ; BSR set to: 0
 29728                           ;api.c: 203: outBuffer[24] = ((unsigned char)(((os.internal_temperature)>>8)&0xFF));
 29729  00E09A  EE20 F018          	lfsr	2,24
 29730  00E09E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29731  00E0A0  26D9               	addwf	fsr2l,f,c
 29732  00E0A2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29733  00E0A4  22DA               	addwfc	fsr2h,f,c
 29734  00E0A6  51FB               	movf	(_os+40)& (0+255),w,b	;volatile
 29735  00E0A8  6EDF               	movwf	indf2,c
 29736                           
 29737                           ; BSR set to: 0
 29738                           ;api.c: 204: outBuffer[25] = ((unsigned char)((os.external_temperature)&0xFF));
 29739  00E0AA  EE20 F019          	lfsr	2,25
 29740  00E0AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29741  00E0B0  26D9               	addwf	fsr2l,f,c
 29742  00E0B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29743  00E0B4  22DA               	addwfc	fsr2h,f,c
 29744  00E0B6  C0FC  FFDF         	movff	_os+41,indf2	;volatile
 29745                           
 29746                           ; BSR set to: 0
 29747                           ;api.c: 205: outBuffer[26] = ((unsigned char)(((os.external_temperature)>>8)&0xFF));
 29748  00E0BA  EE20 F01A          	lfsr	2,26
 29749  00E0BE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29750  00E0C0  26D9               	addwf	fsr2l,f,c
 29751  00E0C2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29752  00E0C4  22DA               	addwfc	fsr2h,f,c
 29753  00E0C6  51FD               	movf	(_os+42)& (0+255),w,b	;volatile
 29754  00E0C8  6EDF               	movwf	indf2,c
 29755                           
 29756                           ; BSR set to: 0
 29757                           ;api.c: 206: outBuffer[27] = os.fan_on;
 29758  00E0CA  EE20 F01B          	lfsr	2,27
 29759  00E0CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29760  00E0D0  26D9               	addwf	fsr2l,f,c
 29761  00E0D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29762  00E0D4  22DA               	addwfc	fsr2h,f,c
 29763  00E0D6  C0FE  FFDF         	movff	_os+43,indf2	;volatile
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;api.c: 207: outBuffer[28] = os.brake_on;
 29767  00E0DA  EE20 F01C          	lfsr	2,28
 29768  00E0DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29769  00E0E0  26D9               	addwf	fsr2l,f,c
 29770  00E0E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29771  00E0E4  22DA               	addwfc	fsr2h,f,c
 29772  00E0E6  C0FF  FFDF         	movff	_os+44,indf2	;volatile
 29773                           
 29774                           ; BSR set to: 0
 29775                           ;api.c: 208: outBuffer[29] = os.busy;
 29776  00E0EA  EE20 F01D          	lfsr	2,29
 29777  00E0EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29778  00E0F0  26D9               	addwf	fsr2l,f,c
 29779  00E0F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29780  00E0F4  22DA               	addwfc	fsr2h,f,c
 29781  00E0F6  C0E1  FFDF         	movff	_os+14,indf2	;volatile
 29782                           
 29783                           ; BSR set to: 0
 29784                           ;api.c: 222: memcpy(&outBuffer[42], &config, 22);
 29785  00E0FA  0E2A               	movlw	42
 29786  00E0FC  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 29787  00E0FE  6F60               	movwf	memcpy@d1& (0+255),b
 29788  00E100  0E00               	movlw	0
 29789  00E102  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 29790  00E104  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29791  00E106  0E79               	movlw	low _config
 29792  00E108  6F62               	movwf	memcpy@s1& (0+255),b
 29793  00E10A  0E01               	movlw	high _config
 29794  00E10C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29795  00E10E  0E00               	movlw	0
 29796  00E110  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29797  00E112  0E16               	movlw	22
 29798  00E114  6F64               	movwf	memcpy@n& (0+255),b
 29799  00E116  ECE9  F08D         	call	_memcpy	;wreg free
 29800  00E11A  0012               	return		;funcret
 29801  00E11C                     __end_of__fill_buffer_get_status:
 29802                           	opt stack 0
 29803                           tosu	equ	0xFFF
 29804                           tosh	equ	0xFFE
 29805                           tosl	equ	0xFFD
 29806                           pclath	equ	0xFFA
 29807                           tblptru	equ	0xFF8
 29808                           tblptrh	equ	0xFF7
 29809                           tblptrl	equ	0xFF6
 29810                           tablat	equ	0xFF5
 29811                           prodh	equ	0xFF4
 29812                           prodl	equ	0xFF3
 29813                           intcon	equ	0xFF2
 29814                           postinc0	equ	0xFEE
 29815                           wreg	equ	0xFE8
 29816                           indf1	equ	0xFE7
 29817                           postdec1	equ	0xFE5
 29818                           plusw1	equ	0xFE3
 29819                           fsr1h	equ	0xFE2
 29820                           fsr1l	equ	0xFE1
 29821                           indf2	equ	0xFDF
 29822                           postinc2	equ	0xFDE
 29823                           postdec2	equ	0xFDD
 29824                           plusw2	equ	0xFDB
 29825                           fsr2h	equ	0xFDA
 29826                           fsr2l	equ	0xFD9
 29827                           status	equ	0xFD8
 29828                           
 29829 ;; *************** function _memcpy *****************
 29830 ;; Defined at:
 29831 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 29832 ;; Parameters:    Size  Location     Type
 29833 ;;  d1              2    0[BANK0 ] PTR void 
 29834 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 29835 ;;		 -> msd_buffer(512), SetupPkt(8), 
 29836 ;;  s1              2    2[BANK0 ] PTR const void 
 29837 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 29838 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 29839 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 29840 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 29841 ;;		 -> dc_main(80), ReceivedDataBuffer(64), os.current_position_in_degrees(2), config(22), 
 29842 ;;		 -> os.current_position_in_steps(4), os(45), inq_resp(36), RAM(3759), 
 29843 ;;  n               2    4[BANK0 ] unsigned int 
 29844 ;; Auto vars:     Size  Location     Type
 29845 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 29846 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 29847 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 29848 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 29849 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 29850 ;;		 -> dc_main(80), ReceivedDataBuffer(64), os.current_position_in_degrees(2), config(22), 
 29851 ;;		 -> os.current_position_in_steps(4), os(45), inq_resp(36), RAM(3759), 
 29852 ;;  d               2    7[BANK0 ] PTR unsigned char 
 29853 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 29854 ;;		 -> msd_buffer(512), SetupPkt(8), 
 29855 ;;  tmp             1    6[BANK0 ] unsigned char 
 29856 ;; Return value:  Size  Location     Type
 29857 ;;                  2    0[BANK0 ] PTR void 
 29858 ;; Registers used:
 29859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29860 ;; Tracked objects:
 29861 ;;		On entry : 0/0
 29862 ;;		On exit  : 0/0
 29863 ;;		Unchanged: 0/0
 29864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29865 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29868 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29869 ;;Total ram usage:       11 bytes
 29870 ;; Hardware stack levels used:    1
 29871 ;; Hardware stack levels required when called:   10
 29872 ;; This function calls:
 29873 ;;		Nothing
 29874 ;; This function is called by:
 29875 ;;		_MSDProcessCommandMediaPresent
 29876 ;;		_display_prepare
 29877 ;;		__flash_set_page_size
 29878 ;;		_api_prepare
 29879 ;;		__fill_buffer_get_status
 29880 ;;		_fat_create_file
 29881 ;; This function uses a non-reentrant model
 29882 ;;
 29883                           
 29884                           	psect	text109
 29885  011BD2                     __ptext109:
 29886                           	opt stack 0
 29887  011BD2                     _memcpy:
 29888                           	opt stack 17
 29889                           
 29890                           ;incstack = 0
 29891  011BD2  C062  F069         	movff	memcpy@s1,memcpy@s
 29892  011BD6  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 29893  011BDA  C060  F067         	movff	memcpy@d1,memcpy@d
 29894  011BDE  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 29895  011BE2  D01D               	goto	l3373
 29896  011BE4                     l17751:
 29897  011BE4  C069  FFF6         	movff	memcpy@s,tblptrl
 29898  011BE8  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 29899  011BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 29900  011BEE  6EF8               	movwf	tblptru,c
 29901  011BF0  0E0E               	movlw	(high __ramtop+-1)
 29902  011BF2  64F7               	cpfsgt	tblptrh,c
 29903  011BF4  D003               	bra	u17267
 29904  011BF6  0008               	tblrd		*
 29905  011BF8  50F5               	movf	tablat,w,c
 29906  011BFA  D005               	bra	u17260
 29907  011BFC                     u17267:
 29908  011BFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 29909  011C00  CFF7 FFEA          	movff	tblptrh,fsr0h
 29910  011C04  50EF               	movf	indf0,w,c
 29911  011C06                     u17260:
 29912  011C06  0100               	movlb	0	; () banked
 29913  011C08  6F66               	movwf	memcpy@tmp& (0+255),b
 29914                           
 29915                           ; BSR set to: 0
 29916  011C0A  4B69               	infsnz	memcpy@s& (0+255),f,b
 29917  011C0C  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 29918                           
 29919                           ; BSR set to: 0
 29920  011C0E  C067  FFD9         	movff	memcpy@d,fsr2l
 29921  011C12  C068  FFDA         	movff	memcpy@d+1,fsr2h
 29922  011C16  C066  FFDF         	movff	memcpy@tmp,indf2
 29923                           
 29924                           ; BSR set to: 0
 29925  011C1A  4B67               	infsnz	memcpy@d& (0+255),f,b
 29926  011C1C  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 29927  011C1E                     l3373:
 29928                           
 29929                           ; BSR set to: 0
 29930  011C1E  0100               	movlb	0	; () banked
 29931  011C20  0764               	decf	memcpy@n& (0+255),f,b
 29932  011C22  A0D8               	btfss	status,0,c
 29933  011C24  0765               	decf	(memcpy@n+1)& (0+255),f,b
 29934  011C26  2964               	incf	memcpy@n& (0+255),w,b
 29935  011C28  E1DD               	bnz	l17751
 29936  011C2A  2965               	incf	(memcpy@n+1)& (0+255),w,b
 29937  011C2C  B4D8               	btfsc	status,2,c
 29938  011C2E  0012               	return	
 29939  011C30  D7D9               	goto	l3374
 29940  011C32                     __end_of_memcpy:
 29941                           	opt stack 0
 29942                           tosu	equ	0xFFF
 29943                           tosh	equ	0xFFE
 29944                           tosl	equ	0xFFD
 29945                           pclath	equ	0xFFA
 29946                           tblptru	equ	0xFF8
 29947                           tblptrh	equ	0xFF7
 29948                           tblptrl	equ	0xFF6
 29949                           tablat	equ	0xFF5
 29950                           prodh	equ	0xFF4
 29951                           prodl	equ	0xFF3
 29952                           intcon	equ	0xFF2
 29953                           indf0	equ	0xFEF
 29954                           postinc0	equ	0xFEE
 29955                           fsr0h	equ	0xFEA
 29956                           fsr0l	equ	0xFE9
 29957                           wreg	equ	0xFE8
 29958                           indf1	equ	0xFE7
 29959                           postdec1	equ	0xFE5
 29960                           plusw1	equ	0xFE3
 29961                           fsr1h	equ	0xFE2
 29962                           fsr1l	equ	0xFE1
 29963                           indf2	equ	0xFDF
 29964                           postinc2	equ	0xFDE
 29965                           postdec2	equ	0xFDD
 29966                           plusw2	equ	0xFDB
 29967                           fsr2h	equ	0xFDA
 29968                           fsr2l	equ	0xFD9
 29969                           status	equ	0xFD8
 29970                           
 29971 ;; *************** function __fill_buffer_get_mode_details *****************
 29972 ;; Defined at:
 29973 ;;		line 267 in file "api.c"
 29974 ;; Parameters:    Size  Location     Type
 29975 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 29976 ;;		 -> ToSendDataBuffer(64), 
 29977 ;; Auto vars:     Size  Location     Type
 29978 ;;		None
 29979 ;; Return value:  Size  Location     Type
 29980 ;;                  1    wreg      void 
 29981 ;; Registers used:
 29982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29983 ;; Tracked objects:
 29984 ;;		On entry : 0/0
 29985 ;;		On exit  : 0/0
 29986 ;;		Unchanged: 0/0
 29987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29990 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29991 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29992 ;;Total ram usage:        4 bytes
 29993 ;; Hardware stack levels used:    1
 29994 ;; Hardware stack levels required when called:   10
 29995 ;; This function calls:
 29996 ;;		Nothing
 29997 ;; This function is called by:
 29998 ;;		_api_prepare
 29999 ;; This function uses a non-reentrant model
 30000 ;;
 30001                           
 30002                           	psect	text110
 30003  00E2B4                     __ptext110:
 30004                           	opt stack 0
 30005  00E2B4                     __fill_buffer_get_mode_details:
 30006                           	opt stack 18
 30007                           
 30008                           ;api.c: 270: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 30009                           
 30010                           ; BSR set to: 0
 30011                           ;incstack = 0
 30012  00E2B4  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 30013  00E2B8  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 30014  00E2BC  0E13               	movlw	19
 30015  00E2BE  6EDF               	movwf	indf2,c
 30016                           
 30017                           ;api.c: 273: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 30018  00E2C0  0100               	movlb	0	; () banked
 30019  00E2C2  EE20 F001          	lfsr	2,1
 30020  00E2C6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30021  00E2C8  26D9               	addwf	fsr2l,f,c
 30022  00E2CA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30023  00E2CC  22DA               	addwfc	fsr2h,f,c
 30024  00E2CE  0EA1               	movlw	161
 30025  00E2D0  6EDF               	movwf	indf2,c
 30026                           
 30027                           ; BSR set to: 0
 30028                           ;api.c: 274: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 30029  00E2D2  EE20 F002          	lfsr	2,2
 30030  00E2D6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30031  00E2D8  26D9               	addwf	fsr2l,f,c
 30032  00E2DA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30033  00E2DC  22DA               	addwfc	fsr2h,f,c
 30034  00E2DE  0E62               	movlw	98
 30035  00E2E0  6EDF               	movwf	indf2,c
 30036                           
 30037                           ; BSR set to: 0
 30038                           ;api.c: 277: outBuffer[3] = os.displayState;
 30039  00E2E2  EE20 F003          	lfsr	2,3
 30040  00E2E6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30041  00E2E8  26D9               	addwf	fsr2l,f,c
 30042  00E2EA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30043  00E2EC  22DA               	addwfc	fsr2h,f,c
 30044  00E2EE  C0E0  FFDF         	movff	_os+13,indf2	;volatile
 30045                           
 30046                           ;api.c: 279: switch(os.displayState & 0x0F)
 30047  00E2F2  D084               	goto	l2218
 30048  00E2F4                     
 30049                           ; BSR set to: 0
 30050                           ;api.c: 285: case DISPLAY_STATE_SETUP2:;api.c: 286: outBuffer[4] = os.setup_step_size;
 30051                           
 30052                           ; BSR set to: 0
 30053                           
 30054                           ; BSR set to: 0
 30055  00E2F4  EE20 F004          	lfsr	2,4
 30056  00E2F8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30057  00E2FA  26D9               	addwf	fsr2l,f,c
 30058  00E2FC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30059  00E2FE  22DA               	addwfc	fsr2h,f,c
 30060  00E300  C0E3  FFDF         	movff	_os+16,indf2	;volatile
 30061                           
 30062                           ;api.c: 287: break;
 30063  00E304  0012               	return	
 30064  00E306                     
 30065                           ; BSR set to: 0
 30066                           ;api.c: 290: case DISPLAY_STATE_DIVIDE2:;api.c: 292: outBuffer[4] = os.divide_step_size;
 30067                           
 30068                           ; BSR set to: 0
 30069                           
 30070                           ; BSR set to: 0
 30071  00E306  EE20 F004          	lfsr	2,4
 30072  00E30A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30073  00E30C  26D9               	addwf	fsr2l,f,c
 30074  00E30E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30075  00E310  22DA               	addwfc	fsr2h,f,c
 30076  00E312  C0E8  FFDF         	movff	_os+21,indf2	;volatile
 30077                           
 30078                           ;api.c: 293: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 30079  00E316  EE20 F005          	lfsr	2,5
 30080  00E31A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30081  00E31C  26D9               	addwf	fsr2l,f,c
 30082  00E31E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30083  00E320  22DA               	addwfc	fsr2h,f,c
 30084  00E322  51E7               	movf	(_os+20)& (0+255),w,b	;volatile
 30085  00E324  6EDF               	movwf	indf2,c
 30086                           
 30087                           ;api.c: 294: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 30088  00E326  EE20 F006          	lfsr	2,6
 30089  00E32A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30090  00E32C  26D9               	addwf	fsr2l,f,c
 30091  00E32E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30092  00E330  22DA               	addwfc	fsr2h,f,c
 30093  00E332  C0E6  FFDF         	movff	_os+19,indf2	;volatile
 30094                           
 30095                           ;api.c: 295: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 30096  00E336  EE20 F007          	lfsr	2,7
 30097  00E33A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30098  00E33C  26D9               	addwf	fsr2l,f,c
 30099  00E33E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30100  00E340  22DA               	addwfc	fsr2h,f,c
 30101  00E342  51EC               	movf	(_os+25)& (0+255),w,b	;volatile
 30102  00E344  6EDF               	movwf	indf2,c
 30103                           
 30104                           ;api.c: 296: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 30105  00E346  EE20 F008          	lfsr	2,8
 30106  00E34A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30107  00E34C  26D9               	addwf	fsr2l,f,c
 30108  00E34E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30109  00E350  22DA               	addwfc	fsr2h,f,c
 30110  00E352  C0EB  FFDF         	movff	_os+24,indf2	;volatile
 30111                           
 30112                           ;api.c: 297: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 30113  00E356  EE20 F009          	lfsr	2,9
 30114  00E35A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30115  00E35C  26D9               	addwf	fsr2l,f,c
 30116  00E35E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30117  00E360  22DA               	addwfc	fsr2h,f,c
 30118  00E362  51EA               	movf	(_os+23)& (0+255),w,b	;volatile
 30119  00E364  6EDF               	movwf	indf2,c
 30120                           
 30121                           ;api.c: 298: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 30122  00E366  EE20 F00A          	lfsr	2,10
 30123  00E36A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30124  00E36C  26D9               	addwf	fsr2l,f,c
 30125  00E36E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30126  00E370  22DA               	addwfc	fsr2h,f,c
 30127  00E372  C0E9  FFDF         	movff	_os+22,indf2	;volatile
 30128                           
 30129                           ;api.c: 299: break;
 30130  00E376  0012               	return	
 30131  00E378                     
 30132                           ; BSR set to: 0
 30133                           ;api.c: 302: case DISPLAY_STATE_ARC2:;api.c: 303: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 30134                           
 30135                           ; BSR set to: 0
 30136                           
 30137                           ; BSR set to: 0
 30138  00E378  EE20 F004          	lfsr	2,4
 30139  00E37C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30140  00E37E  26D9               	addwf	fsr2l,f,c
 30141  00E380  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30142  00E382  22DA               	addwfc	fsr2h,f,c
 30143  00E384  51EE               	movf	(_os+27)& (0+255),w,b	;volatile
 30144  00E386  6EDF               	movwf	indf2,c
 30145                           
 30146                           ;api.c: 304: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 30147  00E388  EE20 F005          	lfsr	2,5
 30148  00E38C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30149  00E38E  26D9               	addwf	fsr2l,f,c
 30150  00E390  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30151  00E392  22DA               	addwfc	fsr2h,f,c
 30152  00E394  C0ED  FFDF         	movff	_os+26,indf2	;volatile
 30153                           
 30154                           ;api.c: 305: outBuffer[6] = os.arc_direction;
 30155  00E398  EE20 F006          	lfsr	2,6
 30156  00E39C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30157  00E39E  26D9               	addwf	fsr2l,f,c
 30158  00E3A0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30159  00E3A2  22DA               	addwfc	fsr2h,f,c
 30160  00E3A4  C0F5  FFDF         	movff	_os+34,indf2	;volatile
 30161                           
 30162                           ;api.c: 306: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 30163  00E3A8  EE20 F007          	lfsr	2,7
 30164  00E3AC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30165  00E3AE  26D9               	addwf	fsr2l,f,c
 30166  00E3B0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30167  00E3B2  22DA               	addwfc	fsr2h,f,c
 30168  00E3B4  51F4               	movf	(_os+33)& (0+255),w,b	;volatile
 30169  00E3B6  6EDF               	movwf	indf2,c
 30170                           
 30171                           ;api.c: 307: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 30172  00E3B8  EE20 F008          	lfsr	2,8
 30173  00E3BC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30174  00E3BE  26D9               	addwf	fsr2l,f,c
 30175  00E3C0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30176  00E3C2  22DA               	addwfc	fsr2h,f,c
 30177  00E3C4  C0F3  FFDF         	movff	_os+32,indf2	;volatile
 30178                           
 30179                           ; BSR set to: 0
 30180                           ;api.c: 311: break;
 30181                           
 30182                           ;api.c: 310: case DISPLAY_STATE_ZERO:
 30183                           
 30184                           ;api.c: 308: break;
 30185  00E3C8  0012               	return	
 30186  00E3CA                     
 30187                           ; BSR set to: 0
 30188                           ;api.c: 314: outBuffer[4] = os.manual_direction;
 30189                           
 30190                           ; BSR set to: 0
 30191  00E3CA  EE20 F004          	lfsr	2,4
 30192  00E3CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30193  00E3D0  26D9               	addwf	fsr2l,f,c
 30194  00E3D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30195  00E3D4  22DA               	addwfc	fsr2h,f,c
 30196  00E3D6  C0F8  FFDF         	movff	_os+37,indf2	;volatile
 30197                           
 30198                           ;api.c: 315: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 30199  00E3DA  EE20 F005          	lfsr	2,5
 30200  00E3DE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30201  00E3E0  26D9               	addwf	fsr2l,f,c
 30202  00E3E2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30203  00E3E4  22DA               	addwfc	fsr2h,f,c
 30204  00E3E6  51F7               	movf	(_os+36)& (0+255),w,b	;volatile
 30205  00E3E8  6EDF               	movwf	indf2,c
 30206                           
 30207                           ;api.c: 316: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 30208  00E3EA  EE20 F006          	lfsr	2,6
 30209  00E3EE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30210  00E3F0  26D9               	addwf	fsr2l,f,c
 30211  00E3F2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30212  00E3F4  22DA               	addwfc	fsr2h,f,c
 30213  00E3F6  C0F6  FFDF         	movff	_os+35,indf2	;volatile
 30214                           
 30215                           ; BSR set to: 0
 30216                           ;api.c: 318: }
 30217                           
 30218                           ;api.c: 317: break;
 30219  00E3FA  0012               	return	
 30220  00E3FC                     l2218:
 30221                           
 30222                           ; BSR set to: 0
 30223                           
 30224                           ; BSR set to: 0
 30225  00E3FC  51E0               	movf	(_os+13)& (0+255),w,b	;volatile
 30226  00E3FE  0B0F               	andlw	15
 30227  00E400  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 30228  00E402  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 30229                           
 30230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30231                           ; Switch size 1, requested type "space"
 30232                           ; Number of cases is 1, Range of values is 0 to 0
 30233                           ; switch strategies available:
 30234                           ; Name         Instructions Cycles
 30235                           ; simple_byte            4     3 (average)
 30236                           ;	Chosen strategy is simple_byte
 30237  00E404  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 30238  00E406  0A00               	xorlw	0	; case 0
 30239  00E408  A4D8               	btfss	status,2,c
 30240  00E40A  0012               	return	
 30241                           
 30242                           ; BSR set to: 0
 30243                           ; Switch size 1, requested type "space"
 30244                           ; Number of cases is 9, Range of values is 0 to 128
 30245                           ; switch strategies available:
 30246                           ; Name         Instructions Cycles
 30247                           ; simple_byte           28    15 (average)
 30248                           ;	Chosen strategy is simple_byte
 30249  00E40C  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 30250  00E40E  0A00               	xorlw	0	; case 0
 30251  00E410  B4D8               	btfsc	status,2,c
 30252  00E412  0012               	return	
 30253  00E414  0A10               	xorlw	16	; case 16
 30254  00E416  B4D8               	btfsc	status,2,c
 30255  00E418  D76D               	goto	l2221
 30256  00E41A  0A30               	xorlw	48	; case 32
 30257  00E41C  B4D8               	btfsc	status,2,c
 30258  00E41E  D76A               	goto	l2221
 30259  00E420  0A10               	xorlw	16	; case 48
 30260  00E422  B4D8               	btfsc	status,2,c
 30261  00E424  D770               	goto	l2223
 30262  00E426  0A70               	xorlw	112	; case 64
 30263  00E428  B4D8               	btfsc	status,2,c
 30264  00E42A  D76D               	goto	l2223
 30265  00E42C  0A10               	xorlw	16	; case 80
 30266  00E42E  B4D8               	btfsc	status,2,c
 30267  00E430  D7A3               	goto	l2225
 30268  00E432  0A30               	xorlw	48	; case 96
 30269  00E434  B4D8               	btfsc	status,2,c
 30270  00E436  D7A0               	goto	l2225
 30271  00E438  0A10               	xorlw	16	; case 112
 30272  00E43A  B4D8               	btfsc	status,2,c
 30273  00E43C  0012               	return	
 30274  00E43E  0AF0               	xorlw	240	; case 128
 30275  00E440  A4D8               	btfss	status,2,c
 30276  00E442  0012               	return	
 30277  00E444  D7C2               	goto	l2228
 30278  00E446                     __end_of__fill_buffer_get_mode_details:
 30279                           	opt stack 0
 30280                           tosu	equ	0xFFF
 30281                           tosh	equ	0xFFE
 30282                           tosl	equ	0xFFD
 30283                           pclath	equ	0xFFA
 30284                           tblptru	equ	0xFF8
 30285                           tblptrh	equ	0xFF7
 30286                           tblptrl	equ	0xFF6
 30287                           tablat	equ	0xFF5
 30288                           prodh	equ	0xFF4
 30289                           prodl	equ	0xFF3
 30290                           intcon	equ	0xFF2
 30291                           indf0	equ	0xFEF
 30292                           postinc0	equ	0xFEE
 30293                           fsr0h	equ	0xFEA
 30294                           fsr0l	equ	0xFE9
 30295                           wreg	equ	0xFE8
 30296                           indf1	equ	0xFE7
 30297                           postdec1	equ	0xFE5
 30298                           plusw1	equ	0xFE3
 30299                           fsr1h	equ	0xFE2
 30300                           fsr1l	equ	0xFE1
 30301                           indf2	equ	0xFDF
 30302                           postinc2	equ	0xFDE
 30303                           postdec2	equ	0xFDD
 30304                           plusw2	equ	0xFDB
 30305                           fsr2h	equ	0xFDA
 30306                           fsr2l	equ	0xFD9
 30307                           status	equ	0xFD8
 30308                           
 30309 ;; *************** function __fill_buffer_get_display *****************
 30310 ;; Defined at:
 30311 ;;		line 226 in file "api.c"
 30312 ;; Parameters:    Size  Location     Type
 30313 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 30314 ;;		 -> ToSendDataBuffer(64), 
 30315 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 30316 ;; Auto vars:     Size  Location     Type
 30317 ;;  position        1   15[BANK0 ] unsigned char 
 30318 ;;  start_line      1   14[BANK0 ] unsigned char 
 30319 ;;  line            1   13[BANK0 ] unsigned char 
 30320 ;;  cntr            1   12[BANK0 ] unsigned char 
 30321 ;; Return value:  Size  Location     Type
 30322 ;;                  1    wreg      void 
 30323 ;; Registers used:
 30324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30325 ;; Tracked objects:
 30326 ;;		On entry : 0/0
 30327 ;;		On exit  : 0/0
 30328 ;;		Unchanged: 0/0
 30329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30330 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30331 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30332 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30333 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30334 ;;Total ram usage:       12 bytes
 30335 ;; Hardware stack levels used:    1
 30336 ;; Hardware stack levels required when called:   11
 30337 ;; This function calls:
 30338 ;;		_display_get_character
 30339 ;; This function is called by:
 30340 ;;		_api_prepare
 30341 ;; This function uses a non-reentrant model
 30342 ;;
 30343                           
 30344                           	psect	text111
 30345  010C1C                     __ptext111:
 30346                           	opt stack 0
 30347  010C1C                     __fill_buffer_get_display:
 30348                           	opt stack 17
 30349                           
 30350                           ;api.c: 228: uint8_t cntr;;api.c: 229: uint8_t line;;api.c: 230: uint8_t start_line;;api
      +                          .c: 231: uint8_t position;;api.c: 234: if(secondHalf)
 30351                           
 30352                           ; BSR set to: 0
 30353                           ;incstack = 0
 30354  010C1C  0100               	movlb	0	; () banked
 30355  010C1E  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 30356  010C20  B4D8               	btfsc	status,2,c
 30357  010C22  D006               	goto	l2206
 30358                           
 30359                           ; BSR set to: 0
 30360                           ;api.c: 235: {;api.c: 236: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 30361  010C24  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 30362  010C28  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 30363  010C2C  0E12               	movlw	18
 30364  010C2E  D005               	goto	L56
 30365  010C30                     l2206:
 30366                           
 30367                           ; BSR set to: 0
 30368                           ;api.c: 238: else;api.c: 239: {;api.c: 240: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 30369                           
 30370                           ; BSR set to: 0
 30371  010C30  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 30372  010C34  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 30373  010C38  0E11               	movlw	17
 30374  010C3A                     L56:
 30375  010C3A  6EDF               	movwf	indf2,c
 30376                           
 30377                           ; BSR set to: 0
 30378                           ;api.c: 241: };api.c: 244: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 30379                           
 30380                           ; BSR set to: 0
 30381  010C3C  EE20 F001          	lfsr	2,1
 30382  010C40  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 30383  010C42  26D9               	addwf	fsr2l,f,c
 30384  010C44  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 30385  010C46  22DA               	addwfc	fsr2h,f,c
 30386  010C48  0EA1               	movlw	161
 30387  010C4A  6EDF               	movwf	indf2,c
 30388                           
 30389                           ; BSR set to: 0
 30390                           ;api.c: 245: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 30391  010C4C  EE20 F002          	lfsr	2,2
 30392  010C50  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 30393  010C52  26D9               	addwf	fsr2l,f,c
 30394  010C54  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 30395  010C56  22DA               	addwfc	fsr2h,f,c
 30396  010C58  0E62               	movlw	98
 30397  010C5A  6EDF               	movwf	indf2,c
 30398                           
 30399                           ; BSR set to: 0
 30400                           ;api.c: 248: cntr = 3;
 30401  010C5C  0E03               	movlw	3
 30402  010C5E  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 30403                           
 30404                           ; BSR set to: 0
 30405                           ;api.c: 249: if(secondHalf)
 30406  010C60  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 30407  010C62  B4D8               	btfsc	status,2,c
 30408  010C64  D002               	goto	l2208
 30409                           
 30410                           ; BSR set to: 0
 30411                           ;api.c: 250: {;api.c: 251: start_line = 2;
 30412  010C66  0E02               	movlw	2
 30413  010C68  D001               	goto	L57
 30414  010C6A                     l2208:
 30415                           
 30416                           ; BSR set to: 0
 30417                           ;api.c: 253: else;api.c: 254: {;api.c: 255: start_line = 0;
 30418                           
 30419                           ; BSR set to: 0
 30420  010C6A  0E00               	movlw	0
 30421  010C6C                     L57:
 30422  010C6C  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 30423                           
 30424                           ; BSR set to: 0
 30425                           ;api.c: 256: };api.c: 257: for(line=start_line; line<start_line+2; ++line)
 30426                           
 30427                           ; BSR set to: 0
 30428  010C6E  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 30429  010C72  D01B               	goto	l2210
 30430  010C74                     
 30431                           ; BSR set to: 0
 30432                           ;api.c: 258: {;api.c: 259: for(position=0; position<20; ++position)
 30433                           
 30434                           ; BSR set to: 0
 30435  010C74  0E00               	movlw	0
 30436  010C76  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 30437  010C78                     l20015:
 30438                           
 30439                           ; BSR set to: 0
 30440  010C78  0E13               	movlw	19
 30441  010C7A  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 30442  010C7C  D001               	goto	l2212
 30443  010C7E  D014               	goto	u19860
 30444  010C80                     l2212:
 30445                           
 30446                           ; BSR set to: 0
 30447                           ;api.c: 260: {;api.c: 261: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 30448                           
 30449                           ; BSR set to: 0
 30450  010C80  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 30451  010C84  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 30452  010C86  EC03  F094         	call	_display_get_character
 30453  010C8A  0100               	movlb	0	; () banked
 30454  010C8C  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 30455  010C8E  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 30456  010C90  0D01               	mullw	1
 30457  010C92  50F3               	movf	prodl,w,c
 30458  010C94  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 30459  010C96  6ED9               	movwf	fsr2l,c
 30460  010C98  50F4               	movf	prodh,w,c
 30461  010C9A  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 30462  010C9C  6EDA               	movwf	fsr2h,c
 30463  010C9E  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 30464                           
 30465                           ; BSR set to: 0
 30466                           ;api.c: 262: ++cntr;
 30467  010CA2  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 30468                           
 30469                           ; BSR set to: 0
 30470  010CA4  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 30471  010CA6  D7E8               	goto	l20015
 30472  010CA8                     u19860:
 30473                           
 30474                           ; BSR set to: 0
 30475                           
 30476                           ; BSR set to: 0
 30477  010CA8  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 30478  010CAA                     l2210:
 30479                           
 30480                           ; BSR set to: 0
 30481                           
 30482                           ; BSR set to: 0
 30483  010CAA  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 30484  010CAC  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 30485  010CAE  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 30486  010CB0  0E02               	movlw	2
 30487  010CB2  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 30488  010CB4  0E00               	movlw	0
 30489  010CB6  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 30490  010CB8  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 30491  010CBA  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 30492  010CBC  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 30493  010CBE  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 30494  010CC0  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 30495  010CC2  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 30496  010CC4  0A80               	xorlw	128
 30497  010CC6  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 30498  010CC8  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 30499  010CCA  0A80               	xorlw	128
 30500  010CCC  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 30501  010CCE  B0D8               	btfsc	status,0,c
 30502  010CD0  0012               	return	
 30503  010CD2  D7D0               	goto	l2211
 30504  010CD4                     __end_of__fill_buffer_get_display:
 30505                           	opt stack 0
 30506                           tosu	equ	0xFFF
 30507                           tosh	equ	0xFFE
 30508                           tosl	equ	0xFFD
 30509                           pclath	equ	0xFFA
 30510                           tblptru	equ	0xFF8
 30511                           tblptrh	equ	0xFF7
 30512                           tblptrl	equ	0xFF6
 30513                           tablat	equ	0xFF5
 30514                           prodh	equ	0xFF4
 30515                           prodl	equ	0xFF3
 30516                           intcon	equ	0xFF2
 30517                           indf0	equ	0xFEF
 30518                           postinc0	equ	0xFEE
 30519                           fsr0h	equ	0xFEA
 30520                           fsr0l	equ	0xFE9
 30521                           wreg	equ	0xFE8
 30522                           indf1	equ	0xFE7
 30523                           postdec1	equ	0xFE5
 30524                           plusw1	equ	0xFE3
 30525                           fsr1h	equ	0xFE2
 30526                           fsr1l	equ	0xFE1
 30527                           indf2	equ	0xFDF
 30528                           postinc2	equ	0xFDE
 30529                           postdec2	equ	0xFDD
 30530                           plusw2	equ	0xFDB
 30531                           fsr2h	equ	0xFDA
 30532                           fsr2l	equ	0xFD9
 30533                           status	equ	0xFD8
 30534                           
 30535 ;; *************** function _display_get_character *****************
 30536 ;; Defined at:
 30537 ;;		line 580 in file "display.c"
 30538 ;; Parameters:    Size  Location     Type
 30539 ;;  line            1    wreg     unsigned char 
 30540 ;;  position        1    0[BANK0 ] unsigned char 
 30541 ;; Auto vars:     Size  Location     Type
 30542 ;;  line            1    3[BANK0 ] unsigned char 
 30543 ;; Return value:  Size  Location     Type
 30544 ;;                  1    wreg      unsigned char 
 30545 ;; Registers used:
 30546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30547 ;; Tracked objects:
 30548 ;;		On entry : 0/0
 30549 ;;		On exit  : 0/0
 30550 ;;		Unchanged: 0/0
 30551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30552 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30555 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30556 ;;Total ram usage:        4 bytes
 30557 ;; Hardware stack levels used:    1
 30558 ;; Hardware stack levels required when called:   10
 30559 ;; This function calls:
 30560 ;;		Nothing
 30561 ;; This function is called by:
 30562 ;;		__fill_buffer_get_display
 30563 ;; This function uses a non-reentrant model
 30564 ;;
 30565                           
 30566                           	psect	text112
 30567  012806                     __ptext112:
 30568                           	opt stack 0
 30569  012806                     _display_get_character:
 30570                           	opt stack 17
 30571                           
 30572                           ; BSR set to: 0
 30573                           ;incstack = 0
 30574                           ;display_get_character@line stored from wreg
 30575  012806  0100               	movlb	0	; () banked
 30576  012808  6F63               	movwf	display_get_character@line& (0+255),b
 30577                           
 30578                           ;display.c: 582: return display_content[line][position];
 30579  01280A  0100               	movlb	0	; () banked
 30580  01280C  5163               	movf	display_get_character@line& (0+255),w,b
 30581  01280E  0D14               	mullw	20
 30582  012810  0E78               	movlw	low _display_content
 30583  012812  6F61               	movwf	??_display_get_character& (0+255),b
 30584  012814  0E02               	movlw	high _display_content
 30585  012816  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 30586  012818  50F3               	movf	prodl,w,c
 30587  01281A  2761               	addwf	??_display_get_character& (0+255),f,b
 30588  01281C  50F4               	movf	prodh,w,c
 30589  01281E  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 30590  012820  5160               	movf	display_get_character@position& (0+255),w,b
 30591  012822  0D01               	mullw	1
 30592  012824  50F3               	movf	prodl,w,c
 30593  012826  2561               	addwf	??_display_get_character& (0+255),w,b
 30594  012828  6ED9               	movwf	fsr2l,c
 30595  01282A  50F4               	movf	prodh,w,c
 30596  01282C  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 30597  01282E  6EDA               	movwf	fsr2h,c
 30598  012830  50DF               	movf	indf2,w,c
 30599  012832  0012               	return	
 30600  012834                     __end_of_display_get_character:
 30601                           	opt stack 0
 30602                           tosu	equ	0xFFF
 30603                           tosh	equ	0xFFE
 30604                           tosl	equ	0xFFD
 30605                           pclath	equ	0xFFA
 30606                           tblptru	equ	0xFF8
 30607                           tblptrh	equ	0xFF7
 30608                           tblptrl	equ	0xFF6
 30609                           tablat	equ	0xFF5
 30610                           prodh	equ	0xFF4
 30611                           prodl	equ	0xFF3
 30612                           intcon	equ	0xFF2
 30613                           indf0	equ	0xFEF
 30614                           postinc0	equ	0xFEE
 30615                           fsr0h	equ	0xFEA
 30616                           fsr0l	equ	0xFE9
 30617                           wreg	equ	0xFE8
 30618                           indf1	equ	0xFE7
 30619                           postdec1	equ	0xFE5
 30620                           plusw1	equ	0xFE3
 30621                           fsr1h	equ	0xFE2
 30622                           fsr1l	equ	0xFE1
 30623                           indf2	equ	0xFDF
 30624                           postinc2	equ	0xFDE
 30625                           postdec2	equ	0xFDD
 30626                           plusw2	equ	0xFDB
 30627                           fsr2h	equ	0xFDA
 30628                           fsr2l	equ	0xFD9
 30629                           status	equ	0xFD8
 30630                           
 30631 ;; *************** function _api_parse *****************
 30632 ;; Defined at:
 30633 ;;		line 91 in file "api.c"
 30634 ;; Parameters:    Size  Location     Type
 30635 ;;  inBuffer        2   91[BANK0 ] PTR unsigned char 
 30636 ;;		 -> ReceivedDataBuffer(64), 
 30637 ;;  receivedData    1   93[BANK0 ] unsigned char 
 30638 ;;  outBuffer       2   94[BANK0 ] PTR unsigned char 
 30639 ;;		 -> ToSendDataBuffer(64), 
 30640 ;; Auto vars:     Size  Location     Type
 30641 ;;  out_idx_ptr     2   98[BANK0 ] PTR unsigned char 
 30642 ;;		 -> api_parse@out_idx(1), 
 30643 ;;  in_idx          1  101[BANK0 ] unsigned char 
 30644 ;;  out_idx         1  100[BANK0 ] unsigned char 
 30645 ;; Return value:  Size  Location     Type
 30646 ;;                  1    wreg      void 
 30647 ;; Registers used:
 30648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30649 ;; Tracked objects:
 30650 ;;		On entry : 0/0
 30651 ;;		On exit  : 0/0
 30652 ;;		Unchanged: 0/0
 30653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30654 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30655 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30657 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30658 ;;Total ram usage:       11 bytes
 30659 ;; Hardware stack levels used:    1
 30660 ;; Hardware stack levels required when called:   14
 30661 ;; This function calls:
 30662 ;;		__parse_command_long
 30663 ;;		__parse_command_short
 30664 ;; This function is called by:
 30665 ;;		_APP_DeviceCustomHIDTasks
 30666 ;; This function uses a non-reentrant model
 30667 ;;
 30668                           
 30669                           	psect	text113
 30670  00F238                     __ptext113:
 30671                           	opt stack 0
 30672  00F238                     _api_parse:
 30673                           	opt stack 15
 30674                           
 30675                           ;api.c: 95: uint8_t in_idx;;api.c: 96: uint8_t out_idx;;api.c: 97: uint8_t *out_idx_ptr;
      +                          ;api.c: 99: out_idx = 0;
 30676                           
 30677                           ; BSR set to: 0
 30678                           ;incstack = 0
 30679  00F238  0E00               	movlw	0
 30680  00F23A  0100               	movlb	0	; () banked
 30681  00F23C  6FC4               	movwf	api_parse@out_idx& (0+255),b
 30682                           
 30683                           ; BSR set to: 0
 30684                           ;api.c: 100: out_idx_ptr = &out_idx;
 30685  00F23E  0EC4               	movlw	low api_parse@out_idx
 30686  00F240  6FC2               	movwf	api_parse@out_idx_ptr& (0+255),b
 30687  00F242  0E00               	movlw	high api_parse@out_idx
 30688  00F244  6FC3               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 30689                           
 30690                           ; BSR set to: 0
 30691                           ;api.c: 102: if(inBuffer[0]>0x7F)
 30692  00F246  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 30693  00F24A  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 30694  00F24E  0E7F               	movlw	127
 30695  00F250  64DF               	cpfsgt	indf2,c
 30696  00F252  D001               	goto	l2187
 30697  00F254  0012               	return	
 30698  00F256                     l2187:
 30699                           
 30700                           ; BSR set to: 0
 30701                           ;api.c: 107: };api.c: 109: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 30702                           
 30703                           ; BSR set to: 0
 30704  00F256  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 30705  00F25A  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 30706  00F25E  0E20               	movlw	32
 30707  00F260  18DE               	xorwf	postinc2,w,c
 30708  00F262  B4D8               	btfsc	status,2,c
 30709  00F264  0012               	return	
 30710                           
 30711                           ; BSR set to: 0
 30712                           ;api.c: 114: };api.c: 116: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 30713                           
 30714                           ; BSR set to: 0
 30715                           
 30716                           ; BSR set to: 0
 30717                           ;api.c: 110: {;api.c: 113: return;
 30718  00F266  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 30719  00F26A  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 30720  00F26E  50DF               	movf	indf2,w,c
 30721  00F270  A4D8               	btfss	status,2,c
 30722  00F272  D018               	goto	l2190
 30723                           
 30724                           ; BSR set to: 0
 30725                           ;api.c: 117: {;api.c: 119: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 30726  00F274  C0BE  FFD9         	movff	api_parse@outBuffer,fsr2l
 30727  00F278  C0BF  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 30728  00F27C  0E00               	movlw	0
 30729  00F27E  6EDF               	movwf	indf2,c
 30730                           
 30731                           ; BSR set to: 0
 30732                           ;api.c: 122: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 30733  00F280  EE20 F001          	lfsr	2,1
 30734  00F284  51BE               	movf	api_parse@outBuffer& (0+255),w,b
 30735  00F286  26D9               	addwf	fsr2l,f,c
 30736  00F288  51BF               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 30737  00F28A  22DA               	addwfc	fsr2h,f,c
 30738  00F28C  0EA1               	movlw	161
 30739  00F28E  6EDF               	movwf	indf2,c
 30740                           
 30741                           ; BSR set to: 0
 30742                           ;api.c: 123: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 30743  00F290  EE20 F002          	lfsr	2,2
 30744  00F294  51BE               	movf	api_parse@outBuffer& (0+255),w,b
 30745  00F296  26D9               	addwf	fsr2l,f,c
 30746  00F298  51BF               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 30747  00F29A  22DA               	addwfc	fsr2h,f,c
 30748  00F29C  0E62               	movlw	98
 30749  00F29E  6EDF               	movwf	indf2,c
 30750                           
 30751                           ; BSR set to: 0
 30752                           ;api.c: 126: out_idx = 3;
 30753  00F2A0  0E03               	movlw	3
 30754  00F2A2  6FC4               	movwf	api_parse@out_idx& (0+255),b
 30755  00F2A4                     l2190:
 30756                           
 30757                           ; BSR set to: 0
 30758                           ;api.c: 127: };api.c: 129: in_idx = 1;
 30759                           
 30760                           ; BSR set to: 0
 30761  00F2A4  0E01               	movlw	1
 30762  00F2A6  6FC5               	movwf	api_parse@in_idx& (0+255),b
 30763                           
 30764                           ;api.c: 130: while(in_idx<receivedDataLength)
 30765  00F2A8  D057               	goto	l2196
 30766  00F2AA                     
 30767                           ; BSR set to: 0
 30768                           ;api.c: 131: {;api.c: 133: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 30769                           
 30770                           ; BSR set to: 0
 30771  00F2AA  51C5               	movf	api_parse@in_idx& (0+255),w,b
 30772  00F2AC  0D01               	mullw	1
 30773  00F2AE  50F3               	movf	prodl,w,c
 30774  00F2B0  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 30775  00F2B2  6ED9               	movwf	fsr2l,c
 30776  00F2B4  50F4               	movf	prodh,w,c
 30777  00F2B6  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30778  00F2B8  6EDA               	movwf	fsr2h,c
 30779  00F2BA  0E99               	movlw	153
 30780  00F2BC  18DE               	xorwf	postinc2,w,c
 30781  00F2BE  B4D8               	btfsc	status,2,c
 30782  00F2C0  0012               	return	
 30783  00F2C2  D02F               	goto	l2194
 30784  00F2C4                     
 30785                           ; BSR set to: 0
 30786                           ;api.c: 141: _parse_command_short(inBuffer[in_idx]);
 30787                           
 30788                           ; BSR set to: 0
 30789  00F2C4  51C5               	movf	api_parse@in_idx& (0+255),w,b
 30790  00F2C6  0D01               	mullw	1
 30791  00F2C8  50F3               	movf	prodl,w,c
 30792  00F2CA  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 30793  00F2CC  6ED9               	movwf	fsr2l,c
 30794  00F2CE  50F4               	movf	prodh,w,c
 30795  00F2D0  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30796  00F2D2  6EDA               	movwf	fsr2h,c
 30797  00F2D4  50DF               	movf	indf2,w,c
 30798  00F2D6  EC23  F072         	call	__parse_command_short
 30799  00F2DA  D00B               	goto	l20663
 30800  00F2DC                     
 30801                           ; BSR set to: 0
 30802                           ;api.c: 146: _parse_command_short(inBuffer[in_idx]);
 30803                           
 30804                           ; BSR set to: 0
 30805  00F2DC  51C5               	movf	api_parse@in_idx& (0+255),w,b
 30806  00F2DE  0D01               	mullw	1
 30807  00F2E0  50F3               	movf	prodl,w,c
 30808  00F2E2  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 30809  00F2E4  6ED9               	movwf	fsr2l,c
 30810  00F2E6  50F4               	movf	prodh,w,c
 30811  00F2E8  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30812  00F2EA  6EDA               	movwf	fsr2h,c
 30813  00F2EC  50DF               	movf	indf2,w,c
 30814  00F2EE  EC23  F072         	call	__parse_command_short
 30815  00F2F2                     l20663:
 30816                           
 30817                           ;api.c: 147: ++in_idx;
 30818  00F2F2  0100               	movlb	0	; () banked
 30819  00F2F4  2BC5               	incf	api_parse@in_idx& (0+255),f,b
 30820                           
 30821                           ;api.c: 148: break;
 30822  00F2F6  D030               	goto	l2196
 30823  00F2F8                     
 30824                           ; BSR set to: 0
 30825                           ;api.c: 151: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 30826                           
 30827                           ; BSR set to: 0
 30828  00F2F8  51C5               	movf	api_parse@in_idx& (0+255),w,b
 30829  00F2FA  0D01               	mullw	1
 30830  00F2FC  50F3               	movf	prodl,w,c
 30831  00F2FE  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 30832  00F300  6FAA               	movwf	__parse_command_long@data& (0+255),b
 30833  00F302  50F4               	movf	prodh,w,c
 30834  00F304  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30835  00F306  6FAB               	movwf	(__parse_command_long@data+1)& (0+255),b
 30836  00F308  C0BE  F0AC         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 30837  00F30C  C0BF  F0AD         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 30838  00F310  C0C2  F0AE         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 30839  00F314  C0C3  F0AF         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 30840  00F318  EC54  F092         	call	__parse_command_long	;wreg free
 30841  00F31C  0100               	movlb	0	; () banked
 30842  00F31E  27C5               	addwf	api_parse@in_idx& (0+255),f,b
 30843                           
 30844                           ;api.c: 152: break;
 30845  00F320  D01B               	goto	l2196
 30846  00F322                     l2194:
 30847                           
 30848                           ; BSR set to: 0
 30849                           
 30850                           ; BSR set to: 0
 30851  00F322  51C5               	movf	api_parse@in_idx& (0+255),w,b
 30852  00F324  0D01               	mullw	1
 30853  00F326  50F3               	movf	prodl,w,c
 30854  00F328  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 30855  00F32A  6ED9               	movwf	fsr2l,c
 30856  00F32C  50F4               	movf	prodh,w,c
 30857  00F32E  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30858  00F330  6EDA               	movwf	fsr2h,c
 30859  00F332  50DF               	movf	indf2,w,c
 30860  00F334  0BF0               	andlw	240
 30861  00F336  6FC0               	movwf	??_api_parse& (0+255),b
 30862  00F338  6BC1               	clrf	(??_api_parse+1)& (0+255),b
 30863                           
 30864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30865                           ; Switch size 1, requested type "space"
 30866                           ; Number of cases is 1, Range of values is 0 to 0
 30867                           ; switch strategies available:
 30868                           ; Name         Instructions Cycles
 30869                           ; simple_byte            4     3 (average)
 30870                           ;	Chosen strategy is simple_byte
 30871  00F33A  51C1               	movf	(??_api_parse+1)& (0+255),w,b
 30872  00F33C  0A00               	xorlw	0	; case 0
 30873  00F33E  A4D8               	btfss	status,2,c
 30874  00F340  0012               	return	
 30875                           
 30876                           ; BSR set to: 0
 30877                           ; Switch size 1, requested type "space"
 30878                           ; Number of cases is 3, Range of values is 32 to 144
 30879                           ; switch strategies available:
 30880                           ; Name         Instructions Cycles
 30881                           ; simple_byte           10     6 (average)
 30882                           ;	Chosen strategy is simple_byte
 30883  00F342  51C0               	movf	??_api_parse& (0+255),w,b
 30884  00F344  0A20               	xorlw	32	; case 32
 30885  00F346  B4D8               	btfsc	status,2,c
 30886  00F348  D7BD               	goto	l2195
 30887  00F34A  0A10               	xorlw	16	; case 48
 30888  00F34C  B4D8               	btfsc	status,2,c
 30889  00F34E  D7C6               	goto	l2197
 30890  00F350  0AA0               	xorlw	160	; case 144
 30891  00F352  A4D8               	btfss	status,2,c
 30892  00F354  0012               	return	
 30893  00F356  D7D0               	goto	l2198
 30894  00F358                     l2196:
 30895                           
 30896                           ; BSR set to: 0
 30897                           
 30898                           ; BSR set to: 0
 30899                           
 30900                           ; BSR set to: 0
 30901  00F358  51BD               	movf	api_parse@receivedDataLength& (0+255),w,b
 30902  00F35A  5DC5               	subwf	api_parse@in_idx& (0+255),w,b
 30903  00F35C  B0D8               	btfsc	status,0,c
 30904  00F35E  0012               	return	
 30905  00F360  D7A4               	goto	l2192
 30906  00F362                     __end_of_api_parse:
 30907                           	opt stack 0
 30908                           tosu	equ	0xFFF
 30909                           tosh	equ	0xFFE
 30910                           tosl	equ	0xFFD
 30911                           pclath	equ	0xFFA
 30912                           tblptru	equ	0xFF8
 30913                           tblptrh	equ	0xFF7
 30914                           tblptrl	equ	0xFF6
 30915                           tablat	equ	0xFF5
 30916                           prodh	equ	0xFF4
 30917                           prodl	equ	0xFF3
 30918                           intcon	equ	0xFF2
 30919                           indf0	equ	0xFEF
 30920                           postinc0	equ	0xFEE
 30921                           fsr0h	equ	0xFEA
 30922                           fsr0l	equ	0xFE9
 30923                           wreg	equ	0xFE8
 30924                           indf1	equ	0xFE7
 30925                           postdec1	equ	0xFE5
 30926                           plusw1	equ	0xFE3
 30927                           fsr1h	equ	0xFE2
 30928                           fsr1l	equ	0xFE1
 30929                           indf2	equ	0xFDF
 30930                           postinc2	equ	0xFDE
 30931                           postdec2	equ	0xFDD
 30932                           plusw2	equ	0xFDB
 30933                           fsr2h	equ	0xFDA
 30934                           fsr2l	equ	0xFD9
 30935                           status	equ	0xFD8
 30936                           
 30937 ;; *************** function __parse_command_short *****************
 30938 ;; Defined at:
 30939 ;;		line 321 in file "api.c"
 30940 ;; Parameters:    Size  Location     Type
 30941 ;;  cmd             1    wreg     unsigned char 
 30942 ;; Auto vars:     Size  Location     Type
 30943 ;;  cmd             1   90[BANK0 ] unsigned char 
 30944 ;; Return value:  Size  Location     Type
 30945 ;;                  1    wreg      void 
 30946 ;; Registers used:
 30947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30948 ;; Tracked objects:
 30949 ;;		On entry : 0/0
 30950 ;;		On exit  : 0/0
 30951 ;;		Unchanged: 0/0
 30952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30956 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30957 ;;Total ram usage:        1 bytes
 30958 ;; Hardware stack levels used:    1
 30959 ;; Hardware stack levels required when called:   13
 30960 ;; This function calls:
 30961 ;;		_motor_go_to_steps_position
 30962 ;;		_motor_schedule_command
 30963 ;; This function is called by:
 30964 ;;		_api_parse
 30965 ;; This function uses a non-reentrant model
 30966 ;;
 30967                           
 30968                           	psect	text114
 30969  00E446                     __ptext114:
 30970                           	opt stack 0
 30971  00E446                     __parse_command_short:
 30972                           	opt stack 15
 30973                           
 30974                           ; BSR set to: 0
 30975                           ;incstack = 0
 30976                           ;__parse_command_short@cmd stored from wreg
 30977  00E446  0100               	movlb	0	; () banked
 30978  00E448  6FBA               	movwf	__parse_command_short@cmd& (0+255),b
 30979                           
 30980                           ;api.c: 323: switch(cmd)
 30981  00E44A  D07F               	goto	l2232
 30982  00E44C                     
 30983                           ;api.c: 341: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 30984  00E44C  0E01               	movlw	1
 30985  00E44E  0100               	movlb	0	; () banked
 30986  00E450  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 30987                           
 30988                           ;api.c: 342: break;
 30989  00E452  0012               	return	
 30990  00E454                     
 30991                           ; BSR set to: 0
 30992                           ;api.c: 345: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 30993                           
 30994                           ; BSR set to: 0
 30995  00E454  0E11               	movlw	17
 30996  00E456  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 30997                           
 30998                           ;api.c: 346: break;
 30999  00E458  0012               	return	
 31000  00E45A                     
 31001                           ; BSR set to: 0
 31002                           ;api.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 31003                           
 31004                           ; BSR set to: 0
 31005  00E45A  0E31               	movlw	49
 31006  00E45C  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 31007                           
 31008                           ;api.c: 350: break;
 31009  00E45E  0012               	return	
 31010  00E460                     
 31011                           ; BSR set to: 0
 31012                           ;api.c: 353: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 31013                           
 31014                           ; BSR set to: 0
 31015  00E460  0E51               	movlw	81
 31016  00E462  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 31017                           
 31018                           ;api.c: 354: break;
 31019  00E464  0012               	return	
 31020  00E466                     
 31021                           ; BSR set to: 0
 31022                           ;api.c: 357: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 31023                           
 31024                           ; BSR set to: 0
 31025  00E466  0E82               	movlw	130
 31026  00E468  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 31027                           
 31028                           ;api.c: 358: break;
 31029  00E46A  0012               	return	
 31030  00E46C                     
 31031                           ; BSR set to: 0
 31032                           ;api.c: 361: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 31033                           
 31034                           ; BSR set to: 0
 31035  00E46C  0E71               	movlw	113
 31036  00E46E  6FE0               	movwf	(_os+13)& (0+255),b	;volatile
 31037                           
 31038                           ;api.c: 362: break;
 31039  00E470  0012               	return	
 31040  00E472                     
 31041                           ; BSR set to: 0
 31042                           ;api.c: 365: os.current_position_in_steps = 0;
 31043                           
 31044                           ; BSR set to: 0
 31045  00E472  0E00               	movlw	0
 31046  00E474  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 31047  00E476  0E00               	movlw	0
 31048  00E478  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 31049  00E47A  0E00               	movlw	0
 31050  00E47C  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 31051  00E47E  0E00               	movlw	0
 31052  00E480  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 31053                           
 31054                           ;api.c: 366: os.divide_position = 0;
 31055  00E482  0E00               	movlw	0
 31056  00E484  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 31057  00E486  0E00               	movlw	0
 31058  00E488  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 31059                           
 31060                           ; BSR set to: 0
 31061                           ;api.c: 367: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 31062  00E48A  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31063  00E48E  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31064  00E492  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31065  00E494  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31066  00E496  0E00               	movlw	0
 31067  00E498  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31068  00E49A  0E00               	movlw	0
 31069  00E49C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31070  00E49E  0E01               	movlw	1
 31071  00E4A0  EC1A  F088         	call	_motor_schedule_command
 31072                           
 31073                           ;api.c: 368: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 31074  00E4A4  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31075  00E4A8  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31076  00E4AC  0100               	movlb	0	; () banked
 31077  00E4AE  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31078  00E4B0  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31079  00E4B2  0E00               	movlw	0
 31080  00E4B4  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31081  00E4B6  0E00               	movlw	0
 31082  00E4B8  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31083  00E4BA  0EFF               	movlw	255
 31084  00E4BC  EC1A  F088         	call	_motor_schedule_command
 31085                           
 31086                           ;api.c: 369: os.approach_direction = MOTOR_DIRECTION_CCW;
 31087  00E4C0  0100               	movlb	0	; () banked
 31088  00E4C2  69E5               	setf	(_os+18)& (0+255),b	;volatile
 31089                           
 31090                           ;api.c: 370: break;
 31091  00E4C4  0012               	return	
 31092  00E4C6                     
 31093                           ; BSR set to: 0
 31094                           ;api.c: 373: os.current_position_in_steps = 0;
 31095                           
 31096                           ; BSR set to: 0
 31097  00E4C6  0E00               	movlw	0
 31098  00E4C8  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 31099  00E4CA  0E00               	movlw	0
 31100  00E4CC  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 31101  00E4CE  0E00               	movlw	0
 31102  00E4D0  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 31103  00E4D2  0E00               	movlw	0
 31104  00E4D4  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 31105                           
 31106                           ;api.c: 374: os.divide_position = 0;
 31107  00E4D6  0E00               	movlw	0
 31108  00E4D8  6FEA               	movwf	(_os+23)& (0+255),b	;volatile
 31109  00E4DA  0E00               	movlw	0
 31110  00E4DC  6FE9               	movwf	(_os+22)& (0+255),b	;volatile
 31111                           
 31112                           ; BSR set to: 0
 31113                           ;api.c: 375: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 31114  00E4DE  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31115  00E4E2  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31116  00E4E6  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31117  00E4E8  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31118  00E4EA  0E00               	movlw	0
 31119  00E4EC  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31120  00E4EE  0E00               	movlw	0
 31121  00E4F0  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31122  00E4F2  0EFF               	movlw	255
 31123  00E4F4  EC1A  F088         	call	_motor_schedule_command
 31124                           
 31125                           ;api.c: 376: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 31126  00E4F8  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31127  00E4FC  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31128  00E500  0100               	movlb	0	; () banked
 31129  00E502  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31130  00E504  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31131  00E506  0E00               	movlw	0
 31132  00E508  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31133  00E50A  0E00               	movlw	0
 31134  00E50C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31135  00E50E  0E01               	movlw	1
 31136  00E510  EC1A  F088         	call	_motor_schedule_command
 31137                           
 31138                           ;api.c: 377: os.approach_direction = MOTOR_DIRECTION_CW;
 31139  00E514  0E01               	movlw	1
 31140  00E516  0100               	movlb	0	; () banked
 31141  00E518  6FE5               	movwf	(_os+18)& (0+255),b	;volatile
 31142                           
 31143                           ;api.c: 378: break;
 31144  00E51A  0012               	return	
 31145  00E51C                     
 31146                           ; BSR set to: 0
 31147                           ;api.c: 381: motor_go_to_steps_position(0);
 31148                           
 31149                           ; BSR set to: 0
 31150  00E51C  0E00               	movlw	0
 31151  00E51E  6F9E               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 31152  00E520  0E00               	movlw	0
 31153  00E522  6F9F               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 31154  00E524  0E00               	movlw	0
 31155  00E526  6FA0               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 31156  00E528  0E00               	movlw	0
 31157  00E52A  6FA1               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 31158  00E52C  ECBF  F063         	call	_motor_go_to_steps_position	;wreg free
 31159  00E530                     
 31160                           ;api.c: 384: --os.encoder2Count;
 31161  00E530  0100               	movlb	0	; () banked
 31162  00E532  07D8               	decf	(_os+5)& (0+255),f,b	;volatile
 31163                           
 31164                           ;api.c: 385: break;
 31165  00E534  0012               	return	
 31166  00E536                     
 31167                           ; BSR set to: 0
 31168                           ;api.c: 388: ++os.encoder2Count;
 31169                           
 31170                           ; BSR set to: 0
 31171  00E536  2BD8               	incf	(_os+5)& (0+255),f,b	;volatile
 31172                           
 31173                           ;api.c: 389: break;
 31174  00E538  0012               	return	
 31175  00E53A                     
 31176                           ; BSR set to: 0
 31177                           ;api.c: 392: ++os.button2;
 31178                           
 31179                           ; BSR set to: 0
 31180  00E53A  2BD9               	incf	(_os+6)& (0+255),f,b	;volatile
 31181                           
 31182                           ;api.c: 393: break;
 31183  00E53C  0012               	return	
 31184  00E53E                     
 31185                           ; BSR set to: 0
 31186                           ;api.c: 396: --os.encoder1Count;
 31187                           
 31188                           ; BSR set to: 0
 31189  00E53E  07D6               	decf	(_os+3)& (0+255),f,b	;volatile
 31190                           
 31191                           ;api.c: 397: break;
 31192  00E540  0012               	return	
 31193  00E542                     
 31194                           ; BSR set to: 0
 31195                           ;api.c: 400: ++os.encoder1Count;
 31196                           
 31197                           ; BSR set to: 0
 31198  00E542  2BD6               	incf	(_os+3)& (0+255),f,b	;volatile
 31199                           
 31200                           ;api.c: 401: break;
 31201  00E544  0012               	return	
 31202  00E546                     
 31203                           ; BSR set to: 0
 31204                           ;api.c: 404: ++os.button1;
 31205                           
 31206                           ; BSR set to: 0
 31207  00E546  2BD7               	incf	(_os+4)& (0+255),f,b	;volatile
 31208                           
 31209                           ; BSR set to: 0
 31210                           ;api.c: 406: }
 31211                           
 31212                           ;api.c: 405: break;
 31213  00E548  0012               	return	
 31214  00E54A                     l2232:
 31215                           
 31216                           ; BSR set to: 0
 31217  00E54A  0100               	movlb	0	; () banked
 31218  00E54C  51BA               	movf	__parse_command_short@cmd& (0+255),w,b
 31219                           
 31220                           ; Switch size 1, requested type "space"
 31221                           ; Number of cases is 15, Range of values is 32 to 53
 31222                           ; switch strategies available:
 31223                           ; Name         Instructions Cycles
 31224                           ; simple_byte           46    24 (average)
 31225                           ;	Chosen strategy is simple_byte
 31226  00E54E  0A20               	xorlw	32	; case 32
 31227  00E550  B4D8               	btfsc	status,2,c
 31228  00E552  D77C               	goto	l2233
 31229  00E554  0A01               	xorlw	1	; case 33
 31230  00E556  B4D8               	btfsc	status,2,c
 31231  00E558  D77D               	goto	l2235
 31232  00E55A  0A03               	xorlw	3	; case 34
 31233  00E55C  B4D8               	btfsc	status,2,c
 31234  00E55E  D77D               	goto	l2236
 31235  00E560  0A01               	xorlw	1	; case 35
 31236  00E562  B4D8               	btfsc	status,2,c
 31237  00E564  D77D               	goto	l2237
 31238  00E566  0A07               	xorlw	7	; case 36
 31239  00E568  B4D8               	btfsc	status,2,c
 31240  00E56A  D77D               	goto	l2238
 31241  00E56C  0A01               	xorlw	1	; case 37
 31242  00E56E  B4D8               	btfsc	status,2,c
 31243  00E570  D77D               	goto	l2239
 31244  00E572  0A03               	xorlw	3	; case 38
 31245  00E574  B4D8               	btfsc	status,2,c
 31246  00E576  D77D               	goto	l2240
 31247  00E578  0A01               	xorlw	1	; case 39
 31248  00E57A  B4D8               	btfsc	status,2,c
 31249  00E57C  D7A4               	goto	l2241
 31250  00E57E  0A0F               	xorlw	15	; case 40
 31251  00E580  B4D8               	btfsc	status,2,c
 31252  00E582  D7CC               	goto	l2242
 31253  00E584  0A18               	xorlw	24	; case 48
 31254  00E586  B4D8               	btfsc	status,2,c
 31255  00E588  D7D3               	goto	l2243
 31256  00E58A  0A01               	xorlw	1	; case 49
 31257  00E58C  B4D8               	btfsc	status,2,c
 31258  00E58E  D7D3               	goto	l2244
 31259  00E590  0A03               	xorlw	3	; case 50
 31260  00E592  B4D8               	btfsc	status,2,c
 31261  00E594  D7D2               	goto	l2245
 31262  00E596  0A01               	xorlw	1	; case 51
 31263  00E598  B4D8               	btfsc	status,2,c
 31264  00E59A  D7D1               	goto	l2246
 31265  00E59C  0A07               	xorlw	7	; case 52
 31266  00E59E  B4D8               	btfsc	status,2,c
 31267  00E5A0  D7D0               	goto	l2247
 31268  00E5A2  0A01               	xorlw	1	; case 53
 31269  00E5A4  A4D8               	btfss	status,2,c
 31270  00E5A6  0012               	return	
 31271  00E5A8  D7CE               	goto	l2248
 31272  00E5AA                     __end_of__parse_command_short:
 31273                           	opt stack 0
 31274                           tosu	equ	0xFFF
 31275                           tosh	equ	0xFFE
 31276                           tosl	equ	0xFFD
 31277                           pclath	equ	0xFFA
 31278                           tblptru	equ	0xFF8
 31279                           tblptrh	equ	0xFF7
 31280                           tblptrl	equ	0xFF6
 31281                           tablat	equ	0xFF5
 31282                           prodh	equ	0xFF4
 31283                           prodl	equ	0xFF3
 31284                           intcon	equ	0xFF2
 31285                           indf0	equ	0xFEF
 31286                           postinc0	equ	0xFEE
 31287                           fsr0h	equ	0xFEA
 31288                           fsr0l	equ	0xFE9
 31289                           wreg	equ	0xFE8
 31290                           indf1	equ	0xFE7
 31291                           postdec1	equ	0xFE5
 31292                           plusw1	equ	0xFE3
 31293                           fsr1h	equ	0xFE2
 31294                           fsr1l	equ	0xFE1
 31295                           indf2	equ	0xFDF
 31296                           postinc2	equ	0xFDE
 31297                           postdec2	equ	0xFDD
 31298                           plusw2	equ	0xFDB
 31299                           fsr2h	equ	0xFDA
 31300                           fsr2l	equ	0xFD9
 31301                           status	equ	0xFD8
 31302                           
 31303 ;; *************** function _motor_go_to_steps_position *****************
 31304 ;; Defined at:
 31305 ;;		line 443 in file "motor.c"
 31306 ;; Parameters:    Size  Location     Type
 31307 ;;  target_posit    4   62[BANK0 ] unsigned long 
 31308 ;; Auto vars:     Size  Location     Type
 31309 ;;  distance_ccw    4   86[BANK0 ] unsigned long 
 31310 ;;  distance_cw     4   82[BANK0 ] unsigned long 
 31311 ;;  overhead_ccw    4   78[BANK0 ] unsigned long 
 31312 ;;  overhead_cw     4   74[BANK0 ] unsigned long 
 31313 ;; Return value:  Size  Location     Type
 31314 ;;                  1    wreg      void 
 31315 ;; Registers used:
 31316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31317 ;; Tracked objects:
 31318 ;;		On entry : 0/0
 31319 ;;		On exit  : 0/0
 31320 ;;		Unchanged: 0/0
 31321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31323 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31324 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31325 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31326 ;;Total ram usage:       28 bytes
 31327 ;; Hardware stack levels used:    1
 31328 ;; Hardware stack levels required when called:   12
 31329 ;; This function calls:
 31330 ;;		_motor_schedule_command
 31331 ;; This function is called by:
 31332 ;;		__parse_command_short
 31333 ;;		_motor_divide_jump
 31334 ;;		_motor_divide_jump_to_nearest
 31335 ;;		_encoder_statemachine
 31336 ;;		_motor_go_to_degrees_position
 31337 ;; This function uses a non-reentrant model
 31338 ;;
 31339                           
 31340                           	psect	text115
 31341  00C77E                     __ptext115:
 31342                           	opt stack 0
 31343  00C77E                     _motor_go_to_steps_position:
 31344                           	opt stack 17
 31345                           
 31346                           ;motor.c: 445: uint32_t distance_cw;;motor.c: 446: uint32_t overhead_cw;;motor.c: 447: u
      +                          int32_t distance_ccw;;motor.c: 448: uint32_t overhead_ccw;;motor.c: 451: if(os.busy)
 31347                           
 31348                           ; BSR set to: 0
 31349                           ;incstack = 0
 31350  00C77E  0100               	movlb	0	; () banked
 31351  00C780  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 31352  00C782  A4D8               	btfss	status,2,c
 31353  00C784  0012               	return	
 31354                           
 31355                           ; BSR set to: 0
 31356                           ;motor.c: 454: };motor.c: 457: if(os.current_position_in_steps == target_position)
 31357                           
 31358                           ; BSR set to: 0
 31359                           
 31360                           ; BSR set to: 0
 31361                           ;motor.c: 452: {;motor.c: 453: return;
 31362  00C786  519E               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 31363  00C788  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 31364  00C78A  E10A               	bnz	l19123
 31365  00C78C  519F               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 31366  00C78E  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 31367  00C790  E107               	bnz	l19123
 31368  00C792  51A0               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 31369  00C794  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 31370  00C796  E104               	bnz	l19123
 31371  00C798  51A1               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 31372  00C79A  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 31373  00C79C  B4D8               	btfsc	status,2,c
 31374  00C79E  0012               	return	
 31375  00C7A0                     l19123:
 31376                           
 31377                           ; BSR set to: 0
 31378                           ;motor.c: 460: };motor.c: 463: overhead_cw = 0;
 31379  00C7A0  0E00               	movlw	0
 31380  00C7A2  6FAA               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 31381  00C7A4  0E00               	movlw	0
 31382  00C7A6  6FAB               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 31383  00C7A8  0E00               	movlw	0
 31384  00C7AA  6FAC               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 31385  00C7AC  0E00               	movlw	0
 31386  00C7AE  6FAD               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 31387                           
 31388                           ; BSR set to: 0
 31389                           ;motor.c: 464: distance_cw = target_position - os.current_position_in_steps;
 31390  00C7B0  C0DA  F0A2         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 31391  00C7B4  C0DB  F0A3         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 31392  00C7B8  C0DC  F0A4         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 31393  00C7BC  C0DD  F0A5         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 31394  00C7C0  1FA2               	comf	??_motor_go_to_steps_position& (0+255),f,b
 31395  00C7C2  1FA3               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31396  00C7C4  1FA4               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31397  00C7C6  1FA5               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31398  00C7C8  2BA2               	incf	??_motor_go_to_steps_position& (0+255),f,b
 31399  00C7CA  0E00               	movlw	0
 31400  00C7CC  23A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31401  00C7CE  23A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31402  00C7D0  23A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31403  00C7D2  519E               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 31404  00C7D4  25A2               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 31405  00C7D6  6FB2               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 31406  00C7D8  519F               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 31407  00C7DA  21A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 31408  00C7DC  6FB3               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 31409  00C7DE  51A0               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 31410  00C7E0  21A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 31411  00C7E2  6FB4               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 31412  00C7E4  51A1               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 31413  00C7E6  21A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 31414  00C7E8  6FB5               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 31415                           
 31416                           ; BSR set to: 0
 31417                           ;motor.c: 465: if(distance_cw>config.full_circle_in_steps)
 31418  00C7EA  51B2               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 31419  00C7EC  0101               	movlb	1	; () banked
 31420  00C7EE  5D79               	subwf	_config& (0+255),w,b
 31421  00C7F0  0100               	movlb	0	; () banked
 31422  00C7F2  51B3               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 31423  00C7F4  0101               	movlb	1	; () banked
 31424  00C7F6  597A               	subwfb	(_config+1)& (0+255),w,b
 31425  00C7F8  0100               	movlb	0	; () banked
 31426  00C7FA  51B4               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 31427  00C7FC  0101               	movlb	1	; () banked
 31428  00C7FE  597B               	subwfb	(_config+2)& (0+255),w,b
 31429  00C800  0100               	movlb	0	; () banked
 31430  00C802  51B5               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 31431  00C804  0101               	movlb	1	; () banked
 31432  00C806  597C               	subwfb	(_config+3)& (0+255),w,b
 31433  00C808  B0D8               	btfsc	status,0,c
 31434  00C80A  D00F               	goto	l2418
 31435                           
 31436                           ; BSR set to: 1
 31437                           ;motor.c: 466: {;motor.c: 467: distance_cw += config.full_circle_in_steps;
 31438  00C80C  5179               	movf	_config& (0+255),w,b
 31439  00C80E  0100               	movlb	0	; () banked
 31440  00C810  27B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 31441  00C812  0101               	movlb	1	; () banked
 31442  00C814  517A               	movf	(_config+1)& (0+255),w,b
 31443  00C816  0100               	movlb	0	; () banked
 31444  00C818  23B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 31445  00C81A  0101               	movlb	1	; () banked
 31446  00C81C  517B               	movf	(_config+2)& (0+255),w,b
 31447  00C81E  0100               	movlb	0	; () banked
 31448  00C820  23B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 31449  00C822  0101               	movlb	1	; () banked
 31450  00C824  517C               	movf	(_config+3)& (0+255),w,b
 31451  00C826  0100               	movlb	0	; () banked
 31452  00C828  23B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 31453  00C82A                     l2418:
 31454                           
 31455                           ;motor.c: 468: };motor.c: 469: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 31456  00C82A  0100               	movlb	0	; () banked
 31457  00C82C  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 31458  00C82E  A4D8               	btfss	status,2,c
 31459  00C830  D024               	goto	l2419
 31460                           
 31461                           ; BSR set to: 0
 31462                           ;motor.c: 470: {;motor.c: 471: distance_cw += config.overshoot_in_steps;
 31463  00C832  0101               	movlb	1	; () banked
 31464  00C834  517E               	movf	(_config+5)& (0+255),w,b
 31465  00C836  0100               	movlb	0	; () banked
 31466  00C838  27B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 31467  00C83A  0101               	movlb	1	; () banked
 31468  00C83C  517F               	movf	(_config+6)& (0+255),w,b
 31469  00C83E  0100               	movlb	0	; () banked
 31470  00C840  23B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 31471  00C842  0E00               	movlw	0
 31472  00C844  23B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 31473  00C846  0E00               	movlw	0
 31474  00C848  23B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 31475                           
 31476                           ;motor.c: 472: overhead_cw += config.overshoot_in_steps;
 31477  00C84A  0101               	movlb	1	; () banked
 31478  00C84C  517E               	movf	(_config+5)& (0+255),w,b
 31479  00C84E  0100               	movlb	0	; () banked
 31480  00C850  27AA               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 31481  00C852  0101               	movlb	1	; () banked
 31482  00C854  517F               	movf	(_config+6)& (0+255),w,b
 31483  00C856  0100               	movlb	0	; () banked
 31484  00C858  23AB               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 31485  00C85A  0E00               	movlw	0
 31486  00C85C  23AC               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 31487  00C85E  0E00               	movlw	0
 31488  00C860  23AD               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 31489                           
 31490                           ;motor.c: 473: overhead_cw += config.overshoot_cost_in_steps;
 31491  00C862  0101               	movlb	1	; () banked
 31492  00C864  5180               	movf	(_config+7)& (0+255),w,b
 31493  00C866  0100               	movlb	0	; () banked
 31494  00C868  27AA               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 31495  00C86A  0101               	movlb	1	; () banked
 31496  00C86C  5181               	movf	(_config+8)& (0+255),w,b
 31497  00C86E  0100               	movlb	0	; () banked
 31498  00C870  23AB               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 31499  00C872  0E00               	movlw	0
 31500  00C874  23AC               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 31501  00C876  0E00               	movlw	0
 31502  00C878  23AD               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 31503  00C87A                     l2419:
 31504                           
 31505                           ; BSR set to: 0
 31506                           ;motor.c: 474: };motor.c: 477: overhead_ccw = 0;
 31507                           
 31508                           ; BSR set to: 0
 31509  00C87A  0E00               	movlw	0
 31510  00C87C  6FAE               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 31511  00C87E  0E00               	movlw	0
 31512  00C880  6FAF               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 31513  00C882  0E00               	movlw	0
 31514  00C884  6FB0               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 31515  00C886  0E00               	movlw	0
 31516  00C888  6FB1               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 31517                           
 31518                           ; BSR set to: 0
 31519                           ;motor.c: 478: distance_ccw = os.current_position_in_steps - target_position;
 31520  00C88A  C09E  F0A2         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 31521  00C88E  C09F  F0A3         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 31522  00C892  C0A0  F0A4         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 31523  00C896  C0A1  F0A5         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 31524  00C89A  1FA2               	comf	??_motor_go_to_steps_position& (0+255),f,b
 31525  00C89C  1FA3               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31526  00C89E  1FA4               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31527  00C8A0  1FA5               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31528  00C8A2  2BA2               	incf	??_motor_go_to_steps_position& (0+255),f,b
 31529  00C8A4  0E00               	movlw	0
 31530  00C8A6  23A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31531  00C8A8  23A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31532  00C8AA  23A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31533  00C8AC  51DA               	movf	(_os+7)& (0+255),w,b	;volatile
 31534  00C8AE  25A2               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 31535  00C8B0  6FB6               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 31536  00C8B2  51DB               	movf	(_os+8)& (0+255),w,b	;volatile
 31537  00C8B4  21A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 31538  00C8B6  6FB7               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 31539  00C8B8  51DC               	movf	(_os+9)& (0+255),w,b	;volatile
 31540  00C8BA  21A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 31541  00C8BC  6FB8               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 31542  00C8BE  51DD               	movf	(_os+10)& (0+255),w,b	;volatile
 31543  00C8C0  21A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 31544  00C8C2  6FB9               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 31545                           
 31546                           ; BSR set to: 0
 31547                           ;motor.c: 479: if(distance_ccw>config.full_circle_in_steps)
 31548  00C8C4  51B6               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 31549  00C8C6  0101               	movlb	1	; () banked
 31550  00C8C8  5D79               	subwf	_config& (0+255),w,b
 31551  00C8CA  0100               	movlb	0	; () banked
 31552  00C8CC  51B7               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 31553  00C8CE  0101               	movlb	1	; () banked
 31554  00C8D0  597A               	subwfb	(_config+1)& (0+255),w,b
 31555  00C8D2  0100               	movlb	0	; () banked
 31556  00C8D4  51B8               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 31557  00C8D6  0101               	movlb	1	; () banked
 31558  00C8D8  597B               	subwfb	(_config+2)& (0+255),w,b
 31559  00C8DA  0100               	movlb	0	; () banked
 31560  00C8DC  51B9               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 31561  00C8DE  0101               	movlb	1	; () banked
 31562  00C8E0  597C               	subwfb	(_config+3)& (0+255),w,b
 31563  00C8E2  B0D8               	btfsc	status,0,c
 31564  00C8E4  D00F               	goto	l2420
 31565                           
 31566                           ; BSR set to: 1
 31567                           ;motor.c: 480: {;motor.c: 481: distance_ccw += config.full_circle_in_steps;
 31568  00C8E6  5179               	movf	_config& (0+255),w,b
 31569  00C8E8  0100               	movlb	0	; () banked
 31570  00C8EA  27B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 31571  00C8EC  0101               	movlb	1	; () banked
 31572  00C8EE  517A               	movf	(_config+1)& (0+255),w,b
 31573  00C8F0  0100               	movlb	0	; () banked
 31574  00C8F2  23B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 31575  00C8F4  0101               	movlb	1	; () banked
 31576  00C8F6  517B               	movf	(_config+2)& (0+255),w,b
 31577  00C8F8  0100               	movlb	0	; () banked
 31578  00C8FA  23B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 31579  00C8FC  0101               	movlb	1	; () banked
 31580  00C8FE  517C               	movf	(_config+3)& (0+255),w,b
 31581  00C900  0100               	movlb	0	; () banked
 31582  00C902  23B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 31583  00C904                     l2420:
 31584                           
 31585                           ;motor.c: 482: };motor.c: 483: if(os.approach_direction==MOTOR_DIRECTION_CW)
 31586  00C904  0100               	movlb	0	; () banked
 31587  00C906  05E5               	decf	(_os+18)& (0+255),w,b	;volatile
 31588  00C908  A4D8               	btfss	status,2,c
 31589  00C90A  D024               	goto	l2421
 31590                           
 31591                           ; BSR set to: 0
 31592                           ;motor.c: 484: {;motor.c: 485: distance_ccw += config.overshoot_in_steps;
 31593  00C90C  0101               	movlb	1	; () banked
 31594  00C90E  517E               	movf	(_config+5)& (0+255),w,b
 31595  00C910  0100               	movlb	0	; () banked
 31596  00C912  27B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 31597  00C914  0101               	movlb	1	; () banked
 31598  00C916  517F               	movf	(_config+6)& (0+255),w,b
 31599  00C918  0100               	movlb	0	; () banked
 31600  00C91A  23B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 31601  00C91C  0E00               	movlw	0
 31602  00C91E  23B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 31603  00C920  0E00               	movlw	0
 31604  00C922  23B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 31605                           
 31606                           ;motor.c: 486: overhead_ccw += config.overshoot_in_steps;
 31607  00C924  0101               	movlb	1	; () banked
 31608  00C926  517E               	movf	(_config+5)& (0+255),w,b
 31609  00C928  0100               	movlb	0	; () banked
 31610  00C92A  27AE               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 31611  00C92C  0101               	movlb	1	; () banked
 31612  00C92E  517F               	movf	(_config+6)& (0+255),w,b
 31613  00C930  0100               	movlb	0	; () banked
 31614  00C932  23AF               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 31615  00C934  0E00               	movlw	0
 31616  00C936  23B0               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 31617  00C938  0E00               	movlw	0
 31618  00C93A  23B1               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 31619                           
 31620                           ;motor.c: 487: overhead_ccw += config.overshoot_cost_in_steps;
 31621  00C93C  0101               	movlb	1	; () banked
 31622  00C93E  5180               	movf	(_config+7)& (0+255),w,b
 31623  00C940  0100               	movlb	0	; () banked
 31624  00C942  27AE               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 31625  00C944  0101               	movlb	1	; () banked
 31626  00C946  5181               	movf	(_config+8)& (0+255),w,b
 31627  00C948  0100               	movlb	0	; () banked
 31628  00C94A  23AF               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 31629  00C94C  0E00               	movlw	0
 31630  00C94E  23B0               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 31631  00C950  0E00               	movlw	0
 31632  00C952  23B1               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 31633  00C954                     l2421:
 31634                           
 31635                           ; BSR set to: 0
 31636                           ;motor.c: 488: };motor.c: 491: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 31637                           
 31638                           ; BSR set to: 0
 31639  00C954  51AE               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 31640  00C956  25B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 31641  00C958  6FA2               	movwf	??_motor_go_to_steps_position& (0+255),b
 31642  00C95A  51AF               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 31643  00C95C  21B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 31644  00C95E  6FA3               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 31645  00C960  51B0               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 31646  00C962  21B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 31647  00C964  6FA4               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 31648  00C966  51B1               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 31649  00C968  21B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 31650  00C96A  6FA5               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 31651  00C96C  51AA               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 31652  00C96E  25B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 31653  00C970  6FA6               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 31654  00C972  51AB               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 31655  00C974  21B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 31656  00C976  6FA7               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 31657  00C978  51AC               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 31658  00C97A  21B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 31659  00C97C  6FA8               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 31660  00C97E  51AD               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 31661  00C980  21B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 31662  00C982  6FA9               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 31663  00C984  51A2               	movf	??_motor_go_to_steps_position& (0+255),w,b
 31664  00C986  5DA6               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 31665  00C988  51A3               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 31666  00C98A  59A7               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 31667  00C98C  51A4               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 31668  00C98E  59A8               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 31669  00C990  51A5               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 31670  00C992  59A9               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 31671  00C994  B0D8               	btfsc	status,0,c
 31672  00C996  D032               	goto	l2422
 31673                           
 31674                           ; BSR set to: 0
 31675                           ;motor.c: 492: {;motor.c: 493: if(os.approach_direction==MOTOR_DIRECTION_CW)
 31676  00C998  05E5               	decf	(_os+18)& (0+255),w,b	;volatile
 31677  00C99A  A4D8               	btfss	status,2,c
 31678  00C99C  D010               	goto	l2423
 31679                           
 31680                           ; BSR set to: 0
 31681                           ;motor.c: 494: {;motor.c: 496: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 31682  00C99E  C0B2  F097         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 31683  00C9A2  C0B3  F098         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 31684  00C9A6  C0B4  F099         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 31685  00C9AA  C0B5  F09A         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 31686  00C9AE  0E00               	movlw	0
 31687  00C9B0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31688  00C9B2  0E00               	movlw	0
 31689  00C9B4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31690  00C9B6  0E01               	movlw	1
 31691  00C9B8  EC1A  F088         	call	_motor_schedule_command
 31692                           
 31693                           ;motor.c: 497: }
 31694  00C9BC  0012               	return	
 31695  00C9BE                     l2423:
 31696                           
 31697                           ;motor.c: 498: else;motor.c: 499: {;motor.c: 501: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 31698  00C9BE  C0B2  F097         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 31699  00C9C2  C0B3  F098         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 31700  00C9C6  C0B4  F099         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 31701  00C9CA  C0B5  F09A         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 31702  00C9CE  0E00               	movlw	0
 31703  00C9D0  0100               	movlb	0	; () banked
 31704  00C9D2  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31705  00C9D4  0E00               	movlw	0
 31706  00C9D6  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31707  00C9D8  0E01               	movlw	1
 31708  00C9DA  EC1A  F088         	call	_motor_schedule_command
 31709                           
 31710                           ;motor.c: 502: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 31711  00C9DE  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31712  00C9E2  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31713  00C9E6  0100               	movlb	0	; () banked
 31714  00C9E8  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31715  00C9EA  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31716  00C9EC  0E00               	movlw	0
 31717  00C9EE  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31718  00C9F0  0E00               	movlw	0
 31719  00C9F2  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31720  00C9F4  0EFF               	movlw	255
 31721  00C9F6  EC1A  F088         	call	_motor_schedule_command
 31722                           
 31723                           ;motor.c: 503: };motor.c: 504: }
 31724  00C9FA  0012               	return	
 31725  00C9FC                     l2422:
 31726                           
 31727                           ;motor.c: 505: else;motor.c: 506: {;motor.c: 507: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 31728  00C9FC  0100               	movlb	0	; () banked
 31729  00C9FE  29E5               	incf	(_os+18)& (0+255),w,b	;volatile
 31730  00CA00  A4D8               	btfss	status,2,c
 31731  00CA02  D010               	goto	l2426
 31732                           
 31733                           ; BSR set to: 0
 31734                           ;motor.c: 508: {;motor.c: 510: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 31735  00CA04  C0B6  F097         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 31736  00CA08  C0B7  F098         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 31737  00CA0C  C0B8  F099         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 31738  00CA10  C0B9  F09A         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 31739  00CA14  0E00               	movlw	0
 31740  00CA16  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31741  00CA18  0E00               	movlw	0
 31742  00CA1A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31743  00CA1C  0EFF               	movlw	255
 31744  00CA1E  EC1A  F088         	call	_motor_schedule_command
 31745                           
 31746                           ;motor.c: 511: }
 31747  00CA22  0012               	return	
 31748  00CA24                     l2426:
 31749                           
 31750                           ;motor.c: 512: else;motor.c: 513: {;motor.c: 515: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 31751  00CA24  C0B6  F097         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 31752  00CA28  C0B7  F098         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 31753  00CA2C  C0B8  F099         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 31754  00CA30  C0B9  F09A         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 31755  00CA34  0E00               	movlw	0
 31756  00CA36  0100               	movlb	0	; () banked
 31757  00CA38  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31758  00CA3A  0E00               	movlw	0
 31759  00CA3C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31760  00CA3E  0EFF               	movlw	255
 31761  00CA40  EC1A  F088         	call	_motor_schedule_command
 31762                           
 31763                           ;motor.c: 516: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 31764  00CA44  C17E  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31765  00CA48  C17F  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31766  00CA4C  0100               	movlb	0	; () banked
 31767  00CA4E  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31768  00CA50  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31769  00CA52  0E00               	movlw	0
 31770  00CA54  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31771  00CA56  0E00               	movlw	0
 31772  00CA58  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31773  00CA5A  0E01               	movlw	1
 31774  00CA5C  EC1A  F088         	call	_motor_schedule_command
 31775  00CA60  0012               	return	
 31776  00CA62                     __end_of_motor_go_to_steps_position:
 31777                           	opt stack 0
 31778                           tosu	equ	0xFFF
 31779                           tosh	equ	0xFFE
 31780                           tosl	equ	0xFFD
 31781                           pclath	equ	0xFFA
 31782                           tblptru	equ	0xFF8
 31783                           tblptrh	equ	0xFF7
 31784                           tblptrl	equ	0xFF6
 31785                           tablat	equ	0xFF5
 31786                           prodh	equ	0xFF4
 31787                           prodl	equ	0xFF3
 31788                           intcon	equ	0xFF2
 31789                           indf0	equ	0xFEF
 31790                           postinc0	equ	0xFEE
 31791                           fsr0h	equ	0xFEA
 31792                           fsr0l	equ	0xFE9
 31793                           wreg	equ	0xFE8
 31794                           indf1	equ	0xFE7
 31795                           postdec1	equ	0xFE5
 31796                           plusw1	equ	0xFE3
 31797                           fsr1h	equ	0xFE2
 31798                           fsr1l	equ	0xFE1
 31799                           indf2	equ	0xFDF
 31800                           postinc2	equ	0xFDE
 31801                           postdec2	equ	0xFDD
 31802                           plusw2	equ	0xFDB
 31803                           fsr2h	equ	0xFDA
 31804                           fsr2l	equ	0xFD9
 31805                           status	equ	0xFD8
 31806                           
 31807 ;; *************** function __parse_command_long *****************
 31808 ;; Defined at:
 31809 ;;		line 409 in file "api.c"
 31810 ;; Parameters:    Size  Location     Type
 31811 ;;  data            2   74[BANK0 ] PTR unsigned char 
 31812 ;;		 -> ReceivedDataBuffer(64), 
 31813 ;;  out_buffer      2   76[BANK0 ] PTR unsigned char 
 31814 ;;		 -> ToSendDataBuffer(64), 
 31815 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 31816 ;;		 -> api_parse@out_idx(1), 
 31817 ;; Auto vars:     Size  Location     Type
 31818 ;;  length          1   80[BANK0 ] unsigned char 
 31819 ;; Return value:  Size  Location     Type
 31820 ;;                  1    wreg      unsigned char 
 31821 ;; Registers used:
 31822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31823 ;; Tracked objects:
 31824 ;;		On entry : 0/0
 31825 ;;		On exit  : 0/0
 31826 ;;		Unchanged: 0/0
 31827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31828 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31831 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31832 ;;Total ram usage:        7 bytes
 31833 ;; Hardware stack levels used:    1
 31834 ;; Hardware stack levels required when called:   13
 31835 ;; This function calls:
 31836 ;;		__parse_jump_steps
 31837 ;; This function is called by:
 31838 ;;		_api_parse
 31839 ;; This function uses a non-reentrant model
 31840 ;;
 31841                           
 31842                           	psect	text116
 31843  0124A8                     __ptext116:
 31844                           	opt stack 0
 31845  0124A8                     __parse_command_long:
 31846                           	opt stack 15
 31847                           
 31848                           ;api.c: 411: uint8_t length = 65;
 31849                           
 31850                           ;incstack = 0
 31851  0124A8  0E41               	movlw	65
 31852  0124AA  0100               	movlb	0	; () banked
 31853  0124AC  6FB0               	movwf	__parse_command_long@length& (0+255),b
 31854                           
 31855                           ;api.c: 413: switch(data[0])
 31856  0124AE  D011               	goto	l2252
 31857  0124B0                     
 31858                           ; BSR set to: 0
 31859                           ;api.c: 420: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 31860                           
 31861                           ; BSR set to: 0
 31862  0124B0  C0AA  F09E         	movff	__parse_command_long@data,__parse_jump_steps@data
 31863  0124B4  C0AB  F09F         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 31864  0124B8  C0AC  F0A0         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 31865  0124BC  C0AD  F0A1         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 31866  0124C0  C0AE  F0A2         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 31867  0124C4  C0AF  F0A3         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 31868  0124C8  EC7C  F073         	call	__parse_jump_steps	;wreg free
 31869  0124CC  0100               	movlb	0	; () banked
 31870  0124CE  6FB0               	movwf	__parse_command_long@length& (0+255),b
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;api.c: 422: }
 31874                           
 31875                           ;api.c: 421: break;
 31876  0124D0  D008               	goto	l2254
 31877  0124D2                     l2252:
 31878                           
 31879                           ; BSR set to: 0
 31880                           
 31881                           ; BSR set to: 0
 31882  0124D2  C0AA  FFD9         	movff	__parse_command_long@data,fsr2l
 31883  0124D6  C0AB  FFDA         	movff	__parse_command_long@data+1,fsr2h
 31884  0124DA  50DF               	movf	indf2,w,c
 31885                           
 31886                           ; Switch size 1, requested type "space"
 31887                           ; Number of cases is 1, Range of values is 144 to 144
 31888                           ; switch strategies available:
 31889                           ; Name         Instructions Cycles
 31890                           ; simple_byte            4     3 (average)
 31891                           ;	Chosen strategy is simple_byte
 31892  0124DC  0A90               	xorlw	144	; case 144
 31893  0124DE  B4D8               	btfsc	status,2,c
 31894  0124E0  D7E7               	goto	l2253
 31895  0124E2                     l2254:
 31896                           
 31897                           ; BSR set to: 0
 31898                           ;api.c: 426: return length;
 31899                           
 31900                           ; BSR set to: 0
 31901  0124E2  51B0               	movf	__parse_command_long@length& (0+255),w,b
 31902  0124E4  0012               	return	
 31903  0124E6                     __end_of__parse_command_long:
 31904                           	opt stack 0
 31905                           tosu	equ	0xFFF
 31906                           tosh	equ	0xFFE
 31907                           tosl	equ	0xFFD
 31908                           pclath	equ	0xFFA
 31909                           tblptru	equ	0xFF8
 31910                           tblptrh	equ	0xFF7
 31911                           tblptrl	equ	0xFF6
 31912                           tablat	equ	0xFF5
 31913                           prodh	equ	0xFF4
 31914                           prodl	equ	0xFF3
 31915                           intcon	equ	0xFF2
 31916                           indf0	equ	0xFEF
 31917                           postinc0	equ	0xFEE
 31918                           fsr0h	equ	0xFEA
 31919                           fsr0l	equ	0xFE9
 31920                           wreg	equ	0xFE8
 31921                           indf1	equ	0xFE7
 31922                           postdec1	equ	0xFE5
 31923                           plusw1	equ	0xFE3
 31924                           fsr1h	equ	0xFE2
 31925                           fsr1l	equ	0xFE1
 31926                           indf2	equ	0xFDF
 31927                           postinc2	equ	0xFDE
 31928                           postdec2	equ	0xFDD
 31929                           plusw2	equ	0xFDB
 31930                           fsr2h	equ	0xFDA
 31931                           fsr2l	equ	0xFD9
 31932                           status	equ	0xFD8
 31933                           
 31934 ;; *************** function __parse_jump_steps *****************
 31935 ;; Defined at:
 31936 ;;		line 452 in file "api.c"
 31937 ;; Parameters:    Size  Location     Type
 31938 ;;  data            2   62[BANK0 ] PTR unsigned char 
 31939 ;;		 -> ReceivedDataBuffer(64), 
 31940 ;;  out_buffer      2   64[BANK0 ] PTR unsigned char 
 31941 ;;		 -> ToSendDataBuffer(64), 
 31942 ;;  out_idx_ptr     2   66[BANK0 ] PTR unsigned char 
 31943 ;;		 -> api_parse@out_idx(1), 
 31944 ;; Auto vars:     Size  Location     Type
 31945 ;;  number_of_st    4   70[BANK0 ] long 
 31946 ;;  return_value    1   69[BANK0 ] unsigned char 
 31947 ;; Return value:  Size  Location     Type
 31948 ;;                  1    wreg      unsigned char 
 31949 ;; Registers used:
 31950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31951 ;; Tracked objects:
 31952 ;;		On entry : 0/0
 31953 ;;		On exit  : 0/0
 31954 ;;		Unchanged: 0/0
 31955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31956 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31957 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31959 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31960 ;;Total ram usage:       12 bytes
 31961 ;; Hardware stack levels used:    1
 31962 ;; Hardware stack levels required when called:   12
 31963 ;; This function calls:
 31964 ;;		_motor_schedule_command
 31965 ;; This function is called by:
 31966 ;;		__parse_command_long
 31967 ;; This function uses a non-reentrant model
 31968 ;;
 31969                           
 31970                           	psect	text117
 31971  00E6F8                     __ptext117:
 31972                           	opt stack 0
 31973  00E6F8                     __parse_jump_steps:
 31974                           	opt stack 15
 31975                           
 31976                           ;api.c: 456: uint8_t return_value;;api.c: 457: int32_t number_of_steps;;api.c: 459: numb
      +                          er_of_steps = data[1];
 31977                           
 31978                           ; BSR set to: 0
 31979                           ;incstack = 0
 31980  00E6F8  0100               	movlb	0	; () banked
 31981  00E6FA  EE20 F001          	lfsr	2,1
 31982  00E6FE  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 31983  00E700  26D9               	addwf	fsr2l,f,c
 31984  00E702  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 31985  00E704  22DA               	addwfc	fsr2h,f,c
 31986  00E706  50DF               	movf	indf2,w,c
 31987  00E708  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 31988  00E70A  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 31989  00E70C  6FA6               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 31990  00E70E  6BA7               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 31991  00E710  6BA8               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 31992  00E712  6BA9               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 31993                           
 31994                           ; BSR set to: 0
 31995                           ;api.c: 460: number_of_steps <<= 8;
 31996  00E714  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 31997  00E718  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 31998  00E71C  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 31999  00E720  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 32000                           
 32001                           ; BSR set to: 0
 32002                           ;api.c: 461: number_of_steps |= data[2];
 32003  00E722  EE20 F002          	lfsr	2,2
 32004  00E726  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32005  00E728  26D9               	addwf	fsr2l,f,c
 32006  00E72A  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32007  00E72C  22DA               	addwfc	fsr2h,f,c
 32008  00E72E  50DF               	movf	indf2,w,c
 32009  00E730  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32010  00E732  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32011  00E734  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 32012                           
 32013                           ;api.c: 462: number_of_steps <<= 8;
 32014  00E736  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 32015  00E73A  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 32016  00E73E  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 32017  00E742  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 32018                           
 32019                           ; BSR set to: 0
 32020                           ;api.c: 463: number_of_steps |= data[3];
 32021  00E744  EE20 F003          	lfsr	2,3
 32022  00E748  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32023  00E74A  26D9               	addwf	fsr2l,f,c
 32024  00E74C  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32025  00E74E  22DA               	addwfc	fsr2h,f,c
 32026  00E750  50DF               	movf	indf2,w,c
 32027  00E752  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32028  00E754  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32029  00E756  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 32030                           
 32031                           ; BSR set to: 0
 32032                           ;api.c: 464: number_of_steps <<= 8;
 32033  00E758  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 32034  00E75C  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 32035  00E760  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 32036  00E764  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 32037                           
 32038                           ;api.c: 465: number_of_steps |= data[4];
 32039  00E766  EE20 F004          	lfsr	2,4
 32040  00E76A  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32041  00E76C  26D9               	addwf	fsr2l,f,c
 32042  00E76E  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32043  00E770  22DA               	addwfc	fsr2h,f,c
 32044  00E772  50DF               	movf	indf2,w,c
 32045  00E774  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32046  00E776  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32047  00E778  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 32048                           
 32049                           ; BSR set to: 0
 32050                           ;api.c: 467: if(number_of_steps>0)
 32051  00E77A  BFA9               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 32052  00E77C  D017               	goto	l2258
 32053  00E77E  51A9               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 32054  00E780  11A8               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 32055  00E782  11A7               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 32056  00E784  E103               	bnz	u18650
 32057  00E786  05A6               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 32058  00E788  A0D8               	btfss	status,0,c
 32059  00E78A  D010               	goto	l2258
 32060  00E78C                     u18650:
 32061                           
 32062                           ; BSR set to: 0
 32063                           ;api.c: 468: {;api.c: 469: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 32064  00E78C  C0A6  F097         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 32065  00E790  C0A7  F098         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 32066  00E794  C0A8  F099         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 32067  00E798  C0A9  F09A         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 32068  00E79C  0E00               	movlw	0
 32069  00E79E  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32070  00E7A0  0E00               	movlw	0
 32071  00E7A2  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32072  00E7A4  0E01               	movlw	1
 32073  00E7A6  EC1A  F088         	call	_motor_schedule_command
 32074  00E7AA  D017               	goto	L58
 32075  00E7AC                     l2258:
 32076                           
 32077                           ; BSR set to: 0
 32078                           ;api.c: 471: else;api.c: 472: {;api.c: 473: number_of_steps = -number_of_steps;
 32079                           
 32080                           ; BSR set to: 0
 32081  00E7AC  1FA9               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 32082  00E7AE  1FA8               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 32083  00E7B0  1FA7               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 32084  00E7B2  6DA6               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 32085  00E7B4  0E00               	movlw	0
 32086  00E7B6  23A7               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 32087  00E7B8  23A8               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 32088  00E7BA  23A9               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 32089                           
 32090                           ; BSR set to: 0
 32091                           ;api.c: 474: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 32092  00E7BC  C0A6  F097         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 32093  00E7C0  C0A7  F098         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 32094  00E7C4  C0A8  F099         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 32095  00E7C8  C0A9  F09A         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 32096  00E7CC  0E00               	movlw	0
 32097  00E7CE  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32098  00E7D0  0E00               	movlw	0
 32099  00E7D2  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32100  00E7D4  0EFF               	movlw	255
 32101  00E7D6  EC1A  F088         	call	_motor_schedule_command
 32102  00E7DA                     L58:
 32103  00E7DA  0100               	movlb	0	; () banked
 32104  00E7DC  6FA5               	movwf	__parse_jump_steps@return_value& (0+255),b
 32105                           
 32106                           ; BSR set to: 0
 32107                           ;api.c: 475: };api.c: 478: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 32108                           
 32109                           ; BSR set to: 0
 32110  00E7DE  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32111  00E7E2  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32112  00E7E6  50DF               	movf	indf2,w,c
 32113  00E7E8  B4D8               	btfsc	status,2,c
 32114  00E7EA  D02B               	goto	l2260
 32115                           
 32116                           ; BSR set to: 0
 32117  00E7EC  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32118  00E7F0  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32119  00E7F4  0E3F               	movlw	63
 32120  00E7F6  60DF               	cpfslt	indf2,c
 32121  00E7F8  D024               	goto	l2260
 32122                           
 32123                           ; BSR set to: 0
 32124                           ;api.c: 479: {;api.c: 480: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 32125  00E7FA  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32126  00E7FE  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32127  00E802  CFDF F0A4          	movff	indf2,??__parse_jump_steps
 32128  00E806  0E01               	movlw	1
 32129  00E808  26DF               	addwf	indf2,f,c
 32130  00E80A  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32131  00E80C  0D01               	mullw	1
 32132  00E80E  50F3               	movf	prodl,w,c
 32133  00E810  25A0               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 32134  00E812  6ED9               	movwf	fsr2l,c
 32135  00E814  50F4               	movf	prodh,w,c
 32136  00E816  21A1               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 32137  00E818  6EDA               	movwf	fsr2h,c
 32138  00E81A  0E90               	movlw	144
 32139  00E81C  6EDF               	movwf	indf2,c
 32140                           
 32141                           ;api.c: 481: out_buffer[(*out_idx_ptr)++] = return_value;
 32142  00E81E  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32143  00E822  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32144  00E826  CFDF F0A4          	movff	indf2,??__parse_jump_steps
 32145  00E82A  0E01               	movlw	1
 32146  00E82C  26DF               	addwf	indf2,f,c
 32147  00E82E  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32148  00E830  0D01               	mullw	1
 32149  00E832  50F3               	movf	prodl,w,c
 32150  00E834  25A0               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 32151  00E836  6ED9               	movwf	fsr2l,c
 32152  00E838  50F4               	movf	prodh,w,c
 32153  00E83A  21A1               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 32154  00E83C  6EDA               	movwf	fsr2h,c
 32155  00E83E  C0A5  FFDF         	movff	__parse_jump_steps@return_value,indf2
 32156  00E842                     l2260:
 32157                           
 32158                           ; BSR set to: 0
 32159                           ;api.c: 482: };api.c: 484: return 5;
 32160                           
 32161                           ; BSR set to: 0
 32162  00E842  0E05               	movlw	5
 32163  00E844  0012               	return	
 32164  00E846                     __end_of__parse_jump_steps:
 32165                           	opt stack 0
 32166                           tosu	equ	0xFFF
 32167                           tosh	equ	0xFFE
 32168                           tosl	equ	0xFFD
 32169                           pclath	equ	0xFFA
 32170                           tblptru	equ	0xFF8
 32171                           tblptrh	equ	0xFF7
 32172                           tblptrl	equ	0xFF6
 32173                           tablat	equ	0xFF5
 32174                           prodh	equ	0xFF4
 32175                           prodl	equ	0xFF3
 32176                           intcon	equ	0xFF2
 32177                           indf0	equ	0xFEF
 32178                           postinc0	equ	0xFEE
 32179                           fsr0h	equ	0xFEA
 32180                           fsr0l	equ	0xFE9
 32181                           wreg	equ	0xFE8
 32182                           indf1	equ	0xFE7
 32183                           postdec1	equ	0xFE5
 32184                           plusw1	equ	0xFE3
 32185                           fsr1h	equ	0xFE2
 32186                           fsr1l	equ	0xFE1
 32187                           indf2	equ	0xFDF
 32188                           postinc2	equ	0xFDE
 32189                           postdec2	equ	0xFDD
 32190                           plusw2	equ	0xFDB
 32191                           fsr2h	equ	0xFDA
 32192                           fsr2l	equ	0xFD9
 32193                           status	equ	0xFD8
 32194                           
 32195 ;; *************** function _motor_schedule_command *****************
 32196 ;; Defined at:
 32197 ;;		line 99 in file "motor.c"
 32198 ;; Parameters:    Size  Location     Type
 32199 ;;  direction       1    wreg     enum E6622
 32200 ;;  distance_in_    4   55[BANK0 ] unsigned long 
 32201 ;;  speed           2   59[BANK0 ] unsigned int 
 32202 ;; Auto vars:     Size  Location     Type
 32203 ;;  direction       1   61[BANK0 ] enum E6622
 32204 ;; Return value:  Size  Location     Type
 32205 ;;                  1    wreg      unsigned char 
 32206 ;; Registers used:
 32207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32208 ;; Tracked objects:
 32209 ;;		On entry : 0/0
 32210 ;;		On exit  : 0/0
 32211 ;;		Unchanged: 0/0
 32212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32213 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32216 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32217 ;;Total ram usage:        7 bytes
 32218 ;; Hardware stack levels used:    1
 32219 ;; Hardware stack levels required when called:   11
 32220 ;; This function calls:
 32221 ;;		__motor_run
 32222 ;;		_motor_items_in_cue
 32223 ;; This function is called by:
 32224 ;;		__parse_command_short
 32225 ;;		__parse_jump_steps
 32226 ;;		_motor_go_to_steps_position
 32227 ;;		_motor_arc_move
 32228 ;;		_encoder_statemachine
 32229 ;; This function uses a non-reentrant model
 32230 ;;
 32231                           
 32232                           	psect	text118
 32233  011034                     __ptext118:
 32234                           	opt stack 0
 32235  011034                     _motor_schedule_command:
 32236                           	opt stack 18
 32237                           
 32238                           ; BSR set to: 0
 32239                           ;incstack = 0
 32240                           ;motor_schedule_command@direction stored from wreg
 32241  011034  0100               	movlb	0	; () banked
 32242  011036  6F9D               	movwf	motor_schedule_command@direction& (0+255),b
 32243                           
 32244                           ;motor.c: 101: if((motor_items_in_cue()==0) && (os.busy==0))
 32245  011038  EC5E  F095         	call	_motor_items_in_cue	;wreg free
 32246  01103C  0900               	iorlw	0
 32247  01103E  A4D8               	btfss	status,2,c
 32248  011040  D015               	goto	l2352
 32249  011042  0100               	movlb	0	; () banked
 32250  011044  51E1               	movf	(_os+14)& (0+255),w,b	;volatile
 32251  011046  A4D8               	btfss	status,2,c
 32252  011048  D011               	goto	l2352
 32253                           
 32254                           ; BSR set to: 0
 32255                           ;motor.c: 102: {;motor.c: 105: _motor_run(direction, distance_in_steps, speed);
 32256  01104A  C097  F060         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 32257  01104E  C098  F061         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 32258  011052  C099  F062         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 32259  011056  C09A  F063         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 32260  01105A  C09B  F064         	movff	motor_schedule_command@speed,__motor_run@speed
 32261  01105E  C09C  F065         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 32262  011062  519D               	movf	motor_schedule_command@direction& (0+255),w,b
 32263  011064  ECBC  F06D         	call	__motor_run
 32264                           
 32265                           ;motor.c: 107: return 1;
 32266  011068  0E01               	movlw	1
 32267  01106A  0012               	return	
 32268  01106C                     l2352:
 32269                           
 32270                           ;motor.c: 108: };motor.c: 109: if(motor_items_in_cue()==8-1)
 32271  01106C  EC5E  F095         	call	_motor_items_in_cue	;wreg free
 32272  011070  0A07               	xorlw	7
 32273  011072  A4D8               	btfss	status,2,c
 32274  011074  D002               	goto	l2354
 32275                           
 32276                           ;motor.c: 110: {;motor.c: 113: return 0;
 32277  011076  0E00               	movlw	0
 32278                           
 32279                           ;motor.c: 114: }
 32280  011078  0012               	return	
 32281  01107A                     l2354:
 32282                           
 32283                           ;motor.c: 115: else;motor.c: 116: {;motor.c: 118: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 32284  01107A  5022               	movf	_motor_cue_write_index,w,c
 32285  01107C  0D07               	mullw	7
 32286  01107E  0E00               	movlw	low _motor_command_cue
 32287  011080  24F3               	addwf	prodl,w,c
 32288  011082  6ED9               	movwf	fsr2l,c
 32289  011084  0E02               	movlw	high _motor_command_cue
 32290  011086  20F4               	addwfc	prodh,w,c
 32291  011088  6EDA               	movwf	fsr2h,c
 32292  01108A  C09D  FFDF         	movff	motor_schedule_command@direction,indf2
 32293                           
 32294                           ;motor.c: 119: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 32295  01108E  5022               	movf	_motor_cue_write_index,w,c
 32296  011090  0D07               	mullw	7
 32297  011092  0E01               	movlw	1
 32298  011094  26F3               	addwf	prodl,f,c
 32299  011096  0E00               	movlw	0
 32300  011098  22F4               	addwfc	prodh,f,c
 32301  01109A  0E00               	movlw	low _motor_command_cue
 32302  01109C  24F3               	addwf	prodl,w,c
 32303  01109E  6ED9               	movwf	fsr2l,c
 32304  0110A0  0E02               	movlw	high _motor_command_cue
 32305  0110A2  20F4               	addwfc	prodh,w,c
 32306  0110A4  6EDA               	movwf	fsr2h,c
 32307  0110A6  C097  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 32308  0110AA  C098  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 32309  0110AE  C099  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 32310  0110B2  C09A  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 32311                           
 32312                           ;motor.c: 120: motor_command_cue[motor_cue_write_index].speed = speed;
 32313  0110B6  5022               	movf	_motor_cue_write_index,w,c
 32314  0110B8  0D07               	mullw	7
 32315  0110BA  0E05               	movlw	5
 32316  0110BC  26F3               	addwf	prodl,f,c
 32317  0110BE  0E00               	movlw	0
 32318  0110C0  22F4               	addwfc	prodh,f,c
 32319  0110C2  0E00               	movlw	low _motor_command_cue
 32320  0110C4  24F3               	addwf	prodl,w,c
 32321  0110C6  6ED9               	movwf	fsr2l,c
 32322  0110C8  0E02               	movlw	high _motor_command_cue
 32323  0110CA  20F4               	addwfc	prodh,w,c
 32324  0110CC  6EDA               	movwf	fsr2h,c
 32325  0110CE  C09B  FFDE         	movff	motor_schedule_command@speed,postinc2
 32326  0110D2  C09C  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 32327                           
 32328                           ;motor.c: 122: ++motor_cue_write_index;
 32329  0110D6  2A22               	incf	_motor_cue_write_index,f,c
 32330                           
 32331                           ;motor.c: 124: return 1;
 32332  0110D8  0E01               	movlw	1
 32333  0110DA  0012               	return	
 32334  0110DC                     __end_of_motor_schedule_command:
 32335                           	opt stack 0
 32336                           tosu	equ	0xFFF
 32337                           tosh	equ	0xFFE
 32338                           tosl	equ	0xFFD
 32339                           pclath	equ	0xFFA
 32340                           tblptru	equ	0xFF8
 32341                           tblptrh	equ	0xFF7
 32342                           tblptrl	equ	0xFF6
 32343                           tablat	equ	0xFF5
 32344                           prodh	equ	0xFF4
 32345                           prodl	equ	0xFF3
 32346                           intcon	equ	0xFF2
 32347                           indf0	equ	0xFEF
 32348                           postinc0	equ	0xFEE
 32349                           fsr0h	equ	0xFEA
 32350                           fsr0l	equ	0xFE9
 32351                           wreg	equ	0xFE8
 32352                           indf1	equ	0xFE7
 32353                           postdec1	equ	0xFE5
 32354                           plusw1	equ	0xFE3
 32355                           fsr1h	equ	0xFE2
 32356                           fsr1l	equ	0xFE1
 32357                           indf2	equ	0xFDF
 32358                           postinc2	equ	0xFDE
 32359                           postdec2	equ	0xFDD
 32360                           plusw2	equ	0xFDB
 32361                           fsr2h	equ	0xFDA
 32362                           fsr2l	equ	0xFD9
 32363                           status	equ	0xFD8
 32364                           
 32365 ;; *************** function _motor_items_in_cue *****************
 32366 ;; Defined at:
 32367 ;;		line 94 in file "motor.c"
 32368 ;; Parameters:    Size  Location     Type
 32369 ;;		None
 32370 ;; Auto vars:     Size  Location     Type
 32371 ;;		None
 32372 ;; Return value:  Size  Location     Type
 32373 ;;                  1    wreg      unsigned char 
 32374 ;; Registers used:
 32375 ;;		wreg, status,2, status,0
 32376 ;; Tracked objects:
 32377 ;;		On entry : 0/0
 32378 ;;		On exit  : 0/0
 32379 ;;		Unchanged: 0/0
 32380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32385 ;;Total ram usage:        0 bytes
 32386 ;; Hardware stack levels used:    1
 32387 ;; Hardware stack levels required when called:   10
 32388 ;; This function calls:
 32389 ;;		Nothing
 32390 ;; This function is called by:
 32391 ;;		_motor_schedule_command
 32392 ;;		_motor_process_cue
 32393 ;; This function uses a non-reentrant model
 32394 ;;
 32395                           
 32396                           	psect	text119
 32397  012ABC                     __ptext119:
 32398                           	opt stack 0
 32399  012ABC                     _motor_items_in_cue:
 32400                           	opt stack 19
 32401                           
 32402                           ;motor.c: 96: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 32403                           
 32404                           ;incstack = 0
 32405  012ABC  5023               	movf	_motor_cue_read_index,w,c
 32406  012ABE  0800               	sublw	0
 32407  012AC0  2422               	addwf	_motor_cue_write_index,w,c
 32408  012AC2  0B07               	andlw	7
 32409  012AC4  0012               	return	
 32410  012AC6                     __end_of_motor_items_in_cue:
 32411                           	opt stack 0
 32412                           tosu	equ	0xFFF
 32413                           tosh	equ	0xFFE
 32414                           tosl	equ	0xFFD
 32415                           pclath	equ	0xFFA
 32416                           tblptru	equ	0xFF8
 32417                           tblptrh	equ	0xFF7
 32418                           tblptrl	equ	0xFF6
 32419                           tablat	equ	0xFF5
 32420                           prodh	equ	0xFF4
 32421                           prodl	equ	0xFF3
 32422                           intcon	equ	0xFF2
 32423                           indf0	equ	0xFEF
 32424                           postinc0	equ	0xFEE
 32425                           fsr0h	equ	0xFEA
 32426                           fsr0l	equ	0xFE9
 32427                           wreg	equ	0xFE8
 32428                           indf1	equ	0xFE7
 32429                           postdec1	equ	0xFE5
 32430                           plusw1	equ	0xFE3
 32431                           fsr1h	equ	0xFE2
 32432                           fsr1l	equ	0xFE1
 32433                           indf2	equ	0xFDF
 32434                           postinc2	equ	0xFDE
 32435                           postdec2	equ	0xFDD
 32436                           plusw2	equ	0xFDB
 32437                           fsr2h	equ	0xFDA
 32438                           fsr2l	equ	0xFD9
 32439                           status	equ	0xFD8
 32440                           
 32441 ;; *************** function __motor_run *****************
 32442 ;; Defined at:
 32443 ;;		line 177 in file "motor.c"
 32444 ;; Parameters:    Size  Location     Type
 32445 ;;  direction       1    wreg     enum E6622
 32446 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 32447 ;;  speed           2    4[BANK0 ] unsigned int 
 32448 ;; Auto vars:     Size  Location     Type
 32449 ;;  direction       1   10[BANK0 ] enum E6622
 32450 ;; Return value:  Size  Location     Type
 32451 ;;                  1    wreg      void 
 32452 ;; Registers used:
 32453 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32454 ;; Tracked objects:
 32455 ;;		On entry : 0/0
 32456 ;;		On exit  : 0/0
 32457 ;;		Unchanged: 0/0
 32458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32459 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32461 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32462 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32463 ;;Total ram usage:       11 bytes
 32464 ;; Hardware stack levels used:    1
 32465 ;; Hardware stack levels required when called:   10
 32466 ;; This function calls:
 32467 ;;		Nothing
 32468 ;; This function is called by:
 32469 ;;		_motor_schedule_command
 32470 ;;		_motor_process_cue
 32471 ;; This function uses a non-reentrant model
 32472 ;;
 32473                           
 32474                           	psect	text120
 32475  00DB78                     __ptext120:
 32476                           	opt stack 0
 32477  00DB78                     __motor_run:
 32478                           	opt stack 19
 32479                           
 32480                           ;incstack = 0
 32481                           ;__motor_run@direction stored from wreg
 32482  00DB78  0100               	movlb	0	; () banked
 32483  00DB7A  6F6A               	movwf	__motor_run@direction& (0+255),b
 32484                           
 32485                           ;motor.c: 180: motor_direction = direction;
 32486  00DB7C  C06A  F169         	movff	__motor_run@direction,_motor_direction
 32487                           
 32488                           ;motor.c: 183: if(distance_in_steps==0)
 32489  00DB80  0100               	movlb	0	; () banked
 32490  00DB82  5160               	movf	__motor_run@distance_in_steps& (0+255),w,b
 32491  00DB84  1161               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 32492  00DB86  1162               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 32493  00DB88  1163               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 32494  00DB8A  A4D8               	btfss	status,2,c
 32495  00DB8C  D00A               	goto	l2368
 32496                           
 32497                           ; BSR set to: 0
 32498                           ;motor.c: 184: {;motor.c: 186: motor_final_stepcount = 0xFFFFFF00;
 32499  00DB8E  0E00               	movlw	0
 32500  00DB90  0101               	movlb	1	; () banked
 32501  00DB92  6F3B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 32502  00DB94  0EFF               	movlw	255
 32503  00DB96  6F3C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 32504  00DB98  0EFF               	movlw	255
 32505  00DB9A  6F3D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 32506  00DB9C  0EFF               	movlw	255
 32507  00DB9E  6F3E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 32508                           
 32509                           ;motor.c: 187: }
 32510  00DBA0  D008               	goto	l2369
 32511  00DBA2                     l2368:
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;motor.c: 188: else;motor.c: 189: {;motor.c: 190: motor_final_stepcount = distance_in_st
      +                          eps;
 32515  00DBA2  C060  F13B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 32516  00DBA6  C061  F13C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 32517  00DBAA  C062  F13D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 32518  00DBAE  C063  F13E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 32519  00DBB2                     l2369:
 32520                           
 32521                           ;motor.c: 192: };motor.c: 195: if(speed==0)
 32522                           
 32523                           ; BSR set to: 0
 32524  00DBB2  0100               	movlb	0	; () banked
 32525  00DBB4  5164               	movf	__motor_run@speed& (0+255),w,b
 32526  00DBB6  1165               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 32527  00DBB8  A4D8               	btfss	status,2,c
 32528  00DBBA  D005               	goto	l2370
 32529                           
 32530                           ; BSR set to: 0
 32531                           ;motor.c: 196: {;motor.c: 197: motor_maximum_speed = config.maximum_speed;
 32532  00DBBC  C184  F15B         	movff	_config+11,_motor_maximum_speed
 32533  00DBC0  C185  F15C         	movff	_config+12,_motor_maximum_speed+1
 32534                           
 32535                           ;motor.c: 198: }
 32536  00DBC4  D004               	goto	l2371
 32537  00DBC6                     l2370:
 32538                           
 32539                           ; BSR set to: 0
 32540                           ;motor.c: 199: else;motor.c: 200: {;motor.c: 201: motor_maximum_speed = speed;
 32541  00DBC6  C064  F15B         	movff	__motor_run@speed,_motor_maximum_speed
 32542  00DBCA  C065  F15C         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 32543  00DBCE                     l2371:
 32544                           
 32545                           ; BSR set to: 0
 32546                           ;motor.c: 202: };motor.c: 205: motor_current_speed = 0;
 32547                           
 32548                           ; BSR set to: 0
 32549  00DBCE  0E00               	movlw	0
 32550  00DBD0  6FCB               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 32551  00DBD2  0E00               	movlw	0
 32552  00DBD4  6FCA               	movwf	_motor_current_speed& (0+255),b	;volatile
 32553                           
 32554                           ;motor.c: 206: motor_current_stepcount = 0;
 32555  00DBD6  0E00               	movlw	0
 32556  00DBD8  6E16               	movwf	_motor_current_stepcount,c	;volatile
 32557  00DBDA  0E00               	movlw	0
 32558  00DBDC  6E17               	movwf	_motor_current_stepcount+1,c	;volatile
 32559  00DBDE  0E00               	movlw	0
 32560  00DBE0  6E18               	movwf	_motor_current_stepcount+2,c	;volatile
 32561  00DBE2  0E00               	movlw	0
 32562  00DBE4  6E19               	movwf	_motor_current_stepcount+3,c	;volatile
 32563                           
 32564                           ; BSR set to: 0
 32565                           ;motor.c: 208: motor_next_speed_check = motor_steps_lookup[1];
 32566  00DBE6  0E63               	movlw	low (_motor_steps_lookup+2)
 32567  00DBE8  6EF6               	movwf	tblptrl,c
 32568  00DBEA  0E94               	movlw	high (_motor_steps_lookup+2)
 32569  00DBEC  6EF7               	movwf	tblptrh,c
 32570  00DBEE                     	if	0	;tblptru may be non-zero
 32571  00DBEE                     	endif
 32572  00DBEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 32573  00DBEE  0E00               	movlw	low (__mediumconst shr (0+16))
 32574  00DBF0  6EF8               	movwf	tblptru,c
 32575  00DBF2                     	endif
 32576  00DBF2  0009               	tblrd		*+
 32577  00DBF4  CFF5 F066          	movff	tablat,??__motor_run
 32578  00DBF8  0009               	tblrd		*+
 32579  00DBFA  CFF5 F067          	movff	tablat,??__motor_run+1
 32580  00DBFE  C066  F137         	movff	??__motor_run,_motor_next_speed_check	;volatile
 32581  00DC02  C067  F138         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 32582  00DC06  0101               	movlb	1	; () banked
 32583  00DC08  6B39               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 32584  00DC0A  6B3A               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 32585                           
 32586                           ; BSR set to: 1
 32587                           ;motor.c: 211: CCP1CONbits.CCP1M = 0b0000;
 32588  00DC0C  90BA               	bcf	4026,0,c	;volatile
 32589  00DC0E  92BA               	bcf	4026,1,c	;volatile
 32590  00DC10  94BA               	bcf	4026,2,c	;volatile
 32591  00DC12  96BA               	bcf	4026,3,c	;volatile
 32592                           
 32593                           ; BSR set to: 1
 32594                           ;motor.c: 214: LATBbits.LB0 = 0;
 32595  00DC14  908A               	bcf	3978,0,c	;volatile
 32596                           
 32597                           ; BSR set to: 1
 32598                           ;motor.c: 215: if(direction==MOTOR_DIRECTION_CCW)
 32599  00DC16  0100               	movlb	0	; () banked
 32600  00DC18  296A               	incf	__motor_run@direction& (0+255),w,b
 32601  00DC1A  A4D8               	btfss	status,2,c
 32602  00DC1C  D005               	goto	l2372
 32603                           
 32604                           ; BSR set to: 0
 32605                           ;motor.c: 216: {;motor.c: 217: if(config.inverse_direction)
 32606  00DC1E  0101               	movlb	1	; () banked
 32607  00DC20  517D               	movf	(_config+4)& (0+255),w,b
 32608  00DC22  B4D8               	btfsc	status,2,c
 32609  00DC24  D005               	goto	u17740
 32610  00DC26  D006               	goto	l2376
 32611  00DC28                     l2372:
 32612                           
 32613                           ;motor.c: 222: else;motor.c: 223: {;motor.c: 224: if(config.inverse_direction)
 32614                           
 32615                           ; BSR set to: 1
 32616  00DC28  0101               	movlb	1	; () banked
 32617  00DC2A  517D               	movf	(_config+4)& (0+255),w,b
 32618  00DC2C  B4D8               	btfsc	status,2,c
 32619  00DC2E  D002               	goto	l2376
 32620  00DC30                     u17740:
 32621                           
 32622                           ; BSR set to: 1
 32623                           ;motor.c: 225: LATBbits.LB2 = 0;
 32624  00DC30  948A               	bcf	3978,2,c	;volatile
 32625  00DC32  D001               	goto	l2377
 32626  00DC34                     l2376:
 32627                           
 32628                           ; BSR set to: 1
 32629                           ;motor.c: 226: else;motor.c: 227: LATBbits.LB2 = 1;
 32630  00DC34  848A               	bsf	3978,2,c	;volatile
 32631  00DC36                     l2377:
 32632                           
 32633                           ; BSR set to: 1
 32634                           ;motor.c: 228: };motor.c: 231: LATBbits.LB1 = 1;
 32635                           
 32636                           ; BSR set to: 1
 32637  00DC36  828A               	bsf	3978,1,c	;volatile
 32638                           
 32639                           ; BSR set to: 1
 32640                           ;motor.c: 234: ++motor_current_stepcount;
 32641  00DC38  0E01               	movlw	1
 32642  00DC3A  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 32643  00DC3C  0E00               	movlw	0
 32644  00DC3E  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 32645  00DC40  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 32646  00DC42  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 32647                           
 32648                           ;motor.c: 237: os.current_position_in_steps += motor_direction;
 32649  00DC44  5169               	movf	_motor_direction& (0+255),w,b
 32650  00DC46  0100               	movlb	0	; () banked
 32651  00DC48  6F66               	movwf	??__motor_run& (0+255),b
 32652  00DC4A  0E00               	movlw	0
 32653  00DC4C  BF66               	btfsc	??__motor_run& (0+255),7,b
 32654  00DC4E  0EFF               	movlw	255
 32655  00DC50  6F67               	movwf	(??__motor_run+1)& (0+255),b
 32656  00DC52  6F68               	movwf	(??__motor_run+2)& (0+255),b
 32657  00DC54  6F69               	movwf	(??__motor_run+3)& (0+255),b
 32658  00DC56  5166               	movf	??__motor_run& (0+255),w,b
 32659  00DC58  27DA               	addwf	(_os+7)& (0+255),f,b	;volatile
 32660  00DC5A  5167               	movf	(??__motor_run+1)& (0+255),w,b
 32661  00DC5C  23DB               	addwfc	(_os+8)& (0+255),f,b	;volatile
 32662  00DC5E  5168               	movf	(??__motor_run+2)& (0+255),w,b
 32663  00DC60  23DC               	addwfc	(_os+9)& (0+255),f,b	;volatile
 32664  00DC62  5169               	movf	(??__motor_run+3)& (0+255),w,b
 32665  00DC64  23DD               	addwfc	(_os+10)& (0+255),f,b	;volatile
 32666                           
 32667                           ;motor.c: 238: if(os.current_position_in_steps==config.full_circle_in_steps)
 32668  00DC66  0101               	movlb	1	; () banked
 32669  00DC68  5179               	movf	_config& (0+255),w,b
 32670  00DC6A  0100               	movlb	0	; () banked
 32671  00DC6C  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 32672  00DC6E  E118               	bnz	l18017
 32673  00DC70  0101               	movlb	1	; () banked
 32674  00DC72  517A               	movf	(_config+1)& (0+255),w,b
 32675  00DC74  0100               	movlb	0	; () banked
 32676  00DC76  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 32677  00DC78  E113               	bnz	l18017
 32678  00DC7A  0101               	movlb	1	; () banked
 32679  00DC7C  517B               	movf	(_config+2)& (0+255),w,b
 32680  00DC7E  0100               	movlb	0	; () banked
 32681  00DC80  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 32682  00DC82  E10E               	bnz	l18017
 32683  00DC84  0101               	movlb	1	; () banked
 32684  00DC86  517C               	movf	(_config+3)& (0+255),w,b
 32685  00DC88  0100               	movlb	0	; () banked
 32686  00DC8A  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 32687  00DC8C  A4D8               	btfss	status,2,c
 32688  00DC8E  D008               	goto	l2378
 32689                           
 32690                           ; BSR set to: 0
 32691                           ;motor.c: 239: os.current_position_in_steps = 0;
 32692  00DC90  0E00               	movlw	0
 32693  00DC92  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 32694  00DC94  0E00               	movlw	0
 32695  00DC96  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 32696  00DC98  0E00               	movlw	0
 32697  00DC9A  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 32698  00DC9C  0E00               	movlw	0
 32699  00DC9E  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 32700  00DCA0                     l2378:
 32701  00DCA0                     l18017:
 32702                           
 32703                           ; BSR set to: 0
 32704                           ;motor.c: 240: if(os.current_position_in_steps==0xFFFFFFFF)
 32705  00DCA0  29DA               	incf	(_os+7)& (0+255),w,b	;volatile
 32706  00DCA2  E11B               	bnz	l18021
 32707  00DCA4  29DB               	incf	(_os+8)& (0+255),w,b	;volatile
 32708  00DCA6  E119               	bnz	l18021
 32709  00DCA8  29DC               	incf	(_os+9)& (0+255),w,b	;volatile
 32710  00DCAA  E117               	bnz	l18021
 32711  00DCAC  29DD               	incf	(_os+10)& (0+255),w,b	;volatile
 32712  00DCAE  A4D8               	btfss	status,2,c
 32713  00DCB0  D014               	goto	l2379
 32714                           
 32715                           ; BSR set to: 0
 32716                           ;motor.c: 241: os.current_position_in_steps = (config.full_circle_in_steps-1);
 32717  00DCB2  0EFF               	movlw	255
 32718  00DCB4  0101               	movlb	1	; () banked
 32719  00DCB6  2579               	addwf	_config& (0+255),w,b
 32720  00DCB8  0100               	movlb	0	; () banked
 32721  00DCBA  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 32722  00DCBC  0EFF               	movlw	255
 32723  00DCBE  0101               	movlb	1	; () banked
 32724  00DCC0  217A               	addwfc	(_config+1)& (0+255),w,b
 32725  00DCC2  0100               	movlb	0	; () banked
 32726  00DCC4  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 32727  00DCC6  0EFF               	movlw	255
 32728  00DCC8  0101               	movlb	1	; () banked
 32729  00DCCA  217B               	addwfc	(_config+2)& (0+255),w,b
 32730  00DCCC  0100               	movlb	0	; () banked
 32731  00DCCE  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 32732  00DCD0  0EFF               	movlw	255
 32733  00DCD2  0101               	movlb	1	; () banked
 32734  00DCD4  217C               	addwfc	(_config+3)& (0+255),w,b
 32735  00DCD6  0100               	movlb	0	; () banked
 32736  00DCD8  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 32737  00DCDA                     l2379:
 32738  00DCDA                     l18021:
 32739                           
 32740                           ; BSR set to: 0
 32741                           ;motor.c: 244: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 32742  00DCDA  0E55               	movlw	85
 32743  00DCDC  6EA7               	movwf	4007,c	;volsfr
 32744                           
 32745                           ; BSR set to: 0
 32746  00DCDE  0EAA               	movlw	170
 32747  00DCE0  6EA7               	movwf	4007,c	;volsfr
 32748                           
 32749                           ; BSR set to: 0
 32750  00DCE2  010E               	movlb	14	; () banked
 32751  00DCE4  91BF               	bcf	191,0,b	;volatile
 32752                           
 32753                           ; BSR set to: 14
 32754                           ;motor.c: 245: RPOR4 = 0;
 32755  00DCE6  0E00               	movlw	0
 32756  00DCE8  6FC4               	movwf	196,b	;volatile
 32757                           
 32758                           ; BSR set to: 14
 32759                           ;motor.c: 246: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 32760  00DCEA  0E55               	movlw	85
 32761  00DCEC  6EA7               	movwf	4007,c	;volsfr
 32762                           
 32763                           ; BSR set to: 14
 32764  00DCEE  0EAA               	movlw	170
 32765  00DCF0  6EA7               	movwf	4007,c	;volsfr
 32766                           
 32767                           ; BSR set to: 14
 32768  00DCF2  81BF               	bsf	191,0,b	;volatile
 32769                           
 32770                           ; BSR set to: 14
 32771                           ;motor.c: 249: motor_mode = MOTOR_MODE_MANUAL;
 32772  00DCF4  0E00               	movlw	0
 32773  00DCF6  0101               	movlb	1	; () banked
 32774  00DCF8  6F6A               	movwf	_motor_mode& (0+255),b
 32775                           
 32776                           ; BSR set to: 1
 32777                           ;motor.c: 253: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 32778  00DCFA  0EFD               	movlw	low _motor_prescaler_lookup
 32779  00DCFC  0100               	movlb	0	; () banked
 32780  00DCFE  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32781  00DD00  6EF6               	movwf	tblptrl,c
 32782  00DD02  0E9B               	movlw	high _motor_prescaler_lookup
 32783  00DD04  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32784  00DD06  6EF7               	movwf	tblptrh,c
 32785  00DD08                     	if	1	;There are 3 active tblptr bytes
 32786  00DD08  6AF8               	clrf	tblptru,c
 32787  00DD0A  0E00               	movlw	low (__mediumconst shr (0+16))
 32788  00DD0C  22F8               	addwfc	tblptru,f,c
 32789  00DD0E                     	endif
 32790  00DD0E  0008               	tblrd		*
 32791  00DD10  CFF5 F066          	movff	tablat,??__motor_run
 32792  00DD14  50CA               	movf	4042,w,c	;volatile
 32793  00DD16  1966               	xorwf	??__motor_run& (0+255),w,b
 32794  00DD18  0BFC               	andlw	-4
 32795  00DD1A  1966               	xorwf	??__motor_run& (0+255),w,b
 32796  00DD1C  6ECA               	movwf	4042,c	;volatile
 32797                           
 32798                           ; BSR set to: 0
 32799                           ;motor.c: 255: PR2 = motor_period_lookup[motor_current_speed];
 32800  00DD1E  0E16               	movlw	low _motor_period_lookup
 32801  00DD20  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32802  00DD22  6EF6               	movwf	tblptrl,c
 32803  00DD24  0E9A               	movlw	high _motor_period_lookup
 32804  00DD26  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32805  00DD28  6EF7               	movwf	tblptrh,c
 32806  00DD2A                     	if	1	;There are 3 active tblptr bytes
 32807  00DD2A  6AF8               	clrf	tblptru,c
 32808  00DD2C  0E00               	movlw	low (__mediumconst shr (0+16))
 32809  00DD2E  22F8               	addwfc	tblptru,f,c
 32810  00DD30                     	endif
 32811  00DD30  0008               	tblrd		*
 32812  00DD32  CFF5 FFCB          	movff	tablat,4043	;volatile
 32813                           
 32814                           ; BSR set to: 0
 32815                           ;motor.c: 257: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 32816  00DD36  0E2F               	movlw	low _motor_postscaler_lookup
 32817  00DD38  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32818  00DD3A  6EF6               	movwf	tblptrl,c
 32819  00DD3C  0E98               	movlw	high _motor_postscaler_lookup
 32820  00DD3E  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32821  00DD40  6EF7               	movwf	tblptrh,c
 32822  00DD42                     	if	1	;There are 3 active tblptr bytes
 32823  00DD42  6AF8               	clrf	tblptru,c
 32824  00DD44  0E00               	movlw	low (__mediumconst shr (0+16))
 32825  00DD46  22F8               	addwfc	tblptru,f,c
 32826  00DD48                     	endif
 32827  00DD48  0008               	tblrd		*
 32828  00DD4A  CFF5 F066          	movff	tablat,??__motor_run
 32829  00DD4E  4766               	rlncf	??__motor_run& (0+255),f,b
 32830  00DD50  4766               	rlncf	??__motor_run& (0+255),f,b
 32831  00DD52  4766               	rlncf	??__motor_run& (0+255),f,b
 32832  00DD54  50CA               	movf	4042,w,c	;volatile
 32833  00DD56  1966               	xorwf	??__motor_run& (0+255),w,b
 32834  00DD58  0B87               	andlw	-121
 32835  00DD5A  1966               	xorwf	??__motor_run& (0+255),w,b
 32836  00DD5C  6ECA               	movwf	4042,c	;volatile
 32837                           
 32838                           ; BSR set to: 0
 32839                           ;motor.c: 259: CCPR1L = PR2>>1;
 32840  00DD5E  90D8               	bcf	status,0,c
 32841  00DD60  30CB               	rrcf	4043,w,c	;volatile
 32842  00DD62  6EBB               	movwf	4027,c	;volatile
 32843                           
 32844                           ; BSR set to: 0
 32845                           ;motor.c: 262: PIR1bits.TMR2IF = 0;
 32846  00DD64  929E               	bcf	3998,1,c	;volatile
 32847                           
 32848                           ; BSR set to: 0
 32849                           ;motor.c: 263: PIE1bits.TMR2IE = 1;
 32850  00DD66  829D               	bsf	3997,1,c	;volatile
 32851                           
 32852                           ; BSR set to: 0
 32853                           ;motor.c: 266: TMR2 = 0;
 32854  00DD68  0E00               	movlw	0
 32855  00DD6A  6ECC               	movwf	4044,c	;volatile
 32856                           
 32857                           ; BSR set to: 0
 32858                           ;motor.c: 267: T2CONbits.TMR2ON = 1;
 32859  00DD6C  84CA               	bsf	4042,2,c	;volatile
 32860                           
 32861                           ; BSR set to: 0
 32862                           ;motor.c: 270: os.busy = 1;
 32863  00DD6E  0E01               	movlw	1
 32864  00DD70  6FE1               	movwf	(_os+14)& (0+255),b	;volatile
 32865                           
 32866                           ; BSR set to: 0
 32867  00DD72  0012               	return		;funcret
 32868  00DD74                     __end_of__motor_run:
 32869                           	opt stack 0
 32870                           tosu	equ	0xFFF
 32871                           tosh	equ	0xFFE
 32872                           tosl	equ	0xFFD
 32873                           pclath	equ	0xFFA
 32874                           tblptru	equ	0xFF8
 32875                           tblptrh	equ	0xFF7
 32876                           tblptrl	equ	0xFF6
 32877                           tablat	equ	0xFF5
 32878                           prodh	equ	0xFF4
 32879                           prodl	equ	0xFF3
 32880                           intcon	equ	0xFF2
 32881                           indf0	equ	0xFEF
 32882                           postinc0	equ	0xFEE
 32883                           fsr0h	equ	0xFEA
 32884                           fsr0l	equ	0xFE9
 32885                           wreg	equ	0xFE8
 32886                           indf1	equ	0xFE7
 32887                           postdec1	equ	0xFE5
 32888                           plusw1	equ	0xFE3
 32889                           fsr1h	equ	0xFE2
 32890                           fsr1l	equ	0xFE1
 32891                           indf2	equ	0xFDF
 32892                           postinc2	equ	0xFDE
 32893                           postdec2	equ	0xFDD
 32894                           plusw2	equ	0xFDB
 32895                           fsr2h	equ	0xFDA
 32896                           fsr2l	equ	0xFD9
 32897                           status	equ	0xFD8
 32898                           
 32899 ;; *************** function _USBTransferOnePacket *****************
 32900 ;; Defined at:
 32901 ;;		line 995 in file "usb_device.c"
 32902 ;; Parameters:    Size  Location     Type
 32903 ;;  ep              1    wreg     unsigned char 
 32904 ;;  dir             1    0[BANK0 ] unsigned char 
 32905 ;;  data            2    1[BANK0 ] PTR unsigned char 
 32906 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 32907 ;;		 -> msd_cbw(31), NULL(0), 
 32908 ;;  len             1    3[BANK0 ] unsigned char 
 32909 ;; Auto vars:     Size  Location     Type
 32910 ;;  ep              1    8[BANK0 ] unsigned char 
 32911 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 32912 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 32913 ;; Return value:  Size  Location     Type
 32914 ;;                  2    0[BANK0 ] PTR void 
 32915 ;; Registers used:
 32916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32917 ;; Tracked objects:
 32918 ;;		On entry : 0/0
 32919 ;;		On exit  : 0/0
 32920 ;;		Unchanged: 0/0
 32921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32923 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32925 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32926 ;;Total ram usage:       11 bytes
 32927 ;; Hardware stack levels used:    1
 32928 ;; Hardware stack levels required when called:   10
 32929 ;; This function calls:
 32930 ;;		Nothing
 32931 ;; This function is called by:
 32932 ;;		_MSDTasks
 32933 ;;		_MSDProcessCommandMediaPresent
 32934 ;;		_MSDReadHandler
 32935 ;;		_MSDWriteHandler
 32936 ;;		_APP_DeviceCustomHIDTasks
 32937 ;; This function uses a non-reentrant model
 32938 ;;
 32939                           
 32940                           	psect	text121
 32941  00F9C0                     __ptext121:
 32942                           	opt stack 0
 32943  00F9C0                     _USBTransferOnePacket:
 32944                           	opt stack 18
 32945                           
 32946                           ; BSR set to: 0
 32947                           ;incstack = 0
 32948                           ;USBTransferOnePacket@ep stored from wreg
 32949  00F9C0  0100               	movlb	0	; () banked
 32950  00F9C2  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 32951                           
 32952                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 32953  00F9C4  0100               	movlb	0	; () banked
 32954  00F9C6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 32955  00F9C8  B4D8               	btfsc	status,2,c
 32956  00F9CA  D007               	goto	l184
 32957                           
 32958                           ; BSR set to: 0
 32959                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 32960  00F9CC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 32961  00F9CE  0D02               	mullw	2
 32962  00F9D0  0E10               	movlw	low _pBDTEntryIn
 32963  00F9D2  24F3               	addwf	prodl,w,c
 32964  00F9D4  6ED9               	movwf	fsr2l,c
 32965  00F9D6  0E00               	movlw	high _pBDTEntryIn
 32966  00F9D8  D006               	goto	L59
 32967  00F9DA                     l184:
 32968                           
 32969                           ; BSR set to: 0
 32970                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 32971                           
 32972                           ; BSR set to: 0
 32973  00F9DA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 32974  00F9DC  0D02               	mullw	2
 32975  00F9DE  0E31               	movlw	low _pBDTEntryOut
 32976  00F9E0  24F3               	addwf	prodl,w,c
 32977  00F9E2  6ED9               	movwf	fsr2l,c
 32978  00F9E4  0E01               	movlw	high _pBDTEntryOut
 32979  00F9E6                     L59:
 32980  00F9E6  20F4               	addwfc	prodh,w,c
 32981  00F9E8  6EDA               	movwf	fsr2h,c
 32982  00F9EA  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 32983  00F9EE  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 32984                           
 32985                           ; BSR set to: 0
 32986                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 32987                           
 32988                           ; BSR set to: 0
 32989  00F9F2  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 32990  00F9F4  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 32991  00F9F6  A4D8               	btfss	status,2,c
 32992  00F9F8  D005               	goto	l186
 32993                           
 32994                           ; BSR set to: 0
 32995                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 32996  00F9FA  0E00               	movlw	0
 32997  00F9FC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 32998  00F9FE  0E00               	movlw	0
 32999  00FA00  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 33000                           
 33001                           ; BSR set to: 0
 33002  00FA02  0012               	return	
 33003  00FA04                     l186:
 33004                           
 33005                           ; BSR set to: 0
 33006                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 33007                           
 33008                           ; BSR set to: 0
 33009  00FA04  EE20 F002          	lfsr	2,2
 33010  00FA08  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 33011  00FA0A  26D9               	addwf	fsr2l,f,c
 33012  00FA0C  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 33013  00FA0E  22DA               	addwfc	fsr2h,f,c
 33014  00FA10  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 33015  00FA14  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 33016                           
 33017                           ;usb_device.c: 1030: handle->CNT = len;
 33018  00FA18  EE20 F001          	lfsr	2,1
 33019  00FA1C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 33020  00FA1E  26D9               	addwf	fsr2l,f,c
 33021  00FA20  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 33022  00FA22  22DA               	addwfc	fsr2h,f,c
 33023  00FA24  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 33024                           
 33025                           ; BSR set to: 0
 33026                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 33027  00FA28  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 33028  00FA2C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 33029  00FA30  0E40               	movlw	64
 33030  00FA32  16DF               	andwf	indf2,f,c
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 33034  00FA34  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 33035  00FA38  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 33036  00FA3C  0E00               	movlw	0
 33037  00FA3E  86DB               	bsf	plusw2,3,c
 33038                           
 33039                           ; BSR set to: 0
 33040                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 33041  00FA40  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 33042  00FA44  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 33043  00FA48  0E00               	movlw	0
 33044  00FA4A  8EDB               	bsf	plusw2,7,c
 33045                           
 33046                           ; BSR set to: 0
 33047                           ;usb_device.c: 1036: if(dir != 0)
 33048  00FA4C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 33049  00FA4E  B4D8               	btfsc	status,2,c
 33050  00FA50  D018               	goto	l188
 33051                           
 33052                           ; BSR set to: 0
 33053                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 33054  00FA52  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33055  00FA54  0D02               	mullw	2
 33056  00FA56  0E10               	movlw	low _pBDTEntryIn
 33057  00FA58  24F3               	addwf	prodl,w,c
 33058  00FA5A  6ED9               	movwf	fsr2l,c
 33059  00FA5C  0E00               	movlw	high _pBDTEntryIn
 33060  00FA5E  20F4               	addwfc	prodh,w,c
 33061  00FA60  6EDA               	movwf	fsr2h,c
 33062  00FA62  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 33063  00FA66  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 33064  00FA6A  0E04               	movlw	4
 33065  00FA6C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 33066  00FA6E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 33067  00FA70  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 33068  00FA72  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 33069  00FA74  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33070  00FA76  0D02               	mullw	2
 33071  00FA78  0E10               	movlw	low _pBDTEntryIn
 33072  00FA7A  24F3               	addwf	prodl,w,c
 33073  00FA7C  6ED9               	movwf	fsr2l,c
 33074  00FA7E  0E00               	movlw	high _pBDTEntryIn
 33075  00FA80  D017               	goto	L60
 33076  00FA82                     l188:
 33077                           
 33078                           ; BSR set to: 0
 33079                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 33080                           
 33081                           ; BSR set to: 0
 33082  00FA82  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33083  00FA84  0D02               	mullw	2
 33084  00FA86  0E31               	movlw	low _pBDTEntryOut
 33085  00FA88  24F3               	addwf	prodl,w,c
 33086  00FA8A  6ED9               	movwf	fsr2l,c
 33087  00FA8C  0E01               	movlw	high _pBDTEntryOut
 33088  00FA8E  20F4               	addwfc	prodh,w,c
 33089  00FA90  6EDA               	movwf	fsr2h,c
 33090  00FA92  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 33091  00FA96  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 33092  00FA9A  0E04               	movlw	4
 33093  00FA9C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 33094  00FA9E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 33095  00FAA0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 33096  00FAA2  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 33097  00FAA4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33098  00FAA6  0D02               	mullw	2
 33099  00FAA8  0E31               	movlw	low _pBDTEntryOut
 33100  00FAAA  24F3               	addwf	prodl,w,c
 33101  00FAAC  6ED9               	movwf	fsr2l,c
 33102  00FAAE  0E01               	movlw	high _pBDTEntryOut
 33103  00FAB0                     L60:
 33104  00FAB0  20F4               	addwfc	prodh,w,c
 33105  00FAB2  6EDA               	movwf	fsr2h,c
 33106  00FAB4  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 33107  00FAB8  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 33108                           
 33109                           ; BSR set to: 0
 33110                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 33111                           
 33112                           ; BSR set to: 0
 33113  00FABC  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 33114  00FAC0  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 33115  00FAC4  0012               	return	
 33116  00FAC6                     __end_of_USBTransferOnePacket:
 33117                           	opt stack 0
 33118                           tosu	equ	0xFFF
 33119                           tosh	equ	0xFFE
 33120                           tosl	equ	0xFFD
 33121                           pclath	equ	0xFFA
 33122                           tblptru	equ	0xFF8
 33123                           tblptrh	equ	0xFF7
 33124                           tblptrl	equ	0xFF6
 33125                           tablat	equ	0xFF5
 33126                           prodh	equ	0xFF4
 33127                           prodl	equ	0xFF3
 33128                           intcon	equ	0xFF2
 33129                           indf0	equ	0xFEF
 33130                           postinc0	equ	0xFEE
 33131                           fsr0h	equ	0xFEA
 33132                           fsr0l	equ	0xFE9
 33133                           wreg	equ	0xFE8
 33134                           indf1	equ	0xFE7
 33135                           postdec1	equ	0xFE5
 33136                           plusw1	equ	0xFE3
 33137                           fsr1h	equ	0xFE2
 33138                           fsr1l	equ	0xFE1
 33139                           indf2	equ	0xFDF
 33140                           postinc2	equ	0xFDE
 33141                           postdec2	equ	0xFDD
 33142                           plusw2	equ	0xFDB
 33143                           fsr2h	equ	0xFDA
 33144                           fsr2l	equ	0xFD9
 33145                           status	equ	0xFD8
 33146                           
 33147 ;; *************** function _SYS_InterruptHigh *****************
 33148 ;; Defined at:
 33149 ;;		line 162 in file "system.c"
 33150 ;; Parameters:    Size  Location     Type
 33151 ;;		None
 33152 ;; Auto vars:     Size  Location     Type
 33153 ;;		None
 33154 ;; Return value:  Size  Location     Type
 33155 ;;                  1    wreg      void 
 33156 ;; Registers used:
 33157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33158 ;; Tracked objects:
 33159 ;;		On entry : 0/0
 33160 ;;		On exit  : 0/0
 33161 ;;		Unchanged: 0/0
 33162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33165 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33166 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33167 ;;Total ram usage:       14 bytes
 33168 ;; Hardware stack levels used:    1
 33169 ;; Hardware stack levels required when called:    9
 33170 ;; This function calls:
 33171 ;;		_USBDeviceTasks
 33172 ;;		_motor_isr
 33173 ;;		_tmr0_isr
 33174 ;; This function is called by:
 33175 ;;		Interrupt level 2
 33176 ;; This function uses a non-reentrant model
 33177 ;;
 33178                           
 33179                           	psect	intcode
 33180  009008                     __pintcode:
 33181                           	opt stack 0
 33182  009008                     _SYS_InterruptHigh:
 33183                           	opt stack 9
 33184                           
 33185                           ; BSR set to: 0
 33186                           ;incstack = 0
 33187  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33188  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 33189  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 33190  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 33191  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 33192  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 33193  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 33194  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 33195  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 33196  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 33197  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 33198  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 33199  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 33200  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 33201  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 33202                           
 33203                           ;system.c: 165: USBDeviceTasks();
 33204  009042  EC0C  F076         	call	_USBDeviceTasks	;wreg free
 33205                           
 33206                           ;system.c: 169: if(PIR1bits.TMR2IF)
 33207  009046  B29E               	btfsc	3998,1,c	;volatile
 33208                           
 33209                           ;system.c: 170: {;system.c: 171: motor_isr();
 33210  009048  ECAB  F05B         	call	_motor_isr	;wreg free
 33211                           
 33212                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 33213  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 33214                           
 33215                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 33216  00904E  EC91  F092         	call	_tmr0_isr	;wreg free
 33217  009052  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 33218  009056  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 33219  00905A  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 33220  00905E  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 33221  009062  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 33222  009066  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 33223  00906A  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 33224  00906E  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 33225  009072  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 33226  009076  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 33227  00907A  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 33228  00907E  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 33229  009082  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 33230  009086  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 33231  00908A  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33232  00908C  0011               	retfie		f
 33233  00908E                     __end_of_SYS_InterruptHigh:
 33234                           	opt stack 0
 33235                           tosu	equ	0xFFF
 33236                           tosh	equ	0xFFE
 33237                           tosl	equ	0xFFD
 33238                           pclatu	equ	0xFFB
 33239                           pclath	equ	0xFFA
 33240                           tblptru	equ	0xFF8
 33241                           tblptrh	equ	0xFF7
 33242                           tblptrl	equ	0xFF6
 33243                           tablat	equ	0xFF5
 33244                           prodh	equ	0xFF4
 33245                           prodl	equ	0xFF3
 33246                           intcon	equ	0xFF2
 33247                           indf0	equ	0xFEF
 33248                           postinc0	equ	0xFEE
 33249                           fsr0h	equ	0xFEA
 33250                           fsr0l	equ	0xFE9
 33251                           wreg	equ	0xFE8
 33252                           indf1	equ	0xFE7
 33253                           postdec1	equ	0xFE5
 33254                           plusw1	equ	0xFE3
 33255                           fsr1h	equ	0xFE2
 33256                           fsr1l	equ	0xFE1
 33257                           indf2	equ	0xFDF
 33258                           postinc2	equ	0xFDE
 33259                           postdec2	equ	0xFDD
 33260                           plusw2	equ	0xFDB
 33261                           fsr2h	equ	0xFDA
 33262                           fsr2l	equ	0xFD9
 33263                           status	equ	0xFD8
 33264                           
 33265 ;; *************** function _tmr0_isr *****************
 33266 ;; Defined at:
 33267 ;;		line 20 in file "os.c"
 33268 ;; Parameters:    Size  Location     Type
 33269 ;;		None
 33270 ;; Auto vars:     Size  Location     Type
 33271 ;;		None
 33272 ;; Return value:  Size  Location     Type
 33273 ;;                  1    wreg      void 
 33274 ;; Registers used:
 33275 ;;		wreg, status,2, status,0, cstack
 33276 ;; Tracked objects:
 33277 ;;		On entry : 0/0
 33278 ;;		On exit  : 0/0
 33279 ;;		Unchanged: 0/0
 33280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33285 ;;Total ram usage:        0 bytes
 33286 ;; Hardware stack levels used:    1
 33287 ;; Hardware stack levels required when called:    1
 33288 ;; This function calls:
 33289 ;;		_encoder_run
 33290 ;; This function is called by:
 33291 ;;		_SYS_InterruptHigh
 33292 ;; This function uses a non-reentrant model
 33293 ;;
 33294                           
 33295                           	psect	text123
 33296  012522                     __ptext123:
 33297                           	opt stack 0
 33298  012522                     _tmr0_isr:
 33299                           	opt stack 16
 33300                           
 33301                           ;os.c: 23: if(INTCONbits.T0IF)
 33302                           
 33303                           ;incstack = 0
 33304  012522  A4F2               	btfss	intcon,2,c	;volatile
 33305  012524  0012               	return	
 33306                           
 33307                           ;os.c: 24: {;os.c: 26: TMR0H = 0xFA;
 33308  012526  0EFA               	movlw	250
 33309  012528  6ED7               	movwf	4055,c	;volatile
 33310                           
 33311                           ;os.c: 27: TMR0L = 0x24;
 33312  01252A  0E24               	movlw	36
 33313  01252C  6ED6               	movwf	4054,c	;volatile
 33314                           
 33315                           ;os.c: 30: INTCONbits.T0IF = 0;
 33316  01252E  94F2               	bcf	intcon,2,c	;volatile
 33317                           
 33318                           ;os.c: 33: encoder_run();
 33319  012530  EC3F  F07A         	call	_encoder_run	;wreg free
 33320                           
 33321                           ;os.c: 36: ++os.subTimeSlot;
 33322  012534  0100               	movlb	0	; () banked
 33323  012536  2BD3               	incf	_os& (0+255),f,b	;volatile
 33324                           
 33325                           ; BSR set to: 0
 33326                           ;os.c: 37: if(os.subTimeSlot>=10)
 33327  012538  0E09               	movlw	9
 33328  01253A  65D3               	cpfsgt	_os& (0+255),b	;volatile
 33329  01253C  0012               	return	
 33330                           
 33331                           ; BSR set to: 0
 33332                           ;os.c: 38: {;os.c: 39: if(os.done)
 33333  01253E  51D5               	movf	(_os+2)& (0+255),w,b	;volatile
 33334  012540  B4D8               	btfsc	status,2,c
 33335  012542  0012               	return	
 33336                           
 33337                           ; BSR set to: 0
 33338                           ;os.c: 40: {;os.c: 41: ++os.timeSlot;
 33339  012544  2BD4               	incf	(_os+1)& (0+255),f,b	;volatile
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;os.c: 42: if(os.timeSlot==16)
 33343  012546  0E10               	movlw	16
 33344  012548  19D4               	xorwf	(_os+1)& (0+255),w,b	;volatile
 33345  01254A  A4D8               	btfss	status,2,c
 33346  01254C  D002               	goto	i2l1049
 33347                           
 33348                           ; BSR set to: 0
 33349                           ;os.c: 43: {;os.c: 44: os.timeSlot = 0;
 33350  01254E  0E00               	movlw	0
 33351  012550  6FD4               	movwf	(_os+1)& (0+255),b	;volatile
 33352  012552                     i2l1049:
 33353                           
 33354                           ; BSR set to: 0
 33355                           ;os.c: 45: };os.c: 46: os.subTimeSlot = 0;
 33356  012552  0E00               	movlw	0
 33357  012554  6FD3               	movwf	_os& (0+255),b	;volatile
 33358                           
 33359                           ;os.c: 47: os.done = 0;
 33360  012556  0E00               	movlw	0
 33361  012558  6FD5               	movwf	(_os+2)& (0+255),b	;volatile
 33362                           
 33363                           ; BSR set to: 0
 33364                           
 33365                           ; BSR set to: 0
 33366  01255A  0012               	return	
 33367  01255C                     __end_of_tmr0_isr:
 33368                           	opt stack 0
 33369                           tosu	equ	0xFFF
 33370                           tosh	equ	0xFFE
 33371                           tosl	equ	0xFFD
 33372                           pclatu	equ	0xFFB
 33373                           pclath	equ	0xFFA
 33374                           tblptru	equ	0xFF8
 33375                           tblptrh	equ	0xFF7
 33376                           tblptrl	equ	0xFF6
 33377                           tablat	equ	0xFF5
 33378                           prodh	equ	0xFF4
 33379                           prodl	equ	0xFF3
 33380                           intcon	equ	0xFF2
 33381                           indf0	equ	0xFEF
 33382                           postinc0	equ	0xFEE
 33383                           fsr0h	equ	0xFEA
 33384                           fsr0l	equ	0xFE9
 33385                           wreg	equ	0xFE8
 33386                           indf1	equ	0xFE7
 33387                           postdec1	equ	0xFE5
 33388                           plusw1	equ	0xFE3
 33389                           fsr1h	equ	0xFE2
 33390                           fsr1l	equ	0xFE1
 33391                           indf2	equ	0xFDF
 33392                           postinc2	equ	0xFDE
 33393                           postdec2	equ	0xFDD
 33394                           plusw2	equ	0xFDB
 33395                           fsr2h	equ	0xFDA
 33396                           fsr2l	equ	0xFD9
 33397                           status	equ	0xFD8
 33398                           
 33399 ;; *************** function _encoder_run *****************
 33400 ;; Defined at:
 33401 ;;		line 103 in file "encoder.c"
 33402 ;; Parameters:    Size  Location     Type
 33403 ;;		None
 33404 ;; Auto vars:     Size  Location     Type
 33405 ;;		None
 33406 ;; Return value:  Size  Location     Type
 33407 ;;                  1    wreg      void 
 33408 ;; Registers used:
 33409 ;;		wreg, status,2, status,0
 33410 ;; Tracked objects:
 33411 ;;		On entry : 0/0
 33412 ;;		On exit  : 0/0
 33413 ;;		Unchanged: 0/0
 33414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33419 ;;Total ram usage:        0 bytes
 33420 ;; Hardware stack levels used:    1
 33421 ;; This function calls:
 33422 ;;		Nothing
 33423 ;; This function is called by:
 33424 ;;		_tmr0_isr
 33425 ;; This function uses a non-reentrant model
 33426 ;;
 33427                           
 33428                           	psect	text124
 33429  00F47E                     __ptext124:
 33430                           	opt stack 0
 33431  00F47E                     _encoder_run:
 33432                           	opt stack 16
 33433                           
 33434                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 33435                           
 33436                           ;incstack = 0
 33437  00F47E  5084               	movf	3972,w,c	;volatile
 33438  00F480  0B07               	andlw	7
 33439  00F482  1821               	xorwf	_enc1,w,c
 33440  00F484  B4D8               	btfsc	status,2,c
 33441  00F486  D03A               	goto	i2l2522
 33442                           
 33443                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 33444  00F488  B084               	btfsc	3972,0,c	;volatile
 33445  00F48A  A484               	btfss	3972,2,c	;volatile
 33446  00F48C  D00F               	goto	i2l2525
 33447  00F48E  B021               	btfsc	_enc1,0,c
 33448  00F490  D00D               	goto	i2l2525
 33449                           
 33450                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 33451  00F492  0E7F               	movlw	127
 33452  00F494  0100               	movlb	0	; () banked
 33453  00F496  19D6               	xorwf	(_os+3)& (0+255),w,b	;volatile
 33454  00F498  B4D8               	btfsc	status,2,c
 33455  00F49A  D008               	goto	i2l2525
 33456                           
 33457                           ; BSR set to: 0
 33458                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 33459  00F49C  2BD6               	incf	(_os+3)& (0+255),f,b	;volatile
 33460                           
 33461                           ; BSR set to: 0
 33462                           ;encoder.c: 113: if(config.beep_duration)
 33463  00F49E  0101               	movlb	1	; () banked
 33464  00F4A0  518E               	movf	(_config+21)& (0+255),w,b
 33465  00F4A2  B4D8               	btfsc	status,2,c
 33466  00F4A4  D003               	goto	i2l2525
 33467                           
 33468                           ; BSR set to: 1
 33469                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 33470  00F4A6  8E8B               	bsf	3979,7,c	;volatile
 33471                           
 33472                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 33473  00F4A8  C18E  F0F9         	movff	_config+21,_os+38	;volatile
 33474  00F4AC                     i2l2525:
 33475                           
 33476                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 33477                           
 33478                           ; BSR set to: 1
 33479                           
 33480                           ; BSR set to: 1
 33481  00F4AC  B484               	btfsc	3972,2,c	;volatile
 33482  00F4AE  A084               	btfss	3972,0,c	;volatile
 33483  00F4B0  D010               	goto	i2l2528
 33484  00F4B2  B421               	btfsc	_enc1,2,c
 33485  00F4B4  D00E               	goto	i2l2528
 33486                           
 33487                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 33488  00F4B6  0100               	movlb	0	; () banked
 33489  00F4B8  51D6               	movf	(_os+3)& (0+255),w,b	;volatile
 33490  00F4BA  0A80               	xorlw	128
 33491  00F4BC  0FFF               	addlw	255
 33492  00F4BE  A0D8               	btfss	status,0,c
 33493  00F4C0  D008               	goto	i2l2528
 33494                           
 33495                           ; BSR set to: 0
 33496                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 33497  00F4C2  07D6               	decf	(_os+3)& (0+255),f,b	;volatile
 33498                           
 33499                           ; BSR set to: 0
 33500                           ;encoder.c: 126: if(config.beep_duration)
 33501  00F4C4  0101               	movlb	1	; () banked
 33502  00F4C6  518E               	movf	(_config+21)& (0+255),w,b
 33503  00F4C8  B4D8               	btfsc	status,2,c
 33504  00F4CA  D003               	goto	i2l2528
 33505                           
 33506                           ; BSR set to: 1
 33507                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 33508  00F4CC  8E8B               	bsf	3979,7,c	;volatile
 33509                           
 33510                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 33511  00F4CE  C18E  F0F9         	movff	_config+21,_os+38	;volatile
 33512  00F4D2                     i2l2528:
 33513                           
 33514                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 33515                           
 33516                           ; BSR set to: 1
 33517                           
 33518                           ; BSR set to: 1
 33519  00F4D2  B284               	btfsc	3972,1,c	;volatile
 33520  00F4D4  B221               	btfsc	_enc1,1,c
 33521  00F4D6  D00A               	goto	i2l2530
 33522                           
 33523                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 33524  00F4D8  0E01               	movlw	1
 33525  00F4DA  0100               	movlb	0	; () banked
 33526  00F4DC  6FD7               	movwf	(_os+4)& (0+255),b	;volatile
 33527                           
 33528                           ;encoder.c: 137: if(config.beep_duration)
 33529  00F4DE  0101               	movlb	1	; () banked
 33530  00F4E0  518E               	movf	(_config+21)& (0+255),w,b
 33531  00F4E2  B4D8               	btfsc	status,2,c
 33532  00F4E4  D003               	goto	i2l2530
 33533                           
 33534                           ; BSR set to: 1
 33535                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 33536  00F4E6  8E8B               	bsf	3979,7,c	;volatile
 33537                           
 33538                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 33539  00F4E8  C18E  F0F9         	movff	_config+21,_os+38	;volatile
 33540  00F4EC                     i2l2530:
 33541                           
 33542                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 33543                           
 33544                           ; BSR set to: 1
 33545  00F4EC  A284               	btfss	3972,1,c	;volatile
 33546  00F4EE  A221               	btfss	_enc1,1,c
 33547  00F4F0  D002               	goto	i2l2531
 33548                           
 33549                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 33550  00F4F2  0100               	movlb	0	; () banked
 33551  00F4F4  69D7               	setf	(_os+4)& (0+255),b	;volatile
 33552  00F4F6                     i2l2531:
 33553                           
 33554                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 33555                           
 33556                           ; BSR set to: 0
 33557  00F4F6  5084               	movf	3972,w,c	;volatile
 33558  00F4F8  0B07               	andlw	7
 33559  00F4FA  6E21               	movwf	_enc1,c
 33560  00F4FC                     i2l2522:
 33561                           
 33562                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 33563  00F4FC  5080               	movf	3968,w,c	;volatile
 33564  00F4FE  0B07               	andlw	7
 33565  00F500  1820               	xorwf	_enc2,w,c
 33566  00F502  B4D8               	btfsc	status,2,c
 33567  00F504  D03A               	goto	i2l2532
 33568                           
 33569                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 33570  00F506  B480               	btfsc	3968,2,c	;volatile
 33571  00F508  A080               	btfss	3968,0,c	;volatile
 33572  00F50A  D00F               	goto	i2l2535
 33573  00F50C  B420               	btfsc	_enc2,2,c
 33574  00F50E  D00D               	goto	i2l2535
 33575                           
 33576                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 33577  00F510  0E7F               	movlw	127
 33578  00F512  0100               	movlb	0	; () banked
 33579  00F514  19D8               	xorwf	(_os+5)& (0+255),w,b	;volatile
 33580  00F516  B4D8               	btfsc	status,2,c
 33581  00F518  D008               	goto	i2l2535
 33582                           
 33583                           ; BSR set to: 0
 33584                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 33585  00F51A  2BD8               	incf	(_os+5)& (0+255),f,b	;volatile
 33586                           
 33587                           ; BSR set to: 0
 33588                           ;encoder.c: 160: if(config.beep_duration)
 33589  00F51C  0101               	movlb	1	; () banked
 33590  00F51E  518E               	movf	(_config+21)& (0+255),w,b
 33591  00F520  B4D8               	btfsc	status,2,c
 33592  00F522  D003               	goto	i2l2535
 33593                           
 33594                           ; BSR set to: 1
 33595                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 33596  00F524  8E8B               	bsf	3979,7,c	;volatile
 33597                           
 33598                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 33599  00F526  C18E  F0F9         	movff	_config+21,_os+38	;volatile
 33600  00F52A                     i2l2535:
 33601                           
 33602                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 33603                           
 33604                           ; BSR set to: 1
 33605                           
 33606                           ; BSR set to: 1
 33607  00F52A  B080               	btfsc	3968,0,c	;volatile
 33608  00F52C  A480               	btfss	3968,2,c	;volatile
 33609  00F52E  D010               	goto	i2l2538
 33610  00F530  B020               	btfsc	_enc2,0,c
 33611  00F532  D00E               	goto	i2l2538
 33612                           
 33613                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 33614  00F534  0100               	movlb	0	; () banked
 33615  00F536  51D8               	movf	(_os+5)& (0+255),w,b	;volatile
 33616  00F538  0A80               	xorlw	128
 33617  00F53A  0FFF               	addlw	255
 33618  00F53C  A0D8               	btfss	status,0,c
 33619  00F53E  D008               	goto	i2l2538
 33620                           
 33621                           ; BSR set to: 0
 33622                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 33623  00F540  07D8               	decf	(_os+5)& (0+255),f,b	;volatile
 33624                           
 33625                           ; BSR set to: 0
 33626                           ;encoder.c: 173: if(config.beep_duration)
 33627  00F542  0101               	movlb	1	; () banked
 33628  00F544  518E               	movf	(_config+21)& (0+255),w,b
 33629  00F546  B4D8               	btfsc	status,2,c
 33630  00F548  D003               	goto	i2l2538
 33631                           
 33632                           ; BSR set to: 1
 33633                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 33634  00F54A  8E8B               	bsf	3979,7,c	;volatile
 33635                           
 33636                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 33637  00F54C  C18E  F0F9         	movff	_config+21,_os+38	;volatile
 33638  00F550                     i2l2538:
 33639                           
 33640                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 33641                           
 33642                           ; BSR set to: 1
 33643                           
 33644                           ; BSR set to: 1
 33645  00F550  B280               	btfsc	3968,1,c	;volatile
 33646  00F552  B220               	btfsc	_enc2,1,c
 33647  00F554  D00A               	goto	i2l2540
 33648                           
 33649                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 33650  00F556  0E01               	movlw	1
 33651  00F558  0100               	movlb	0	; () banked
 33652  00F55A  6FD9               	movwf	(_os+6)& (0+255),b	;volatile
 33653                           
 33654                           ;encoder.c: 184: if(config.beep_duration)
 33655  00F55C  0101               	movlb	1	; () banked
 33656  00F55E  518E               	movf	(_config+21)& (0+255),w,b
 33657  00F560  B4D8               	btfsc	status,2,c
 33658  00F562  D003               	goto	i2l2540
 33659                           
 33660                           ; BSR set to: 1
 33661                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 33662  00F564  8E8B               	bsf	3979,7,c	;volatile
 33663                           
 33664                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 33665  00F566  C18E  F0F9         	movff	_config+21,_os+38	;volatile
 33666  00F56A                     i2l2540:
 33667                           
 33668                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 33669                           
 33670                           ; BSR set to: 1
 33671  00F56A  A280               	btfss	3968,1,c	;volatile
 33672  00F56C  A220               	btfss	_enc2,1,c
 33673  00F56E  D002               	goto	i2l2541
 33674                           
 33675                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 33676  00F570  0100               	movlb	0	; () banked
 33677  00F572  69D9               	setf	(_os+6)& (0+255),b	;volatile
 33678  00F574                     i2l2541:
 33679                           
 33680                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 33681                           
 33682                           ; BSR set to: 0
 33683  00F574  5080               	movf	3968,w,c	;volatile
 33684  00F576  0B07               	andlw	7
 33685  00F578  6E20               	movwf	_enc2,c
 33686  00F57A                     i2l2532:
 33687                           
 33688                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 33689  00F57A  0100               	movlb	0	; () banked
 33690  00F57C  51F9               	movf	(_os+38)& (0+255),w,b	;volatile
 33691  00F57E  B4D8               	btfsc	status,2,c
 33692  00F580  0012               	return	
 33693                           
 33694                           ; BSR set to: 0
 33695                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 33696  00F582  07F9               	decf	(_os+38)& (0+255),f,b	;volatile
 33697                           
 33698                           ; BSR set to: 0
 33699                           ;encoder.c: 203: if(!os.beep_count)
 33700  00F584  51F9               	movf	(_os+38)& (0+255),w,b	;volatile
 33701  00F586  A4D8               	btfss	status,2,c
 33702  00F588  0012               	return	
 33703                           
 33704                           ; BSR set to: 0
 33705                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 33706  00F58A  9E8B               	bcf	3979,7,c	;volatile
 33707                           
 33708                           ; BSR set to: 0
 33709  00F58C  0012               	return	
 33710  00F58E                     __end_of_encoder_run:
 33711                           	opt stack 0
 33712                           tosu	equ	0xFFF
 33713                           tosh	equ	0xFFE
 33714                           tosl	equ	0xFFD
 33715                           pclatu	equ	0xFFB
 33716                           pclath	equ	0xFFA
 33717                           tblptru	equ	0xFF8
 33718                           tblptrh	equ	0xFF7
 33719                           tblptrl	equ	0xFF6
 33720                           tablat	equ	0xFF5
 33721                           prodh	equ	0xFF4
 33722                           prodl	equ	0xFF3
 33723                           intcon	equ	0xFF2
 33724                           indf0	equ	0xFEF
 33725                           postinc0	equ	0xFEE
 33726                           fsr0h	equ	0xFEA
 33727                           fsr0l	equ	0xFE9
 33728                           wreg	equ	0xFE8
 33729                           indf1	equ	0xFE7
 33730                           postdec1	equ	0xFE5
 33731                           plusw1	equ	0xFE3
 33732                           fsr1h	equ	0xFE2
 33733                           fsr1l	equ	0xFE1
 33734                           indf2	equ	0xFDF
 33735                           postinc2	equ	0xFDE
 33736                           postdec2	equ	0xFDD
 33737                           plusw2	equ	0xFDB
 33738                           fsr2h	equ	0xFDA
 33739                           fsr2l	equ	0xFD9
 33740                           status	equ	0xFD8
 33741                           
 33742 ;; *************** function _motor_isr *****************
 33743 ;; Defined at:
 33744 ;;		line 273 in file "motor.c"
 33745 ;; Parameters:    Size  Location     Type
 33746 ;;		None
 33747 ;; Auto vars:     Size  Location     Type
 33748 ;;  steps_remain    4   20[COMRAM] unsigned long 
 33749 ;;  steps_until_    2   18[COMRAM] unsigned int 
 33750 ;;  steps_until_    2   16[COMRAM] unsigned int 
 33751 ;; Return value:  Size  Location     Type
 33752 ;;                  1    wreg      void 
 33753 ;; Registers used:
 33754 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 33755 ;; Tracked objects:
 33756 ;;		On entry : 0/0
 33757 ;;		On exit  : 0/0
 33758 ;;		Unchanged: 0/0
 33759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33761 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33762 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33763 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33764 ;;Total ram usage:       24 bytes
 33765 ;; Hardware stack levels used:    1
 33766 ;; This function calls:
 33767 ;;		Nothing
 33768 ;; This function is called by:
 33769 ;;		_SYS_InterruptHigh
 33770 ;; This function uses a non-reentrant model
 33771 ;;
 33772                           
 33773                           	psect	text125
 33774  00B756                     __ptext125:
 33775                           	opt stack 0
 33776  00B756                     _motor_isr:
 33777                           	opt stack 17
 33778                           
 33779                           ;motor.c: 275: uint32_t steps_remaining;;motor.c: 276: uint16_t steps_until_standstill;;
      +                          motor.c: 277: uint16_t steps_until_standstill_if_accelerate;;motor.c: 280: PIR1bits.TMR2
      +                          IF = 0;
 33780                           
 33781                           ; BSR set to: 0
 33782                           ;incstack = 0
 33783  00B756  929E               	bcf	3998,1,c	;volatile
 33784                           
 33785                           ;motor.c: 282: if(motor_mode==MOTOR_MODE_MANUAL)
 33786  00B758  0101               	movlb	1	; () banked
 33787  00B75A  516A               	movf	_motor_mode& (0+255),w,b
 33788  00B75C  A4D8               	btfss	status,2,c
 33789  00B75E  D018               	goto	i2l2387
 33790                           
 33791                           ; BSR set to: 1
 33792                           ;motor.c: 283: {;motor.c: 285: if(LATBbits.LB1)
 33793  00B760  A28A               	btfss	3978,1,c	;volatile
 33794  00B762  D015               	goto	i2l2384
 33795                           
 33796                           ; BSR set to: 1
 33797                           ;motor.c: 286: {;motor.c: 288: LATBbits.LB1 = 0;
 33798  00B764  928A               	bcf	3978,1,c	;volatile
 33799                           
 33800                           ; BSR set to: 1
 33801                           ;motor.c: 291: if(motor_current_stepcount==motor_final_stepcount)
 33802  00B766  513B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 33803  00B768  1816               	xorwf	_motor_current_stepcount,w,c	;volatile
 33804  00B76A  E109               	bnz	i2u1565_41
 33805  00B76C  513C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 33806  00B76E  1817               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 33807  00B770  E106               	bnz	i2u1565_41
 33808  00B772  513D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 33809  00B774  1818               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 33810  00B776  E103               	bnz	i2u1565_41
 33811  00B778  513E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 33812  00B77A  1819               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 33813  00B77C  A4D8               	btfss	status,2,c
 33814  00B77E                     i2u1565_41:
 33815  00B77E  0012               	return	
 33816                           
 33817                           ; BSR set to: 1
 33818                           ;motor.c: 292: {;motor.c: 295: T2CONbits.TMR2ON = 0;
 33819  00B780  94CA               	bcf	4042,2,c	;volatile
 33820                           
 33821                           ;motor.c: 297: PIR1bits.TMR2IF = 0;
 33822  00B782  929E               	bcf	3998,1,c	;volatile
 33823                           
 33824                           ;motor.c: 298: PIE1bits.TMR2IE = 0;
 33825  00B784  929D               	bcf	3997,1,c	;volatile
 33826                           
 33827                           ; BSR set to: 1
 33828                           ;motor.c: 299: os.busy = 0;
 33829  00B786  0E00               	movlw	0
 33830  00B788  0100               	movlb	0	; () banked
 33831  00B78A  6FE1               	movwf	(_os+14)& (0+255),b	;volatile
 33832                           
 33833                           ; BSR set to: 0
 33834                           ;motor.c: 300: };motor.c: 303: return;
 33835                           
 33836                           ; BSR set to: 0
 33837  00B78C  0012               	return	
 33838  00B78E                     i2l2384:
 33839                           
 33840                           ; BSR set to: 1
 33841                           ;motor.c: 305: else;motor.c: 306: {;motor.c: 308: LATBbits.LB1 = 1;
 33842  00B78E  828A               	bsf	3978,1,c	;volatile
 33843  00B790                     i2l2387:
 33844                           
 33845                           ;motor.c: 309: };motor.c: 310: };motor.c: 312: ++motor_current_stepcount;
 33846                           
 33847                           ; BSR set to: 1
 33848                           
 33849                           ; BSR set to: 1
 33850  00B790  0E01               	movlw	1
 33851  00B792  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 33852  00B794  0E00               	movlw	0
 33853  00B796  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 33854  00B798  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 33855  00B79A  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 33856                           
 33857                           ;motor.c: 315: os.current_position_in_steps += motor_direction;
 33858  00B79C  0101               	movlb	1	; () banked
 33859  00B79E  5169               	movf	_motor_direction& (0+255),w,b
 33860  00B7A0  6E2E               	movwf	??_motor_isr& (0+255),c
 33861  00B7A2  0E00               	movlw	0
 33862  00B7A4  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 33863  00B7A6  0EFF               	movlw	255
 33864  00B7A8  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 33865  00B7AA  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 33866  00B7AC  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 33867  00B7AE  502E               	movf	??_motor_isr,w,c
 33868  00B7B0  0100               	movlb	0	; () banked
 33869  00B7B2  27DA               	addwf	(_os+7)& (0+255),f,b	;volatile
 33870  00B7B4  502F               	movf	??_motor_isr+1,w,c
 33871  00B7B6  23DB               	addwfc	(_os+8)& (0+255),f,b	;volatile
 33872  00B7B8  5030               	movf	??_motor_isr+2,w,c
 33873  00B7BA  23DC               	addwfc	(_os+9)& (0+255),f,b	;volatile
 33874  00B7BC  5031               	movf	??_motor_isr+3,w,c
 33875  00B7BE  23DD               	addwfc	(_os+10)& (0+255),f,b	;volatile
 33876                           
 33877                           ;motor.c: 316: if(os.current_position_in_steps==config.full_circle_in_steps)
 33878  00B7C0  0101               	movlb	1	; () banked
 33879  00B7C2  5179               	movf	_config& (0+255),w,b
 33880  00B7C4  0100               	movlb	0	; () banked
 33881  00B7C6  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 33882  00B7C8  E118               	bnz	i2l16127
 33883  00B7CA  0101               	movlb	1	; () banked
 33884  00B7CC  517A               	movf	(_config+1)& (0+255),w,b
 33885  00B7CE  0100               	movlb	0	; () banked
 33886  00B7D0  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 33887  00B7D2  E113               	bnz	i2l16127
 33888  00B7D4  0101               	movlb	1	; () banked
 33889  00B7D6  517B               	movf	(_config+2)& (0+255),w,b
 33890  00B7D8  0100               	movlb	0	; () banked
 33891  00B7DA  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 33892  00B7DC  E10E               	bnz	i2l16127
 33893  00B7DE  0101               	movlb	1	; () banked
 33894  00B7E0  517C               	movf	(_config+3)& (0+255),w,b
 33895  00B7E2  0100               	movlb	0	; () banked
 33896  00B7E4  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 33897  00B7E6  A4D8               	btfss	status,2,c
 33898  00B7E8  D008               	goto	i2l2388
 33899                           
 33900                           ; BSR set to: 0
 33901                           ;motor.c: 317: os.current_position_in_steps = 0;
 33902  00B7EA  0E00               	movlw	0
 33903  00B7EC  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 33904  00B7EE  0E00               	movlw	0
 33905  00B7F0  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 33906  00B7F2  0E00               	movlw	0
 33907  00B7F4  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 33908  00B7F6  0E00               	movlw	0
 33909  00B7F8  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 33910  00B7FA                     i2l2388:
 33911  00B7FA                     i2l16127:
 33912                           
 33913                           ; BSR set to: 0
 33914                           ;motor.c: 318: if(os.current_position_in_steps==0xFFFFFFFF)
 33915  00B7FA  29DA               	incf	(_os+7)& (0+255),w,b	;volatile
 33916  00B7FC  E11B               	bnz	i2l2389
 33917  00B7FE  29DB               	incf	(_os+8)& (0+255),w,b	;volatile
 33918  00B800  E119               	bnz	i2l2389
 33919  00B802  29DC               	incf	(_os+9)& (0+255),w,b	;volatile
 33920  00B804  E117               	bnz	i2l2389
 33921  00B806  29DD               	incf	(_os+10)& (0+255),w,b	;volatile
 33922  00B808  A4D8               	btfss	status,2,c
 33923  00B80A  D014               	goto	i2l2389
 33924                           
 33925                           ; BSR set to: 0
 33926                           ;motor.c: 319: os.current_position_in_steps = (config.full_circle_in_steps-1);
 33927  00B80C  0EFF               	movlw	255
 33928  00B80E  0101               	movlb	1	; () banked
 33929  00B810  2579               	addwf	_config& (0+255),w,b
 33930  00B812  0100               	movlb	0	; () banked
 33931  00B814  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 33932  00B816  0EFF               	movlw	255
 33933  00B818  0101               	movlb	1	; () banked
 33934  00B81A  217A               	addwfc	(_config+1)& (0+255),w,b
 33935  00B81C  0100               	movlb	0	; () banked
 33936  00B81E  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 33937  00B820  0EFF               	movlw	255
 33938  00B822  0101               	movlb	1	; () banked
 33939  00B824  217B               	addwfc	(_config+2)& (0+255),w,b
 33940  00B826  0100               	movlb	0	; () banked
 33941  00B828  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 33942  00B82A  0EFF               	movlw	255
 33943  00B82C  0101               	movlb	1	; () banked
 33944  00B82E  217C               	addwfc	(_config+3)& (0+255),w,b
 33945  00B830  0100               	movlb	0	; () banked
 33946  00B832  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 33947  00B834                     i2l2389:
 33948                           
 33949                           ; BSR set to: 0
 33950                           ;motor.c: 322: if(motor_current_stepcount==motor_next_speed_check)
 33951  00B834  0101               	movlb	1	; () banked
 33952  00B836  5137               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 33953  00B838  1816               	xorwf	_motor_current_stepcount,w,c	;volatile
 33954  00B83A  E109               	bnz	i2u1568_41
 33955  00B83C  5138               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 33956  00B83E  1817               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 33957  00B840  E106               	bnz	i2u1568_41
 33958  00B842  5139               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 33959  00B844  1818               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 33960  00B846  E103               	bnz	i2u1568_41
 33961  00B848  513A               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 33962  00B84A  1819               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 33963  00B84C  A4D8               	btfss	status,2,c
 33964  00B84E                     i2u1568_41:
 33965  00B84E  D215               	goto	i2l2402
 33966                           
 33967                           ; BSR set to: 1
 33968                           ;motor.c: 323: {;motor.c: 325: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 33969  00B850  C016  F02E         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 33970  00B854  C017  F02F         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 33971  00B858  C018  F030         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 33972  00B85C  C019  F031         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 33973  00B860  1E2E               	comf	??_motor_isr,f,c
 33974  00B862  1E2F               	comf	??_motor_isr+1,f,c
 33975  00B864  1E30               	comf	??_motor_isr+2,f,c
 33976  00B866  1E31               	comf	??_motor_isr+3,f,c
 33977  00B868  2A2E               	incf	??_motor_isr,f,c
 33978  00B86A  0E00               	movlw	0
 33979  00B86C  222F               	addwfc	??_motor_isr+1,f,c
 33980  00B86E  2230               	addwfc	??_motor_isr+2,f,c
 33981  00B870  2231               	addwfc	??_motor_isr+3,f,c
 33982  00B872  513B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 33983  00B874  242E               	addwf	??_motor_isr,w,c
 33984  00B876  6E42               	movwf	motor_isr@steps_remaining,c
 33985  00B878  513C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 33986  00B87A  202F               	addwfc	??_motor_isr+1,w,c
 33987  00B87C  6E43               	movwf	motor_isr@steps_remaining+1,c
 33988  00B87E  513D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 33989  00B880  2030               	addwfc	??_motor_isr+2,w,c
 33990  00B882  6E44               	movwf	motor_isr@steps_remaining+2,c
 33991  00B884  513E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 33992  00B886  2031               	addwfc	??_motor_isr+3,w,c
 33993  00B888  6E45               	movwf	motor_isr@steps_remaining+3,c
 33994                           
 33995                           ; BSR set to: 1
 33996                           ;motor.c: 326: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 33997  00B88A  90D8               	bcf	status,0,c
 33998  00B88C  0100               	movlb	0	; () banked
 33999  00B88E  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34000  00B890  6EF6               	movwf	tblptrl,c
 34001  00B892  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34002  00B894  6EF7               	movwf	tblptrh,c
 34003  00B896  0E61               	movlw	low _motor_steps_lookup
 34004  00B898  26F6               	addwf	tblptrl,f,c
 34005  00B89A  0E94               	movlw	high _motor_steps_lookup
 34006  00B89C  22F7               	addwfc	tblptrh,f,c
 34007  00B89E                     	if	1	;There are 3 active tblptr bytes
 34008  00B89E  6AF8               	clrf	tblptru,c
 34009  00B8A0  0E00               	movlw	low (__mediumconst shr (0+16))
 34010  00B8A2  22F8               	addwfc	tblptru,f,c
 34011  00B8A4                     	endif
 34012  00B8A4  0009               	tblrd		*+
 34013  00B8A6  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill
 34014  00B8AA  000A               	tblrd		*-
 34015  00B8AC  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill+1
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;motor.c: 327: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 34019  00B8B0  C0CA  F02E         	movff	_motor_current_speed,??_motor_isr	;volatile
 34020  00B8B4  C0CB  F02F         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 34021  00B8B8  90D8               	bcf	status,0,c
 34022  00B8BA  362E               	rlcf	??_motor_isr,f,c
 34023  00B8BC  362F               	rlcf	??_motor_isr+1,f,c
 34024  00B8BE  0E04               	movlw	4
 34025  00B8C0  262E               	addwf	??_motor_isr,f,c
 34026  00B8C2  0E00               	movlw	0
 34027  00B8C4  222F               	addwfc	??_motor_isr+1,f,c
 34028  00B8C6  0E61               	movlw	low _motor_steps_lookup
 34029  00B8C8  242E               	addwf	??_motor_isr,w,c
 34030  00B8CA  6EF6               	movwf	tblptrl,c
 34031  00B8CC  0E94               	movlw	high _motor_steps_lookup
 34032  00B8CE  202F               	addwfc	??_motor_isr+1,w,c
 34033  00B8D0  6EF7               	movwf	tblptrh,c
 34034  00B8D2                     	if	1	;There are 3 active tblptr bytes
 34035  00B8D2  6AF8               	clrf	tblptru,c
 34036  00B8D4  0E00               	movlw	low (__mediumconst shr (0+16))
 34037  00B8D6  22F8               	addwfc	tblptru,f,c
 34038  00B8D8                     	endif
 34039  00B8D8  0009               	tblrd		*+
 34040  00B8DA  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 34041  00B8DE  000A               	tblrd		*-
 34042  00B8E0  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 34043                           
 34044                           ;motor.c: 329: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 34045  00B8E4  51CA               	movf	_motor_current_speed& (0+255),w,b	;volatile
 34046  00B8E6  0101               	movlb	1	; () banked
 34047  00B8E8  5D5B               	subwf	_motor_maximum_speed& (0+255),w,b
 34048  00B8EA  0100               	movlb	0	; () banked
 34049  00B8EC  51CB               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34050  00B8EE  0101               	movlb	1	; () banked
 34051  00B8F0  595C               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 34052  00B8F2  A0D8               	btfss	status,0,c
 34053  00B8F4  D010               	goto	i2u1570_40
 34054                           
 34055                           ; BSR set to: 1
 34056  00B8F6  503E               	movf	motor_isr@steps_until_standstill,w,c
 34057  00B8F8  6E2E               	movwf	??_motor_isr& (0+255),c
 34058  00B8FA  503F               	movf	motor_isr@steps_until_standstill+1,w,c
 34059  00B8FC  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34060  00B8FE  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 34061  00B900  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 34062  00B902  5042               	movf	motor_isr@steps_remaining,w,c
 34063  00B904  5C2E               	subwf	??_motor_isr,w,c
 34064  00B906  5043               	movf	motor_isr@steps_remaining+1,w,c
 34065  00B908  582F               	subwfb	??_motor_isr+1,w,c
 34066  00B90A  5044               	movf	motor_isr@steps_remaining+2,w,c
 34067  00B90C  5830               	subwfb	??_motor_isr+2,w,c
 34068  00B90E  5045               	movf	motor_isr@steps_remaining+3,w,c
 34069  00B910  5831               	subwfb	??_motor_isr+3,w,c
 34070  00B912  A0D8               	btfss	status,0,c
 34071  00B914  D0E3               	goto	i2l2391
 34072  00B916                     i2u1570_40:
 34073                           
 34074                           ; BSR set to: 1
 34075                           ;motor.c: 330: {;motor.c: 332: if(motor_current_speed>0)
 34076                           
 34077                           ; BSR set to: 1
 34078  00B916  0100               	movlb	0	; () banked
 34079  00B918  51CA               	movf	_motor_current_speed& (0+255),w,b	;volatile
 34080  00B91A  11CB               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34081  00B91C  B4D8               	btfsc	status,2,c
 34082  00B91E  D003               	goto	i2l2394
 34083                           
 34084                           ; BSR set to: 0
 34085                           ;motor.c: 333: {;motor.c: 334: --motor_current_speed;
 34086  00B920  07CA               	decf	_motor_current_speed& (0+255),f,b	;volatile
 34087  00B922  A0D8               	btfss	status,0,c
 34088  00B924  07CB               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 34089  00B926                     i2l2394:
 34090                           
 34091                           ; BSR set to: 0
 34092                           ;motor.c: 335: };motor.c: 338: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 34093                           
 34094                           ; BSR set to: 0
 34095  00B926  0101               	movlb	1	; () banked
 34096  00B928  056A               	decf	_motor_mode& (0+255),w,b
 34097  00B92A  A4D8               	btfss	status,2,c
 34098  00B92C  D026               	goto	i2l2395
 34099                           
 34100                           ; BSR set to: 1
 34101  00B92E  0E2F               	movlw	low _motor_postscaler_lookup
 34102  00B930  0100               	movlb	0	; () banked
 34103  00B932  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34104  00B934  6EF6               	movwf	tblptrl,c
 34105  00B936  0E98               	movlw	high _motor_postscaler_lookup
 34106  00B938  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34107  00B93A  6EF7               	movwf	tblptrh,c
 34108  00B93C                     	if	1	;There are 3 active tblptr bytes
 34109  00B93C  6AF8               	clrf	tblptru,c
 34110  00B93E  0E00               	movlw	low (__mediumconst shr (0+16))
 34111  00B940  22F8               	addwfc	tblptru,f,c
 34112  00B942                     	endif
 34113  00B942  0008               	tblrd		*
 34114  00B944  50F5               	movf	tablat,w,c
 34115  00B946  0900               	iorlw	0
 34116  00B948  B4D8               	btfsc	status,2,c
 34117  00B94A  D017               	goto	i2l2395
 34118                           
 34119                           ; BSR set to: 0
 34120                           ;motor.c: 339: {;motor.c: 341: motor_mode = MOTOR_MODE_MANUAL;
 34121  00B94C  0E00               	movlw	0
 34122  00B94E  0101               	movlb	1	; () banked
 34123  00B950  6F6A               	movwf	_motor_mode& (0+255),b
 34124                           
 34125                           ; BSR set to: 1
 34126                           ;motor.c: 344: LATBbits.LB1 = 1;
 34127  00B952  828A               	bsf	3978,1,c	;volatile
 34128                           
 34129                           ;motor.c: 345: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 34130  00B954  0E55               	movlw	85
 34131  00B956  6EA7               	movwf	4007,c	;volsfr
 34132  00B958  0EAA               	movlw	170
 34133  00B95A  6EA7               	movwf	4007,c	;volsfr
 34134                           
 34135                           ; BSR set to: 1
 34136  00B95C  010E               	movlb	14	; () banked
 34137  00B95E  91BF               	bcf	191,0,b	;volatile
 34138                           
 34139                           ;motor.c: 346: RPOR4 = 0;
 34140  00B960  0E00               	movlw	0
 34141  00B962  6FC4               	movwf	196,b	;volatile
 34142                           
 34143                           ;motor.c: 347: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 34144  00B964  0E55               	movlw	85
 34145  00B966  6EA7               	movwf	4007,c	;volsfr
 34146  00B968  0EAA               	movlw	170
 34147  00B96A  6EA7               	movwf	4007,c	;volsfr
 34148                           
 34149                           ; BSR set to: 14
 34150  00B96C  81BF               	bsf	191,0,b	;volatile
 34151                           
 34152                           ;motor.c: 350: TMR2 = 0;
 34153  00B96E  0E00               	movlw	0
 34154  00B970  6ECC               	movwf	4044,c	;volatile
 34155                           
 34156                           ; BSR set to: 14
 34157                           ;motor.c: 353: CCP1CONbits.CCP1M = 0b0000;
 34158  00B972  90BA               	bcf	4026,0,c	;volatile
 34159  00B974  92BA               	bcf	4026,1,c	;volatile
 34160  00B976  94BA               	bcf	4026,2,c	;volatile
 34161  00B978  96BA               	bcf	4026,3,c	;volatile
 34162  00B97A                     i2l2395:
 34163                           
 34164                           ;motor.c: 354: };motor.c: 358: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 34165                           
 34166                           ; BSR set to: 14
 34167  00B97A  0EFD               	movlw	low _motor_prescaler_lookup
 34168  00B97C  0100               	movlb	0	; () banked
 34169  00B97E  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34170  00B980  6EF6               	movwf	tblptrl,c
 34171  00B982  0E9B               	movlw	high _motor_prescaler_lookup
 34172  00B984  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34173  00B986  6EF7               	movwf	tblptrh,c
 34174  00B988                     	if	1	;There are 3 active tblptr bytes
 34175  00B988  6AF8               	clrf	tblptru,c
 34176  00B98A  0E00               	movlw	low (__mediumconst shr (0+16))
 34177  00B98C  22F8               	addwfc	tblptru,f,c
 34178  00B98E                     	endif
 34179  00B98E  0008               	tblrd		*
 34180  00B990  CFF5 F02E          	movff	tablat,??_motor_isr
 34181  00B994  50CA               	movf	4042,w,c	;volatile
 34182  00B996  182E               	xorwf	??_motor_isr,w,c
 34183  00B998  0BFC               	andlw	-4
 34184  00B99A  182E               	xorwf	??_motor_isr,w,c
 34185  00B99C  6ECA               	movwf	4042,c	;volatile
 34186                           
 34187                           ; BSR set to: 0
 34188                           ;motor.c: 360: PR2 = motor_period_lookup[motor_current_speed];
 34189  00B99E  0E16               	movlw	low _motor_period_lookup
 34190  00B9A0  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34191  00B9A2  6EF6               	movwf	tblptrl,c
 34192  00B9A4  0E9A               	movlw	high _motor_period_lookup
 34193  00B9A6  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34194  00B9A8  6EF7               	movwf	tblptrh,c
 34195  00B9AA                     	if	1	;There are 3 active tblptr bytes
 34196  00B9AA  6AF8               	clrf	tblptru,c
 34197  00B9AC  0E00               	movlw	low (__mediumconst shr (0+16))
 34198  00B9AE  22F8               	addwfc	tblptru,f,c
 34199  00B9B0                     	endif
 34200  00B9B0  0008               	tblrd		*
 34201  00B9B2  CFF5 FFCB          	movff	tablat,4043	;volatile
 34202                           
 34203                           ; BSR set to: 0
 34204                           ;motor.c: 362: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 34205  00B9B6  0E2F               	movlw	low _motor_postscaler_lookup
 34206  00B9B8  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34207  00B9BA  6EF6               	movwf	tblptrl,c
 34208  00B9BC  0E98               	movlw	high _motor_postscaler_lookup
 34209  00B9BE  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34210  00B9C0  6EF7               	movwf	tblptrh,c
 34211  00B9C2                     	if	1	;There are 3 active tblptr bytes
 34212  00B9C2  6AF8               	clrf	tblptru,c
 34213  00B9C4  0E00               	movlw	low (__mediumconst shr (0+16))
 34214  00B9C6  22F8               	addwfc	tblptru,f,c
 34215  00B9C8                     	endif
 34216  00B9C8  0008               	tblrd		*
 34217  00B9CA  CFF5 F02E          	movff	tablat,??_motor_isr
 34218  00B9CE  462E               	rlncf	??_motor_isr,f,c
 34219  00B9D0  462E               	rlncf	??_motor_isr,f,c
 34220  00B9D2  462E               	rlncf	??_motor_isr,f,c
 34221  00B9D4  50CA               	movf	4042,w,c	;volatile
 34222  00B9D6  182E               	xorwf	??_motor_isr,w,c
 34223  00B9D8  0B87               	andlw	-121
 34224  00B9DA  182E               	xorwf	??_motor_isr,w,c
 34225  00B9DC  6ECA               	movwf	4042,c	;volatile
 34226                           
 34227                           ; BSR set to: 0
 34228                           ;motor.c: 364: CCPR1L = PR2>>1;
 34229  00B9DE  90D8               	bcf	status,0,c
 34230  00B9E0  30CB               	rrcf	4043,w,c	;volatile
 34231  00B9E2  6EBB               	movwf	4027,c	;volatile
 34232                           
 34233                           ; BSR set to: 0
 34234                           ;motor.c: 367: if(motor_current_speed>0)
 34235  00B9E4  51CA               	movf	_motor_current_speed& (0+255),w,b	;volatile
 34236  00B9E6  11CB               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34237  00B9E8  B4D8               	btfsc	status,2,c
 34238  00B9EA  D058               	goto	i2l2396
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;motor.c: 368: {;motor.c: 369: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 34242  00B9EC  0EFE               	movlw	254
 34243  00B9EE  6E2E               	movwf	??_motor_isr& (0+255),c
 34244  00B9F0  0EFF               	movlw	255
 34245  00B9F2  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34246  00B9F4  C0CA  F030         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 34247  00B9F8  C0CB  F031         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 34248  00B9FC  90D8               	bcf	status,0,c
 34249  00B9FE  3630               	rlcf	??_motor_isr+2,f,c
 34250  00BA00  3631               	rlcf	??_motor_isr+3,f,c
 34251  00BA02  502E               	movf	??_motor_isr,w,c
 34252  00BA04  2630               	addwf	??_motor_isr+2,f,c
 34253  00BA06  502F               	movf	??_motor_isr+1,w,c
 34254  00BA08  2231               	addwfc	??_motor_isr+3,f,c
 34255  00BA0A  0E61               	movlw	low _motor_steps_lookup
 34256  00BA0C  2430               	addwf	??_motor_isr+2,w,c
 34257  00BA0E  6EF6               	movwf	tblptrl,c
 34258  00BA10  0E94               	movlw	high _motor_steps_lookup
 34259  00BA12  2031               	addwfc	??_motor_isr+3,w,c
 34260  00BA14  6EF7               	movwf	tblptrh,c
 34261  00BA16                     	if	1	;There are 3 active tblptr bytes
 34262  00BA16  6AF8               	clrf	tblptru,c
 34263  00BA18  0E00               	movlw	low (__mediumconst shr (0+16))
 34264  00BA1A  22F8               	addwfc	tblptru,f,c
 34265  00BA1C                     	endif
 34266  00BA1C  0009               	tblrd		*+
 34267  00BA1E  CFF5 F032          	movff	tablat,??_motor_isr+4
 34268  00BA22  0009               	tblrd		*+
 34269  00BA24  CFF5 F033          	movff	tablat,??_motor_isr+5
 34270  00BA28  5032               	movf	??_motor_isr+4,w,c
 34271  00BA2A  6E34               	movwf	(??_motor_isr+6)& (0+255),c
 34272  00BA2C  5033               	movf	??_motor_isr+5,w,c
 34273  00BA2E  6E35               	movwf	(??_motor_isr+7)& (0+255),c
 34274  00BA30  6A36               	clrf	(??_motor_isr+8)& (0+255),c
 34275  00BA32  6A37               	clrf	(??_motor_isr+9)& (0+255),c
 34276  00BA34  1E34               	comf	??_motor_isr+6,f,c
 34277  00BA36  1E35               	comf	??_motor_isr+7,f,c
 34278  00BA38  1E36               	comf	??_motor_isr+8,f,c
 34279  00BA3A  1E37               	comf	??_motor_isr+9,f,c
 34280  00BA3C  2A34               	incf	??_motor_isr+6,f,c
 34281  00BA3E  0E00               	movlw	0
 34282  00BA40  2235               	addwfc	??_motor_isr+7,f,c
 34283  00BA42  2236               	addwfc	??_motor_isr+8,f,c
 34284  00BA44  2237               	addwfc	??_motor_isr+9,f,c
 34285  00BA46  90D8               	bcf	status,0,c
 34286  00BA48  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34287  00BA4A  6EF6               	movwf	tblptrl,c
 34288  00BA4C  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34289  00BA4E  6EF7               	movwf	tblptrh,c
 34290  00BA50  0E61               	movlw	low _motor_steps_lookup
 34291  00BA52  26F6               	addwf	tblptrl,f,c
 34292  00BA54  0E94               	movlw	high _motor_steps_lookup
 34293  00BA56  22F7               	addwfc	tblptrh,f,c
 34294  00BA58                     	if	1	;There are 3 active tblptr bytes
 34295  00BA58  6AF8               	clrf	tblptru,c
 34296  00BA5A  0E00               	movlw	low (__mediumconst shr (0+16))
 34297  00BA5C  22F8               	addwfc	tblptru,f,c
 34298  00BA5E                     	endif
 34299  00BA5E  0009               	tblrd		*+
 34300  00BA60  CFF5 F038          	movff	tablat,??_motor_isr+10
 34301  00BA64  0009               	tblrd		*+
 34302  00BA66  CFF5 F039          	movff	tablat,??_motor_isr+11
 34303  00BA6A  5038               	movf	??_motor_isr+10,w,c
 34304  00BA6C  2434               	addwf	??_motor_isr+6,w,c
 34305  00BA6E  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 34306  00BA70  5039               	movf	??_motor_isr+11,w,c
 34307  00BA72  2035               	addwfc	??_motor_isr+7,w,c
 34308  00BA74  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 34309  00BA76  0E00               	movlw	0
 34310  00BA78  2036               	addwfc	??_motor_isr+8,w,c
 34311  00BA7A  6E3C               	movwf	(??_motor_isr+14)& (0+255),c
 34312  00BA7C  0E00               	movlw	0
 34313  00BA7E  2037               	addwfc	??_motor_isr+9,w,c
 34314  00BA80  6E3D               	movwf	(??_motor_isr+15)& (0+255),c
 34315  00BA82  5016               	movf	_motor_current_stepcount,w,c	;volatile
 34316  00BA84  243A               	addwf	??_motor_isr+12,w,c
 34317  00BA86  0101               	movlb	1	; () banked
 34318  00BA88  6F37               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 34319  00BA8A  5017               	movf	_motor_current_stepcount+1,w,c	;volatile
 34320  00BA8C  203B               	addwfc	??_motor_isr+13,w,c
 34321  00BA8E  6F38               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 34322  00BA90  5018               	movf	_motor_current_stepcount+2,w,c	;volatile
 34323  00BA92  203C               	addwfc	??_motor_isr+14,w,c
 34324  00BA94  6F39               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 34325  00BA96  5019               	movf	_motor_current_stepcount+3,w,c	;volatile
 34326  00BA98  203D               	addwfc	??_motor_isr+15,w,c
 34327  00BA9A  D0EE               	goto	L64
 34328  00BA9C                     i2l2396:
 34329                           
 34330                           ;motor.c: 371: else;motor.c: 372: {;motor.c: 373: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 34331                           
 34332                           ; BSR set to: 1
 34333  00BA9C  90D8               	bcf	status,0,c
 34334  00BA9E  0100               	movlb	0	; () banked
 34335  00BAA0  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34336  00BAA2  6EF6               	movwf	tblptrl,c
 34337  00BAA4  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34338  00BAA6  6EF7               	movwf	tblptrh,c
 34339  00BAA8  0E61               	movlw	low _motor_steps_lookup
 34340  00BAAA  26F6               	addwf	tblptrl,f,c
 34341  00BAAC  0E94               	movlw	high _motor_steps_lookup
 34342  00BAAE  22F7               	addwfc	tblptrh,f,c
 34343  00BAB0                     	if	1	;There are 3 active tblptr bytes
 34344  00BAB0  6AF8               	clrf	tblptru,c
 34345  00BAB2  0E00               	movlw	low (__mediumconst shr (0+16))
 34346  00BAB4  22F8               	addwfc	tblptru,f,c
 34347  00BAB6                     	endif
 34348  00BAB6  0009               	tblrd		*+
 34349  00BAB8  CFF5 F02E          	movff	tablat,??_motor_isr
 34350  00BABC  0009               	tblrd		*+
 34351  00BABE  CFF5 F02F          	movff	tablat,??_motor_isr+1
 34352  00BAC2  502E               	movf	??_motor_isr,w,c
 34353  00BAC4  2416               	addwf	_motor_current_stepcount,w,c	;volatile
 34354  00BAC6  0101               	movlb	1	; () banked
 34355  00BAC8  6F37               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 34356  00BACA  502F               	movf	??_motor_isr+1,w,c
 34357  00BACC  2017               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 34358  00BACE  6F38               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 34359  00BAD0  0E00               	movlw	0
 34360  00BAD2  2018               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 34361  00BAD4  6F39               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 34362  00BAD6  0E00               	movlw	0
 34363  00BAD8  2019               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 34364  00BADA  D0CE               	goto	L64
 34365  00BADC                     i2l2391:
 34366                           
 34367                           ; BSR set to: 1
 34368                           ;motor.c: 376: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 34369                           
 34370                           ; BSR set to: 1
 34371  00BADC  515B               	movf	_motor_maximum_speed& (0+255),w,b
 34372  00BADE  0100               	movlb	0	; () banked
 34373  00BAE0  19CA               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 34374  00BAE2  E106               	bnz	i2u1575_40
 34375  00BAE4  0101               	movlb	1	; () banked
 34376  00BAE6  515C               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 34377  00BAE8  0100               	movlb	0	; () banked
 34378  00BAEA  19CB               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34379  00BAEC  B4D8               	btfsc	status,2,c
 34380  00BAEE  D010               	goto	i2u1576_40
 34381  00BAF0                     i2u1575_40:
 34382                           
 34383                           ; BSR set to: 0
 34384  00BAF0  5040               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 34385  00BAF2  6E2E               	movwf	??_motor_isr& (0+255),c
 34386  00BAF4  5041               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 34387  00BAF6  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34388  00BAF8  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 34389  00BAFA  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 34390  00BAFC  5042               	movf	motor_isr@steps_remaining,w,c
 34391  00BAFE  5C2E               	subwf	??_motor_isr,w,c
 34392  00BB00  5043               	movf	motor_isr@steps_remaining+1,w,c
 34393  00BB02  582F               	subwfb	??_motor_isr+1,w,c
 34394  00BB04  5044               	movf	motor_isr@steps_remaining+2,w,c
 34395  00BB06  5830               	subwfb	??_motor_isr+2,w,c
 34396  00BB08  5045               	movf	motor_isr@steps_remaining+3,w,c
 34397  00BB0A  5831               	subwfb	??_motor_isr+3,w,c
 34398  00BB0C  A0D8               	btfss	status,0,c
 34399  00BB0E  D002               	goto	i2l2399
 34400  00BB10                     i2u1576_40:
 34401                           
 34402                           ; BSR set to: 0
 34403                           ;motor.c: 377: {;motor.c: 380: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 34404                           
 34405                           ; BSR set to: 0
 34406  00BB10  90D8               	bcf	status,0,c
 34407  00BB12  D060               	goto	L63
 34408  00BB14                     i2l2399:
 34409                           
 34410                           ;motor.c: 382: else;motor.c: 383: {;motor.c: 385: ++motor_current_speed;
 34411                           
 34412                           ; BSR set to: 1
 34413  00BB14  0100               	movlb	0	; () banked
 34414  00BB16  4BCA               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 34415  00BB18  2BCB               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 34416                           
 34417                           ; BSR set to: 0
 34418                           ;motor.c: 389: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 34419  00BB1A  0EFD               	movlw	low _motor_prescaler_lookup
 34420  00BB1C  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34421  00BB1E  6EF6               	movwf	tblptrl,c
 34422  00BB20  0E9B               	movlw	high _motor_prescaler_lookup
 34423  00BB22  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34424  00BB24  6EF7               	movwf	tblptrh,c
 34425  00BB26                     	if	1	;There are 3 active tblptr bytes
 34426  00BB26  6AF8               	clrf	tblptru,c
 34427  00BB28  0E00               	movlw	low (__mediumconst shr (0+16))
 34428  00BB2A  22F8               	addwfc	tblptru,f,c
 34429  00BB2C                     	endif
 34430  00BB2C  0008               	tblrd		*
 34431  00BB2E  CFF5 F02E          	movff	tablat,??_motor_isr
 34432  00BB32  50CA               	movf	4042,w,c	;volatile
 34433  00BB34  182E               	xorwf	??_motor_isr,w,c
 34434  00BB36  0BFC               	andlw	-4
 34435  00BB38  182E               	xorwf	??_motor_isr,w,c
 34436  00BB3A  6ECA               	movwf	4042,c	;volatile
 34437                           
 34438                           ; BSR set to: 0
 34439                           ;motor.c: 391: PR2 = motor_period_lookup[motor_current_speed];
 34440  00BB3C  0E16               	movlw	low _motor_period_lookup
 34441  00BB3E  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34442  00BB40  6EF6               	movwf	tblptrl,c
 34443  00BB42  0E9A               	movlw	high _motor_period_lookup
 34444  00BB44  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34445  00BB46  6EF7               	movwf	tblptrh,c
 34446  00BB48                     	if	1	;There are 3 active tblptr bytes
 34447  00BB48  6AF8               	clrf	tblptru,c
 34448  00BB4A  0E00               	movlw	low (__mediumconst shr (0+16))
 34449  00BB4C  22F8               	addwfc	tblptru,f,c
 34450  00BB4E                     	endif
 34451  00BB4E  0008               	tblrd		*
 34452  00BB50  CFF5 FFCB          	movff	tablat,4043	;volatile
 34453                           
 34454                           ; BSR set to: 0
 34455                           ;motor.c: 393: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 34456  00BB54  0E2F               	movlw	low _motor_postscaler_lookup
 34457  00BB56  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34458  00BB58  6EF6               	movwf	tblptrl,c
 34459  00BB5A  0E98               	movlw	high _motor_postscaler_lookup
 34460  00BB5C  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34461  00BB5E  6EF7               	movwf	tblptrh,c
 34462  00BB60                     	if	1	;There are 3 active tblptr bytes
 34463  00BB60  6AF8               	clrf	tblptru,c
 34464  00BB62  0E00               	movlw	low (__mediumconst shr (0+16))
 34465  00BB64  22F8               	addwfc	tblptru,f,c
 34466  00BB66                     	endif
 34467  00BB66  0008               	tblrd		*
 34468  00BB68  CFF5 F02E          	movff	tablat,??_motor_isr
 34469  00BB6C  462E               	rlncf	??_motor_isr,f,c
 34470  00BB6E  462E               	rlncf	??_motor_isr,f,c
 34471  00BB70  462E               	rlncf	??_motor_isr,f,c
 34472  00BB72  50CA               	movf	4042,w,c	;volatile
 34473  00BB74  182E               	xorwf	??_motor_isr,w,c
 34474  00BB76  0B87               	andlw	-121
 34475  00BB78  182E               	xorwf	??_motor_isr,w,c
 34476  00BB7A  6ECA               	movwf	4042,c	;volatile
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;motor.c: 395: CCPR1L = PR2>>1;
 34480  00BB7C  90D8               	bcf	status,0,c
 34481  00BB7E  30CB               	rrcf	4043,w,c	;volatile
 34482  00BB80  6EBB               	movwf	4027,c	;volatile
 34483                           
 34484                           ; BSR set to: 0
 34485                           ;motor.c: 397: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 34486  00BB82  0101               	movlb	1	; () banked
 34487  00BB84  516A               	movf	_motor_mode& (0+255),w,b
 34488  00BB86  A4D8               	btfss	status,2,c
 34489  00BB88  D023               	goto	i2l2403
 34490                           
 34491                           ; BSR set to: 1
 34492  00BB8A  0E2F               	movlw	low _motor_postscaler_lookup
 34493  00BB8C  0100               	movlb	0	; () banked
 34494  00BB8E  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34495  00BB90  6EF6               	movwf	tblptrl,c
 34496  00BB92  0E98               	movlw	high _motor_postscaler_lookup
 34497  00BB94  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34498  00BB96  6EF7               	movwf	tblptrh,c
 34499  00BB98                     	if	1	;There are 3 active tblptr bytes
 34500  00BB98  6AF8               	clrf	tblptru,c
 34501  00BB9A  0E00               	movlw	low (__mediumconst shr (0+16))
 34502  00BB9C  22F8               	addwfc	tblptru,f,c
 34503  00BB9E                     	endif
 34504  00BB9E  0008               	tblrd		*
 34505  00BBA0  50F5               	movf	tablat,w,c
 34506  00BBA2  0900               	iorlw	0
 34507  00BBA4  A4D8               	btfss	status,2,c
 34508  00BBA6  D014               	goto	i2l2403
 34509                           
 34510                           ; BSR set to: 0
 34511                           ;motor.c: 398: {;motor.c: 400: motor_mode = MOTOR_MODE_PWM;
 34512  00BBA8  0E01               	movlw	1
 34513  00BBAA  0101               	movlb	1	; () banked
 34514  00BBAC  6F6A               	movwf	_motor_mode& (0+255),b
 34515                           
 34516                           ;motor.c: 403: CCP1CONbits.CCP1M = 0b1100;
 34517  00BBAE  50BA               	movf	4026,w,c	;volatile
 34518  00BBB0  0BF0               	andlw	-16
 34519  00BBB2  090C               	iorlw	12
 34520  00BBB4  6EBA               	movwf	4026,c	;volatile
 34521                           
 34522                           ;motor.c: 406: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 34523  00BBB6  0E55               	movlw	85
 34524  00BBB8  6EA7               	movwf	4007,c	;volsfr
 34525  00BBBA  0EAA               	movlw	170
 34526  00BBBC  6EA7               	movwf	4007,c	;volsfr
 34527                           
 34528                           ; BSR set to: 1
 34529  00BBBE  010E               	movlb	14	; () banked
 34530  00BBC0  91BF               	bcf	191,0,b	;volatile
 34531                           
 34532                           ;motor.c: 407: RPOR4 = 14;
 34533  00BBC2  0E0E               	movlw	14
 34534  00BBC4  6FC4               	movwf	196,b	;volatile
 34535                           
 34536                           ;motor.c: 408: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 34537  00BBC6  0E55               	movlw	85
 34538  00BBC8  6EA7               	movwf	4007,c	;volsfr
 34539  00BBCA  0EAA               	movlw	170
 34540  00BBCC  6EA7               	movwf	4007,c	;volsfr
 34541                           
 34542                           ; BSR set to: 14
 34543  00BBCE  81BF               	bsf	191,0,b	;volatile
 34544  00BBD0                     i2l2403:
 34545                           
 34546                           ;motor.c: 409: };motor.c: 412: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 34547                           
 34548                           ; BSR set to: 14
 34549  00BBD0  90D8               	bcf	status,0,c
 34550  00BBD2  0100               	movlb	0	; () banked
 34551  00BBD4                     L63:
 34552  00BBD4  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34553  00BBD6  6EF6               	movwf	tblptrl,c
 34554  00BBD8  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34555  00BBDA  6EF7               	movwf	tblptrh,c
 34556  00BBDC  0E61               	movlw	low _motor_steps_lookup
 34557  00BBDE  26F6               	addwf	tblptrl,f,c
 34558  00BBE0  0E94               	movlw	high _motor_steps_lookup
 34559  00BBE2  22F7               	addwfc	tblptrh,f,c
 34560  00BBE4                     	if	1	;There are 3 active tblptr bytes
 34561  00BBE4  6AF8               	clrf	tblptru,c
 34562  00BBE6  0E00               	movlw	low (__mediumconst shr (0+16))
 34563  00BBE8  22F8               	addwfc	tblptru,f,c
 34564  00BBEA                     	endif
 34565  00BBEA  0009               	tblrd		*+
 34566  00BBEC  CFF5 F02E          	movff	tablat,??_motor_isr
 34567  00BBF0  0009               	tblrd		*+
 34568  00BBF2  CFF5 F02F          	movff	tablat,??_motor_isr+1
 34569  00BBF6  502E               	movf	??_motor_isr,w,c
 34570  00BBF8  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 34571  00BBFA  502F               	movf	??_motor_isr+1,w,c
 34572  00BBFC  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 34573  00BBFE  6A32               	clrf	(??_motor_isr+4)& (0+255),c
 34574  00BC00  6A33               	clrf	(??_motor_isr+5)& (0+255),c
 34575  00BC02  1E30               	comf	??_motor_isr+2,f,c
 34576  00BC04  1E31               	comf	??_motor_isr+3,f,c
 34577  00BC06  1E32               	comf	??_motor_isr+4,f,c
 34578  00BC08  1E33               	comf	??_motor_isr+5,f,c
 34579  00BC0A  2A30               	incf	??_motor_isr+2,f,c
 34580  00BC0C  0E00               	movlw	0
 34581  00BC0E  2231               	addwfc	??_motor_isr+3,f,c
 34582  00BC10  2232               	addwfc	??_motor_isr+4,f,c
 34583  00BC12  2233               	addwfc	??_motor_isr+5,f,c
 34584  00BC14  C0CA  F034         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 34585  00BC18  C0CB  F035         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 34586  00BC1C  90D8               	bcf	status,0,c
 34587  00BC1E  3634               	rlcf	??_motor_isr+6,f,c
 34588  00BC20  3635               	rlcf	??_motor_isr+7,f,c
 34589  00BC22  0E02               	movlw	2
 34590  00BC24  2634               	addwf	??_motor_isr+6,f,c
 34591  00BC26  0E00               	movlw	0
 34592  00BC28  2235               	addwfc	??_motor_isr+7,f,c
 34593  00BC2A  0E61               	movlw	low _motor_steps_lookup
 34594  00BC2C  2434               	addwf	??_motor_isr+6,w,c
 34595  00BC2E  6EF6               	movwf	tblptrl,c
 34596  00BC30  0E94               	movlw	high _motor_steps_lookup
 34597  00BC32  2035               	addwfc	??_motor_isr+7,w,c
 34598  00BC34  6EF7               	movwf	tblptrh,c
 34599  00BC36                     	if	1	;There are 3 active tblptr bytes
 34600  00BC36  6AF8               	clrf	tblptru,c
 34601  00BC38  0E00               	movlw	low (__mediumconst shr (0+16))
 34602  00BC3A  22F8               	addwfc	tblptru,f,c
 34603  00BC3C                     	endif
 34604  00BC3C  0009               	tblrd		*+
 34605  00BC3E  CFF5 F036          	movff	tablat,??_motor_isr+8
 34606  00BC42  0009               	tblrd		*+
 34607  00BC44  CFF5 F037          	movff	tablat,??_motor_isr+9
 34608  00BC48  5036               	movf	??_motor_isr+8,w,c
 34609  00BC4A  2430               	addwf	??_motor_isr+2,w,c
 34610  00BC4C  6E38               	movwf	(??_motor_isr+10)& (0+255),c
 34611  00BC4E  5037               	movf	??_motor_isr+9,w,c
 34612  00BC50  2031               	addwfc	??_motor_isr+3,w,c
 34613  00BC52  6E39               	movwf	(??_motor_isr+11)& (0+255),c
 34614  00BC54  0E00               	movlw	0
 34615  00BC56  2032               	addwfc	??_motor_isr+4,w,c
 34616  00BC58  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 34617  00BC5A  0E00               	movlw	0
 34618  00BC5C  2033               	addwfc	??_motor_isr+5,w,c
 34619  00BC5E  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 34620  00BC60  5016               	movf	_motor_current_stepcount,w,c	;volatile
 34621  00BC62  2438               	addwf	??_motor_isr+10,w,c
 34622  00BC64  0101               	movlb	1	; () banked
 34623  00BC66  6F37               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 34624  00BC68  5017               	movf	_motor_current_stepcount+1,w,c	;volatile
 34625  00BC6A  2039               	addwfc	??_motor_isr+11,w,c
 34626  00BC6C  6F38               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 34627  00BC6E  5018               	movf	_motor_current_stepcount+2,w,c	;volatile
 34628  00BC70  203A               	addwfc	??_motor_isr+12,w,c
 34629  00BC72  6F39               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 34630  00BC74  5019               	movf	_motor_current_stepcount+3,w,c	;volatile
 34631  00BC76  203B               	addwfc	??_motor_isr+13,w,c
 34632  00BC78                     L64:
 34633  00BC78  6F3A               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 34634  00BC7A                     i2l2402:
 34635                           
 34636                           ; BSR set to: 1
 34637                           ;motor.c: 413: };motor.c: 414: };motor.c: 417: if(PIR1bits.TMR2IF)
 34638                           
 34639                           ; BSR set to: 1
 34640                           
 34641                           ; BSR set to: 1
 34642                           
 34643                           ; BSR set to: 1
 34644  00BC7A  A29E               	btfss	3998,1,c	;volatile
 34645  00BC7C  0012               	return	
 34646                           
 34647                           ; BSR set to: 1
 34648                           ;motor.c: 418: {;motor.c: 420: PIR1bits.TMR2IF = 0;
 34649  00BC7E  929E               	bcf	3998,1,c	;volatile
 34650                           
 34651                           ; BSR set to: 1
 34652                           ;motor.c: 422: ++motor_current_stepcount;
 34653  00BC80  0E01               	movlw	1
 34654  00BC82  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 34655  00BC84  0E00               	movlw	0
 34656  00BC86  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 34657  00BC88  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 34658  00BC8A  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 34659                           
 34660                           ;motor.c: 425: os.current_position_in_steps += motor_direction;
 34661  00BC8C  5169               	movf	_motor_direction& (0+255),w,b
 34662  00BC8E  6E2E               	movwf	??_motor_isr& (0+255),c
 34663  00BC90  0E00               	movlw	0
 34664  00BC92  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 34665  00BC94  0EFF               	movlw	255
 34666  00BC96  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34667  00BC98  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 34668  00BC9A  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 34669  00BC9C  502E               	movf	??_motor_isr,w,c
 34670  00BC9E  0100               	movlb	0	; () banked
 34671  00BCA0  27DA               	addwf	(_os+7)& (0+255),f,b	;volatile
 34672  00BCA2  502F               	movf	??_motor_isr+1,w,c
 34673  00BCA4  23DB               	addwfc	(_os+8)& (0+255),f,b	;volatile
 34674  00BCA6  5030               	movf	??_motor_isr+2,w,c
 34675  00BCA8  23DC               	addwfc	(_os+9)& (0+255),f,b	;volatile
 34676  00BCAA  5031               	movf	??_motor_isr+3,w,c
 34677  00BCAC  23DD               	addwfc	(_os+10)& (0+255),f,b	;volatile
 34678                           
 34679                           ;motor.c: 426: if(os.current_position_in_steps==config.full_circle_in_steps)
 34680  00BCAE  0101               	movlb	1	; () banked
 34681  00BCB0  5179               	movf	_config& (0+255),w,b
 34682  00BCB2  0100               	movlb	0	; () banked
 34683  00BCB4  19DA               	xorwf	(_os+7)& (0+255),w,b	;volatile
 34684  00BCB6  E118               	bnz	i2l16207
 34685  00BCB8  0101               	movlb	1	; () banked
 34686  00BCBA  517A               	movf	(_config+1)& (0+255),w,b
 34687  00BCBC  0100               	movlb	0	; () banked
 34688  00BCBE  19DB               	xorwf	(_os+8)& (0+255),w,b	;volatile
 34689  00BCC0  E113               	bnz	i2l16207
 34690  00BCC2  0101               	movlb	1	; () banked
 34691  00BCC4  517B               	movf	(_config+2)& (0+255),w,b
 34692  00BCC6  0100               	movlb	0	; () banked
 34693  00BCC8  19DC               	xorwf	(_os+9)& (0+255),w,b	;volatile
 34694  00BCCA  E10E               	bnz	i2l16207
 34695  00BCCC  0101               	movlb	1	; () banked
 34696  00BCCE  517C               	movf	(_config+3)& (0+255),w,b
 34697  00BCD0  0100               	movlb	0	; () banked
 34698  00BCD2  19DD               	xorwf	(_os+10)& (0+255),w,b	;volatile
 34699  00BCD4  A4D8               	btfss	status,2,c
 34700  00BCD6  D008               	goto	i2l2405
 34701                           
 34702                           ; BSR set to: 0
 34703                           ;motor.c: 427: os.current_position_in_steps = 0;
 34704  00BCD8  0E00               	movlw	0
 34705  00BCDA  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 34706  00BCDC  0E00               	movlw	0
 34707  00BCDE  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 34708  00BCE0  0E00               	movlw	0
 34709  00BCE2  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 34710  00BCE4  0E00               	movlw	0
 34711  00BCE6  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 34712  00BCE8                     i2l2405:
 34713  00BCE8                     i2l16207:
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;motor.c: 428: if(os.current_position_in_steps==0xFFFFFFFF)
 34717  00BCE8  29DA               	incf	(_os+7)& (0+255),w,b	;volatile
 34718  00BCEA  E11C               	bnz	i2l2386
 34719  00BCEC  29DB               	incf	(_os+8)& (0+255),w,b	;volatile
 34720  00BCEE  E11A               	bnz	i2l2386
 34721  00BCF0  29DC               	incf	(_os+9)& (0+255),w,b	;volatile
 34722  00BCF2  E118               	bnz	i2l2386
 34723  00BCF4  29DD               	incf	(_os+10)& (0+255),w,b	;volatile
 34724  00BCF6  A4D8               	btfss	status,2,c
 34725  00BCF8  0012               	return	
 34726                           
 34727                           ; BSR set to: 0
 34728                           ;motor.c: 429: os.current_position_in_steps = (config.full_circle_in_steps-1);
 34729  00BCFA  0EFF               	movlw	255
 34730  00BCFC  0101               	movlb	1	; () banked
 34731  00BCFE  2579               	addwf	_config& (0+255),w,b
 34732  00BD00  0100               	movlb	0	; () banked
 34733  00BD02  6FDA               	movwf	(_os+7)& (0+255),b	;volatile
 34734  00BD04  0EFF               	movlw	255
 34735  00BD06  0101               	movlb	1	; () banked
 34736  00BD08  217A               	addwfc	(_config+1)& (0+255),w,b
 34737  00BD0A  0100               	movlb	0	; () banked
 34738  00BD0C  6FDB               	movwf	(_os+8)& (0+255),b	;volatile
 34739  00BD0E  0EFF               	movlw	255
 34740  00BD10  0101               	movlb	1	; () banked
 34741  00BD12  217B               	addwfc	(_config+2)& (0+255),w,b
 34742  00BD14  0100               	movlb	0	; () banked
 34743  00BD16  6FDC               	movwf	(_os+9)& (0+255),b	;volatile
 34744  00BD18  0EFF               	movlw	255
 34745  00BD1A  0101               	movlb	1	; () banked
 34746  00BD1C  217C               	addwfc	(_config+3)& (0+255),w,b
 34747  00BD1E  0100               	movlb	0	; () banked
 34748  00BD20  6FDD               	movwf	(_os+10)& (0+255),b	;volatile
 34749                           
 34750                           ; BSR set to: 0
 34751  00BD22  0012               	return	
 34752  00BD24                     i2l2386:
 34753  00BD24  0012               	return		;funcret
 34754  00BD26                     __end_of_motor_isr:
 34755                           	opt stack 0
 34756                           tosu	equ	0xFFF
 34757                           tosh	equ	0xFFE
 34758                           tosl	equ	0xFFD
 34759                           pclatu	equ	0xFFB
 34760                           pclath	equ	0xFFA
 34761                           tblptru	equ	0xFF8
 34762                           tblptrh	equ	0xFF7
 34763                           tblptrl	equ	0xFF6
 34764                           tablat	equ	0xFF5
 34765                           prodh	equ	0xFF4
 34766                           prodl	equ	0xFF3
 34767                           intcon	equ	0xFF2
 34768                           indf0	equ	0xFEF
 34769                           postinc0	equ	0xFEE
 34770                           fsr0h	equ	0xFEA
 34771                           fsr0l	equ	0xFE9
 34772                           wreg	equ	0xFE8
 34773                           indf1	equ	0xFE7
 34774                           postdec1	equ	0xFE5
 34775                           plusw1	equ	0xFE3
 34776                           fsr1h	equ	0xFE2
 34777                           fsr1l	equ	0xFE1
 34778                           indf2	equ	0xFDF
 34779                           postinc2	equ	0xFDE
 34780                           postdec2	equ	0xFDD
 34781                           plusw2	equ	0xFDB
 34782                           fsr2h	equ	0xFDA
 34783                           fsr2l	equ	0xFD9
 34784                           status	equ	0xFD8
 34785                           
 34786 ;; *************** function _USBDeviceTasks *****************
 34787 ;; Defined at:
 34788 ;;		line 477 in file "usb_device.c"
 34789 ;; Parameters:    Size  Location     Type
 34790 ;;		None
 34791 ;; Auto vars:     Size  Location     Type
 34792 ;;  i               1   30[COMRAM] unsigned char 
 34793 ;; Return value:  Size  Location     Type
 34794 ;;                  1    wreg      void 
 34795 ;; Registers used:
 34796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34797 ;; Tracked objects:
 34798 ;;		On entry : 0/0
 34799 ;;		On exit  : 0/0
 34800 ;;		Unchanged: 0/0
 34801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34806 ;;Total ram usage:        1 bytes
 34807 ;; Hardware stack levels used:    1
 34808 ;; Hardware stack levels required when called:    8
 34809 ;; This function calls:
 34810 ;;		_USBCtrlEPAllowStatusStage
 34811 ;;		_USBCtrlEPService
 34812 ;;		_USBIncrement1msInternalTimers
 34813 ;;		_USBStallHandler
 34814 ;;		_USBSuspend
 34815 ;;		_USBWakeFromSuspend
 34816 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34817 ;;		i2_USBDeviceInit
 34818 ;; This function is called by:
 34819 ;;		_SYS_InterruptHigh
 34820 ;; This function uses a non-reentrant model
 34821 ;;
 34822                           
 34823                           	psect	text126
 34824  00EC18                     __ptext126:
 34825                           	opt stack 0
 34826  00EC18                     _USBDeviceTasks:
 34827                           	opt stack 9
 34828                           
 34829                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 34830                           
 34831                           ;incstack = 0
 34832  00EC18  042B               	decf	_USBDeviceState,w,c	;volatile
 34833  00EC1A  B4D8               	btfsc	status,2,c
 34834                           
 34835                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 34836  00EC1C  BA65               	btfsc	3941,5,c	;volatile
 34837  00EC1E  D007               	goto	i2l155
 34838                           
 34839                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 34840  00EC20  0E00               	movlw	0
 34841  00EC22  6E62               	movwf	3938,c	;volatile
 34842                           
 34843                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 34844  00EC24  010F               	movlb	15	; () banked
 34845  00EC26  8136               	bsf	54,0,b	;volatile
 34846                           
 34847                           ; BSR set to: 15
 34848                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 34849  00EC28  8936               	bsf	54,4,b	;volatile
 34850                           
 34851                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 34852  00EC2A  0E02               	movlw	2
 34853  00EC2C  6E2B               	movwf	_USBDeviceState,c	;volatile
 34854  00EC2E                     i2l155:
 34855                           
 34856                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 34857                           
 34858                           ; BSR set to: 15
 34859                           
 34860                           ; BSR set to: 15
 34861  00EC2E  A462               	btfss	3938,2,c	;volatile
 34862  00EC30  D006               	goto	i2l156
 34863  00EC32  010F               	movlb	15	; () banked
 34864  00EC34  A536               	btfss	54,2,b	;volatile
 34865  00EC36  D003               	goto	i2l156
 34866                           
 34867                           ; BSR set to: 15
 34868                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 34869  00EC38  9462               	bcf	3938,2,c	;volatile
 34870                           
 34871                           ; BSR set to: 15
 34872                           ;usb_device.c: 640: USBWakeFromSuspend();
 34873  00EC3A  EC02  F093         	call	_USBWakeFromSuspend	;wreg free
 34874  00EC3E                     i2l156:
 34875                           
 34876                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 34877  00EC3E  A265               	btfss	3941,1,c	;volatile
 34878  00EC40  D002               	goto	i2l157
 34879                           
 34880                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 34881  00EC42  98A1               	bcf	4001,4,c	;volatile
 34882                           
 34883                           ;usb_device.c: 650: return;
 34884  00EC44  0012               	return	
 34885  00EC46                     i2l157:
 34886                           
 34887                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 34888  00EC46  A062               	btfss	3938,0,c	;volatile
 34889  00EC48  D009               	goto	i2l159
 34890  00EC4A  010F               	movlb	15	; () banked
 34891  00EC4C  A136               	btfss	54,0,b	;volatile
 34892  00EC4E  D006               	goto	i2l159
 34893                           
 34894                           ; BSR set to: 15
 34895                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 34896  00EC50  ECAE  F076         	call	i2_USBDeviceInit	;wreg free
 34897                           
 34898                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 34899  00EC54  88A0               	bsf	4000,4,c	;volatile
 34900                           
 34901                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 34902  00EC56  0E04               	movlw	4
 34903  00EC58  6E2B               	movwf	_USBDeviceState,c	;volatile
 34904                           
 34905                           ;usb_device.c: 681: (UIR &= 0xFE);
 34906  00EC5A  9062               	bcf	3938,0,c	;volatile
 34907  00EC5C                     i2l159:
 34908                           
 34909                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 34910  00EC5C  A862               	btfss	3938,4,c	;volatile
 34911  00EC5E  D004               	goto	i2l160
 34912  00EC60  010F               	movlb	15	; () banked
 34913  00EC62  B936               	btfsc	54,4,b	;volatile
 34914                           
 34915                           ; BSR set to: 15
 34916                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 34917  00EC64  ECD4  F093         	call	_USBSuspend	;wreg free
 34918  00EC68                     i2l160:
 34919                           
 34920                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 34921  00EC68  AC62               	btfss	3938,6,c	;volatile
 34922  00EC6A  D01B               	goto	i2l164
 34923                           
 34924                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 34925  00EC6C  010F               	movlb	15	; () banked
 34926  00EC6E  AD36               	btfss	54,6,b	;volatile
 34927  00EC70  D00E               	goto	i2l162
 34928                           
 34929                           ; BSR set to: 15
 34930                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 34931  00EC72  0E00               	movlw	0
 34932  00EC74  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34933  00EC76  0E73               	movlw	115
 34934  00EC78  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34935  00EC7A  0E00               	movlw	0
 34936  00EC7C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34937  00EC7E  0E00               	movlw	0
 34938  00EC80  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34939  00EC82  0E00               	movlw	0
 34940  00EC84  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34941  00EC86  0E01               	movlw	1
 34942  00EC88  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34943  00EC8A  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34944  00EC8E                     i2l162:
 34945                           
 34946                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 34947  00EC8E  9C62               	bcf	3938,6,c	;volatile
 34948                           
 34949                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 34950  00EC90  ECDB  F094         	call	_USBIncrement1msInternalTimers	;wreg free
 34951                           
 34952                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 34953  00EC94  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 34954  00EC96  A4D8               	btfss	status,2,c
 34955                           
 34956                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 34957  00EC98  0627               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 34958                           
 34959                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 34960  00EC9A  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 34961  00EC9C  B4D8               	btfsc	status,2,c
 34962                           
 34963                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 34964  00EC9E  ECEE  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 34965  00ECA2                     i2l164:
 34966                           
 34967                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 34968  00ECA2  AA62               	btfss	3938,5,c	;volatile
 34969  00ECA4  D004               	goto	i2l165
 34970  00ECA6  010F               	movlb	15	; () banked
 34971  00ECA8  BB36               	btfsc	54,5,b	;volatile
 34972                           
 34973                           ; BSR set to: 15
 34974                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 34975  00ECAA  ECF3  F091         	call	_USBStallHandler	;wreg free
 34976  00ECAE                     i2l165:
 34977                           
 34978                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 34979  00ECAE  A262               	btfss	3938,1,c	;volatile
 34980  00ECB0  D012               	goto	i2l166
 34981  00ECB2  010F               	movlb	15	; () banked
 34982  00ECB4  A336               	btfss	54,1,b	;volatile
 34983  00ECB6  D00F               	goto	i2l166
 34984                           
 34985                           ; BSR set to: 15
 34986                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 34987  00ECB8  0E7F               	movlw	127
 34988  00ECBA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34989  00ECBC  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34990  00ECBE  0E00               	movlw	0
 34991  00ECC0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34992  00ECC2  0E00               	movlw	0
 34993  00ECC4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34994  00ECC6  0E00               	movlw	0
 34995  00ECC8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34996  00ECCA  0E01               	movlw	1
 34997  00ECCC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34998  00ECCE  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34999                           
 35000                           ;usb_device.c: 759: {UEIR = 0;};
 35001  00ECD2  0E00               	movlw	0
 35002  00ECD4  6E63               	movwf	3939,c	;volatile
 35003  00ECD6                     i2l166:
 35004                           
 35005                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 35006  00ECD6  0E04               	movlw	4
 35007  00ECD8  602B               	cpfslt	_USBDeviceState,c	;volatile
 35008  00ECDA  D002               	goto	i2l167
 35009                           
 35010                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 35011  00ECDC  98A1               	bcf	4001,4,c	;volatile
 35012                           
 35013                           ;usb_device.c: 777: return;
 35014  00ECDE  0012               	return	
 35015  00ECE0                     i2l167:
 35016                           
 35017                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 35018  00ECE0  010F               	movlb	15	; () banked
 35019  00ECE2  A736               	btfss	54,3,b	;volatile
 35020  00ECE4  D039               	goto	i2u2146_40
 35021                           
 35022                           ; BSR set to: 15
 35023                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 35024  00ECE6  0E00               	movlw	0
 35025  00ECE8  6E4C               	movwf	USBDeviceTasks@i,c
 35026  00ECEA                     i2l21305:
 35027                           
 35028                           ; BSR set to: 15
 35029  00ECEA  0E03               	movlw	3
 35030  00ECEC  644C               	cpfsgt	USBDeviceTasks@i,c
 35031  00ECEE  D001               	goto	i2l169
 35032  00ECF0  D033               	goto	i2u2146_40
 35033  00ECF2                     i2l169:
 35034                           
 35035                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 35036  00ECF2  A662               	btfss	3938,3,c	;volatile
 35037  00ECF4  D031               	goto	i2u2146_40
 35038                           
 35039                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 35040  00ECF6  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 35041                           
 35042                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 35043  00ECFA  302C               	rrcf	_USTATcopy,w,c	;volatile
 35044  00ECFC  32E8               	rrcf	wreg,f,c
 35045  00ECFE  32E8               	rrcf	wreg,f,c
 35046  00ED00  0B0F               	andlw	15
 35047  00ED02  6E28               	movwf	_endpoint_number,c	;volatile
 35048                           
 35049                           ;usb_device.c: 793: (UIR &= 0xF7);
 35050  00ED04  9662               	bcf	3938,3,c	;volatile
 35051                           
 35052                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 35053  00ED06  B42C               	btfsc	_USTATcopy,2,c	;volatile
 35054  00ED08  D007               	goto	i2l172
 35055                           
 35056                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 35057  00ED0A  5028               	movf	_endpoint_number,w,c	;volatile
 35058  00ED0C  0D01               	mullw	1
 35059  00ED0E  0E55               	movlw	low _ep_data_out
 35060  00ED10  24F3               	addwf	prodl,w,c
 35061  00ED12  6ED9               	movwf	fsr2l,c
 35062  00ED14  0E01               	movlw	high _ep_data_out
 35063  00ED16  D006               	goto	L65
 35064  00ED18                     i2l172:
 35065                           
 35066                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 35067                           
 35068                           ; BSR set to: 1
 35069  00ED18  5028               	movf	_endpoint_number,w,c	;volatile
 35070  00ED1A  0D01               	mullw	1
 35071  00ED1C  0E58               	movlw	low _ep_data_in
 35072  00ED1E  24F3               	addwf	prodl,w,c
 35073  00ED20  6ED9               	movwf	fsr2l,c
 35074  00ED22  0E01               	movlw	high _ep_data_in
 35075  00ED24                     L65:
 35076  00ED24  20F4               	addwfc	prodh,w,c
 35077  00ED26  6EDA               	movwf	fsr2h,c
 35078  00ED28  0101               	movlb	1	; () banked
 35079  00ED2A  70DF               	btg	indf2,0,c
 35080                           
 35081                           ; BSR set to: 1
 35082                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 35083                           
 35084                           ; BSR set to: 1
 35085  00ED2C  5028               	movf	_endpoint_number,w,c	;volatile
 35086  00ED2E  A4D8               	btfss	status,2,c
 35087  00ED30  D003               	goto	i2l174
 35088                           
 35089                           ; BSR set to: 1
 35090                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 35091  00ED32  ECA3  F089         	call	_USBCtrlEPService	;wreg free
 35092                           
 35093                           ;usb_device.c: 813: }
 35094  00ED36  D00E               	goto	i2l176
 35095  00ED38                     i2l174:
 35096                           
 35097                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 35098  00ED38  0E00               	movlw	0
 35099  00ED3A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35100  00ED3C  0E72               	movlw	114
 35101  00ED3E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35102  00ED40  0E2C               	movlw	low _USTATcopy
 35103  00ED42  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35104  00ED44  0E00               	movlw	high _USTATcopy
 35105  00ED46  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35106  00ED48  0E00               	movlw	0
 35107  00ED4A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35108  00ED4C  0E00               	movlw	0
 35109  00ED4E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35110  00ED50  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35111  00ED54                     i2l176:
 35112  00ED54  2A4C               	incf	USBDeviceTasks@i,f,c
 35113  00ED56  D7C9               	goto	i2l21305
 35114  00ED58                     i2u2146_40:
 35115                           
 35116                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 35117  00ED58  98A1               	bcf	4001,4,c	;volatile
 35118  00ED5A  0012               	return		;funcret
 35119  00ED5C                     __end_of_USBDeviceTasks:
 35120                           	opt stack 0
 35121                           tosu	equ	0xFFF
 35122                           tosh	equ	0xFFE
 35123                           tosl	equ	0xFFD
 35124                           pclatu	equ	0xFFB
 35125                           pclath	equ	0xFFA
 35126                           tblptru	equ	0xFF8
 35127                           tblptrh	equ	0xFF7
 35128                           tblptrl	equ	0xFF6
 35129                           tablat	equ	0xFF5
 35130                           prodh	equ	0xFF4
 35131                           prodl	equ	0xFF3
 35132                           intcon	equ	0xFF2
 35133                           indf0	equ	0xFEF
 35134                           postinc0	equ	0xFEE
 35135                           fsr0h	equ	0xFEA
 35136                           fsr0l	equ	0xFE9
 35137                           wreg	equ	0xFE8
 35138                           indf1	equ	0xFE7
 35139                           postdec1	equ	0xFE5
 35140                           plusw1	equ	0xFE3
 35141                           fsr1h	equ	0xFE2
 35142                           fsr1l	equ	0xFE1
 35143                           indf2	equ	0xFDF
 35144                           postinc2	equ	0xFDE
 35145                           postdec2	equ	0xFDD
 35146                           plusw2	equ	0xFDB
 35147                           fsr2h	equ	0xFDA
 35148                           fsr2l	equ	0xFD9
 35149                           status	equ	0xFD8
 35150                           
 35151 ;; *************** function i2_USBDeviceInit *****************
 35152 ;; Defined at:
 35153 ;;		line 277 in file "usb_device.c"
 35154 ;; Parameters:    Size  Location     Type
 35155 ;;		None
 35156 ;; Auto vars:     Size  Location     Type
 35157 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 35158 ;; Return value:  Size  Location     Type
 35159 ;;                  1    wreg      void 
 35160 ;; Registers used:
 35161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35162 ;; Tracked objects:
 35163 ;;		On entry : 0/0
 35164 ;;		On exit  : 0/0
 35165 ;;		Unchanged: 0/0
 35166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35171 ;;Total ram usage:        1 bytes
 35172 ;; Hardware stack levels used:    1
 35173 ;; Hardware stack levels required when called:    1
 35174 ;; This function calls:
 35175 ;;		i2_memset
 35176 ;; This function is called by:
 35177 ;;		_USBDeviceTasks
 35178 ;; This function uses a non-reentrant model
 35179 ;;
 35180                           
 35181                           	psect	text127
 35182  00ED5C                     __ptext127:
 35183                           	opt stack 0
 35184  00ED5C                     i2_USBDeviceInit:
 35185                           	opt stack 15
 35186                           
 35187                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 35188                           
 35189                           ;incstack = 0
 35190  00ED5C  98A0               	bcf	4000,4,c	;volatile
 35191                           
 35192                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 35193  00ED5E  0E00               	movlw	0
 35194  00ED60  6E63               	movwf	3939,c	;volatile
 35195                           
 35196                           ;usb_device.c: 291: {UIR = 0;};
 35197  00ED62  0E00               	movlw	0
 35198  00ED64  6E62               	movwf	3938,c	;volatile
 35199                           
 35200                           ;usb_device.c: 294: UEP0 = 0;
 35201  00ED66  0E00               	movlw	0
 35202  00ED68  010F               	movlb	15	; () banked
 35203  00ED6A  6F26               	movwf	38,b	;volatile
 35204                           
 35205                           ; BSR set to: 15
 35206                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 35207  00ED6C  0E27               	movlw	39
 35208  00ED6E  6E2E               	movwf	i2memset@p1,c
 35209  00ED70  0E0F               	movlw	15
 35210  00ED72  6E2F               	movwf	i2memset@p1+1,c
 35211  00ED74  0E00               	movlw	0
 35212  00ED76  6E31               	movwf	i2memset@c+1,c
 35213  00ED78  0E00               	movlw	0
 35214  00ED7A  6E30               	movwf	i2memset@c,c
 35215  00ED7C  0E00               	movlw	0
 35216  00ED7E  6E33               	movwf	i2memset@n+1,c
 35217  00ED80  0E02               	movlw	2
 35218  00ED82  6E32               	movwf	i2memset@n,c
 35219  00ED84  EC30  F094         	call	i2_memset	;wreg free
 35220                           
 35221                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 35222  00ED88  0E16               	movlw	22
 35223  00ED8A  010F               	movlb	15	; () banked
 35224  00ED8C  6F39               	movwf	57,b	;volatile
 35225                           
 35226                           ; BSR set to: 15
 35227  00ED8E  0E9F               	movlw	159
 35228  00ED90  6F37               	movwf	55,b	;volatile
 35229                           
 35230                           ; BSR set to: 15
 35231  00ED92  0E7B               	movlw	123
 35232  00ED94  6F36               	movwf	54,b	;volatile
 35233                           
 35234                           ; BSR set to: 15
 35235                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 35236  00ED96  0E00               	movlw	0
 35237  00ED98  6E36               	movwf	i2USBDeviceInit@i,c
 35238  00ED9A                     i2l14973:
 35239                           
 35240                           ; BSR set to: 15
 35241  00ED9A  0E0B               	movlw	11
 35242  00ED9C  6436               	cpfsgt	i2USBDeviceInit@i,c
 35243  00ED9E  D001               	goto	i2l145
 35244  00EDA0  D00E               	goto	i2u1393_40
 35245  00EDA2                     i2l145:
 35246                           
 35247                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 35248                           
 35249                           ; BSR set to: 15
 35250  00EDA2  5036               	movf	i2USBDeviceInit@i,w,c
 35251  00EDA4  0D04               	mullw	4
 35252  00EDA6  0E00               	movlw	0
 35253  00EDA8  24F3               	addwf	prodl,w,c
 35254  00EDAA  6ED9               	movwf	fsr2l,c
 35255  00EDAC  0E0D               	movlw	13
 35256  00EDAE  20F4               	addwfc	prodh,w,c
 35257  00EDB0  6EDA               	movwf	fsr2h,c
 35258  00EDB2  6ADE               	clrf	postinc2,c
 35259  00EDB4  6ADE               	clrf	postinc2,c
 35260  00EDB6  6ADE               	clrf	postinc2,c
 35261  00EDB8  6ADD               	clrf	postdec2,c
 35262  00EDBA  2A36               	incf	i2USBDeviceInit@i,f,c
 35263  00EDBC  D7EE               	goto	i2l14973
 35264  00EDBE                     i2u1393_40:
 35265                           
 35266                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 35267  00EDBE  8C65               	bsf	3941,6,c	;volatile
 35268                           
 35269                           ;usb_device.c: 316: UADDR = 0x00;
 35270  00EDC0  0E00               	movlw	0
 35271  00EDC2  010F               	movlb	15	; () banked
 35272  00EDC4  6F38               	movwf	56,b	;volatile
 35273                           
 35274                           ; BSR set to: 15
 35275                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 35276  00EDC6  9865               	bcf	3941,4,c	;volatile
 35277                           
 35278                           ; BSR set to: 15
 35279                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 35280  00EDC8  9C65               	bcf	3941,6,c	;volatile
 35281  00EDCA                     
 35282                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 35283                           
 35284                           ; BSR set to: 15
 35285  00EDCA  9662               	bcf	3938,3,c	;volatile
 35286                           
 35287                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 35288  00EDCC  0E00               	movlw	0
 35289  00EDCE  6E0D               	movwf	_inPipes+3,c	;volatile
 35290                           
 35291                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 35292  00EDD0  0E00               	movlw	0
 35293  00EDD2  6E04               	movwf	_outPipes+3,c	;volatile
 35294                           
 35295                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 35296  00EDD4  0E00               	movlw	0
 35297  00EDD6  6E06               	movwf	_outPipes+5,c	;volatile
 35298  00EDD8  0E00               	movlw	0
 35299  00EDDA  6E05               	movwf	_outPipes+4,c	;volatile
 35300                           
 35301                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 35302  00EDDC  B662               	btfsc	3938,3,c	;volatile
 35303  00EDDE  D7F5               	goto	i2l147
 35304                           
 35305                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 35306  00EDE0  0E01               	movlw	1
 35307  00EDE2  0101               	movlb	1	; () banked
 35308  00EDE4  6F75               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 35309                           
 35310                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 35311  00EDE6  0E01               	movlw	1
 35312  00EDE8  6F74               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 35313                           
 35314                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 35315  00EDEA  0E00               	movlw	0
 35316  00EDEC  6F73               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 35317                           
 35318                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 35319  00EDEE  0E00               	movlw	0
 35320  00EDF0  6F72               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 35321                           
 35322                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 35323  00EDF2  0E00               	movlw	0
 35324  00EDF4  6F77               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 35325                           
 35326                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 35327  00EDF6  0E00               	movlw	0
 35328  00EDF8  6E36               	movwf	i2USBDeviceInit@i,c
 35329  00EDFA                     i2l15001:
 35330                           
 35331                           ; BSR set to: 1
 35332  00EDFA  0E02               	movlw	2
 35333  00EDFC  6436               	cpfsgt	i2USBDeviceInit@i,c
 35334  00EDFE  D001               	goto	i2l149
 35335  00EE00  D02E               	goto	i2u1396_40
 35336  00EE02                     i2l149:
 35337                           
 35338                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 35339                           
 35340                           ; BSR set to: 1
 35341  00EE02  5036               	movf	i2USBDeviceInit@i,w,c
 35342  00EE04  0D02               	mullw	2
 35343  00EE06  0E10               	movlw	low _pBDTEntryIn
 35344  00EE08  24F3               	addwf	prodl,w,c
 35345  00EE0A  6ED9               	movwf	fsr2l,c
 35346  00EE0C  0E00               	movlw	high _pBDTEntryIn
 35347  00EE0E  20F4               	addwfc	prodh,w,c
 35348  00EE10  6EDA               	movwf	fsr2h,c
 35349  00EE12  0E00               	movlw	0
 35350  00EE14  6EDE               	movwf	postinc2,c
 35351  00EE16  0E00               	movlw	0
 35352  00EE18  6EDD               	movwf	postdec2,c
 35353                           
 35354                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 35355  00EE1A  5036               	movf	i2USBDeviceInit@i,w,c
 35356  00EE1C  0D02               	mullw	2
 35357  00EE1E  0E31               	movlw	low _pBDTEntryOut
 35358  00EE20  24F3               	addwf	prodl,w,c
 35359  00EE22  6ED9               	movwf	fsr2l,c
 35360  00EE24  0E01               	movlw	high _pBDTEntryOut
 35361  00EE26  20F4               	addwfc	prodh,w,c
 35362  00EE28  6EDA               	movwf	fsr2h,c
 35363  00EE2A  0E00               	movlw	0
 35364  00EE2C  6EDE               	movwf	postinc2,c
 35365  00EE2E  0E00               	movlw	0
 35366  00EE30  6EDD               	movwf	postdec2,c
 35367                           
 35368                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 35369  00EE32  5036               	movf	i2USBDeviceInit@i,w,c
 35370  00EE34  0D01               	mullw	1
 35371  00EE36  0E58               	movlw	low _ep_data_in
 35372  00EE38  24F3               	addwf	prodl,w,c
 35373  00EE3A  6ED9               	movwf	fsr2l,c
 35374  00EE3C  0E01               	movlw	high _ep_data_in
 35375  00EE3E  20F4               	addwfc	prodh,w,c
 35376  00EE40  6EDA               	movwf	fsr2h,c
 35377  00EE42  0E00               	movlw	0
 35378  00EE44  6EDF               	movwf	indf2,c
 35379                           
 35380                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 35381  00EE46  5036               	movf	i2USBDeviceInit@i,w,c
 35382  00EE48  0D01               	mullw	1
 35383  00EE4A  0E55               	movlw	low _ep_data_out
 35384  00EE4C  24F3               	addwf	prodl,w,c
 35385  00EE4E  6ED9               	movwf	fsr2l,c
 35386  00EE50  0E01               	movlw	high _ep_data_out
 35387  00EE52  20F4               	addwfc	prodh,w,c
 35388  00EE54  6EDA               	movwf	fsr2h,c
 35389  00EE56  0E00               	movlw	0
 35390  00EE58  6EDF               	movwf	indf2,c
 35391  00EE5A  2A36               	incf	i2USBDeviceInit@i,f,c
 35392  00EE5C  D7CE               	goto	i2l15001
 35393  00EE5E                     i2u1396_40:
 35394                           
 35395                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 35396  00EE5E  0E08               	movlw	8
 35397  00EE60  6E10               	movwf	_pBDTEntryIn,c
 35398  00EE62  0E0D               	movlw	13
 35399  00EE64  6E11               	movwf	_pBDTEntryIn+1,c
 35400                           
 35401                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 35402  00EE66  0E16               	movlw	22
 35403  00EE68  010F               	movlb	15	; () banked
 35404  00EE6A  6F26               	movwf	38,b	;volatile
 35405                           
 35406                           ; BSR set to: 15
 35407                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 35408  00EE6C  0E0D               	movlw	13
 35409  00EE6E  010D               	movlb	13	; () banked
 35410  00EE70  6F03               	movwf	3,b	;volatile
 35411  00EE72  0E30               	movlw	48
 35412  00EE74  6F02               	movwf	2,b	;volatile
 35413                           
 35414                           ; BSR set to: 13
 35415                           ;usb_device.c: 359: BDT[0].CNT = 8;
 35416  00EE76  0E08               	movlw	8
 35417  00EE78  6F01               	movwf	1,b	;volatile
 35418                           
 35419                           ; BSR set to: 13
 35420                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 35421  00EE7A  0E04               	movlw	4
 35422  00EE7C  6F00               	movwf	0,b	;volatile
 35423                           
 35424                           ; BSR set to: 13
 35425                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 35426  00EE7E  8F00               	bsf	0,7,b	;volatile
 35427                           
 35428                           ; BSR set to: 13
 35429                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 35430  00EE80  0E00               	movlw	0
 35431  00EE82  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 35432                           
 35433                           ; BSR set to: 13
 35434                           ;usb_device.c: 366: USB1msTickCount = 0;
 35435  00EE84  0E00               	movlw	0
 35436  00EE86  0101               	movlb	1	; () banked
 35437  00EE88  6F4B               	movwf	_USB1msTickCount& (0+255),b	;volatile
 35438  00EE8A  0E00               	movlw	0
 35439  00EE8C  6F4C               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 35440  00EE8E  0E00               	movlw	0
 35441  00EE90  6F4D               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 35442  00EE92  0E00               	movlw	0
 35443  00EE94  6F4E               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 35444                           
 35445                           ; BSR set to: 1
 35446                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 35447  00EE96  0E00               	movlw	0
 35448  00EE98  6F71               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 35449                           
 35450                           ; BSR set to: 1
 35451                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 35452  00EE9A  0E00               	movlw	0
 35453  00EE9C  6E2B               	movwf	_USBDeviceState,c	;volatile
 35454                           
 35455                           ; BSR set to: 1
 35456  00EE9E  0012               	return		;funcret
 35457  00EEA0                     __end_ofi2_USBDeviceInit:
 35458                           	opt stack 0
 35459                           tosu	equ	0xFFF
 35460                           tosh	equ	0xFFE
 35461                           tosl	equ	0xFFD
 35462                           pclatu	equ	0xFFB
 35463                           pclath	equ	0xFFA
 35464                           tblptru	equ	0xFF8
 35465                           tblptrh	equ	0xFF7
 35466                           tblptrl	equ	0xFF6
 35467                           tablat	equ	0xFF5
 35468                           prodh	equ	0xFF4
 35469                           prodl	equ	0xFF3
 35470                           intcon	equ	0xFF2
 35471                           indf0	equ	0xFEF
 35472                           postinc0	equ	0xFEE
 35473                           fsr0h	equ	0xFEA
 35474                           fsr0l	equ	0xFE9
 35475                           wreg	equ	0xFE8
 35476                           indf1	equ	0xFE7
 35477                           postdec1	equ	0xFE5
 35478                           plusw1	equ	0xFE3
 35479                           fsr1h	equ	0xFE2
 35480                           fsr1l	equ	0xFE1
 35481                           indf2	equ	0xFDF
 35482                           postinc2	equ	0xFDE
 35483                           postdec2	equ	0xFDD
 35484                           plusw2	equ	0xFDB
 35485                           fsr2h	equ	0xFDA
 35486                           fsr2l	equ	0xFD9
 35487                           status	equ	0xFD8
 35488                           
 35489 ;; *************** function _USBWakeFromSuspend *****************
 35490 ;; Defined at:
 35491 ;;		line 2305 in file "usb_device.c"
 35492 ;; Parameters:    Size  Location     Type
 35493 ;;		None
 35494 ;; Auto vars:     Size  Location     Type
 35495 ;;		None
 35496 ;; Return value:  Size  Location     Type
 35497 ;;                  1    wreg      void 
 35498 ;; Registers used:
 35499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35500 ;; Tracked objects:
 35501 ;;		On entry : 0/0
 35502 ;;		On exit  : 0/0
 35503 ;;		Unchanged: 0/0
 35504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35509 ;;Total ram usage:        0 bytes
 35510 ;; Hardware stack levels used:    1
 35511 ;; Hardware stack levels required when called:    4
 35512 ;; This function calls:
 35513 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35514 ;; This function is called by:
 35515 ;;		_USBDeviceTasks
 35516 ;; This function uses a non-reentrant model
 35517 ;;
 35518                           
 35519                           	psect	text128
 35520  012604                     __ptext128:
 35521                           	opt stack 0
 35522  012604                     _USBWakeFromSuspend:
 35523                           	opt stack 12
 35524                           
 35525                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 35526                           
 35527                           ; BSR set to: 1
 35528                           ;incstack = 0
 35529  012604  0E00               	movlw	0
 35530  012606  0101               	movlb	1	; () banked
 35531  012608  6F77               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 35532                           
 35533                           ; BSR set to: 1
 35534                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 35535  01260A  0E00               	movlw	0
 35536  01260C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35537  01260E  0E74               	movlw	116
 35538  012610  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35539  012612  0E00               	movlw	0
 35540  012614  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35541  012616  0E00               	movlw	0
 35542  012618  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35543  01261A  0E00               	movlw	0
 35544  01261C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35545  01261E  0E00               	movlw	0
 35546  012620  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35547  012622  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35548                           
 35549                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 35550  012626  9265               	bcf	3941,1,c	;volatile
 35551                           
 35552                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 35553  012628  010F               	movlb	15	; () banked
 35554  01262A  9536               	bcf	54,2,b	;volatile
 35555                           
 35556                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 35557  01262C  D001               	goto	i2l315
 35558  01262E                     
 35559                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 35560                           
 35561                           ; BSR set to: 15
 35562  01262E  9462               	bcf	3938,2,c	;volatile
 35563  012630                     i2l315:
 35564  012630  B462               	btfsc	3938,2,c	;volatile
 35565  012632  D7FD               	goto	i2l316
 35566                           
 35567                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 35568  012634  0E00               	movlw	0
 35569  012636  0101               	movlb	1	; () banked
 35570  012638  6F71               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 35571                           
 35572                           ; BSR set to: 1
 35573  01263A  0012               	return		;funcret
 35574  01263C                     __end_of_USBWakeFromSuspend:
 35575                           	opt stack 0
 35576                           tosu	equ	0xFFF
 35577                           tosh	equ	0xFFE
 35578                           tosl	equ	0xFFD
 35579                           pclatu	equ	0xFFB
 35580                           pclath	equ	0xFFA
 35581                           tblptru	equ	0xFF8
 35582                           tblptrh	equ	0xFF7
 35583                           tblptrl	equ	0xFF6
 35584                           tablat	equ	0xFF5
 35585                           prodh	equ	0xFF4
 35586                           prodl	equ	0xFF3
 35587                           intcon	equ	0xFF2
 35588                           indf0	equ	0xFEF
 35589                           postinc0	equ	0xFEE
 35590                           fsr0h	equ	0xFEA
 35591                           fsr0l	equ	0xFE9
 35592                           wreg	equ	0xFE8
 35593                           indf1	equ	0xFE7
 35594                           postdec1	equ	0xFE5
 35595                           plusw1	equ	0xFE3
 35596                           fsr1h	equ	0xFE2
 35597                           fsr1l	equ	0xFE1
 35598                           indf2	equ	0xFDF
 35599                           postinc2	equ	0xFDE
 35600                           postdec2	equ	0xFDD
 35601                           plusw2	equ	0xFDB
 35602                           fsr2h	equ	0xFDA
 35603                           fsr2l	equ	0xFD9
 35604                           status	equ	0xFD8
 35605                           
 35606 ;; *************** function _USBSuspend *****************
 35607 ;; Defined at:
 35608 ;;		line 2247 in file "usb_device.c"
 35609 ;; Parameters:    Size  Location     Type
 35610 ;;		None
 35611 ;; Auto vars:     Size  Location     Type
 35612 ;;		None
 35613 ;; Return value:  Size  Location     Type
 35614 ;;                  1    wreg      void 
 35615 ;; Registers used:
 35616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35617 ;; Tracked objects:
 35618 ;;		On entry : 0/0
 35619 ;;		On exit  : 0/0
 35620 ;;		Unchanged: 0/0
 35621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35626 ;;Total ram usage:        0 bytes
 35627 ;; Hardware stack levels used:    1
 35628 ;; Hardware stack levels required when called:    4
 35629 ;; This function calls:
 35630 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35631 ;; This function is called by:
 35632 ;;		_USBDeviceTasks
 35633 ;; This function uses a non-reentrant model
 35634 ;;
 35635                           
 35636                           	psect	text129
 35637  0127A8                     __ptext129:
 35638                           	opt stack 0
 35639  0127A8                     _USBSuspend:
 35640                           	opt stack 12
 35641                           
 35642                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 35643                           
 35644                           ; BSR set to: 1
 35645                           ;incstack = 0
 35646  0127A8  010F               	movlb	15	; () banked
 35647  0127AA  8536               	bsf	54,2,b	;volatile
 35648                           
 35649                           ; BSR set to: 15
 35650                           ;usb_device.c: 2273: (UIR &= 0xEF);
 35651  0127AC  9862               	bcf	3938,4,c	;volatile
 35652                           
 35653                           ; BSR set to: 15
 35654                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 35655  0127AE  8265               	bsf	3941,1,c	;volatile
 35656                           
 35657                           ; BSR set to: 15
 35658                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 35659  0127B0  0E01               	movlw	1
 35660  0127B2  0101               	movlb	1	; () banked
 35661  0127B4  6F77               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 35662                           
 35663                           ; BSR set to: 1
 35664                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 35665  0127B6  0E00               	movlw	0
 35666  0127B8  6F71               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 35667                           
 35668                           ; BSR set to: 1
 35669                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 35670  0127BA  0E00               	movlw	0
 35671  0127BC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35672  0127BE  0E75               	movlw	117
 35673  0127C0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35674  0127C2  0E00               	movlw	0
 35675  0127C4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35676  0127C6  0E00               	movlw	0
 35677  0127C8  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35678  0127CA  0E00               	movlw	0
 35679  0127CC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35680  0127CE  0E00               	movlw	0
 35681  0127D0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35682  0127D2  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35683  0127D6  0012               	return		;funcret
 35684  0127D8                     __end_of_USBSuspend:
 35685                           	opt stack 0
 35686                           tosu	equ	0xFFF
 35687                           tosh	equ	0xFFE
 35688                           tosl	equ	0xFFD
 35689                           pclatu	equ	0xFFB
 35690                           pclath	equ	0xFFA
 35691                           tblptru	equ	0xFF8
 35692                           tblptrh	equ	0xFF7
 35693                           tblptrl	equ	0xFF6
 35694                           tablat	equ	0xFF5
 35695                           prodh	equ	0xFF4
 35696                           prodl	equ	0xFF3
 35697                           intcon	equ	0xFF2
 35698                           indf0	equ	0xFEF
 35699                           postinc0	equ	0xFEE
 35700                           fsr0h	equ	0xFEA
 35701                           fsr0l	equ	0xFE9
 35702                           wreg	equ	0xFE8
 35703                           indf1	equ	0xFE7
 35704                           postdec1	equ	0xFE5
 35705                           plusw1	equ	0xFE3
 35706                           fsr1h	equ	0xFE2
 35707                           fsr1l	equ	0xFE1
 35708                           indf2	equ	0xFDF
 35709                           postinc2	equ	0xFDE
 35710                           postdec2	equ	0xFDD
 35711                           plusw2	equ	0xFDB
 35712                           fsr2h	equ	0xFDA
 35713                           fsr2l	equ	0xFD9
 35714                           status	equ	0xFD8
 35715                           
 35716 ;; *************** function _USBStallHandler *****************
 35717 ;; Defined at:
 35718 ;;		line 2204 in file "usb_device.c"
 35719 ;; Parameters:    Size  Location     Type
 35720 ;;		None
 35721 ;; Auto vars:     Size  Location     Type
 35722 ;;		None
 35723 ;; Return value:  Size  Location     Type
 35724 ;;                  1    wreg      void 
 35725 ;; Registers used:
 35726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35727 ;; Tracked objects:
 35728 ;;		On entry : 0/0
 35729 ;;		On exit  : 0/0
 35730 ;;		Unchanged: 0/0
 35731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35736 ;;Total ram usage:        1 bytes
 35737 ;; Hardware stack levels used:    1
 35738 ;; This function calls:
 35739 ;;		Nothing
 35740 ;; This function is called by:
 35741 ;;		_USBDeviceTasks
 35742 ;; This function uses a non-reentrant model
 35743 ;;
 35744                           
 35745                           	psect	text130
 35746  0123E6                     __ptext130:
 35747                           	opt stack 0
 35748  0123E6                     _USBStallHandler:
 35749                           	opt stack 16
 35750                           
 35751                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 35752                           
 35753                           ;incstack = 0
 35754  0123E6  010F               	movlb	15	; () banked
 35755  0123E8  A126               	btfss	38,0,b	;volatile
 35756  0123EA  D01D               	goto	i2l307
 35757                           
 35758                           ; BSR set to: 15
 35759                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 35760  0123EC  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 35761  0123F0  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 35762  0123F4  0E80               	movlw	128
 35763  0123F6  18DE               	xorwf	postinc2,w,c
 35764  0123F8  A4D8               	btfss	status,2,c
 35765  0123FA  D014               	goto	i2l308
 35766                           
 35767                           ; BSR set to: 15
 35768  0123FC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35769  012400  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35770  012404  0E84               	movlw	132
 35771  012406  18DE               	xorwf	postinc2,w,c
 35772  012408  A4D8               	btfss	status,2,c
 35773  01240A  D00C               	goto	i2l308
 35774                           
 35775                           ; BSR set to: 15
 35776                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 35777  01240C  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 35778  012410  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 35779  012414  0E0C               	movlw	12
 35780  012416  6EDF               	movwf	indf2,c
 35781                           
 35782                           ; BSR set to: 15
 35783                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 35784  012418  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 35785  01241C  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 35786  012420  0E00               	movlw	0
 35787  012422  8EDB               	bsf	plusw2,7,c
 35788  012424                     i2l308:
 35789                           
 35790                           ; BSR set to: 15
 35791                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 35792                           
 35793                           ; BSR set to: 15
 35794  012424  9126               	bcf	38,0,b	;volatile
 35795  012426                     i2l307:
 35796                           
 35797                           ; BSR set to: 15
 35798                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 35799  012426  9A62               	bcf	3938,5,c	;volatile
 35800                           
 35801                           ; BSR set to: 15
 35802  012428  0012               	return		;funcret
 35803  01242A                     __end_of_USBStallHandler:
 35804                           	opt stack 0
 35805                           tosu	equ	0xFFF
 35806                           tosh	equ	0xFFE
 35807                           tosl	equ	0xFFD
 35808                           pclatu	equ	0xFFB
 35809                           pclath	equ	0xFFA
 35810                           tblptru	equ	0xFF8
 35811                           tblptrh	equ	0xFF7
 35812                           tblptrl	equ	0xFF6
 35813                           tablat	equ	0xFF5
 35814                           prodh	equ	0xFF4
 35815                           prodl	equ	0xFF3
 35816                           intcon	equ	0xFF2
 35817                           indf0	equ	0xFEF
 35818                           postinc0	equ	0xFEE
 35819                           fsr0h	equ	0xFEA
 35820                           fsr0l	equ	0xFE9
 35821                           wreg	equ	0xFE8
 35822                           indf1	equ	0xFE7
 35823                           postdec1	equ	0xFE5
 35824                           plusw1	equ	0xFE3
 35825                           fsr1h	equ	0xFE2
 35826                           fsr1l	equ	0xFE1
 35827                           indf2	equ	0xFDF
 35828                           postinc2	equ	0xFDE
 35829                           postdec2	equ	0xFDD
 35830                           plusw2	equ	0xFDB
 35831                           fsr2h	equ	0xFDA
 35832                           fsr2l	equ	0xFD9
 35833                           status	equ	0xFD8
 35834                           
 35835 ;; *************** function _USBIncrement1msInternalTimers *****************
 35836 ;; Defined at:
 35837 ;;		line 3027 in file "usb_device.c"
 35838 ;; Parameters:    Size  Location     Type
 35839 ;;		None
 35840 ;; Auto vars:     Size  Location     Type
 35841 ;;		None
 35842 ;; Return value:  Size  Location     Type
 35843 ;;                  1    wreg      void 
 35844 ;; Registers used:
 35845 ;;		wreg, status,2, status,0
 35846 ;; Tracked objects:
 35847 ;;		On entry : 0/0
 35848 ;;		On exit  : 0/0
 35849 ;;		Unchanged: 0/0
 35850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35855 ;;Total ram usage:        0 bytes
 35856 ;; Hardware stack levels used:    1
 35857 ;; This function calls:
 35858 ;;		Nothing
 35859 ;; This function is called by:
 35860 ;;		_USBDeviceTasks
 35861 ;; This function uses a non-reentrant model
 35862 ;;
 35863                           
 35864                           	psect	text131
 35865  0129B6                     __ptext131:
 35866                           	opt stack 0
 35867  0129B6                     _USBIncrement1msInternalTimers:
 35868                           	opt stack 16
 35869                           
 35870                           ;usb_device.c: 3035: USB1msTickCount++;
 35871                           
 35872                           ; BSR set to: 15
 35873                           ;incstack = 0
 35874  0129B6  0E01               	movlw	1
 35875  0129B8  0101               	movlb	1	; () banked
 35876  0129BA  274B               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 35877  0129BC  0E00               	movlw	0
 35878  0129BE  234C               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 35879  0129C0  234D               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 35880  0129C2  234E               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 35881                           
 35882                           ; BSR set to: 1
 35883                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 35884  0129C4  5177               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 35885  0129C6  A4D8               	btfss	status,2,c
 35886  0129C8  0012               	return	
 35887                           
 35888                           ; BSR set to: 1
 35889                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 35890  0129CA  2B71               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 35891                           
 35892                           ; BSR set to: 1
 35893                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 35894  0129CC  5171               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 35895  0129CE  A4D8               	btfss	status,2,c
 35896  0129D0  0012               	return	
 35897                           
 35898                           ; BSR set to: 1
 35899                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 35900  0129D2  6971               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 35901                           
 35902                           ; BSR set to: 1
 35903  0129D4  0012               	return	
 35904  0129D6                     __end_of_USBIncrement1msInternalTimers:
 35905                           	opt stack 0
 35906                           tosu	equ	0xFFF
 35907                           tosh	equ	0xFFE
 35908                           tosl	equ	0xFFD
 35909                           pclatu	equ	0xFFB
 35910                           pclath	equ	0xFFA
 35911                           tblptru	equ	0xFF8
 35912                           tblptrh	equ	0xFF7
 35913                           tblptrl	equ	0xFF6
 35914                           tablat	equ	0xFF5
 35915                           prodh	equ	0xFF4
 35916                           prodl	equ	0xFF3
 35917                           intcon	equ	0xFF2
 35918                           indf0	equ	0xFEF
 35919                           postinc0	equ	0xFEE
 35920                           fsr0h	equ	0xFEA
 35921                           fsr0l	equ	0xFE9
 35922                           wreg	equ	0xFE8
 35923                           indf1	equ	0xFE7
 35924                           postdec1	equ	0xFE5
 35925                           plusw1	equ	0xFE3
 35926                           fsr1h	equ	0xFE2
 35927                           fsr1l	equ	0xFE1
 35928                           indf2	equ	0xFDF
 35929                           postinc2	equ	0xFDE
 35930                           postdec2	equ	0xFDD
 35931                           plusw2	equ	0xFDB
 35932                           fsr2h	equ	0xFDA
 35933                           fsr2l	equ	0xFD9
 35934                           status	equ	0xFD8
 35935                           
 35936 ;; *************** function _USBCtrlEPService *****************
 35937 ;; Defined at:
 35938 ;;		line 2374 in file "usb_device.c"
 35939 ;; Parameters:    Size  Location     Type
 35940 ;;		None
 35941 ;; Auto vars:     Size  Location     Type
 35942 ;;		None
 35943 ;; Return value:  Size  Location     Type
 35944 ;;                  1    wreg      void 
 35945 ;; Registers used:
 35946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35947 ;; Tracked objects:
 35948 ;;		On entry : 0/0
 35949 ;;		On exit  : 0/0
 35950 ;;		Unchanged: 0/0
 35951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35956 ;;Total ram usage:        1 bytes
 35957 ;; Hardware stack levels used:    1
 35958 ;; Hardware stack levels required when called:    7
 35959 ;; This function calls:
 35960 ;;		_USBCtrlTrfInHandler
 35961 ;;		_USBCtrlTrfOutHandler
 35962 ;;		_USBCtrlTrfSetupHandler
 35963 ;;		i2_memcpy
 35964 ;; This function is called by:
 35965 ;;		_USBDeviceTasks
 35966 ;; This function uses a non-reentrant model
 35967 ;;
 35968                           
 35969                           	psect	text132
 35970  011346                     __ptext132:
 35971                           	opt stack 0
 35972  011346                     _USBCtrlEPService:
 35973                           	opt stack 9
 35974                           
 35975                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 35976                           
 35977                           ; BSR set to: 1
 35978                           ;incstack = 0
 35979  011346  0E2D               	movlw	45
 35980  011348  6E27               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 35981                           
 35982                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 35983  01134A  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 35984  01134E  0EFD               	movlw	253
 35985  011350  164B               	andwf	??_USBCtrlEPService,f,c
 35986  011352  A4D8               	btfss	status,2,c
 35987  011354  D03B               	goto	i2l321
 35988                           
 35989                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 35990  011356  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 35991  01135A  90D8               	bcf	status,0,c
 35992  01135C  324B               	rrcf	??_USBCtrlEPService,f,c
 35993  01135E  0E3F               	movlw	63
 35994  011360  164B               	andwf	??_USBCtrlEPService,f,c
 35995  011362  504B               	movf	??_USBCtrlEPService,w,c
 35996  011364  0D04               	mullw	4
 35997  011366  0E00               	movlw	0
 35998  011368  24F3               	addwf	prodl,w,c
 35999  01136A  6E1E               	movwf	_pBDTEntryEP0OutCurrent,c
 36000  01136C  0E0D               	movlw	13
 36001  01136E  20F4               	addwfc	prodh,w,c
 36002  011370  6E1F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 36003                           
 36004                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 36005  011372  C01E  F01C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 36006  011376  C01F  F01D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 36007                           
 36008                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 36009  01137A  0E04               	movlw	4
 36010  01137C  181C               	xorwf	_pBDTEntryEP0OutNext,w,c
 36011  01137E  6E1C               	movwf	_pBDTEntryEP0OutNext,c
 36012  011380  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36013  011382  6E1D               	movwf	_pBDTEntryEP0OutNext+1,c
 36014                           
 36015                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 36016  011384  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36017  011388  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36018  01138C  30DF               	rrcf	indf2,w,c
 36019  01138E  32E8               	rrcf	wreg,f,c
 36020  011390  0B0F               	andlw	15
 36021  011392  0A0D               	xorlw	13
 36022  011394  A4D8               	btfss	status,2,c
 36023  011396  D017               	goto	i2l322
 36024                           
 36025                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 36026  011398  0E30               	movlw	48
 36027  01139A  6E2E               	movwf	i2memcpy@d1,c
 36028  01139C  0E0D               	movlw	13
 36029  01139E  6E2F               	movwf	i2memcpy@d1+1,c
 36030  0113A0  EE20 F002          	lfsr	2,2
 36031  0113A4  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 36032  0113A6  26D9               	addwf	fsr2l,f,c
 36033  0113A8  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36034  0113AA  22DA               	addwfc	fsr2h,f,c
 36035  0113AC  CFDE F030          	movff	postinc2,i2memcpy@s1
 36036  0113B0  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 36037  0113B4  0E00               	movlw	0
 36038  0113B6  6E33               	movwf	i2memcpy@n+1,c
 36039  0113B8  0E08               	movlw	8
 36040  0113BA  6E32               	movwf	i2memcpy@n,c
 36041  0113BC  EC77  F08E         	call	i2_memcpy	;wreg free
 36042                           
 36043                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 36044  0113C0  ECCA  F08A         	call	_USBCtrlTrfSetupHandler	;wreg free
 36045                           
 36046                           ;usb_device.c: 2411: }
 36047  0113C4  0012               	return	
 36048  0113C6                     i2l322:
 36049                           
 36050                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 36051  0113C6  EC48  F08E         	call	_USBCtrlTrfOutHandler	;wreg free
 36052                           
 36053                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 36054  0113CA  0012               	return	
 36055  0113CC                     i2l321:
 36056                           
 36057                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 36058  0113CC  502C               	movf	_USTATcopy,w,c	;volatile
 36059  0113CE  0BFD               	andlw	253
 36060  0113D0  0A04               	xorlw	4
 36061  0113D2  A4D8               	btfss	status,2,c
 36062  0113D4  0012               	return	
 36063                           
 36064                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 36065  0113D6  ECAF  F085         	call	_USBCtrlTrfInHandler	;wreg free
 36066  0113DA  0012               	return	
 36067  0113DC                     __end_of_USBCtrlEPService:
 36068                           	opt stack 0
 36069                           tosu	equ	0xFFF
 36070                           tosh	equ	0xFFE
 36071                           tosl	equ	0xFFD
 36072                           pclatu	equ	0xFFB
 36073                           pclath	equ	0xFFA
 36074                           tblptru	equ	0xFF8
 36075                           tblptrh	equ	0xFF7
 36076                           tblptrl	equ	0xFF6
 36077                           tablat	equ	0xFF5
 36078                           prodh	equ	0xFF4
 36079                           prodl	equ	0xFF3
 36080                           intcon	equ	0xFF2
 36081                           indf0	equ	0xFEF
 36082                           postinc0	equ	0xFEE
 36083                           fsr0h	equ	0xFEA
 36084                           fsr0l	equ	0xFE9
 36085                           wreg	equ	0xFE8
 36086                           indf1	equ	0xFE7
 36087                           postdec1	equ	0xFE5
 36088                           plusw1	equ	0xFE3
 36089                           fsr1h	equ	0xFE2
 36090                           fsr1l	equ	0xFE1
 36091                           indf2	equ	0xFDF
 36092                           postinc2	equ	0xFDE
 36093                           postdec2	equ	0xFDD
 36094                           plusw2	equ	0xFDB
 36095                           fsr2h	equ	0xFDA
 36096                           fsr2l	equ	0xFD9
 36097                           status	equ	0xFD8
 36098                           
 36099 ;; *************** function i2_memcpy *****************
 36100 ;; Defined at:
 36101 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 36102 ;; Parameters:    Size  Location     Type
 36103 ;;  d1              2    0[COMRAM] PTR void 
 36104 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 36105 ;;		 -> msd_buffer(512), SetupPkt(8), 
 36106 ;;  s1              2    2[COMRAM] PTR const void 
 36107 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 36108 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 36109 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 36110 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 36111 ;;		 -> dc_main(80), ReceivedDataBuffer(64), config(22), os(45), 
 36112 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 36113 ;;  n               2    4[COMRAM] unsigned int 
 36114 ;; Auto vars:     Size  Location     Type
 36115 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 36116 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 36117 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 36118 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 36119 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 36120 ;;		 -> dc_main(80), ReceivedDataBuffer(64), config(22), os(45), 
 36121 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 36122 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 36123 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 36124 ;;		 -> msd_buffer(512), SetupPkt(8), 
 36125 ;;  memcpy          1   10[COMRAM] unsigned char 
 36126 ;; Return value:  Size  Location     Type
 36127 ;;                  2    0[COMRAM] PTR void 
 36128 ;; Registers used:
 36129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36130 ;; Tracked objects:
 36131 ;;		On entry : 0/0
 36132 ;;		On exit  : 0/0
 36133 ;;		Unchanged: 0/0
 36134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36135 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36136 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36138 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36139 ;;Total ram usage:       11 bytes
 36140 ;; Hardware stack levels used:    1
 36141 ;; This function calls:
 36142 ;;		Nothing
 36143 ;; This function is called by:
 36144 ;;		_USBCtrlEPService
 36145 ;; This function uses a non-reentrant model
 36146 ;;
 36147                           
 36148                           	psect	text133
 36149  011CEE                     __ptext133:
 36150                           	opt stack 0
 36151  011CEE                     i2_memcpy:
 36152                           	opt stack 15
 36153                           
 36154                           ;incstack = 0
 36155  011CEE  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 36156  011CF2  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 36157  011CF6  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 36158  011CFA  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 36159  011CFE  D01C               	goto	i2l3373
 36160  011D00                     i2l14115:
 36161  011D00  C036  FFF6         	movff	i2memcpy@s,tblptrl
 36162  011D04  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 36163  011D08  0E00               	movlw	low (__mediumconst shr (0+16))
 36164  011D0A  6EF8               	movwf	tblptru,c
 36165  011D0C  0E0E               	movlw	(high __ramtop+-1)
 36166  011D0E  64F7               	cpfsgt	tblptrh,c
 36167  011D10  D003               	bra	i2u1273_47
 36168  011D12  0008               	tblrd		*
 36169  011D14  50F5               	movf	tablat,w,c
 36170  011D16  D005               	bra	i2u1273_40
 36171  011D18                     i2u1273_47:
 36172  011D18  CFF6 FFE9          	movff	tblptrl,fsr0l
 36173  011D1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 36174  011D20  50EF               	movf	indf0,w,c
 36175  011D22                     i2u1273_40:
 36176  011D22  6E38               	movwf	i2memcpy@tmp,c
 36177  011D24  4A36               	infsnz	i2memcpy@s,f,c
 36178  011D26  2A37               	incf	i2memcpy@s+1,f,c
 36179  011D28  C034  FFD9         	movff	i2memcpy@d,fsr2l
 36180  011D2C  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 36181  011D30  C038  FFDF         	movff	i2memcpy@tmp,indf2
 36182  011D34  4A34               	infsnz	i2memcpy@d,f,c
 36183  011D36  2A35               	incf	i2memcpy@d+1,f,c
 36184  011D38                     i2l3373:
 36185  011D38  0632               	decf	i2memcpy@n,f,c
 36186  011D3A  A0D8               	btfss	status,0,c
 36187  011D3C  0633               	decf	i2memcpy@n+1,f,c
 36188  011D3E  2832               	incf	i2memcpy@n,w,c
 36189  011D40  E1DF               	bnz	i2l14115
 36190  011D42  2833               	incf	i2memcpy@n+1,w,c
 36191  011D44  B4D8               	btfsc	status,2,c
 36192  011D46  0012               	return	
 36193  011D48  D7DB               	goto	i2l3374
 36194  011D4A                     __end_ofi2_memcpy:
 36195                           	opt stack 0
 36196                           tosu	equ	0xFFF
 36197                           tosh	equ	0xFFE
 36198                           tosl	equ	0xFFD
 36199                           pclatu	equ	0xFFB
 36200                           pclath	equ	0xFFA
 36201                           tblptru	equ	0xFF8
 36202                           tblptrh	equ	0xFF7
 36203                           tblptrl	equ	0xFF6
 36204                           tablat	equ	0xFF5
 36205                           prodh	equ	0xFF4
 36206                           prodl	equ	0xFF3
 36207                           intcon	equ	0xFF2
 36208                           indf0	equ	0xFEF
 36209                           postinc0	equ	0xFEE
 36210                           fsr0h	equ	0xFEA
 36211                           fsr0l	equ	0xFE9
 36212                           wreg	equ	0xFE8
 36213                           indf1	equ	0xFE7
 36214                           postdec1	equ	0xFE5
 36215                           plusw1	equ	0xFE3
 36216                           fsr1h	equ	0xFE2
 36217                           fsr1l	equ	0xFE1
 36218                           indf2	equ	0xFDF
 36219                           postinc2	equ	0xFDE
 36220                           postdec2	equ	0xFDD
 36221                           plusw2	equ	0xFDB
 36222                           fsr2h	equ	0xFDA
 36223                           fsr2l	equ	0xFD9
 36224                           status	equ	0xFD8
 36225                           
 36226 ;; *************** function _USBCtrlTrfSetupHandler *****************
 36227 ;; Defined at:
 36228 ;;		line 2467 in file "usb_device.c"
 36229 ;; Parameters:    Size  Location     Type
 36230 ;;		None
 36231 ;; Auto vars:     Size  Location     Type
 36232 ;;		None
 36233 ;; Return value:  Size  Location     Type
 36234 ;;                  1    wreg      void 
 36235 ;; Registers used:
 36236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36237 ;; Tracked objects:
 36238 ;;		On entry : 0/0
 36239 ;;		On exit  : 0/0
 36240 ;;		Unchanged: 0/0
 36241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36246 ;;Total ram usage:        0 bytes
 36247 ;; Hardware stack levels used:    1
 36248 ;; Hardware stack levels required when called:    6
 36249 ;; This function calls:
 36250 ;;		_USBCheckStdRequest
 36251 ;;		_USBCtrlEPServiceComplete
 36252 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36253 ;; This function is called by:
 36254 ;;		_USBCtrlEPService
 36255 ;; This function uses a non-reentrant model
 36256 ;;
 36257                           
 36258                           	psect	text134
 36259  011594                     __ptext134:
 36260                           	opt stack 0
 36261  011594                     _USBCtrlTrfSetupHandler:
 36262                           	opt stack 9
 36263                           
 36264                           ;usb_device.c: 2472: shortPacketStatus = 0;
 36265                           
 36266                           ;incstack = 0
 36267  011594  0E00               	movlw	0
 36268  011596  6E2A               	movwf	_shortPacketStatus,c	;volatile
 36269                           
 36270                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 36271  011598  0E00               	movlw	0
 36272  01159A  6E26               	movwf	_USBDeferStatusStagePacket,c	;volatile
 36273                           
 36274                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 36275  01159C  0E00               	movlw	0
 36276  01159E  0101               	movlb	1	; () banked
 36277  0115A0  6F73               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 36278                           
 36279                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 36280  0115A2  0E00               	movlw	0
 36281  0115A4  6F72               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 36282                           
 36283                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 36284  0115A6  0E00               	movlw	0
 36285  0115A8  6F76               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 36286                           
 36287                           ;usb_device.c: 2477: controlTransferState = 0;
 36288  0115AA  0E00               	movlw	0
 36289  0115AC  6E29               	movwf	_controlTransferState,c	;volatile
 36290                           
 36291                           ; BSR set to: 1
 36292                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 36293  0115AE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 36294  0115B2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36295  0115B6  0E7F               	movlw	127
 36296  0115B8  16DF               	andwf	indf2,f,c
 36297                           
 36298                           ; BSR set to: 1
 36299                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 36300  0115BA  0E04               	movlw	4
 36301  0115BC  1810               	xorwf	_pBDTEntryIn,w,c
 36302  0115BE  6E10               	movwf	_pBDTEntryIn,c
 36303  0115C0  5011               	movf	_pBDTEntryIn+1,w,c
 36304  0115C2  6E11               	movwf	_pBDTEntryIn+1,c
 36305                           
 36306                           ; BSR set to: 1
 36307                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 36308  0115C4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 36309  0115C8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36310  0115CC  0E7F               	movlw	127
 36311  0115CE  16DF               	andwf	indf2,f,c
 36312                           
 36313                           ; BSR set to: 1
 36314                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 36315  0115D0  0E04               	movlw	4
 36316  0115D2  1810               	xorwf	_pBDTEntryIn,w,c
 36317  0115D4  6E10               	movwf	_pBDTEntryIn,c
 36318  0115D6  5011               	movf	_pBDTEntryIn+1,w,c
 36319  0115D8  6E11               	movwf	_pBDTEntryIn+1,c
 36320                           
 36321                           ; BSR set to: 1
 36322                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 36323  0115DA  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36324  0115DE  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36325  0115E2  0E7F               	movlw	127
 36326  0115E4  16DF               	andwf	indf2,f,c
 36327                           
 36328                           ; BSR set to: 1
 36329                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 36330  0115E6  0E00               	movlw	0
 36331  0115E8  6E0D               	movwf	_inPipes+3,c	;volatile
 36332                           
 36333                           ; BSR set to: 1
 36334                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 36335  0115EA  0E00               	movlw	0
 36336  0115EC  6E0F               	movwf	_inPipes+5,c	;volatile
 36337  0115EE  0E00               	movlw	0
 36338  0115F0  6E0E               	movwf	_inPipes+4,c	;volatile
 36339                           
 36340                           ; BSR set to: 1
 36341                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 36342  0115F2  0E00               	movlw	0
 36343  0115F4  6E04               	movwf	_outPipes+3,c	;volatile
 36344                           
 36345                           ; BSR set to: 1
 36346                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 36347  0115F6  0E00               	movlw	0
 36348  0115F8  6E06               	movwf	_outPipes+5,c	;volatile
 36349  0115FA  0E00               	movlw	0
 36350  0115FC  6E05               	movwf	_outPipes+4,c	;volatile
 36351                           
 36352                           ; BSR set to: 1
 36353                           ;usb_device.c: 2502: USBCheckStdRequest();
 36354  0115FE  EC7E  F082         	call	_USBCheckStdRequest	;wreg free
 36355                           
 36356                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 36357  011602  0E00               	movlw	0
 36358  011604  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 36359  011606  0E03               	movlw	3
 36360  011608  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 36361  01160A  0E00               	movlw	0
 36362  01160C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 36363  01160E  0E00               	movlw	0
 36364  011610  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 36365  011612  0E00               	movlw	0
 36366  011614  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36367  011616  0E00               	movlw	0
 36368  011618  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36369  01161A  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36370                           
 36371                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 36372  01161E  ECE5  F07E         	call	_USBCtrlEPServiceComplete	;wreg free
 36373  011622  0012               	return		;funcret
 36374  011624                     __end_of_USBCtrlTrfSetupHandler:
 36375                           	opt stack 0
 36376                           tosu	equ	0xFFF
 36377                           tosh	equ	0xFFE
 36378                           tosl	equ	0xFFD
 36379                           pclatu	equ	0xFFB
 36380                           pclath	equ	0xFFA
 36381                           tblptru	equ	0xFF8
 36382                           tblptrh	equ	0xFF7
 36383                           tblptrl	equ	0xFF6
 36384                           tablat	equ	0xFF5
 36385                           prodh	equ	0xFF4
 36386                           prodl	equ	0xFF3
 36387                           intcon	equ	0xFF2
 36388                           indf0	equ	0xFEF
 36389                           postinc0	equ	0xFEE
 36390                           fsr0h	equ	0xFEA
 36391                           fsr0l	equ	0xFE9
 36392                           wreg	equ	0xFE8
 36393                           indf1	equ	0xFE7
 36394                           postdec1	equ	0xFE5
 36395                           plusw1	equ	0xFE3
 36396                           fsr1h	equ	0xFE2
 36397                           fsr1l	equ	0xFE1
 36398                           indf2	equ	0xFDF
 36399                           postinc2	equ	0xFDE
 36400                           postdec2	equ	0xFDD
 36401                           plusw2	equ	0xFDB
 36402                           fsr2h	equ	0xFDA
 36403                           fsr2l	equ	0xFD9
 36404                           status	equ	0xFD8
 36405                           
 36406 ;; *************** function _USBCtrlEPServiceComplete *****************
 36407 ;; Defined at:
 36408 ;;		line 1618 in file "usb_device.c"
 36409 ;; Parameters:    Size  Location     Type
 36410 ;;		None
 36411 ;; Auto vars:     Size  Location     Type
 36412 ;;		None
 36413 ;; Return value:  Size  Location     Type
 36414 ;;                  1    wreg      void 
 36415 ;; Registers used:
 36416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36417 ;; Tracked objects:
 36418 ;;		On entry : 0/0
 36419 ;;		On exit  : 0/0
 36420 ;;		Unchanged: 0/0
 36421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36426 ;;Total ram usage:        0 bytes
 36427 ;; Hardware stack levels used:    1
 36428 ;; Hardware stack levels required when called:    2
 36429 ;; This function calls:
 36430 ;;		_USBCtrlEPAllowDataStage
 36431 ;;		_USBCtrlEPAllowStatusStage
 36432 ;; This function is called by:
 36433 ;;		_USBCtrlTrfSetupHandler
 36434 ;; This function uses a non-reentrant model
 36435 ;;
 36436                           
 36437                           	psect	text135
 36438  00FDCA                     __ptext135:
 36439                           	opt stack 0
 36440  00FDCA                     _USBCtrlEPServiceComplete:
 36441                           	opt stack 12
 36442                           
 36443                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 36444                           
 36445                           ;incstack = 0
 36446  00FDCA  9865               	bcf	3941,4,c	;volatile
 36447                           
 36448                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 36449  00FDCC  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 36450  00FDCE  D03A               	goto	i2l231
 36451                           
 36452                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 36453  00FDD0  AE04               	btfss	_outPipes+3,7,c	;volatile
 36454  00FDD2  D00D               	goto	i2l232
 36455                           
 36456                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 36457  00FDD4  0E02               	movlw	2
 36458  00FDD6  6E29               	movwf	_controlTransferState,c	;volatile
 36459                           
 36460                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 36461  00FDD8  0101               	movlb	1	; () banked
 36462  00FDDA  5172               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 36463  00FDDC  B4D8               	btfsc	status,2,c
 36464                           
 36465                           ; BSR set to: 1
 36466                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 36467  00FDDE  EC57  F089         	call	_USBCtrlEPAllowDataStage	;wreg free
 36468                           
 36469                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 36470  00FDE2  0E00               	movlw	0
 36471  00FDE4  0101               	movlb	1	; () banked
 36472  00FDE6  6F74               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 36473                           
 36474                           ; BSR set to: 1
 36475                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 36476  00FDE8  0E00               	movlw	0
 36477  00FDEA  6F75               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 36478                           
 36479                           ;usb_device.c: 1654: }
 36480  00FDEC  0012               	return	
 36481  00FDEE                     i2l232:
 36482                           
 36483                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 36484                           
 36485                           ; BSR set to: 1
 36486  00FDEE  EE20 F001          	lfsr	2,1
 36487  00FDF2  501C               	movf	_pBDTEntryEP0OutNext,w,c
 36488  00FDF4  26D9               	addwf	fsr2l,f,c
 36489  00FDF6  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36490  00FDF8  22DA               	addwfc	fsr2h,f,c
 36491  00FDFA  0E08               	movlw	8
 36492  00FDFC  6EDF               	movwf	indf2,c
 36493                           
 36494                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36495  00FDFE  EE20 F002          	lfsr	2,2
 36496  00FE02  501C               	movf	_pBDTEntryEP0OutNext,w,c
 36497  00FE04  26D9               	addwf	fsr2l,f,c
 36498  00FE06  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36499  00FE08  22DA               	addwfc	fsr2h,f,c
 36500  00FE0A  0E30               	movlw	48
 36501  00FE0C  6EDE               	movwf	postinc2,c
 36502  00FE0E  0E0D               	movlw	13
 36503  00FE10  6EDD               	movwf	postdec2,c
 36504                           
 36505                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36506  00FE12  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36507  00FE16  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36508  00FE1A  0E0C               	movlw	12
 36509  00FE1C  6EDF               	movwf	indf2,c
 36510                           
 36511                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36512  00FE1E  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36513  00FE22  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36514  00FE26  0E00               	movlw	0
 36515  00FE28  8EDB               	bsf	plusw2,7,c
 36516                           
 36517                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 36518  00FE2A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 36519  00FE2E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36520  00FE32  0E04               	movlw	4
 36521  00FE34  6EDF               	movwf	indf2,c
 36522                           
 36523                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36524  00FE36  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 36525  00FE3A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36526  00FE3E  0E00               	movlw	0
 36527  00FE40  8EDB               	bsf	plusw2,7,c
 36528                           
 36529                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 36530  00FE42  0012               	return	
 36531  00FE44                     i2l231:
 36532                           
 36533                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 36534  00FE44  010D               	movlb	13	; () banked
 36535  00FE46  AF30               	btfss	48,7,b	;volatile
 36536  00FE48  D012               	goto	i2l236
 36537                           
 36538                           ; BSR set to: 13
 36539                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 36540  00FE4A  0E01               	movlw	1
 36541  00FE4C  6E29               	movwf	_controlTransferState,c	;volatile
 36542                           
 36543                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 36544  00FE4E  0101               	movlb	1	; () banked
 36545  00FE50  5173               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 36546  00FE52  B4D8               	btfsc	status,2,c
 36547                           
 36548                           ; BSR set to: 1
 36549                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 36550  00FE54  EC57  F089         	call	_USBCtrlEPAllowDataStage	;wreg free
 36551                           
 36552                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 36553  00FE58  0E00               	movlw	0
 36554  00FE5A  0101               	movlb	1	; () banked
 36555  00FE5C  6F74               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 36556                           
 36557                           ; BSR set to: 1
 36558                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 36559  00FE5E  0E00               	movlw	0
 36560  00FE60  6F75               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 36561                           
 36562                           ; BSR set to: 1
 36563                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 36564  00FE62  5026               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 36565  00FE64  A4D8               	btfss	status,2,c
 36566  00FE66  0012               	return	
 36567                           
 36568                           ; BSR set to: 1
 36569                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 36570  00FE68  ECEE  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 36571                           
 36572                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 36573  00FE6C  0012               	return	
 36574  00FE6E                     i2l236:
 36575                           
 36576                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 36577  00FE6E  0E02               	movlw	2
 36578  00FE70  6E29               	movwf	_controlTransferState,c	;volatile
 36579                           
 36580                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 36581  00FE72  EE20 F001          	lfsr	2,1
 36582  00FE76  501C               	movf	_pBDTEntryEP0OutNext,w,c
 36583  00FE78  26D9               	addwf	fsr2l,f,c
 36584  00FE7A  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36585  00FE7C  22DA               	addwfc	fsr2h,f,c
 36586  00FE7E  0E08               	movlw	8
 36587  00FE80  6EDF               	movwf	indf2,c
 36588                           
 36589                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36590  00FE82  EE20 F002          	lfsr	2,2
 36591  00FE86  501C               	movf	_pBDTEntryEP0OutNext,w,c
 36592  00FE88  26D9               	addwf	fsr2l,f,c
 36593  00FE8A  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36594  00FE8C  22DA               	addwfc	fsr2h,f,c
 36595  00FE8E  0E30               	movlw	48
 36596  00FE90  6EDE               	movwf	postinc2,c
 36597  00FE92  0E0D               	movlw	13
 36598  00FE94  6EDD               	movwf	postdec2,c
 36599                           
 36600                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 36601  00FE96  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36602  00FE9A  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36603  00FE9E  0E04               	movlw	4
 36604  00FEA0  6EDF               	movwf	indf2,c
 36605                           
 36606                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36607  00FEA2  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36608  00FEA6  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36609  00FEAA  0E00               	movlw	0
 36610  00FEAC  8EDB               	bsf	plusw2,7,c
 36611                           
 36612                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 36613  00FEAE  0E00               	movlw	0
 36614  00FEB0  0101               	movlb	1	; () banked
 36615  00FEB2  6F74               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 36616                           
 36617                           ; BSR set to: 1
 36618                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 36619  00FEB4  0E00               	movlw	0
 36620  00FEB6  6F75               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 36621                           
 36622                           ; BSR set to: 1
 36623                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 36624  00FEB8  5026               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 36625  00FEBA  A4D8               	btfss	status,2,c
 36626  00FEBC  0012               	return	
 36627                           
 36628                           ; BSR set to: 1
 36629                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 36630  00FEBE  ECEE  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 36631  00FEC2  0012               	return	
 36632  00FEC4                     __end_of_USBCtrlEPServiceComplete:
 36633                           	opt stack 0
 36634                           tosu	equ	0xFFF
 36635                           tosh	equ	0xFFE
 36636                           tosl	equ	0xFFD
 36637                           pclatu	equ	0xFFB
 36638                           pclath	equ	0xFFA
 36639                           tblptru	equ	0xFF8
 36640                           tblptrh	equ	0xFF7
 36641                           tblptrl	equ	0xFF6
 36642                           tablat	equ	0xFF5
 36643                           prodh	equ	0xFF4
 36644                           prodl	equ	0xFF3
 36645                           intcon	equ	0xFF2
 36646                           indf0	equ	0xFEF
 36647                           postinc0	equ	0xFEE
 36648                           fsr0h	equ	0xFEA
 36649                           fsr0l	equ	0xFE9
 36650                           wreg	equ	0xFE8
 36651                           indf1	equ	0xFE7
 36652                           postdec1	equ	0xFE5
 36653                           plusw1	equ	0xFE3
 36654                           fsr1h	equ	0xFE2
 36655                           fsr1l	equ	0xFE1
 36656                           indf2	equ	0xFDF
 36657                           postinc2	equ	0xFDE
 36658                           postdec2	equ	0xFDD
 36659                           plusw2	equ	0xFDB
 36660                           fsr2h	equ	0xFDA
 36661                           fsr2l	equ	0xFD9
 36662                           status	equ	0xFD8
 36663                           
 36664 ;; *************** function _USBCtrlEPAllowDataStage *****************
 36665 ;; Defined at:
 36666 ;;		line 1490 in file "usb_device.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;		None
 36669 ;; Auto vars:     Size  Location     Type
 36670 ;;		None
 36671 ;; Return value:  Size  Location     Type
 36672 ;;                  1    wreg      void 
 36673 ;; Registers used:
 36674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36675 ;; Tracked objects:
 36676 ;;		On entry : 0/0
 36677 ;;		On exit  : 0/0
 36678 ;;		Unchanged: 0/0
 36679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;Total ram usage:        0 bytes
 36685 ;; Hardware stack levels used:    1
 36686 ;; Hardware stack levels required when called:    1
 36687 ;; This function calls:
 36688 ;;		_USBCtrlTrfTxService
 36689 ;; This function is called by:
 36690 ;;		_USBCtrlEPServiceComplete
 36691 ;; This function uses a non-reentrant model
 36692 ;;
 36693                           
 36694                           	psect	text136
 36695  0112AE                     __ptext136:
 36696                           	opt stack 0
 36697  0112AE                     _USBCtrlEPAllowDataStage:
 36698                           	opt stack 12
 36699                           
 36700                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 36701                           
 36702                           ;incstack = 0
 36703  0112AE  0E00               	movlw	0
 36704  0112B0  0101               	movlb	1	; () banked
 36705  0112B2  6F73               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 36706                           
 36707                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 36708  0112B4  0E00               	movlw	0
 36709  0112B6  6F72               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 36710                           
 36711                           ; BSR set to: 1
 36712                           ;usb_device.c: 1495: if(controlTransferState == 2)
 36713  0112B8  0E02               	movlw	2
 36714  0112BA  1829               	xorwf	_controlTransferState,w,c	;volatile
 36715  0112BC  A4D8               	btfss	status,2,c
 36716  0112BE  D01F               	goto	i2l220
 36717                           
 36718                           ; BSR set to: 1
 36719                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 36720  0112C0  EE20 F001          	lfsr	2,1
 36721  0112C4  501C               	movf	_pBDTEntryEP0OutNext,w,c
 36722  0112C6  26D9               	addwf	fsr2l,f,c
 36723  0112C8  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36724  0112CA  22DA               	addwfc	fsr2h,f,c
 36725  0112CC  0E08               	movlw	8
 36726  0112CE  6EDF               	movwf	indf2,c
 36727                           
 36728                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 36729  0112D0  EE20 F002          	lfsr	2,2
 36730  0112D4  501C               	movf	_pBDTEntryEP0OutNext,w,c
 36731  0112D6  26D9               	addwf	fsr2l,f,c
 36732  0112D8  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36733  0112DA  22DA               	addwfc	fsr2h,f,c
 36734  0112DC  0E38               	movlw	56
 36735  0112DE  6EDE               	movwf	postinc2,c
 36736  0112E0  0E0D               	movlw	13
 36737  0112E2  6EDD               	movwf	postdec2,c
 36738                           
 36739                           ; BSR set to: 1
 36740                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 36741  0112E4  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36742  0112E8  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36743  0112EC  0E48               	movlw	72
 36744  0112EE  6EDF               	movwf	indf2,c
 36745                           
 36746                           ; BSR set to: 1
 36747                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36748  0112F0  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36749  0112F4  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36750  0112F8  0E00               	movlw	0
 36751  0112FA  8EDB               	bsf	plusw2,7,c
 36752                           
 36753                           ;usb_device.c: 1502: }
 36754  0112FC  0012               	return	
 36755  0112FE                     i2l220:
 36756                           
 36757                           ; BSR set to: 1
 36758                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 36759                           
 36760                           ; BSR set to: 1
 36761  0112FE  500E               	movf	_inPipes+4,w,c	;volatile
 36762  011300  010D               	movlb	13	; () banked
 36763  011302  5D36               	subwf	54,w,b	;volatile
 36764  011304  500F               	movf	_inPipes+5,w,c	;volatile
 36765  011306  5937               	subwfb	55,w,b	;volatile
 36766  011308  B0D8               	btfsc	status,0,c
 36767  01130A  D004               	goto	i2l222
 36768                           
 36769                           ; BSR set to: 13
 36770                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 36771  01130C  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 36772  011310  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 36773  011314                     i2l222:
 36774                           
 36775                           ; BSR set to: 13
 36776                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 36777                           
 36778                           ; BSR set to: 13
 36779  011314  ECBA  F083         	call	_USBCtrlTrfTxService	;wreg free
 36780                           
 36781                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 36782  011318  EE20 F002          	lfsr	2,2
 36783  01131C  5010               	movf	_pBDTEntryIn,w,c
 36784  01131E  26D9               	addwf	fsr2l,f,c
 36785  011320  5011               	movf	_pBDTEntryIn+1,w,c
 36786  011322  22DA               	addwfc	fsr2h,f,c
 36787  011324  0E38               	movlw	56
 36788  011326  6EDE               	movwf	postinc2,c
 36789  011328  0E0D               	movlw	13
 36790  01132A  6EDD               	movwf	postdec2,c
 36791                           
 36792                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 36793  01132C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 36794  011330  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36795  011334  0E48               	movlw	72
 36796  011336  6EDF               	movwf	indf2,c
 36797                           
 36798                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36799  011338  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 36800  01133C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36801  011340  0E00               	movlw	0
 36802  011342  8EDB               	bsf	plusw2,7,c
 36803  011344  0012               	return	
 36804  011346                     __end_of_USBCtrlEPAllowDataStage:
 36805                           	opt stack 0
 36806                           tosu	equ	0xFFF
 36807                           tosh	equ	0xFFE
 36808                           tosl	equ	0xFFD
 36809                           pclatu	equ	0xFFB
 36810                           pclath	equ	0xFFA
 36811                           tblptru	equ	0xFF8
 36812                           tblptrh	equ	0xFF7
 36813                           tblptrl	equ	0xFF6
 36814                           tablat	equ	0xFF5
 36815                           prodh	equ	0xFF4
 36816                           prodl	equ	0xFF3
 36817                           intcon	equ	0xFF2
 36818                           indf0	equ	0xFEF
 36819                           postinc0	equ	0xFEE
 36820                           fsr0h	equ	0xFEA
 36821                           fsr0l	equ	0xFE9
 36822                           wreg	equ	0xFE8
 36823                           indf1	equ	0xFE7
 36824                           postdec1	equ	0xFE5
 36825                           plusw1	equ	0xFE3
 36826                           fsr1h	equ	0xFE2
 36827                           fsr1l	equ	0xFE1
 36828                           indf2	equ	0xFDF
 36829                           postinc2	equ	0xFDE
 36830                           postdec2	equ	0xFDD
 36831                           plusw2	equ	0xFDB
 36832                           fsr2h	equ	0xFDA
 36833                           fsr2l	equ	0xFD9
 36834                           status	equ	0xFD8
 36835                           
 36836 ;; *************** function _USBCheckStdRequest *****************
 36837 ;; Defined at:
 36838 ;;		line 2688 in file "usb_device.c"
 36839 ;; Parameters:    Size  Location     Type
 36840 ;;		None
 36841 ;; Auto vars:     Size  Location     Type
 36842 ;;		None
 36843 ;; Return value:  Size  Location     Type
 36844 ;;                  1    wreg      void 
 36845 ;; Registers used:
 36846 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36847 ;; Tracked objects:
 36848 ;;		On entry : 0/0
 36849 ;;		On exit  : 0/0
 36850 ;;		Unchanged: 0/0
 36851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36856 ;;Total ram usage:        0 bytes
 36857 ;; Hardware stack levels used:    1
 36858 ;; Hardware stack levels required when called:    5
 36859 ;; This function calls:
 36860 ;;		_USBStdFeatureReqHandler
 36861 ;;		_USBStdGetDscHandler
 36862 ;;		_USBStdGetStatusHandler
 36863 ;;		_USBStdSetCfgHandler
 36864 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36865 ;; This function is called by:
 36866 ;;		_USBCtrlTrfSetupHandler
 36867 ;; This function uses a non-reentrant model
 36868 ;;
 36869                           
 36870                           	psect	text137
 36871  0104FC                     __ptext137:
 36872                           	opt stack 0
 36873  0104FC                     _USBCheckStdRequest:
 36874                           	opt stack 9
 36875                           
 36876                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 36877                           
 36878                           ;incstack = 0
 36879  0104FC  010D               	movlb	13	; () banked
 36880  0104FE  3930               	swapf	48,w,b	;volatile
 36881  010500  32E8               	rrcf	wreg,f,c
 36882  010502  0B03               	andlw	3
 36883  010504  0900               	iorlw	0
 36884  010506  A4D8               	btfss	status,2,c
 36885  010508  0012               	return	
 36886  01050A  D042               	goto	i2l355
 36887  01050C                     i2l356:
 36888                           
 36889                           ; BSR set to: 13
 36890                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 36891  01050C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36892                           
 36893                           ; BSR set to: 13
 36894                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 36895  01050E  0E08               	movlw	8
 36896  010510  6E2B               	movwf	_USBDeviceState,c	;volatile
 36897                           
 36898                           ;usb_device.c: 2698: break;
 36899  010512  0012               	return	
 36900  010514                     
 36901                           ; BSR set to: 13
 36902                           ;usb_device.c: 2700: USBStdGetDscHandler();
 36903                           
 36904                           ; BSR set to: 13
 36905  010514  EC86  F078         	call	_USBStdGetDscHandler	;wreg free
 36906                           
 36907                           ;usb_device.c: 2701: break;
 36908  010518  0012               	return	
 36909  01051A                     
 36910                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 36911  01051A  EC10  F082         	call	_USBStdSetCfgHandler	;wreg free
 36912                           
 36913                           ;usb_device.c: 2704: break;
 36914  01051E  0012               	return	
 36915  010520                     
 36916                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 36917  010520  0E2D               	movlw	low _USBActiveConfiguration
 36918  010522  6E0A               	movwf	_inPipes,c	;volatile
 36919  010524  0E00               	movlw	high _USBActiveConfiguration
 36920  010526  6E0B               	movwf	_inPipes+1,c	;volatile
 36921                           
 36922                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 36923  010528  800D               	bsf	_inPipes+3,0,c	;volatile
 36924                           
 36925                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 36926  01052A  0E01               	movlw	1
 36927  01052C  6E0E               	movwf	_inPipes+4,c	;volatile
 36928                           
 36929                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 36930  01052E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36931                           
 36932                           ;usb_device.c: 2710: break;
 36933  010530  0012               	return	
 36934  010532                     
 36935                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 36936  010532  EC6E  F088         	call	_USBStdGetStatusHandler	;wreg free
 36937                           
 36938                           ;usb_device.c: 2713: break;
 36939  010536  0012               	return	
 36940  010538                     
 36941                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 36942  010538  ECFA  F067         	call	_USBStdFeatureReqHandler	;wreg free
 36943                           
 36944                           ;usb_device.c: 2717: break;
 36945  01053C  0012               	return	
 36946  01053E                     
 36947                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 36948  01053E  010D               	movlb	13	; () banked
 36949  010540  5134               	movf	52,w,b	;volatile
 36950  010542  0D01               	mullw	1
 36951  010544  0E94               	movlw	low _USBAlternateInterface
 36952  010546  24F3               	addwf	prodl,w,c
 36953  010548  6E0A               	movwf	_inPipes,c	;volatile
 36954  01054A  0E01               	movlw	high _USBAlternateInterface
 36955  01054C  20F4               	addwfc	prodh,w,c
 36956  01054E  6E0B               	movwf	_inPipes+1,c	;volatile
 36957                           
 36958                           ; BSR set to: 13
 36959                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 36960  010550  800D               	bsf	_inPipes+3,0,c	;volatile
 36961                           
 36962                           ; BSR set to: 13
 36963                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 36964  010552  0E01               	movlw	1
 36965  010554  6E0E               	movwf	_inPipes+4,c	;volatile
 36966                           
 36967                           ; BSR set to: 13
 36968                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 36969  010556  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36970                           
 36971                           ;usb_device.c: 2723: break;
 36972  010558  0012               	return	
 36973  01055A                     i2l365:
 36974                           
 36975                           ; BSR set to: 13
 36976                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 36977  01055A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36978                           
 36979                           ; BSR set to: 13
 36980                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 36981  01055C  5134               	movf	52,w,b	;volatile
 36982  01055E  0D01               	mullw	1
 36983  010560  0E94               	movlw	low _USBAlternateInterface
 36984  010562  24F3               	addwf	prodl,w,c
 36985  010564  6ED9               	movwf	fsr2l,c
 36986  010566  0E01               	movlw	high _USBAlternateInterface
 36987  010568  20F4               	addwfc	prodh,w,c
 36988  01056A  6EDA               	movwf	fsr2h,c
 36989  01056C  CD32 FFDF          	movff	3378,indf2	;volatile
 36990                           
 36991                           ;usb_device.c: 2727: break;
 36992  010570  0012               	return	
 36993  010572                     
 36994                           ; BSR set to: 13
 36995                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 36996                           
 36997                           ; BSR set to: 13
 36998  010572  0E00               	movlw	0
 36999  010574  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 37000  010576  0E02               	movlw	2
 37001  010578  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 37002  01057A  0E00               	movlw	0
 37003  01057C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 37004  01057E  0E00               	movlw	0
 37005  010580  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 37006  010582  0E00               	movlw	0
 37007  010584  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 37008  010586  0E00               	movlw	0
 37009  010588  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 37010  01058A  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 37011                           
 37012                           ;usb_device.c: 2734: }
 37013                           
 37014                           ;usb_device.c: 2733: break;
 37015                           
 37016                           ;usb_device.c: 2732: default:
 37017                           
 37018                           ;usb_device.c: 2731: case 12:
 37019                           
 37020                           ;usb_device.c: 2730: break;
 37021  01058E  0012               	return	
 37022  010590                     i2l355:
 37023  010590  010D               	movlb	13	; () banked
 37024  010592  5131               	movf	49,w,b	;volatile
 37025                           
 37026                           ; Switch size 1, requested type "space"
 37027                           ; Number of cases is 11, Range of values is 0 to 12
 37028                           ; switch strategies available:
 37029                           ; Name         Instructions Cycles
 37030                           ; simple_byte           34    18 (average)
 37031                           ;	Chosen strategy is simple_byte
 37032  010594  0A00               	xorlw	0	; case 0
 37033  010596  B4D8               	btfsc	status,2,c
 37034  010598  D7CC               	goto	i2l361
 37035  01059A  0A01               	xorlw	1	; case 1
 37036  01059C  B4D8               	btfsc	status,2,c
 37037  01059E  D7CC               	goto	i2l362
 37038  0105A0  0A02               	xorlw	2	; case 3
 37039  0105A2  B4D8               	btfsc	status,2,c
 37040  0105A4  D7C9               	goto	i2l362
 37041  0105A6  0A06               	xorlw	6	; case 5
 37042  0105A8  B4D8               	btfsc	status,2,c
 37043  0105AA  D7B0               	goto	i2l356
 37044  0105AC  0A03               	xorlw	3	; case 6
 37045  0105AE  B4D8               	btfsc	status,2,c
 37046  0105B0  D7B1               	goto	i2l358
 37047  0105B2  0A01               	xorlw	1	; case 7
 37048  0105B4  B4D8               	btfsc	status,2,c
 37049  0105B6  D7DD               	goto	i2l366
 37050  0105B8  0A0F               	xorlw	15	; case 8
 37051  0105BA  B4D8               	btfsc	status,2,c
 37052  0105BC  D7B1               	goto	i2l360
 37053  0105BE  0A01               	xorlw	1	; case 9
 37054  0105C0  B4D8               	btfsc	status,2,c
 37055  0105C2  D7AB               	goto	i2l359
 37056  0105C4  0A03               	xorlw	3	; case 10
 37057  0105C6  B4D8               	btfsc	status,2,c
 37058  0105C8  D7BA               	goto	i2l364
 37059  0105CA  0A01               	xorlw	1	; case 11
 37060  0105CC  B4D8               	btfsc	status,2,c
 37061  0105CE  D7C5               	goto	i2l365
 37062  0105D0  0A07               	xorlw	7	; case 12
 37063  0105D2  0012               	return	
 37064  0105D4                     __end_of_USBCheckStdRequest:
 37065                           	opt stack 0
 37066                           tosu	equ	0xFFF
 37067                           tosh	equ	0xFFE
 37068                           tosl	equ	0xFFD
 37069                           pclatu	equ	0xFFB
 37070                           pclath	equ	0xFFA
 37071                           tblptru	equ	0xFF8
 37072                           tblptrh	equ	0xFF7
 37073                           tblptrl	equ	0xFF6
 37074                           tablat	equ	0xFF5
 37075                           prodh	equ	0xFF4
 37076                           prodl	equ	0xFF3
 37077                           intcon	equ	0xFF2
 37078                           indf0	equ	0xFEF
 37079                           postinc0	equ	0xFEE
 37080                           fsr0h	equ	0xFEA
 37081                           fsr0l	equ	0xFE9
 37082                           wreg	equ	0xFE8
 37083                           indf1	equ	0xFE7
 37084                           postdec1	equ	0xFE5
 37085                           plusw1	equ	0xFE3
 37086                           fsr1h	equ	0xFE2
 37087                           fsr1l	equ	0xFE1
 37088                           indf2	equ	0xFDF
 37089                           postinc2	equ	0xFDE
 37090                           postdec2	equ	0xFDD
 37091                           plusw2	equ	0xFDB
 37092                           fsr2h	equ	0xFDA
 37093                           fsr2l	equ	0xFD9
 37094                           status	equ	0xFD8
 37095                           
 37096 ;; *************** function _USBStdSetCfgHandler *****************
 37097 ;; Defined at:
 37098 ;;		line 1970 in file "usb_device.c"
 37099 ;; Parameters:    Size  Location     Type
 37100 ;;		None
 37101 ;; Auto vars:     Size  Location     Type
 37102 ;;  i               1   23[COMRAM] unsigned char 
 37103 ;; Return value:  Size  Location     Type
 37104 ;;                  1    wreg      void 
 37105 ;; Registers used:
 37106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37107 ;; Tracked objects:
 37108 ;;		On entry : 0/0
 37109 ;;		On exit  : 0/0
 37110 ;;		Unchanged: 0/0
 37111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37116 ;;Total ram usage:        1 bytes
 37117 ;; Hardware stack levels used:    1
 37118 ;; Hardware stack levels required when called:    4
 37119 ;; This function calls:
 37120 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37121 ;;		i2_memset
 37122 ;; This function is called by:
 37123 ;;		_USBCheckStdRequest
 37124 ;; This function uses a non-reentrant model
 37125 ;;
 37126                           
 37127                           	psect	text138
 37128  010420                     __ptext138:
 37129                           	opt stack 0
 37130  010420                     _USBStdSetCfgHandler:
 37131                           	opt stack 9
 37132                           
 37133                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 37134                           
 37135                           ;incstack = 0
 37136  010420  8E0D               	bsf	_inPipes+3,7,c	;volatile
 37137                           
 37138                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 37139  010422  0E27               	movlw	39
 37140  010424  6E2E               	movwf	i2memset@p1,c
 37141  010426  0E0F               	movlw	15
 37142  010428  6E2F               	movwf	i2memset@p1+1,c
 37143  01042A  0E00               	movlw	0
 37144  01042C  6E31               	movwf	i2memset@c+1,c
 37145  01042E  0E00               	movlw	0
 37146  010430  6E30               	movwf	i2memset@c,c
 37147  010432  0E00               	movlw	0
 37148  010434  6E33               	movwf	i2memset@n+1,c
 37149  010436  0E02               	movlw	2
 37150  010438  6E32               	movwf	i2memset@n,c
 37151  01043A  EC30  F094         	call	i2_memset	;wreg free
 37152                           
 37153                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 37154  01043E  0E00               	movlw	0
 37155  010440  6E2E               	movwf	i2memset@p1,c
 37156  010442  0E0D               	movlw	13
 37157  010444  6E2F               	movwf	i2memset@p1+1,c
 37158  010446  0E00               	movlw	0
 37159  010448  6E31               	movwf	i2memset@c+1,c
 37160  01044A  0E00               	movlw	0
 37161  01044C  6E30               	movwf	i2memset@c,c
 37162  01044E  0E00               	movlw	0
 37163  010450  6E33               	movwf	i2memset@n+1,c
 37164  010452  0E30               	movlw	48
 37165  010454  6E32               	movwf	i2memset@n,c
 37166  010456  EC30  F094         	call	i2_memset	;wreg free
 37167                           
 37168                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 37169  01045A  8C65               	bsf	3941,6,c	;volatile
 37170                           
 37171                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 37172  01045C  0E00               	movlw	0
 37173  01045E  6E45               	movwf	USBStdSetCfgHandler@i,c
 37174  010460                     i2l18101:
 37175  010460  0E02               	movlw	2
 37176  010462  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 37177  010464  D001               	goto	i2l272
 37178  010466  D016               	goto	i2u1784_40
 37179  010468                     i2l272:
 37180                           
 37181                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 37182  010468  5045               	movf	USBStdSetCfgHandler@i,w,c
 37183  01046A  0D01               	mullw	1
 37184  01046C  0E58               	movlw	low _ep_data_in
 37185  01046E  24F3               	addwf	prodl,w,c
 37186  010470  6ED9               	movwf	fsr2l,c
 37187  010472  0E01               	movlw	high _ep_data_in
 37188  010474  20F4               	addwfc	prodh,w,c
 37189  010476  6EDA               	movwf	fsr2h,c
 37190  010478  0E00               	movlw	0
 37191  01047A  6EDF               	movwf	indf2,c
 37192                           
 37193                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 37194  01047C  5045               	movf	USBStdSetCfgHandler@i,w,c
 37195  01047E  0D01               	mullw	1
 37196  010480  0E55               	movlw	low _ep_data_out
 37197  010482  24F3               	addwf	prodl,w,c
 37198  010484  6ED9               	movwf	fsr2l,c
 37199  010486  0E01               	movlw	high _ep_data_out
 37200  010488  20F4               	addwfc	prodh,w,c
 37201  01048A  6EDA               	movwf	fsr2h,c
 37202  01048C  0E00               	movlw	0
 37203  01048E  6EDF               	movwf	indf2,c
 37204  010490  2A45               	incf	USBStdSetCfgHandler@i,f,c
 37205  010492  D7E6               	goto	i2l18101
 37206  010494                     i2u1784_40:
 37207                           
 37208                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 37209  010494  0E94               	movlw	low _USBAlternateInterface
 37210  010496  6E2E               	movwf	i2memset@p1,c
 37211  010498  0E01               	movlw	high _USBAlternateInterface
 37212  01049A  6E2F               	movwf	i2memset@p1+1,c
 37213  01049C  0E00               	movlw	0
 37214  01049E  6E31               	movwf	i2memset@c+1,c
 37215  0104A0  0E00               	movlw	0
 37216  0104A2  6E30               	movwf	i2memset@c,c
 37217  0104A4  0E00               	movlw	0
 37218  0104A6  6E33               	movwf	i2memset@n+1,c
 37219  0104A8  0E02               	movlw	2
 37220  0104AA  6E32               	movwf	i2memset@n,c
 37221  0104AC  EC30  F094         	call	i2_memset	;wreg free
 37222                           
 37223                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 37224  0104B0  9C65               	bcf	3941,6,c	;volatile
 37225                           
 37226                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 37227  0104B2  0E08               	movlw	8
 37228  0104B4  6E10               	movwf	_pBDTEntryIn,c
 37229  0104B6  0E0D               	movlw	13
 37230  0104B8  6E11               	movwf	_pBDTEntryIn+1,c
 37231                           
 37232                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 37233  0104BA  0E00               	movlw	0
 37234  0104BC  6E1E               	movwf	_pBDTEntryEP0OutCurrent,c
 37235  0104BE  0E0D               	movlw	13
 37236  0104C0  6E1F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 37237                           
 37238                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 37239  0104C2  C01E  F01C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 37240  0104C6  C01F  F01D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 37241                           
 37242                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 37243  0104CA  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 37244                           
 37245                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 37246  0104CE  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 37247  0104D0  A4D8               	btfss	status,2,c
 37248  0104D2  D003               	goto	i2l274
 37249                           
 37250                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 37251  0104D4  0E10               	movlw	16
 37252  0104D6  6E2B               	movwf	_USBDeviceState,c	;volatile
 37253                           
 37254                           ;usb_device.c: 2015: }
 37255  0104D8  0012               	return	
 37256  0104DA                     i2l274:
 37257                           
 37258                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 37259  0104DA  0E00               	movlw	0
 37260  0104DC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 37261  0104DE  0E01               	movlw	1
 37262  0104E0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 37263  0104E2  0E2D               	movlw	low _USBActiveConfiguration
 37264  0104E4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 37265  0104E6  0E00               	movlw	high _USBActiveConfiguration
 37266  0104E8  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 37267  0104EA  0E00               	movlw	0
 37268  0104EC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 37269  0104EE  0E01               	movlw	1
 37270  0104F0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 37271  0104F2  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 37272                           
 37273                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 37274  0104F6  0E20               	movlw	32
 37275  0104F8  6E2B               	movwf	_USBDeviceState,c	;volatile
 37276  0104FA  0012               	return	
 37277  0104FC                     __end_of_USBStdSetCfgHandler:
 37278                           	opt stack 0
 37279                           tosu	equ	0xFFF
 37280                           tosh	equ	0xFFE
 37281                           tosl	equ	0xFFD
 37282                           pclatu	equ	0xFFB
 37283                           pclath	equ	0xFFA
 37284                           tblptru	equ	0xFF8
 37285                           tblptrh	equ	0xFF7
 37286                           tblptrl	equ	0xFF6
 37287                           tablat	equ	0xFF5
 37288                           prodh	equ	0xFF4
 37289                           prodl	equ	0xFF3
 37290                           intcon	equ	0xFF2
 37291                           indf0	equ	0xFEF
 37292                           postinc0	equ	0xFEE
 37293                           fsr0h	equ	0xFEA
 37294                           fsr0l	equ	0xFE9
 37295                           wreg	equ	0xFE8
 37296                           indf1	equ	0xFE7
 37297                           postdec1	equ	0xFE5
 37298                           plusw1	equ	0xFE3
 37299                           fsr1h	equ	0xFE2
 37300                           fsr1l	equ	0xFE1
 37301                           indf2	equ	0xFDF
 37302                           postinc2	equ	0xFDE
 37303                           postdec2	equ	0xFDD
 37304                           plusw2	equ	0xFDB
 37305                           fsr2h	equ	0xFDA
 37306                           fsr2l	equ	0xFD9
 37307                           status	equ	0xFD8
 37308                           
 37309 ;; *************** function i2_memset *****************
 37310 ;; Defined at:
 37311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 37312 ;; Parameters:    Size  Location     Type
 37313 ;;  p1              2    0[COMRAM] PTR void 
 37314 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 37315 ;;  c               2    2[COMRAM] int 
 37316 ;;  n               2    4[COMRAM] unsigned int 
 37317 ;; Auto vars:     Size  Location     Type
 37318 ;;  memset          2    6[COMRAM] PTR unsigned char 
 37319 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 37320 ;; Return value:  Size  Location     Type
 37321 ;;                  2    0[COMRAM] PTR void 
 37322 ;; Registers used:
 37323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37324 ;; Tracked objects:
 37325 ;;		On entry : 0/0
 37326 ;;		On exit  : 0/0
 37327 ;;		Unchanged: 0/0
 37328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37329 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37332 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37333 ;;Total ram usage:        8 bytes
 37334 ;; Hardware stack levels used:    1
 37335 ;; This function calls:
 37336 ;;		Nothing
 37337 ;; This function is called by:
 37338 ;;		_USBStdSetCfgHandler
 37339 ;;		i2_USBDeviceInit
 37340 ;; This function uses a non-reentrant model
 37341 ;;
 37342                           
 37343                           	psect	text139
 37344  012860                     __ptext139:
 37345                           	opt stack 0
 37346  012860                     i2_memset:
 37347                           	opt stack 15
 37348                           
 37349                           ;incstack = 0
 37350  012860  C02E  F034         	movff	i2memset@p1,i2memset@p
 37351  012864  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 37352  012868  D008               	goto	i2l3379
 37353  01286A                     i2l11505:
 37354  01286A  C034  FFD9         	movff	i2memset@p,fsr2l
 37355  01286E  C035  FFDA         	movff	i2memset@p+1,fsr2h
 37356  012872  C030  FFDF         	movff	i2memset@c,indf2
 37357  012876  4A34               	infsnz	i2memset@p,f,c
 37358  012878  2A35               	incf	i2memset@p+1,f,c
 37359  01287A                     i2l3379:
 37360  01287A  0632               	decf	i2memset@n,f,c
 37361  01287C  A0D8               	btfss	status,0,c
 37362  01287E  0633               	decf	i2memset@n+1,f,c
 37363  012880  2832               	incf	i2memset@n,w,c
 37364  012882  E1F3               	bnz	i2l11505
 37365  012884  2833               	incf	i2memset@n+1,w,c
 37366  012886  B4D8               	btfsc	status,2,c
 37367  012888  0012               	return	
 37368  01288A  D7EF               	goto	i2l3380
 37369  01288C                     __end_ofi2_memset:
 37370                           	opt stack 0
 37371                           tosu	equ	0xFFF
 37372                           tosh	equ	0xFFE
 37373                           tosl	equ	0xFFD
 37374                           pclatu	equ	0xFFB
 37375                           pclath	equ	0xFFA
 37376                           tblptru	equ	0xFF8
 37377                           tblptrh	equ	0xFF7
 37378                           tblptrl	equ	0xFF6
 37379                           tablat	equ	0xFF5
 37380                           prodh	equ	0xFF4
 37381                           prodl	equ	0xFF3
 37382                           intcon	equ	0xFF2
 37383                           indf0	equ	0xFEF
 37384                           postinc0	equ	0xFEE
 37385                           fsr0h	equ	0xFEA
 37386                           fsr0l	equ	0xFE9
 37387                           wreg	equ	0xFE8
 37388                           indf1	equ	0xFE7
 37389                           postdec1	equ	0xFE5
 37390                           plusw1	equ	0xFE3
 37391                           fsr1h	equ	0xFE2
 37392                           fsr1l	equ	0xFE1
 37393                           indf2	equ	0xFDF
 37394                           postinc2	equ	0xFDE
 37395                           postdec2	equ	0xFDD
 37396                           plusw2	equ	0xFDB
 37397                           fsr2h	equ	0xFDA
 37398                           fsr2l	equ	0xFD9
 37399                           status	equ	0xFD8
 37400                           
 37401 ;; *************** function _USBStdGetStatusHandler *****************
 37402 ;; Defined at:
 37403 ;;		line 2131 in file "usb_device.c"
 37404 ;; Parameters:    Size  Location     Type
 37405 ;;		None
 37406 ;; Auto vars:     Size  Location     Type
 37407 ;;  p               2    1[COMRAM] PTR struct __BDT
 37408 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37409 ;; Return value:  Size  Location     Type
 37410 ;;                  1    wreg      void 
 37411 ;; Registers used:
 37412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37413 ;; Tracked objects:
 37414 ;;		On entry : 0/0
 37415 ;;		On exit  : 0/0
 37416 ;;		Unchanged: 0/0
 37417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37422 ;;Total ram usage:        3 bytes
 37423 ;; Hardware stack levels used:    1
 37424 ;; This function calls:
 37425 ;;		Nothing
 37426 ;; This function is called by:
 37427 ;;		_USBCheckStdRequest
 37428 ;; This function uses a non-reentrant model
 37429 ;;
 37430                           
 37431                           	psect	text140
 37432  0110DC                     __ptext140:
 37433                           	opt stack 0
 37434  0110DC                     _USBStdGetStatusHandler:
 37435                           	opt stack 13
 37436                           
 37437                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 37438                           
 37439                           ;incstack = 0
 37440  0110DC  0E00               	movlw	0
 37441  0110DE  010D               	movlb	13	; () banked
 37442  0110E0  6F38               	movwf	56,b	;volatile
 37443                           
 37444                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 37445  0110E2  0E00               	movlw	0
 37446  0110E4  6F39               	movwf	57,b	;volatile
 37447                           
 37448                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 37449  0110E6  D035               	goto	i2l293
 37450  0110E8                     i2l294:
 37451                           
 37452                           ; BSR set to: 13
 37453                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 37454  0110E8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 37455                           
 37456                           ; BSR set to: 13
 37457                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 37458                           
 37459                           ; BSR set to: 13
 37460                           
 37461                           ; BSR set to: 13
 37462                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 37463                           
 37464                           ;usb_device.c: 2144: if(0 == 1)
 37465  0110EA  0101               	movlb	1	; () banked
 37466  0110EC  0578               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 37467  0110EE  A4D8               	btfss	status,2,c
 37468  0110F0  D03B               	goto	i2l297
 37469                           
 37470                           ; BSR set to: 1
 37471                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 37472  0110F2  010D               	movlb	13	; () banked
 37473  0110F4  8338               	bsf	56,1,b	;volatile
 37474                           
 37475                           ; BSR set to: 13
 37476                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 37477  0110F6  D038               	goto	i2l297
 37478  0110F8                     i2l298:
 37479                           
 37480                           ; BSR set to: 13
 37481                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 37482  0110F8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 37483                           
 37484                           ;usb_device.c: 2156: break;
 37485  0110FA  D036               	goto	i2l297
 37486  0110FC                     i2l299:
 37487                           
 37488                           ; BSR set to: 13
 37489                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 37490  0110FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 37491                           
 37492                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 37493  0110FE  BF34               	btfsc	52,7,b	;volatile
 37494  011100  D00A               	goto	i2l300
 37495                           
 37496                           ; BSR set to: 13
 37497                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 37498  011102  5134               	movf	52,w,b	;volatile
 37499  011104  0B0F               	andlw	15
 37500  011106  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 37501  011108  502E               	movf	??_USBStdGetStatusHandler,w,c
 37502  01110A  0D02               	mullw	2
 37503  01110C  0E31               	movlw	low _pBDTEntryOut
 37504  01110E  24F3               	addwf	prodl,w,c
 37505  011110  6ED9               	movwf	fsr2l,c
 37506  011112  0E01               	movlw	high _pBDTEntryOut
 37507  011114  D009               	goto	L66
 37508  011116                     i2l300:
 37509                           
 37510                           ; BSR set to: 13
 37511                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 37512                           
 37513                           ; BSR set to: 13
 37514  011116  5134               	movf	52,w,b	;volatile
 37515  011118  0B0F               	andlw	15
 37516  01111A  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 37517  01111C  502E               	movf	??_USBStdGetStatusHandler,w,c
 37518  01111E  0D02               	mullw	2
 37519  011120  0E10               	movlw	low _pBDTEntryIn
 37520  011122  24F3               	addwf	prodl,w,c
 37521  011124  6ED9               	movwf	fsr2l,c
 37522  011126  0E00               	movlw	high _pBDTEntryIn
 37523  011128                     L66:
 37524  011128  20F4               	addwfc	prodh,w,c
 37525  01112A  6EDA               	movwf	fsr2h,c
 37526  01112C  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 37527  011130  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 37528                           
 37529                           ; BSR set to: 13
 37530                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 37531                           
 37532                           ; BSR set to: 13
 37533  011134  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 37534  011138  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 37535  01113C  AEDF               	btfss	indf2,7,c
 37536  01113E  D014               	goto	i2l297
 37537                           
 37538                           ; BSR set to: 13
 37539  011140  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 37540  011144  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 37541  011148  A4DF               	btfss	indf2,2,c
 37542  01114A  D00E               	goto	i2l297
 37543                           
 37544                           ; BSR set to: 13
 37545                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 37546  01114C  0E01               	movlw	1
 37547  01114E  6F38               	movwf	56,b	;volatile
 37548                           
 37549                           ; BSR set to: 13
 37550                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 37551                           
 37552                           ; BSR set to: 13
 37553                           ;usb_device.c: 2176: break;
 37554  011150  D00B               	goto	i2l297
 37555  011152                     i2l293:
 37556                           
 37557                           ; BSR set to: 13
 37558                           
 37559                           ; BSR set to: 13
 37560  011152  5130               	movf	48,w,b	;volatile
 37561  011154  0B1F               	andlw	31
 37562                           
 37563                           ; Switch size 1, requested type "space"
 37564                           ; Number of cases is 3, Range of values is 0 to 2
 37565                           ; switch strategies available:
 37566                           ; Name         Instructions Cycles
 37567                           ; simple_byte           10     6 (average)
 37568                           ;	Chosen strategy is simple_byte
 37569  011156  0A00               	xorlw	0	; case 0
 37570  011158  B4D8               	btfsc	status,2,c
 37571  01115A  D7C6               	goto	i2l294
 37572  01115C  0A01               	xorlw	1	; case 1
 37573  01115E  B4D8               	btfsc	status,2,c
 37574  011160  D7CB               	goto	i2l298
 37575  011162  0A03               	xorlw	3	; case 2
 37576  011164  B4D8               	btfsc	status,2,c
 37577  011166  D7CA               	goto	i2l299
 37578  011168                     i2l297:
 37579                           
 37580                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 37581  011168  AE0D               	btfss	_inPipes+3,7,c	;volatile
 37582  01116A  0012               	return	
 37583                           
 37584                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 37585  01116C  0E38               	movlw	56
 37586  01116E  6E0A               	movwf	_inPipes,c	;volatile
 37587  011170  0E0D               	movlw	13
 37588  011172  6E0B               	movwf	_inPipes+1,c	;volatile
 37589                           
 37590                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 37591  011174  800D               	bsf	_inPipes+3,0,c	;volatile
 37592                           
 37593                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 37594  011176  0E02               	movlw	2
 37595  011178  6E0E               	movwf	_inPipes+4,c	;volatile
 37596  01117A  0012               	return	
 37597  01117C                     __end_of_USBStdGetStatusHandler:
 37598                           	opt stack 0
 37599                           tosu	equ	0xFFF
 37600                           tosh	equ	0xFFE
 37601                           tosl	equ	0xFFD
 37602                           pclatu	equ	0xFFB
 37603                           pclath	equ	0xFFA
 37604                           tblptru	equ	0xFF8
 37605                           tblptrh	equ	0xFF7
 37606                           tblptrl	equ	0xFF6
 37607                           tablat	equ	0xFF5
 37608                           prodh	equ	0xFF4
 37609                           prodl	equ	0xFF3
 37610                           intcon	equ	0xFF2
 37611                           indf0	equ	0xFEF
 37612                           postinc0	equ	0xFEE
 37613                           fsr0h	equ	0xFEA
 37614                           fsr0l	equ	0xFE9
 37615                           wreg	equ	0xFE8
 37616                           indf1	equ	0xFE7
 37617                           postdec1	equ	0xFE5
 37618                           plusw1	equ	0xFE3
 37619                           fsr1h	equ	0xFE2
 37620                           fsr1l	equ	0xFE1
 37621                           indf2	equ	0xFDF
 37622                           postinc2	equ	0xFDE
 37623                           postdec2	equ	0xFDD
 37624                           plusw2	equ	0xFDB
 37625                           fsr2h	equ	0xFDA
 37626                           fsr2l	equ	0xFD9
 37627                           status	equ	0xFD8
 37628                           
 37629 ;; *************** function _USBStdGetDscHandler *****************
 37630 ;; Defined at:
 37631 ;;		line 2045 in file "usb_device.c"
 37632 ;; Parameters:    Size  Location     Type
 37633 ;;		None
 37634 ;; Auto vars:     Size  Location     Type
 37635 ;;		None
 37636 ;; Return value:  Size  Location     Type
 37637 ;;                  1    wreg      void 
 37638 ;; Registers used:
 37639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 37640 ;; Tracked objects:
 37641 ;;		On entry : 0/0
 37642 ;;		On exit  : 0/0
 37643 ;;		Unchanged: 0/0
 37644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37649 ;;Total ram usage:        2 bytes
 37650 ;; Hardware stack levels used:    1
 37651 ;; This function calls:
 37652 ;;		Nothing
 37653 ;; This function is called by:
 37654 ;;		_USBCheckStdRequest
 37655 ;; This function uses a non-reentrant model
 37656 ;;
 37657                           
 37658                           	psect	text141
 37659  00F10C                     __ptext141:
 37660                           	opt stack 0
 37661  00F10C                     _USBStdGetDscHandler:
 37662                           	opt stack 13
 37663                           
 37664                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 37665                           
 37666                           ;incstack = 0
 37667  00F10C  0E80               	movlw	128
 37668  00F10E  010D               	movlb	13	; () banked
 37669  00F110  1930               	xorwf	48,w,b	;volatile
 37670  00F112  A4D8               	btfss	status,2,c
 37671  00F114  0012               	return	
 37672                           
 37673                           ; BSR set to: 13
 37674                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 37675  00F116  0EC0               	movlw	192
 37676  00F118  6E0D               	movwf	_inPipes+3,c	;volatile
 37677                           
 37678                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 37679  00F11A  D082               	goto	i2l280
 37680  00F11C                     
 37681                           ; BSR set to: 13
 37682                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 37683                           
 37684                           ; BSR set to: 13
 37685  00F11C  0EBB               	movlw	low _device_dsc
 37686  00F11E  6E0A               	movwf	_inPipes,c	;volatile
 37687  00F120  0EA1               	movlw	high _device_dsc
 37688  00F122  6E0B               	movwf	_inPipes+1,c	;volatile
 37689                           
 37690                           ; BSR set to: 13
 37691                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 37692  00F124  0E00               	movlw	0
 37693  00F126  6E0F               	movwf	_inPipes+5,c	;volatile
 37694  00F128  0E12               	movlw	18
 37695  00F12A  6E0E               	movwf	_inPipes+4,c	;volatile
 37696                           
 37697                           ;usb_device.c: 2060: break;
 37698  00F12C  0012               	return	
 37699  00F12E                     
 37700                           ; BSR set to: 13
 37701                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 37702                           
 37703                           ; BSR set to: 13
 37704  00F12E  5132               	movf	50,w,b	;volatile
 37705  00F130  A4D8               	btfss	status,2,c
 37706  00F132  D042               	goto	i2l284
 37707                           
 37708                           ; BSR set to: 13
 37709                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 37710  00F134  5132               	movf	50,w,b	;volatile
 37711  00F136  0D02               	mullw	2
 37712  00F138  0EEC               	movlw	low _USB_CD_Ptr
 37713  00F13A  24F3               	addwf	prodl,w,c
 37714  00F13C  6EF6               	movwf	tblptrl,c
 37715  00F13E  0E9D               	movlw	high _USB_CD_Ptr
 37716  00F140  20F4               	addwfc	prodh,w,c
 37717  00F142  6EF7               	movwf	tblptrh,c
 37718  00F144                     	if	1	;There are 3 active tblptr bytes
 37719  00F144  6AF8               	clrf	tblptru,c
 37720  00F146  0E00               	movlw	low (__mediumconst shr (0+16))
 37721  00F148  22F8               	addwfc	tblptru,f,c
 37722  00F14A                     	endif
 37723  00F14A  0009               	tblrd		*+
 37724  00F14C  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 37725  00F150  000A               	tblrd		*-
 37726  00F152  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 37727                           
 37728                           ; BSR set to: 13
 37729                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 37730  00F156  0E02               	movlw	2
 37731  00F158  240A               	addwf	_inPipes,w,c	;volatile
 37732  00F15A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 37733  00F15C  0E00               	movlw	0
 37734  00F15E  200B               	addwfc	_inPipes+1,w,c	;volatile
 37735  00F160  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 37736  00F162  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 37737  00F166  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 37738  00F16A  0E00               	movlw	low (__mediumconst shr (0+16))
 37739  00F16C  6EF8               	movwf	tblptru,c
 37740  00F16E  0E0E               	movlw	(high __ramtop+-1)
 37741  00F170  64F7               	cpfsgt	tblptrh,c
 37742  00F172  D003               	bra	i2u990_47
 37743  00F174  0008               	tblrd		*
 37744  00F176  50F5               	movf	tablat,w,c
 37745  00F178  D005               	bra	i2u990_40
 37746  00F17A                     i2u990_47:
 37747  00F17A  CFF6 FFE9          	movff	tblptrl,fsr0l
 37748  00F17E  CFF7 FFEA          	movff	tblptrh,fsr0h
 37749  00F182  50EF               	movf	indf0,w,c
 37750  00F184                     i2u990_40:
 37751  00F184  6E0E               	movwf	_inPipes+4,c	;volatile
 37752                           
 37753                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 37754  00F186  0E03               	movlw	3
 37755  00F188  240A               	addwf	_inPipes,w,c	;volatile
 37756  00F18A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 37757  00F18C  0E00               	movlw	0
 37758  00F18E  200B               	addwfc	_inPipes+1,w,c	;volatile
 37759  00F190  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 37760  00F192  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 37761  00F196  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 37762  00F19A  0E00               	movlw	low (__mediumconst shr (0+16))
 37763  00F19C  6EF8               	movwf	tblptru,c
 37764  00F19E  0E0E               	movlw	(high __ramtop+-1)
 37765  00F1A0  64F7               	cpfsgt	tblptrh,c
 37766  00F1A2  D003               	bra	i2u991_47
 37767  00F1A4  0008               	tblrd		*
 37768  00F1A6  50F5               	movf	tablat,w,c
 37769  00F1A8  D005               	bra	i2u991_40
 37770  00F1AA                     i2u991_47:
 37771  00F1AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 37772  00F1AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 37773  00F1B2  50EF               	movf	indf0,w,c
 37774  00F1B4                     i2u991_40:
 37775  00F1B4  6E0F               	movwf	_inPipes+5,c	;volatile
 37776                           
 37777                           ;usb_device.c: 2078: }
 37778  00F1B6  0012               	return	
 37779  00F1B8                     i2l284:
 37780                           
 37781                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 37782  00F1B8  0E00               	movlw	0
 37783  00F1BA  6E0D               	movwf	_inPipes+3,c	;volatile
 37784                           
 37785                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 37786  00F1BC  0012               	return	
 37787  00F1BE                     
 37788                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 37789  00F1BE  0E04               	movlw	4
 37790  00F1C0  010D               	movlb	13	; () banked
 37791  00F1C2  6132               	cpfslt	50,b	;volatile
 37792  00F1C4  D027               	goto	i2l287
 37793                           
 37794                           ; BSR set to: 13
 37795                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 37796  00F1C6  5132               	movf	50,w,b	;volatile
 37797  00F1C8  0D02               	mullw	2
 37798  00F1CA  0EE4               	movlw	low _USB_SD_Ptr
 37799  00F1CC  24F3               	addwf	prodl,w,c
 37800  00F1CE  6EF6               	movwf	tblptrl,c
 37801  00F1D0  0E9D               	movlw	high _USB_SD_Ptr
 37802  00F1D2  20F4               	addwfc	prodh,w,c
 37803  00F1D4  6EF7               	movwf	tblptrh,c
 37804  00F1D6                     	if	1	;There are 3 active tblptr bytes
 37805  00F1D6  6AF8               	clrf	tblptru,c
 37806  00F1D8  0E00               	movlw	low (__mediumconst shr (0+16))
 37807  00F1DA  22F8               	addwfc	tblptru,f,c
 37808  00F1DC                     	endif
 37809  00F1DC  0009               	tblrd		*+
 37810  00F1DE  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 37811  00F1E2  000A               	tblrd		*-
 37812  00F1E4  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 37813                           
 37814                           ; BSR set to: 13
 37815                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 37816  00F1E8  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 37817  00F1EC  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 37818  00F1F0  0E00               	movlw	low (__mediumconst shr (0+16))
 37819  00F1F2  6EF8               	movwf	tblptru,c
 37820  00F1F4  0E0E               	movlw	(high __ramtop+-1)
 37821  00F1F6  64F7               	cpfsgt	tblptrh,c
 37822  00F1F8  D003               	bra	i2u993_47
 37823  00F1FA  0008               	tblrd		*
 37824  00F1FC  50F5               	movf	tablat,w,c
 37825  00F1FE  D005               	bra	i2u993_40
 37826  00F200                     i2u993_47:
 37827  00F200  CFF6 FFE9          	movff	tblptrl,fsr0l
 37828  00F204  CFF7 FFEA          	movff	tblptrh,fsr0h
 37829  00F208  50EF               	movf	indf0,w,c
 37830  00F20A                     i2u993_40:
 37831  00F20A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 37832  00F20C  502E               	movf	??_USBStdGetDscHandler,w,c
 37833  00F20E  6E0E               	movwf	_inPipes+4,c	;volatile
 37834  00F210  6A0F               	clrf	_inPipes+5,c	;volatile
 37835                           
 37836                           ;usb_device.c: 2094: }
 37837  00F212  0012               	return	
 37838  00F214                     i2l287:
 37839                           
 37840                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 37841  00F214  0E00               	movlw	0
 37842  00F216  6E0D               	movwf	_inPipes+3,c	;volatile
 37843                           
 37844                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 37845  00F218  0012               	return	
 37846  00F21A                     
 37847                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 37848  00F21A  0E00               	movlw	0
 37849  00F21C  6E0D               	movwf	_inPipes+3,c	;volatile
 37850                           
 37851                           ;usb_device.c: 2112: }
 37852                           
 37853                           ;usb_device.c: 2111: break;
 37854  00F21E  0012               	return	
 37855  00F220                     i2l280:
 37856  00F220  010D               	movlb	13	; () banked
 37857  00F222  5133               	movf	51,w,b	;volatile
 37858                           
 37859                           ; Switch size 1, requested type "space"
 37860                           ; Number of cases is 3, Range of values is 1 to 3
 37861                           ; switch strategies available:
 37862                           ; Name         Instructions Cycles
 37863                           ; simple_byte           10     6 (average)
 37864                           ;	Chosen strategy is simple_byte
 37865  00F224  0A01               	xorlw	1	; case 1
 37866  00F226  B4D8               	btfsc	status,2,c
 37867  00F228  D779               	goto	i2l281
 37868  00F22A  0A03               	xorlw	3	; case 2
 37869  00F22C  B4D8               	btfsc	status,2,c
 37870  00F22E  D77F               	goto	i2l283
 37871  00F230  0A01               	xorlw	1	; case 3
 37872  00F232  B4D8               	btfsc	status,2,c
 37873  00F234  D7C4               	goto	i2l286
 37874  00F236  D7F1               	goto	i2l289
 37875  00F238                     __end_of_USBStdGetDscHandler:
 37876                           	opt stack 0
 37877                           tosu	equ	0xFFF
 37878                           tosh	equ	0xFFE
 37879                           tosl	equ	0xFFD
 37880                           pclatu	equ	0xFFB
 37881                           pclath	equ	0xFFA
 37882                           tblptru	equ	0xFF8
 37883                           tblptrh	equ	0xFF7
 37884                           tblptrl	equ	0xFF6
 37885                           tablat	equ	0xFF5
 37886                           prodh	equ	0xFF4
 37887                           prodl	equ	0xFF3
 37888                           intcon	equ	0xFF2
 37889                           indf0	equ	0xFEF
 37890                           postinc0	equ	0xFEE
 37891                           fsr0h	equ	0xFEA
 37892                           fsr0l	equ	0xFE9
 37893                           wreg	equ	0xFE8
 37894                           indf1	equ	0xFE7
 37895                           postdec1	equ	0xFE5
 37896                           plusw1	equ	0xFE3
 37897                           fsr1h	equ	0xFE2
 37898                           fsr1l	equ	0xFE1
 37899                           indf2	equ	0xFDF
 37900                           postinc2	equ	0xFDE
 37901                           postdec2	equ	0xFDD
 37902                           plusw2	equ	0xFDB
 37903                           fsr2h	equ	0xFDA
 37904                           fsr2l	equ	0xFD9
 37905                           status	equ	0xFD8
 37906                           
 37907 ;; *************** function _USBStdFeatureReqHandler *****************
 37908 ;; Defined at:
 37909 ;;		line 2756 in file "usb_device.c"
 37910 ;; Parameters:    Size  Location     Type
 37911 ;;		None
 37912 ;; Auto vars:     Size  Location     Type
 37913 ;;  p               2   27[COMRAM] PTR struct __BDT
 37914 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37915 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 37916 ;;		 -> UEP0(1), 
 37917 ;;  current_ep_d    1   26[COMRAM] struct .
 37918 ;; Return value:  Size  Location     Type
 37919 ;;                  1    wreg      void 
 37920 ;; Registers used:
 37921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37922 ;; Tracked objects:
 37923 ;;		On entry : 0/0
 37924 ;;		On exit  : 0/0
 37925 ;;		Unchanged: 0/0
 37926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37928 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37931 ;;Total ram usage:        6 bytes
 37932 ;; Hardware stack levels used:    1
 37933 ;; Hardware stack levels required when called:    4
 37934 ;; This function calls:
 37935 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37936 ;; This function is called by:
 37937 ;;		_USBCheckStdRequest
 37938 ;; This function uses a non-reentrant model
 37939 ;;
 37940                           
 37941                           	psect	text142
 37942  00CFF4                     __ptext142:
 37943                           	opt stack 0
 37944  00CFF4                     _USBStdFeatureReqHandler:
 37945                           	opt stack 9
 37946                           
 37947                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 37948                           
 37949                           ;incstack = 0
 37950  00CFF4  010D               	movlb	13	; () banked
 37951  00CFF6  0532               	decf	50,w,b	;volatile
 37952  00CFF8  A4D8               	btfss	status,2,c
 37953  00CFFA  D00F               	goto	i2l373
 37954                           
 37955                           ; BSR set to: 13
 37956  00CFFC  5130               	movf	48,w,b	;volatile
 37957  00CFFE  0B1F               	andlw	31
 37958  00D000  0900               	iorlw	0
 37959  00D002  A4D8               	btfss	status,2,c
 37960  00D004  D00A               	goto	i2l373
 37961                           
 37962                           ; BSR set to: 13
 37963                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 37964  00D006  8E0D               	bsf	_inPipes+3,7,c	;volatile
 37965                           
 37966                           ; BSR set to: 13
 37967                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 37968  00D008  0E03               	movlw	3
 37969  00D00A  1931               	xorwf	49,w,b	;volatile
 37970  00D00C  A4D8               	btfss	status,2,c
 37971  00D00E  D002               	goto	i2l372
 37972                           
 37973                           ; BSR set to: 13
 37974                           ;usb_device.c: 2806: RemoteWakeup = 1;
 37975  00D010  0E01               	movlw	1
 37976  00D012  D001               	goto	L67
 37977  00D014                     i2l372:
 37978                           
 37979                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 37980                           
 37981                           ; BSR set to: 1
 37982  00D014  0E00               	movlw	0
 37983  00D016                     L67:
 37984  00D016  0101               	movlb	1	; () banked
 37985  00D018  6F78               	movwf	_RemoteWakeup& (0+255),b	;volatile
 37986  00D01A                     i2l373:
 37987                           
 37988                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 37989                           
 37990                           ; BSR set to: 1
 37991  00D01A  010D               	movlb	13	; () banked
 37992  00D01C  5132               	movf	50,w,b	;volatile
 37993  00D01E  A4D8               	btfss	status,2,c
 37994  00D020  0012               	return	
 37995                           
 37996                           ; BSR set to: 13
 37997  00D022  5130               	movf	48,w,b	;volatile
 37998  00D024  0B1F               	andlw	31
 37999  00D026  0A02               	xorlw	2
 38000  00D028  A4D8               	btfss	status,2,c
 38001  00D02A  0012               	return	
 38002                           
 38003                           ; BSR set to: 13
 38004  00D02C  5134               	movf	52,w,b	;volatile
 38005  00D02E  0B0F               	andlw	15
 38006  00D030  0900               	iorlw	0
 38007  00D032  B4D8               	btfsc	status,2,c
 38008  00D034  0012               	return	
 38009                           
 38010                           ; BSR set to: 13
 38011  00D036  5134               	movf	52,w,b	;volatile
 38012  00D038  0B0F               	andlw	15
 38013  00D03A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38014  00D03C  0E03               	movlw	3
 38015  00D03E  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 38016  00D040  0012               	return	
 38017                           
 38018                           ; BSR set to: 13
 38019  00D042  0E20               	movlw	32
 38020  00D044  182B               	xorwf	_USBDeviceState,w,c	;volatile
 38021  00D046  A4D8               	btfss	status,2,c
 38022  00D048  0012               	return	
 38023                           
 38024                           ; BSR set to: 13
 38025                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 38026  00D04A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 38027                           
 38028                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 38029  00D04C  BF34               	btfsc	52,7,b	;volatile
 38030  00D04E  D019               	goto	i2l375
 38031                           
 38032                           ; BSR set to: 13
 38033                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 38034  00D050  5134               	movf	52,w,b	;volatile
 38035  00D052  0B0F               	andlw	15
 38036  00D054  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38037  00D056  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38038  00D058  0D02               	mullw	2
 38039  00D05A  0E31               	movlw	low _pBDTEntryOut
 38040  00D05C  24F3               	addwf	prodl,w,c
 38041  00D05E  6ED9               	movwf	fsr2l,c
 38042  00D060  0E01               	movlw	high _pBDTEntryOut
 38043  00D062  20F4               	addwfc	prodh,w,c
 38044  00D064  6EDA               	movwf	fsr2h,c
 38045  00D066  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 38046  00D06A  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 38047                           
 38048                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 38049  00D06E  5134               	movf	52,w,b	;volatile
 38050  00D070  0B0F               	andlw	15
 38051  00D072  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38052  00D074  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38053  00D076  0D01               	mullw	1
 38054  00D078  0E55               	movlw	low _ep_data_out
 38055  00D07A  24F3               	addwf	prodl,w,c
 38056  00D07C  6ED9               	movwf	fsr2l,c
 38057  00D07E  0E01               	movlw	high _ep_data_out
 38058  00D080  D018               	goto	L68
 38059  00D082                     i2l375:
 38060                           
 38061                           ; BSR set to: 13
 38062                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 38063                           
 38064                           ; BSR set to: 13
 38065  00D082  5134               	movf	52,w,b	;volatile
 38066  00D084  0B0F               	andlw	15
 38067  00D086  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38068  00D088  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38069  00D08A  0D02               	mullw	2
 38070  00D08C  0E10               	movlw	low _pBDTEntryIn
 38071  00D08E  24F3               	addwf	prodl,w,c
 38072  00D090  6ED9               	movwf	fsr2l,c
 38073  00D092  0E00               	movlw	high _pBDTEntryIn
 38074  00D094  20F4               	addwfc	prodh,w,c
 38075  00D096  6EDA               	movwf	fsr2h,c
 38076  00D098  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 38077  00D09C  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 38078                           
 38079                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 38080  00D0A0  5134               	movf	52,w,b	;volatile
 38081  00D0A2  0B0F               	andlw	15
 38082  00D0A4  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38083  00D0A6  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38084  00D0A8  0D01               	mullw	1
 38085  00D0AA  0E58               	movlw	low _ep_data_in
 38086  00D0AC  24F3               	addwf	prodl,w,c
 38087  00D0AE  6ED9               	movwf	fsr2l,c
 38088  00D0B0  0E01               	movlw	high _ep_data_in
 38089  00D0B2                     L68:
 38090  00D0B2  20F4               	addwfc	prodh,w,c
 38091  00D0B4  6EDA               	movwf	fsr2h,c
 38092  00D0B6  50DF               	movf	indf2,w,c
 38093  00D0B8  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 38094                           
 38095                           ; BSR set to: 13
 38096                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 38097                           
 38098                           ; BSR set to: 13
 38099  00D0BA  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 38100  00D0BC  D006               	goto	i2l377
 38101                           
 38102                           ; BSR set to: 13
 38103                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 38104  00D0BE  0EFB               	movlw	251
 38105  00D0C0  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 38106  00D0C2  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38107  00D0C4  0EFF               	movlw	255
 38108  00D0C6  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 38109  00D0C8  D004               	goto	L69
 38110  00D0CA                     i2l377:
 38111                           
 38112                           ; BSR set to: 13
 38113                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 38114                           
 38115                           ; BSR set to: 13
 38116  00D0CA  0E04               	movlw	4
 38117  00D0CC  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 38118  00D0CE  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38119  00D0D0  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 38120  00D0D2                     L69:
 38121  00D0D2  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 38122                           
 38123                           ; BSR set to: 13
 38124                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 38125                           
 38126                           ; BSR set to: 13
 38127  00D0D4  BF34               	btfsc	52,7,b	;volatile
 38128  00D0D6  D00A               	goto	i2l379
 38129                           
 38130                           ; BSR set to: 13
 38131                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 38132  00D0D8  5134               	movf	52,w,b	;volatile
 38133  00D0DA  0B0F               	andlw	15
 38134  00D0DC  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38135  00D0DE  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38136  00D0E0  0D02               	mullw	2
 38137  00D0E2  0E31               	movlw	low _pBDTEntryOut
 38138  00D0E4  24F3               	addwf	prodl,w,c
 38139  00D0E6  6ED9               	movwf	fsr2l,c
 38140  00D0E8  0E01               	movlw	high _pBDTEntryOut
 38141  00D0EA  D009               	goto	L70
 38142  00D0EC                     i2l379:
 38143                           
 38144                           ; BSR set to: 13
 38145                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 38146                           
 38147                           ; BSR set to: 13
 38148  00D0EC  5134               	movf	52,w,b	;volatile
 38149  00D0EE  0B0F               	andlw	15
 38150  00D0F0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38151  00D0F2  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38152  00D0F4  0D02               	mullw	2
 38153  00D0F6  0E10               	movlw	low _pBDTEntryIn
 38154  00D0F8  24F3               	addwf	prodl,w,c
 38155  00D0FA  6ED9               	movwf	fsr2l,c
 38156  00D0FC  0E00               	movlw	high _pBDTEntryIn
 38157  00D0FE                     L70:
 38158  00D0FE  20F4               	addwfc	prodh,w,c
 38159  00D100  6EDA               	movwf	fsr2h,c
 38160  00D102  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 38161  00D106  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 38162                           
 38163                           ; BSR set to: 13
 38164                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 38165                           
 38166                           ; BSR set to: 13
 38167  00D10A  0E03               	movlw	3
 38168  00D10C  1931               	xorwf	49,w,b	;volatile
 38169  00D10E  A4D8               	btfss	status,2,c
 38170  00D110  D02D               	goto	i2l381
 38171                           
 38172                           ; BSR set to: 13
 38173                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 38174  00D112  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38175  00D116  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38176  00D11A  AEDF               	btfss	indf2,7,c
 38177  00D11C  D01A               	goto	i2l384
 38178                           
 38179                           ; BSR set to: 13
 38180                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 38181  00D11E  BF34               	btfsc	52,7,b	;volatile
 38182  00D120  D00A               	goto	i2l383
 38183                           
 38184                           ; BSR set to: 13
 38185                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 38186  00D122  5134               	movf	52,w,b	;volatile
 38187  00D124  0B0F               	andlw	15
 38188  00D126  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38189  00D128  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38190  00D12A  0D01               	mullw	1
 38191  00D12C  0E55               	movlw	low _ep_data_out
 38192  00D12E  24F3               	addwf	prodl,w,c
 38193  00D130  6ED9               	movwf	fsr2l,c
 38194  00D132  0E01               	movlw	high _ep_data_out
 38195  00D134  D00A               	goto	L71
 38196  00D136                     i2l383:
 38197                           
 38198                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 38199                           
 38200                           ; BSR set to: 1
 38201  00D136  010D               	movlb	13	; () banked
 38202  00D138  5134               	movf	52,w,b	;volatile
 38203  00D13A  0B0F               	andlw	15
 38204  00D13C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38205  00D13E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38206  00D140  0D01               	mullw	1
 38207  00D142  0E58               	movlw	low _ep_data_in
 38208  00D144  24F3               	addwf	prodl,w,c
 38209  00D146  6ED9               	movwf	fsr2l,c
 38210  00D148  0E01               	movlw	high _ep_data_in
 38211  00D14A                     L71:
 38212  00D14A  20F4               	addwfc	prodh,w,c
 38213  00D14C  6EDA               	movwf	fsr2h,c
 38214  00D14E  0101               	movlb	1	; () banked
 38215  00D150  82DF               	bsf	indf2,1,c
 38216  00D152                     i2l384:
 38217                           
 38218                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 38219                           
 38220                           ; BSR set to: 1
 38221                           
 38222                           ; BSR set to: 1
 38223  00D152  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38224  00D156  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38225  00D15A  0E00               	movlw	0
 38226  00D15C  84DB               	bsf	plusw2,2,c
 38227                           
 38228                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 38229  00D15E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38230  00D162  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38231  00D166  0E00               	movlw	0
 38232  00D168  8EDB               	bsf	plusw2,7,c
 38233                           
 38234                           ;usb_device.c: 2878: }
 38235  00D16A  0012               	return	
 38236  00D16C                     i2l381:
 38237                           
 38238                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 38239  00D16C  0E04               	movlw	4
 38240  00D16E  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 38241  00D170  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38242  00D172  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 38243  00D174  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 38244                           
 38245                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 38246  00D176  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38247  00D17A  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38248  00D17E  AEDF               	btfss	indf2,7,c
 38249  00D180  D01B               	goto	i2l386
 38250                           
 38251                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 38252  00D182  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38253  00D186  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38254  00D18A  0E7F               	movlw	127
 38255  00D18C  16DF               	andwf	indf2,f,c
 38256                           
 38257                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 38258  00D18E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38259  00D192  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38260  00D196  0E00               	movlw	0
 38261  00D198  8CDB               	bsf	plusw2,6,c
 38262                           
 38263                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 38264  00D19A  0E00               	movlw	0
 38265  00D19C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 38266  00D19E  0E05               	movlw	5
 38267  00D1A0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 38268  00D1A2  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 38269  00D1A6  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 38270  00D1AA  0E00               	movlw	0
 38271  00D1AC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 38272  00D1AE  0E02               	movlw	2
 38273  00D1B0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 38274  00D1B2  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 38275                           
 38276                           ;usb_device.c: 2893: }
 38277  00D1B6  D006               	goto	i2l387
 38278  00D1B8                     i2l386:
 38279                           
 38280                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 38281  00D1B8  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38282  00D1BC  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38283  00D1C0  0E00               	movlw	0
 38284  00D1C2  8CDB               	bsf	plusw2,6,c
 38285  00D1C4                     i2l387:
 38286                           
 38287                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 38288  00D1C4  0E04               	movlw	4
 38289  00D1C6  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 38290  00D1C8  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38291  00D1CA  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 38292  00D1CC  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 38293                           
 38294                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 38295  00D1CE  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 38296  00D1D0  D006               	goto	i2u1802_40
 38297  00D1D2  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38298  00D1D6  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38299  00D1DA  AEDF               	btfss	indf2,7,c
 38300  00D1DC  D030               	goto	i2l388
 38301  00D1DE                     i2u1802_40:
 38302                           
 38303                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 38304  00D1DE  010D               	movlb	13	; () banked
 38305  00D1E0  BF34               	btfsc	52,7,b	;volatile
 38306  00D1E2  D00A               	goto	i2l391
 38307                           
 38308                           ; BSR set to: 13
 38309                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 38310  00D1E4  5134               	movf	52,w,b	;volatile
 38311  00D1E6  0B0F               	andlw	15
 38312  00D1E8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38313  00D1EA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38314  00D1EC  0D01               	mullw	1
 38315  00D1EE  0E55               	movlw	low _ep_data_out
 38316  00D1F0  24F3               	addwf	prodl,w,c
 38317  00D1F2  6ED9               	movwf	fsr2l,c
 38318  00D1F4  0E01               	movlw	high _ep_data_out
 38319  00D1F6  D00A               	goto	L72
 38320  00D1F8                     i2l391:
 38321                           
 38322                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 38323                           
 38324                           ; BSR set to: 1
 38325  00D1F8  010D               	movlb	13	; () banked
 38326  00D1FA  5134               	movf	52,w,b	;volatile
 38327  00D1FC  0B0F               	andlw	15
 38328  00D1FE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38329  00D200  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38330  00D202  0D01               	mullw	1
 38331  00D204  0E58               	movlw	low _ep_data_in
 38332  00D206  24F3               	addwf	prodl,w,c
 38333  00D208  6ED9               	movwf	fsr2l,c
 38334  00D20A  0E01               	movlw	high _ep_data_in
 38335  00D20C                     L72:
 38336  00D20C  20F4               	addwfc	prodh,w,c
 38337  00D20E  6EDA               	movwf	fsr2h,c
 38338  00D210  0101               	movlb	1	; () banked
 38339  00D212  92DF               	bcf	indf2,1,c
 38340                           
 38341                           ; BSR set to: 1
 38342                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 38343                           
 38344                           ; BSR set to: 1
 38345  00D214  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38346  00D218  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38347  00D21C  0E3B               	movlw	59
 38348  00D21E  16DF               	andwf	indf2,f,c
 38349                           
 38350                           ; BSR set to: 1
 38351                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 38352  00D220  0E00               	movlw	0
 38353  00D222  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 38354  00D224  0E05               	movlw	5
 38355  00D226  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 38356  00D228  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 38357  00D22C  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 38358  00D230  0E00               	movlw	0
 38359  00D232  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 38360  00D234  0E02               	movlw	2
 38361  00D236  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 38362  00D238  EC12  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 38363                           
 38364                           ;usb_device.c: 2923: }
 38365  00D23C  D006               	goto	i2l393
 38366  00D23E                     i2l388:
 38367                           
 38368                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 38369  00D23E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38370  00D242  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38371  00D246  0E3B               	movlw	59
 38372  00D248  16DF               	andwf	indf2,f,c
 38373  00D24A                     i2l393:
 38374                           
 38375                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 38376  00D24A  010D               	movlb	13	; () banked
 38377  00D24C  5134               	movf	52,w,b	;volatile
 38378  00D24E  0B0F               	andlw	15
 38379  00D250  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38380  00D252  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38381  00D254  0D01               	mullw	1
 38382  00D256  0E26               	movlw	38
 38383  00D258  24F3               	addwf	prodl,w,c
 38384  00D25A  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 38385  00D25C  0E0F               	movlw	15
 38386  00D25E  20F4               	addwfc	prodh,w,c
 38387  00D260  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 38388                           
 38389                           ; BSR set to: 13
 38390                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 38391  00D262  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 38392  00D266  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 38393  00D26A  0EFE               	movlw	254
 38394  00D26C  16DF               	andwf	indf2,f,c
 38395                           
 38396                           ; BSR set to: 13
 38397  00D26E  0012               	return	
 38398  00D270                     __end_of_USBStdFeatureReqHandler:
 38399                           	opt stack 0
 38400                           tosu	equ	0xFFF
 38401                           tosh	equ	0xFFE
 38402                           tosl	equ	0xFFD
 38403                           pclatu	equ	0xFFB
 38404                           pclath	equ	0xFFA
 38405                           tblptru	equ	0xFF8
 38406                           tblptrh	equ	0xFF7
 38407                           tblptrl	equ	0xFF6
 38408                           tablat	equ	0xFF5
 38409                           prodh	equ	0xFF4
 38410                           prodl	equ	0xFF3
 38411                           intcon	equ	0xFF2
 38412                           indf0	equ	0xFEF
 38413                           postinc0	equ	0xFEE
 38414                           fsr0h	equ	0xFEA
 38415                           fsr0l	equ	0xFE9
 38416                           wreg	equ	0xFE8
 38417                           indf1	equ	0xFE7
 38418                           postdec1	equ	0xFE5
 38419                           plusw1	equ	0xFE3
 38420                           fsr1h	equ	0xFE2
 38421                           fsr1l	equ	0xFE1
 38422                           indf2	equ	0xFDF
 38423                           postinc2	equ	0xFDE
 38424                           postdec2	equ	0xFDD
 38425                           plusw2	equ	0xFDB
 38426                           fsr2h	equ	0xFDA
 38427                           fsr2l	equ	0xFD9
 38428                           status	equ	0xFD8
 38429                           
 38430 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 38431 ;; Defined at:
 38432 ;;		line 54 in file "usb_events.c"
 38433 ;; Parameters:    Size  Location     Type
 38434 ;;  event           2   15[COMRAM] enum E6832
 38435 ;;  pdata           2   17[COMRAM] PTR void 
 38436 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 38437 ;;		 -> BDT(48), 
 38438 ;;  size            2   19[COMRAM] unsigned int 
 38439 ;; Auto vars:     Size  Location     Type
 38440 ;;		None
 38441 ;; Return value:  Size  Location     Type
 38442 ;;                  1    wreg      unsigned char 
 38443 ;; Registers used:
 38444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38445 ;; Tracked objects:
 38446 ;;		On entry : 0/0
 38447 ;;		On exit  : 0/0
 38448 ;;		Unchanged: 0/0
 38449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38453 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38454 ;;Total ram usage:        8 bytes
 38455 ;; Hardware stack levels used:    1
 38456 ;; Hardware stack levels required when called:    3
 38457 ;; This function calls:
 38458 ;;		_APP_DeviceCustomHIDInitialize
 38459 ;;		_APP_DeviceMSDInitialize
 38460 ;;		_MSDTransferTerminated
 38461 ;;		_USBCheckHIDRequest
 38462 ;;		_USBCheckMSDRequest
 38463 ;;		i2_SYSTEM_Initialize
 38464 ;; This function is called by:
 38465 ;;		_USBDeviceTasks
 38466 ;;		_USBStdSetCfgHandler
 38467 ;;		_USBSuspend
 38468 ;;		_USBWakeFromSuspend
 38469 ;;		_USBCtrlTrfSetupHandler
 38470 ;;		_USBCheckStdRequest
 38471 ;;		_USBStdFeatureReqHandler
 38472 ;; This function uses a non-reentrant model
 38473 ;;
 38474                           
 38475                           	psect	text143
 38476  011624                     __ptext143:
 38477                           	opt stack 0
 38478  011624                     _USER_USB_CALLBACK_EVENT_HANDLER:
 38479                           	opt stack 13
 38480                           
 38481                           ;usb_events.c: 56: switch((int)event)
 38482                           
 38483                           ;incstack = 0
 38484  011624  D019               	goto	i2l816
 38485  011626                     
 38486                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 38487  011626  0E01               	movlw	1
 38488  011628  EC03  F090         	call	i2_SYSTEM_Initialize
 38489                           
 38490                           ;usb_events.c: 79: break;
 38491  01162C  0012               	return	
 38492  01162E                     
 38493                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 38494  01162E  0E02               	movlw	2
 38495  011630  EC03  F090         	call	i2_SYSTEM_Initialize
 38496                           
 38497                           ;usb_events.c: 90: break;
 38498  011634  0012               	return	
 38499  011636                     
 38500                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 38501  011636  EC89  F093         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 38502                           
 38503                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 38504  01163A  EC3A  F095         	call	_APP_DeviceMSDInitialize	;wreg free
 38505                           
 38506                           ;usb_events.c: 100: break;
 38507                           
 38508                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 38509                           
 38510                           ;usb_events.c: 97: break;
 38511  01163E  0012               	return	
 38512  011640                     
 38513                           ;usb_events.c: 105: USBCheckHIDRequest();
 38514  011640  EC52  F083         	call	_USBCheckHIDRequest	;wreg free
 38515                           
 38516                           ;usb_events.c: 108: USBCheckMSDRequest();
 38517  011644  EC50  F085         	call	_USBCheckMSDRequest	;wreg free
 38518                           
 38519                           ;usb_events.c: 112: break;
 38520                           
 38521                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 38522                           
 38523                           ;usb_events.c: 109: break;
 38524  011648  0012               	return	
 38525  01164A                     
 38526                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 38527  01164A  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 38528  01164E  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 38529  011652  EC84  F08F         	call	_MSDTransferTerminated	;wreg free
 38530                           
 38531                           ;usb_events.c: 129: }
 38532                           
 38533                           ;usb_events.c: 128: break;
 38534                           
 38535                           ;usb_events.c: 127: default:
 38536                           
 38537                           ;usb_events.c: 125: break;
 38538  011656  0012               	return	
 38539  011658                     i2l816:
 38540  011658  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 38541  01165C  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 38542                           
 38543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 38544                           ; Switch size 1, requested type "space"
 38545                           ; Number of cases is 2, Range of values is 0 to 127
 38546                           ; switch strategies available:
 38547                           ; Name         Instructions Cycles
 38548                           ; simple_byte            7     4 (average)
 38549                           ;	Chosen strategy is simple_byte
 38550  011660  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 38551  011662  0A00               	xorlw	0	; case 0
 38552  011664  B4D8               	btfsc	status,2,c
 38553  011666  D004               	goto	i2l23371
 38554  011668  0A7F               	xorlw	127	; case 127
 38555  01166A  A4D8               	btfss	status,2,c
 38556  01166C  0012               	return	
 38557  01166E  D01A               	goto	i2l23373
 38558  011670                     i2l23371:
 38559                           
 38560                           ; Switch size 1, requested type "space"
 38561                           ; Number of cases is 8, Range of values is 1 to 117
 38562                           ; switch strategies available:
 38563                           ; Name         Instructions Cycles
 38564                           ; simple_byte           25    13 (average)
 38565                           ;	Chosen strategy is simple_byte
 38566  011670  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 38567  011672  0A01               	xorlw	1	; case 1
 38568  011674  B4D8               	btfsc	status,2,c
 38569  011676  D7DF               	goto	i2l822
 38570  011678  0A03               	xorlw	3	; case 2
 38571  01167A  B4D8               	btfsc	status,2,c
 38572  01167C  0012               	return	
 38573  01167E  0A01               	xorlw	1	; case 3
 38574  011680  B4D8               	btfsc	status,2,c
 38575  011682  D7DE               	goto	i2l824
 38576  011684  0A06               	xorlw	6	; case 5
 38577  011686  B4D8               	btfsc	status,2,c
 38578  011688  D7E0               	goto	i2l826
 38579  01168A  0A77               	xorlw	119	; case 114
 38580  01168C  B4D8               	btfsc	status,2,c
 38581  01168E  0012               	return	
 38582  011690  0A01               	xorlw	1	; case 115
 38583  011692  B4D8               	btfsc	status,2,c
 38584  011694  0012               	return	
 38585  011696  0A07               	xorlw	7	; case 116
 38586  011698  B4D8               	btfsc	status,2,c
 38587  01169A  D7C9               	goto	i2l821
 38588  01169C  0A01               	xorlw	1	; case 117
 38589  01169E  A4D8               	btfss	status,2,c
 38590  0116A0  0012               	return	
 38591  0116A2  D7C1               	goto	i2l820
 38592  0116A4                     i2l23373:
 38593                           
 38594                           ; Switch size 1, requested type "space"
 38595                           ; Number of cases is 1, Range of values is 255 to 255
 38596                           ; switch strategies available:
 38597                           ; Name         Instructions Cycles
 38598                           ; simple_byte            4     3 (average)
 38599                           ;	Chosen strategy is simple_byte
 38600  0116A4  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 38601  0116A6  0AFF               	xorlw	255	; case 255
 38602  0116A8  0012               	return	
 38603  0116AA                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 38604                           	opt stack 0
 38605                           tosu	equ	0xFFF
 38606                           tosh	equ	0xFFE
 38607                           tosl	equ	0xFFD
 38608                           pclatu	equ	0xFFB
 38609                           pclath	equ	0xFFA
 38610                           tblptru	equ	0xFF8
 38611                           tblptrh	equ	0xFF7
 38612                           tblptrl	equ	0xFF6
 38613                           tablat	equ	0xFF5
 38614                           prodh	equ	0xFF4
 38615                           prodl	equ	0xFF3
 38616                           intcon	equ	0xFF2
 38617                           indf0	equ	0xFEF
 38618                           postinc0	equ	0xFEE
 38619                           fsr0h	equ	0xFEA
 38620                           fsr0l	equ	0xFE9
 38621                           wreg	equ	0xFE8
 38622                           indf1	equ	0xFE7
 38623                           postdec1	equ	0xFE5
 38624                           plusw1	equ	0xFE3
 38625                           fsr1h	equ	0xFE2
 38626                           fsr1l	equ	0xFE1
 38627                           indf2	equ	0xFDF
 38628                           postinc2	equ	0xFDE
 38629                           postdec2	equ	0xFDD
 38630                           plusw2	equ	0xFDB
 38631                           fsr2h	equ	0xFDA
 38632                           fsr2l	equ	0xFD9
 38633                           status	equ	0xFD8
 38634                           
 38635 ;; *************** function i2_SYSTEM_Initialize *****************
 38636 ;; Defined at:
 38637 ;;		line 39 in file "system.c"
 38638 ;; Parameters:    Size  Location     Type
 38639 ;;  state           1    wreg     enum E6623
 38640 ;; Auto vars:     Size  Location     Type
 38641 ;;  state           1    4[COMRAM] enum E6623
 38642 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 38643 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 38644 ;; Return value:  Size  Location     Type
 38645 ;;                  1    wreg      void 
 38646 ;; Registers used:
 38647 ;;		wreg, status,2, status,0
 38648 ;; Tracked objects:
 38649 ;;		On entry : 0/0
 38650 ;;		On exit  : 0/0
 38651 ;;		Unchanged: 0/0
 38652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38654 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38657 ;;Total ram usage:        5 bytes
 38658 ;; Hardware stack levels used:    1
 38659 ;; This function calls:
 38660 ;;		Nothing
 38661 ;; This function is called by:
 38662 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38663 ;; This function uses a non-reentrant model
 38664 ;;
 38665                           
 38666                           	psect	text144
 38667  012006                     __ptext144:
 38668                           	opt stack 0
 38669  012006                     i2_SYSTEM_Initialize:
 38670                           	opt stack 15
 38671                           
 38672                           ;incstack = 0
 38673                           ;i2SYSTEM_Initialize@state stored from wreg
 38674  012006  6E32               	movwf	i2SYSTEM_Initialize@state,c
 38675                           
 38676                           ;system.c: 41: switch(state)
 38677  012008  D01D               	goto	i2l892
 38678  01200A                     
 38679                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 38680  01200A  0E02               	movlw	2
 38681  01200C  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 38682  01200E  0E58               	movlw	88
 38683  012010  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 38684                           
 38685                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 38686  012012  8C9B               	bsf	3995,6,c	;volatile
 38687  012014                     i2l11077:
 38688  012014  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 38689  012016  A0D8               	btfss	status,0,c
 38690  012018  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 38691  01201A  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 38692  01201C  E1FB               	bnz	i2l11077
 38693  01201E  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 38694  012020  B4D8               	btfsc	status,2,c
 38695  012022  0012               	return	
 38696  012024  D7F7               	goto	i2l895
 38697  012026                     
 38698                           ;system.c: 78: OSCCON = 0x70;
 38699  012026  0E70               	movlw	112
 38700  012028  6ED3               	movwf	4051,c	;volatile
 38701                           
 38702                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 38703  01202A  0E03               	movlw	3
 38704  01202C  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3114+1,c
 38705  01202E  0E20               	movlw	32
 38706  012030  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3114,c
 38707  012032                     i2l11081:
 38708  012032  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3114,f,c
 38709  012034  A0D8               	btfss	status,0,c
 38710  012036  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3114+1,f,c
 38711  012038  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3114,w,c
 38712  01203A  E1FB               	bnz	i2l11081
 38713  01203C  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3114+1,w,c
 38714  01203E  B4D8               	btfsc	status,2,c
 38715  012040  0012               	return	
 38716  012042  D7F7               	goto	i2l901
 38717  012044                     i2l892:
 38718  012044  5032               	movf	i2SYSTEM_Initialize@state,w,c
 38719                           
 38720                           ; Switch size 1, requested type "space"
 38721                           ; Number of cases is 3, Range of values is 0 to 2
 38722                           ; switch strategies available:
 38723                           ; Name         Instructions Cycles
 38724                           ; simple_byte           10     6 (average)
 38725                           ;	Chosen strategy is simple_byte
 38726  012046  0A00               	xorlw	0	; case 0
 38727  012048  B4D8               	btfsc	status,2,c
 38728  01204A  D7DF               	goto	i2l893
 38729  01204C  0A01               	xorlw	1	; case 1
 38730  01204E  B4D8               	btfsc	status,2,c
 38731  012050  0012               	return	
 38732  012052  0A03               	xorlw	3	; case 2
 38733  012054  A4D8               	btfss	status,2,c
 38734  012056  0012               	return	
 38735  012058  D7E6               	goto	i2l899
 38736  01205A                     __end_ofi2_SYSTEM_Initialize:
 38737                           	opt stack 0
 38738                           tosu	equ	0xFFF
 38739                           tosh	equ	0xFFE
 38740                           tosl	equ	0xFFD
 38741                           pclatu	equ	0xFFB
 38742                           pclath	equ	0xFFA
 38743                           tblptru	equ	0xFF8
 38744                           tblptrh	equ	0xFF7
 38745                           tblptrl	equ	0xFF6
 38746                           tablat	equ	0xFF5
 38747                           prodh	equ	0xFF4
 38748                           prodl	equ	0xFF3
 38749                           intcon	equ	0xFF2
 38750                           indf0	equ	0xFEF
 38751                           postinc0	equ	0xFEE
 38752                           fsr0h	equ	0xFEA
 38753                           fsr0l	equ	0xFE9
 38754                           wreg	equ	0xFE8
 38755                           indf1	equ	0xFE7
 38756                           postdec1	equ	0xFE5
 38757                           plusw1	equ	0xFE3
 38758                           fsr1h	equ	0xFE2
 38759                           fsr1l	equ	0xFE1
 38760                           indf2	equ	0xFDF
 38761                           postinc2	equ	0xFDE
 38762                           postdec2	equ	0xFDD
 38763                           plusw2	equ	0xFDB
 38764                           fsr2h	equ	0xFDA
 38765                           fsr2l	equ	0xFD9
 38766                           status	equ	0xFD8
 38767                           
 38768 ;; *************** function _USBCheckMSDRequest *****************
 38769 ;; Defined at:
 38770 ;;		line 218 in file "usb_device_msd.c"
 38771 ;; Parameters:    Size  Location     Type
 38772 ;;		None
 38773 ;; Auto vars:     Size  Location     Type
 38774 ;;		None
 38775 ;; Return value:  Size  Location     Type
 38776 ;;                  1    wreg      void 
 38777 ;; Registers used:
 38778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38779 ;; Tracked objects:
 38780 ;;		On entry : 0/0
 38781 ;;		On exit  : 0/0
 38782 ;;		Unchanged: 0/0
 38783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38788 ;;Total ram usage:        4 bytes
 38789 ;; Hardware stack levels used:    1
 38790 ;; Hardware stack levels required when called:    1
 38791 ;; This function calls:
 38792 ;;		i2_USBTransferOnePacket
 38793 ;; This function is called by:
 38794 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38795 ;; This function uses a non-reentrant model
 38796 ;;
 38797                           
 38798                           	psect	text145
 38799  010AA0                     __ptext145:
 38800                           	opt stack 0
 38801  010AA0                     _USBCheckMSDRequest:
 38802                           	opt stack 14
 38803                           
 38804                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 38805                           
 38806                           ;incstack = 0
 38807  010AA0  010D               	movlb	13	; () banked
 38808  010AA2  5130               	movf	48,w,b	;volatile
 38809  010AA4  0B1F               	andlw	31
 38810  010AA6  06E8               	decf	wreg,f,c
 38811  010AA8  A4D8               	btfss	status,2,c
 38812  010AAA  0012               	return	
 38813                           
 38814                           ; BSR set to: 13
 38815                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 38816                           
 38817                           ; BSR set to: 13
 38818                           
 38819                           ; BSR set to: 13
 38820                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 38821  010AAC  5134               	movf	52,w,b	;volatile
 38822  010AAE  A4D8               	btfss	status,2,c
 38823  010AB0  0012               	return	
 38824  010AB2  D04D               	goto	i2l545
 38825  010AB4                     
 38826                           ; BSR set to: 13
 38827                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 38828                           
 38829                           ; BSR set to: 13
 38830  010AB4  5132               	movf	50,w,b	;volatile
 38831  010AB6  1133               	iorwf	51,w,b	;volatile
 38832  010AB8  A4D8               	btfss	status,2,c
 38833  010ABA  0012               	return	
 38834                           
 38835                           ; BSR set to: 13
 38836  010ABC  5136               	movf	54,w,b	;volatile
 38837  010ABE  1137               	iorwf	55,w,b	;volatile
 38838  010AC0  A4D8               	btfss	status,2,c
 38839  010AC2  0012               	return	
 38840                           
 38841                           ; BSR set to: 13
 38842                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 38843                           
 38844                           ; BSR set to: 13
 38845                           
 38846                           ; BSR set to: 13
 38847                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 38848  010AC4  0E00               	movlw	0
 38849  010AC6  0100               	movlb	0	; () banked
 38850  010AC8  6FD2               	movwf	_MSD_State& (0+255),b
 38851                           
 38852                           ; BSR set to: 0
 38853                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 38854  010ACA  69D1               	setf	_MSDCommandState& (0+255),b
 38855                           
 38856                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 38857  010ACC  0E00               	movlw	0
 38858  010ACE  0101               	movlb	1	; () banked
 38859  010AD0  6F70               	movwf	_MSDReadState& (0+255),b
 38860                           
 38861                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 38862  010AD2  0E00               	movlw	0
 38863  010AD4  6E25               	movwf	_MSDWriteState,c
 38864                           
 38865                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 38866  010AD6  0E01               	movlw	1
 38867  010AD8  6F6C               	movwf	_MSDCBWValid& (0+255),b
 38868                           
 38869                           ; BSR set to: 1
 38870                           
 38871                           ; BSR set to: 1
 38872                           
 38873                           ; BSR set to: 1
 38874                           
 38875                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 38876  010ADA  C135  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 38877  010ADE  C136  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 38878                           
 38879                           ; BSR set to: 1
 38880  010AE2  5039               	movf	_USBCheckMSDRequest$2534,w,c
 38881  010AE4  103A               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 38882  010AE6  B4D8               	btfsc	status,2,c
 38883  010AE8  D00A               	goto	i2u887_40
 38884                           
 38885                           ; BSR set to: 1
 38886                           
 38887                           ; BSR set to: 1
 38888                           
 38889                           ; BSR set to: 1
 38890                           
 38891                           ; BSR set to: 1
 38892  010AEA  C135  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 38893  010AEE  C136  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 38894                           
 38895                           ; BSR set to: 1
 38896                           
 38897                           ; BSR set to: 1
 38898  010AF2  C03B  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 38899  010AF6  C03C  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 38900  010AFA  BEDF               	btfsc	indf2,7,c
 38901  010AFC  D00F               	goto	i2l550
 38902  010AFE                     i2u887_40:
 38903                           
 38904                           ; BSR set to: 1
 38905                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 38906                           
 38907                           ; BSR set to: 1
 38908  010AFE  0E00               	movlw	0
 38909  010B00  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 38910  010B02  0E40               	movlw	64
 38911  010B04  6E2F               	movwf	i2USBTransferOnePacket@data,c
 38912  010B06  0E0D               	movlw	13
 38913  010B08  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 38914  010B0A  0E40               	movlw	64
 38915  010B0C  6E31               	movwf	i2USBTransferOnePacket@len,c
 38916  010B0E  0E02               	movlw	2
 38917  010B10  ECE6  F07D         	call	i2_USBTransferOnePacket
 38918  010B14  C02E  F0CE         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 38919  010B18  C02F  F0CF         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 38920  010B1C                     i2l550:
 38921                           
 38922                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 38923  010B1C  0E80               	movlw	128
 38924  010B1E  6E0D               	movwf	_inPipes+3,c	;volatile
 38925                           
 38926                           ;usb_device_msd.c: 263: break;
 38927  010B20  0012               	return	
 38928  010B22                     
 38929                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 38930  010B22  010D               	movlb	13	; () banked
 38931  010B24  5132               	movf	50,w,b	;volatile
 38932  010B26  1133               	iorwf	51,w,b	;volatile
 38933  010B28  A4D8               	btfss	status,2,c
 38934  010B2A  0012               	return	
 38935                           
 38936                           ; BSR set to: 13
 38937  010B2C  0536               	decf	54,w,b	;volatile
 38938  010B2E  1137               	iorwf	55,w,b	;volatile
 38939  010B30  A4D8               	btfss	status,2,c
 38940  010B32  0012               	return	
 38941                           
 38942                           ; BSR set to: 13
 38943                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 38944                           
 38945                           ; BSR set to: 13
 38946                           
 38947                           ; BSR set to: 13
 38948                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 38949  010B34  0E00               	movlw	0
 38950  010B36  6F38               	movwf	56,b	;volatile
 38951                           
 38952                           ; BSR set to: 13
 38953                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 38954  010B38  0E38               	movlw	56
 38955  010B3A  6E0A               	movwf	_inPipes,c	;volatile
 38956  010B3C  0E0D               	movlw	13
 38957  010B3E  6E0B               	movwf	_inPipes+1,c	;volatile
 38958                           
 38959                           ; BSR set to: 13
 38960  010B40  0E00               	movlw	0
 38961  010B42  6E0F               	movwf	_inPipes+5,c	;volatile
 38962  010B44  0E01               	movlw	1
 38963  010B46  6E0E               	movwf	_inPipes+4,c	;volatile
 38964                           
 38965                           ; BSR set to: 13
 38966  010B48  0EC1               	movlw	193
 38967  010B4A  6E0D               	movwf	_inPipes+3,c	;volatile
 38968                           
 38969                           ; BSR set to: 13
 38970                           ;usb_device_msd.c: 278: }
 38971                           
 38972                           ;usb_device_msd.c: 277: break;
 38973  010B4C  0012               	return	
 38974  010B4E                     i2l545:
 38975                           
 38976                           ; BSR set to: 13
 38977                           
 38978                           ; BSR set to: 13
 38979  010B4E  5131               	movf	49,w,b	;volatile
 38980                           
 38981                           ; Switch size 1, requested type "space"
 38982                           ; Number of cases is 2, Range of values is 254 to 255
 38983                           ; switch strategies available:
 38984                           ; Name         Instructions Cycles
 38985                           ; simple_byte            7     4 (average)
 38986                           ;	Chosen strategy is simple_byte
 38987  010B50  0AFE               	xorlw	254	; case 254
 38988  010B52  B4D8               	btfsc	status,2,c
 38989  010B54  D7E6               	goto	i2l562
 38990  010B56  0A01               	xorlw	1	; case 255
 38991  010B58  A4D8               	btfss	status,2,c
 38992  010B5A  0012               	return	
 38993  010B5C  D7AB               	goto	i2l546
 38994  010B5E                     __end_of_USBCheckMSDRequest:
 38995                           	opt stack 0
 38996                           tosu	equ	0xFFF
 38997                           tosh	equ	0xFFE
 38998                           tosl	equ	0xFFD
 38999                           pclatu	equ	0xFFB
 39000                           pclath	equ	0xFFA
 39001                           tblptru	equ	0xFF8
 39002                           tblptrh	equ	0xFF7
 39003                           tblptrl	equ	0xFF6
 39004                           tablat	equ	0xFF5
 39005                           prodh	equ	0xFF4
 39006                           prodl	equ	0xFF3
 39007                           intcon	equ	0xFF2
 39008                           indf0	equ	0xFEF
 39009                           postinc0	equ	0xFEE
 39010                           fsr0h	equ	0xFEA
 39011                           fsr0l	equ	0xFE9
 39012                           wreg	equ	0xFE8
 39013                           indf1	equ	0xFE7
 39014                           postdec1	equ	0xFE5
 39015                           plusw1	equ	0xFE3
 39016                           fsr1h	equ	0xFE2
 39017                           fsr1l	equ	0xFE1
 39018                           indf2	equ	0xFDF
 39019                           postinc2	equ	0xFDE
 39020                           postdec2	equ	0xFDD
 39021                           plusw2	equ	0xFDB
 39022                           fsr2h	equ	0xFDA
 39023                           fsr2l	equ	0xFD9
 39024                           status	equ	0xFD8
 39025                           
 39026 ;; *************** function _USBCheckHIDRequest *****************
 39027 ;; Defined at:
 39028 ;;		line 153 in file "usb_device_hid.c"
 39029 ;; Parameters:    Size  Location     Type
 39030 ;;		None
 39031 ;; Auto vars:     Size  Location     Type
 39032 ;;		None
 39033 ;; Return value:  Size  Location     Type
 39034 ;;                  1    wreg      void 
 39035 ;; Registers used:
 39036 ;;		wreg, status,2, status,0
 39037 ;; Tracked objects:
 39038 ;;		On entry : 0/0
 39039 ;;		On exit  : 0/0
 39040 ;;		Unchanged: 0/0
 39041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39046 ;;Total ram usage:        0 bytes
 39047 ;; Hardware stack levels used:    1
 39048 ;; This function calls:
 39049 ;;		Nothing
 39050 ;; This function is called by:
 39051 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39052 ;; This function uses a non-reentrant model
 39053 ;;
 39054                           
 39055                           	psect	text146
 39056  0106A4                     __ptext146:
 39057                           	opt stack 0
 39058  0106A4                     _USBCheckHIDRequest:
 39059                           	opt stack 15
 39060                           
 39061                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 39062                           
 39063                           ;incstack = 0
 39064  0106A4  010D               	movlb	13	; () banked
 39065  0106A6  5130               	movf	48,w,b	;volatile
 39066  0106A8  0B1F               	andlw	31
 39067  0106AA  06E8               	decf	wreg,f,c
 39068  0106AC  A4D8               	btfss	status,2,c
 39069  0106AE  0012               	return	
 39070                           
 39071                           ; BSR set to: 13
 39072                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 39073                           
 39074                           ; BSR set to: 13
 39075                           
 39076                           ; BSR set to: 13
 39077  0106B0  5134               	movf	52,w,b	;volatile
 39078  0106B2  A4D8               	btfss	status,2,c
 39079  0106B4  0012               	return	
 39080                           
 39081                           ; BSR set to: 13
 39082                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 39083                           
 39084                           ; BSR set to: 13
 39085                           
 39086                           ; BSR set to: 13
 39087  0106B6  0E06               	movlw	6
 39088  0106B8  1931               	xorwf	49,w,b	;volatile
 39089  0106BA  B4D8               	btfsc	status,2,c
 39090  0106BC  D018               	goto	i2l425
 39091  0106BE  D01F               	goto	i2l428
 39092  0106C0                     
 39093                           ; BSR set to: 13
 39094                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 39095                           
 39096                           ; BSR set to: 13
 39097  0106C0  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 39098  0106C2  A4D8               	btfss	status,2,c
 39099  0106C4  D01C               	goto	i2l428
 39100                           
 39101                           ; BSR set to: 13
 39102                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 39103  0106C6  0ED0               	movlw	low (_configDescriptor1+18)
 39104  0106C8  6E0A               	movwf	_inPipes,c	;volatile
 39105  0106CA  0EA0               	movlw	high (_configDescriptor1+18)
 39106  0106CC  6E0B               	movwf	_inPipes+1,c	;volatile
 39107                           
 39108                           ; BSR set to: 13
 39109  0106CE  0E00               	movlw	0
 39110  0106D0  6E0F               	movwf	_inPipes+5,c	;volatile
 39111  0106D2  0E09               	movlw	9
 39112  0106D4  D00A               	goto	L73
 39113  0106D6                     i2l10859:
 39114                           
 39115                           ; BSR set to: 13
 39116  0106D6  0EC0               	movlw	192
 39117  0106D8  6E0D               	movwf	_inPipes+3,c	;volatile
 39118                           
 39119                           ; BSR set to: 13
 39120                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 39121  0106DA  D011               	goto	i2l428
 39122  0106DC                     
 39123                           ; BSR set to: 13
 39124                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 39125                           
 39126                           ; BSR set to: 13
 39127  0106DC  0E84               	movlw	low _hid_rpt01
 39128  0106DE  6E0A               	movwf	_inPipes,c	;volatile
 39129  0106E0  0EA1               	movlw	high _hid_rpt01
 39130  0106E2  6E0B               	movwf	_inPipes+1,c	;volatile
 39131                           
 39132                           ; BSR set to: 13
 39133  0106E4  0E00               	movlw	0
 39134  0106E6  6E0F               	movwf	_inPipes+5,c	;volatile
 39135  0106E8  0E1D               	movlw	29
 39136  0106EA                     L73:
 39137  0106EA  6E0E               	movwf	_inPipes+4,c	;volatile
 39138  0106EC  D7F4               	goto	i2l10859
 39139  0106EE                     i2l425:
 39140                           
 39141                           ; BSR set to: 13
 39142                           
 39143                           ; BSR set to: 13
 39144  0106EE  5133               	movf	51,w,b	;volatile
 39145                           
 39146                           ; Switch size 1, requested type "space"
 39147                           ; Number of cases is 3, Range of values is 33 to 35
 39148                           ; switch strategies available:
 39149                           ; Name         Instructions Cycles
 39150                           ; simple_byte           10     6 (average)
 39151                           ;	Chosen strategy is simple_byte
 39152  0106F0  0A21               	xorlw	33	; case 33
 39153  0106F2  B4D8               	btfsc	status,2,c
 39154  0106F4  D7E5               	goto	i2l426
 39155  0106F6  0A03               	xorlw	3	; case 34
 39156  0106F8  B4D8               	btfsc	status,2,c
 39157  0106FA  D7F0               	goto	i2l429
 39158  0106FC  0A01               	xorlw	1	; case 35
 39159  0106FE                     i2l428:
 39160                           
 39161                           ; BSR set to: 13
 39162                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 39163                           
 39164                           ; BSR set to: 13
 39165                           
 39166                           ; BSR set to: 13
 39167  0106FE  3930               	swapf	48,w,b	;volatile
 39168  010700  32E8               	rrcf	wreg,f,c
 39169  010702  0B03               	andlw	3
 39170  010704  06E8               	decf	wreg,f,c
 39171  010706  A4D8               	btfss	status,2,c
 39172  010708  0012               	return	
 39173  01070A  D020               	goto	i2l432
 39174  01070C                     
 39175                           ; BSR set to: 13
 39176                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 39177                           
 39178                           ; BSR set to: 13
 39179  01070C  0E97               	movlw	low _idle_rate
 39180  01070E  6E0A               	movwf	_inPipes,c	;volatile
 39181  010710  0E01               	movlw	high _idle_rate
 39182  010712  6E0B               	movwf	_inPipes+1,c	;volatile
 39183                           
 39184                           ; BSR set to: 13
 39185  010714  0E00               	movlw	0
 39186  010716  6E0F               	movwf	_inPipes+5,c	;volatile
 39187  010718  0E01               	movlw	1
 39188  01071A  6E0E               	movwf	_inPipes+4,c	;volatile
 39189                           
 39190                           ; BSR set to: 13
 39191  01071C  0EC1               	movlw	193
 39192  01071E  6E0D               	movwf	_inPipes+3,c	;volatile
 39193                           
 39194                           ;usb_device_hid.c: 223: break;
 39195  010720  0012               	return	
 39196  010722                     
 39197                           ; BSR set to: 13
 39198                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 39199                           
 39200                           ; BSR set to: 13
 39201  010722  0E80               	movlw	128
 39202  010724  6E0D               	movwf	_inPipes+3,c	;volatile
 39203                           
 39204                           ; BSR set to: 13
 39205                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 39206  010726  CD33 F197          	movff	3379,_idle_rate	;volatile
 39207                           
 39208                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 39209  01072A  0012               	return	
 39210  01072C                     
 39211                           ; BSR set to: 13
 39212                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 39213                           
 39214                           ; BSR set to: 13
 39215  01072C  0E96               	movlw	low _active_protocol
 39216  01072E  6E0A               	movwf	_inPipes,c	;volatile
 39217  010730  0E01               	movlw	high _active_protocol
 39218  010732  6E0B               	movwf	_inPipes+1,c	;volatile
 39219                           
 39220                           ; BSR set to: 13
 39221  010734  0E00               	movlw	0
 39222  010736  6E0F               	movwf	_inPipes+5,c	;volatile
 39223  010738  0E01               	movlw	1
 39224  01073A  6E0E               	movwf	_inPipes+4,c	;volatile
 39225                           
 39226                           ; BSR set to: 13
 39227  01073C  0E81               	movlw	129
 39228  01073E  6E0D               	movwf	_inPipes+3,c	;volatile
 39229                           
 39230                           ;usb_device_hid.c: 234: break;
 39231  010740  0012               	return	
 39232  010742                     
 39233                           ; BSR set to: 13
 39234                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 39235                           
 39236                           ; BSR set to: 13
 39237  010742  0E80               	movlw	128
 39238  010744  6E0D               	movwf	_inPipes+3,c	;volatile
 39239                           
 39240                           ; BSR set to: 13
 39241                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 39242  010746  CD32 F196          	movff	3378,_active_protocol	;volatile
 39243                           
 39244                           ; BSR set to: 13
 39245                           ;usb_device_hid.c: 239: }
 39246                           
 39247                           ;usb_device_hid.c: 238: break;
 39248  01074A  0012               	return	
 39249  01074C                     i2l432:
 39250                           
 39251                           ; BSR set to: 13
 39252                           
 39253                           ; BSR set to: 13
 39254  01074C  5131               	movf	49,w,b	;volatile
 39255                           
 39256                           ; Switch size 1, requested type "space"
 39257                           ; Number of cases is 6, Range of values is 1 to 11
 39258                           ; switch strategies available:
 39259                           ; Name         Instructions Cycles
 39260                           ; simple_byte           19    10 (average)
 39261                           ;	Chosen strategy is simple_byte
 39262  01074E  0A01               	xorlw	1	; case 1
 39263  010750  B4D8               	btfsc	status,2,c
 39264  010752  0012               	return	
 39265  010754  0A03               	xorlw	3	; case 2
 39266  010756  B4D8               	btfsc	status,2,c
 39267  010758  D7D9               	goto	i2l436
 39268  01075A  0A01               	xorlw	1	; case 3
 39269  01075C  B4D8               	btfsc	status,2,c
 39270  01075E  D7E6               	goto	i2l438
 39271  010760  0A0A               	xorlw	10	; case 9
 39272  010762  B4D8               	btfsc	status,2,c
 39273  010764  0012               	return	
 39274  010766  0A03               	xorlw	3	; case 10
 39275  010768  B4D8               	btfsc	status,2,c
 39276  01076A  D7DB               	goto	i2l437
 39277  01076C  0A01               	xorlw	1	; case 11
 39278  01076E  A4D8               	btfss	status,2,c
 39279  010770  0012               	return	
 39280  010772  D7E7               	goto	i2l439
 39281  010774                     __end_of_USBCheckHIDRequest:
 39282                           	opt stack 0
 39283                           tosu	equ	0xFFF
 39284                           tosh	equ	0xFFE
 39285                           tosl	equ	0xFFD
 39286                           pclatu	equ	0xFFB
 39287                           pclath	equ	0xFFA
 39288                           tblptru	equ	0xFF8
 39289                           tblptrh	equ	0xFF7
 39290                           tblptrl	equ	0xFF6
 39291                           tablat	equ	0xFF5
 39292                           prodh	equ	0xFF4
 39293                           prodl	equ	0xFF3
 39294                           intcon	equ	0xFF2
 39295                           indf0	equ	0xFEF
 39296                           postinc0	equ	0xFEE
 39297                           fsr0h	equ	0xFEA
 39298                           fsr0l	equ	0xFE9
 39299                           wreg	equ	0xFE8
 39300                           indf1	equ	0xFE7
 39301                           postdec1	equ	0xFE5
 39302                           plusw1	equ	0xFE3
 39303                           fsr1h	equ	0xFE2
 39304                           fsr1l	equ	0xFE1
 39305                           indf2	equ	0xFDF
 39306                           postinc2	equ	0xFDE
 39307                           postdec2	equ	0xFDD
 39308                           plusw2	equ	0xFDB
 39309                           fsr2h	equ	0xFDA
 39310                           fsr2l	equ	0xFD9
 39311                           status	equ	0xFD8
 39312                           
 39313 ;; *************** function _MSDTransferTerminated *****************
 39314 ;; Defined at:
 39315 ;;		line 1674 in file "usb_device_msd.c"
 39316 ;; Parameters:    Size  Location     Type
 39317 ;;  handle          2   11[COMRAM] PTR void 
 39318 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 39319 ;;		 -> BDT(48), 
 39320 ;; Auto vars:     Size  Location     Type
 39321 ;;		None
 39322 ;; Return value:  Size  Location     Type
 39323 ;;                  1    wreg      void 
 39324 ;; Registers used:
 39325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39326 ;; Tracked objects:
 39327 ;;		On entry : 0/0
 39328 ;;		On exit  : 0/0
 39329 ;;		Unchanged: 0/0
 39330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39335 ;;Total ram usage:        4 bytes
 39336 ;; Hardware stack levels used:    1
 39337 ;; Hardware stack levels required when called:    1
 39338 ;; This function calls:
 39339 ;;		i2_USBStallEndpoint
 39340 ;;		i2_USBTransferOnePacket
 39341 ;; This function is called by:
 39342 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39343 ;; This function uses a non-reentrant model
 39344 ;;
 39345                           
 39346                           	psect	text147
 39347  011F08                     __ptext147:
 39348                           	opt stack 0
 39349  011F08                     _MSDTransferTerminated:
 39350                           	opt stack 14
 39351                           
 39352                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 39353                           
 39354                           ; BSR set to: 13
 39355                           ;incstack = 0
 39356  011F08  0101               	movlb	1	; () banked
 39357  011F0A  516C               	movf	_MSDCBWValid& (0+255),w,b
 39358  011F0C  A4D8               	btfss	status,2,c
 39359  011F0E  D00B               	goto	i2l780
 39360                           
 39361                           ; BSR set to: 1
 39362                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 39363  011F10  0E01               	movlw	1
 39364  011F12  6E2E               	movwf	i2USBStallEndpoint@dir,c
 39365  011F14  0E02               	movlw	2
 39366  011F16  EC63  F07D         	call	i2_USBStallEndpoint
 39367                           
 39368                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 39369  011F1A  0E00               	movlw	0
 39370  011F1C  6E2E               	movwf	i2USBStallEndpoint@dir,c
 39371  011F1E  0E02               	movlw	2
 39372  011F20  EC63  F07D         	call	i2_USBStallEndpoint
 39373                           
 39374                           ;usb_device_msd.c: 1681: }
 39375  011F24  0012               	return	
 39376  011F26                     i2l780:
 39377  011F26  C135  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 39378  011F2A  C136  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 39379  011F2E  503B               	movf	_MSDTransferTerminated$2623,w,c
 39380  011F30  1839               	xorwf	MSDTransferTerminated@handle,w,c
 39381  011F32  E114               	bnz	i2l783
 39382  011F34  503C               	movf	_MSDTransferTerminated$2623+1,w,c
 39383  011F36  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 39384  011F38  A4D8               	btfss	status,2,c
 39385  011F3A  0012               	return	
 39386                           
 39387                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 39388  011F3C  0E00               	movlw	0
 39389  011F3E  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 39390  011F40  0E40               	movlw	64
 39391  011F42  6E2F               	movwf	i2USBTransferOnePacket@data,c
 39392  011F44  0E0D               	movlw	13
 39393  011F46  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 39394  011F48  0E40               	movlw	64
 39395  011F4A  6E31               	movwf	i2USBTransferOnePacket@len,c
 39396  011F4C  0E02               	movlw	2
 39397  011F4E  ECE6  F07D         	call	i2_USBTransferOnePacket
 39398  011F52  C02E  F0CE         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 39399  011F56  C02F  F0CF         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 39400  011F5A  0012               	return	
 39401  011F5C                     i2l783:
 39402  011F5C  0012               	return		;funcret
 39403  011F5E                     __end_of_MSDTransferTerminated:
 39404                           	opt stack 0
 39405                           tosu	equ	0xFFF
 39406                           tosh	equ	0xFFE
 39407                           tosl	equ	0xFFD
 39408                           pclatu	equ	0xFFB
 39409                           pclath	equ	0xFFA
 39410                           tblptru	equ	0xFF8
 39411                           tblptrh	equ	0xFF7
 39412                           tblptrl	equ	0xFF6
 39413                           tablat	equ	0xFF5
 39414                           prodh	equ	0xFF4
 39415                           prodl	equ	0xFF3
 39416                           intcon	equ	0xFF2
 39417                           indf0	equ	0xFEF
 39418                           postinc0	equ	0xFEE
 39419                           fsr0h	equ	0xFEA
 39420                           fsr0l	equ	0xFE9
 39421                           wreg	equ	0xFE8
 39422                           indf1	equ	0xFE7
 39423                           postdec1	equ	0xFE5
 39424                           plusw1	equ	0xFE3
 39425                           fsr1h	equ	0xFE2
 39426                           fsr1l	equ	0xFE1
 39427                           indf2	equ	0xFDF
 39428                           postinc2	equ	0xFDE
 39429                           postdec2	equ	0xFDD
 39430                           plusw2	equ	0xFDB
 39431                           fsr2h	equ	0xFDA
 39432                           fsr2l	equ	0xFD9
 39433                           status	equ	0xFD8
 39434                           
 39435 ;; *************** function i2_USBStallEndpoint *****************
 39436 ;; Defined at:
 39437 ;;		line 1073 in file "usb_device.c"
 39438 ;; Parameters:    Size  Location     Type
 39439 ;;  ep              1    wreg     unsigned char 
 39440 ;;  dir             1    0[COMRAM] unsigned char 
 39441 ;; Auto vars:     Size  Location     Type
 39442 ;;  ep              1    5[COMRAM] unsigned char 
 39443 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 39444 ;;		 -> BDT(48), 
 39445 ;; Return value:  Size  Location     Type
 39446 ;;                  1    wreg      void 
 39447 ;; Registers used:
 39448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39449 ;; Tracked objects:
 39450 ;;		On entry : 0/0
 39451 ;;		On exit  : 0/0
 39452 ;;		Unchanged: 0/0
 39453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39455 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39457 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39458 ;;Total ram usage:        8 bytes
 39459 ;; Hardware stack levels used:    1
 39460 ;; This function calls:
 39461 ;;		Nothing
 39462 ;; This function is called by:
 39463 ;;		_MSDTransferTerminated
 39464 ;; This function uses a non-reentrant model
 39465 ;;
 39466                           
 39467                           	psect	text148
 39468  00FAC6                     __ptext148:
 39469                           	opt stack 0
 39470  00FAC6                     i2_USBStallEndpoint:
 39471                           	opt stack 14
 39472                           
 39473                           ;incstack = 0
 39474                           ;i2USBStallEndpoint@ep stored from wreg
 39475  00FAC6  6E33               	movwf	i2USBStallEndpoint@ep,c
 39476                           
 39477                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 39478  00FAC8  5033               	movf	i2USBStallEndpoint@ep,w,c
 39479  00FACA  A4D8               	btfss	status,2,c
 39480  00FACC  D02B               	goto	i2l192
 39481                           
 39482                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 39483  00FACE  EE20 F001          	lfsr	2,1
 39484  00FAD2  501C               	movf	_pBDTEntryEP0OutNext,w,c
 39485  00FAD4  26D9               	addwf	fsr2l,f,c
 39486  00FAD6  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 39487  00FAD8  22DA               	addwfc	fsr2h,f,c
 39488  00FADA  0E08               	movlw	8
 39489  00FADC  6EDF               	movwf	indf2,c
 39490                           
 39491                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39492  00FADE  EE20 F002          	lfsr	2,2
 39493  00FAE2  501C               	movf	_pBDTEntryEP0OutNext,w,c
 39494  00FAE4  26D9               	addwf	fsr2l,f,c
 39495  00FAE6  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 39496  00FAE8  22DA               	addwfc	fsr2h,f,c
 39497  00FAEA  0E30               	movlw	48
 39498  00FAEC  6EDE               	movwf	postinc2,c
 39499  00FAEE  0E0D               	movlw	13
 39500  00FAF0  6EDD               	movwf	postdec2,c
 39501                           
 39502                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 39503  00FAF2  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39504  00FAF6  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39505  00FAFA  0E0C               	movlw	12
 39506  00FAFC  6EDF               	movwf	indf2,c
 39507                           
 39508                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39509  00FAFE  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39510  00FB02  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39511  00FB06  0E00               	movlw	0
 39512  00FB08  8EDB               	bsf	plusw2,7,c
 39513                           
 39514                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 39515  00FB0A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39516  00FB0E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39517  00FB12  0E04               	movlw	4
 39518  00FB14  6EDF               	movwf	indf2,c
 39519                           
 39520                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39521  00FB16  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39522  00FB1A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39523  00FB1E  0E00               	movlw	0
 39524  00FB20  8EDB               	bsf	plusw2,7,c
 39525                           
 39526                           ;usb_device.c: 1089: }
 39527  00FB22  0012               	return	
 39528  00FB24                     i2l192:
 39529                           
 39530                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 39531  00FB24  502E               	movf	i2USBStallEndpoint@dir,w,c
 39532  00FB26  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 39533  00FB28  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 39534  00FB2A  90D8               	bcf	status,0,c
 39535  00FB2C  362F               	rlcf	??i2_USBStallEndpoint,f,c
 39536  00FB2E  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 39537  00FB30  5033               	movf	i2USBStallEndpoint@ep,w,c
 39538  00FB32  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 39539  00FB34  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 39540  00FB36  90D8               	bcf	status,0,c
 39541  00FB38  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 39542  00FB3A  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 39543  00FB3C  90D8               	bcf	status,0,c
 39544  00FB3E  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 39545  00FB40  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 39546  00FB42  502F               	movf	??i2_USBStallEndpoint,w,c
 39547  00FB44  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 39548  00FB46  5030               	movf	??i2_USBStallEndpoint+1,w,c
 39549  00FB48  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 39550  00FB4A  90D8               	bcf	status,0,c
 39551  00FB4C  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 39552  00FB4E  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 39553  00FB50  90D8               	bcf	status,0,c
 39554  00FB52  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 39555  00FB54  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 39556  00FB56  0E00               	movlw	0
 39557  00FB58  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 39558  00FB5A  6E34               	movwf	i2USBStallEndpoint@p,c
 39559  00FB5C  0E0D               	movlw	13
 39560  00FB5E  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 39561  00FB60  6E35               	movwf	i2USBStallEndpoint@p+1,c
 39562                           
 39563                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 39564  00FB62  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 39565  00FB66  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 39566  00FB6A  0E00               	movlw	0
 39567  00FB6C  84DB               	bsf	plusw2,2,c
 39568                           
 39569                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 39570  00FB6E  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 39571  00FB72  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 39572  00FB76  0E00               	movlw	0
 39573  00FB78  8EDB               	bsf	plusw2,7,c
 39574                           
 39575                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 39576  00FB7A  5033               	movf	i2USBStallEndpoint@ep,w,c
 39577  00FB7C  0D04               	mullw	4
 39578  00FB7E  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 39579  00FB82  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 39580  00FB86  502E               	movf	i2USBStallEndpoint@dir,w,c
 39581  00FB88  0D02               	mullw	2
 39582  00FB8A  50F3               	movf	prodl,w,c
 39583  00FB8C  262F               	addwf	??i2_USBStallEndpoint,f,c
 39584  00FB8E  50F4               	movf	prodh,w,c
 39585  00FB90  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 39586  00FB92  90D8               	bcf	status,0,c
 39587  00FB94  362F               	rlcf	??i2_USBStallEndpoint,f,c
 39588  00FB96  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 39589  00FB98  90D8               	bcf	status,0,c
 39590  00FB9A  362F               	rlcf	??i2_USBStallEndpoint,f,c
 39591  00FB9C  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 39592  00FB9E  0E04               	movlw	4
 39593  00FBA0  262F               	addwf	??i2_USBStallEndpoint,f,c
 39594  00FBA2  0E00               	movlw	0
 39595  00FBA4  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 39596  00FBA6  0E00               	movlw	0
 39597  00FBA8  242F               	addwf	??i2_USBStallEndpoint,w,c
 39598  00FBAA  6E34               	movwf	i2USBStallEndpoint@p,c
 39599  00FBAC  0E0D               	movlw	13
 39600  00FBAE  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 39601  00FBB0  6E35               	movwf	i2USBStallEndpoint@p+1,c
 39602                           
 39603                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 39604  00FBB2  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 39605  00FBB6  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 39606  00FBBA  0E00               	movlw	0
 39607  00FBBC  84DB               	bsf	plusw2,2,c
 39608                           
 39609                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 39610  00FBBE  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 39611  00FBC2  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 39612  00FBC6  0E00               	movlw	0
 39613  00FBC8  8EDB               	bsf	plusw2,7,c
 39614  00FBCA  0012               	return	
 39615  00FBCC                     __end_ofi2_USBStallEndpoint:
 39616                           	opt stack 0
 39617                           tosu	equ	0xFFF
 39618                           tosh	equ	0xFFE
 39619                           tosl	equ	0xFFD
 39620                           pclatu	equ	0xFFB
 39621                           pclath	equ	0xFFA
 39622                           tblptru	equ	0xFF8
 39623                           tblptrh	equ	0xFF7
 39624                           tblptrl	equ	0xFF6
 39625                           tablat	equ	0xFF5
 39626                           prodh	equ	0xFF4
 39627                           prodl	equ	0xFF3
 39628                           intcon	equ	0xFF2
 39629                           indf0	equ	0xFEF
 39630                           postinc0	equ	0xFEE
 39631                           fsr0h	equ	0xFEA
 39632                           fsr0l	equ	0xFE9
 39633                           wreg	equ	0xFE8
 39634                           indf1	equ	0xFE7
 39635                           postdec1	equ	0xFE5
 39636                           plusw1	equ	0xFE3
 39637                           fsr1h	equ	0xFE2
 39638                           fsr1l	equ	0xFE1
 39639                           indf2	equ	0xFDF
 39640                           postinc2	equ	0xFDE
 39641                           postdec2	equ	0xFDD
 39642                           plusw2	equ	0xFDB
 39643                           fsr2h	equ	0xFDA
 39644                           fsr2l	equ	0xFD9
 39645                           status	equ	0xFD8
 39646                           
 39647 ;; *************** function _APP_DeviceMSDInitialize *****************
 39648 ;; Defined at:
 39649 ;;		line 84 in file "app_device_msd.c"
 39650 ;; Parameters:    Size  Location     Type
 39651 ;;		None
 39652 ;; Auto vars:     Size  Location     Type
 39653 ;;		None
 39654 ;; Return value:  Size  Location     Type
 39655 ;;                  1    wreg      void 
 39656 ;; Registers used:
 39657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39658 ;; Tracked objects:
 39659 ;;		On entry : 0/0
 39660 ;;		On exit  : 0/0
 39661 ;;		Unchanged: 0/0
 39662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39667 ;;Total ram usage:        0 bytes
 39668 ;; Hardware stack levels used:    1
 39669 ;; Hardware stack levels required when called:    2
 39670 ;; This function calls:
 39671 ;;		_USBEnableEndpoint
 39672 ;;		_USBMSDInit
 39673 ;; This function is called by:
 39674 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39675 ;; This function uses a non-reentrant model
 39676 ;;
 39677                           
 39678                           	psect	text149
 39679  012A74                     __ptext149:
 39680                           	opt stack 0
 39681  012A74                     _APP_DeviceMSDInitialize:
 39682                           	opt stack 13
 39683                           
 39684                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 39685                           
 39686                           ;incstack = 0
 39687  012A74  0E1E               	movlw	30
 39688  012A76  6E36               	movwf	USBEnableEndpoint@options,c
 39689  012A78  0E02               	movlw	2
 39690  012A7A  EC73  F092         	call	_USBEnableEndpoint
 39691                           
 39692                           ;app_device_msd.c: 93: USBMSDInit();
 39693  012A7E  EC4E  F07B         	call	_USBMSDInit	;wreg free
 39694  012A82  0012               	return		;funcret
 39695  012A84                     __end_of_APP_DeviceMSDInitialize:
 39696                           	opt stack 0
 39697                           tosu	equ	0xFFF
 39698                           tosh	equ	0xFFE
 39699                           tosl	equ	0xFFD
 39700                           pclatu	equ	0xFFB
 39701                           pclath	equ	0xFFA
 39702                           tblptru	equ	0xFF8
 39703                           tblptrh	equ	0xFF7
 39704                           tblptrl	equ	0xFF6
 39705                           tablat	equ	0xFF5
 39706                           prodh	equ	0xFF4
 39707                           prodl	equ	0xFF3
 39708                           intcon	equ	0xFF2
 39709                           indf0	equ	0xFEF
 39710                           postinc0	equ	0xFEE
 39711                           fsr0h	equ	0xFEA
 39712                           fsr0l	equ	0xFE9
 39713                           wreg	equ	0xFE8
 39714                           indf1	equ	0xFE7
 39715                           postdec1	equ	0xFE5
 39716                           plusw1	equ	0xFE3
 39717                           fsr1h	equ	0xFE2
 39718                           fsr1l	equ	0xFE1
 39719                           indf2	equ	0xFDF
 39720                           postinc2	equ	0xFDE
 39721                           postdec2	equ	0xFDD
 39722                           plusw2	equ	0xFDB
 39723                           fsr2h	equ	0xFDA
 39724                           fsr2l	equ	0xFD9
 39725                           status	equ	0xFD8
 39726                           
 39727 ;; *************** function _USBMSDInit *****************
 39728 ;; Defined at:
 39729 ;;		line 142 in file "usb_device_msd.c"
 39730 ;; Parameters:    Size  Location     Type
 39731 ;;		None
 39732 ;; Auto vars:     Size  Location     Type
 39733 ;;		None
 39734 ;; Return value:  Size  Location     Type
 39735 ;;                  1    wreg      void 
 39736 ;; Registers used:
 39737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 39738 ;; Tracked objects:
 39739 ;;		On entry : 0/0
 39740 ;;		On exit  : 0/0
 39741 ;;		Unchanged: 0/0
 39742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39745 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39746 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39747 ;;Total ram usage:        3 bytes
 39748 ;; Hardware stack levels used:    1
 39749 ;; Hardware stack levels required when called:    1
 39750 ;; This function calls:
 39751 ;;		i2_ExternalFlash_MediaDetect
 39752 ;;		i2_ExternalFlash_MediaInitialize
 39753 ;;		i2_ResetSenseData
 39754 ;;		i2_USBTransferOnePacket
 39755 ;; This function is called by:
 39756 ;;		_APP_DeviceMSDInitialize
 39757 ;; This function uses a non-reentrant model
 39758 ;;
 39759                           
 39760                           	psect	text150
 39761  00F69C                     __ptext150:
 39762                           	opt stack 0
 39763  00F69C                     _USBMSDInit:
 39764                           	opt stack 13
 39765                           
 39766                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 39767                           
 39768                           ;incstack = 0
 39769  00F69C  0E00               	movlw	0
 39770  00F69E  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 39771  00F6A0  0E40               	movlw	64
 39772  00F6A2  6E2F               	movwf	i2USBTransferOnePacket@data,c
 39773  00F6A4  0E0D               	movlw	13
 39774  00F6A6  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 39775  00F6A8  0E40               	movlw	64
 39776  00F6AA  6E31               	movwf	i2USBTransferOnePacket@len,c
 39777  00F6AC  0E02               	movlw	2
 39778  00F6AE  ECE6  F07D         	call	i2_USBTransferOnePacket
 39779  00F6B2  C02E  F0CE         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 39780  00F6B6  C02F  F0CF         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 39781  00F6BA  C014  F0CC         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 39782  00F6BE  C015  F0CD         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 39783                           
 39784                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 39785  00F6C2  0E00               	movlw	0
 39786  00F6C4  0100               	movlb	0	; () banked
 39787  00F6C6  6FD2               	movwf	_MSD_State& (0+255),b
 39788                           
 39789                           ; BSR set to: 0
 39790                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 39791  00F6C8  69D1               	setf	_MSDCommandState& (0+255),b
 39792                           
 39793                           ; BSR set to: 0
 39794                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 39795  00F6CA  0E00               	movlw	0
 39796  00F6CC  0101               	movlb	1	; () banked
 39797  00F6CE  6F70               	movwf	_MSDReadState& (0+255),b
 39798                           
 39799                           ; BSR set to: 1
 39800                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 39801  00F6D0  0E00               	movlw	0
 39802  00F6D2  6E25               	movwf	_MSDWriteState,c
 39803                           
 39804                           ; BSR set to: 1
 39805                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 39806  00F6D4  0E00               	movlw	0
 39807  00F6D6  0100               	movlb	0	; () banked
 39808  00F6D8  6FD0               	movwf	_MSDHostNoData& (0+255),b
 39809                           
 39810                           ; BSR set to: 0
 39811                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 39812  00F6DA  0E00               	movlw	0
 39813  00F6DC  0101               	movlb	1	; () banked
 39814  00F6DE  6F43               	movwf	_gblNumBLKS& (0+255),b
 39815  00F6E0  0E00               	movlw	0
 39816  00F6E2  6F44               	movwf	(_gblNumBLKS+1)& (0+255),b
 39817  00F6E4  0E00               	movlw	0
 39818  00F6E6  6F45               	movwf	(_gblNumBLKS+2)& (0+255),b
 39819  00F6E8  0E00               	movlw	0
 39820  00F6EA  6F46               	movwf	(_gblNumBLKS+3)& (0+255),b
 39821                           
 39822                           ; BSR set to: 1
 39823                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 39824  00F6EC  0E00               	movlw	0
 39825  00F6EE  6F3F               	movwf	_gblBLKLen& (0+255),b
 39826  00F6F0  0E00               	movlw	0
 39827  00F6F2  6F40               	movwf	(_gblBLKLen+1)& (0+255),b
 39828  00F6F4  0E00               	movlw	0
 39829  00F6F6  6F41               	movwf	(_gblBLKLen+2)& (0+255),b
 39830  00F6F8  0E00               	movlw	0
 39831  00F6FA  6F42               	movwf	(_gblBLKLen+3)& (0+255),b
 39832                           
 39833                           ; BSR set to: 1
 39834                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 39835  00F6FC  0E01               	movlw	1
 39836  00F6FE  6F6C               	movwf	_MSDCBWValid& (0+255),b
 39837                           
 39838                           ; BSR set to: 1
 39839                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 39840  00F700  0E00               	movlw	0
 39841  00F702  6F62               	movwf	(_gblMediaPresent+1)& (0+255),b
 39842  00F704  0E00               	movlw	0
 39843  00F706  6F61               	movwf	_gblMediaPresent& (0+255),b
 39844                           
 39845                           ; BSR set to: 1
 39846                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 39847  00F708  0E00               	movlw	0
 39848  00F70A  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 39849  00F70C  D04A               	goto	i2l534
 39850  00F70E                     
 39851                           ; BSR set to: 1
 39852                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 39853                           
 39854                           ; BSR set to: 1
 39855  00F70E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 39856  00F710  0D01               	mullw	1
 39857  00F712  0E6D               	movlw	low _SoftDetach
 39858  00F714  24F3               	addwf	prodl,w,c
 39859  00F716  6ED9               	movwf	fsr2l,c
 39860  00F718  0E01               	movlw	high _SoftDetach
 39861  00F71A  20F4               	addwfc	prodh,w,c
 39862  00F71C  6EDA               	movwf	fsr2h,c
 39863  00F71E  0E00               	movlw	0
 39864  00F720  6EDF               	movwf	indf2,c
 39865                           
 39866                           ; BSR set to: 1
 39867                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 39868  00F722  C1AD  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 39869  00F726  C1AE  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 39870  00F72A  EE21  F0A1         	lfsr	2,_LUN+9
 39871  00F72E  D801               	call	i2u1692_48
 39872  00F730  D00A               	goto	i2u1692_49
 39873  00F732                     i2u1692_48:
 39874  00F732  0005               	push	
 39875  00F734  6EFA               	movwf	pclath,c
 39876  00F736  50DE               	movf	postinc2,w,c
 39877  00F738  6EFD               	movwf	tosl,c
 39878  00F73A  50DE               	movf	postinc2,w,c
 39879  00F73C  6EFE               	movwf	tosh,c
 39880  00F73E  50DE               	movf	postinc2,w,c
 39881  00F740  6EFF               	movwf	tosu,c
 39882  00F742  50FA               	movf	pclath,w,c
 39883  00F744  0012               	return		;indir
 39884  00F746                     i2u1692_49:
 39885  00F746  0900               	iorlw	0
 39886  00F748  B4D8               	btfsc	status,2,c
 39887  00F74A  D027               	goto	i2l537
 39888                           
 39889                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 39890  00F74C  C1AD  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 39891  00F750  C1AE  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 39892  00F754  D801               	call	i2u1694_48
 39893  00F756  D00B               	goto	i2u1694_49
 39894  00F758                     i2u1694_48:
 39895  00F758  0005               	push	
 39896  00F75A  6EFA               	movwf	pclath,c
 39897  00F75C  0101               	movlb	1	; () banked
 39898  00F75E  5198               	movf	_LUN& (0+255),w,b
 39899  00F760  6EFD               	movwf	tosl,c
 39900  00F762  5199               	movf	(_LUN+1)& (0+255),w,b
 39901  00F764  6EFE               	movwf	tosh,c
 39902  00F766  519A               	movf	(_LUN+2)& (0+255),w,b
 39903  00F768  6EFF               	movwf	tosu,c
 39904  00F76A  50FA               	movf	pclath,w,c
 39905  00F76C  0012               	return		;indir
 39906  00F76E                     i2u1694_49:
 39907  00F76E  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 39908  00F770  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 39909  00F772  B4D8               	btfsc	status,2,c
 39910  00F774  D012               	goto	i2l537
 39911                           
 39912                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 39913  00F776  C10D  F039         	movff	_gblCBW+13,??_USBMSDInit
 39914  00F77A  0E01               	movlw	1
 39915  00F77C  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 39916  00F77E  0E00               	movlw	0
 39917  00F780  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 39918  00F782  2A39               	incf	??_USBMSDInit,f,c
 39919  00F784  D003               	goto	i2u1696_44
 39920  00F786                     i2u1696_45:
 39921  00F786  90D8               	bcf	status,0,c
 39922  00F788  363A               	rlcf	??_USBMSDInit+1,f,c
 39923  00F78A  363B               	rlcf	??_USBMSDInit+2,f,c
 39924  00F78C                     i2u1696_44:
 39925  00F78C  2E39               	decfsz	??_USBMSDInit,f,c
 39926  00F78E  D7FB               	goto	i2u1696_45
 39927  00F790  503A               	movf	??_USBMSDInit+1,w,c
 39928  00F792  0101               	movlb	1	; () banked
 39929  00F794  1361               	iorwf	_gblMediaPresent& (0+255),f,b
 39930  00F796  503B               	movf	??_USBMSDInit+2,w,c
 39931  00F798  1362               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 39932  00F79A                     i2l537:
 39933                           
 39934                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 39935                           
 39936                           ; BSR set to: 1
 39937                           
 39938                           ; BSR set to: 1
 39939  00F79A  ECB8  F08D         	call	i2_ResetSenseData	;wreg free
 39940  00F79E  0101               	movlb	1	; () banked
 39941  00F7A0  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 39942  00F7A2                     i2l534:
 39943                           
 39944                           ; BSR set to: 1
 39945                           
 39946                           ; BSR set to: 1
 39947  00F7A2  510D               	movf	(_gblCBW+13)& (0+255),w,b
 39948  00F7A4  A4D8               	btfss	status,2,c
 39949  00F7A6  0012               	return	
 39950  00F7A8  D7B2               	goto	i2l535
 39951  00F7AA                     __end_of_USBMSDInit:
 39952                           	opt stack 0
 39953                           tosu	equ	0xFFF
 39954                           tosh	equ	0xFFE
 39955                           tosl	equ	0xFFD
 39956                           pclatu	equ	0xFFB
 39957                           pclath	equ	0xFFA
 39958                           tblptru	equ	0xFF8
 39959                           tblptrh	equ	0xFF7
 39960                           tblptrl	equ	0xFF6
 39961                           tablat	equ	0xFF5
 39962                           prodh	equ	0xFF4
 39963                           prodl	equ	0xFF3
 39964                           intcon	equ	0xFF2
 39965                           indf0	equ	0xFEF
 39966                           postinc0	equ	0xFEE
 39967                           fsr0h	equ	0xFEA
 39968                           fsr0l	equ	0xFE9
 39969                           wreg	equ	0xFE8
 39970                           indf1	equ	0xFE7
 39971                           postdec1	equ	0xFE5
 39972                           plusw1	equ	0xFE3
 39973                           fsr1h	equ	0xFE2
 39974                           fsr1l	equ	0xFE1
 39975                           indf2	equ	0xFDF
 39976                           postinc2	equ	0xFDE
 39977                           postdec2	equ	0xFDD
 39978                           plusw2	equ	0xFDB
 39979                           fsr2h	equ	0xFDA
 39980                           fsr2l	equ	0xFD9
 39981                           status	equ	0xFD8
 39982                           
 39983 ;; *************** function i2_ResetSenseData *****************
 39984 ;; Defined at:
 39985 ;;		line 1373 in file "usb_device_msd.c"
 39986 ;; Parameters:    Size  Location     Type
 39987 ;;		None
 39988 ;; Auto vars:     Size  Location     Type
 39989 ;;		None
 39990 ;; Return value:  Size  Location     Type
 39991 ;;                  1    wreg      void 
 39992 ;; Registers used:
 39993 ;;		wreg, status,2
 39994 ;; Tracked objects:
 39995 ;;		On entry : 0/0
 39996 ;;		On exit  : 0/0
 39997 ;;		Unchanged: 0/0
 39998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40003 ;;Total ram usage:        0 bytes
 40004 ;; Hardware stack levels used:    1
 40005 ;; This function calls:
 40006 ;;		Nothing
 40007 ;; This function is called by:
 40008 ;;		_USBMSDInit
 40009 ;; This function uses a non-reentrant model
 40010 ;;
 40011                           
 40012                           	psect	text151
 40013  011B70                     __ptext151:
 40014                           	opt stack 0
 40015  011B70                     i2_ResetSenseData:
 40016                           	opt stack 13
 40017                           
 40018                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 40019                           
 40020                           ; BSR set to: 1
 40021                           ;incstack = 0
 40022  011B70  0101               	movlb	1	; () banked
 40023  011B72  911F               	bcf	_gblSenseData& (0+255),0,b
 40024  011B74  931F               	bcf	_gblSenseData& (0+255),1,b
 40025  011B76  951F               	bcf	_gblSenseData& (0+255),2,b
 40026  011B78  971F               	bcf	_gblSenseData& (0+255),3,b
 40027  011B7A  891F               	bsf	_gblSenseData& (0+255),4,b
 40028  011B7C  8B1F               	bsf	_gblSenseData& (0+255),5,b
 40029  011B7E  8D1F               	bsf	_gblSenseData& (0+255),6,b
 40030                           
 40031                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 40032  011B80  9F1F               	bcf	_gblSenseData& (0+255),7,b
 40033                           
 40034                           ; BSR set to: 1
 40035                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 40036  011B82  0E00               	movlw	0
 40037  011B84  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 40038                           
 40039                           ; BSR set to: 1
 40040                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 40041  011B86  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 40042  011B88  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 40043  011B8A  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 40044  011B8C  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 40045                           
 40046                           ; BSR set to: 1
 40047                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 40048  011B8E  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 40049                           
 40050                           ; BSR set to: 1
 40051                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 40052  011B90  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 40053                           
 40054                           ; BSR set to: 1
 40055                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 40056  011B92  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 40057                           
 40058                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 40059  011B94  0E00               	movlw	0
 40060  011B96  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 40061                           
 40062                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 40063  011B98  0E00               	movlw	0
 40064  011B9A  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 40065                           
 40066                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 40067  011B9C  0E00               	movlw	0
 40068  011B9E  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 40069                           
 40070                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 40071  011BA0  0E00               	movlw	0
 40072  011BA2  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 40073                           
 40074                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 40075  011BA4  0E0A               	movlw	10
 40076  011BA6  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 40077                           
 40078                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 40079  011BA8  0E00               	movlw	0
 40080  011BAA  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 40081  011BAC  0E00               	movlw	0
 40082  011BAE  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 40083  011BB0  0E00               	movlw	0
 40084  011BB2  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 40085  011BB4  0E00               	movlw	0
 40086  011BB6  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 40087                           
 40088                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 40089  011BB8  0E00               	movlw	0
 40090  011BBA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 40091                           
 40092                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 40093  011BBC  0E00               	movlw	0
 40094  011BBE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 40095                           
 40096                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 40097  011BC0  0E00               	movlw	0
 40098  011BC2  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 40099                           
 40100                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 40101  011BC4  0E00               	movlw	0
 40102  011BC6  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 40103                           
 40104                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 40105  011BC8  0E00               	movlw	0
 40106  011BCA  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 40107                           
 40108                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 40109  011BCC  0E00               	movlw	0
 40110  011BCE  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 40111                           
 40112                           ; BSR set to: 1
 40113  011BD0  0012               	return		;funcret
 40114  011BD2                     __end_ofi2_ResetSenseData:
 40115                           	opt stack 0
 40116                           tosu	equ	0xFFF
 40117                           tosh	equ	0xFFE
 40118                           tosl	equ	0xFFD
 40119                           pclatu	equ	0xFFB
 40120                           pclath	equ	0xFFA
 40121                           tblptru	equ	0xFF8
 40122                           tblptrh	equ	0xFF7
 40123                           tblptrl	equ	0xFF6
 40124                           tablat	equ	0xFF5
 40125                           prodh	equ	0xFF4
 40126                           prodl	equ	0xFF3
 40127                           intcon	equ	0xFF2
 40128                           indf0	equ	0xFEF
 40129                           postinc0	equ	0xFEE
 40130                           fsr0h	equ	0xFEA
 40131                           fsr0l	equ	0xFE9
 40132                           wreg	equ	0xFE8
 40133                           indf1	equ	0xFE7
 40134                           postdec1	equ	0xFE5
 40135                           plusw1	equ	0xFE3
 40136                           fsr1h	equ	0xFE2
 40137                           fsr1l	equ	0xFE1
 40138                           indf2	equ	0xFDF
 40139                           postinc2	equ	0xFDE
 40140                           postdec2	equ	0xFDD
 40141                           plusw2	equ	0xFDB
 40142                           fsr2h	equ	0xFDA
 40143                           fsr2l	equ	0xFD9
 40144                           status	equ	0xFD8
 40145                           
 40146 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 40147 ;; Defined at:
 40148 ;;		line 10 in file "external_flash.c"
 40149 ;; Parameters:    Size  Location     Type
 40150 ;;  config          2    0[COMRAM] PTR void 
 40151 ;;		 -> NULL(0), 
 40152 ;; Auto vars:     Size  Location     Type
 40153 ;;		None
 40154 ;; Return value:  Size  Location     Type
 40155 ;;                  2    0[COMRAM] PTR struct .
 40156 ;; Registers used:
 40157 ;;		wreg, status,2, status,0
 40158 ;; Tracked objects:
 40159 ;;		On entry : 0/0
 40160 ;;		On exit  : 0/0
 40161 ;;		Unchanged: 0/0
 40162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40167 ;;Total ram usage:        2 bytes
 40168 ;; Hardware stack levels used:    1
 40169 ;; This function calls:
 40170 ;;		Nothing
 40171 ;; This function is called by:
 40172 ;;		_USBMSDInit
 40173 ;;		_MSDProcessCommand
 40174 ;; This function uses a non-reentrant model
 40175 ;;
 40176                           
 40177                           	psect	text152
 40178  012A0E                     __ptext152:
 40179                           	opt stack 0
 40180  012A0E                     i2_ExternalFlash_MediaInitialize:
 40181                           	opt stack 13
 40182                           
 40183                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40184                           
 40185                           ; BSR set to: 1
 40186                           ;incstack = 0
 40187  012A0E  0101               	movlb	1	; () banked
 40188  012A10  8190               	bsf	(_mediaInformation+1)& (0+255),0,b
 40189                           
 40190                           ; BSR set to: 1
 40191                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40192  012A12  0E02               	movlw	2
 40193  012A14  6F92               	movwf	(_mediaInformation+3)& (0+255),b
 40194  012A16  0E00               	movlw	0
 40195  012A18  6F91               	movwf	(_mediaInformation+2)& (0+255),b
 40196                           
 40197                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40198  012A1A  0E00               	movlw	0
 40199  012A1C  6F8F               	movwf	_mediaInformation& (0+255),b
 40200                           
 40201                           ; BSR set to: 1
 40202                           ;external_flash.c: 15: return &mediaInformation;
 40203  012A1E  0E8F               	movlw	low _mediaInformation
 40204  012A20  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 40205  012A22  0E01               	movlw	high _mediaInformation
 40206  012A24  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 40207  012A26  0012               	return	
 40208  012A28                     __end_ofi2_ExternalFlash_MediaInitialize:
 40209                           	opt stack 0
 40210                           tosu	equ	0xFFF
 40211                           tosh	equ	0xFFE
 40212                           tosl	equ	0xFFD
 40213                           pclatu	equ	0xFFB
 40214                           pclath	equ	0xFFA
 40215                           tblptru	equ	0xFF8
 40216                           tblptrh	equ	0xFF7
 40217                           tblptrl	equ	0xFF6
 40218                           tablat	equ	0xFF5
 40219                           prodh	equ	0xFF4
 40220                           prodl	equ	0xFF3
 40221                           intcon	equ	0xFF2
 40222                           indf0	equ	0xFEF
 40223                           postinc0	equ	0xFEE
 40224                           fsr0h	equ	0xFEA
 40225                           fsr0l	equ	0xFE9
 40226                           wreg	equ	0xFE8
 40227                           indf1	equ	0xFE7
 40228                           postdec1	equ	0xFE5
 40229                           plusw1	equ	0xFE3
 40230                           fsr1h	equ	0xFE2
 40231                           fsr1l	equ	0xFE1
 40232                           indf2	equ	0xFDF
 40233                           postinc2	equ	0xFDE
 40234                           postdec2	equ	0xFDD
 40235                           plusw2	equ	0xFDB
 40236                           fsr2h	equ	0xFDA
 40237                           fsr2l	equ	0xFD9
 40238                           status	equ	0xFD8
 40239                           
 40240 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 40241 ;; Defined at:
 40242 ;;		line 29 in file "external_flash.c"
 40243 ;; Parameters:    Size  Location     Type
 40244 ;;  config          2    0[COMRAM] PTR void 
 40245 ;;		 -> NULL(0), 
 40246 ;; Auto vars:     Size  Location     Type
 40247 ;;		None
 40248 ;; Return value:  Size  Location     Type
 40249 ;;                  1    wreg      unsigned char 
 40250 ;; Registers used:
 40251 ;;		wreg
 40252 ;; Tracked objects:
 40253 ;;		On entry : 0/0
 40254 ;;		On exit  : 0/0
 40255 ;;		Unchanged: 0/0
 40256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40261 ;;Total ram usage:        2 bytes
 40262 ;; Hardware stack levels used:    1
 40263 ;; This function calls:
 40264 ;;		Nothing
 40265 ;; This function is called by:
 40266 ;;		_USBMSDInit
 40267 ;;		_MSDProcessCommand
 40268 ;; This function uses a non-reentrant model
 40269 ;;
 40270                           
 40271                           	psect	text153
 40272  012AE2                     __ptext153:
 40273                           	opt stack 0
 40274  012AE2                     i2_ExternalFlash_MediaDetect:
 40275                           	opt stack 13
 40276                           
 40277                           ;external_flash.c: 31: return 1;
 40278                           
 40279                           ; BSR set to: 1
 40280                           ;incstack = 0
 40281  012AE2  0E01               	movlw	1
 40282  012AE4  0012               	return	
 40283  012AE6                     __end_ofi2_ExternalFlash_MediaDetect:
 40284                           	opt stack 0
 40285                           tosu	equ	0xFFF
 40286                           tosh	equ	0xFFE
 40287                           tosl	equ	0xFFD
 40288                           pclatu	equ	0xFFB
 40289                           pclath	equ	0xFFA
 40290                           tblptru	equ	0xFF8
 40291                           tblptrh	equ	0xFF7
 40292                           tblptrl	equ	0xFF6
 40293                           tablat	equ	0xFF5
 40294                           prodh	equ	0xFF4
 40295                           prodl	equ	0xFF3
 40296                           intcon	equ	0xFF2
 40297                           indf0	equ	0xFEF
 40298                           postinc0	equ	0xFEE
 40299                           fsr0h	equ	0xFEA
 40300                           fsr0l	equ	0xFE9
 40301                           wreg	equ	0xFE8
 40302                           indf1	equ	0xFE7
 40303                           postdec1	equ	0xFE5
 40304                           plusw1	equ	0xFE3
 40305                           fsr1h	equ	0xFE2
 40306                           fsr1l	equ	0xFE1
 40307                           indf2	equ	0xFDF
 40308                           postinc2	equ	0xFDE
 40309                           postdec2	equ	0xFDD
 40310                           plusw2	equ	0xFDB
 40311                           fsr2h	equ	0xFDA
 40312                           fsr2l	equ	0xFD9
 40313                           status	equ	0xFD8
 40314                           
 40315 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 40316 ;; Defined at:
 40317 ;;		line 46 in file "app_device_custom_hid.c"
 40318 ;; Parameters:    Size  Location     Type
 40319 ;;		None
 40320 ;; Auto vars:     Size  Location     Type
 40321 ;;		None
 40322 ;; Return value:  Size  Location     Type
 40323 ;;                  1    wreg      void 
 40324 ;; Registers used:
 40325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40326 ;; Tracked objects:
 40327 ;;		On entry : 0/0
 40328 ;;		On exit  : 0/0
 40329 ;;		Unchanged: 0/0
 40330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40335 ;;Total ram usage:        0 bytes
 40336 ;; Hardware stack levels used:    1
 40337 ;; Hardware stack levels required when called:    2
 40338 ;; This function calls:
 40339 ;;		_USBEnableEndpoint
 40340 ;;		i2_USBTransferOnePacket
 40341 ;; This function is called by:
 40342 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 40343 ;; This function uses a non-reentrant model
 40344 ;;
 40345                           
 40346                           	psect	text154
 40347  012712                     __ptext154:
 40348                           	opt stack 0
 40349  012712                     _APP_DeviceCustomHIDInitialize:
 40350                           	opt stack 13
 40351                           
 40352                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 40353                           
 40354                           ;incstack = 0
 40355  012712  0E00               	movlw	0
 40356  012714  0101               	movlb	1	; () banked
 40357  012716  6F5D               	movwf	_USBInHandle& (0+255),b
 40358  012718  0E00               	movlw	0
 40359  01271A  6F5E               	movwf	(_USBInHandle+1)& (0+255),b
 40360                           
 40361                           ; BSR set to: 1
 40362                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 40363  01271C  0E1E               	movlw	30
 40364  01271E  6E36               	movwf	USBEnableEndpoint@options,c
 40365  012720  0E01               	movlw	1
 40366  012722  EC73  F092         	call	_USBEnableEndpoint
 40367                           
 40368                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 40369  012726  0E00               	movlw	0
 40370  012728  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 40371  01272A  0E38               	movlw	low _ReceivedDataBuffer
 40372  01272C  6E2F               	movwf	i2USBTransferOnePacket@data,c
 40373  01272E  0E02               	movlw	high _ReceivedDataBuffer
 40374  012730  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 40375  012732  0E40               	movlw	64
 40376  012734  6E31               	movwf	i2USBTransferOnePacket@len,c
 40377  012736  0E01               	movlw	1
 40378  012738  ECE6  F07D         	call	i2_USBTransferOnePacket
 40379  01273C  C02E  F15F         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 40380  012740  C02F  F160         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 40381  012744  0012               	return		;funcret
 40382  012746                     __end_of_APP_DeviceCustomHIDInitialize:
 40383                           	opt stack 0
 40384                           tosu	equ	0xFFF
 40385                           tosh	equ	0xFFE
 40386                           tosl	equ	0xFFD
 40387                           pclatu	equ	0xFFB
 40388                           pclath	equ	0xFFA
 40389                           tblptru	equ	0xFF8
 40390                           tblptrh	equ	0xFF7
 40391                           tblptrl	equ	0xFF6
 40392                           tablat	equ	0xFF5
 40393                           prodh	equ	0xFF4
 40394                           prodl	equ	0xFF3
 40395                           intcon	equ	0xFF2
 40396                           indf0	equ	0xFEF
 40397                           postinc0	equ	0xFEE
 40398                           fsr0h	equ	0xFEA
 40399                           fsr0l	equ	0xFE9
 40400                           wreg	equ	0xFE8
 40401                           indf1	equ	0xFE7
 40402                           postdec1	equ	0xFE5
 40403                           plusw1	equ	0xFE3
 40404                           fsr1h	equ	0xFE2
 40405                           fsr1l	equ	0xFE1
 40406                           indf2	equ	0xFDF
 40407                           postinc2	equ	0xFDE
 40408                           postdec2	equ	0xFDD
 40409                           plusw2	equ	0xFDB
 40410                           fsr2h	equ	0xFDA
 40411                           fsr2l	equ	0xFD9
 40412                           status	equ	0xFD8
 40413                           
 40414 ;; *************** function i2_USBTransferOnePacket *****************
 40415 ;; Defined at:
 40416 ;;		line 995 in file "usb_device.c"
 40417 ;; Parameters:    Size  Location     Type
 40418 ;;  ep              1    wreg     unsigned char 
 40419 ;;  dir             1    0[COMRAM] unsigned char 
 40420 ;;  data            2    1[COMRAM] PTR unsigned char 
 40421 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 40422 ;;		 -> msd_cbw(31), NULL(0), 
 40423 ;;  len             1    3[COMRAM] unsigned char 
 40424 ;; Auto vars:     Size  Location     Type
 40425 ;;  ep              1    8[COMRAM] unsigned char 
 40426 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 40427 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 40428 ;; Return value:  Size  Location     Type
 40429 ;;                  2    0[COMRAM] PTR void 
 40430 ;; Registers used:
 40431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40432 ;; Tracked objects:
 40433 ;;		On entry : 0/0
 40434 ;;		On exit  : 0/0
 40435 ;;		Unchanged: 0/0
 40436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40438 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40440 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40441 ;;Total ram usage:       11 bytes
 40442 ;; Hardware stack levels used:    1
 40443 ;; This function calls:
 40444 ;;		Nothing
 40445 ;; This function is called by:
 40446 ;;		_USBMSDInit
 40447 ;;		_USBCheckMSDRequest
 40448 ;;		_MSDTransferTerminated
 40449 ;;		_APP_DeviceCustomHIDInitialize
 40450 ;; This function uses a non-reentrant model
 40451 ;;
 40452                           
 40453                           	psect	text155
 40454  00FBCC                     __ptext155:
 40455                           	opt stack 0
 40456  00FBCC                     i2_USBTransferOnePacket:
 40457                           	opt stack 14
 40458                           
 40459                           ;incstack = 0
 40460                           ;i2USBTransferOnePacket@ep stored from wreg
 40461  00FBCC  6E36               	movwf	i2USBTransferOnePacket@ep,c
 40462                           
 40463                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 40464  00FBCE  502E               	movf	i2USBTransferOnePacket@dir,w,c
 40465  00FBD0  B4D8               	btfsc	status,2,c
 40466  00FBD2  D007               	goto	i2l184
 40467                           
 40468                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 40469  00FBD4  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40470  00FBD6  0D02               	mullw	2
 40471  00FBD8  0E10               	movlw	low _pBDTEntryIn
 40472  00FBDA  24F3               	addwf	prodl,w,c
 40473  00FBDC  6ED9               	movwf	fsr2l,c
 40474  00FBDE  0E00               	movlw	high _pBDTEntryIn
 40475  00FBE0  D006               	goto	L74
 40476  00FBE2                     i2l184:
 40477                           
 40478                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 40479  00FBE2  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40480  00FBE4  0D02               	mullw	2
 40481  00FBE6  0E31               	movlw	low _pBDTEntryOut
 40482  00FBE8  24F3               	addwf	prodl,w,c
 40483  00FBEA  6ED9               	movwf	fsr2l,c
 40484  00FBEC  0E01               	movlw	high _pBDTEntryOut
 40485  00FBEE                     L74:
 40486  00FBEE  20F4               	addwfc	prodh,w,c
 40487  00FBF0  6EDA               	movwf	fsr2h,c
 40488  00FBF2  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 40489  00FBF6  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 40490                           
 40491                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 40492  00FBFA  5037               	movf	i2USBTransferOnePacket@handle,w,c
 40493  00FBFC  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 40494  00FBFE  A4D8               	btfss	status,2,c
 40495  00FC00  D005               	goto	i2l186
 40496                           
 40497                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 40498  00FC02  0E00               	movlw	0
 40499  00FC04  6E2E               	movwf	?i2_USBTransferOnePacket,c
 40500  00FC06  0E00               	movlw	0
 40501  00FC08  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 40502  00FC0A  0012               	return	
 40503  00FC0C                     i2l186:
 40504                           
 40505                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 40506  00FC0C  EE20 F002          	lfsr	2,2
 40507  00FC10  5037               	movf	i2USBTransferOnePacket@handle,w,c
 40508  00FC12  26D9               	addwf	fsr2l,f,c
 40509  00FC14  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 40510  00FC16  22DA               	addwfc	fsr2h,f,c
 40511  00FC18  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 40512  00FC1C  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 40513                           
 40514                           ;usb_device.c: 1030: handle->CNT = len;
 40515  00FC20  EE20 F001          	lfsr	2,1
 40516  00FC24  5037               	movf	i2USBTransferOnePacket@handle,w,c
 40517  00FC26  26D9               	addwf	fsr2l,f,c
 40518  00FC28  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 40519  00FC2A  22DA               	addwfc	fsr2h,f,c
 40520  00FC2C  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 40521                           
 40522                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 40523  00FC30  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 40524  00FC34  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 40525  00FC38  0E40               	movlw	64
 40526  00FC3A  16DF               	andwf	indf2,f,c
 40527                           
 40528                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 40529  00FC3C  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 40530  00FC40  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 40531  00FC44  0E00               	movlw	0
 40532  00FC46  86DB               	bsf	plusw2,3,c
 40533                           
 40534                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 40535  00FC48  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 40536  00FC4C  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 40537  00FC50  0E00               	movlw	0
 40538  00FC52  8EDB               	bsf	plusw2,7,c
 40539                           
 40540                           ;usb_device.c: 1036: if(dir != 0)
 40541  00FC54  502E               	movf	i2USBTransferOnePacket@dir,w,c
 40542  00FC56  B4D8               	btfsc	status,2,c
 40543  00FC58  D018               	goto	i2l188
 40544                           
 40545                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 40546  00FC5A  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40547  00FC5C  0D02               	mullw	2
 40548  00FC5E  0E10               	movlw	low _pBDTEntryIn
 40549  00FC60  24F3               	addwf	prodl,w,c
 40550  00FC62  6ED9               	movwf	fsr2l,c
 40551  00FC64  0E00               	movlw	high _pBDTEntryIn
 40552  00FC66  20F4               	addwfc	prodh,w,c
 40553  00FC68  6EDA               	movwf	fsr2h,c
 40554  00FC6A  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 40555  00FC6E  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 40556  00FC72  0E04               	movlw	4
 40557  00FC74  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 40558  00FC76  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 40559  00FC78  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 40560  00FC7A  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 40561  00FC7C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40562  00FC7E  0D02               	mullw	2
 40563  00FC80  0E10               	movlw	low _pBDTEntryIn
 40564  00FC82  24F3               	addwf	prodl,w,c
 40565  00FC84  6ED9               	movwf	fsr2l,c
 40566  00FC86  0E00               	movlw	high _pBDTEntryIn
 40567  00FC88  D017               	goto	L75
 40568  00FC8A                     i2l188:
 40569                           
 40570                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 40571  00FC8A  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40572  00FC8C  0D02               	mullw	2
 40573  00FC8E  0E31               	movlw	low _pBDTEntryOut
 40574  00FC90  24F3               	addwf	prodl,w,c
 40575  00FC92  6ED9               	movwf	fsr2l,c
 40576  00FC94  0E01               	movlw	high _pBDTEntryOut
 40577  00FC96  20F4               	addwfc	prodh,w,c
 40578  00FC98  6EDA               	movwf	fsr2h,c
 40579  00FC9A  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 40580  00FC9E  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 40581  00FCA2  0E04               	movlw	4
 40582  00FCA4  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 40583  00FCA6  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 40584  00FCA8  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 40585  00FCAA  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 40586  00FCAC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40587  00FCAE  0D02               	mullw	2
 40588  00FCB0  0E31               	movlw	low _pBDTEntryOut
 40589  00FCB2  24F3               	addwf	prodl,w,c
 40590  00FCB4  6ED9               	movwf	fsr2l,c
 40591  00FCB6  0E01               	movlw	high _pBDTEntryOut
 40592  00FCB8                     L75:
 40593  00FCB8  20F4               	addwfc	prodh,w,c
 40594  00FCBA  6EDA               	movwf	fsr2h,c
 40595  00FCBC  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 40596  00FCC0  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 40597                           
 40598                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 40599  00FCC4  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 40600  00FCC8  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 40601  00FCCC  0012               	return	
 40602  00FCCE                     __end_ofi2_USBTransferOnePacket:
 40603                           	opt stack 0
 40604                           tosu	equ	0xFFF
 40605                           tosh	equ	0xFFE
 40606                           tosl	equ	0xFFD
 40607                           pclatu	equ	0xFFB
 40608                           pclath	equ	0xFFA
 40609                           tblptru	equ	0xFF8
 40610                           tblptrh	equ	0xFF7
 40611                           tblptrl	equ	0xFF6
 40612                           tablat	equ	0xFF5
 40613                           prodh	equ	0xFF4
 40614                           prodl	equ	0xFF3
 40615                           intcon	equ	0xFF2
 40616                           indf0	equ	0xFEF
 40617                           postinc0	equ	0xFEE
 40618                           fsr0h	equ	0xFEA
 40619                           fsr0l	equ	0xFE9
 40620                           wreg	equ	0xFE8
 40621                           indf1	equ	0xFE7
 40622                           postdec1	equ	0xFE5
 40623                           plusw1	equ	0xFE3
 40624                           fsr1h	equ	0xFE2
 40625                           fsr1l	equ	0xFE1
 40626                           indf2	equ	0xFDF
 40627                           postinc2	equ	0xFDE
 40628                           postdec2	equ	0xFDD
 40629                           plusw2	equ	0xFDB
 40630                           fsr2h	equ	0xFDA
 40631                           fsr2l	equ	0xFD9
 40632                           status	equ	0xFD8
 40633                           
 40634 ;; *************** function _USBEnableEndpoint *****************
 40635 ;; Defined at:
 40636 ;;		line 878 in file "usb_device.c"
 40637 ;; Parameters:    Size  Location     Type
 40638 ;;  ep              1    wreg     unsigned char 
 40639 ;;  options         1    8[COMRAM] unsigned char 
 40640 ;; Auto vars:     Size  Location     Type
 40641 ;;  ep              1   11[COMRAM] unsigned char 
 40642 ;;  p               2    9[COMRAM] PTR unsigned char 
 40643 ;;		 -> UEP0(1), 
 40644 ;; Return value:  Size  Location     Type
 40645 ;;                  1    wreg      void 
 40646 ;; Registers used:
 40647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40648 ;; Tracked objects:
 40649 ;;		On entry : 0/0
 40650 ;;		On exit  : 0/0
 40651 ;;		Unchanged: 0/0
 40652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40653 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40654 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40657 ;;Total ram usage:        4 bytes
 40658 ;; Hardware stack levels used:    1
 40659 ;; Hardware stack levels required when called:    1
 40660 ;; This function calls:
 40661 ;;		_USBConfigureEndpoint
 40662 ;; This function is called by:
 40663 ;;		_APP_DeviceCustomHIDInitialize
 40664 ;;		_APP_DeviceMSDInitialize
 40665 ;; This function uses a non-reentrant model
 40666 ;;
 40667                           
 40668                           	psect	text156
 40669  0124E6                     __ptext156:
 40670                           	opt stack 0
 40671  0124E6                     _USBEnableEndpoint:
 40672                           	opt stack 13
 40673                           
 40674                           ;incstack = 0
 40675                           ;USBEnableEndpoint@ep stored from wreg
 40676  0124E6  6E39               	movwf	USBEnableEndpoint@ep,c
 40677                           
 40678                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 40679  0124E8  A436               	btfss	USBEnableEndpoint@options,2,c
 40680  0124EA  D005               	goto	i2l179
 40681                           
 40682                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 40683  0124EC  0E00               	movlw	0
 40684  0124EE  6E2E               	movwf	USBConfigureEndpoint@direction,c
 40685  0124F0  5039               	movf	USBEnableEndpoint@ep,w,c
 40686  0124F2  EC38  F08A         	call	_USBConfigureEndpoint
 40687  0124F6                     i2l179:
 40688                           
 40689                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 40690  0124F6  A236               	btfss	USBEnableEndpoint@options,1,c
 40691  0124F8  D005               	goto	i2l180
 40692                           
 40693                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 40694  0124FA  0E01               	movlw	1
 40695  0124FC  6E2E               	movwf	USBConfigureEndpoint@direction,c
 40696  0124FE  5039               	movf	USBEnableEndpoint@ep,w,c
 40697  012500  EC38  F08A         	call	_USBConfigureEndpoint
 40698  012504                     i2l180:
 40699                           
 40700                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 40701  012504  5039               	movf	USBEnableEndpoint@ep,w,c
 40702  012506  0D01               	mullw	1
 40703  012508  0E26               	movlw	38
 40704  01250A  24F3               	addwf	prodl,w,c
 40705  01250C  6E37               	movwf	USBEnableEndpoint@p,c
 40706  01250E  0E0F               	movlw	15
 40707  012510  20F4               	addwfc	prodh,w,c
 40708  012512  6E38               	movwf	USBEnableEndpoint@p+1,c
 40709                           
 40710                           ;usb_device.c: 901: *p = options;
 40711  012514  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 40712  012518  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 40713  01251C  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 40714  012520  0012               	return		;funcret
 40715  012522                     __end_of_USBEnableEndpoint:
 40716                           	opt stack 0
 40717                           tosu	equ	0xFFF
 40718                           tosh	equ	0xFFE
 40719                           tosl	equ	0xFFD
 40720                           pclatu	equ	0xFFB
 40721                           pclath	equ	0xFFA
 40722                           tblptru	equ	0xFF8
 40723                           tblptrh	equ	0xFF7
 40724                           tblptrl	equ	0xFF6
 40725                           tablat	equ	0xFF5
 40726                           prodh	equ	0xFF4
 40727                           prodl	equ	0xFF3
 40728                           intcon	equ	0xFF2
 40729                           indf0	equ	0xFEF
 40730                           postinc0	equ	0xFEE
 40731                           fsr0h	equ	0xFEA
 40732                           fsr0l	equ	0xFE9
 40733                           wreg	equ	0xFE8
 40734                           indf1	equ	0xFE7
 40735                           postdec1	equ	0xFE5
 40736                           plusw1	equ	0xFE3
 40737                           fsr1h	equ	0xFE2
 40738                           fsr1l	equ	0xFE1
 40739                           indf2	equ	0xFDF
 40740                           postinc2	equ	0xFDE
 40741                           postdec2	equ	0xFDD
 40742                           plusw2	equ	0xFDB
 40743                           fsr2h	equ	0xFDA
 40744                           fsr2l	equ	0xFD9
 40745                           status	equ	0xFD8
 40746                           
 40747 ;; *************** function _USBConfigureEndpoint *****************
 40748 ;; Defined at:
 40749 ;;		line 1545 in file "usb_device.c"
 40750 ;; Parameters:    Size  Location     Type
 40751 ;;  EPNum           1    wreg     unsigned char 
 40752 ;;  direction       1    0[COMRAM] unsigned char 
 40753 ;; Auto vars:     Size  Location     Type
 40754 ;;  EPNum           1    5[COMRAM] unsigned char 
 40755 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 40756 ;;		 -> BDT(48), 
 40757 ;; Return value:  Size  Location     Type
 40758 ;;                  1    wreg      void 
 40759 ;; Registers used:
 40760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40761 ;; Tracked objects:
 40762 ;;		On entry : 0/0
 40763 ;;		On exit  : 0/0
 40764 ;;		Unchanged: 0/0
 40765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40769 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40770 ;;Total ram usage:        8 bytes
 40771 ;; Hardware stack levels used:    1
 40772 ;; This function calls:
 40773 ;;		Nothing
 40774 ;; This function is called by:
 40775 ;;		_USBEnableEndpoint
 40776 ;; This function uses a non-reentrant model
 40777 ;;
 40778                           
 40779                           	psect	text157
 40780  011470                     __ptext157:
 40781                           	opt stack 0
 40782  011470                     _USBConfigureEndpoint:
 40783                           	opt stack 13
 40784                           
 40785                           ;incstack = 0
 40786                           ;USBConfigureEndpoint@EPNum stored from wreg
 40787  011470  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 40788                           
 40789                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 40790  011472  0E00               	movlw	0
 40791  011474  6E34               	movwf	USBConfigureEndpoint@handle,c
 40792  011476  0E0D               	movlw	13
 40793  011478  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 40794                           
 40795                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 40796  01147A  502E               	movf	USBConfigureEndpoint@direction,w,c
 40797  01147C  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 40798  01147E  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 40799  011480  90D8               	bcf	status,0,c
 40800  011482  362F               	rlcf	??_USBConfigureEndpoint,f,c
 40801  011484  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 40802  011486  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 40803  011488  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 40804  01148A  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 40805  01148C  90D8               	bcf	status,0,c
 40806  01148E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 40807  011490  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 40808  011492  90D8               	bcf	status,0,c
 40809  011494  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 40810  011496  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 40811  011498  502F               	movf	??_USBConfigureEndpoint,w,c
 40812  01149A  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 40813  01149C  5030               	movf	??_USBConfigureEndpoint+1,w,c
 40814  01149E  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 40815  0114A0  90D8               	bcf	status,0,c
 40816  0114A2  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 40817  0114A4  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 40818  0114A6  90D8               	bcf	status,0,c
 40819  0114A8  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 40820  0114AA  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 40821  0114AC  5031               	movf	??_USBConfigureEndpoint+2,w,c
 40822  0114AE  2634               	addwf	USBConfigureEndpoint@handle,f,c
 40823  0114B0  5032               	movf	??_USBConfigureEndpoint+3,w,c
 40824  0114B2  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 40825                           
 40826                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 40827  0114B4  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 40828  0114B8  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 40829  0114BC  9EDF               	bcf	indf2,7,c
 40830                           
 40831                           ;usb_device.c: 1559: if(direction == 0)
 40832  0114BE  502E               	movf	USBConfigureEndpoint@direction,w,c
 40833  0114C0  A4D8               	btfss	status,2,c
 40834  0114C2  D007               	goto	i2l226
 40835                           
 40836                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 40837  0114C4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 40838  0114C6  0D02               	mullw	2
 40839  0114C8  0E31               	movlw	low _pBDTEntryOut
 40840  0114CA  24F3               	addwf	prodl,w,c
 40841  0114CC  6ED9               	movwf	fsr2l,c
 40842  0114CE  0E01               	movlw	high _pBDTEntryOut
 40843  0114D0  D006               	goto	L76
 40844  0114D2                     i2l226:
 40845                           
 40846                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 40847  0114D2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 40848  0114D4  0D02               	mullw	2
 40849  0114D6  0E10               	movlw	low _pBDTEntryIn
 40850  0114D8  24F3               	addwf	prodl,w,c
 40851  0114DA  6ED9               	movwf	fsr2l,c
 40852  0114DC  0E00               	movlw	high _pBDTEntryIn
 40853  0114DE                     L76:
 40854  0114DE  20F4               	addwfc	prodh,w,c
 40855  0114E0  6EDA               	movwf	fsr2h,c
 40856  0114E2  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 40857  0114E6  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 40858                           
 40859                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 40860  0114EA  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 40861  0114EE  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 40862  0114F2  9CDF               	bcf	indf2,6,c
 40863                           
 40864                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 40865  0114F4  EE20 F004          	lfsr	2,4
 40866  0114F8  5034               	movf	USBConfigureEndpoint@handle,w,c
 40867  0114FA  26D9               	addwf	fsr2l,f,c
 40868  0114FC  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 40869  0114FE  22DA               	addwfc	fsr2h,f,c
 40870  011500  8CDF               	bsf	indf2,6,c
 40871  011502  0012               	return		;funcret
 40872  011504                     __end_of_USBConfigureEndpoint:
 40873                           	opt stack 0
 40874                           tosu	equ	0xFFF
 40875                           tosh	equ	0xFFE
 40876                           tosl	equ	0xFFD
 40877                           pclatu	equ	0xFFB
 40878                           pclath	equ	0xFFA
 40879                           tblptru	equ	0xFF8
 40880                           tblptrh	equ	0xFF7
 40881                           tblptrl	equ	0xFF6
 40882                           tablat	equ	0xFF5
 40883                           prodh	equ	0xFF4
 40884                           prodl	equ	0xFF3
 40885                           intcon	equ	0xFF2
 40886                           indf0	equ	0xFEF
 40887                           postinc0	equ	0xFEE
 40888                           fsr0h	equ	0xFEA
 40889                           fsr0l	equ	0xFE9
 40890                           wreg	equ	0xFE8
 40891                           indf1	equ	0xFE7
 40892                           postdec1	equ	0xFE5
 40893                           plusw1	equ	0xFE3
 40894                           fsr1h	equ	0xFE2
 40895                           fsr1l	equ	0xFE1
 40896                           indf2	equ	0xFDF
 40897                           postinc2	equ	0xFDE
 40898                           postdec2	equ	0xFDD
 40899                           plusw2	equ	0xFDB
 40900                           fsr2h	equ	0xFDA
 40901                           fsr2l	equ	0xFD9
 40902                           status	equ	0xFD8
 40903                           
 40904 ;; *************** function _USBCtrlTrfOutHandler *****************
 40905 ;; Defined at:
 40906 ;;		line 2540 in file "usb_device.c"
 40907 ;; Parameters:    Size  Location     Type
 40908 ;;		None
 40909 ;; Auto vars:     Size  Location     Type
 40910 ;;		None
 40911 ;; Return value:  Size  Location     Type
 40912 ;;                  1    wreg      void 
 40913 ;; Registers used:
 40914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40915 ;; Tracked objects:
 40916 ;;		On entry : 0/0
 40917 ;;		On exit  : 0/0
 40918 ;;		Unchanged: 0/0
 40919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40924 ;;Total ram usage:        0 bytes
 40925 ;; Hardware stack levels used:    1
 40926 ;; Hardware stack levels required when called:    2
 40927 ;; This function calls:
 40928 ;;		_USBCtrlTrfRxService
 40929 ;; This function is called by:
 40930 ;;		_USBCtrlEPService
 40931 ;; This function uses a non-reentrant model
 40932 ;;
 40933                           
 40934                           	psect	text158
 40935  011C90                     __ptext158:
 40936                           	opt stack 0
 40937  011C90                     _USBCtrlTrfOutHandler:
 40938                           	opt stack 13
 40939                           
 40940                           ;usb_device.c: 2542: if(controlTransferState == 2)
 40941                           
 40942                           ;incstack = 0
 40943  011C90  0E02               	movlw	2
 40944  011C92  1829               	xorwf	_controlTransferState,w,c	;volatile
 40945  011C94  A4D8               	btfss	status,2,c
 40946  011C96  D003               	goto	i2l332
 40947                           
 40948                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 40949  011C98  ECD5  F07B         	call	_USBCtrlTrfRxService	;wreg free
 40950                           
 40951                           ;usb_device.c: 2545: }
 40952  011C9C  0012               	return	
 40953  011C9E                     i2l332:
 40954                           
 40955                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 40956  011C9E  0E00               	movlw	0
 40957  011CA0  6E29               	movwf	_controlTransferState,c	;volatile
 40958                           
 40959                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 40960  011CA2  0101               	movlb	1	; () banked
 40961  011CA4  5176               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 40962  011CA6  A4D8               	btfss	status,2,c
 40963  011CA8  D01F               	goto	i2l334
 40964                           
 40965                           ; BSR set to: 1
 40966                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 40967  011CAA  EE20 F001          	lfsr	2,1
 40968  011CAE  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40969  011CB0  26D9               	addwf	fsr2l,f,c
 40970  011CB2  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40971  011CB4  22DA               	addwfc	fsr2h,f,c
 40972  011CB6  0E08               	movlw	8
 40973  011CB8  6EDF               	movwf	indf2,c
 40974                           
 40975                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 40976  011CBA  EE20 F002          	lfsr	2,2
 40977  011CBE  501C               	movf	_pBDTEntryEP0OutNext,w,c
 40978  011CC0  26D9               	addwf	fsr2l,f,c
 40979  011CC2  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 40980  011CC4  22DA               	addwfc	fsr2h,f,c
 40981  011CC6  0E30               	movlw	48
 40982  011CC8  6EDE               	movwf	postinc2,c
 40983  011CCA  0E0D               	movlw	13
 40984  011CCC  6EDD               	movwf	postdec2,c
 40985                           
 40986                           ; BSR set to: 1
 40987                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 40988  011CCE  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40989  011CD2  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40990  011CD6  0E0C               	movlw	12
 40991  011CD8  6EDF               	movwf	indf2,c
 40992                           
 40993                           ; BSR set to: 1
 40994                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 40995  011CDA  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 40996  011CDE  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 40997  011CE2  0E00               	movlw	0
 40998  011CE4  8EDB               	bsf	plusw2,7,c
 40999                           
 41000                           ;usb_device.c: 2563: }
 41001  011CE6  0012               	return	
 41002  011CE8                     i2l334:
 41003                           
 41004                           ; BSR set to: 1
 41005                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 41006                           
 41007                           ; BSR set to: 1
 41008  011CE8  0E00               	movlw	0
 41009  011CEA  6F76               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 41010                           
 41011                           ; BSR set to: 1
 41012  011CEC  0012               	return	
 41013  011CEE                     __end_of_USBCtrlTrfOutHandler:
 41014                           	opt stack 0
 41015                           tosu	equ	0xFFF
 41016                           tosh	equ	0xFFE
 41017                           tosl	equ	0xFFD
 41018                           pclatu	equ	0xFFB
 41019                           pclath	equ	0xFFA
 41020                           tblptru	equ	0xFF8
 41021                           tblptrh	equ	0xFF7
 41022                           tblptrl	equ	0xFF6
 41023                           tablat	equ	0xFF5
 41024                           prodh	equ	0xFF4
 41025                           prodl	equ	0xFF3
 41026                           intcon	equ	0xFF2
 41027                           indf0	equ	0xFEF
 41028                           postinc0	equ	0xFEE
 41029                           fsr0h	equ	0xFEA
 41030                           fsr0l	equ	0xFE9
 41031                           wreg	equ	0xFE8
 41032                           indf1	equ	0xFE7
 41033                           postdec1	equ	0xFE5
 41034                           plusw1	equ	0xFE3
 41035                           fsr1h	equ	0xFE2
 41036                           fsr1l	equ	0xFE1
 41037                           indf2	equ	0xFDF
 41038                           postinc2	equ	0xFDE
 41039                           postdec2	equ	0xFDD
 41040                           plusw2	equ	0xFDB
 41041                           fsr2h	equ	0xFDA
 41042                           fsr2l	equ	0xFD9
 41043                           status	equ	0xFD8
 41044                           
 41045 ;; *************** function _USBCtrlTrfRxService *****************
 41046 ;; Defined at:
 41047 ;;		line 1854 in file "usb_device.c"
 41048 ;; Parameters:    Size  Location     Type
 41049 ;;		None
 41050 ;; Auto vars:     Size  Location     Type
 41051 ;;  byteToRead      1    1[COMRAM] unsigned char 
 41052 ;;  i               1    0[COMRAM] unsigned char 
 41053 ;; Return value:  Size  Location     Type
 41054 ;;                  1    wreg      void 
 41055 ;; Registers used:
 41056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41057 ;; Tracked objects:
 41058 ;;		On entry : 0/0
 41059 ;;		On exit  : 0/0
 41060 ;;		Unchanged: 0/0
 41061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41066 ;;Total ram usage:        2 bytes
 41067 ;; Hardware stack levels used:    1
 41068 ;; Hardware stack levels required when called:    1
 41069 ;; This function calls:
 41070 ;;		_USBCtrlEPAllowStatusStage
 41071 ;; This function is called by:
 41072 ;;		_USBCtrlTrfOutHandler
 41073 ;; This function uses a non-reentrant model
 41074 ;;
 41075                           
 41076                           	psect	text159
 41077  00F7AA                     __ptext159:
 41078                           	opt stack 0
 41079  00F7AA                     _USBCtrlTrfRxService:
 41080                           	opt stack 13
 41081                           
 41082                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 41083                           
 41084                           ;incstack = 0
 41085  00F7AA  EE20 F001          	lfsr	2,1
 41086  00F7AE  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 41087  00F7B0  26D9               	addwf	fsr2l,f,c
 41088  00F7B2  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 41089  00F7B4  22DA               	addwfc	fsr2h,f,c
 41090  00F7B6  50DF               	movf	indf2,w,c
 41091  00F7B8  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 41092                           
 41093                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 41094  00F7BA  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 41095  00F7BC  5C05               	subwf	_outPipes+4,w,c	;volatile
 41096  00F7BE  0E00               	movlw	0
 41097  00F7C0  5806               	subwfb	_outPipes+5,w,c	;volatile
 41098  00F7C2  A0D8               	btfss	status,0,c
 41099                           
 41100                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 41101  00F7C4  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 41102                           
 41103                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 41104  00F7C8  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 41105  00F7CA  5E05               	subwf	_outPipes+4,f,c	;volatile
 41106  00F7CC  0E00               	movlw	0
 41107  00F7CE  5A06               	subwfb	_outPipes+5,f,c	;volatile
 41108                           
 41109                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 41110  00F7D0  0E00               	movlw	0
 41111  00F7D2  6E2E               	movwf	USBCtrlTrfRxService@i,c
 41112  00F7D4  D011               	goto	i2l260
 41113  00F7D6                     
 41114                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 41115  00F7D6  502E               	movf	USBCtrlTrfRxService@i,w,c
 41116  00F7D8  0D01               	mullw	1
 41117  00F7DA  0E38               	movlw	56
 41118  00F7DC  24F3               	addwf	prodl,w,c
 41119  00F7DE  6ED9               	movwf	fsr2l,c
 41120  00F7E0  0E0D               	movlw	13
 41121  00F7E2  20F4               	addwfc	prodh,w,c
 41122  00F7E4  6EDA               	movwf	fsr2h,c
 41123  00F7E6  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 41124  00F7EA  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 41125  00F7EE  CFDF FFE7          	movff	indf2,indf1
 41126  00F7F2  4A01               	infsnz	_outPipes,f,c	;volatile
 41127  00F7F4  2A02               	incf	_outPipes+1,f,c	;volatile
 41128  00F7F6  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 41129  00F7F8                     i2l260:
 41130  00F7F8  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 41131  00F7FA  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 41132  00F7FC  A0D8               	btfss	status,0,c
 41133  00F7FE  D7EB               	goto	i2l261
 41134                           
 41135                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 41136  00F800  5005               	movf	_outPipes+4,w,c	;volatile
 41137  00F802  1006               	iorwf	_outPipes+5,w,c	;volatile
 41138  00F804  B4D8               	btfsc	status,2,c
 41139  00F806  D032               	goto	i2l263
 41140                           
 41141                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 41142  00F808  EE20 F001          	lfsr	2,1
 41143  00F80C  501C               	movf	_pBDTEntryEP0OutNext,w,c
 41144  00F80E  26D9               	addwf	fsr2l,f,c
 41145  00F810  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 41146  00F812  22DA               	addwfc	fsr2h,f,c
 41147  00F814  0E08               	movlw	8
 41148  00F816  6EDF               	movwf	indf2,c
 41149                           
 41150                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 41151  00F818  EE20 F002          	lfsr	2,2
 41152  00F81C  501C               	movf	_pBDTEntryEP0OutNext,w,c
 41153  00F81E  26D9               	addwf	fsr2l,f,c
 41154  00F820  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 41155  00F822  22DA               	addwfc	fsr2h,f,c
 41156  00F824  0E38               	movlw	56
 41157  00F826  6EDE               	movwf	postinc2,c
 41158  00F828  0E0D               	movlw	13
 41159  00F82A  6EDD               	movwf	postdec2,c
 41160                           
 41161                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 41162  00F82C  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 41163  00F830  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 41164  00F834  BCDF               	btfsc	indf2,6,c
 41165  00F836  D00D               	goto	i2l264
 41166                           
 41167                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 41168  00F838  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41169  00F83C  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41170  00F840  0E48               	movlw	72
 41171  00F842  6EDF               	movwf	indf2,c
 41172                           
 41173                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41174  00F844  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41175  00F848  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41176  00F84C  0E00               	movlw	0
 41177  00F84E  8EDB               	bsf	plusw2,7,c
 41178                           
 41179                           ;usb_device.c: 1891: }
 41180  00F850  0012               	return	
 41181  00F852                     i2l264:
 41182                           
 41183                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 41184  00F852  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41185  00F856  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41186  00F85A  0E08               	movlw	8
 41187  00F85C  6EDF               	movwf	indf2,c
 41188                           
 41189                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41190  00F85E  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41191  00F862  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41192  00F866  0E00               	movlw	0
 41193  00F868  8EDB               	bsf	plusw2,7,c
 41194                           
 41195                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 41196  00F86A  0012               	return	
 41197  00F86C                     i2l263:
 41198                           
 41199                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 41200  00F86C  EE20 F001          	lfsr	2,1
 41201  00F870  501C               	movf	_pBDTEntryEP0OutNext,w,c
 41202  00F872  26D9               	addwf	fsr2l,f,c
 41203  00F874  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 41204  00F876  22DA               	addwfc	fsr2h,f,c
 41205  00F878  0E08               	movlw	8
 41206  00F87A  6EDF               	movwf	indf2,c
 41207                           
 41208                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 41209  00F87C  EE20 F002          	lfsr	2,2
 41210  00F880  501C               	movf	_pBDTEntryEP0OutNext,w,c
 41211  00F882  26D9               	addwf	fsr2l,f,c
 41212  00F884  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 41213  00F886  22DA               	addwfc	fsr2h,f,c
 41214  00F888  0E30               	movlw	48
 41215  00F88A  6EDE               	movwf	postinc2,c
 41216  00F88C  0E0D               	movlw	13
 41217  00F88E  6EDD               	movwf	postdec2,c
 41218                           
 41219                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 41220  00F890  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41221  00F894  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41222  00F898  0E04               	movlw	4
 41223  00F89A  6EDF               	movwf	indf2,c
 41224                           
 41225                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41226  00F89C  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41227  00F8A0  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41228  00F8A4  0E00               	movlw	0
 41229  00F8A6  8EDB               	bsf	plusw2,7,c
 41230                           
 41231                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 41232                           
 41233                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 41234  00F8A8  9E04               	bcf	_outPipes+3,7,c	;volatile
 41235                           
 41236                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 41237  00F8AA  5026               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 41238  00F8AC  A4D8               	btfss	status,2,c
 41239  00F8AE  0012               	return	
 41240                           
 41241                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 41242  00F8B0  ECEE  F084         	call	_USBCtrlEPAllowStatusStage	;wreg free
 41243  00F8B4  0012               	return	
 41244  00F8B6                     __end_of_USBCtrlTrfRxService:
 41245                           	opt stack 0
 41246                           tosu	equ	0xFFF
 41247                           tosh	equ	0xFFE
 41248                           tosl	equ	0xFFD
 41249                           pclatu	equ	0xFFB
 41250                           pclath	equ	0xFFA
 41251                           tblptru	equ	0xFF8
 41252                           tblptrh	equ	0xFF7
 41253                           tblptrl	equ	0xFF6
 41254                           tablat	equ	0xFF5
 41255                           prodh	equ	0xFF4
 41256                           prodl	equ	0xFF3
 41257                           intcon	equ	0xFF2
 41258                           indf0	equ	0xFEF
 41259                           postinc0	equ	0xFEE
 41260                           fsr0h	equ	0xFEA
 41261                           fsr0l	equ	0xFE9
 41262                           wreg	equ	0xFE8
 41263                           indf1	equ	0xFE7
 41264                           postdec1	equ	0xFE5
 41265                           plusw1	equ	0xFE3
 41266                           fsr1h	equ	0xFE2
 41267                           fsr1l	equ	0xFE1
 41268                           indf2	equ	0xFDF
 41269                           postinc2	equ	0xFDE
 41270                           postdec2	equ	0xFDD
 41271                           plusw2	equ	0xFDB
 41272                           fsr2h	equ	0xFDA
 41273                           fsr2l	equ	0xFD9
 41274                           status	equ	0xFD8
 41275                           
 41276 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 41277 ;; Defined at:
 41278 ;;		line 1418 in file "usb_device.c"
 41279 ;; Parameters:    Size  Location     Type
 41280 ;;		None
 41281 ;; Auto vars:     Size  Location     Type
 41282 ;;		None
 41283 ;; Return value:  Size  Location     Type
 41284 ;;                  1    wreg      void 
 41285 ;; Registers used:
 41286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41287 ;; Tracked objects:
 41288 ;;		On entry : 0/0
 41289 ;;		On exit  : 0/0
 41290 ;;		Unchanged: 0/0
 41291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41296 ;;Total ram usage:        0 bytes
 41297 ;; Hardware stack levels used:    1
 41298 ;; This function calls:
 41299 ;;		Nothing
 41300 ;; This function is called by:
 41301 ;;		_USBDeviceTasks
 41302 ;;		_USBCtrlEPServiceComplete
 41303 ;;		_USBCtrlTrfRxService
 41304 ;; This function uses a non-reentrant model
 41305 ;;
 41306                           
 41307                           	psect	text160
 41308  0109DC                     __ptext160:
 41309                           	opt stack 0
 41310  0109DC                     _USBCtrlEPAllowStatusStage:
 41311                           	opt stack 13
 41312                           
 41313                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 41314                           
 41315                           ;incstack = 0
 41316  0109DC  0101               	movlb	1	; () banked
 41317  0109DE  5175               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 41318  0109E0  A4D8               	btfss	status,2,c
 41319  0109E2  0012               	return	
 41320                           
 41321                           ; BSR set to: 1
 41322                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 41323  0109E4  0E01               	movlw	1
 41324  0109E6  6F75               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 41325                           
 41326                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 41327  0109E8  5174               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 41328  0109EA  A4D8               	btfss	status,2,c
 41329  0109EC  0012               	return	
 41330                           
 41331                           ; BSR set to: 1
 41332                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 41333  0109EE  0E01               	movlw	1
 41334  0109F0  6F74               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 41335                           
 41336                           ; BSR set to: 1
 41337                           ;usb_device.c: 1434: if(controlTransferState == 2)
 41338  0109F2  0E02               	movlw	2
 41339  0109F4  1829               	xorwf	_controlTransferState,w,c	;volatile
 41340  0109F6  A4D8               	btfss	status,2,c
 41341  0109F8  D015               	goto	i2l214
 41342                           
 41343                           ; BSR set to: 1
 41344                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 41345  0109FA  EE20 F001          	lfsr	2,1
 41346  0109FE  5010               	movf	_pBDTEntryIn,w,c
 41347  010A00  26D9               	addwf	fsr2l,f,c
 41348  010A02  5011               	movf	_pBDTEntryIn+1,w,c
 41349  010A04  22DA               	addwfc	fsr2h,f,c
 41350  010A06  0E00               	movlw	0
 41351  010A08  6EDF               	movwf	indf2,c
 41352                           
 41353                           ; BSR set to: 1
 41354                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 41355  010A0A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41356  010A0E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41357  010A12  0E48               	movlw	72
 41358  010A14  6EDF               	movwf	indf2,c
 41359                           
 41360                           ; BSR set to: 1
 41361                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 41362  010A16  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41363  010A1A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41364  010A1E  0E00               	movlw	0
 41365  010A20  8EDB               	bsf	plusw2,7,c
 41366                           
 41367                           ;usb_device.c: 1439: }
 41368  010A22  0012               	return	
 41369  010A24                     i2l214:
 41370                           
 41371                           ; BSR set to: 1
 41372                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 41373                           
 41374                           ; BSR set to: 1
 41375  010A24  0429               	decf	_controlTransferState,w,c	;volatile
 41376  010A26  A4D8               	btfss	status,2,c
 41377  010A28  0012               	return	
 41378                           
 41379                           ; BSR set to: 1
 41380                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 41381  010A2A  0E00               	movlw	0
 41382  010A2C  6F76               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 41383                           
 41384                           ; BSR set to: 1
 41385                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 41386  010A2E  EE20 F001          	lfsr	2,1
 41387  010A32  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 41388  010A34  26D9               	addwf	fsr2l,f,c
 41389  010A36  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 41390  010A38  22DA               	addwfc	fsr2h,f,c
 41391  010A3A  0E08               	movlw	8
 41392  010A3C  6EDF               	movwf	indf2,c
 41393                           
 41394                           ; BSR set to: 1
 41395                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 41396  010A3E  EE20 F002          	lfsr	2,2
 41397  010A42  501E               	movf	_pBDTEntryEP0OutCurrent,w,c
 41398  010A44  26D9               	addwf	fsr2l,f,c
 41399  010A46  501F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 41400  010A48  22DA               	addwfc	fsr2h,f,c
 41401  010A4A  0E30               	movlw	48
 41402  010A4C  6EDE               	movwf	postinc2,c
 41403  010A4E  0E0D               	movlw	13
 41404  010A50  6EDD               	movwf	postdec2,c
 41405                           
 41406                           ; BSR set to: 1
 41407                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 41408  010A52  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 41409  010A56  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 41410  010A5A  0E04               	movlw	4
 41411  010A5C  6EDF               	movwf	indf2,c
 41412                           
 41413                           ; BSR set to: 1
 41414                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 41415  010A5E  C01E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 41416  010A62  C01F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 41417  010A66  0E00               	movlw	0
 41418  010A68  8EDB               	bsf	plusw2,7,c
 41419                           
 41420                           ; BSR set to: 1
 41421                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 41422  010A6A  0E01               	movlw	1
 41423  010A6C  6F76               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 41424                           
 41425                           ; BSR set to: 1
 41426                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 41427  010A6E  EE20 F001          	lfsr	2,1
 41428  010A72  501C               	movf	_pBDTEntryEP0OutNext,w,c
 41429  010A74  26D9               	addwf	fsr2l,f,c
 41430  010A76  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 41431  010A78  22DA               	addwfc	fsr2h,f,c
 41432  010A7A  0E08               	movlw	8
 41433  010A7C  6EDF               	movwf	indf2,c
 41434                           
 41435                           ; BSR set to: 1
 41436                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 41437  010A7E  EE20 F002          	lfsr	2,2
 41438  010A82  501C               	movf	_pBDTEntryEP0OutNext,w,c
 41439  010A84  26D9               	addwf	fsr2l,f,c
 41440  010A86  501D               	movf	_pBDTEntryEP0OutNext+1,w,c
 41441  010A88  22DA               	addwfc	fsr2h,f,c
 41442  010A8A  0E30               	movlw	48
 41443  010A8C  6EDE               	movwf	postinc2,c
 41444  010A8E  0E0D               	movlw	13
 41445  010A90  6EDD               	movwf	postdec2,c
 41446                           
 41447                           ; BSR set to: 1
 41448                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 41449  010A92  C01C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41450  010A96  C01D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41451  010A9A  0E80               	movlw	128
 41452  010A9C  6EDF               	movwf	indf2,c
 41453                           
 41454                           ; BSR set to: 1
 41455                           
 41456                           ; BSR set to: 1
 41457                           
 41458                           ; BSR set to: 1
 41459  010A9E  0012               	return	
 41460  010AA0                     __end_of_USBCtrlEPAllowStatusStage:
 41461                           	opt stack 0
 41462                           tosu	equ	0xFFF
 41463                           tosh	equ	0xFFE
 41464                           tosl	equ	0xFFD
 41465                           pclatu	equ	0xFFB
 41466                           pclath	equ	0xFFA
 41467                           tblptru	equ	0xFF8
 41468                           tblptrh	equ	0xFF7
 41469                           tblptrl	equ	0xFF6
 41470                           tablat	equ	0xFF5
 41471                           prodh	equ	0xFF4
 41472                           prodl	equ	0xFF3
 41473                           intcon	equ	0xFF2
 41474                           indf0	equ	0xFEF
 41475                           postinc0	equ	0xFEE
 41476                           fsr0h	equ	0xFEA
 41477                           fsr0l	equ	0xFE9
 41478                           wreg	equ	0xFE8
 41479                           indf1	equ	0xFE7
 41480                           postdec1	equ	0xFE5
 41481                           plusw1	equ	0xFE3
 41482                           fsr1h	equ	0xFE2
 41483                           fsr1l	equ	0xFE1
 41484                           indf2	equ	0xFDF
 41485                           postinc2	equ	0xFDE
 41486                           postdec2	equ	0xFDD
 41487                           plusw2	equ	0xFDB
 41488                           fsr2h	equ	0xFDA
 41489                           fsr2l	equ	0xFD9
 41490                           status	equ	0xFD8
 41491                           
 41492 ;; *************** function _USBCtrlTrfInHandler *****************
 41493 ;; Defined at:
 41494 ;;		line 2594 in file "usb_device.c"
 41495 ;; Parameters:    Size  Location     Type
 41496 ;;		None
 41497 ;; Auto vars:     Size  Location     Type
 41498 ;;  lastDTS         1    1[COMRAM] unsigned char 
 41499 ;; Return value:  Size  Location     Type
 41500 ;;                  1    wreg      void 
 41501 ;; Registers used:
 41502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41503 ;; Tracked objects:
 41504 ;;		On entry : 0/0
 41505 ;;		On exit  : 0/0
 41506 ;;		Unchanged: 0/0
 41507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41512 ;;Total ram usage:        1 bytes
 41513 ;; Hardware stack levels used:    1
 41514 ;; Hardware stack levels required when called:    1
 41515 ;; This function calls:
 41516 ;;		_USBCtrlTrfTxService
 41517 ;; This function is called by:
 41518 ;;		_USBCtrlEPService
 41519 ;; This function uses a non-reentrant model
 41520 ;;
 41521                           
 41522                           	psect	text161
 41523  010B5E                     __ptext161:
 41524                           	opt stack 0
 41525  010B5E                     _USBCtrlTrfInHandler:
 41526                           	opt stack 14
 41527                           
 41528                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 41529                           
 41530                           ; BSR set to: 1
 41531                           ;incstack = 0
 41532  010B5E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41533  010B62  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41534  010B66  0E00               	movlw	0
 41535  010B68  BCDF               	btfsc	indf2,6,c
 41536  010B6A  0E01               	movlw	1
 41537  010B6C  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 41538                           
 41539                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 41540  010B6E  0E04               	movlw	4
 41541  010B70  1810               	xorwf	_pBDTEntryIn,w,c
 41542  010B72  6E10               	movwf	_pBDTEntryIn,c
 41543  010B74  5011               	movf	_pBDTEntryIn+1,w,c
 41544  010B76  6E11               	movwf	_pBDTEntryIn+1,c
 41545                           
 41546                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 41547  010B78  0E08               	movlw	8
 41548  010B7A  182B               	xorwf	_USBDeviceState,w,c	;volatile
 41549  010B7C  A4D8               	btfss	status,2,c
 41550  010B7E  D00C               	goto	i2l341
 41551                           
 41552                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 41553  010B80  010D               	movlb	13	; () banked
 41554  010B82  5132               	movf	50,w,b	;volatile
 41555  010B84  0B7F               	andlw	127
 41556  010B86  010F               	movlb	15	; () banked
 41557  010B88  6F38               	movwf	56,b	;volatile
 41558                           
 41559                           ; BSR set to: 15
 41560                           ;usb_device.c: 2609: if(UADDR != 0u)
 41561  010B8A  5138               	movf	56,w,b	;volatile
 41562  010B8C  B4D8               	btfsc	status,2,c
 41563  010B8E  D002               	goto	i2l340
 41564                           
 41565                           ; BSR set to: 15
 41566                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 41567  010B90  0E10               	movlw	16
 41568  010B92  D001               	goto	L77
 41569  010B94                     i2l340:
 41570                           
 41571                           ; BSR set to: 15
 41572                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 41573                           
 41574                           ; BSR set to: 15
 41575  010B94  0E04               	movlw	4
 41576  010B96                     L77:
 41577  010B96  6E2B               	movwf	_USBDeviceState,c	;volatile
 41578  010B98                     i2l341:
 41579                           
 41580                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 41581                           
 41582                           ; BSR set to: 15
 41583                           
 41584                           ; BSR set to: 15
 41585  010B98  0429               	decf	_controlTransferState,w,c	;volatile
 41586  010B9A  A4D8               	btfss	status,2,c
 41587  010B9C  D03A               	goto	i2l342
 41588                           
 41589                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 41590  010B9E  EE20 F002          	lfsr	2,2
 41591  010BA2  5010               	movf	_pBDTEntryIn,w,c
 41592  010BA4  26D9               	addwf	fsr2l,f,c
 41593  010BA6  5011               	movf	_pBDTEntryIn+1,w,c
 41594  010BA8  22DA               	addwfc	fsr2h,f,c
 41595  010BAA  0E38               	movlw	56
 41596  010BAC  6EDE               	movwf	postinc2,c
 41597  010BAE  0E0D               	movlw	13
 41598  010BB0  6EDD               	movwf	postdec2,c
 41599                           
 41600                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 41601  010BB2  ECBA  F083         	call	_USBCtrlTrfTxService	;wreg free
 41602                           
 41603                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 41604  010BB6  0E02               	movlw	2
 41605  010BB8  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 41606  010BBA  A4D8               	btfss	status,2,c
 41607  010BBC  D00D               	goto	i2l343
 41608                           
 41609                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 41610  010BBE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41611  010BC2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41612  010BC6  0E04               	movlw	4
 41613  010BC8  6EDF               	movwf	indf2,c
 41614                           
 41615                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 41616  010BCA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41617  010BCE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41618  010BD2  0E00               	movlw	0
 41619  010BD4  8EDB               	bsf	plusw2,7,c
 41620                           
 41621                           ;usb_device.c: 2635: }
 41622  010BD6  0012               	return	
 41623  010BD8                     i2l343:
 41624                           
 41625                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 41626  010BD8  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 41627  010BDA  A4D8               	btfss	status,2,c
 41628  010BDC  D00D               	goto	i2l345
 41629                           
 41630                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 41631  010BDE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41632  010BE2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41633  010BE6  0E48               	movlw	72
 41634  010BE8  6EDF               	movwf	indf2,c
 41635                           
 41636                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 41637  010BEA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41638  010BEE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41639  010BF2  0E00               	movlw	0
 41640  010BF4  8EDB               	bsf	plusw2,7,c
 41641                           
 41642                           ;usb_device.c: 2642: }
 41643  010BF6  0012               	return	
 41644  010BF8                     i2l345:
 41645                           
 41646                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 41647  010BF8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41648  010BFC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41649  010C00  0E08               	movlw	8
 41650  010C02  6EDF               	movwf	indf2,c
 41651                           
 41652                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 41653  010C04  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 41654  010C08  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41655  010C0C  0E00               	movlw	0
 41656  010C0E  8EDB               	bsf	plusw2,7,c
 41657                           
 41658                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 41659  010C10  0012               	return	
 41660  010C12                     i2l342:
 41661                           
 41662                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 41663  010C12  BE04               	btfsc	_outPipes+3,7,c	;volatile
 41664                           
 41665                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 41666                           
 41667                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 41668  010C14  9E04               	bcf	_outPipes+3,7,c	;volatile
 41669                           
 41670                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 41671  010C16  0E00               	movlw	0
 41672  010C18  6E29               	movwf	_controlTransferState,c	;volatile
 41673  010C1A  0012               	return	
 41674  010C1C                     __end_of_USBCtrlTrfInHandler:
 41675                           	opt stack 0
 41676                           tosu	equ	0xFFF
 41677                           tosh	equ	0xFFE
 41678                           tosl	equ	0xFFD
 41679                           pclatu	equ	0xFFB
 41680                           pclath	equ	0xFFA
 41681                           tblptru	equ	0xFF8
 41682                           tblptrh	equ	0xFF7
 41683                           tblptrl	equ	0xFF6
 41684                           tablat	equ	0xFF5
 41685                           prodh	equ	0xFF4
 41686                           prodl	equ	0xFF3
 41687                           intcon	equ	0xFF2
 41688                           indf0	equ	0xFEF
 41689                           postinc0	equ	0xFEE
 41690                           fsr0h	equ	0xFEA
 41691                           fsr0l	equ	0xFE9
 41692                           wreg	equ	0xFE8
 41693                           indf1	equ	0xFE7
 41694                           postdec1	equ	0xFE5
 41695                           plusw1	equ	0xFE3
 41696                           fsr1h	equ	0xFE2
 41697                           fsr1l	equ	0xFE1
 41698                           indf2	equ	0xFDF
 41699                           postinc2	equ	0xFDE
 41700                           postdec2	equ	0xFDD
 41701                           plusw2	equ	0xFDB
 41702                           fsr2h	equ	0xFDA
 41703                           fsr2l	equ	0xFD9
 41704                           status	equ	0xFD8
 41705                           
 41706 ;; *************** function _USBCtrlTrfTxService *****************
 41707 ;; Defined at:
 41708 ;;		line 1773 in file "usb_device.c"
 41709 ;; Parameters:    Size  Location     Type
 41710 ;;		None
 41711 ;; Auto vars:     Size  Location     Type
 41712 ;;  byteToSend      1    0[COMRAM] unsigned char 
 41713 ;; Return value:  Size  Location     Type
 41714 ;;                  1    wreg      void 
 41715 ;; Registers used:
 41716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41717 ;; Tracked objects:
 41718 ;;		On entry : 0/0
 41719 ;;		On exit  : 0/0
 41720 ;;		Unchanged: 0/0
 41721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41726 ;;Total ram usage:        1 bytes
 41727 ;; Hardware stack levels used:    1
 41728 ;; This function calls:
 41729 ;;		Nothing
 41730 ;; This function is called by:
 41731 ;;		_USBCtrlEPAllowDataStage
 41732 ;;		_USBCtrlTrfInHandler
 41733 ;; This function uses a non-reentrant model
 41734 ;;
 41735                           
 41736                           	psect	text162
 41737  010774                     __ptext162:
 41738                           	opt stack 0
 41739  010774                     _USBCtrlTrfTxService:
 41740                           	opt stack 12
 41741                           
 41742                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 41743                           
 41744                           ;incstack = 0
 41745  010774  0E08               	movlw	8
 41746  010776  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 41747                           
 41748                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 41749  010778  500F               	movf	_inPipes+5,w,c	;volatile
 41750  01077A  E110               	bnz	i2l11129
 41751  01077C  0E08               	movlw	8
 41752  01077E  5C0E               	subwf	_inPipes+4,w,c	;volatile
 41753  010780  B0D8               	btfsc	status,0,c
 41754  010782  D00C               	goto	i2l247
 41755                           
 41756                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 41757  010784  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 41758                           
 41759                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 41760  010788  502A               	movf	_shortPacketStatus,w,c	;volatile
 41761  01078A  A4D8               	btfss	status,2,c
 41762  01078C  D002               	goto	i2l245
 41763                           
 41764                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 41765  01078E  0E01               	movlw	1
 41766  010790  D004               	goto	L78
 41767  010792                     i2l245:
 41768                           
 41769                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 41770  010792  042A               	decf	_shortPacketStatus,w,c	;volatile
 41771  010794  A4D8               	btfss	status,2,c
 41772  010796  D002               	goto	i2l247
 41773                           
 41774                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 41775  010798  0E02               	movlw	2
 41776  01079A                     L78:
 41777  01079A  6E2A               	movwf	_shortPacketStatus,c	;volatile
 41778  01079C                     i2l247:
 41779  01079C                     i2l11129:
 41780                           
 41781                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 41782  01079C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 41783  01079E  5E0E               	subwf	_inPipes+4,f,c	;volatile
 41784  0107A0  0E00               	movlw	0
 41785  0107A2  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 41786                           
 41787                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 41788  0107A4  EE20 F001          	lfsr	2,1
 41789  0107A8  5010               	movf	_pBDTEntryIn,w,c
 41790  0107AA  26D9               	addwf	fsr2l,f,c
 41791  0107AC  5011               	movf	_pBDTEntryIn+1,w,c
 41792  0107AE  22DA               	addwfc	fsr2h,f,c
 41793  0107B0  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 41794                           
 41795                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 41796  0107B4  0E38               	movlw	56
 41797  0107B6  0101               	movlb	1	; () banked
 41798  0107B8  6F67               	movwf	_pDst& (0+255),b
 41799  0107BA  0E0D               	movlw	13
 41800  0107BC  6F68               	movwf	(_pDst+1)& (0+255),b
 41801                           
 41802                           ; BSR set to: 1
 41803                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 41804  0107BE  A00D               	btfss	_inPipes+3,0,c	;volatile
 41805  0107C0  D01D               	goto	i2l249
 41806  0107C2  D03C               	goto	i2l253
 41807  0107C4                     
 41808                           ; BSR set to: 1
 41809                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 41810                           
 41811                           ; BSR set to: 1
 41812  0107C4  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 41813  0107C8  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 41814  0107CC  0E00               	movlw	low (__mediumconst shr (0+16))
 41815  0107CE  6EF8               	movwf	tblptru,c
 41816  0107D0  C167  FFD9         	movff	_pDst,fsr2l
 41817  0107D4  C168  FFDA         	movff	_pDst+1,fsr2h
 41818  0107D8  0E0E               	movlw	(high __ramtop+-1)
 41819  0107DA  64F7               	cpfsgt	tblptrh,c
 41820  0107DC  D003               	bra	i2u917_47
 41821  0107DE  0008               	tblrd		*
 41822  0107E0  50F5               	movf	tablat,w,c
 41823  0107E2  D005               	bra	i2u917_40
 41824  0107E4                     i2u917_47:
 41825  0107E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 41826  0107E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 41827  0107EC  50EF               	movf	indf0,w,c
 41828  0107EE                     i2u917_40:
 41829  0107EE  6EDF               	movwf	indf2,c
 41830  0107F0  4A0A               	infsnz	_inPipes,f,c	;volatile
 41831  0107F2  2A0B               	incf	_inPipes+1,f,c	;volatile
 41832  0107F4  0101               	movlb	1	; () banked
 41833  0107F6  4B67               	infsnz	_pDst& (0+255),f,b
 41834  0107F8  2B68               	incf	(_pDst+1)& (0+255),f,b
 41835                           
 41836                           ; BSR set to: 1
 41837                           ;usb_device.c: 1816: byteToSend--;
 41838  0107FA  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 41839  0107FC                     i2l249:
 41840                           
 41841                           ; BSR set to: 1
 41842                           
 41843                           ; BSR set to: 1
 41844  0107FC  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 41845  0107FE  B4D8               	btfsc	status,2,c
 41846  010800  0012               	return	
 41847  010802  D7E0               	goto	i2l250
 41848  010804                     
 41849                           ; BSR set to: 1
 41850                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 41851                           
 41852                           ; BSR set to: 1
 41853  010804  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 41854  010808  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 41855  01080C  0E00               	movlw	low (__mediumconst shr (0+16))
 41856  01080E  6EF8               	movwf	tblptru,c
 41857  010810  C167  FFD9         	movff	_pDst,fsr2l
 41858  010814  C168  FFDA         	movff	_pDst+1,fsr2h
 41859  010818  0E0E               	movlw	(high __ramtop+-1)
 41860  01081A  64F7               	cpfsgt	tblptrh,c
 41861  01081C  D003               	bra	i2u919_47
 41862  01081E  0008               	tblrd		*
 41863  010820  50F5               	movf	tablat,w,c
 41864  010822  D005               	bra	i2u919_40
 41865  010824                     i2u919_47:
 41866  010824  CFF6 FFE9          	movff	tblptrl,fsr0l
 41867  010828  CFF7 FFEA          	movff	tblptrh,fsr0h
 41868  01082C  50EF               	movf	indf0,w,c
 41869  01082E                     i2u919_40:
 41870  01082E  6EDF               	movwf	indf2,c
 41871  010830  4A0A               	infsnz	_inPipes,f,c	;volatile
 41872  010832  2A0B               	incf	_inPipes+1,f,c	;volatile
 41873  010834  0101               	movlb	1	; () banked
 41874  010836  4B67               	infsnz	_pDst& (0+255),f,b
 41875  010838  2B68               	incf	(_pDst+1)& (0+255),f,b
 41876                           
 41877                           ; BSR set to: 1
 41878                           ;usb_device.c: 1824: byteToSend--;
 41879  01083A  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 41880  01083C                     i2l253:
 41881                           
 41882                           ; BSR set to: 1
 41883                           
 41884                           ; BSR set to: 1
 41885  01083C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 41886  01083E  B4D8               	btfsc	status,2,c
 41887  010840  0012               	return	
 41888  010842  D7E0               	goto	i2l254
 41889  010844                     __end_of_USBCtrlTrfTxService:
 41890                           	opt stack 0
 41891                           tosu	equ	0xFFF
 41892                           tosh	equ	0xFFE
 41893                           tosl	equ	0xFFD
 41894                           pclatu	equ	0xFFB
 41895                           pclath	equ	0xFFA
 41896                           tblptru	equ	0xFF8
 41897                           tblptrh	equ	0xFF7
 41898                           tblptrl	equ	0xFF6
 41899                           tablat	equ	0xFF5
 41900                           prodh	equ	0xFF4
 41901                           prodl	equ	0xFF3
 41902                           intcon	equ	0xFF2
 41903                           indf0	equ	0xFEF
 41904                           postinc0	equ	0xFEE
 41905                           fsr0h	equ	0xFEA
 41906                           fsr0l	equ	0xFE9
 41907                           wreg	equ	0xFE8
 41908                           indf1	equ	0xFE7
 41909                           postdec1	equ	0xFE5
 41910                           plusw1	equ	0xFE3
 41911                           fsr1h	equ	0xFE2
 41912                           fsr1l	equ	0xFE1
 41913                           indf2	equ	0xFDF
 41914                           postinc2	equ	0xFDE
 41915                           postdec2	equ	0xFDD
 41916                           plusw2	equ	0xFDB
 41917                           fsr2h	equ	0xFDA
 41918                           fsr2l	equ	0xFD9
 41919                           status	equ	0xFD8
 41920                           tosu	equ	0xFFF
 41921                           tosh	equ	0xFFE
 41922                           tosl	equ	0xFFD
 41923                           pclatu	equ	0xFFB
 41924                           pclath	equ	0xFFA
 41925                           tblptru	equ	0xFF8
 41926                           tblptrh	equ	0xFF7
 41927                           tblptrl	equ	0xFF6
 41928                           tablat	equ	0xFF5
 41929                           prodh	equ	0xFF4
 41930                           prodl	equ	0xFF3
 41931                           intcon	equ	0xFF2
 41932                           indf0	equ	0xFEF
 41933                           postinc0	equ	0xFEE
 41934                           fsr0h	equ	0xFEA
 41935                           fsr0l	equ	0xFE9
 41936                           wreg	equ	0xFE8
 41937                           indf1	equ	0xFE7
 41938                           postdec1	equ	0xFE5
 41939                           plusw1	equ	0xFE3
 41940                           fsr1h	equ	0xFE2
 41941                           fsr1l	equ	0xFE1
 41942                           indf2	equ	0xFDF
 41943                           postinc2	equ	0xFDE
 41944                           postdec2	equ	0xFDD
 41945                           plusw2	equ	0xFDB
 41946                           fsr2h	equ	0xFDA
 41947                           fsr2l	equ	0xFD9
 41948                           status	equ	0xFD8
 41949                           
 41950                           	psect	text163
 41951  000000                     __ptext163:
 41952                           	opt stack 0
 41953                           tosu	equ	0xFFF
 41954                           tosh	equ	0xFFE
 41955                           tosl	equ	0xFFD
 41956                           pclatu	equ	0xFFB
 41957                           pclath	equ	0xFFA
 41958                           tblptru	equ	0xFF8
 41959                           tblptrh	equ	0xFF7
 41960                           tblptrl	equ	0xFF6
 41961                           tablat	equ	0xFF5
 41962                           prodh	equ	0xFF4
 41963                           prodl	equ	0xFF3
 41964                           intcon	equ	0xFF2
 41965                           indf0	equ	0xFEF
 41966                           postinc0	equ	0xFEE
 41967                           fsr0h	equ	0xFEA
 41968                           fsr0l	equ	0xFE9
 41969                           wreg	equ	0xFE8
 41970                           indf1	equ	0xFE7
 41971                           postdec1	equ	0xFE5
 41972                           plusw1	equ	0xFE3
 41973                           fsr1h	equ	0xFE2
 41974                           fsr1l	equ	0xFE1
 41975                           indf2	equ	0xFDF
 41976                           postinc2	equ	0xFDE
 41977                           postdec2	equ	0xFDD
 41978                           plusw2	equ	0xFDB
 41979                           fsr2h	equ	0xFDA
 41980                           fsr2l	equ	0xFD9
 41981                           status	equ	0xFD8
 41982                           
 41983                           	psect	rparam
 41984  0000                     tosu	equ	0xFFF
 41985                           tosh	equ	0xFFE
 41986                           tosl	equ	0xFFD
 41987                           pclatu	equ	0xFFB
 41988                           pclath	equ	0xFFA
 41989                           tblptru	equ	0xFF8
 41990                           tblptrh	equ	0xFF7
 41991                           tblptrl	equ	0xFF6
 41992                           tablat	equ	0xFF5
 41993                           prodh	equ	0xFF4
 41994                           prodl	equ	0xFF3
 41995                           intcon	equ	0xFF2
 41996                           indf0	equ	0xFEF
 41997                           postinc0	equ	0xFEE
 41998                           fsr0h	equ	0xFEA
 41999                           fsr0l	equ	0xFE9
 42000                           wreg	equ	0xFE8
 42001                           indf1	equ	0xFE7
 42002                           postdec1	equ	0xFE5
 42003                           plusw1	equ	0xFE3
 42004                           fsr1h	equ	0xFE2
 42005                           fsr1l	equ	0xFE1
 42006                           indf2	equ	0xFDF
 42007                           postinc2	equ	0xFDE
 42008                           postdec2	equ	0xFDD
 42009                           plusw2	equ	0xFDB
 42010                           fsr2h	equ	0xFDA
 42011                           fsr2l	equ	0xFD9
 42012                           status	equ	0xFD8
 42013                           
 42014                           	psect	temp
 42015  00005B                     btemp:
 42016                           	opt stack 0
 42017  00005B                     	ds	1
 42018  0000                     int$flags	set	btemp
 42019  0000                     wtemp8	set	btemp+1
 42020  0000                     ttemp5	set	btemp+1
 42021  0000                     ttemp6	set	btemp+4
 42022  0000                     ttemp7	set	btemp+8
 42023                           tosu	equ	0xFFF
 42024                           tosh	equ	0xFFE
 42025                           tosl	equ	0xFFD
 42026                           pclatu	equ	0xFFB
 42027                           pclath	equ	0xFFA
 42028                           tblptru	equ	0xFF8
 42029                           tblptrh	equ	0xFF7
 42030                           tblptrl	equ	0xFF6
 42031                           tablat	equ	0xFF5
 42032                           prodh	equ	0xFF4
 42033                           prodl	equ	0xFF3
 42034                           intcon	equ	0xFF2
 42035                           indf0	equ	0xFEF
 42036                           postinc0	equ	0xFEE
 42037                           fsr0h	equ	0xFEA
 42038                           fsr0l	equ	0xFE9
 42039                           wreg	equ	0xFE8
 42040                           indf1	equ	0xFE7
 42041                           postdec1	equ	0xFE5
 42042                           plusw1	equ	0xFE3
 42043                           fsr1h	equ	0xFE2
 42044                           fsr1l	equ	0xFE1
 42045                           indf2	equ	0xFDF
 42046                           postinc2	equ	0xFDE
 42047                           postdec2	equ	0xFDD
 42048                           plusw2	equ	0xFDB
 42049                           fsr2h	equ	0xFDA
 42050                           fsr2l	equ	0xFD9
 42051                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4446
    Data        135
    BSS         947
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    106     160
    BANK1           256      4     211
    BANK2           256      0     200
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), os.current_position_in_degrees(BANK0[2]), config(BANK1[22]), 
		 -> os.current_position_in_steps(BANK0[4]), os(BANK0[45]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), os.current_position_in_degrees(BANK0[2]), config(BANK1[22]), 
		 -> os.current_position_in_steps(BANK0[4]), os(BANK0[45]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_arc_move->_motor_schedule_command
    ___flmul->___xxtofl
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_MSDCheckForErrorCases
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->_motor_nonzero_steps_from_degrees

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  343041
                                              0 BANK1      4     4      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _display_prepare
                     _display_update
               _encoder_statemachine
                  _motor_process_cue
                _os_read_temperature
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   54593
                          __adc_init
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
                           _i2c_init
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13160
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     270
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     208
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12890
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   30772
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8195
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   22577
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   20335
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    5486
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5716
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    7134
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     417
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    3085
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     369
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2586
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    2377
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    7576
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    5267
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2417
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    2309
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    2272
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __adc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_read_temperature                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     602
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0   84740
                                            100 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4   10561
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4   10254
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   30211
                                             90 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3486
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   16643
                                             90 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4   10358
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_change_speed                                   2     0      2     447
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   15306
                                             62 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3609
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   53089
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    7883
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7644
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2036
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1065
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3307
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    5913
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    5516
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   12731
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8311
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     650
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2706
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     653
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   93974
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   93974
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   88242
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   45026
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   42978
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0    8914
                                             17 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                            9     0      9     308
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16190
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7815
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    7457
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    5939
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    3240
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1592
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   41379
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   19094
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    8782
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7903
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     724
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3    1071
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   18740
                                             91 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   11302
                                             90 BANK0      1     1      0
         _motor_go_to_steps_position
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4    6115
                                             62 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6    6436
                                             74 BANK0      7     1      6
                  __parse_jump_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    5963
                                             62 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_schedule_command                               7     1      6    5156
                                             55 BANK0      7     1      6
                            ___fltol (ARG)
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          11     5      6     602
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3545
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58258
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0      91
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             ___fltol (ARG)
             __motor_run (ARG)
             _motor_items_in_cue (ARG)
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
       __parse_command_short
         _motor_go_to_steps_position
           _motor_schedule_command
             ___fltol (ARG)
             __motor_run (ARG)
             _motor_items_in_cue (ARG)
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         ___fltol (ARG)
         __motor_run (ARG)
         _motor_items_in_cue (ARG)
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         ___fltol (ARG)
         __motor_run (ARG)
         _motor_items_in_cue (ARG)
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       ___fltol (ARG)
       __motor_run (ARG)
       _motor_items_in_cue (ARG)
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_stop
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _os_read_temperature
   _system_init
     __adc_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_init
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      D3       7       82.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2D5      31        0.0%
DATA                 0      0     4D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Feb 18 23:06:02 2019

                               _motor_next_speed_check 0137  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                                         ___fldiv@sign 007E  
                                  __system_timer0_init 2834  
                            __end_of_motor_divide_jump 1470  
                                                   _os 00D3  
                                        _USBDeviceInit E846  
                                   _USBCheckHIDRequest 06A4  
               __end_of__encoder_next_divide_step_size 2806  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 27D8  
                                     ??__flash_is_busy 0071  
                                         __CFG_CP0$OFF 000000  
                                  __end_of_system_init FFB6  
                             ?_i2c_display_write_fixed 0065  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 003D  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                                                  l206 276E  
                                                  l207 276C  
                                                  l145 E890  
                                                  l147 E8B8  
                                                  l149 E8F2  
                          __end_of_USBStdGetDscHandler F238  
                                                  l184 F9DA  
                                                  l192 F918  
                                                  l186 FA04  
                                                  l602 D6FC  
                                                  l188 FA82  
                                                  l700 CD14  
                                                  l620 1AAE  
                                                  l612 F102  
                                                  l701 CA64  
                                                  l613 F0FC  
                                                  l605 D704  
                                                  l710 CB5C  
                                                  l630 C0A6  
                                                  l622 1ACA  
                                                  l703 CD36  
                                                  l711 CBC6  
                                                  l631 BD28  
                                                  l615 F106  
                                                  l720 CCFC  
                                                  l712 CBC2  
                                                  l704 CB0A  
                                                  l640 BE66  
                                                  l624 1AD6  
                                                  l608 F056  
                                                  l641 BE70  
                                                  l625 1ADC  
                                                  l714 CBDC  
                                                  l706 CB10  
                                                  l650 BF62  
                                                  l642 BE92  
                                                  l634 BD38  
                                                  l626 1AE2  
                                                  l570 D71C  
                                                  l731 FD30  
                                                  l715 CC5C  
                                                  l619 1AEA  
                                                  l571 D4F0  
                                                  l708 CB38  
                                                  l660 C006  
                                                  l652 BF96  
                                                  l644 BEC0  
                                                  l636 BD48  
                                                  l580 D5F6  
                                                  l709 CB80  
                                                  l661 C01A  
                                                  l637 BD52  
                                                  l901 1DD4  
                                                  l734 FD3C  
                                                  l726 FCE0  
                                                  l718 CCCC  
                                                  l670 C09E  
                                                  l662 C038  
                                                  l654 BFB2  
                                                  l646 BF00  
                                                  l582 D60E  
                                                  l735 FD64  
                                                  l719 CCE4  
                                                  l639 BDA4  
                                                  l591 D682  
                                                  l575 D512  
                                                  l728 FCF4  
                                                  l664 C064  
                                                  l656 BFCA  
                                                  l592 D686  
                                                  l753 FDBA  
                                                  l737 FD98  
                                                  l681 DF2E  
                                                  l665 C03E  
                                                  l649 BF34  
                                                  l593 D6AA  
                                                  l577 D634  
                                                  l770 F40A  
                                                  l738 FD82  
                                                  l690 DE46  
                                                  l682 DD76  
                                                  l666 C04E  
                                                  l578 D61A  
                                                  l586 D73A  
                                                  l675 0D20  
                                                  l763 F454  
                                                  l771 F446  
                                                  l691 DE70  
                                                  l667 C062  
                                                  l587 D654  
                                                  l579 D5EE  
                                                  l764 F3BE  
                                                  l684 DF52  
                                                  l692 DE9E  
                                                  _BDT 000D00  
                                                  l677 0D36  
                                                  l757 F390  
                                                  l749 FDAA  
                                                  l693 DEB0  
                                                  l685 DDCC  
                                                  l589 D660  
                                                  l861 EAAA  
                                                  l766 F3C6  
                                                  l694 DEB6  
                                                  l686 DDD8  
                                                  l862 E9BE  
                                                  l767 F3D4  
                                                  l695 DECC  
                                                  l687 DDE2  
                                                  l863 EACC  
                                                  l768 F3E8  
                                                  l696 DF16  
                                                  l688 DDF8  
                                                  l945 0FF8  
                                                  l769 F3F6  
                                                  l865 E9C4  
                                                  l866 EA9E  
                                                  l939 0F94  
                                                  l859 E9A2  
                                                  l892 1DE6  
                                                  l868 EAA4  
                                                  l981 2A5A  
                                                  l893 1DAA  
                                                  l895 1DB6  
                                                  l899 1DC8  
                                                  _LBA 0147  
                                        ?_display_init 002E  
                                                  _PR2 000FCB  
                                                  _LUN 0198  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                   api_prepare@command 0074  
                                           _USBSuspend 27A8  
                               __end_of_display_update 25CC  
                                 USBStdSetCfgHandler@i 0045  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks EC18  
                                  ?_USBCheckHIDRequest 002E  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 002B  
                                         ___flmul@aexp 007B  
                                         ___flmul@bexp 0080  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 002E  
                             __size_ofi2_USBDeviceInit 0144  
                             USBEnableEndpoint@options 0036  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 002E  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                          __flash_write_to_buffer@data 0075  
                                                 l1110 2AD0  
                                                 l2001 0E2A  
                                                 l1125 2AC8  
                                                 l1221 1748  
                                                 l1310 D8A0  
                                                 l1142 2230  
                                                 l1311 D900  
                                                 l1303 D7F4  
                                                 l1143 2212  
                                                 l1215 1FA4  
                                                 l1312 D8BA  
                                                 l1304 D812  
                                                 l1400 AA02  
                                                 l1216 1F86  
                                                 l1313 D8FE  
                                                 l1321 F5DE  
                                                 l1401 A9CA  
                                                 l2210 0CAA  
                                                 l1306 D8A8  
                                                 l1330 AE0A  
                                                 l1410 AB2E  
                                                 l2211 0C74  
                                                 l2123 1E50  
                                                 l1315 D93A  
                                                 l1411 ABD4  
                                                 l1403 AA76  
                                                 l1331 A23C  
                                                 l2115 2454  
                                                 l2212 0C80  
                                                 l1316 D90A  
                                                 l1420 ACA2  
                                                 l1412 AB4C  
                                                 l1404 AA46  
                                                 l1340 A29A  
                                                 l1332 A27A  
                                                 l2132 158C  
                                                 l2116 2430  
                                                 l2221 E2F4  
                                                 l2141 12A6  
                                                 l1309 D88C  
                                                 l1413 ABEA  
                                                 l1341 A2E2  
                                                 l1333 A25C  
                                                 l2117 2464  
                                                 l2206 0C30  
                                                 l1422 AD44  
                                                 l1414 AB58  
                                                 l1406 AA8E  
                                                 l1350 A33A  
                                                 l1502 16C0  
                                                 l2118 2442  
                                                 l2223 E306  
                                                 l1431 ADDA  
                                                 l1423 AD6C  
                                                 l1415 AB96  
                                                 l1407 AB00  
                                                 l1351 A36C  
                                                 l1343 A31C  
                                                 l1335 A266  
                                                 l1503 16CA  
                                                 l2232 E54A  
                                                 l2240 E472  
                                                 l2208 0C6A  
                                                 l1280 22A4  
                                                 l1416 AC5E  
                                                 l1408 AAD0  
                                                 l1360 A44C  
                                                 l1352 A358  
                                                 l1344 A2EC  
                                                 l2241 E4C6  
                                                 l2233 E44C  
                                                 l2225 E378  
                                                 l1433 AE02  
                                                 l1425 AD7A  
                                                 l1417 AC26  
                                                 l1361 A438  
                                                 l1337 A270  
                                                 l1505 1702  
                                                 l2129 1556  
                                                 l1521 2070  
                                                 l2242 E51C  
                                                 l2218 E3FC  
                                                 l2138 1268  
                                                 l1370 A5DA  
                                                 l1354 A362  
                                                 l3210 C518  
                                                 l3202 C474  
                                                 l2330 2278  
                                                 l1530 1D6A  
                                                 l1522 207A  
                                                 l2243 E530  
                                                 l2235 E454  
                                                 l1427 ADA2  
                                                 l1419 ACD2  
                                                 l1371 A5AA  
                                                 l1363 A442  
                                                 l1355 A380  
                                                 l1339 AE64  
                                                 l3211 C4DC  
                                                 l3203 C470  
                                                 l1507 1722  
                                                 l2260 E842  
                                                 l2252 24D2  
                                                 l2420 C904  
                                                 l2244 E536  
                                                 l2236 E45A  
                                                 l2228 E3CA  
                                                 l2180 0396  
                                                 l1380 A754  
                                                 l1364 A460  
                                                 l1356 A3C2  
                                                 l2500 1902  
                                                 l3300 C190  
                                                 l3220 C5F0  
                                                 l2253 24B0  
                                                 l2421 C954  
                                                 l2245 E53A  
                                                 l2237 E460  
                                                 l2181 03AA  
                                                 l1285 00F0  
                                                 l1429 ADCC  
                                                 l1381 A744  
                                                 l1373 A668  
                                                 l1365 A4CE  
                                                 l3221 C5B8  
                                                 l2254 24E2  
                                                 l2422 C9FC  
                                                 l2246 E53E  
                                                 l2238 E466  
                                                 l2190 F2A4  
                                                 l2182 03B8  
                                                 l1278 2298  
                                                 l1286 00DA  
                                                 l1294 2334  
                                                 l1390 A826  
                                                 l1382 A764  
                                                 l1374 A638  
                                                 l1366 A49E  
                                                 l1358 A410  
                                                 l2502 190E  
                                                 l3230 C688  
                                                 l3214 C594  
                                                 l2423 C9BE  
                                                 l2247 E542  
                                                 l2239 E46C  
                                                 l2175 03F8  
                                                 l2183 03D8  
                                                 l1535 2990  
                                                 l1383 A74C  
                                                 l2503 1918  
                                                 l3311 C388  
                                                 l3215 C572  
                                                 l3207 C4BC  
                                                 l1439 25A2  
                                                 l2352 106C  
                                                 l2248 E546  
                                                 l2192 F2AA  
                                                 l1288 014E  
                                                 l1392 A88A  
                                                 l1384 A7BE  
                                                 l1376 A70E  
                                                 l1368 A54E  
                                                 l2504 1922  
                                                 l3304 C350  
                                                 l3224 C5DA  
                                                 l3216 C580  
                                                 l3208 C4B8  
                                                 l1289 011E  
                                                 l1393 A8F2  
                                                 l1385 A78E  
                                                 l1377 A6DE  
                                                 l2505 192C  
                                                 l3313 C3CC  
                                                 l3305 C332  
                                                 l2433 141A  
                                                 l3233 C6AC  
                                                 l3225 C5DE  
                                                 l3217 C584  
                                                 l1529 1D60  
                                                 l2370 DBC6  
                                                 l2354 107A  
                                                 l2258 E7AC  
                                                 l2426 CA24  
                                                 l2418 C82A  
                                                 l2194 F322  
                                                 l2178 0374  
                                                 l1394 A8A8  
                                                 l2514 1C46  
                                                 l3314 C3EA  
                                                 l3250 C760  
                                                 l3242 C6EC  
                                                 l2602 B2EA  
                                                 l2610 B24C  
                                                 l2371 DBCE  
                                                 l2419 C87A  
                                                 l2195 F2C4  
                                                 l2187 F256  
                                                 l2179 0382  
                                                 l1299 D81C  
                                                 l1395 A902  
                                                 l1387 A81C  
                                                 l1379 A726  
                                                 l3251 C762  
                                                 l3235 C6C2  
                                                 l2611 B298  
                                                 l2603 B1AE  
                                                 l2372 DC28  
                                                 l2196 F358  
                                                 l1484 20EE  
                                                 l3260 CD68  
                                                 l3340 EB16  
                                                 l1396 A8B4  
                                                 l3316 C40E  
                                                 l2436 1436  
                                                 l3228 C678  
                                                 l2620 B31A  
                                                 l2604 B1FA  
                                                 l1900 D2A2  
                                                 l1476 19A2  
                           USBConfigureEndpoint@handle 0034  
                                                 l2197 F2DC  
                                                 l1485 20AE  
                                                 l1629 26C6  
                                                 l3181 1FF2  
                                                 l3341 EB26  
                                                 l1397 A95C  
                                                 l1389 A856  
                                                 l2509 25E2  
                                                 l3317 C42C  
                                                 l3245 C732  
                                                 l3237 C6CC  
                                                 l1901 D2B4  
                                                 l1477 19C6  
                                                 l2198 F2F8  
                                                 l3182 1FFC  
                                                 l3270 CE7C  
                                                 l3350 EBC6  
                                                 l3342 EB44  
                                                 l1398 A92C  
                                                 l2630 B39C  
                                                 l2622 B352  
                                                 l2614 B2C6  
                                                 l1910 D31E  
                                                 l1902 D2C6  
                                                 l1487 20D6  
                                                 l3191 23D2  
                                                 l3271 CEA4  
                                                 l3263 CDAC  
                                                 l3351 EBBA  
                                                 l2623 B322  
                                                 l2607 B228  
                                                 l2551 B090  
                                                 l1911 D322  
                                                 l1903 D2D8  
                                                 l2376 DC34  
                                                 l2368 DBA2  
                                                 l3192 23DC  
                                                 l3264 CDA8  
                                                 l3344 EB56  
                                                 l2480 18C6  
                                                 l2640 B3DE  
                                                 l2632 B3A6  
                                                 l2624 B32C  
                                                 l2560 AF18  
                                                 l2552 AEA4  
                                                 l1920 D346  
                                                 l1912 D326  
                                                 l1904 D2EA  
                                                 l2377 DC36  
                                                 l2369 DBB2  
                                                 l3177 1FD2  
                                                 l3361 2384  
                                                 l3273 CECA  
                                                 l3345 EB4A  
                                                 l2481 1892  
                                                 l3249 C758  
                                                 l2641 B3EC  
                                                 l2633 B3B0  
                                                 l2617 B344  
                                                 l2625 B33A  
                                                 l2553 AEB4  
                                                 l1921 D34A  
                                                 l1913 D32A  
                                                 l1905 D2FC  
                                                 l2378 DCA0  
                                                 l3178 1FCA  
                                                 l3266 CDF6  
                                                 l2706 1EC2  
                                                 l2490 27EE  
                                                 l2650 B484  
                                                 l2618 B2FC  
                                                 l1930 D36E  
                                                 l1922 D34E  
                                                 l1914 D32E  
                                                 l1906 D30E  
                                                 l2379 DCDA  
                                                 l3187 23BA  
                                                 l3283 CF38  
                                                 l3259 CD6C  
                                                 l2707 1ED6  
                                                 l3347 EB94  
                                                 l2491 27DE  
                                                 l2483 189E  
                                                 l2643 B426  
                                                 l2627 B362  
                                                 l2619 B30C  
                                                 l2571 AFCC  
                                                 l2563 AF46  
                                                 l1931 D372  
                                                 l1923 D352  
                                                 l1915 D332  
                                                 l1907 D312  
                                                 l3380 2782  
                                                 l3188 23B2  
                                                 l3276 CF00  
                                                 l3268 CE1E  
                                                 l3356 EC06  
                                                 l3348 EB7C  
                                                 l2484 18A8  
                                                 l2660 B598  
                                                 l2644 B3F4  
                                                 l2628 B374  
                                                 l2572 AFDC  
                                                 l2556 AEE2  
                                                 l1940 D392  
                                                 l1924 D356  
                                                 l1916 D336  
                                                 l1908 D316  
                                                 l3373 1C1E  
                                                 l3365 0EEA  
                                                 l3285 CF7C  
                                                 l3277 CEE2  
                                                 l3269 CECC  
                                                 l2493 27E2  
                                                 l2485 18B2  
                                                 l3293 C122  
                                                 l2549 B6FA  
                                                 l2661 B532  
                                                 l2653 B4C8  
                                                 l2645 B3FE  
                                                 l2581 B06C  
                                                 l2565 AF6A  
                                                 l1941 D396  
                                                 l1933 D376  
                                                 l1925 D35A  
                                                 l1917 D33A  
                                                 l1909 D31A  
                                                 l3374 1BE4  
                                                 l3286 CFA0  
                                                 l2494 27E6  
                                                 l2486 18BC  
                                                 l3294 C11E  
                                                 l2670 B57E  
                                                 l2662 B546  
                                                 l2638 B416  
                                                 l2646 B40C  
                                                 l2566 AF7A  
                                                 l1950 1E5E  
                                                 l1942 D39A  
                                                 l1934 D37A  
                                                 l1926 D35E  
                                                 l1918 D33E  
                                                 l1870 05D6  
                                                 l3367 0F26  
                                                 l3287 CFCA  
                                                 l2495 27EA  
                                                 l3295 C132  
                                                 l2671 B590  
                                                 l2655 B4EA  
                                                 l2639 B3D2  
                                                 l2591 B11C  
                                                 l2575 B00A  
                                                 l2559 AF08  
                                                 l1951 1E62  
                                                 l1943 D39E  
                                                 l1935 D37E  
                                                 l1927 D362  
                                                 l1919 D342  
                                                 l3368 0F68  
                                                 l3288 CFD6  
                                                 l2584 B742  
                                                 l2656 B4FC  
                                                 l2648 B440  
                                                 l2592 B0EC  
                                                 l1952 1E66  
                                                 l1936 D382  
                                                 l1928 D366  
                                                 l1880 05FA  
                                                 l1872 05DA  
                                                 l1960 E14E  
                                                 l3385 247A  
                                                 l3289 CFD8  
                                                 l3297 C162  
                                                 l2681 B6DC  
                                                 l2673 B5B0  
                                                 l2665 B554  
                                                 l2593 B0F6  
                                                 l2577 B02E  
                                                 l2569 AFA8  
                                                 l1953 1E6A  
                                                 l1937 D386  
                                                 l1929 D36A  
                                                 l1881 05FE  
                                                 l1873 05DE  
                                                 l2770 089C  
                                                 l3386 2474  
                                                 l3298 C15E  
                                                 l2690 B698  
                                                 l2682 B63E  
                                                 l2674 B5D8  
                                                 l2666 B568  
                                                 l2658 B51C  
                                                 l2586 B10E  
                                                 l2594 B104  
                                                 l2578 B03E  
                                                 l1954 1E6E  
                                                 l1938 D38A  
                                                 l1882 0602  
                                                 l1874 05E2  
                                                 l1970 E1DC  
                                                 l1962 E15C  
                                                 l3379 2794  
                                                 l2499 1936  
                                                 l3299 C172  
                                                 l2691 B6C0  
                                                 l2683 B66A  
                                                 l2587 B0B4  
                                                 l1947 1E76  
                                                 l1955 1E72  
                                                 l1939 D38E  
                                                 l1883 0606  
                                                 l1875 05E6  
                                                 l1971 E1E0  
                                                 l2780 0E66  
                                                 l2676 B5E2  
                                                 l2668 B576  
                                                 l2596 B136  
                                                 l2588 B0D6  
                                                 l1948 1E5A  
                                                 l1884 060A  
                                                 l1876 05EA  
                                                 l1980 E204  
                                                 l1972 E1E4  
                                                 l1964 E194  
                                                 l2773 08DC  
                                                 l2693 B6CA  
                                                 l2589 B0E4  
                                                 l1893 D3A2  
                                                 l1869 0622  
                                                 l1885 060E  
                                                 l1877 05EE  
                                                 l1981 E208  
                                                 l1973 E1E8  
                                                 l2774 08EA  
                                                 l2766 0862  
                                                 l2782 0E84  
                                                 l2686 B678  
                                                 l2678 B610  
                                                 l2598 B174  
                                                 l1894 D272  
                                                 l1886 0612  
                                                 l1878 05F2  
                                                 l1966 E224  
                                                 l1982 E20C  
                                                 l1974 E1EC  
                                                 l2775 0900  
                                                 l2767 087A  
                                                 l2783 0E78  
                                                 l2687 B682  
                                                 l1991 28B2  
                                                 l1887 0616  
                                                 l1879 05F6  
                                                 l1983 E210  
                                                 l1975 E1F0  
                                                 l1967 E1D0  
                                                 l2688 B690  
                                                 l1896 D276  
                                                 l1888 061A  
                                                 l1984 E214  
                                                 l1976 E1F4  
                                                 l1968 E1D4  
                                                 l2769 08A8  
                                                 l1897 D27A  
                                                 l1889 061E  
                                                 l1985 E218  
                                                 l1977 E1F8  
                                                 l1969 E1D8  
                                                 l2786 0EAC  
                                                 l1898 D27E  
                                                 l1986 E21C  
                                                 l1978 E1FC  
                                                 l2787 0EBA  
                                                 l2779 0E52  
                                                 l1899 D290  
                                                 l1987 E220  
                                                 l1979 E200  
                                                 l2788 0ED0  
                                                 l1988 E2B0  
                                                 l1997 0DD6  
                                                 l2993 0314  
                                                 l2985 0284  
                                                 l2994 0308  
                                                 l2987 02F0  
                                                 l2996 0330  
                                                 l2988 02E0  
                  __end_of__encoder_next_arc_step_size 1970  
                          __encoder_next_arc_step_size 1900  
                        __size_of_encoder_statemachine 08D6  
                                ??i2_SYSTEM_Initialize 002E  
                                                 STR_1 A21C  
                                                 STR_2 A225  
                                                 STR_3 A21C  
                                                 STR_4 A225  
                                                 STR_5 A21C  
                                                 STR_6 A22C  
                                                 STR_7 A213  
                                                 STR_8 A213  
                                                 STR_9 A213  
                                ??_USBCtrlTrfTxService 002E  
                                                 _UCFG 000F39  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00C2  
                                       _ResetSenseData 1B0E  
                                                 _enc1 0021  
                                                 _enc2 0020  
               USBStdFeatureReqHandler@current_ep_data 0048  
                                                 _pDst 0167  
                                                 _main E990  
                              _bit_pattern_verticalbar A1DD  
                                                 _itoa 235E  
                             ??i2_USBTransferOnePacket 0032  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AE80  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 2746  
                                                 btemp 005B  
                                                 _utoa 0EE2  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00A8  
                         ?i2_ExternalFlash_MediaDetect 002E  
                            _ExternalFlash_MediaDetect 2AB2  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 2A84  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 2806  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 002E  
                                     ?_MSDWriteHandler 002E  
                        ??__encoder_next_arc_step_size 0062  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 05D4  
                               ??_USBCtrlTrfOutHandler 0030  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0045  
                                         _USBOutHandle 015F  
                        __size_of__display_padded_itoa 00E2  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 002E  
                                       ?_USBDeviceInit 002E  
                                    __flash_get_status 26DE  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 0912  
                                        __CFG_PLLDIV$2 000000  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l20015 0C78  
                                                l20433 2782  
                                                l21171 E888  
                                                l21351 1DB6  
                                                l21355 1DD4  
                                                l20663 F2F2  
                                                l21199 E8EA  
                                                l20807 F5DE  
                                                l20497 D50A  
                                                l20593 259A  
                                                l20771 2290  
                                                l22525 EA9E  
                                                l23351 D4D4  
                                                l20777 229C  
                                                l23361 1950  
                                                l23363 1966  
                                                l18021 DCDA  
                                                l23357 18E0  
                                                l23349 D3BC  
                                                l23359 18F6  
                                                l18017 DCA0  
                                                l21953 A3BA  
                                         spi_tx@length 0062  
                                                l21967 A408  
                                                l19123 C7A0  
                                                l18273 BE8A  
                                                l17643 FD3C  
                                                l19317 CFCA  
                                                l19077 E224  
                                                l17751 1BE4  
                                                l19095 28B2  
                                                l17829 DF28  
                                                l17917 CD0E  
                                                l19805 0DFA  
                                                l19719 D836  
                                        ___fltol@sign1 0068  
                                                l19905 DAE2  
                                                l19825 D96C  
                                      __end_of___aldiv 0912  
                                                l19659 1740  
                                                l18971 E14E  
                                                l19917 DB08  
                                                l19853 D9FC  
                                                l19757 1974  
                                                l19927 DB30  
                                                l19839 D9B4  
                                   ?__flash_get_status 006C  
                                                l18985 E194  
                                                l18977 E15C  
                                                l19929 DB38  
                                                l19699 D78C  
                                                l19891 DA9A  
                                                l19867 DA44  
                                                l19787 0DA6  
                                       ??_display_init 0081  
                                                l19879 DA6A  
                                                l19889 DA92  
                                      __end_of___almod 0EE2  
                                      __end_of___fladd C77E  
                                                ?_main 002E  
                                      __end_of___fldiv CFF4  
                                                ?_itoa 0070  
                                                STR_10 A213  
                                                STR_11 A213  
                                                STR_12 A213  
                                                STR_13 A213  
                                                STR_14 A213  
                                                STR_15 A1FE  
                                                STR_16 A20A  
                                                STR_17 A232  
                                                STR_18 A1F1  
                                      __end_of___flmul C442  
                                     ??__display_clear 0060  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 0342  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u20100 C548  
                                                u20110 C558  
                                                u20120 C55A  
                                                u21110 13EC  
                                                u20310 C6E8  
                                                u20150 C59C  
                                                u22000 B2C2  
                               __end_of_USBDeviceTasks ED5C  
                                                u21220 E94E  
                                                u20360 C73E  
                                                u20280 C6D0  
                                                u20470 D506  
                                                u21190 E8AC  
                                                u22240 B474  
                                                u20490 D53A  
                                                u20660 D6DE  
                                                u22260 B4B6  
                                                u22261 B4B4  
                                                u21560 0FAE  
                                                u22600 A3EA  
                                                u21800 B03A  
                                                u21720 AF76  
                                                u21640 AEB0  
                                                u21810 B068  
                                                u21730 AFA4  
                                                u21650 AEDE  
                            ?_USBCtrlEPServiceComplete 002E  
                                                u21580 0FC2  
                                                u20780 22D0  
                                                u17200 FD94  
                                                u21760 AFD8  
                                                u21680 AF14  
                                                u21770 B006  
                                                u21690 AF42  
                                                u17220 FDA6  
                                                u21950 B1BC  
                                                u17240 FDB6  
                                                u18200 BFF0  
                                                u18120 BEBA  
                                                u19000 C17E  
                                                u21960 B224  
                                                u17250 26C2  
                                                u17170 FD7E  
                                                u19010 C2F4  
                                                u17260 1C06  
                                                u19100 C3F8  
                                                u18230 C06C  
                                                u21990 B258  
                                                u19015 C2EA  
                                                u17520 CC98  
                                                u17600 1A62  
                                                u23817 21BA  
                                                u17338 DE20  
                                                u17530 CC9A  
                                                u17418 CAC4  
                                                u18138 BEDC  
                                                u19130 02A2  
                                                u17610 1A70  
                                                u17267 1BFC  
                                                u17339 DE34  
                                                u17419 CAD8  
                                                u18139 BEF0  
                                                u23827 21CE  
                                                u19060 C384  
                                                u17620 1A7E  
                                                u23837 20CA  
                                                u17285 DD9E  
                                                u18190 BFDE  
                                                u19310 F01C  
                                                u17630 1A8C  
                                                u23847 20DA  
                                                u19135 0298  
                                                u18088 BDB4  
                                                u17640 1A98  
                                                u17608 1A66  
                                                u23857 20E4  
                                                u18089 BDC8  
                                                u18521 E166  
                                                u18098 BDE8  
                                                u17810 23BE  
                                                u19170 031A  
                                                u19250 EBD0  
                                                u19090 C3DA  
                                                u17618 1A74  
                                                u19410 178E  
                                                u16915 17BC  
                                                u17395 CA8C  
                                                u18099 BDFC  
                                      __end_of___lwdiv 2006  
                                                u17740 DC30  
                                                u17548 CCA6  
                                                u19324 F034  
                                                u17628 1A82  
                                                u17549 CCBA  
                                                u19325 F02E  
                                                u17478 CB90  
                                                u19334 F06E  
                                                u19510 D84A  
                                                u17646 1A9A  
                                                u17638 1A90  
                                                u17590 1A54  
                                                u17479 CBA4  
                                                u19335 F068  
                                                u18295 16D6  
                                                u19520 D8A4  
                                                u18385 1D76  
                                                u18650 E78C  
                                                u19610 0DDC  
                         __flash_write_to_buffer@start 0073  
                                                u17780 1FD6  
                                                u18900 CF8A  
                                                u19700 DA26  
                                                u19381 21A8  
                                                u16990 F37C  
                                                u19374 F0CC  
                                                u19358 F096  
                                                u19470 D7A0  
                                                u18910 CFAE  
                                                u17598 1A58  
                                                u19375 F0C6  
                                                u19359 F0AC  
                                                u19480 D816  
                                                u19800 DB30  
                                                u19720 DA62  
                                                u19640 0E30  
                                                u19298 EFEA  
                                                u19299 EFFE  
                                                u19820 DB62  
                                                u19740 DA92  
                                                u19660 D996  
                                                u18870 CF34  
                                                u19920 08AC  
                          __size_of_motor_change_speed 000A  
                                                u19760 DAC4  
                                                u19680 D9DE  
                                                u19860 0CA8  
                                                u19780 DB00  
                                      __end_of___lwmod 23E6  
                                                i2l300 1116  
                                                i2l220 12FE  
                                                u19980 0E88  
                                                u19885 EED4  
                                                i2l214 0A24  
                                                i2l222 1314  
                                                i2l231 FE44  
                                                i2l232 FDEE  
                                                i2l160 EC68  
                                                i2l321 13CC  
                                                i2l145 EDA2  
                                                i2l250 07C4  
                                                i2l226 14D2  
                                                i2l322 13C6  
                                                i2l162 EC8E  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 2426  
                                                i2l315 2630  
                                                i2l147 EDCA  
                                                i2l155 EC2E  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 0B94  
                                                i2l260 F7F8  
                                                i2l332 1C9E  
                                                i2l180 2504  
                                                i2l236 FE6E  
                                                i2l308 2424  
                                                i2l316 262E  
                                                i2l172 ED18  
                                                i2l164 ECA2  
                                                i2l156 EC3E  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 083C  
                                                i2l245 0792  
                                                i2l341 0B98  
                                                i2l261 F7D6  
                                                i2l149 EE02  
                                                i2l165 ECAE  
                                                i2l157 EC46  
                                                i2l254 0804  
                                                i2l342 0C12  
                                                i2l334 1CE8  
                                                i2l174 ED38  
                                                i2l166 ECD6  
                                                i2l247 079C  
                                                i2l343 0BD8  
                                                i2l263 F86C  
                                                i2l167 ECE0  
                                                i2l159 EC5C  
                                                i2l264 F852  
                                                i2l184 FBE2  
                                                i2l192 FB24  
                                                i2l432 074C  
                                                i2l280 F220  
                                                i2l272 0468  
                                                i2l360 0520  
                                                i2l176 ED54  
                                                i2l249 07FC  
                                                i2l345 0BF8  
                                                i2l425 06EE  
                                                i2l281 F11C  
                                                i2l361 0532  
                                                i2l169 ECF2  
                                                i2l186 FC0C  
                                                i2l426 06C0  
                                                i2l274 04DA  
                                                i2l362 0538  
                                                i2l179 24F6  
                                                i2l283 F12E  
                                                i2l355 0590  
                                                i2l188 FC8A  
                                                i2l436 070C  
                                                i2l428 06FE  
                                                i2l372 D014  
                                                i2l284 F1B8  
                                                i2l364 053E  
                                                i2l356 050C  
                                                i2l437 0722  
                                                i2l429 06DC  
                                                i2l381 D16C  
                                                i2l373 D01A  
                                                i2l293 1152  
                                                i2l365 055A  
                                                i2l534 F7A2  
                                                i2l438 072C  
                                                i2l550 0B1C  
                                                i2l286 F1BE  
                                                i2l294 10E8  
                                                i2l366 0572  
                                                i2l358 0514  
                                                i2l535 F70E  
                                                i2l439 0742  
                                                i2l391 D1F8  
                                                i2l383 D136  
                                                i2l375 D082  
                                                i2l287 F214  
                                                i2l359 051A  
                                                i2l384 D152  
                                                i2l537 F79A  
                                                i2l545 0B4E  
                                                i2l393 D24A  
                                                i2l377 D0CA  
                                                i2l289 F21A  
                                                i2l297 1168  
                                                i2l562 0B22  
                                                i2l546 0AB4  
                                                i2l386 D1B8  
                                                i2l298 10F8  
                                                i2l387 D1C4  
                                                i2l379 D0EC  
                                                i2l299 10FC  
                                                i2l820 1626  
                                                i2l388 D23E  
                                                i2l901 2032  
                                                i2l821 162E  
                                                i2l822 1636  
                                                i2l816 1658  
                                                i2l824 1640  
                                                i2l826 164A  
                                                i2l780 1F26  
                                                i2l783 1F5C  
                                                _UADDR 000F38  
                                                i2l892 2044  
                                                i2l893 200A  
                                                i2l895 2014  
                                                i2l899 2026  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 002E  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                  ___lmul@multiplicand 0064  
                                     __end_of_MSDTasks D73E  
                                           i2memcpy@d1 002E  
                                       __CFG_FCMEN$OFF 000000  
                                   _USBCheckMSDRequest 0AA0  
                                           i2memcpy@s1 0030  
                      __end_of_USBCtrlEPAllowDataStage 1346  
            motor_divide_jump@target_position_in_steps 00BB  
                                                _sd000 A1ED  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 002E  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 1F5E  
                __i2c_display_send_init_sequence@F6906 01BE  
                                         _gblCBWLength 016E  
                                           i2memset@p1 002E  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                i2USBStallEndpoint@dir 002E  
                               __end_of_ResetSenseData 1B70  
                              __end_of__backlight_init 2ADA  
                             __parse_command_long@data 00AA  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long F69C  
                                                tablat 000FF5  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 002E  
                                      _MSDCommandState 00D1  
                          ??_ExternalFlash_SectorWrite 0069  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 002E  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 005C  
                                                ttemp6 005F  
                                                ttemp7 0063  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 005C  
                             __end_ofi2_ResetSenseData 1BD2  
                motor_go_to_steps_position@overhead_cw 00AA  
                                     __end_ofi2_memcpy 1D4A  
                                     __end_ofi2_memset 288C  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                       _MSDReadHandler DD74  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DC  
                        ??i2_ExternalFlash_MediaDetect 0030  
                                      __initialization 117C  
                            __end_of__flash_get_status 2712  
              __end_ofi2_ExternalFlash_MediaInitialize 2A28  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 29B6  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0030  
                     ?i2_ExternalFlash_MediaInitialize 002E  
                      i2_ExternalFlash_MediaInitialize 2A0E  
                        _ExternalFlash_MediaInitialize 2994  
                                          _system_init FEC4  
                                         __end_of_main EAD4  
                                         __end_of_itoa 23A2  
               __end_of__ic2_display_set_ddram_address 2950  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 292C  
                      __end_of_i2c_display_write_fixed 1FB2  
                                         __end_of_utoa 0F8C  
                             __parse_command_short@cmd 00BA  
                                     __end_of_i2c_init 2A0E  
                           __display_signed_itoa@value 008F  
                           __size_of_motor_divide_jump 0094  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 0039  
                    __fill_buffer_get_status@outBuffer 006B  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 0039  
                              _USBCheckMSDRequest$2535 003B  
                            __size_of_USBCtrlEPService 0096  
                 __end_of_motor_divide_jump_to_nearest E6F8  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest E5AA  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00CA  
                                               ??_itoa 0076  
                               _motor_schedule_command 1034  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 002E  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 2ADE  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 2ADA  
                                          ?_USBSuspend 002E  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 013B  
                                   _motor_items_in_cue 2ABC  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 2778  
                               __flash_write_to_buffer 205A  
               __end_of__ic2_display_set_cgram_address 28E0  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 28B6  
                                               _CCPR1L 000FBB  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 002E  
                                           __i2c_start 2ACE  
                               SYSTEM_Initialize@state 0060  
                                           __i2c_write 21EE  
                                  ?_motor_items_in_cue 002E  
                                               i2l1049 2552  
                                               i2l2402 BC7A  
                                               i2l2403 BBD0  
                                               i2l2405 BCE8  
                                               i2l2530 F4EC  
                                               i2l2522 F4FC  
                                               i2l2531 F4F6  
                                               i2l2532 F57A  
                                               i2l2540 F56A  
                                               i2l2541 F574  
                                               i2l2525 F4AC  
                                               i2l2391 BADC  
                                               i2l2535 F52A  
                                               i2l2384 B78E  
                                               i2l2528 F4D2  
                                               i2l2394 B926  
                                               i2l2386 BD24  
                                               i2l2538 F550  
                                               i2l2395 B97A  
                                               i2l2387 B790  
                                               i2l3380 286A  
                                               i2l2396 BA9C  
                                               i2l2388 B7FA  
                                               i2l3373 1D38  
                                               i2l2389 B834  
                                               i2l3374 1D00  
                                               i2l2399 BB14  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l3379 287A  
                      ??_APP_DeviceCustomHIDInitialize 003A  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 1EB0  
                                     __end_of__get_fbr D4E4  
                                     __end_of__get_mbr 06A4  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00A2  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler DF58  
                                    __spi_init@details 0060  
                                     __end_of___xxtofl EC18  
                             i2USBTransferOnePacket@ep 0036  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0036  
                               ?_display_get_character 0060  
                                     ?_display_prepare 002E  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 002E  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     __end_of_fat_init 2A74  
                                    _shortPacketStatus 002A  
                                       __CFG_XINST$OFF 000000  
                                  _motor_current_speed 00CA  
                                      USBDeviceTasks@i 004C  
                                          i2memcpy@tmp 0038  
                                         _CCPTMRS0bits 000F52  
                         __size_of_os_read_temperature 0002  
                                    _motor_process_cue 181C  
                          USBStdFeatureReqHandler@pUEP 0046  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 002F  
                                 __size_of_encoder_run 0110  
                         __end_of__flash_set_page_size 19DE  
                                      ??_USBDeviceInit 0068  
                                               ___lmul 1EB0  
                                               _gblCBW 0100  
                                            ??___aldiv 0068  
                                            ??___almod 0068  
                                            ??___fladd 0068  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0076  
                                       __CFG_STVREN$ON 000000  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
          i2SYSTEM_Initialize@pll_startup_counter_3114 0030  
            SYSTEM_Initialize@pll_startup_counter_3114 0063  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 002E  
                                           _SoftDetach 016D  
                                            ??___lwmod 0064  
                                               _config 0179  
                                               _buffer 0800  
                                    _USBEnableEndpoint 24E6  
                      __size_of_USBStdGetStatusHandler 00A0  
                                 ??_motor_items_in_cue 0060  
                                               _memcpy 1BD2  
                                               _memset 2778  
                                               clear_0 11C4  
                                               clear_1 11D6  
                                               clear_2 11E2  
                                               clear_3 11EE  
                                               clear_4 11FA  
                                               clear_5 1206  
                            _ExternalFlash_SectorWrite 2ADE  
                                    api_parse@inBuffer 00BB  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 292C  
                                               _spi_tx 1DFE  
                                   ?_USBEnableEndpoint 0036  
                                               _tx_buf 01C7  
                                i2c_display_init@F6909 01B5  
                                               _strlen 246A  
                              _motor_current_stepcount 0016  
                           __parse_command_long@length 00B0  
             i2c_display_program_custom_character@cntr 0080  
                                     __end_of_tmr0_isr 255C  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 002E  
                               __size_of__flash_wakeup 0052  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006B  
                        __size_of__display_signed_itoa 0044  
                           __end_of_motor_steps_lookup 982F  
                 __size_of__motor_get_speed_in_degrees 013A  
                       __parse_command_long@out_buffer 00AC  
                        __size_of__parse_command_short 0164  
                         ?__divide_jump_size_increment 002E  
                  __size_of_motor_go_to_steps_position 02E4  
                                         __mediumconst 9092  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 246A  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0169  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 0037  
                                     _i2c_display_init 219E  
                                        spi_tx_rx@data 0064  
                                        spi_tx_tx@data 0064  
                                   __size_of__adc_init 0002  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 19DE  
               motor_go_to_steps_position@overhead_ccw 00AE  
                                     ?__backlight_init 002E  
                    i2ExternalFlash_MediaDetect@config 002E  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 0029  
                           ??_APP_DeviceCustomHIDTasks 00C6  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 1DA4  
                                         ___xxtofl@val 0060  
                                   ?__system_pin_setup 002E  
                                           __accesstop 0060  
                              __end_of__initialization 120C  
                       __end_of_motor_speed_from_index 2A3E  
                    MSDCheckForErrorCases@MSDErrorCase 0070  
                                      ?_MSDReadHandler 002E  
                                 __end_of_display_init 26AA  
                                   ?_SYSTEM_Initialize 002E  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0040  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                      ExternalFlash_SectorWrite@config 0060  
                      ExternalFlash_SectorWrite@buffer 0066  
                            __end_of_motor_process_cue 1890  
                          __end_of__parse_command_long 24E6  
                                   __size_of__get_data 002A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 015B  
                                       __pcstackCOMRAM 002E  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 2522  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A1F1  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 002E  
                                         __pidataBANK1 263C  
                                         __pidataBANK2 20FE  
                                  ??_SYSTEM_Initialize 0060  
                 ExternalFlash_SectorWrite@sector_addr 0062  
                      __end_of_bit_pattern_verticalbar A1E5  
                     __size_of_USBCtrlEPAllowDataStage 0098  
                                      _active_protocol 0196  
                                  i2USBStallEndpoint@p 0034  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 0C1C  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 011F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler F362  
                       ?_ExternalFlash_MediaInitialize 0060  
                               i2_USBTransferOnePacket FBCC  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 214E  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 002E  
                                            ?i2_memset 002E  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C0F0  
               __size_of_MSDProcessCommandMediaPresent 03CA  
                        _MSDProcessCommandMediaPresent BD26  
                            __end_of__system_pin_setup 1A48  
                                        __get_data@idx 0060  
                             ??_USBCtrlTrfSetupHandler 004B  
                              _USBTicksSinceSuspendEnd 0171  
                motor_nonzero_steps_from_degrees@steps 0093  
                                     ?_USBDeviceAttach 002E  
                            __end_of_SYSTEM_Initialize 1DFE  
                                    __end_of__i2c_send 2AA8  
                               _USBStdGetStatusHandler 10DC  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 2ACE  
                                          ?__i2c_start 002E  
                      ?__encoder_next_divide_step_size 002E  
                     ??__encoder_next_divide_step_size 0060  
                                          ?__i2c_write 0065  
                                           __pbssBANK0 00CA  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint F8B6  
                                           _gblNumBLKS 0143  
                                            ?_i2c_init 002E  
                                     _mediaInformation 018F  
                       __size_of_fat_get_format_status 00AE  
                        __end_of_fat_get_format_status 0E34  
                                        __flash_wakeup 20AC  
                             __fill_buffer_get_display 0C1C  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 0010  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete FEC4  
                __end_of_APP_DeviceCustomHIDInitialize 2746  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 2712  
                          MSDTransferTerminated@handle 0039  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 002E  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00A0  
                         __end_of_encoder_statemachine B756  
                                           _fat_format D962  
                                 ??_flash_sector_write 0083  
                       __flash_write_to_buffer@command 007A  
                                    __end_of__adc_init 2AE8  
                         __size_of__flash_partial_read 007A  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run DB78  
                                       ___lmul@product 0068  
                                           _device_dsc A1BB  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     _USBCtrlEPService 1346  
                                           _ep_data_in 0158  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService F8B6  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa D73E  
                                   _USBCheckStdRequest 04FC  
                                   __size_of_motor_isr 05D0  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 005E  
                                              i2l11129 079C  
                                              i2l11081 2032  
                                              i2l11077 2014  
                                              i2l11505 286A  
                                              i2l15001 EDFA  
                                              i2l21305 ECEA  
                                              i2l14115 1D00  
                                              i2l10859 06D6  
                                              i2l16207 BCE8  
                                              i2l16127 B7FA  
                                              i2l23371 1670  
                                              i2l23373 16A4  
                                              i2l18101 0460  
                                              i2l14973 ED9A  
                              ??_MSDCheckForErrorCases 006E  
                                            ?___xxtofl 0060  
                          __end_ofi2_SYSTEM_Initialize 205A  
                                           ??i2_memcpy 0034  
                                           ??i2_memset 0034  
                                           _flash_init 2A84  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 0844  
                                    __end_of__get_data 28B6  
                                  _USBStdSetCfgHandler 0420  
                                    __end_of__get_root E2B4  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 002E  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 0184  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint FBCC  
                       ??_motor_divide_jump_to_nearest 00BA  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 002E  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 1970  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position CA62  
                           _motor_go_to_steps_position C77E  
             __end_of_motor_nonzero_steps_from_degrees 228A  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 223E  
                           __end_of_APP_DeviceMSDTasks 2A64  
                                              _UIRbits 000F62  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                __end_of__flash_compare_page_to_buffer 1726  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 16AA  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                                         ??_USBMSDInit 0039  
                                       ?__flash_wakeup 002E  
             __encoder_next_arc_step_size@old_stepsize 0060  
                                    __end_of_api_parse F362  
                                    ?i2_ResetSenseData 002E  
                                    _MSDProcessCommand EFDA  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0074  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 002E  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 002E  
                                 ?_USBStdSetCfgHandler 002E  
                                    __end_of__spi_init 2594  
                          __size_of_USBCheckHIDRequest 00D0  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0038  
                                   ??i2_ResetSenseData 002E  
                                   __display_itoa@text 0098  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 002E  
                              __end_of_MSDErrorHandler F47E  
                           _MSDTransferTerminated$2623 003B  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 002E  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                                 ??_USBCheckStdRequest 004B  
                                              ___aldiv 0844  
                                              ___almod 0E34  
                                            ?_spi_init 002E  
                                              ___fladd C442  
                        __size_of_USBCtrlTrfOutHandler 005E  
                                   __display_itoa_long F58E  
                i2ExternalFlash_MediaInitialize@config 002E  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv CD3A  
                                     _ToSendDataBuffer 0300  
                                      __size_of___lmul 0058  
                                              ___flmul C0F0  
                                              ___fltol 0264  
                                     ??_USBDeviceTasks 004C  
                                              ___lwdiv 1FB2  
                              ?_motor_schedule_command 0097  
                                    ??_USBStallHandler 002E  
                                              ___lwmod 23A2  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 009B  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 2AB2  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E0  
                                              __pcinit 117C  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02D8  
                            __end_of_configDescriptor1 A0FE  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                                              __ptext0 E990  
                                              __ptext1 FEC4  
                                              __ptext2 29D6  
                                              __ptext3 29F2  
                                              __ptext4 2A84  
                                              __ptext5 242A  
                                              __ptext6 255C  
                                              __ptext7 1970  
                                              __ptext8 2A64  
                                              __ptext9 0D86  
                                       ?__display_itoa 0095  
                                              _inPipes 000A  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0172  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00BF  
                                 __motor_run@direction 006A  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 2860  
                                         ??_USBSuspend 0045  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit F7AA  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 2A74  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit ED5C  
                                     i2USBDeviceInit@i 0036  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 002E  
                     ??__ic2_display_set_ddram_address 006A  
                                  _os_read_temperature 2AE8  
                                           ??_fat_init 008F  
                   __size_of_ExternalFlash_SectorWrite 0004  
                                ?__flash_set_page_size 002E  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              main@tmp 01CF  
                                __size_of_display_init 0036  
                              __size_of__flash_is_busy 0022  
                                 end_of_initialization 120C  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 1F08  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 002E  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A1DD  
                                              memcpy@d 0067  
                                              memcpy@n 0064  
                                              memcpy@s 0069  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 001C  
                            __end_of_MSDProcessCommand F10C  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 2908  
                                      _USB1msTickCount 014B  
                                 ??__display_itoa_long 00B4  
                             __flash_partial_read@data 0079  
                             ?_USBStdFeatureReqHandler 002E  
                             __flash_partial_read@page 0073  
                                            i2u1273_40 1D22  
                                            i2u1273_47 1D18  
                                            i2u2146_40 ED58  
                                            i2u1393_40 EDBE  
                                            i2u1802_40 D1DE  
                                            i2u1570_40 B916  
                                    __end_of_motor_isr BD26  
                                            i2u1396_40 EE5E  
                                            i2u1565_41 B77E  
                                            i2u1575_40 BAF0  
                                            i2u1576_40 BB10  
                                            i2u1568_41 B84E  
                                            i2u1692_48 F732  
                                            i2u1692_49 F746  
                                ??_USBStdSetCfgHandler 0045  
                                            i2u1694_48 F758  
                                            i2u1694_49 F76E  
                                            i2u1784_40 0494  
                                            i2u1696_44 F78C  
                                            i2u1696_45 F786  
                      __parse_command_long@out_idx_ptr 00AE  
                                           ??_tmr0_isr 002E  
                                 ?_os_read_temperature 002E  
                      ?__ic2_display_set_cgram_address 002E  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 27D8  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 12AE  
                                    __end_of_spi_tx_rx 12AE  
                       __end_of_motor_schedule_command 10DC  
                                    __end_of_spi_tx_tx 1594  
                             __end_of_i2c_display_init 21EE  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
                 __end_of_ExternalFlash_SectorSizeRead 2A9E  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 2A92  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc2 000FDE  
                                          ?_fat_format 002E  
                     __size_of__fill_buffer_get_status 01C4  
                                              utoa@buf 0067  
                                           _motor_init 29D6  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 016A  
                             _USBCtrlEPServiceComplete FDCA  
                                              utoa@val 0069  
                                            _MSD_State 00D2  
                                           _motor_stop 22D4  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BE  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0175  
                           _USBStatusStageEnabledFlag2 0174  
                                       _bit_pattern_ae A1CD  
                                   USBEnableEndpoint@p 0037  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                       __end_of__flash_write_to_buffer 20AC  
                                     __CFG_DSBOREN$OFF 000000  
                                         _display_init 2674  
motor_divide_jump_to_nearest@nearest_position_in_steps 00BA  
                                          ___fladd@grs 0073  
                                 spi_tx_rx@data_length 0066  
                                          ?_flash_init 002E  
                                     __CFG_CPUDIV$OSC1 000000  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00BE  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                                   _ReceivedDataBuffer 0238  
                                   _BothEP0OutUOWNsSet 0176  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0033  
                              _i2c_display_write_fixed 1F5E  
                           motor_arc_move@arc_in_steps 009F  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 002E  
                                 _encoder_statemachine AE80  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                              __size_of__display_clear 004A  
                                            _USTATcopy 002C  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 1900  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 1890  
                                          ___flmul@grs 007C  
                         __end_of_USBTransferOnePacket FAC6  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                  __end_ofi2_ExternalFlash_MediaDetect 2AE6  
                          i2_ExternalFlash_MediaDetect 2AE2  
                    __parse_jump_steps@number_of_steps 00A6  
                         __end_of__display_signed_itoa 235E  
                     __end_of_motor_steps_from_degrees 09DC  
                  __end_of__motor_get_speed_in_degrees EFDA  
                          __motor_get_speed_in_degrees EEA0  
                               i2c_display_cursor@line 006E  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 002E  
                         __end_of__parse_command_short E5AA  
                       ?__flash_compare_page_to_buffer 0073  
                                ??_os_read_temperature 0060  
                        __fill_buffer_get_display@cntr 006C  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                     ?_MSDErrorHandler 002E  
                               _USBCtrlTrfSetupHandler 1594  
                                 __display_padded_itoa 00A2  
                               __end_of_bit_pattern_ae A1D5  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 002E  
                             __size_of_display_prepare 0C48  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit E990  
                __end_of_USBIncrement1msInternalTimers 29D6  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 29B6  
                                       __end_of___lmul 1F08  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                          __size_of_motor_items_in_cue 000A  
                                    __size_of_MSDTasks 025A  
                             __end_of_USBStallEndpoint F9C0  
                                            i2memcpy@d 0034  
                                            i2memcpy@n 0032  
                              __end_ofi2_USBDeviceInit EEA0  
                                            i2memcpy@s 0036  
                            ??_APP_DeviceMSDInitialize 003C  
                                            i2memset@c 0030  
                                            i2memset@n 0032  
                                            i2memset@p 0034  
                                       __end_of_memcpy 1C32  
                                      _MSDRetryAttempt 016F  
                                 i2USBStallEndpoint@ep 0033  
                                       __end_of_memset 27A8  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0177  
                                       __end_of_spi_tx 1E58  
                                       __end_of_strlen 24A8  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 117C  
                              ?_USBStdGetStatusHandler 002E  
                             i2SYSTEM_Initialize@state 0032  
                        USBCtrlTrfRxService@byteToRead 002F  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 0071  
                                  __end_of_api_prepare 0420  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 0039  
                                    __size_ofi2_memset 002C  
                                      _USBMSDOutHandle 00CE  
                         __end_of_USBConfigureEndpoint 1504  
                                ?_encoder_statemachine 002E  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler D270  
                                  __flash_partial_read 17A2  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 00D0  
                    __end_of_USBCtrlEPAllowStatusStage 0AA0  
                         ?__encoder_next_arc_step_size 0060  
                             __end_of_USBCtrlEPService 13DC  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 01FC  
                                            __i2c_send 2A9E  
                                            __i2c_stop 2AC6  
                        ?__encoder_next_setup_stepsize 0060  
              _ExternalFlash_MediaInitialize$intlevel0 299A  
                                    __size_of_i2c_init 001C  
                            ??_USBCtrlEPAllowDataStage 002F  
                                _motor_cue_write_index 0022  
                      ??__fill_buffer_get_mode_details 0062  
                                       USBDeviceInit@i 0068  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                               _pBDTEntryEP0OutCurrent 001E  
                                          _DMACON1bits 000F88  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket FCCE  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                                  _USBStdGetDscHandler F10C  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 002E  
                                  __end_of_encoder_run F58E  
                                    __CFG_ADCSEL$BIT10 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                                          __pdataBANK1 0198  
                                          __pdataBANK2 0278  
                             motor_isr@steps_remaining 0042  
                                          ?_motor_stop 002E  
                            ?_APP_DeviceCustomHIDTasks 002E  
                                       _motor_arc_move 0184  
                                 __size_of_system_init 00F2  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 003E  
                                   __end_of__i2c_start 2AD6  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 223E  
                                             ??_strlen 0062  
                                            __adc_init 2AE6  
                                            ___fladd@a 0064  
                                            ___fladd@b 0060  
  motor_divide_jump_to_nearest@nearest_divide_position 00BE  
                               _USBActiveConfiguration 002D  
                       __end_of_USBStdGetStatusHandler 117C  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                          api_parse@receivedDataLength 00BD  
                                     api_parse@out_idx 00C4  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0001  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01CF  
                         __size_of_USBCtrlTrfInHandler 00BE  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 00FC  
                        __end_of_MSDCheckForErrorCases FDCA  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 013F  
                   __end_of_flash_command_pagesize_512 A1ED  
                           _flash_command_pagesize_512 A1E9  
                   __end_of_flash_command_pagesize_528 A1E9  
                           _flash_command_pagesize_528 A1E5  
                                       __flash_is_busy 2972  
                                 ?_USBStdGetDscHandler 002E  
         __end_of_i2c_display_program_custom_character 17A2  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 1726  
                                            __get_data 288C  
                                    _flash_sector_read 28E0  
                                    __size_of_fat_init 0010  
                          ?_motor_go_to_steps_position 009E  
                                            __get_root E11C  
                               flash_sector_write@data 0081  
                               flash_sector_write@page 007F  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 263C  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 2972  
                  __end_of__divide_jump_size_decrement 1C90  
                          __divide_jump_size_decrement 1C32  
                                           ?__i2c_send 002E  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 23E6  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0131  
                                           ?__i2c_stop 002E  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 26DE  
          __end_of__step_position_from_divide_position 00A2  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position FFB6  
                                   i2_USBStallEndpoint FAC6  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0023  
                                _fat_get_format_status 0D86  
            motor_go_to_steps_position@target_position 009E  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                                            _api_parse F238  
                                            __pintcode 9008  
                               __end_of_motor_arc_move 0264  
                              __fill_buffer_get_status DF58  
                                   _APP_DeviceMSDTasks 2A52  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0060  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 009E  
                                             ?___fldiv 006E  
                                            __ptext100 1216  
                                            __ptext101 0CD4  
                                            __ptext110 E2B4  
                                            __ptext102 2A92  
                                            __ptext111 0C1C  
                                            __ptext103 2A3E  
                                            __ptext120 DB78  
                                            __ptext112 2806  
                                            __ptext104 2994  
                                            __ptext121 F9C0  
                                            __ptext113 F238  
                                            __ptext105 2AB2  
                                            __ptext130 23E6  
                                            __ptext114 E446  
                                            __ptext106 0F8C  
                                            __ptext131 29B6  
                                            __ptext123 2522  
                                            __ptext115 C77E  
                                            __ptext107 0342  
                                            __ptext140 10DC  
                                            __ptext132 1346  
                                            __ptext124 F47E  
                                            __ptext116 24A8  
                                            __ptext108 DF58  
                                            __ptext141 F10C  
                                            __ptext133 1CEE  
                                            __ptext125 B756  
                                            __ptext117 E6F8  
                                            __ptext109 1BD2  
                                            __ptext150 F69C  
                                            __ptext142 CFF4  
                                            __ptext134 1594  
                                            __ptext126 EC18  
                                            __ptext118 1034  
                                            __ptext151 1B70  
                                            __ptext143 1624  
                                            __ptext135 FDCA  
                                            __ptext127 ED5C  
                                            __ptext119 2ABC  
                                            __ptext160 09DC  
                                            __ptext152 2A0E  
                                            __ptext144 2006  
                                            __ptext136 12AE  
                                            __ptext128 2604  
                                            __ptext161 0B5E  
                                            __ptext153 2AE2  
                                            __ptext145 0AA0  
                                            __ptext137 04FC  
                                            __ptext129 27A8  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext162 0774  
                                            __ptext154 2712  
                                            __ptext146 06A4  
                                            __ptext138 0420  
                                            __ptext163 0000  
                                            __ptext155 FBCC  
                                            __ptext147 1F08  
                                            __ptext139 2860  
                                            __ptext156 24E6  
                                            __ptext148 FAC6  
                                            __ptext157 1470  
                                            __ptext149 2A74  
                                            __ptext158 1C90  
                                            __ptext159 F7AA  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 255C  
                                             ?___lwmod 0060  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 002E  
                        __parse_jump_steps@out_idx_ptr 00A2  
                                            _idle_rate 0197  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 002E  
                                          _api_prepare 0342  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  ?_APP_DeviceMSDTasks 002E  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                           ?__adc_init 002E  
                                 _USBTransferOnePacket F9C0  
                    __size_of_motor_steps_from_degrees 00CA  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 231A  
                  __end_of__divide_jump_size_increment 2604  
                          __divide_jump_size_increment 25CC  
                                    ??_display_prepare 00BC  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short E446  
                  __fill_buffer_get_display@secondHalf 0066  
                               __end_of__flash_is_busy 2994  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                         __end_of_USBCtrlTrfOutHandler 1CEE  
                               ??_encoder_statemachine 00C4  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 2908  
                                ??_USBStdGetDscHandler 002E  
                                          _ep_data_out 0155  
                                     ___lwdiv@quotient 0065  
                                   _motor_change_speed 2AA8  
                                        _MSDWriteState 0025  
                         __size_of_USBCtrlTrfRxService 010C  
                        USBConfigureEndpoint@direction 002E  
                                       __display_clear 228A  
                                           ?__get_data 0060  
                                 ??i2_USBStallEndpoint 002F  
                                      _config_internal 0152  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001C  
                         __size_ofi2_SYSTEM_Initialize 0054  
                                      _config_external 014F  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D0  
                       __size_of_display_get_character 002E  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 2834  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 0774  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 002F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003E  
                                          _encoder_run F47E  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             i2u917_40 07EE  
                                             i2u917_47 07E4  
                                             i2u919_40 082E  
                                             i2u919_47 0824  
                                             i2u990_40 F184  
                                             i2u990_47 F17A  
                                             i2u887_40 0AFE  
                                             i2u991_40 F1B4  
                                             _RCONbits 000FD0  
                                             i2u991_47 F1AA  
                                             i2u993_40 F20A  
                                           ?_api_parse 00BB  
                                             i2u993_47 F200  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 002E  
                                             _MSDTasks D4E4  
                                            _motor_isr B756  
                           _USBDeferINDataStagePackets 0173  
                                         ??_fat_format 0084  
                                 _active_configuration 016B  
                                    ?_i2c_display_init 002E  
                              spi_tx_rx@command_length 0062  
                                   _bit_pattern_degree A1D5  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                __end_of__fill_buffer_get_mode_details E446  
               __size_of__fill_buffer_get_mode_details 0192  
                        __fill_buffer_get_mode_details E2B4  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 _USBConfigureEndpoint 1470  
                                         ??__motor_run 0066  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 1216  
                                            _spi_tx_tx 1504  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 00CC  
                                flash_sector_read@data 0089  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 2AB8  
                                    _SYS_InterruptHigh 9008  
                                ?__parse_command_short 002E  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0178  
                    __end_of_ExternalFlash_MediaDetect 2ABC  
                                             i2_memcpy 1CEE  
                                             i2_memset 2860  
                    MSDCheckForErrorCases@DeviceNoData 006F  
                                 spi_tx_tx@data_length 0066  
                                      ?__flash_is_busy 002E  
                     __end_of__fill_buffer_get_display 0CD4  
                                   ?_SYS_InterruptHigh 002E  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 22D4  
                                           spi_tx@data 0060  
                              __end_of_USBStallHandler 242A  
                      motor_schedule_command@direction 009D  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00B6  
                                    ___lmul@multiplier 0060  
                                            copy_data0 1190  
                                            copy_data1 11B0  
                         __size_of__system_timer0_init 002C  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                          ??_USBCtrlEPAllowStatusStage 002E  
                          __end_of_USBStdSetCfgHandler 04FC  
                                   __end_of_fat_format DB78  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 29F2  
                                  ??_SYS_InterruptHigh 004D  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0170  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run DD74  
                                   __end_of_device_dsc A1CD  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 002E  
                              ?_USBCtrlTrfSetupHandler 002E  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 002F  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 0066  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps E6F8  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 2A92  
                                       _TransferLength 001A  
                                           ?_motor_isr 002E  
                           __end_of_USBCheckMSDRequest 0B5E  
                                      api_parse@in_idx 00C5  
                                ?_USBConfigureEndpoint 002E  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 26AA  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 009E  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 1A48  
                                      _MSDWriteHandler CA62  
                                     __size_of___fldiv 02BA  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 0068  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 016C  
                            __end_of_SYS_InterruptHigh 908E  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                          ??__adc_init 0060  
                                             __get_fat 1E58  
                                             __get_fbr D270  
                                             __get_mbr 05D4  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00A4  
                   __end_of_ExternalFlash_CapacityRead 2A52  
                           _ExternalFlash_CapacityRead 2A3E  
                                             ___xxtofl EAD4  
                              ??_MSDTransferTerminated 003B  
                              __size_of_USBDeviceTasks 0144  
                                      ___lwdiv@divisor 0062  
                                             _fat_init 2A64  
                                      ?__display_clear 002E  
                                      ___lwdiv@counter 0064  
                           __size_of_flash_sector_read 0028  
                                             __ptext10 D962  
                                             __ptext11 214E  
                                             __ptext20 288C  
                                             __ptext12 205A  
                                             __ptext21 2908  
                                             __ptext13 1504  
                                             __ptext30 21EE  
                                             __ptext22 2594  
                                             __ptext14 1D4A  
                                             __ptext31 1A48  
                                             __ptext23 1F5E  
                                             __ptext15 16AA  
                                             __ptext40 181C  
                                             __ptext32 2AC6  
                                             __ptext24 2950  
                                             __ptext16 E11C  
                                             __ptext41 AE80  
                                             __ptext33 2ACE  
                                             __ptext25 292C  
                                             __ptext17 05D4  
                                             __ptext50 0184  
                                             __ptext42 22D4  
                                             __ptext34 2A9E  
                                             __ptext26 2674  
                                             __ptext18 D270  
                                             __ptext51 C0F0  
                                             __ptext43 223E  
                                             __ptext35 2834  
                                             __ptext27 1726  
                                             __ptext19 1E58  
                                             __ptext60 EAD4  
                                             __ptext52 1890  
                                             __ptext44 0912  
                                             __ptext36 19DE  
                                             __ptext28 28B6  
                                             __ptext61 1EB0  
                                             __ptext53 27D8  
                                             __ptext45 E5AA  
                                             __ptext37 2AD6  
                                             __ptext29 219E  
                                             __ptext70 0EE2  
                                             __ptext62 0264  
                                             __ptext54 1900  
                                             __ptext46 C442  
                                             __ptext38 2AE6  
                                             __ptext71 23A2  
                                             __ptext63 CD3A  
                                             __ptext55 25CC  
                                             __ptext47 13DC  
                                             __ptext39 2AE8  
                                             __ptext80 2A52  
                                             __ptext72 1FB2  
                                             __ptext64 231A  
                                             __ptext56 1C32  
                                             __ptext48 FFB6  
                                             __ptext81 D4E4  
                                             __ptext73 0E34  
                                             __ptext65 00A2  
                                             __ptext57 A238  
                                             __ptext49 2AA8  
                                             __ptext90 F362  
                                             __ptext82 EFDA  
                                             __ptext74 0844  
                                             __ptext66 F58E  
                                             __ptext58 2A28  
                                             __ptext91 F8B6  
                                             __ptext83 1AAC  
                                             __ptext75 228A  
                                             __ptext67 D73E  
                                             __ptext59 EEA0  
                                             __ptext92 1B0E  
                                             __ptext84 BD26  
                                             __ptext76 E846  
                                             __ptext68 246A  
                                             __ptext93 26AA  
                                             __ptext85 CA62  
                                             __ptext77 2778  
                                             __ptext69 235E  
                                             __ptext94 28E0  
                                             __ptext86 2ADA  
                                             __ptext78 2746  
                                             __ptext95 17A2  
                                             __ptext87 2ADE  
                                             __ptext79 1DA4  
                                             __ptext96 2972  
                                             __ptext88 DD74  
                                             __ptext97 20AC  
                                             __ptext89 FCCE  
                                             __ptext98 1DFE  
                                             __ptext99 26DE  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 1B0E  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 1AAC  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                __flash_wakeup@command 0068  
                                      ___almod@counter 0068  
                                          ??__get_root 0062  
                                  __parse_command_long 24A8  
                           ?_ExternalFlash_SectorWrite 0060  
                          __end_of_os_read_temperature 2AEA  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 1034  
                                __end_of__flash_wakeup 20FE  
                       __end_of_USBCtrlTrfSetupHandler 1624  
                                        __size_of_main 0144  
                                    ?_USBCtrlEPService 002E  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_utoa 00AA  
                            __end_of__parse_jump_steps E846  
                                   ??_USBCtrlEPService 004B  
                                             _tmr0_isr 2522  
                                  _USBCtrlTrfInHandler 0B5E  
                   _MSDProcessCommandMediaPresent$2606 009B  
                                          ??_api_parse 00C0  
                               __end_of__i2c_wait_idle 1AAC  
                           __end_of_motor_items_in_cue 2AC6  
                                             _outPipes 0001  
      i2c_display_program_custom_character@bit_pattern 006E  
                                             _spi_init 242A  
                                 _USBCtrlTrfOutHandler 1C90  
                                             int$flags 005B  
                            _USBCtrlEPAllowStatusStage 09DC  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                         ??_motor_stop 0060  
                                 ?__parse_command_long 00AA  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                          __end_of_motor_period_lookup 9BFD  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa D962  
                motor_go_to_steps_position@distance_cw 00B2  
                                     i2_ResetSenseData 1B70  
                       ?_APP_DeviceCustomHIDInitialize 002E  
                               ??__parse_command_short 00BA  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011C  
                       ?__fill_buffer_get_mode_details 0060  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0026  
                      __end_of__fill_buffer_get_status E11C  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00A5  
                                 ?_USBCtrlTrfInHandler 002E  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                        USBCtrlTrfTxService@byteToSend 002E  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             memset@p1 0060  
                 __end_of_MSDComputeDeviceInAndResidue 0D86  
                __size_of_MSDComputeDeviceInAndResidue 00B2  
                         _MSDComputeDeviceInAndResidue 0CD4  
                                     ?_USBStallHandler 002E  
                             USBStdFeatureReqHandler@p 0049  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                               __size_of_USBDeviceInit 014A  
                        ?_MSDProcessCommandMediaAbsent 002E  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 16AA  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
                      _USER_USB_CALLBACK_EVENT_HANDLER 1624  
              motor_schedule_command@distance_in_steps 0097  
                                   __end_of_motor_init 29F2  
                                     ___lwmod@dividend 0060  
                         i2USBTransferOnePacket@handle 0037  
                    __end_of_ExternalFlash_SectorWrite 2AE2  
                                   __end_of_motor_stop 231A  
                __end_of__flash_write_page_from_buffer 1DA4  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 1D4A  
                             ??_motor_schedule_command 009D  
               i2SYSTEM_Initialize@pll_startup_counter 002E  
                 SYSTEM_Initialize@pll_startup_counter 0061  
                                      _display_content 0278  
                              __end_of_MSDWriteHandler CD3A  
                                     spi_tx_tx@command 0060  
                              __size_of_MSDReadHandler 01E4  
                           i2USBTransferOnePacket@data 002F  
                                        ??_system_init 008F  
                    __size_of__fill_buffer_get_display 00B8  
                               _motor_speed_from_index 2A28  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 002F  
                                      ?__i2c_wait_idle 002E  
                                ?_USBCtrlTrfOutHandler 002E  
                                      _display_prepare A238  
                                          ??_motor_isr 002E  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 002E  
                                  _USBCtrlTrfRxService F7AA  
                                   _USBWakeFromSuspend 2604  
                                ??__parse_command_long 00B0  
                                   _i2c_display_cursor 2950  
                              _USBStdFeatureReqHandler CFF4  
                                  i2_SYSTEM_Initialize 2006  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 0774  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                    _motor_divide_jump 13DC  
                                      _gblMediaPresent 0161  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0200  
                                  ?_USBWakeFromSuspend 002E  
                                           _PPSCONbits 000EBF  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 002F  
                                   ?_motor_divide_jump 002E  
                                             strlen@cp 0064  
                                _USBAlternateInterface 0194  
                                      ___lwmod@counter 0064  
                                          _ptrNextData 0165  
                                         ___aldiv@sign 0069  
                            i2USBTransferOnePacket@dir 002E  
                            i2USBTransferOnePacket@len 0031  
                                  USBEnableEndpoint@ep 0039  
                                      _endpoint_number 0028  
                                       _display_update 2594  
                                 ?_USBCtrlTrfRxService 002E  
                                        ___fladd@signs 0070  
                                _MSDCheckForErrorCases FCCE  
                                  ??_motor_divide_jump 00BA  
                        ?_MSDComputeDeviceInAndResidue 0060  
                              motor_arc_move@direction 009E  
                                 ?i2_SYSTEM_Initialize 002E  
                             ?_USBCtrlEPAllowDataStage 002E  
                                       _MSBBufferIndex 0163  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 002E  
                                         ___fladd@aexp 0071  
                                        ?_encoder_init 002E  
                                         ___fladd@bexp 0072  
                                           _USBMSDInit F69C  
                         _USBStatusStageTimeoutCounter 0027  
                      ??_ExternalFlash_MediaInitialize 0062  
                                     ??_motor_arc_move 009E  
                                 ??_USBWakeFromSuspend 0045  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 181C  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 2AD6  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 002E  
    motor_divide_jump_to_nearest@divide_position_float 00C0  
                           __size_of__parse_jump_steps 014E  
                              __display_itoa_long@text 00B2  
                                           _USB_CD_Ptr 9DEC  
                                          _power_state 0024  
                                          _USBInHandle 015D  
                             _APP_DeviceCustomHIDTasks 0F8C  
                           __end_of_flash_sector_write 219E  
