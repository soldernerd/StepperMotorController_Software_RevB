

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Dec 25 22:50:51 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258                           	dabs	1,0x600,512,_msd_buffer
   259                           	dabs	1,0xD00,48,_BDT
   260                           	dabs	1,0xD40,31,_msd_cbw
   261                           	dabs	1,0xD80,13,_msd_csw
   262                           	dabs	1,0xD38,8,_CtrlTrfData
   263                           	dabs	1,0xD30,8,_SetupPkt
   264  0000                     
   265                           ; Version 2.00
   266                           ; Generated 27/05/2018 GMT
   267                           ; 
   268                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   269                           ; All rights reserved.
   270                           ; 
   271                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   272                           ; 
   273                           ; Redistribution and use in source and binary forms, with or without modification, are
   274                           ; permitted provided that the following conditions are met:
   275                           ; 
   276                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   277                           ;        conditions and the following disclaimer.
   278                           ; 
   279                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   280                           ;        of conditions and the following disclaimer in the documentation and/or other
   281                           ;        materials provided with the distribution.
   282                           ; 
   283                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   284                           ;        software without specific prior written permission.
   285                           ; 
   286                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   287                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   288                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   289                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   290                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   291                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   292                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   293                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   294                           ; 
   295                           ; 
   296                           ; Code-generator required, PIC18F47J53 Definitions
   297                           ; 
   298                           ; SFR Addresses
   299  0000                     
   300                           	psect	idataBANK2
   301  014CE4                     __pidataBANK2:
   302                           	opt stack 0
   303                           
   304                           ;initializer for _LUN
   305  014CE4  4E                 	db	low _ExternalFlash_MediaInitialize
   306  014CE5  57                 	db	high _ExternalFlash_MediaInitialize
   307  014CE6  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   308  014CE7  7A                 	db	low _ExternalFlash_CapacityRead
   309  014CE8  58                 	db	high _ExternalFlash_CapacityRead
   310  014CE9  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   311  014CEA  F6                 	db	low _ExternalFlash_SectorSizeRead
   312  014CEB  58                 	db	high _ExternalFlash_SectorSizeRead
   313  014CEC  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   314  014CED  36                 	db	low _ExternalFlash_MediaDetect
   315  014CEE  59                 	db	high _ExternalFlash_MediaDetect
   316  014CEF  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   317  014CF0  7A                 	db	low _ExternalFlash_SectorRead
   318  014CF1  52                 	db	high _ExternalFlash_SectorRead
   319  014CF2  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   320  014CF3  7C                 	db	low _ExternalFlash_WriteProtectStateGet
   321  014CF4  59                 	db	high _ExternalFlash_WriteProtectStateGet
   322  014CF5  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   323  014CF6  46                 	db	low _ExternalFlash_SectorWrite
   324  014CF7  52                 	db	high _ExternalFlash_SectorWrite
   325  014CF8  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   326  014CF9  00                 	db	0
   327  014CFA  00                 	db	0
   328  014CFB  00                 	db	0
   329  014CFC  00                 	db	0
   330  014CFD  00                 	db	0
   331  014CFE  00                 	db	0
   332  014CFF  00                 	db	0
   333  014D00  00                 	db	0
   334                           
   335                           ;initializer for i2c_display_init@F6942
   336  014D01  3A                 	db	58
   337  014D02  1E                 	db	30
   338  014D03  39                 	db	57
   339  014D04  0C                 	db	12
   340  014D05  74                 	db	116
   341  014D06  5C                 	db	92
   342  014D07  6D                 	db	109
   343  014D08  0C                 	db	12
   344  014D09  01                 	db	1
   345                           
   346                           ;initializer for __i2c_display_send_init_sequence@F6939
   347  014D0A  3A                 	db	58
   348  014D0B  1E                 	db	30
   349  014D0C  39                 	db	57
   350  014D0D  0C                 	db	12
   351  014D0E  74                 	db	116
   352  014D0F  5C                 	db	92
   353  014D10  6D                 	db	109
   354  014D11  0C                 	db	12
   355  014D12  01                 	db	1
   356                           
   357                           ;initializer for _tx_buf
   358  014D13  01                 	db	1
   359  014D14  02                 	db	2
   360  014D15  03                 	db	3
   361  014D16  04                 	db	4
   362  014D17  05                 	db	5
   363  014D18  06                 	db	6
   364  014D19  07                 	db	7
   365  014D1A  08                 	db	8
   366                           
   367                           ;initializer for _configFile_used_name
   368  014D1B  55                 	db	85
   369  014D1C  53                 	db	83
   370  014D1D  45                 	db	69
   371  014D1E  44                 	db	68
   372  014D1F  43                 	db	67
   373  014D20  4F                 	db	79
   374  014D21  4E                 	db	78
   375  014D22  46                 	db	70
   376                           
   377                           ;initializer for _configFile_name
   378  014D23  43                 	db	67
   379  014D24  4F                 	db	79
   380  014D25  4E                 	db	78
   381  014D26  46                 	db	70
   382  014D27  49                 	db	73
   383  014D28  47                 	db	71
   384  014D29  20                 	db	32
   385  014D2A  20                 	db	32
   386                           
   387                           ;initializer for _configFile_used_extention
   388  014D2B  54                 	db	84
   389  014D2C  58                 	db	88
   390  014D2D  54                 	db	84
   391                           
   392                           ;initializer for _configFile_extention
   393  014D2E  54                 	db	84
   394  014D2F  58                 	db	88
   395  014D30  54                 	db	84
   396                           
   397                           	psect	idataBANK4
   398  014B54                     __pidataBANK4:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _dc_startup
   402  014B54  2A                 	db	42
   403  014B55  20                 	db	32
   404  014B56  20                 	db	32
   405  014B57  53                 	db	83
   406  014B58  74                 	db	116
   407  014B59  65                 	db	101
   408  014B5A  70                 	db	112
   409  014B5B  70                 	db	112
   410  014B5C  65                 	db	101
   411  014B5D  72                 	db	114
   412  014B5E  20                 	db	32
   413  014B5F  4D                 	db	77
   414  014B60  6F                 	db	111
   415  014B61  74                 	db	116
   416  014B62  6F                 	db	111
   417  014B63  72                 	db	114
   418  014B64  20                 	db	32
   419  014B65  20                 	db	32
   420  014B66  20                 	db	32
   421  014B67  2A                 	db	42
   422  014B68  2A                 	db	42
   423  014B69  20                 	db	32
   424  014B6A  20                 	db	32
   425  014B6B  20                 	db	32
   426  014B6C  20                 	db	32
   427  014B6D  43                 	db	67
   428  014B6E  6F                 	db	111
   429  014B6F  6E                 	db	110
   430  014B70  74                 	db	116
   431  014B71  72                 	db	114
   432  014B72  6F                 	db	111
   433  014B73  6C                 	db	108
   434  014B74  6C                 	db	108
   435  014B75  65                 	db	101
   436  014B76  72                 	db	114
   437  014B77  20                 	db	32
   438  014B78  20                 	db	32
   439  014B79  20                 	db	32
   440  014B7A  20                 	db	32
   441  014B7B  2A                 	db	42
   442  014B7C  2A                 	db	42
   443  014B7D  20                 	db	32
   444  014B7E  20                 	db	32
   445  014B7F  20                 	db	32
   446  014B80  20                 	db	32
   447  014B81  76                 	db	118
   448  014B82  20                 	db	32
   449  014B83  20                 	db	32
   450  014B84  20                 	db	32
   451  014B85  20                 	db	32
   452  014B86  20                 	db	32
   453  014B87  20                 	db	32
   454  014B88  20                 	db	32
   455  014B89  20                 	db	32
   456  014B8A  20                 	db	32
   457  014B8B  20                 	db	32
   458  014B8C  20                 	db	32
   459  014B8D  20                 	db	32
   460  014B8E  20                 	db	32
   461  014B8F  2A                 	db	42
   462  014B90  2A                 	db	42
   463  014B91  20                 	db	32
   464  014B92  20                 	db	32
   465  014B93  73                 	db	115
   466  014B94  6F                 	db	111
   467  014B95  6C                 	db	108
   468  014B96  64                 	db	100
   469  014B97  65                 	db	101
   470  014B98  72                 	db	114
   471  014B99  6E                 	db	110
   472  014B9A  65                 	db	101
   473  014B9B  72                 	db	114
   474  014B9C  64                 	db	100
   475  014B9D  2E                 	db	46
   476  014B9E  63                 	db	99
   477  014B9F  6F                 	db	111
   478  014BA0  6D                 	db	109
   479  014BA1  20                 	db	32
   480  014BA2  20                 	db	32
   481  014BA3  2A                 	db	42
   482                           
   483                           	psect	mediumconst
   484  009092                     __pmediumconst:
   485                           	opt stack 0
   486  009092  00                 	db	0
   487  009093                     _motor_speed_lookup:
   488                           	opt stack 0
   489  009093  0008               	dw	8
   490  009095  000C               	dw	12
   491  009097  0010               	dw	16
   492  009099  0013               	dw	19
   493  00909B  0016               	dw	22
   494  00909D  0019               	dw	25
   495  00909F  001C               	dw	28
   496  0090A1  001E               	dw	30
   497  0090A3  0021               	dw	33
   498  0090A5  0023               	dw	35
   499  0090A7  0026               	dw	38
   500  0090A9  0028               	dw	40
   501  0090AB  002A               	dw	42
   502  0090AD  002C               	dw	44
   503  0090AF  002E               	dw	46
   504  0090B1  0030               	dw	48
   505  0090B3  0032               	dw	50
   506  0090B5  0034               	dw	52
   507  0090B7  0036               	dw	54
   508  0090B9  0038               	dw	56
   509  0090BB  003A               	dw	58
   510  0090BD  003C               	dw	60
   511  0090BF  003D               	dw	61
   512  0090C1  003F               	dw	63
   513  0090C3  0041               	dw	65
   514  0090C5  0043               	dw	67
   515  0090C7  0045               	dw	69
   516  0090C9  0046               	dw	70
   517  0090CB  0048               	dw	72
   518  0090CD  0049               	dw	73
   519  0090CF  004B               	dw	75
   520  0090D1  004D               	dw	77
   521  0090D3  004E               	dw	78
   522  0090D5  0050               	dw	80
   523  0090D7  0051               	dw	81
   524  0090D9  0053               	dw	83
   525  0090DB  0054               	dw	84
   526  0090DD  0056               	dw	86
   527  0090DF  0057               	dw	87
   528  0090E1  0059               	dw	89
   529  0090E3  005A               	dw	90
   530  0090E5  005C               	dw	92
   531  0090E7  005D               	dw	93
   532  0090E9  005F               	dw	95
   533  0090EB  0060               	dw	96
   534  0090ED  0062               	dw	98
   535  0090EF  0063               	dw	99
   536  0090F1  0064               	dw	100
   537  0090F3  0066               	dw	102
   538  0090F5  0067               	dw	103
   539  0090F7  0069               	dw	105
   540  0090F9  006A               	dw	106
   541  0090FB  006C               	dw	108
   542  0090FD  006D               	dw	109
   543  0090FF  006E               	dw	110
   544  009101  0070               	dw	112
   545  009103  0071               	dw	113
   546  009105  0072               	dw	114
   547  009107  0073               	dw	115
   548  009109  0074               	dw	116
   549  00910B  0076               	dw	118
   550  00910D  0078               	dw	120
   551  00910F  0079               	dw	121
   552  009111  007A               	dw	122
   553  009113  007B               	dw	123
   554  009115  007D               	dw	125
   555  009117  007E               	dw	126
   556  009119  007F               	dw	127
   557  00911B  0082               	dw	130
   558  00911D  0085               	dw	133
   559  00911F  0087               	dw	135
   560  009121  008A               	dw	138
   561  009123  008C               	dw	140
   562  009125  008F               	dw	143
   563  009127  0091               	dw	145
   564  009129  0092               	dw	146
   565  00912B  0094               	dw	148
   566  00912D  0098               	dw	152
   567  00912F  009A               	dw	154
   568  009131  009C               	dw	156
   569  009133  009E               	dw	158
   570  009135  00A1               	dw	161
   571  009137  00A3               	dw	163
   572  009139  00A5               	dw	165
   573  00913B  00A7               	dw	167
   574  00913D  00AA               	dw	170
   575  00913F  00AC               	dw	172
   576  009141  00AF               	dw	175
   577  009143  00B2               	dw	178
   578  009145  00B4               	dw	180
   579  009147  00B7               	dw	183
   580  009149  00B8               	dw	184
   581  00914B  00BA               	dw	186
   582  00914D  00BC               	dw	188
   583  00914F  00BE               	dw	190
   584  009151  00C0               	dw	192
   585  009153  00C3               	dw	195
   586  009155  00C4               	dw	196
   587  009157  00C6               	dw	198
   588  009159  00C8               	dw	200
   589  00915B  00CA               	dw	202
   590  00915D  00CC               	dw	204
   591  00915F  00CE               	dw	206
   592  009161  00D0               	dw	208
   593  009163  00D2               	dw	210
   594  009165  00D4               	dw	212
   595  009167  00D6               	dw	214
   596  009169  00D8               	dw	216
   597  00916B  00D9               	dw	217
   598  00916D  00DB               	dw	219
   599  00916F  00DD               	dw	221
   600  009171  00DF               	dw	223
   601  009173  00E1               	dw	225
   602  009175  00E2               	dw	226
   603  009177  00E5               	dw	229
   604  009179  00E7               	dw	231
   605  00917B  00E8               	dw	232
   606  00917D  00EA               	dw	234
   607  00917F  00EC               	dw	236
   608  009181  00EE               	dw	238
   609  009183  00EF               	dw	239
   610  009185  00F2               	dw	242
   611  009187  00F3               	dw	243
   612  009189  00F5               	dw	245
   613  00918B  00F7               	dw	247
   614  00918D  00F8               	dw	248
   615  00918F  00FB               	dw	251
   616  009191  00FD               	dw	253
   617  009193  0100               	dw	256
   618  009195  0103               	dw	259
   619  009197  0104               	dw	260
   620  009199  0107               	dw	263
   621  00919B  010A               	dw	266
   622  00919D  010C               	dw	268
   623  00919F  010F               	dw	271
   624  0091A1  0112               	dw	274
   625  0091A3  0114               	dw	276
   626  0091A5  0117               	dw	279
   627  0091A7  0119               	dw	281
   628  0091A9  011C               	dw	284
   629  0091AB  011E               	dw	286
   630  0091AD  0121               	dw	289
   631  0091AF  0123               	dw	291
   632  0091B1  0125               	dw	293
   633  0091B3  0129               	dw	297
   634  0091B5  012B               	dw	299
   635  0091B7  012C               	dw	300
   636  0091B9  012E               	dw	302
   637  0091BB  0132               	dw	306
   638  0091BD  0134               	dw	308
   639  0091BF  0136               	dw	310
   640  0091C1  0138               	dw	312
   641  0091C3  013B               	dw	315
   642  0091C5  013D               	dw	317
   643  0091C7  013F               	dw	319
   644  0091C9  0143               	dw	323
   645  0091CB  0146               	dw	326
   646  0091CD  0148               	dw	328
   647  0091CF  014A               	dw	330
   648  0091D1  014C               	dw	332
   649  0091D3  014F               	dw	335
   650  0091D5  0151               	dw	337
   651  0091D7  0154               	dw	340
   652  0091D9  0156               	dw	342
   653  0091DB  0159               	dw	345
   654  0091DD  015B               	dw	347
   655  0091DF  015E               	dw	350
   656  0091E1  0160               	dw	352
   657  0091E3  0163               	dw	355
   658  0091E5  0166               	dw	358
   659  0091E7  0169               	dw	361
   660  0091E9  016B               	dw	363
   661  0091EB  016E               	dw	366
   662  0091ED  0171               	dw	369
   663  0091EF  0174               	dw	372
   664  0091F1  0177               	dw	375
   665  0091F3  017A               	dw	378
   666  0091F5  017D               	dw	381
   667  0091F7  0180               	dw	384
   668  0091F9  0183               	dw	387
   669  0091FB  0187               	dw	391
   670  0091FD  018A               	dw	394
   671  0091FF  018D               	dw	397
   672  009201  0191               	dw	401
   673  009203  0194               	dw	404
   674  009205  0198               	dw	408
   675  009207  019B               	dw	411
   676  009209  019F               	dw	415
   677  00920B  01A3               	dw	419
   678  00920D  01A6               	dw	422
   679  00920F  01AA               	dw	426
   680  009211  01AE               	dw	430
   681  009213  01B2               	dw	434
   682  009215  01B6               	dw	438
   683  009217  01BA               	dw	442
   684  009219  01BE               	dw	446
   685  00921B  01C3               	dw	451
   686  00921D  01C7               	dw	455
   687  00921F  01CC               	dw	460
   688  009221  01D0               	dw	464
   689  009223  01D5               	dw	469
   690  009225  01D9               	dw	473
   691  009227  01DE               	dw	478
   692  009229  01E3               	dw	483
   693  00922B  01E8               	dw	488
   694  00922D  01ED               	dw	493
   695  00922F  01F3               	dw	499
   696  009231  01F8               	dw	504
   697  009233  01FE               	dw	510
   698  009235  0203               	dw	515
   699  009237  0209               	dw	521
   700  009239  020F               	dw	527
   701  00923B  0215               	dw	533
   702  00923D  021B               	dw	539
   703  00923F  0221               	dw	545
   704  009241  0227               	dw	551
   705  009243  022E               	dw	558
   706  009245  0235               	dw	565
   707  009247  023C               	dw	572
   708  009249  0243               	dw	579
   709  00924B  024A               	dw	586
   710  00924D  0251               	dw	593
   711  00924F  0259               	dw	601
   712  009251  0261               	dw	609
   713  009253  0269               	dw	617
   714  009255  0271               	dw	625
   715  009257  0279               	dw	633
   716  009259  0282               	dw	642
   717  00925B  028B               	dw	651
   718  00925D  0294               	dw	660
   719  00925F  029E               	dw	670
   720  009261  02A7               	dw	679
   721  009263  02B1               	dw	689
   722  009265  02BC               	dw	700
   723  009267  02C6               	dw	710
   724  009269  02D1               	dw	721
   725  00926B  02DC               	dw	732
   726  00926D  02DC               	dw	732
   727  00926F  02DF               	dw	735
   728  009271  02E2               	dw	738
   729  009273  02E5               	dw	741
   730  009275  02E8               	dw	744
   731  009277  02EB               	dw	747
   732  009279  02EE               	dw	750
   733  00927B  02F1               	dw	753
   734  00927D  02F4               	dw	756
   735  00927F  02F7               	dw	759
   736  009281  02FA               	dw	762
   737  009283  02FD               	dw	765
   738  009285  0300               	dw	768
   739  009287  0304               	dw	772
   740  009289  0307               	dw	775
   741  00928B  030A               	dw	778
   742  00928D  030D               	dw	781
   743  00928F  0311               	dw	785
   744  009291  0314               	dw	788
   745  009293  0317               	dw	791
   746  009295  031A               	dw	794
   747  009297  031E               	dw	798
   748  009299  0321               	dw	801
   749  00929B  0325               	dw	805
   750  00929D  0328               	dw	808
   751  00929F  032C               	dw	812
   752  0092A1  032F               	dw	815
   753  0092A3  0333               	dw	819
   754  0092A5  0336               	dw	822
   755  0092A7  033A               	dw	826
   756  0092A9  033E               	dw	830
   757  0092AB  0341               	dw	833
   758  0092AD  0345               	dw	837
   759  0092AF  0349               	dw	841
   760  0092B1  034D               	dw	845
   761  0092B3  0350               	dw	848
   762  0092B5  0354               	dw	852
   763  0092B7  0358               	dw	856
   764  0092B9  035C               	dw	860
   765  0092BB  0360               	dw	864
   766  0092BD  0364               	dw	868
   767  0092BF  0368               	dw	872
   768  0092C1  036C               	dw	876
   769  0092C3  0370               	dw	880
   770  0092C5  0374               	dw	884
   771  0092C7  0379               	dw	889
   772  0092C9  037D               	dw	893
   773  0092CB  0381               	dw	897
   774  0092CD  0385               	dw	901
   775  0092CF  038A               	dw	906
   776  0092D1  038E               	dw	910
   777  0092D3  0393               	dw	915
   778  0092D5  0397               	dw	919
   779  0092D7  039C               	dw	924
   780  0092D9  03A0               	dw	928
   781  0092DB  03A5               	dw	933
   782  0092DD  03AA               	dw	938
   783  0092DF  03AE               	dw	942
   784  0092E1  03B3               	dw	947
   785  0092E3  03B8               	dw	952
   786  0092E5  03BD               	dw	957
   787  0092E7  03C2               	dw	962
   788  0092E9  03C6               	dw	966
   789  0092EB  03CC               	dw	972
   790  0092ED  03D1               	dw	977
   791  0092EF  03D6               	dw	982
   792  0092F1  03DB               	dw	987
   793  0092F3  03E0               	dw	992
   794  0092F5  03E5               	dw	997
   795  0092F7  03EB               	dw	1003
   796  0092F9  03F0               	dw	1008
   797  0092FB  03F6               	dw	1014
   798  0092FD  03FB               	dw	1019
   799  0092FF  0401               	dw	1025
   800  009301  0406               	dw	1030
   801  009303  040C               	dw	1036
   802  009305  0412               	dw	1042
   803  009307  0417               	dw	1047
   804  009309  041D               	dw	1053
   805  00930B  0423               	dw	1059
   806  00930D  0429               	dw	1065
   807  00930F  042F               	dw	1071
   808  009311  0436               	dw	1078
   809  009313  043C               	dw	1084
   810  009315  0442               	dw	1090
   811  009317  0448               	dw	1096
   812  009319  044F               	dw	1103
   813  00931B  0455               	dw	1109
   814  00931D  045C               	dw	1116
   815  00931F  0463               	dw	1123
   816  009321  046A               	dw	1130
   817  009323  0470               	dw	1136
   818  009325  0477               	dw	1143
   819  009327  047E               	dw	1150
   820  009329  0485               	dw	1157
   821  00932B  048D               	dw	1165
   822  00932D  0494               	dw	1172
   823  00932F  049B               	dw	1179
   824  009331  04A3               	dw	1187
   825  009333  04AA               	dw	1194
   826  009335  04B2               	dw	1202
   827  009337  04BA               	dw	1210
   828  009339  04C2               	dw	1218
   829  00933B  04C9               	dw	1225
   830  00933D  04D2               	dw	1234
   831  00933F  04DA               	dw	1242
   832  009341  04E2               	dw	1250
   833  009343  04EA               	dw	1258
   834  009345  04F3               	dw	1267
   835  009347  04FC               	dw	1276
   836  009349  0504               	dw	1284
   837  00934B  050D               	dw	1293
   838  00934D  0516               	dw	1302
   839  00934F  051F               	dw	1311
   840  009351  0528               	dw	1320
   841  009353  0532               	dw	1330
   842  009355  053B               	dw	1339
   843  009357  0545               	dw	1349
   844  009359  054F               	dw	1359
   845  00935B  0559               	dw	1369
   846  00935D  0563               	dw	1379
   847  00935F  056D               	dw	1389
   848  009361  0577               	dw	1399
   849  009363  0582               	dw	1410
   850  009365  058C               	dw	1420
   851  009367  0597               	dw	1431
   852  009369  05A2               	dw	1442
   853  00936B  05AD               	dw	1453
   854  00936D  05B9               	dw	1465
   855  00936F  05C4               	dw	1476
   856  009371  05D0               	dw	1488
   857  009373  05DC               	dw	1500
   858  009375  05E8               	dw	1512
   859  009377  05F4               	dw	1524
   860  009379  0601               	dw	1537
   861  00937B  060E               	dw	1550
   862  00937D  061A               	dw	1562
   863  00937F  0628               	dw	1576
   864  009381  0635               	dw	1589
   865  009383  0643               	dw	1603
   866  009385  0650               	dw	1616
   867  009387  065E               	dw	1630
   868  009389  066D               	dw	1645
   869  00938B  067B               	dw	1659
   870  00938D  068A               	dw	1674
   871  00938F  0699               	dw	1689
   872  009391  06A9               	dw	1705
   873  009393  06B8               	dw	1720
   874  009395  06C8               	dw	1736
   875  009397  06D8               	dw	1752
   876  009399  06E9               	dw	1769
   877  00939B  06FA               	dw	1786
   878  00939D  070B               	dw	1803
   879  00939F  071C               	dw	1820
   880  0093A1  072E               	dw	1838
   881  0093A3  0740               	dw	1856
   882  0093A5  0753               	dw	1875
   883  0093A7  0766               	dw	1894
   884  0093A9  0779               	dw	1913
   885  0093AB  078D               	dw	1933
   886  0093AD  07A1               	dw	1953
   887  0093AF  07B6               	dw	1974
   888  0093B1  07CB               	dw	1995
   889  0093B3  07E0               	dw	2016
   890  0093B5  07F6               	dw	2038
   891  0093B7  080C               	dw	2060
   892  0093B9  0823               	dw	2083
   893  0093BB  083B               	dw	2107
   894  0093BD  0853               	dw	2131
   895  0093BF  086B               	dw	2155
   896  0093C1  0884               	dw	2180
   897  0093C3  089E               	dw	2206
   898  0093C5  08B8               	dw	2232
   899  0093C7  08D3               	dw	2259
   900  0093C9  08EF               	dw	2287
   901  0093CB  090B               	dw	2315
   902  0093CD  0928               	dw	2344
   903  0093CF  0945               	dw	2373
   904  0093D1  0964               	dw	2404
   905  0093D3  0983               	dw	2435
   906  0093D5  09A3               	dw	2467
   907  0093D7  09C4               	dw	2500
   908  0093D9  09E6               	dw	2534
   909  0093DB  0A08               	dw	2568
   910  0093DD  0A2C               	dw	2604
   911  0093DF  0A51               	dw	2641
   912  0093E1  0A77               	dw	2679
   913  0093E3  0A9D               	dw	2717
   914  0093E5  0AC5               	dw	2757
   915  0093E7  0AEF               	dw	2799
   916  0093E9  0B19               	dw	2841
   917  0093EB  0B45               	dw	2885
   918  0093ED  0B72               	dw	2930
   919  0093EF  0B72               	dw	2930
   920  0093F1  0B7D               	dw	2941
   921  0093F3  0B89               	dw	2953
   922  0093F5  0B94               	dw	2964
   923  0093F7  0BA0               	dw	2976
   924  0093F9  0BAC               	dw	2988
   925  0093FB  0BB8               	dw	3000
   926  0093FD  0BC4               	dw	3012
   927  0093FF  0BD0               	dw	3024
   928  009401  0BDC               	dw	3036
   929  009403  0BE9               	dw	3049
   930  009405  0BF5               	dw	3061
   931  009407  0C02               	dw	3074
   932  009409  0C0E               	dw	3086
   933  00940B  0C1B               	dw	3099
   934  00940D  0C28               	dw	3112
   935  00940F  0C35               	dw	3125
   936  009411  0C42               	dw	3138
   937  009413  0C4F               	dw	3151
   938  009415  0C5D               	dw	3165
   939  009417  0C6A               	dw	3178
   940  009419  0C77               	dw	3191
   941  00941B  0C85               	dw	3205
   942  00941D  0C93               	dw	3219
   943  00941F  0CA1               	dw	3233
   944  009421  0CAF               	dw	3247
   945  009423  0CBD               	dw	3261
   946  009425  0CCB               	dw	3275
   947  009427  0CD9               	dw	3289
   948  009429  0CE8               	dw	3304
   949  00942B  0CF7               	dw	3319
   950  00942D  0D05               	dw	3333
   951  00942F  0D14               	dw	3348
   952  009431  0D23               	dw	3363
   953  009433  0D32               	dw	3378
   954  009435  0D42               	dw	3394
   955  009437  0D51               	dw	3409
   956  009439  0D61               	dw	3425
   957  00943B  0D70               	dw	3440
   958  00943D  0D80               	dw	3456
   959  00943F  0D90               	dw	3472
   960  009441  0DA0               	dw	3488
   961  009443  0DB1               	dw	3505
   962  009445  0DC1               	dw	3521
   963  009447  0DD2               	dw	3538
   964  009449  0DE3               	dw	3555
   965  00944B  0DF3               	dw	3571
   966  00944D  0E05               	dw	3589
   967  00944F  0E16               	dw	3606
   968  009451  0E27               	dw	3623
   969  009453  0E39               	dw	3641
   970  009455  0E4B               	dw	3659
   971  009457  0E5C               	dw	3676
   972  009459  0E6F               	dw	3695
   973  00945B  0E81               	dw	3713
   974  00945D  0E93               	dw	3731
   975  00945F  0EA6               	dw	3750
   976  009461                     __end_of_motor_speed_lookup:
   977                           	opt stack 0
   978  009461                     _motor_steps_lookup:
   979                           	opt stack 0
   980  009461  0001               	dw	1
   981  009463  0002               	dw	2
   982  009465  0003               	dw	3
   983  009467  0004               	dw	4
   984  009469  0005               	dw	5
   985  00946B  0006               	dw	6
   986  00946D  0007               	dw	7
   987  00946F  0008               	dw	8
   988  009471  0009               	dw	9
   989  009473  000A               	dw	10
   990  009475  000B               	dw	11
   991  009477  000C               	dw	12
   992  009479  000D               	dw	13
   993  00947B  000E               	dw	14
   994  00947D  000F               	dw	15
   995  00947F  0010               	dw	16
   996  009481  0011               	dw	17
   997  009483  0012               	dw	18
   998  009485  0013               	dw	19
   999  009487  0014               	dw	20
  1000  009489  0015               	dw	21
  1001  00948B  0016               	dw	22
  1002  00948D  0017               	dw	23
  1003  00948F  0018               	dw	24
  1004  009491  0019               	dw	25
  1005  009493  001A               	dw	26
  1006  009495  001B               	dw	27
  1007  009497  001C               	dw	28
  1008  009499  001D               	dw	29
  1009  00949B  001E               	dw	30
  1010  00949D  001F               	dw	31
  1011  00949F  0020               	dw	32
  1012  0094A1  0021               	dw	33
  1013  0094A3  0022               	dw	34
  1014  0094A5  0023               	dw	35
  1015  0094A7  0024               	dw	36
  1016  0094A9  0025               	dw	37
  1017  0094AB  0026               	dw	38
  1018  0094AD  0027               	dw	39
  1019  0094AF  0028               	dw	40
  1020  0094B1  0029               	dw	41
  1021  0094B3  002A               	dw	42
  1022  0094B5  002B               	dw	43
  1023  0094B7  002C               	dw	44
  1024  0094B9  002D               	dw	45
  1025  0094BB  002E               	dw	46
  1026  0094BD  002F               	dw	47
  1027  0094BF  0030               	dw	48
  1028  0094C1  0031               	dw	49
  1029  0094C3  0032               	dw	50
  1030  0094C5  0033               	dw	51
  1031  0094C7  0034               	dw	52
  1032  0094C9  0035               	dw	53
  1033  0094CB  0036               	dw	54
  1034  0094CD  0037               	dw	55
  1035  0094CF  0038               	dw	56
  1036  0094D1  0039               	dw	57
  1037  0094D3  003A               	dw	58
  1038  0094D5  003B               	dw	59
  1039  0094D7  003C               	dw	60
  1040  0094D9  003D               	dw	61
  1041  0094DB  003E               	dw	62
  1042  0094DD  003F               	dw	63
  1043  0094DF  0040               	dw	64
  1044  0094E1  0041               	dw	65
  1045  0094E3  0042               	dw	66
  1046  0094E5  0043               	dw	67
  1047  0094E7  0045               	dw	69
  1048  0094E9  0047               	dw	71
  1049  0094EB  0049               	dw	73
  1050  0094ED  004B               	dw	75
  1051  0094EF  004D               	dw	77
  1052  0094F1  004F               	dw	79
  1053  0094F3  0051               	dw	81
  1054  0094F5  0053               	dw	83
  1055  0094F7  0055               	dw	85
  1056  0094F9  0057               	dw	87
  1057  0094FB  0059               	dw	89
  1058  0094FD  005B               	dw	91
  1059  0094FF  005D               	dw	93
  1060  009501  005F               	dw	95
  1061  009503  0061               	dw	97
  1062  009505  0063               	dw	99
  1063  009507  0065               	dw	101
  1064  009509  0067               	dw	103
  1065  00950B  0069               	dw	105
  1066  00950D  006B               	dw	107
  1067  00950F  006E               	dw	110
  1068  009511  0070               	dw	112
  1069  009513  0073               	dw	115
  1070  009515  0075               	dw	117
  1071  009517  0077               	dw	119
  1072  009519  0079               	dw	121
  1073  00951B  007B               	dw	123
  1074  00951D  007D               	dw	125
  1075  00951F  007F               	dw	127
  1076  009521  0081               	dw	129
  1077  009523  0083               	dw	131
  1078  009525  0085               	dw	133
  1079  009527  0087               	dw	135
  1080  009529  0089               	dw	137
  1081  00952B  008B               	dw	139
  1082  00952D  008D               	dw	141
  1083  00952F  008F               	dw	143
  1084  009531  0091               	dw	145
  1085  009533  0093               	dw	147
  1086  009535  0095               	dw	149
  1087  009537  0097               	dw	151
  1088  009539  0099               	dw	153
  1089  00953B  009B               	dw	155
  1090  00953D  009D               	dw	157
  1091  00953F  009F               	dw	159
  1092  009541  00A1               	dw	161
  1093  009543  00A3               	dw	163
  1094  009545  00A5               	dw	165
  1095  009547  00A7               	dw	167
  1096  009549  00A9               	dw	169
  1097  00954B  00AB               	dw	171
  1098  00954D  00AD               	dw	173
  1099  00954F  00AF               	dw	175
  1100  009551  00B1               	dw	177
  1101  009553  00B3               	dw	179
  1102  009555  00B5               	dw	181
  1103  009557  00B7               	dw	183
  1104  009559  00B9               	dw	185
  1105  00955B  00BB               	dw	187
  1106  00955D  00BD               	dw	189
  1107  00955F  00C0               	dw	192
  1108  009561  00C3               	dw	195
  1109  009563  00C6               	dw	198
  1110  009565  00C9               	dw	201
  1111  009567  00CC               	dw	204
  1112  009569  00CF               	dw	207
  1113  00956B  00D2               	dw	210
  1114  00956D  00D5               	dw	213
  1115  00956F  00D8               	dw	216
  1116  009571  00DB               	dw	219
  1117  009573  00DE               	dw	222
  1118  009575  00E1               	dw	225
  1119  009577  00E4               	dw	228
  1120  009579  00E7               	dw	231
  1121  00957B  00EA               	dw	234
  1122  00957D  00ED               	dw	237
  1123  00957F  00F0               	dw	240
  1124  009581  00F3               	dw	243
  1125  009583  00F6               	dw	246
  1126  009585  00F9               	dw	249
  1127  009587  00FC               	dw	252
  1128  009589  00FF               	dw	255
  1129  00958B  0102               	dw	258
  1130  00958D  0105               	dw	261
  1131  00958F  0108               	dw	264
  1132  009591  010B               	dw	267
  1133  009593  010E               	dw	270
  1134  009595  0111               	dw	273
  1135  009597  0114               	dw	276
  1136  009599  0117               	dw	279
  1137  00959B  011A               	dw	282
  1138  00959D  011D               	dw	285
  1139  00959F  0120               	dw	288
  1140  0095A1  0123               	dw	291
  1141  0095A3  0126               	dw	294
  1142  0095A5  012A               	dw	298
  1143  0095A7  012D               	dw	301
  1144  0095A9  0130               	dw	304
  1145  0095AB  0133               	dw	307
  1146  0095AD  0137               	dw	311
  1147  0095AF  013A               	dw	314
  1148  0095B1  013E               	dw	318
  1149  0095B3  0142               	dw	322
  1150  0095B5  0145               	dw	325
  1151  0095B7  0149               	dw	329
  1152  0095B9  014D               	dw	333
  1153  0095BB  0151               	dw	337
  1154  0095BD  0155               	dw	341
  1155  0095BF  0159               	dw	345
  1156  0095C1  015D               	dw	349
  1157  0095C3  0161               	dw	353
  1158  0095C5  0166               	dw	358
  1159  0095C7  016A               	dw	362
  1160  0095C9  016E               	dw	366
  1161  0095CB  0173               	dw	371
  1162  0095CD  0178               	dw	376
  1163  0095CF  017D               	dw	381
  1164  0095D1  0182               	dw	386
  1165  0095D3  0187               	dw	391
  1166  0095D5  018C               	dw	396
  1167  0095D7  0191               	dw	401
  1168  0095D9  0196               	dw	406
  1169  0095DB  019C               	dw	412
  1170  0095DD  01A1               	dw	417
  1171  0095DF  01A7               	dw	423
  1172  0095E1  01AD               	dw	429
  1173  0095E3  01B3               	dw	435
  1174  0095E5  01B9               	dw	441
  1175  0095E7  01BF               	dw	447
  1176  0095E9  01C6               	dw	454
  1177  0095EB  01CC               	dw	460
  1178  0095ED  01D3               	dw	467
  1179  0095EF  01DA               	dw	474
  1180  0095F1  01E1               	dw	481
  1181  0095F3  01E8               	dw	488
  1182  0095F5  01F0               	dw	496
  1183  0095F7  01F7               	dw	503
  1184  0095F9  01FF               	dw	511
  1185  0095FB  0207               	dw	519
  1186  0095FD  020F               	dw	527
  1187  0095FF  0218               	dw	536
  1188  009601  0221               	dw	545
  1189  009603  022A               	dw	554
  1190  009605  0233               	dw	563
  1191  009607  023D               	dw	573
  1192  009609  0247               	dw	583
  1193  00960B  0251               	dw	593
  1194  00960D  025C               	dw	604
  1195  00960F  0267               	dw	615
  1196  009611  0272               	dw	626
  1197  009613  027E               	dw	638
  1198  009615  028A               	dw	650
  1199  009617  0297               	dw	663
  1200  009619  02A4               	dw	676
  1201  00961B  02B2               	dw	690
  1202  00961D  02C0               	dw	704
  1203  00961F  02CF               	dw	719
  1204  009621  02DF               	dw	735
  1205  009623  02EF               	dw	751
  1206  009625  02FF               	dw	767
  1207  009627  0311               	dw	785
  1208  009629  0323               	dw	803
  1209  00962B  0336               	dw	822
  1210  00962D  0349               	dw	841
  1211  00962F  035E               	dw	862
  1212  009631  0373               	dw	883
  1213  009633  0389               	dw	905
  1214  009635  03A1               	dw	929
  1215  009637  03B9               	dw	953
  1216  009639  03D3               	dw	979
  1217  00963B  03DD               	dw	989
  1218  00963D  03E4               	dw	996
  1219  00963F  03EA               	dw	1002
  1220  009641  03F1               	dw	1009
  1221  009643  03F8               	dw	1016
  1222  009645  03FF               	dw	1023
  1223  009647  0406               	dw	1030
  1224  009649  040D               	dw	1037
  1225  00964B  0415               	dw	1045
  1226  00964D  041C               	dw	1052
  1227  00964F  0424               	dw	1060
  1228  009651  042B               	dw	1067
  1229  009653  0433               	dw	1075
  1230  009655  043B               	dw	1083
  1231  009657  0442               	dw	1090
  1232  009659  044A               	dw	1098
  1233  00965B  0452               	dw	1106
  1234  00965D  045A               	dw	1114
  1235  00965F  0463               	dw	1123
  1236  009661  046B               	dw	1131
  1237  009663  0474               	dw	1140
  1238  009665  047C               	dw	1148
  1239  009667  0485               	dw	1157
  1240  009669  048E               	dw	1166
  1241  00966B  0496               	dw	1174
  1242  00966D  049F               	dw	1183
  1243  00966F  04A9               	dw	1193
  1244  009671  04B2               	dw	1202
  1245  009673  04BB               	dw	1211
  1246  009675  04C5               	dw	1221
  1247  009677  04CE               	dw	1230
  1248  009679  04D8               	dw	1240
  1249  00967B  04E2               	dw	1250
  1250  00967D  04EC               	dw	1260
  1251  00967F  04F6               	dw	1270
  1252  009681  0500               	dw	1280
  1253  009683  050B               	dw	1291
  1254  009685  0515               	dw	1301
  1255  009687  0520               	dw	1312
  1256  009689  052B               	dw	1323
  1257  00968B  0536               	dw	1334
  1258  00968D  0541               	dw	1345
  1259  00968F  054C               	dw	1356
  1260  009691  0558               	dw	1368
  1261  009693  0564               	dw	1380
  1262  009695  056F               	dw	1391
  1263  009697  057B               	dw	1403
  1264  009699  0587               	dw	1415
  1265  00969B  0594               	dw	1428
  1266  00969D  05A0               	dw	1440
  1267  00969F  05AD               	dw	1453
  1268  0096A1  05BA               	dw	1466
  1269  0096A3  05C7               	dw	1479
  1270  0096A5  05D4               	dw	1492
  1271  0096A7  05E2               	dw	1506
  1272  0096A9  05EF               	dw	1519
  1273  0096AB  05FD               	dw	1533
  1274  0096AD  060B               	dw	1547
  1275  0096AF  0619               	dw	1561
  1276  0096B1  0628               	dw	1576
  1277  0096B3  0637               	dw	1591
  1278  0096B5  0646               	dw	1606
  1279  0096B7  0655               	dw	1621
  1280  0096B9  0664               	dw	1636
  1281  0096BB  0674               	dw	1652
  1282  0096BD  0684               	dw	1668
  1283  0096BF  0694               	dw	1684
  1284  0096C1  06A4               	dw	1700
  1285  0096C3  06B5               	dw	1717
  1286  0096C5  06C6               	dw	1734
  1287  0096C7  06D7               	dw	1751
  1288  0096C9  06E9               	dw	1769
  1289  0096CB  06FA               	dw	1786
  1290  0096CD  070C               	dw	1804
  1291  0096CF  071F               	dw	1823
  1292  0096D1  0731               	dw	1841
  1293  0096D3  0744               	dw	1860
  1294  0096D5  0758               	dw	1880
  1295  0096D7  076B               	dw	1899
  1296  0096D9  077F               	dw	1919
  1297  0096DB  0793               	dw	1939
  1298  0096DD  07A8               	dw	1960
  1299  0096DF  07BD               	dw	1981
  1300  0096E1  07D2               	dw	2002
  1301  0096E3  07E8               	dw	2024
  1302  0096E5  07FE               	dw	2046
  1303  0096E7  0815               	dw	2069
  1304  0096E9  082C               	dw	2092
  1305  0096EB  0843               	dw	2115
  1306  0096ED  085B               	dw	2139
  1307  0096EF  0873               	dw	2163
  1308  0096F1  088B               	dw	2187
  1309  0096F3  08A5               	dw	2213
  1310  0096F5  08BE               	dw	2238
  1311  0096F7  08D8               	dw	2264
  1312  0096F9  08F2               	dw	2290
  1313  0096FB  090D               	dw	2317
  1314  0096FD  0929               	dw	2345
  1315  0096FF  0945               	dw	2373
  1316  009701  0961               	dw	2401
  1317  009703  097E               	dw	2430
  1318  009705  099C               	dw	2460
  1319  009707  09BA               	dw	2490
  1320  009709  09D9               	dw	2521
  1321  00970B  09F9               	dw	2553
  1322  00970D  0A19               	dw	2585
  1323  00970F  0A39               	dw	2617
  1324  009711  0A5B               	dw	2651
  1325  009713  0A7D               	dw	2685
  1326  009715  0A9F               	dw	2719
  1327  009717  0AC3               	dw	2755
  1328  009719  0AE7               	dw	2791
  1329  00971B  0B0C               	dw	2828
  1330  00971D  0B31               	dw	2865
  1331  00971F  0B58               	dw	2904
  1332  009721  0B7F               	dw	2943
  1333  009723  0BA7               	dw	2983
  1334  009725  0BD0               	dw	3024
  1335  009727  0BFA               	dw	3066
  1336  009729  0C25               	dw	3109
  1337  00972B  0C51               	dw	3153
  1338  00972D  0C7E               	dw	3198
  1339  00972F  0CAB               	dw	3243
  1340  009731  0CDA               	dw	3290
  1341  009733  0D0A               	dw	3338
  1342  009735  0D3B               	dw	3387
  1343  009737  0D6D               	dw	3437
  1344  009739  0DA0               	dw	3488
  1345  00973B  0DD4               	dw	3540
  1346  00973D  0E0A               	dw	3594
  1347  00973F  0E41               	dw	3649
  1348  009741  0E79               	dw	3705
  1349  009743  0EB3               	dw	3763
  1350  009745  0EEE               	dw	3822
  1351  009747  0F2A               	dw	3882
  1352  009749  0F68               	dw	3944
  1353  00974B  0FA8               	dw	4008
  1354  00974D  0FE9               	dw	4073
  1355  00974F  102C               	dw	4140
  1356  009751  1070               	dw	4208
  1357  009753  10B6               	dw	4278
  1358  009755  10FE               	dw	4350
  1359  009757  1148               	dw	4424
  1360  009759  1194               	dw	4500
  1361  00975B  11E2               	dw	4578
  1362  00975D  1232               	dw	4658
  1363  00975F  1285               	dw	4741
  1364  009761  12D9               	dw	4825
  1365  009763  1330               	dw	4912
  1366  009765  1389               	dw	5001
  1367  009767  13E5               	dw	5093
  1368  009769  1444               	dw	5188
  1369  00976B  14A5               	dw	5285
  1370  00976D  1509               	dw	5385
  1371  00976F  1570               	dw	5488
  1372  009771  15DA               	dw	5594
  1373  009773  1647               	dw	5703
  1374  009775  16B8               	dw	5816
  1375  009777  172B               	dw	5931
  1376  009779  17A3               	dw	6051
  1377  00977B  181E               	dw	6174
  1378  00977D  189D               	dw	6301
  1379  00977F  1921               	dw	6433
  1380  009781  19A8               	dw	6568
  1381  009783  1A34               	dw	6708
  1382  009785  1AC4               	dw	6852
  1383  009787  1B5A               	dw	7002
  1384  009789  1BF4               	dw	7156
  1385  00978B  1C94               	dw	7316
  1386  00978D  1D39               	dw	7481
  1387  00978F  1DE4               	dw	7652
  1388  009791  1E95               	dw	7829
  1389  009793  1F4C               	dw	8012
  1390  009795  200A               	dw	8202
  1391  009797  20CE               	dw	8398
  1392  009799  219A               	dw	8602
  1393  00979B  226E               	dw	8814
  1394  00979D  234A               	dw	9034
  1395  00979F  242E               	dw	9262
  1396  0097A1  251B               	dw	9499
  1397  0097A3  2612               	dw	9746
  1398  0097A5  2712               	dw	10002
  1399  0097A7  281D               	dw	10269
  1400  0097A9  2932               	dw	10546
  1401  0097AB  2A53               	dw	10835
  1402  0097AD  2B81               	dw	11137
  1403  0097AF  2CBB               	dw	11451
  1404  0097B1  2E03               	dw	11779
  1405  0097B3  2F5A               	dw	12122
  1406  0097B5  30C0               	dw	12480
  1407  0097B7  3236               	dw	12854
  1408  0097B9  33BD               	dw	13245
  1409  0097BB  3557               	dw	13655
  1410  0097BD  35F5               	dw	13813
  1411  0097BF  3661               	dw	13921
  1412  0097C1  36CD               	dw	14029
  1413  0097C3  373B               	dw	14139
  1414  0097C5  37AA               	dw	14250
  1415  0097C7  381B               	dw	14363
  1416  0097C9  388C               	dw	14476
  1417  0097CB  3900               	dw	14592
  1418  0097CD  3974               	dw	14708
  1419  0097CF  39EA               	dw	14826
  1420  0097D1  3A62               	dw	14946
  1421  0097D3  3ADB               	dw	15067
  1422  0097D5  3B55               	dw	15189
  1423  0097D7  3BD1               	dw	15313
  1424  0097D9  3C4E               	dw	15438
  1425  0097DB  3CCD               	dw	15565
  1426  0097DD  3D4E               	dw	15694
  1427  0097DF  3DD0               	dw	15824
  1428  0097E1  3E54               	dw	15956
  1429  0097E3  3EDA               	dw	16090
  1430  0097E5  3F61               	dw	16225
  1431  0097E7  3FEA               	dw	16362
  1432  0097E9  4074               	dw	16500
  1433  0097EB  4101               	dw	16641
  1434  0097ED  418F               	dw	16783
  1435  0097EF  421F               	dw	16927
  1436  0097F1  42B1               	dw	17073
  1437  0097F3  4345               	dw	17221
  1438  0097F5  43DB               	dw	17371
  1439  0097F7  4473               	dw	17523
  1440  0097F9  450D               	dw	17677
  1441  0097FB  45A9               	dw	17833
  1442  0097FD  4647               	dw	17991
  1443  0097FF  46E7               	dw	18151
  1444  009801  4789               	dw	18313
  1445  009803  482E               	dw	18478
  1446  009805  48D5               	dw	18645
  1447  009807  497E               	dw	18814
  1448  009809  4A29               	dw	18985
  1449  00980B  4AD7               	dw	19159
  1450  00980D  4B87               	dw	19335
  1451  00980F  4C3A               	dw	19514
  1452  009811  4CEF               	dw	19695
  1453  009813  4DA6               	dw	19878
  1454  009815  4E61               	dw	20065
  1455  009817  4F1E               	dw	20254
  1456  009819  4FDD               	dw	20445
  1457  00981B  50A0               	dw	20640
  1458  00981D  5165               	dw	20837
  1459  00981F  522D               	dw	21037
  1460  009821  52F8               	dw	21240
  1461  009823  53C6               	dw	21446
  1462  009825  5497               	dw	21655
  1463  009827  556B               	dw	21867
  1464  009829  5642               	dw	22082
  1465  00982B  571C               	dw	22300
  1466  00982D  57FA               	dw	22522
  1467  00982F                     __end_of_motor_steps_lookup:
  1468                           	opt stack 0
  1469  00982F                     _motor_postscaler_lookup:
  1470                           	opt stack 0
  1471  00982F  0C                 	db	12
  1472  009830  07                 	db	7
  1473  009831  05                 	db	5
  1474  009832  04                 	db	4
  1475  009833  04                 	db	4
  1476  009834  03                 	db	3
  1477  009835  03                 	db	3
  1478  009836  03                 	db	3
  1479  009837  02                 	db	2
  1480  009838  02                 	db	2
  1481  009839  02                 	db	2
  1482  00983A  02                 	db	2
  1483  00983B  02                 	db	2
  1484  00983C  02                 	db	2
  1485  00983D  01                 	db	1
  1486  00983E  01                 	db	1
  1487  00983F  01                 	db	1
  1488  009840  01                 	db	1
  1489  009841  01                 	db	1
  1490  009842  01                 	db	1
  1491  009843  01                 	db	1
  1492  009844  01                 	db	1
  1493  009845  01                 	db	1
  1494  009846  01                 	db	1
  1495  009847  01                 	db	1
  1496  009848  01                 	db	1
  1497  009849  01                 	db	1
  1498  00984A  01                 	db	1
  1499  00984B  01                 	db	1
  1500  00984C  01                 	db	1
  1501  00984D  01                 	db	1
  1502  00984E  01                 	db	1
  1503  00984F  01                 	db	1
  1504  009850  01                 	db	1
  1505  009851  01                 	db	1
  1506  009852  01                 	db	1
  1507  009853  01                 	db	1
  1508  009854  01                 	db	1
  1509  009855  01                 	db	1
  1510  009856  01                 	db	1
  1511  009857  01                 	db	1
  1512  009858  01                 	db	1
  1513  009859  01                 	db	1
  1514  00985A  01                 	db	1
  1515  00985B  01                 	db	1
  1516  00985C  01                 	db	1
  1517  00985D  01                 	db	1
  1518  00985E  01                 	db	1
  1519  00985F  01                 	db	1
  1520  009860  01                 	db	1
  1521  009861  01                 	db	1
  1522  009862  01                 	db	1
  1523  009863  01                 	db	1
  1524  009864  01                 	db	1
  1525  009865  01                 	db	1
  1526  009866  01                 	db	1
  1527  009867  01                 	db	1
  1528  009868  01                 	db	1
  1529  009869  01                 	db	1
  1530  00986A  01                 	db	1
  1531  00986B  01                 	db	1
  1532  00986C  01                 	db	1
  1533  00986D  01                 	db	1
  1534  00986E  01                 	db	1
  1535  00986F  01                 	db	1
  1536  009870  01                 	db	1
  1537  009871  01                 	db	1
  1538  009872  01                 	db	1
  1539  009873  01                 	db	1
  1540  009874  01                 	db	1
  1541  009875  01                 	db	1
  1542  009876  01                 	db	1
  1543  009877  01                 	db	1
  1544  009878  01                 	db	1
  1545  009879  01                 	db	1
  1546  00987A  01                 	db	1
  1547  00987B  01                 	db	1
  1548  00987C  01                 	db	1
  1549  00987D  01                 	db	1
  1550  00987E  01                 	db	1
  1551  00987F  01                 	db	1
  1552  009880  01                 	db	1
  1553  009881  01                 	db	1
  1554  009882  01                 	db	1
  1555  009883  01                 	db	1
  1556  009884  01                 	db	1
  1557  009885  01                 	db	1
  1558  009886  01                 	db	1
  1559  009887  01                 	db	1
  1560  009888  01                 	db	1
  1561  009889  01                 	db	1
  1562  00988A  00                 	db	0
  1563  00988B  00                 	db	0
  1564  00988C  00                 	db	0
  1565  00988D  00                 	db	0
  1566  00988E  00                 	db	0
  1567  00988F  00                 	db	0
  1568  009890  00                 	db	0
  1569  009891  00                 	db	0
  1570  009892  00                 	db	0
  1571  009893  00                 	db	0
  1572  009894  00                 	db	0
  1573  009895  00                 	db	0
  1574  009896  00                 	db	0
  1575  009897  00                 	db	0
  1576  009898  00                 	db	0
  1577  009899  00                 	db	0
  1578  00989A  00                 	db	0
  1579  00989B  00                 	db	0
  1580  00989C  00                 	db	0
  1581  00989D  00                 	db	0
  1582  00989E  00                 	db	0
  1583  00989F  00                 	db	0
  1584  0098A0  00                 	db	0
  1585  0098A1  00                 	db	0
  1586  0098A2  00                 	db	0
  1587  0098A3  00                 	db	0
  1588  0098A4  00                 	db	0
  1589  0098A5  00                 	db	0
  1590  0098A6  00                 	db	0
  1591  0098A7  00                 	db	0
  1592  0098A8  00                 	db	0
  1593  0098A9  00                 	db	0
  1594  0098AA  00                 	db	0
  1595  0098AB  00                 	db	0
  1596  0098AC  00                 	db	0
  1597  0098AD  00                 	db	0
  1598  0098AE  00                 	db	0
  1599  0098AF  00                 	db	0
  1600  0098B0  00                 	db	0
  1601  0098B1  00                 	db	0
  1602  0098B2  00                 	db	0
  1603  0098B3  00                 	db	0
  1604  0098B4  00                 	db	0
  1605  0098B5  00                 	db	0
  1606  0098B6  00                 	db	0
  1607  0098B7  00                 	db	0
  1608  0098B8  00                 	db	0
  1609  0098B9  00                 	db	0
  1610  0098BA  00                 	db	0
  1611  0098BB  00                 	db	0
  1612  0098BC  00                 	db	0
  1613  0098BD  00                 	db	0
  1614  0098BE  00                 	db	0
  1615  0098BF  00                 	db	0
  1616  0098C0  00                 	db	0
  1617  0098C1  00                 	db	0
  1618  0098C2  00                 	db	0
  1619  0098C3  00                 	db	0
  1620  0098C4  00                 	db	0
  1621  0098C5  00                 	db	0
  1622  0098C6  00                 	db	0
  1623  0098C7  00                 	db	0
  1624  0098C8  00                 	db	0
  1625  0098C9  00                 	db	0
  1626  0098CA  00                 	db	0
  1627  0098CB  00                 	db	0
  1628  0098CC  00                 	db	0
  1629  0098CD  00                 	db	0
  1630  0098CE  00                 	db	0
  1631  0098CF  00                 	db	0
  1632  0098D0  00                 	db	0
  1633  0098D1  00                 	db	0
  1634  0098D2  00                 	db	0
  1635  0098D3  00                 	db	0
  1636  0098D4  00                 	db	0
  1637  0098D5  00                 	db	0
  1638  0098D6  00                 	db	0
  1639  0098D7  00                 	db	0
  1640  0098D8  00                 	db	0
  1641  0098D9  00                 	db	0
  1642  0098DA  00                 	db	0
  1643  0098DB  00                 	db	0
  1644  0098DC  00                 	db	0
  1645  0098DD  00                 	db	0
  1646  0098DE  00                 	db	0
  1647  0098DF  00                 	db	0
  1648  0098E0  00                 	db	0
  1649  0098E1  00                 	db	0
  1650  0098E2  00                 	db	0
  1651  0098E3  00                 	db	0
  1652  0098E4  00                 	db	0
  1653  0098E5  00                 	db	0
  1654  0098E6  00                 	db	0
  1655  0098E7  00                 	db	0
  1656  0098E8  00                 	db	0
  1657  0098E9  00                 	db	0
  1658  0098EA  00                 	db	0
  1659  0098EB  00                 	db	0
  1660  0098EC  00                 	db	0
  1661  0098ED  00                 	db	0
  1662  0098EE  00                 	db	0
  1663  0098EF  00                 	db	0
  1664  0098F0  00                 	db	0
  1665  0098F1  00                 	db	0
  1666  0098F2  00                 	db	0
  1667  0098F3  00                 	db	0
  1668  0098F4  00                 	db	0
  1669  0098F5  00                 	db	0
  1670  0098F6  00                 	db	0
  1671  0098F7  00                 	db	0
  1672  0098F8  00                 	db	0
  1673  0098F9  00                 	db	0
  1674  0098FA  00                 	db	0
  1675  0098FB  00                 	db	0
  1676  0098FC  00                 	db	0
  1677  0098FD  00                 	db	0
  1678  0098FE  00                 	db	0
  1679  0098FF  00                 	db	0
  1680  009900  00                 	db	0
  1681  009901  00                 	db	0
  1682  009902  00                 	db	0
  1683  009903  00                 	db	0
  1684  009904  00                 	db	0
  1685  009905  00                 	db	0
  1686  009906  00                 	db	0
  1687  009907  00                 	db	0
  1688  009908  00                 	db	0
  1689  009909  00                 	db	0
  1690  00990A  00                 	db	0
  1691  00990B  00                 	db	0
  1692  00990C  00                 	db	0
  1693  00990D  00                 	db	0
  1694  00990E  00                 	db	0
  1695  00990F  00                 	db	0
  1696  009910  00                 	db	0
  1697  009911  00                 	db	0
  1698  009912  00                 	db	0
  1699  009913  00                 	db	0
  1700  009914  00                 	db	0
  1701  009915  00                 	db	0
  1702  009916  00                 	db	0
  1703  009917  00                 	db	0
  1704  009918  00                 	db	0
  1705  009919  00                 	db	0
  1706  00991A  00                 	db	0
  1707  00991B  00                 	db	0
  1708  00991C  00                 	db	0
  1709  00991D  00                 	db	0
  1710  00991E  00                 	db	0
  1711  00991F  00                 	db	0
  1712  009920  00                 	db	0
  1713  009921  00                 	db	0
  1714  009922  00                 	db	0
  1715  009923  00                 	db	0
  1716  009924  00                 	db	0
  1717  009925  00                 	db	0
  1718  009926  00                 	db	0
  1719  009927  00                 	db	0
  1720  009928  00                 	db	0
  1721  009929  00                 	db	0
  1722  00992A  00                 	db	0
  1723  00992B  00                 	db	0
  1724  00992C  00                 	db	0
  1725  00992D  00                 	db	0
  1726  00992E  00                 	db	0
  1727  00992F  00                 	db	0
  1728  009930  00                 	db	0
  1729  009931  00                 	db	0
  1730  009932  00                 	db	0
  1731  009933  00                 	db	0
  1732  009934  00                 	db	0
  1733  009935  00                 	db	0
  1734  009936  00                 	db	0
  1735  009937  00                 	db	0
  1736  009938  00                 	db	0
  1737  009939  00                 	db	0
  1738  00993A  00                 	db	0
  1739  00993B  00                 	db	0
  1740  00993C  00                 	db	0
  1741  00993D  00                 	db	0
  1742  00993E  00                 	db	0
  1743  00993F  00                 	db	0
  1744  009940  00                 	db	0
  1745  009941  00                 	db	0
  1746  009942  00                 	db	0
  1747  009943  00                 	db	0
  1748  009944  00                 	db	0
  1749  009945  00                 	db	0
  1750  009946  00                 	db	0
  1751  009947  00                 	db	0
  1752  009948  00                 	db	0
  1753  009949  00                 	db	0
  1754  00994A  00                 	db	0
  1755  00994B  00                 	db	0
  1756  00994C  00                 	db	0
  1757  00994D  00                 	db	0
  1758  00994E  00                 	db	0
  1759  00994F  00                 	db	0
  1760  009950  00                 	db	0
  1761  009951  00                 	db	0
  1762  009952  00                 	db	0
  1763  009953  00                 	db	0
  1764  009954  00                 	db	0
  1765  009955  00                 	db	0
  1766  009956  00                 	db	0
  1767  009957  00                 	db	0
  1768  009958  00                 	db	0
  1769  009959  00                 	db	0
  1770  00995A  00                 	db	0
  1771  00995B  00                 	db	0
  1772  00995C  00                 	db	0
  1773  00995D  00                 	db	0
  1774  00995E  00                 	db	0
  1775  00995F  00                 	db	0
  1776  009960  00                 	db	0
  1777  009961  00                 	db	0
  1778  009962  00                 	db	0
  1779  009963  00                 	db	0
  1780  009964  00                 	db	0
  1781  009965  00                 	db	0
  1782  009966  00                 	db	0
  1783  009967  00                 	db	0
  1784  009968  00                 	db	0
  1785  009969  00                 	db	0
  1786  00996A  00                 	db	0
  1787  00996B  00                 	db	0
  1788  00996C  00                 	db	0
  1789  00996D  00                 	db	0
  1790  00996E  00                 	db	0
  1791  00996F  00                 	db	0
  1792  009970  00                 	db	0
  1793  009971  00                 	db	0
  1794  009972  00                 	db	0
  1795  009973  00                 	db	0
  1796  009974  00                 	db	0
  1797  009975  00                 	db	0
  1798  009976  00                 	db	0
  1799  009977  00                 	db	0
  1800  009978  00                 	db	0
  1801  009979  00                 	db	0
  1802  00997A  00                 	db	0
  1803  00997B  00                 	db	0
  1804  00997C  00                 	db	0
  1805  00997D  00                 	db	0
  1806  00997E  00                 	db	0
  1807  00997F  00                 	db	0
  1808  009980  00                 	db	0
  1809  009981  00                 	db	0
  1810  009982  00                 	db	0
  1811  009983  00                 	db	0
  1812  009984  00                 	db	0
  1813  009985  00                 	db	0
  1814  009986  00                 	db	0
  1815  009987  00                 	db	0
  1816  009988  00                 	db	0
  1817  009989  00                 	db	0
  1818  00998A  00                 	db	0
  1819  00998B  00                 	db	0
  1820  00998C  00                 	db	0
  1821  00998D  00                 	db	0
  1822  00998E  00                 	db	0
  1823  00998F  00                 	db	0
  1824  009990  00                 	db	0
  1825  009991  00                 	db	0
  1826  009992  00                 	db	0
  1827  009993  00                 	db	0
  1828  009994  00                 	db	0
  1829  009995  00                 	db	0
  1830  009996  00                 	db	0
  1831  009997  00                 	db	0
  1832  009998  00                 	db	0
  1833  009999  00                 	db	0
  1834  00999A  00                 	db	0
  1835  00999B  00                 	db	0
  1836  00999C  00                 	db	0
  1837  00999D  00                 	db	0
  1838  00999E  00                 	db	0
  1839  00999F  00                 	db	0
  1840  0099A0  00                 	db	0
  1841  0099A1  00                 	db	0
  1842  0099A2  00                 	db	0
  1843  0099A3  00                 	db	0
  1844  0099A4  00                 	db	0
  1845  0099A5  00                 	db	0
  1846  0099A6  00                 	db	0
  1847  0099A7  00                 	db	0
  1848  0099A8  00                 	db	0
  1849  0099A9  00                 	db	0
  1850  0099AA  00                 	db	0
  1851  0099AB  00                 	db	0
  1852  0099AC  00                 	db	0
  1853  0099AD  00                 	db	0
  1854  0099AE  00                 	db	0
  1855  0099AF  00                 	db	0
  1856  0099B0  00                 	db	0
  1857  0099B1  00                 	db	0
  1858  0099B2  00                 	db	0
  1859  0099B3  00                 	db	0
  1860  0099B4  00                 	db	0
  1861  0099B5  00                 	db	0
  1862  0099B6  00                 	db	0
  1863  0099B7  00                 	db	0
  1864  0099B8  00                 	db	0
  1865  0099B9  00                 	db	0
  1866  0099BA  00                 	db	0
  1867  0099BB  00                 	db	0
  1868  0099BC  00                 	db	0
  1869  0099BD  00                 	db	0
  1870  0099BE  00                 	db	0
  1871  0099BF  00                 	db	0
  1872  0099C0  00                 	db	0
  1873  0099C1  00                 	db	0
  1874  0099C2  00                 	db	0
  1875  0099C3  00                 	db	0
  1876  0099C4  00                 	db	0
  1877  0099C5  00                 	db	0
  1878  0099C6  00                 	db	0
  1879  0099C7  00                 	db	0
  1880  0099C8  00                 	db	0
  1881  0099C9  00                 	db	0
  1882  0099CA  00                 	db	0
  1883  0099CB  00                 	db	0
  1884  0099CC  00                 	db	0
  1885  0099CD  00                 	db	0
  1886  0099CE  00                 	db	0
  1887  0099CF  00                 	db	0
  1888  0099D0  00                 	db	0
  1889  0099D1  00                 	db	0
  1890  0099D2  00                 	db	0
  1891  0099D3  00                 	db	0
  1892  0099D4  00                 	db	0
  1893  0099D5  00                 	db	0
  1894  0099D6  00                 	db	0
  1895  0099D7  00                 	db	0
  1896  0099D8  00                 	db	0
  1897  0099D9  00                 	db	0
  1898  0099DA  00                 	db	0
  1899  0099DB  00                 	db	0
  1900  0099DC  00                 	db	0
  1901  0099DD  00                 	db	0
  1902  0099DE  00                 	db	0
  1903  0099DF  00                 	db	0
  1904  0099E0  00                 	db	0
  1905  0099E1  00                 	db	0
  1906  0099E2  00                 	db	0
  1907  0099E3  00                 	db	0
  1908  0099E4  00                 	db	0
  1909  0099E5  00                 	db	0
  1910  0099E6  00                 	db	0
  1911  0099E7  00                 	db	0
  1912  0099E8  00                 	db	0
  1913  0099E9  00                 	db	0
  1914  0099EA  00                 	db	0
  1915  0099EB  00                 	db	0
  1916  0099EC  00                 	db	0
  1917  0099ED  00                 	db	0
  1918  0099EE  00                 	db	0
  1919  0099EF  00                 	db	0
  1920  0099F0  00                 	db	0
  1921  0099F1  00                 	db	0
  1922  0099F2  00                 	db	0
  1923  0099F3  00                 	db	0
  1924  0099F4  00                 	db	0
  1925  0099F5  00                 	db	0
  1926  0099F6  00                 	db	0
  1927  0099F7  00                 	db	0
  1928  0099F8  00                 	db	0
  1929  0099F9  00                 	db	0
  1930  0099FA  00                 	db	0
  1931  0099FB  00                 	db	0
  1932  0099FC  00                 	db	0
  1933  0099FD  00                 	db	0
  1934  0099FE  00                 	db	0
  1935  0099FF  00                 	db	0
  1936  009A00  00                 	db	0
  1937  009A01  00                 	db	0
  1938  009A02  00                 	db	0
  1939  009A03  00                 	db	0
  1940  009A04  00                 	db	0
  1941  009A05  00                 	db	0
  1942  009A06  00                 	db	0
  1943  009A07  00                 	db	0
  1944  009A08  00                 	db	0
  1945  009A09  00                 	db	0
  1946  009A0A  00                 	db	0
  1947  009A0B  00                 	db	0
  1948  009A0C  00                 	db	0
  1949  009A0D  00                 	db	0
  1950  009A0E  00                 	db	0
  1951  009A0F  00                 	db	0
  1952  009A10  00                 	db	0
  1953  009A11  00                 	db	0
  1954  009A12  00                 	db	0
  1955  009A13  00                 	db	0
  1956  009A14  00                 	db	0
  1957  009A15  00                 	db	0
  1958  009A16                     __end_of_motor_postscaler_lookup:
  1959                           	opt stack 0
  1960  009A16                     _motor_period_lookup:
  1961                           	opt stack 0
  1962  009A16  EC                 	db	236
  1963  009A17  F2                 	db	242
  1964  009A18  F6                 	db	246
  1965  009A19  F4                 	db	244
  1966  009A1A  D2                 	db	210
  1967  009A1B  E8                 	db	232
  1968  009A1C  D2                 	db	210
  1969  009A1D  C0                 	db	192
  1970  009A1E  EC                 	db	236
  1971  009A1F  DC                 	db	220
  1972  009A20  CF                 	db	207
  1973  009A21  C3                 	db	195
  1974  009A22  B9                 	db	185
  1975  009A23  B0                 	db	176
  1976  009A24  FC                 	db	252
  1977  009A25  F2                 	db	242
  1978  009A26  E8                 	db	232
  1979  009A27  DF                 	db	223
  1980  009A28  D7                 	db	215
  1981  009A29  D0                 	db	208
  1982  009A2A  CA                 	db	202
  1983  009A2B  C3                 	db	195
  1984  009A2C  BE                 	db	190
  1985  009A2D  B8                 	db	184
  1986  009A2E  B3                 	db	179
  1987  009A2F  AF                 	db	175
  1988  009A30  AA                 	db	170
  1989  009A31  A6                 	db	166
  1990  009A32  A2                 	db	162
  1991  009A33  9F                 	db	159
  1992  009A34  9B                 	db	155
  1993  009A35  98                 	db	152
  1994  009A36  95                 	db	149
  1995  009A37  92                 	db	146
  1996  009A38  8F                 	db	143
  1997  009A39  8C                 	db	140
  1998  009A3A  8A                 	db	138
  1999  009A3B  87                 	db	135
  2000  009A3C  85                 	db	133
  2001  009A3D  83                 	db	131
  2002  009A3E  81                 	db	129
  2003  009A3F  7F                 	db	127
  2004  009A40  7D                 	db	125
  2005  009A41  7B                 	db	123
  2006  009A42  79                 	db	121
  2007  009A43  77                 	db	119
  2008  009A44  75                 	db	117
  2009  009A45  74                 	db	116
  2010  009A46  72                 	db	114
  2011  009A47  71                 	db	113
  2012  009A48  6F                 	db	111
  2013  009A49  6E                 	db	110
  2014  009A4A  6C                 	db	108
  2015  009A4B  6B                 	db	107
  2016  009A4C  6A                 	db	106
  2017  009A4D  68                 	db	104
  2018  009A4E  67                 	db	103
  2019  009A4F  66                 	db	102
  2020  009A50  65                 	db	101
  2021  009A51  64                 	db	100
  2022  009A52  62                 	db	98
  2023  009A53  61                 	db	97
  2024  009A54  60                 	db	96
  2025  009A55  5F                 	db	95
  2026  009A56  5E                 	db	94
  2027  009A57  5D                 	db	93
  2028  009A58  5C                 	db	92
  2029  009A59  5B                 	db	91
  2030  009A5A  59                 	db	89
  2031  009A5B  57                 	db	87
  2032  009A5C  56                 	db	86
  2033  009A5D  54                 	db	84
  2034  009A5E  53                 	db	83
  2035  009A5F  51                 	db	81
  2036  009A60  50                 	db	80
  2037  009A61  4F                 	db	79
  2038  009A62  4E                 	db	78
  2039  009A63  4C                 	db	76
  2040  009A64  4B                 	db	75
  2041  009A65  4A                 	db	74
  2042  009A66  49                 	db	73
  2043  009A67  48                 	db	72
  2044  009A68  47                 	db	71
  2045  009A69  46                 	db	70
  2046  009A6A  45                 	db	69
  2047  009A6B  44                 	db	68
  2048  009A6C  43                 	db	67
  2049  009A6D  42                 	db	66
  2050  009A6E  41                 	db	65
  2051  009A6F  40                 	db	64
  2052  009A70  3F                 	db	63
  2053  009A71  FE                 	db	254
  2054  009A72  FB                 	db	251
  2055  009A73  F8                 	db	248
  2056  009A74  F6                 	db	246
  2057  009A75  F3                 	db	243
  2058  009A76  F0                 	db	240
  2059  009A77  EE                 	db	238
  2060  009A78  EC                 	db	236
  2061  009A79  E9                 	db	233
  2062  009A7A  E7                 	db	231
  2063  009A7B  E5                 	db	229
  2064  009A7C  E3                 	db	227
  2065  009A7D  E0                 	db	224
  2066  009A7E  DE                 	db	222
  2067  009A7F  DC                 	db	220
  2068  009A80  DA                 	db	218
  2069  009A81  D8                 	db	216
  2070  009A82  D7                 	db	215
  2071  009A83  D5                 	db	213
  2072  009A84  D3                 	db	211
  2073  009A85  D1                 	db	209
  2074  009A86  CF                 	db	207
  2075  009A87  CE                 	db	206
  2076  009A88  CC                 	db	204
  2077  009A89  CA                 	db	202
  2078  009A8A  C9                 	db	201
  2079  009A8B  C7                 	db	199
  2080  009A8C  C6                 	db	198
  2081  009A8D  C4                 	db	196
  2082  009A8E  C3                 	db	195
  2083  009A8F  C1                 	db	193
  2084  009A90  C0                 	db	192
  2085  009A91  BE                 	db	190
  2086  009A92  BD                 	db	189
  2087  009A93  BC                 	db	188
  2088  009A94  BA                 	db	186
  2089  009A95  B8                 	db	184
  2090  009A96  B6                 	db	182
  2091  009A97  B4                 	db	180
  2092  009A98  B3                 	db	179
  2093  009A99  B1                 	db	177
  2094  009A9A  AF                 	db	175
  2095  009A9B  AE                 	db	174
  2096  009A9C  AC                 	db	172
  2097  009A9D  AA                 	db	170
  2098  009A9E  A9                 	db	169
  2099  009A9F  A7                 	db	167
  2100  009AA0  A6                 	db	166
  2101  009AA1  A4                 	db	164
  2102  009AA2  A3                 	db	163
  2103  009AA3  A1                 	db	161
  2104  009AA4  A0                 	db	160
  2105  009AA5  9F                 	db	159
  2106  009AA6  9D                 	db	157
  2107  009AA7  9C                 	db	156
  2108  009AA8  9B                 	db	155
  2109  009AA9  9A                 	db	154
  2110  009AAA  98                 	db	152
  2111  009AAB  97                 	db	151
  2112  009AAC  96                 	db	150
  2113  009AAD  95                 	db	149
  2114  009AAE  94                 	db	148
  2115  009AAF  93                 	db	147
  2116  009AB0  92                 	db	146
  2117  009AB1  90                 	db	144
  2118  009AB2  8F                 	db	143
  2119  009AB3  8E                 	db	142
  2120  009AB4  8D                 	db	141
  2121  009AB5  8C                 	db	140
  2122  009AB6  8B                 	db	139
  2123  009AB7  8A                 	db	138
  2124  009AB8  89                 	db	137
  2125  009AB9  88                 	db	136
  2126  009ABA  87                 	db	135
  2127  009ABB  86                 	db	134
  2128  009ABC  85                 	db	133
  2129  009ABD  84                 	db	132
  2130  009ABE  83                 	db	131
  2131  009ABF  82                 	db	130
  2132  009AC0  81                 	db	129
  2133  009AC1  80                 	db	128
  2134  009AC2  7F                 	db	127
  2135  009AC3  7E                 	db	126
  2136  009AC4  7D                 	db	125
  2137  009AC5  7C                 	db	124
  2138  009AC6  7B                 	db	123
  2139  009AC7  7A                 	db	122
  2140  009AC8  79                 	db	121
  2141  009AC9  78                 	db	120
  2142  009ACA  77                 	db	119
  2143  009ACB  76                 	db	118
  2144  009ACC  75                 	db	117
  2145  009ACD  74                 	db	116
  2146  009ACE  73                 	db	115
  2147  009ACF  72                 	db	114
  2148  009AD0  71                 	db	113
  2149  009AD1  70                 	db	112
  2150  009AD2  6F                 	db	111
  2151  009AD3  6E                 	db	110
  2152  009AD4  6D                 	db	109
  2153  009AD5  6C                 	db	108
  2154  009AD6  6B                 	db	107
  2155  009AD7  6A                 	db	106
  2156  009AD8  69                 	db	105
  2157  009AD9  68                 	db	104
  2158  009ADA  67                 	db	103
  2159  009ADB  66                 	db	102
  2160  009ADC  65                 	db	101
  2161  009ADD  64                 	db	100
  2162  009ADE  63                 	db	99
  2163  009ADF  62                 	db	98
  2164  009AE0  61                 	db	97
  2165  009AE1  60                 	db	96
  2166  009AE2  5F                 	db	95
  2167  009AE3  5E                 	db	94
  2168  009AE4  5D                 	db	93
  2169  009AE5  5C                 	db	92
  2170  009AE6  5B                 	db	91
  2171  009AE7  5A                 	db	90
  2172  009AE8  59                 	db	89
  2173  009AE9  58                 	db	88
  2174  009AEA  57                 	db	87
  2175  009AEB  56                 	db	86
  2176  009AEC  55                 	db	85
  2177  009AED  54                 	db	84
  2178  009AEE  53                 	db	83
  2179  009AEF  52                 	db	82
  2180  009AF0  51                 	db	81
  2181  009AF1  50                 	db	80
  2182  009AF2  4F                 	db	79
  2183  009AF3  4E                 	db	78
  2184  009AF4  4D                 	db	77
  2185  009AF5  4C                 	db	76
  2186  009AF6  4B                 	db	75
  2187  009AF7  4A                 	db	74
  2188  009AF8  49                 	db	73
  2189  009AF9  48                 	db	72
  2190  009AFA  47                 	db	71
  2191  009AFB  46                 	db	70
  2192  009AFC  45                 	db	69
  2193  009AFD  44                 	db	68
  2194  009AFE  43                 	db	67
  2195  009AFF  42                 	db	66
  2196  009B00  41                 	db	65
  2197  009B01  40                 	db	64
  2198  009B02  3F                 	db	63
  2199  009B03  FF                 	db	255
  2200  009B04  FE                 	db	254
  2201  009B05  FD                 	db	253
  2202  009B06  FC                 	db	252
  2203  009B07  FB                 	db	251
  2204  009B08  FA                 	db	250
  2205  009B09  F9                 	db	249
  2206  009B0A  F8                 	db	248
  2207  009B0B  F7                 	db	247
  2208  009B0C  F6                 	db	246
  2209  009B0D  F5                 	db	245
  2210  009B0E  F4                 	db	244
  2211  009B0F  F3                 	db	243
  2212  009B10  F2                 	db	242
  2213  009B11  F1                 	db	241
  2214  009B12  F0                 	db	240
  2215  009B13  EF                 	db	239
  2216  009B14  EE                 	db	238
  2217  009B15  ED                 	db	237
  2218  009B16  EC                 	db	236
  2219  009B17  EB                 	db	235
  2220  009B18  EA                 	db	234
  2221  009B19  E9                 	db	233
  2222  009B1A  E8                 	db	232
  2223  009B1B  E7                 	db	231
  2224  009B1C  E6                 	db	230
  2225  009B1D  E5                 	db	229
  2226  009B1E  E4                 	db	228
  2227  009B1F  E3                 	db	227
  2228  009B20  E2                 	db	226
  2229  009B21  E1                 	db	225
  2230  009B22  E0                 	db	224
  2231  009B23  DF                 	db	223
  2232  009B24  DE                 	db	222
  2233  009B25  DD                 	db	221
  2234  009B26  DC                 	db	220
  2235  009B27  DB                 	db	219
  2236  009B28  DA                 	db	218
  2237  009B29  D9                 	db	217
  2238  009B2A  D8                 	db	216
  2239  009B2B  D7                 	db	215
  2240  009B2C  D6                 	db	214
  2241  009B2D  D5                 	db	213
  2242  009B2E  D4                 	db	212
  2243  009B2F  D3                 	db	211
  2244  009B30  D2                 	db	210
  2245  009B31  D1                 	db	209
  2246  009B32  D0                 	db	208
  2247  009B33  CF                 	db	207
  2248  009B34  CE                 	db	206
  2249  009B35  CD                 	db	205
  2250  009B36  CC                 	db	204
  2251  009B37  CB                 	db	203
  2252  009B38  CA                 	db	202
  2253  009B39  C9                 	db	201
  2254  009B3A  C8                 	db	200
  2255  009B3B  C7                 	db	199
  2256  009B3C  C6                 	db	198
  2257  009B3D  C5                 	db	197
  2258  009B3E  C4                 	db	196
  2259  009B3F  C3                 	db	195
  2260  009B40  C2                 	db	194
  2261  009B41  C1                 	db	193
  2262  009B42  C0                 	db	192
  2263  009B43  BF                 	db	191
  2264  009B44  BE                 	db	190
  2265  009B45  BD                 	db	189
  2266  009B46  BC                 	db	188
  2267  009B47  BB                 	db	187
  2268  009B48  BA                 	db	186
  2269  009B49  B9                 	db	185
  2270  009B4A  B8                 	db	184
  2271  009B4B  B7                 	db	183
  2272  009B4C  B6                 	db	182
  2273  009B4D  B5                 	db	181
  2274  009B4E  B4                 	db	180
  2275  009B4F  B3                 	db	179
  2276  009B50  B2                 	db	178
  2277  009B51  B1                 	db	177
  2278  009B52  B0                 	db	176
  2279  009B53  AF                 	db	175
  2280  009B54  AE                 	db	174
  2281  009B55  AD                 	db	173
  2282  009B56  AC                 	db	172
  2283  009B57  AB                 	db	171
  2284  009B58  AA                 	db	170
  2285  009B59  A9                 	db	169
  2286  009B5A  A8                 	db	168
  2287  009B5B  A7                 	db	167
  2288  009B5C  A6                 	db	166
  2289  009B5D  A5                 	db	165
  2290  009B5E  A4                 	db	164
  2291  009B5F  A3                 	db	163
  2292  009B60  A2                 	db	162
  2293  009B61  A1                 	db	161
  2294  009B62  A0                 	db	160
  2295  009B63  9F                 	db	159
  2296  009B64  9E                 	db	158
  2297  009B65  9D                 	db	157
  2298  009B66  9C                 	db	156
  2299  009B67  9B                 	db	155
  2300  009B68  9A                 	db	154
  2301  009B69  99                 	db	153
  2302  009B6A  98                 	db	152
  2303  009B6B  97                 	db	151
  2304  009B6C  96                 	db	150
  2305  009B6D  95                 	db	149
  2306  009B6E  94                 	db	148
  2307  009B6F  93                 	db	147
  2308  009B70  92                 	db	146
  2309  009B71  91                 	db	145
  2310  009B72  90                 	db	144
  2311  009B73  8F                 	db	143
  2312  009B74  8E                 	db	142
  2313  009B75  8D                 	db	141
  2314  009B76  8C                 	db	140
  2315  009B77  8B                 	db	139
  2316  009B78  8A                 	db	138
  2317  009B79  89                 	db	137
  2318  009B7A  88                 	db	136
  2319  009B7B  87                 	db	135
  2320  009B7C  86                 	db	134
  2321  009B7D  85                 	db	133
  2322  009B7E  84                 	db	132
  2323  009B7F  83                 	db	131
  2324  009B80  82                 	db	130
  2325  009B81  81                 	db	129
  2326  009B82  80                 	db	128
  2327  009B83  7F                 	db	127
  2328  009B84  7E                 	db	126
  2329  009B85  7D                 	db	125
  2330  009B86  7C                 	db	124
  2331  009B87  7B                 	db	123
  2332  009B88  7A                 	db	122
  2333  009B89  79                 	db	121
  2334  009B8A  78                 	db	120
  2335  009B8B  77                 	db	119
  2336  009B8C  76                 	db	118
  2337  009B8D  75                 	db	117
  2338  009B8E  74                 	db	116
  2339  009B8F  73                 	db	115
  2340  009B90  72                 	db	114
  2341  009B91  71                 	db	113
  2342  009B92  70                 	db	112
  2343  009B93  6F                 	db	111
  2344  009B94  6E                 	db	110
  2345  009B95  6D                 	db	109
  2346  009B96  6C                 	db	108
  2347  009B97  6B                 	db	107
  2348  009B98  6A                 	db	106
  2349  009B99  69                 	db	105
  2350  009B9A  68                 	db	104
  2351  009B9B  67                 	db	103
  2352  009B9C  66                 	db	102
  2353  009B9D  65                 	db	101
  2354  009B9E  64                 	db	100
  2355  009B9F  63                 	db	99
  2356  009BA0  62                 	db	98
  2357  009BA1  61                 	db	97
  2358  009BA2  60                 	db	96
  2359  009BA3  5F                 	db	95
  2360  009BA4  5E                 	db	94
  2361  009BA5  5D                 	db	93
  2362  009BA6  5C                 	db	92
  2363  009BA7  5B                 	db	91
  2364  009BA8  5A                 	db	90
  2365  009BA9  59                 	db	89
  2366  009BAA  58                 	db	88
  2367  009BAB  57                 	db	87
  2368  009BAC  56                 	db	86
  2369  009BAD  55                 	db	85
  2370  009BAE  54                 	db	84
  2371  009BAF  53                 	db	83
  2372  009BB0  52                 	db	82
  2373  009BB1  51                 	db	81
  2374  009BB2  50                 	db	80
  2375  009BB3  4F                 	db	79
  2376  009BB4  4E                 	db	78
  2377  009BB5  4D                 	db	77
  2378  009BB6  4C                 	db	76
  2379  009BB7  4B                 	db	75
  2380  009BB8  4A                 	db	74
  2381  009BB9  49                 	db	73
  2382  009BBA  48                 	db	72
  2383  009BBB  47                 	db	71
  2384  009BBC  46                 	db	70
  2385  009BBD  45                 	db	69
  2386  009BBE  44                 	db	68
  2387  009BBF  43                 	db	67
  2388  009BC0  42                 	db	66
  2389  009BC1  41                 	db	65
  2390  009BC2  40                 	db	64
  2391  009BC3  3F                 	db	63
  2392  009BC4  FF                 	db	255
  2393  009BC5  FE                 	db	254
  2394  009BC6  FD                 	db	253
  2395  009BC7  FC                 	db	252
  2396  009BC8  FB                 	db	251
  2397  009BC9  FA                 	db	250
  2398  009BCA  F9                 	db	249
  2399  009BCB  F8                 	db	248
  2400  009BCC  F7                 	db	247
  2401  009BCD  F6                 	db	246
  2402  009BCE  F5                 	db	245
  2403  009BCF  F4                 	db	244
  2404  009BD0  F3                 	db	243
  2405  009BD1  F2                 	db	242
  2406  009BD2  F1                 	db	241
  2407  009BD3  F0                 	db	240
  2408  009BD4  EF                 	db	239
  2409  009BD5  EE                 	db	238
  2410  009BD6  ED                 	db	237
  2411  009BD7  EC                 	db	236
  2412  009BD8  EB                 	db	235
  2413  009BD9  EA                 	db	234
  2414  009BDA  E9                 	db	233
  2415  009BDB  E8                 	db	232
  2416  009BDC  E7                 	db	231
  2417  009BDD  E6                 	db	230
  2418  009BDE  E5                 	db	229
  2419  009BDF  E4                 	db	228
  2420  009BE0  E3                 	db	227
  2421  009BE1  E2                 	db	226
  2422  009BE2  E1                 	db	225
  2423  009BE3  E0                 	db	224
  2424  009BE4  DF                 	db	223
  2425  009BE5  DE                 	db	222
  2426  009BE6  DD                 	db	221
  2427  009BE7  DC                 	db	220
  2428  009BE8  DB                 	db	219
  2429  009BE9  DA                 	db	218
  2430  009BEA  D9                 	db	217
  2431  009BEB  D8                 	db	216
  2432  009BEC  D7                 	db	215
  2433  009BED  D6                 	db	214
  2434  009BEE  D5                 	db	213
  2435  009BEF  D4                 	db	212
  2436  009BF0  D3                 	db	211
  2437  009BF1  D2                 	db	210
  2438  009BF2  D1                 	db	209
  2439  009BF3  D0                 	db	208
  2440  009BF4  CF                 	db	207
  2441  009BF5  CE                 	db	206
  2442  009BF6  CD                 	db	205
  2443  009BF7  CC                 	db	204
  2444  009BF8  CB                 	db	203
  2445  009BF9  CA                 	db	202
  2446  009BFA  C9                 	db	201
  2447  009BFB  C8                 	db	200
  2448  009BFC  C7                 	db	199
  2449  009BFD                     __end_of_motor_period_lookup:
  2450                           	opt stack 0
  2451  009BFD                     _motor_prescaler_lookup:
  2452                           	opt stack 0
  2453  009BFD  02                 	db	2
  2454  009BFE  02                 	db	2
  2455  009BFF  02                 	db	2
  2456  009C00  02                 	db	2
  2457  009C01  02                 	db	2
  2458  009C02  02                 	db	2
  2459  009C03  02                 	db	2
  2460  009C04  02                 	db	2
  2461  009C05  02                 	db	2
  2462  009C06  02                 	db	2
  2463  009C07  02                 	db	2
  2464  009C08  02                 	db	2
  2465  009C09  02                 	db	2
  2466  009C0A  02                 	db	2
  2467  009C0B  02                 	db	2
  2468  009C0C  02                 	db	2
  2469  009C0D  02                 	db	2
  2470  009C0E  02                 	db	2
  2471  009C0F  02                 	db	2
  2472  009C10  02                 	db	2
  2473  009C11  02                 	db	2
  2474  009C12  02                 	db	2
  2475  009C13  02                 	db	2
  2476  009C14  02                 	db	2
  2477  009C15  02                 	db	2
  2478  009C16  02                 	db	2
  2479  009C17  02                 	db	2
  2480  009C18  02                 	db	2
  2481  009C19  02                 	db	2
  2482  009C1A  02                 	db	2
  2483  009C1B  02                 	db	2
  2484  009C1C  02                 	db	2
  2485  009C1D  02                 	db	2
  2486  009C1E  02                 	db	2
  2487  009C1F  02                 	db	2
  2488  009C20  02                 	db	2
  2489  009C21  02                 	db	2
  2490  009C22  02                 	db	2
  2491  009C23  02                 	db	2
  2492  009C24  02                 	db	2
  2493  009C25  02                 	db	2
  2494  009C26  02                 	db	2
  2495  009C27  02                 	db	2
  2496  009C28  02                 	db	2
  2497  009C29  02                 	db	2
  2498  009C2A  02                 	db	2
  2499  009C2B  02                 	db	2
  2500  009C2C  02                 	db	2
  2501  009C2D  02                 	db	2
  2502  009C2E  02                 	db	2
  2503  009C2F  02                 	db	2
  2504  009C30  02                 	db	2
  2505  009C31  02                 	db	2
  2506  009C32  02                 	db	2
  2507  009C33  02                 	db	2
  2508  009C34  02                 	db	2
  2509  009C35  02                 	db	2
  2510  009C36  02                 	db	2
  2511  009C37  02                 	db	2
  2512  009C38  02                 	db	2
  2513  009C39  02                 	db	2
  2514  009C3A  02                 	db	2
  2515  009C3B  02                 	db	2
  2516  009C3C  02                 	db	2
  2517  009C3D  02                 	db	2
  2518  009C3E  02                 	db	2
  2519  009C3F  02                 	db	2
  2520  009C40  02                 	db	2
  2521  009C41  02                 	db	2
  2522  009C42  02                 	db	2
  2523  009C43  02                 	db	2
  2524  009C44  02                 	db	2
  2525  009C45  02                 	db	2
  2526  009C46  02                 	db	2
  2527  009C47  02                 	db	2
  2528  009C48  02                 	db	2
  2529  009C49  02                 	db	2
  2530  009C4A  02                 	db	2
  2531  009C4B  02                 	db	2
  2532  009C4C  02                 	db	2
  2533  009C4D  02                 	db	2
  2534  009C4E  02                 	db	2
  2535  009C4F  02                 	db	2
  2536  009C50  02                 	db	2
  2537  009C51  02                 	db	2
  2538  009C52  02                 	db	2
  2539  009C53  02                 	db	2
  2540  009C54  02                 	db	2
  2541  009C55  02                 	db	2
  2542  009C56  02                 	db	2
  2543  009C57  02                 	db	2
  2544  009C58  02                 	db	2
  2545  009C59  02                 	db	2
  2546  009C5A  02                 	db	2
  2547  009C5B  02                 	db	2
  2548  009C5C  02                 	db	2
  2549  009C5D  02                 	db	2
  2550  009C5E  02                 	db	2
  2551  009C5F  02                 	db	2
  2552  009C60  02                 	db	2
  2553  009C61  02                 	db	2
  2554  009C62  02                 	db	2
  2555  009C63  02                 	db	2
  2556  009C64  02                 	db	2
  2557  009C65  02                 	db	2
  2558  009C66  02                 	db	2
  2559  009C67  02                 	db	2
  2560  009C68  02                 	db	2
  2561  009C69  02                 	db	2
  2562  009C6A  02                 	db	2
  2563  009C6B  02                 	db	2
  2564  009C6C  02                 	db	2
  2565  009C6D  02                 	db	2
  2566  009C6E  02                 	db	2
  2567  009C6F  02                 	db	2
  2568  009C70  02                 	db	2
  2569  009C71  02                 	db	2
  2570  009C72  02                 	db	2
  2571  009C73  02                 	db	2
  2572  009C74  02                 	db	2
  2573  009C75  02                 	db	2
  2574  009C76  02                 	db	2
  2575  009C77  02                 	db	2
  2576  009C78  02                 	db	2
  2577  009C79  02                 	db	2
  2578  009C7A  02                 	db	2
  2579  009C7B  02                 	db	2
  2580  009C7C  02                 	db	2
  2581  009C7D  02                 	db	2
  2582  009C7E  02                 	db	2
  2583  009C7F  02                 	db	2
  2584  009C80  02                 	db	2
  2585  009C81  02                 	db	2
  2586  009C82  02                 	db	2
  2587  009C83  02                 	db	2
  2588  009C84  02                 	db	2
  2589  009C85  02                 	db	2
  2590  009C86  02                 	db	2
  2591  009C87  02                 	db	2
  2592  009C88  02                 	db	2
  2593  009C89  02                 	db	2
  2594  009C8A  02                 	db	2
  2595  009C8B  02                 	db	2
  2596  009C8C  02                 	db	2
  2597  009C8D  02                 	db	2
  2598  009C8E  02                 	db	2
  2599  009C8F  02                 	db	2
  2600  009C90  02                 	db	2
  2601  009C91  02                 	db	2
  2602  009C92  02                 	db	2
  2603  009C93  02                 	db	2
  2604  009C94  02                 	db	2
  2605  009C95  02                 	db	2
  2606  009C96  02                 	db	2
  2607  009C97  02                 	db	2
  2608  009C98  02                 	db	2
  2609  009C99  02                 	db	2
  2610  009C9A  02                 	db	2
  2611  009C9B  02                 	db	2
  2612  009C9C  02                 	db	2
  2613  009C9D  02                 	db	2
  2614  009C9E  02                 	db	2
  2615  009C9F  02                 	db	2
  2616  009CA0  02                 	db	2
  2617  009CA1  02                 	db	2
  2618  009CA2  02                 	db	2
  2619  009CA3  02                 	db	2
  2620  009CA4  02                 	db	2
  2621  009CA5  02                 	db	2
  2622  009CA6  02                 	db	2
  2623  009CA7  02                 	db	2
  2624  009CA8  02                 	db	2
  2625  009CA9  02                 	db	2
  2626  009CAA  02                 	db	2
  2627  009CAB  02                 	db	2
  2628  009CAC  02                 	db	2
  2629  009CAD  02                 	db	2
  2630  009CAE  02                 	db	2
  2631  009CAF  02                 	db	2
  2632  009CB0  02                 	db	2
  2633  009CB1  02                 	db	2
  2634  009CB2  02                 	db	2
  2635  009CB3  02                 	db	2
  2636  009CB4  02                 	db	2
  2637  009CB5  02                 	db	2
  2638  009CB6  02                 	db	2
  2639  009CB7  02                 	db	2
  2640  009CB8  02                 	db	2
  2641  009CB9  02                 	db	2
  2642  009CBA  02                 	db	2
  2643  009CBB  02                 	db	2
  2644  009CBC  02                 	db	2
  2645  009CBD  02                 	db	2
  2646  009CBE  02                 	db	2
  2647  009CBF  02                 	db	2
  2648  009CC0  02                 	db	2
  2649  009CC1  02                 	db	2
  2650  009CC2  02                 	db	2
  2651  009CC3  02                 	db	2
  2652  009CC4  02                 	db	2
  2653  009CC5  02                 	db	2
  2654  009CC6  02                 	db	2
  2655  009CC7  02                 	db	2
  2656  009CC8  02                 	db	2
  2657  009CC9  02                 	db	2
  2658  009CCA  02                 	db	2
  2659  009CCB  02                 	db	2
  2660  009CCC  02                 	db	2
  2661  009CCD  02                 	db	2
  2662  009CCE  02                 	db	2
  2663  009CCF  02                 	db	2
  2664  009CD0  02                 	db	2
  2665  009CD1  02                 	db	2
  2666  009CD2  02                 	db	2
  2667  009CD3  02                 	db	2
  2668  009CD4  02                 	db	2
  2669  009CD5  02                 	db	2
  2670  009CD6  02                 	db	2
  2671  009CD7  02                 	db	2
  2672  009CD8  02                 	db	2
  2673  009CD9  02                 	db	2
  2674  009CDA  02                 	db	2
  2675  009CDB  02                 	db	2
  2676  009CDC  02                 	db	2
  2677  009CDD  02                 	db	2
  2678  009CDE  02                 	db	2
  2679  009CDF  02                 	db	2
  2680  009CE0  02                 	db	2
  2681  009CE1  02                 	db	2
  2682  009CE2  02                 	db	2
  2683  009CE3  02                 	db	2
  2684  009CE4  02                 	db	2
  2685  009CE5  02                 	db	2
  2686  009CE6  02                 	db	2
  2687  009CE7  02                 	db	2
  2688  009CE8  02                 	db	2
  2689  009CE9  02                 	db	2
  2690  009CEA  01                 	db	1
  2691  009CEB  01                 	db	1
  2692  009CEC  01                 	db	1
  2693  009CED  01                 	db	1
  2694  009CEE  01                 	db	1
  2695  009CEF  01                 	db	1
  2696  009CF0  01                 	db	1
  2697  009CF1  01                 	db	1
  2698  009CF2  01                 	db	1
  2699  009CF3  01                 	db	1
  2700  009CF4  01                 	db	1
  2701  009CF5  01                 	db	1
  2702  009CF6  01                 	db	1
  2703  009CF7  01                 	db	1
  2704  009CF8  01                 	db	1
  2705  009CF9  01                 	db	1
  2706  009CFA  01                 	db	1
  2707  009CFB  01                 	db	1
  2708  009CFC  01                 	db	1
  2709  009CFD  01                 	db	1
  2710  009CFE  01                 	db	1
  2711  009CFF  01                 	db	1
  2712  009D00  01                 	db	1
  2713  009D01  01                 	db	1
  2714  009D02  01                 	db	1
  2715  009D03  01                 	db	1
  2716  009D04  01                 	db	1
  2717  009D05  01                 	db	1
  2718  009D06  01                 	db	1
  2719  009D07  01                 	db	1
  2720  009D08  01                 	db	1
  2721  009D09  01                 	db	1
  2722  009D0A  01                 	db	1
  2723  009D0B  01                 	db	1
  2724  009D0C  01                 	db	1
  2725  009D0D  01                 	db	1
  2726  009D0E  01                 	db	1
  2727  009D0F  01                 	db	1
  2728  009D10  01                 	db	1
  2729  009D11  01                 	db	1
  2730  009D12  01                 	db	1
  2731  009D13  01                 	db	1
  2732  009D14  01                 	db	1
  2733  009D15  01                 	db	1
  2734  009D16  01                 	db	1
  2735  009D17  01                 	db	1
  2736  009D18  01                 	db	1
  2737  009D19  01                 	db	1
  2738  009D1A  01                 	db	1
  2739  009D1B  01                 	db	1
  2740  009D1C  01                 	db	1
  2741  009D1D  01                 	db	1
  2742  009D1E  01                 	db	1
  2743  009D1F  01                 	db	1
  2744  009D20  01                 	db	1
  2745  009D21  01                 	db	1
  2746  009D22  01                 	db	1
  2747  009D23  01                 	db	1
  2748  009D24  01                 	db	1
  2749  009D25  01                 	db	1
  2750  009D26  01                 	db	1
  2751  009D27  01                 	db	1
  2752  009D28  01                 	db	1
  2753  009D29  01                 	db	1
  2754  009D2A  01                 	db	1
  2755  009D2B  01                 	db	1
  2756  009D2C  01                 	db	1
  2757  009D2D  01                 	db	1
  2758  009D2E  01                 	db	1
  2759  009D2F  01                 	db	1
  2760  009D30  01                 	db	1
  2761  009D31  01                 	db	1
  2762  009D32  01                 	db	1
  2763  009D33  01                 	db	1
  2764  009D34  01                 	db	1
  2765  009D35  01                 	db	1
  2766  009D36  01                 	db	1
  2767  009D37  01                 	db	1
  2768  009D38  01                 	db	1
  2769  009D39  01                 	db	1
  2770  009D3A  01                 	db	1
  2771  009D3B  01                 	db	1
  2772  009D3C  01                 	db	1
  2773  009D3D  01                 	db	1
  2774  009D3E  01                 	db	1
  2775  009D3F  01                 	db	1
  2776  009D40  01                 	db	1
  2777  009D41  01                 	db	1
  2778  009D42  01                 	db	1
  2779  009D43  01                 	db	1
  2780  009D44  01                 	db	1
  2781  009D45  01                 	db	1
  2782  009D46  01                 	db	1
  2783  009D47  01                 	db	1
  2784  009D48  01                 	db	1
  2785  009D49  01                 	db	1
  2786  009D4A  01                 	db	1
  2787  009D4B  01                 	db	1
  2788  009D4C  01                 	db	1
  2789  009D4D  01                 	db	1
  2790  009D4E  01                 	db	1
  2791  009D4F  01                 	db	1
  2792  009D50  01                 	db	1
  2793  009D51  01                 	db	1
  2794  009D52  01                 	db	1
  2795  009D53  01                 	db	1
  2796  009D54  01                 	db	1
  2797  009D55  01                 	db	1
  2798  009D56  01                 	db	1
  2799  009D57  01                 	db	1
  2800  009D58  01                 	db	1
  2801  009D59  01                 	db	1
  2802  009D5A  01                 	db	1
  2803  009D5B  01                 	db	1
  2804  009D5C  01                 	db	1
  2805  009D5D  01                 	db	1
  2806  009D5E  01                 	db	1
  2807  009D5F  01                 	db	1
  2808  009D60  01                 	db	1
  2809  009D61  01                 	db	1
  2810  009D62  01                 	db	1
  2811  009D63  01                 	db	1
  2812  009D64  01                 	db	1
  2813  009D65  01                 	db	1
  2814  009D66  01                 	db	1
  2815  009D67  01                 	db	1
  2816  009D68  01                 	db	1
  2817  009D69  01                 	db	1
  2818  009D6A  01                 	db	1
  2819  009D6B  01                 	db	1
  2820  009D6C  01                 	db	1
  2821  009D6D  01                 	db	1
  2822  009D6E  01                 	db	1
  2823  009D6F  01                 	db	1
  2824  009D70  01                 	db	1
  2825  009D71  01                 	db	1
  2826  009D72  01                 	db	1
  2827  009D73  01                 	db	1
  2828  009D74  01                 	db	1
  2829  009D75  01                 	db	1
  2830  009D76  01                 	db	1
  2831  009D77  01                 	db	1
  2832  009D78  01                 	db	1
  2833  009D79  01                 	db	1
  2834  009D7A  01                 	db	1
  2835  009D7B  01                 	db	1
  2836  009D7C  01                 	db	1
  2837  009D7D  01                 	db	1
  2838  009D7E  01                 	db	1
  2839  009D7F  01                 	db	1
  2840  009D80  01                 	db	1
  2841  009D81  01                 	db	1
  2842  009D82  01                 	db	1
  2843  009D83  01                 	db	1
  2844  009D84  01                 	db	1
  2845  009D85  01                 	db	1
  2846  009D86  01                 	db	1
  2847  009D87  01                 	db	1
  2848  009D88  01                 	db	1
  2849  009D89  01                 	db	1
  2850  009D8A  01                 	db	1
  2851  009D8B  01                 	db	1
  2852  009D8C  01                 	db	1
  2853  009D8D  01                 	db	1
  2854  009D8E  01                 	db	1
  2855  009D8F  01                 	db	1
  2856  009D90  01                 	db	1
  2857  009D91  01                 	db	1
  2858  009D92  01                 	db	1
  2859  009D93  01                 	db	1
  2860  009D94  01                 	db	1
  2861  009D95  01                 	db	1
  2862  009D96  01                 	db	1
  2863  009D97  01                 	db	1
  2864  009D98  01                 	db	1
  2865  009D99  01                 	db	1
  2866  009D9A  01                 	db	1
  2867  009D9B  01                 	db	1
  2868  009D9C  01                 	db	1
  2869  009D9D  01                 	db	1
  2870  009D9E  01                 	db	1
  2871  009D9F  01                 	db	1
  2872  009DA0  01                 	db	1
  2873  009DA1  01                 	db	1
  2874  009DA2  01                 	db	1
  2875  009DA3  01                 	db	1
  2876  009DA4  01                 	db	1
  2877  009DA5  01                 	db	1
  2878  009DA6  01                 	db	1
  2879  009DA7  01                 	db	1
  2880  009DA8  01                 	db	1
  2881  009DA9  01                 	db	1
  2882  009DAA  01                 	db	1
  2883  009DAB  00                 	db	0
  2884  009DAC  00                 	db	0
  2885  009DAD  00                 	db	0
  2886  009DAE  00                 	db	0
  2887  009DAF  00                 	db	0
  2888  009DB0  00                 	db	0
  2889  009DB1  00                 	db	0
  2890  009DB2  00                 	db	0
  2891  009DB3  00                 	db	0
  2892  009DB4  00                 	db	0
  2893  009DB5  00                 	db	0
  2894  009DB6  00                 	db	0
  2895  009DB7  00                 	db	0
  2896  009DB8  00                 	db	0
  2897  009DB9  00                 	db	0
  2898  009DBA  00                 	db	0
  2899  009DBB  00                 	db	0
  2900  009DBC  00                 	db	0
  2901  009DBD  00                 	db	0
  2902  009DBE  00                 	db	0
  2903  009DBF  00                 	db	0
  2904  009DC0  00                 	db	0
  2905  009DC1  00                 	db	0
  2906  009DC2  00                 	db	0
  2907  009DC3  00                 	db	0
  2908  009DC4  00                 	db	0
  2909  009DC5  00                 	db	0
  2910  009DC6  00                 	db	0
  2911  009DC7  00                 	db	0
  2912  009DC8  00                 	db	0
  2913  009DC9  00                 	db	0
  2914  009DCA  00                 	db	0
  2915  009DCB  00                 	db	0
  2916  009DCC  00                 	db	0
  2917  009DCD  00                 	db	0
  2918  009DCE  00                 	db	0
  2919  009DCF  00                 	db	0
  2920  009DD0  00                 	db	0
  2921  009DD1  00                 	db	0
  2922  009DD2  00                 	db	0
  2923  009DD3  00                 	db	0
  2924  009DD4  00                 	db	0
  2925  009DD5  00                 	db	0
  2926  009DD6  00                 	db	0
  2927  009DD7  00                 	db	0
  2928  009DD8  00                 	db	0
  2929  009DD9  00                 	db	0
  2930  009DDA  00                 	db	0
  2931  009DDB  00                 	db	0
  2932  009DDC  00                 	db	0
  2933  009DDD  00                 	db	0
  2934  009DDE  00                 	db	0
  2935  009DDF  00                 	db	0
  2936  009DE0  00                 	db	0
  2937  009DE1  00                 	db	0
  2938  009DE2  00                 	db	0
  2939  009DE3  00                 	db	0
  2940  009DE4                     __end_of_motor_prescaler_lookup:
  2941                           	opt stack 0
  2942  009DE4                     _USB_SD_Ptr:
  2943                           	opt stack 0
  2944  009DE4  E5                 	db	low _sd000
  2945  009DE5  A2                 	db	high _sd000
  2946  009DE6  FE                 	db	low _sd001
  2947  009DE7  A0                 	db	high _sd001
  2948  009DE8  32                 	db	low _sd002
  2949  009DE9  A1                 	db	high _sd002
  2950  009DEA  A1                 	db	low _sd003
  2951  009DEB  A1                 	db	high _sd003
  2952  009DEC                     __end_of_USB_SD_Ptr:
  2953                           	opt stack 0
  2954  009DEC                     _USB_CD_Ptr:
  2955                           	opt stack 0
  2956  009DEC  BE                 	db	low _configDescriptor1
  2957  009DED  A0                 	db	high _configDescriptor1
  2958  009DEE                     __end_of_USB_CD_Ptr:
  2959                           	opt stack 0
  2960  009DEE                     _dc_manual:
  2961                           	opt stack 0
  2962  009DEE  4D                 	db	77
  2963  009DEF  61                 	db	97
  2964  009DF0  6E                 	db	110
  2965  009DF1  75                 	db	117
  2966  009DF2  61                 	db	97
  2967  009DF3  6C                 	db	108
  2968  009DF4  20                 	db	32
  2969  009DF5  4D                 	db	77
  2970  009DF6  6F                 	db	111
  2971  009DF7  64                 	db	100
  2972  009DF8  65                 	db	101
  2973  009DF9  20                 	db	32
  2974  009DFA  20                 	db	32
  2975  009DFB  20                 	db	32
  2976  009DFC  20                 	db	32
  2977  009DFD  20                 	db	32
  2978  009DFE  20                 	db	32
  2979  009DFF  20                 	db	32
  2980  009E00  20                 	db	32
  2981  009E01  20                 	db	32
  2982  009E02  43                 	db	67
  2983  009E03  75                 	db	117
  2984  009E04  72                 	db	114
  2985  009E05  72                 	db	114
  2986  009E06  65                 	db	101
  2987  009E07  6E                 	db	110
  2988  009E08  74                 	db	116
  2989  009E09  20                 	db	32
  2990  009E0A  70                 	db	112
  2991  009E0B  6F                 	db	111
  2992  009E0C  73                 	db	115
  2993  009E0D  3A                 	db	58
  2994  009E0E  20                 	db	32
  2995  009E0F  20                 	db	32
  2996  009E10  20                 	db	32
  2997  009E11  20                 	db	32
  2998  009E12  20                 	db	32
  2999  009E13  20                 	db	32
  3000  009E14  20                 	db	32
  3001  009E15  01                 	db	1
  3002  009E16  54                 	db	84
  3003  009E17  75                 	db	117
  3004  009E18  72                 	db	114
  3005  009E19  6E                 	db	110
  3006  009E1A  20                 	db	32
  3007  009E1B  43                 	db	67
  3008  009E1C  43                 	db	67
  3009  009E1D  57                 	db	87
  3010  009E1E  20                 	db	32
  3011  009E1F  00                 	db	0
  3012  009E20  20                 	db	32
  3013  009E21  53                 	db	83
  3014  009E22  70                 	db	112
  3015  009E23  65                 	db	101
  3016  009E24  65                 	db	101
  3017  009E25  64                 	db	100
  3018  009E26  20                 	db	32
  3019  009E27  20                 	db	32
  3020  009E28  20                 	db	32
  3021  009E29  20                 	db	32
  3022  009E2A  53                 	db	83
  3023  009E2B  74                 	db	116
  3024  009E2C  61                 	db	97
  3025  009E2D  72                 	db	114
  3026  009E2E  74                 	db	116
  3027  009E2F  20                 	db	32
  3028  009E30  20                 	db	32
  3029  009E31  20                 	db	32
  3030  009E32  20                 	db	32
  3031  009E33  00                 	db	0
  3032  009E34  20                 	db	32
  3033  009E35  20                 	db	32
  3034  009E36  20                 	db	32
  3035  009E37  20                 	db	32
  3036  009E38  20                 	db	32
  3037  009E39  20                 	db	32
  3038  009E3A  20                 	db	32
  3039  009E3B  20                 	db	32
  3040  009E3C  20                 	db	32
  3041  009E3D  20                 	db	32
  3042  009E3E                     __end_of_dc_manual:
  3043                           	opt stack 0
  3044  009E3E                     _dc_zero:
  3045                           	opt stack 0
  3046  009E3E  52                 	db	82
  3047  009E3F  65                 	db	101
  3048  009E40  74                 	db	116
  3049  009E41  75                 	db	117
  3050  009E42  72                 	db	114
  3051  009E43  6E                 	db	110
  3052  009E44  20                 	db	32
  3053  009E45  74                 	db	116
  3054  009E46  6F                 	db	111
  3055  009E47  20                 	db	32
  3056  009E48  5A                 	db	90
  3057  009E49  65                 	db	101
  3058  009E4A  72                 	db	114
  3059  009E4B  6F                 	db	111
  3060  009E4C  3F                 	db	63
  3061  009E4D  20                 	db	32
  3062  009E4E  20                 	db	32
  3063  009E4F  20                 	db	32
  3064  009E50  20                 	db	32
  3065  009E51  20                 	db	32
  3066  009E52  43                 	db	67
  3067  009E53  75                 	db	117
  3068  009E54  72                 	db	114
  3069  009E55  72                 	db	114
  3070  009E56  65                 	db	101
  3071  009E57  6E                 	db	110
  3072  009E58  74                 	db	116
  3073  009E59  20                 	db	32
  3074  009E5A  70                 	db	112
  3075  009E5B  6F                 	db	111
  3076  009E5C  73                 	db	115
  3077  009E5D  3A                 	db	58
  3078  009E5E  20                 	db	32
  3079  009E5F  20                 	db	32
  3080  009E60  20                 	db	32
  3081  009E61  20                 	db	32
  3082  009E62  20                 	db	32
  3083  009E63  20                 	db	32
  3084  009E64  20                 	db	32
  3085  009E65  20                 	db	32
  3086  009E66  20                 	db	32
  3087  009E67  20                 	db	32
  3088  009E68  20                 	db	32
  3089  009E69  20                 	db	32
  3090  009E6A  20                 	db	32
  3091  009E6B  20                 	db	32
  3092  009E6C  20                 	db	32
  3093  009E6D  20                 	db	32
  3094  009E6E  20                 	db	32
  3095  009E6F  20                 	db	32
  3096  009E70  20                 	db	32
  3097  009E71  20                 	db	32
  3098  009E72  20                 	db	32
  3099  009E73  20                 	db	32
  3100  009E74  20                 	db	32
  3101  009E75  20                 	db	32
  3102  009E76  20                 	db	32
  3103  009E77  20                 	db	32
  3104  009E78  20                 	db	32
  3105  009E79  20                 	db	32
  3106  009E7A  20                 	db	32
  3107  009E7B  59                 	db	89
  3108  009E7C  65                 	db	101
  3109  009E7D  73                 	db	115
  3110  009E7E  20                 	db	32
  3111  009E7F  20                 	db	32
  3112  009E80  20                 	db	32
  3113  009E81  20                 	db	32
  3114  009E82  20                 	db	32
  3115  009E83  20                 	db	32
  3116  009E84  20                 	db	32
  3117  009E85  20                 	db	32
  3118  009E86  20                 	db	32
  3119  009E87  20                 	db	32
  3120  009E88  20                 	db	32
  3121  009E89  20                 	db	32
  3122  009E8A  4E                 	db	78
  3123  009E8B  6F                 	db	111
  3124  009E8C  20                 	db	32
  3125  009E8D  20                 	db	32
  3126  009E8E                     __end_of_dc_zero:
  3127                           	opt stack 0
  3128  009E8E                     _dc_arc2:
  3129                           	opt stack 0
  3130  009E8E  41                 	db	65
  3131  009E8F  72                 	db	114
  3132  009E90  63                 	db	99
  3133  009E91  3A                 	db	58
  3134  009E92  20                 	db	32
  3135  009E93  53                 	db	83
  3136  009E94  69                 	db	105
  3137  009E95  7A                 	db	122
  3138  009E96  65                 	db	101
  3139  009E97  3D                 	db	61
  3140  009E98  20                 	db	32
  3141  009E99  20                 	db	32
  3142  009E9A  20                 	db	32
  3143  009E9B  20                 	db	32
  3144  009E9C  20                 	db	32
  3145  009E9D  20                 	db	32
  3146  009E9E  20                 	db	32
  3147  009E9F  20                 	db	32
  3148  009EA0  20                 	db	32
  3149  009EA1  20                 	db	32
  3150  009EA2  43                 	db	67
  3151  009EA3  75                 	db	117
  3152  009EA4  72                 	db	114
  3153  009EA5  72                 	db	114
  3154  009EA6  65                 	db	101
  3155  009EA7  6E                 	db	110
  3156  009EA8  74                 	db	116
  3157  009EA9  20                 	db	32
  3158  009EAA  70                 	db	112
  3159  009EAB  6F                 	db	111
  3160  009EAC  73                 	db	115
  3161  009EAD  3A                 	db	58
  3162  009EAE  20                 	db	32
  3163  009EAF  20                 	db	32
  3164  009EB0  20                 	db	32
  3165  009EB1  20                 	db	32
  3166  009EB2  20                 	db	32
  3167  009EB3  20                 	db	32
  3168  009EB4  20                 	db	32
  3169  009EB5  01                 	db	1
  3170  009EB6  54                 	db	84
  3171  009EB7  75                 	db	117
  3172  009EB8  72                 	db	114
  3173  009EB9  6E                 	db	110
  3174  009EBA  20                 	db	32
  3175  009EBB  43                 	db	67
  3176  009EBC  43                 	db	67
  3177  009EBD  57                 	db	87
  3178  009EBE  20                 	db	32
  3179  009EBF  00                 	db	0
  3180  009EC0  20                 	db	32
  3181  009EC1  53                 	db	83
  3182  009EC2  70                 	db	112
  3183  009EC3  65                 	db	101
  3184  009EC4  65                 	db	101
  3185  009EC5  64                 	db	100
  3186  009EC6  20                 	db	32
  3187  009EC7  20                 	db	32
  3188  009EC8  20                 	db	32
  3189  009EC9  20                 	db	32
  3190  009ECA  53                 	db	83
  3191  009ECB  74                 	db	116
  3192  009ECC  61                 	db	97
  3193  009ECD  72                 	db	114
  3194  009ECE  74                 	db	116
  3195  009ECF  20                 	db	32
  3196  009ED0  20                 	db	32
  3197  009ED1  20                 	db	32
  3198  009ED2  20                 	db	32
  3199  009ED3  00                 	db	0
  3200  009ED4  20                 	db	32
  3201  009ED5  20                 	db	32
  3202  009ED6  20                 	db	32
  3203  009ED7  20                 	db	32
  3204  009ED8  20                 	db	32
  3205  009ED9  20                 	db	32
  3206  009EDA  20                 	db	32
  3207  009EDB  20                 	db	32
  3208  009EDC  20                 	db	32
  3209  009EDD  20                 	db	32
  3210  009EDE                     __end_of_dc_arc2:
  3211                           	opt stack 0
  3212  009EDE                     _dc_arc1:
  3213                           	opt stack 0
  3214  009EDE  41                 	db	65
  3215  009EDF  72                 	db	114
  3216  009EE0  63                 	db	99
  3217  009EE1  3A                 	db	58
  3218  009EE2  20                 	db	32
  3219  009EE3  53                 	db	83
  3220  009EE4  65                 	db	101
  3221  009EE5  74                 	db	116
  3222  009EE6  20                 	db	32
  3223  009EE7  61                 	db	97
  3224  009EE8  72                 	db	114
  3225  009EE9  63                 	db	99
  3226  009EEA  20                 	db	32
  3227  009EEB  73                 	db	115
  3228  009EEC  69                 	db	105
  3229  009EED  7A                 	db	122
  3230  009EEE  65                 	db	101
  3231  009EEF  20                 	db	32
  3232  009EF0  20                 	db	32
  3233  009EF1  20                 	db	32
  3234  009EF2  41                 	db	65
  3235  009EF3  72                 	db	114
  3236  009EF4  63                 	db	99
  3237  009EF5  20                 	db	32
  3238  009EF6  73                 	db	115
  3239  009EF7  69                 	db	105
  3240  009EF8  7A                 	db	122
  3241  009EF9  65                 	db	101
  3242  009EFA  3A                 	db	58
  3243  009EFB  20                 	db	32
  3244  009EFC  20                 	db	32
  3245  009EFD  20                 	db	32
  3246  009EFE  20                 	db	32
  3247  009EFF  20                 	db	32
  3248  009F00  20                 	db	32
  3249  009F01  20                 	db	32
  3250  009F02  20                 	db	32
  3251  009F03  20                 	db	32
  3252  009F04  20                 	db	32
  3253  009F05  20                 	db	32
  3254  009F06  53                 	db	83
  3255  009F07  74                 	db	116
  3256  009F08  65                 	db	101
  3257  009F09  70                 	db	112
  3258  009F0A  20                 	db	32
  3259  009F0B  73                 	db	115
  3260  009F0C  69                 	db	105
  3261  009F0D  7A                 	db	122
  3262  009F0E  65                 	db	101
  3263  009F0F  20                 	db	32
  3264  009F10  00                 	db	0
  3265  009F11  20                 	db	32
  3266  009F12  20                 	db	32
  3267  009F13  43                 	db	67
  3268  009F14  6F                 	db	111
  3269  009F15  6E                 	db	110
  3270  009F16  66                 	db	102
  3271  009F17  69                 	db	105
  3272  009F18  72                 	db	114
  3273  009F19  6D                 	db	109
  3274  009F1A  20                 	db	32
  3275  009F1B  20                 	db	32
  3276  009F1C  20                 	db	32
  3277  009F1D  20                 	db	32
  3278  009F1E  20                 	db	32
  3279  009F1F  20                 	db	32
  3280  009F20  20                 	db	32
  3281  009F21  20                 	db	32
  3282  009F22  20                 	db	32
  3283  009F23  20                 	db	32
  3284  009F24  00                 	db	0
  3285  009F25  20                 	db	32
  3286  009F26  20                 	db	32
  3287  009F27  43                 	db	67
  3288  009F28  61                 	db	97
  3289  009F29  6E                 	db	110
  3290  009F2A  63                 	db	99
  3291  009F2B  65                 	db	101
  3292  009F2C  6C                 	db	108
  3293  009F2D  20                 	db	32
  3294  009F2E                     __end_of_dc_arc1:
  3295                           	opt stack 0
  3296  009F2E                     _dc_divide2:
  3297                           	opt stack 0
  3298  009F2E  44                 	db	68
  3299  009F2F  69                 	db	105
  3300  009F30  76                 	db	118
  3301  009F31  69                 	db	105
  3302  009F32  64                 	db	100
  3303  009F33  65                 	db	101
  3304  009F34  3A                 	db	58
  3305  009F35  20                 	db	32
  3306  009F36  20                 	db	32
  3307  009F37  20                 	db	32
  3308  009F38  20                 	db	32
  3309  009F39  20                 	db	32
  3310  009F3A  20                 	db	32
  3311  009F3B  20                 	db	32
  3312  009F3C  20                 	db	32
  3313  009F3D  20                 	db	32
  3314  009F3E  20                 	db	32
  3315  009F3F  20                 	db	32
  3316  009F40  20                 	db	32
  3317  009F41  20                 	db	32
  3318  009F42  50                 	db	80
  3319  009F43  6F                 	db	111
  3320  009F44  73                 	db	115
  3321  009F45  3A                 	db	58
  3322  009F46  20                 	db	32
  3323  009F47  20                 	db	32
  3324  009F48  20                 	db	32
  3325  009F49  20                 	db	32
  3326  009F4A  20                 	db	32
  3327  009F4B  20                 	db	32
  3328  009F4C  20                 	db	32
  3329  009F4D  20                 	db	32
  3330  009F4E  20                 	db	32
  3331  009F4F  20                 	db	32
  3332  009F50  20                 	db	32
  3333  009F51  20                 	db	32
  3334  009F52  20                 	db	32
  3335  009F53  20                 	db	32
  3336  009F54  20                 	db	32
  3337  009F55  20                 	db	32
  3338  009F56  4A                 	db	74
  3339  009F57  75                 	db	117
  3340  009F58  6D                 	db	109
  3341  009F59  70                 	db	112
  3342  009F5A  20                 	db	32
  3343  009F5B  73                 	db	115
  3344  009F5C  69                 	db	105
  3345  009F5D  7A                 	db	122
  3346  009F5E  65                 	db	101
  3347  009F5F  3A                 	db	58
  3348  009F60  20                 	db	32
  3349  009F61  20                 	db	32
  3350  009F62  20                 	db	32
  3351  009F63  20                 	db	32
  3352  009F64  20                 	db	32
  3353  009F65  20                 	db	32
  3354  009F66  20                 	db	32
  3355  009F67  20                 	db	32
  3356  009F68  20                 	db	32
  3357  009F69  20                 	db	32
  3358  009F6A  50                 	db	80
  3359  009F6B  72                 	db	114
  3360  009F6C  65                 	db	101
  3361  009F6D  73                 	db	115
  3362  009F6E  73                 	db	115
  3363  009F6F  54                 	db	84
  3364  009F70  6F                 	db	111
  3365  009F71  4A                 	db	74
  3366  009F72  75                 	db	117
  3367  009F73  6D                 	db	109
  3368  009F74  70                 	db	112
  3369  009F75  20                 	db	32
  3370  009F76  00                 	db	0
  3371  009F77  20                 	db	32
  3372  009F78  43                 	db	67
  3373  009F79  61                 	db	97
  3374  009F7A  6E                 	db	110
  3375  009F7B  63                 	db	99
  3376  009F7C  65                 	db	101
  3377  009F7D  6C                 	db	108
  3378  009F7E                     __end_of_dc_divide2:
  3379                           	opt stack 0
  3380  009F7E                     _dc_divide1:
  3381                           	opt stack 0
  3382  009F7E  44                 	db	68
  3383  009F7F  69                 	db	105
  3384  009F80  76                 	db	118
  3385  009F81  69                 	db	105
  3386  009F82  64                 	db	100
  3387  009F83  65                 	db	101
  3388  009F84  3A                 	db	58
  3389  009F85  20                 	db	32
  3390  009F86  53                 	db	83
  3391  009F87  65                 	db	101
  3392  009F88  74                 	db	116
  3393  009F89  20                 	db	32
  3394  009F8A  64                 	db	100
  3395  009F8B  69                 	db	105
  3396  009F8C  76                 	db	118
  3397  009F8D  69                 	db	105
  3398  009F8E  73                 	db	115
  3399  009F8F  69                 	db	105
  3400  009F90  6F                 	db	111
  3401  009F91  6E                 	db	110
  3402  009F92  20                 	db	32
  3403  009F93  20                 	db	32
  3404  009F94  20                 	db	32
  3405  009F95  20                 	db	32
  3406  009F96  20                 	db	32
  3407  009F97  20                 	db	32
  3408  009F98  20                 	db	32
  3409  009F99  20                 	db	32
  3410  009F9A  20                 	db	32
  3411  009F9B  20                 	db	32
  3412  009F9C  20                 	db	32
  3413  009F9D  20                 	db	32
  3414  009F9E  20                 	db	32
  3415  009F9F  20                 	db	32
  3416  009FA0  20                 	db	32
  3417  009FA1  20                 	db	32
  3418  009FA2  20                 	db	32
  3419  009FA3  20                 	db	32
  3420  009FA4  20                 	db	32
  3421  009FA5  20                 	db	32
  3422  009FA6  20                 	db	32
  3423  009FA7  20                 	db	32
  3424  009FA8  20                 	db	32
  3425  009FA9  2F                 	db	47
  3426  009FAA  73                 	db	115
  3427  009FAB  74                 	db	116
  3428  009FAC  65                 	db	101
  3429  009FAD  70                 	db	112
  3430  009FAE  20                 	db	32
  3431  009FAF  20                 	db	32
  3432  009FB0  00                 	db	0
  3433  009FB1  20                 	db	32
  3434  009FB2  20                 	db	32
  3435  009FB3  43                 	db	67
  3436  009FB4  6F                 	db	111
  3437  009FB5  6E                 	db	110
  3438  009FB6  66                 	db	102
  3439  009FB7  69                 	db	105
  3440  009FB8  72                 	db	114
  3441  009FB9  6D                 	db	109
  3442  009FBA  31                 	db	49
  3443  009FBB  32                 	db	50
  3444  009FBC  33                 	db	51
  3445  009FBD  34                 	db	52
  3446  009FBE  20                 	db	32
  3447  009FBF  20                 	db	32
  3448  009FC0  20                 	db	32
  3449  009FC1  20                 	db	32
  3450  009FC2  20                 	db	32
  3451  009FC3  20                 	db	32
  3452  009FC4  00                 	db	0
  3453  009FC5  20                 	db	32
  3454  009FC6  20                 	db	32
  3455  009FC7  43                 	db	67
  3456  009FC8  61                 	db	97
  3457  009FC9  6E                 	db	110
  3458  009FCA  63                 	db	99
  3459  009FCB  65                 	db	101
  3460  009FCC  6C                 	db	108
  3461  009FCD  20                 	db	32
  3462  009FCE                     __end_of_dc_divide1:
  3463                           	opt stack 0
  3464  009FCE                     _dc_setup2:
  3465                           	opt stack 0
  3466  009FCE  53                 	db	83
  3467  009FCF  65                 	db	101
  3468  009FD0  74                 	db	116
  3469  009FD1  75                 	db	117
  3470  009FD2  70                 	db	112
  3471  009FD3  3A                 	db	58
  3472  009FD4  20                 	db	32
  3473  009FD5  53                 	db	83
  3474  009FD6  65                 	db	101
  3475  009FD7  74                 	db	116
  3476  009FD8  20                 	db	32
  3477  009FD9  64                 	db	100
  3478  009FDA  69                 	db	105
  3479  009FDB  72                 	db	114
  3480  009FDC  65                 	db	101
  3481  009FDD  63                 	db	99
  3482  009FDE  74                 	db	116
  3483  009FDF  69                 	db	105
  3484  009FE0  6F                 	db	111
  3485  009FE1  6E                 	db	110
  3486  009FE2  20                 	db	32
  3487  009FE3  20                 	db	32
  3488  009FE4  20                 	db	32
  3489  009FE5  20                 	db	32
  3490  009FE6  20                 	db	32
  3491  009FE7  20                 	db	32
  3492  009FE8  20                 	db	32
  3493  009FE9  20                 	db	32
  3494  009FEA  20                 	db	32
  3495  009FEB  20                 	db	32
  3496  009FEC  20                 	db	32
  3497  009FED  20                 	db	32
  3498  009FEE  20                 	db	32
  3499  009FEF  20                 	db	32
  3500  009FF0  20                 	db	32
  3501  009FF1  20                 	db	32
  3502  009FF2  20                 	db	32
  3503  009FF3  20                 	db	32
  3504  009FF4  20                 	db	32
  3505  009FF5  20                 	db	32
  3506  009FF6  20                 	db	32
  3507  009FF7  43                 	db	67
  3508  009FF8  6F                 	db	111
  3509  009FF9  75                 	db	117
  3510  009FFA  6E                 	db	110
  3511  009FFB  74                 	db	116
  3512  009FFC  65                 	db	101
  3513  009FFD  72                 	db	114
  3514  009FFE  43                 	db	67
  3515  009FFF  6C                 	db	108
  3516  00A000  6F                 	db	111
  3517  00A001  63                 	db	99
  3518  00A002  6B                 	db	107
  3519  00A003  77                 	db	119
  3520  00A004  69                 	db	105
  3521  00A005  73                 	db	115
  3522  00A006  65                 	db	101
  3523  00A007  20                 	db	32
  3524  00A008  20                 	db	32
  3525  00A009  20                 	db	32
  3526  00A00A  20                 	db	32
  3527  00A00B  43                 	db	67
  3528  00A00C  6C                 	db	108
  3529  00A00D  6F                 	db	111
  3530  00A00E  63                 	db	99
  3531  00A00F  6B                 	db	107
  3532  00A010  77                 	db	119
  3533  00A011  69                 	db	105
  3534  00A012  73                 	db	115
  3535  00A013  65                 	db	101
  3536  00A014  20                 	db	32
  3537  00A015  20                 	db	32
  3538  00A016  20                 	db	32
  3539  00A017  20                 	db	32
  3540  00A018  20                 	db	32
  3541  00A019  20                 	db	32
  3542  00A01A  20                 	db	32
  3543  00A01B  20                 	db	32
  3544  00A01C  20                 	db	32
  3545  00A01D  20                 	db	32
  3546  00A01E                     __end_of_dc_setup2:
  3547                           	opt stack 0
  3548  00A01E                     _dc_setup1:
  3549                           	opt stack 0
  3550  00A01E  53                 	db	83
  3551  00A01F  65                 	db	101
  3552  00A020  74                 	db	116
  3553  00A021  75                 	db	117
  3554  00A022  70                 	db	112
  3555  00A023  3A                 	db	58
  3556  00A024  20                 	db	32
  3557  00A025  53                 	db	83
  3558  00A026  65                 	db	101
  3559  00A027  74                 	db	116
  3560  00A028  20                 	db	32
  3561  00A029  7A                 	db	122
  3562  00A02A  65                 	db	101
  3563  00A02B  72                 	db	114
  3564  00A02C  6F                 	db	111
  3565  00A02D  20                 	db	32
  3566  00A02E  70                 	db	112
  3567  00A02F  6F                 	db	111
  3568  00A030  73                 	db	115
  3569  00A031  2E                 	db	46
  3570  00A032  20                 	db	32
  3571  00A033  20                 	db	32
  3572  00A034  20                 	db	32
  3573  00A035  20                 	db	32
  3574  00A036  20                 	db	32
  3575  00A037  20                 	db	32
  3576  00A038  20                 	db	32
  3577  00A039  20                 	db	32
  3578  00A03A  20                 	db	32
  3579  00A03B  20                 	db	32
  3580  00A03C  20                 	db	32
  3581  00A03D  20                 	db	32
  3582  00A03E  20                 	db	32
  3583  00A03F  20                 	db	32
  3584  00A040  20                 	db	32
  3585  00A041  20                 	db	32
  3586  00A042  20                 	db	32
  3587  00A043  20                 	db	32
  3588  00A044  20                 	db	32
  3589  00A045  20                 	db	32
  3590  00A046  53                 	db	83
  3591  00A047  74                 	db	116
  3592  00A048  65                 	db	101
  3593  00A049  70                 	db	112
  3594  00A04A  20                 	db	32
  3595  00A04B  73                 	db	115
  3596  00A04C  69                 	db	105
  3597  00A04D  7A                 	db	122
  3598  00A04E  65                 	db	101
  3599  00A04F  20                 	db	32
  3600  00A050  00                 	db	0
  3601  00A051  20                 	db	32
  3602  00A052  20                 	db	32
  3603  00A053  43                 	db	67
  3604  00A054  6F                 	db	111
  3605  00A055  6E                 	db	110
  3606  00A056  66                 	db	102
  3607  00A057  69                 	db	105
  3608  00A058  72                 	db	114
  3609  00A059  6D                 	db	109
  3610  00A05A  20                 	db	32
  3611  00A05B  78                 	db	120
  3612  00A05C  2E                 	db	46
  3613  00A05D  78                 	db	120
  3614  00A05E  78                 	db	120
  3615  00A05F  01                 	db	1
  3616  00A060  20                 	db	32
  3617  00A061  20                 	db	32
  3618  00A062  20                 	db	32
  3619  00A063  20                 	db	32
  3620  00A064  00                 	db	0
  3621  00A065  20                 	db	32
  3622  00A066  20                 	db	32
  3623  00A067  43                 	db	67
  3624  00A068  61                 	db	97
  3625  00A069  6E                 	db	110
  3626  00A06A  63                 	db	99
  3627  00A06B  65                 	db	101
  3628  00A06C  6C                 	db	108
  3629  00A06D  20                 	db	32
  3630  00A06E                     __end_of_dc_setup1:
  3631                           	opt stack 0
  3632  00A06E                     _dc_main:
  3633                           	opt stack 0
  3634  00A06E  4D                 	db	77
  3635  00A06F  61                 	db	97
  3636  00A070  69                 	db	105
  3637  00A071  6E                 	db	110
  3638  00A072  20                 	db	32
  3639  00A073  4D                 	db	77
  3640  00A074  65                 	db	101
  3641  00A075  6E                 	db	110
  3642  00A076  75                 	db	117
  3643  00A077  3A                 	db	58
  3644  00A078  20                 	db	32
  3645  00A079  20                 	db	32
  3646  00A07A  20                 	db	32
  3647  00A07B  20                 	db	32
  3648  00A07C  20                 	db	32
  3649  00A07D  20                 	db	32
  3650  00A07E  20                 	db	32
  3651  00A07F  20                 	db	32
  3652  00A080  20                 	db	32
  3653  00A081  20                 	db	32
  3654  00A082  20                 	db	32
  3655  00A083  53                 	db	83
  3656  00A084  65                 	db	101
  3657  00A085  74                 	db	116
  3658  00A086  75                 	db	117
  3659  00A087  70                 	db	112
  3660  00A088  20                 	db	32
  3661  00A089  20                 	db	32
  3662  00A08A  20                 	db	32
  3663  00A08B  20                 	db	32
  3664  00A08C  44                 	db	68
  3665  00A08D  69                 	db	105
  3666  00A08E  76                 	db	118
  3667  00A08F  69                 	db	105
  3668  00A090  64                 	db	100
  3669  00A091  65                 	db	101
  3670  00A092  20                 	db	32
  3671  00A093  20                 	db	32
  3672  00A094  20                 	db	32
  3673  00A095  20                 	db	32
  3674  00A096  20                 	db	32
  3675  00A097  41                 	db	65
  3676  00A098  72                 	db	114
  3677  00A099  63                 	db	99
  3678  00A09A  20                 	db	32
  3679  00A09B  20                 	db	32
  3680  00A09C  20                 	db	32
  3681  00A09D  20                 	db	32
  3682  00A09E  20                 	db	32
  3683  00A09F  20                 	db	32
  3684  00A0A0  4D                 	db	77
  3685  00A0A1  61                 	db	97
  3686  00A0A2  6E                 	db	110
  3687  00A0A3  75                 	db	117
  3688  00A0A4  61                 	db	97
  3689  00A0A5  6C                 	db	108
  3690  00A0A6  20                 	db	32
  3691  00A0A7  20                 	db	32
  3692  00A0A8  20                 	db	32
  3693  00A0A9  20                 	db	32
  3694  00A0AA  20                 	db	32
  3695  00A0AB  47                 	db	71
  3696  00A0AC  6F                 	db	111
  3697  00A0AD  32                 	db	50
  3698  00A0AE  5A                 	db	90
  3699  00A0AF  65                 	db	101
  3700  00A0B0  72                 	db	114
  3701  00A0B1  6F                 	db	111
  3702  00A0B2  20                 	db	32
  3703  00A0B3  20                 	db	32
  3704  00A0B4  20                 	db	32
  3705  00A0B5  20                 	db	32
  3706  00A0B6  20                 	db	32
  3707  00A0B7  20                 	db	32
  3708  00A0B8  20                 	db	32
  3709  00A0B9  20                 	db	32
  3710  00A0BA  20                 	db	32
  3711  00A0BB  20                 	db	32
  3712  00A0BC  20                 	db	32
  3713  00A0BD  20                 	db	32
  3714  00A0BE                     __end_of_dc_main:
  3715                           	opt stack 0
  3716  00A0BE                     _configDescriptor1:
  3717                           	opt stack 0
  3718  00A0BE  09                 	db	9
  3719  00A0BF  02                 	db	2
  3720  00A0C0  40                 	db	64
  3721  00A0C1  00                 	db	0
  3722  00A0C2  02                 	db	2
  3723  00A0C3  01                 	db	1
  3724  00A0C4  00                 	db	0
  3725  00A0C5  C0                 	db	192
  3726  00A0C6  32                 	db	50
  3727  00A0C7  09                 	db	9
  3728  00A0C8  04                 	db	4
  3729  00A0C9  00                 	db	0
  3730  00A0CA  00                 	db	0
  3731  00A0CB  02                 	db	2
  3732  00A0CC  03                 	db	3
  3733  00A0CD  00                 	db	0
  3734  00A0CE  00                 	db	0
  3735  00A0CF  00                 	db	0
  3736  00A0D0  09                 	db	9
  3737  00A0D1  21                 	db	33
  3738  00A0D2  11                 	db	17
  3739  00A0D3  01                 	db	1
  3740  00A0D4  00                 	db	0
  3741  00A0D5  01                 	db	1
  3742  00A0D6  22                 	db	34
  3743  00A0D7  1D                 	db	29
  3744  00A0D8  00                 	db	0
  3745  00A0D9  07                 	db	7
  3746  00A0DA  05                 	db	5
  3747  00A0DB  81                 	db	129
  3748  00A0DC  03                 	db	3
  3749  00A0DD  40                 	db	64
  3750  00A0DE  00                 	db	0
  3751  00A0DF  01                 	db	1
  3752  00A0E0  07                 	db	7
  3753  00A0E1  05                 	db	5
  3754  00A0E2  01                 	db	1
  3755  00A0E3  03                 	db	3
  3756  00A0E4  40                 	db	64
  3757  00A0E5  00                 	db	0
  3758  00A0E6  01                 	db	1
  3759  00A0E7  09                 	db	9
  3760  00A0E8  04                 	db	4
  3761  00A0E9  01                 	db	1
  3762  00A0EA  00                 	db	0
  3763  00A0EB  02                 	db	2
  3764  00A0EC  08                 	db	8
  3765  00A0ED  06                 	db	6
  3766  00A0EE  50                 	db	80
  3767  00A0EF  00                 	db	0
  3768  00A0F0  07                 	db	7
  3769  00A0F1  05                 	db	5
  3770  00A0F2  82                 	db	130
  3771  00A0F3  02                 	db	2
  3772  00A0F4  40                 	db	64
  3773  00A0F5  00                 	db	0
  3774  00A0F6  01                 	db	1
  3775  00A0F7  07                 	db	7
  3776  00A0F8  05                 	db	5
  3777  00A0F9  02                 	db	2
  3778  00A0FA  02                 	db	2
  3779  00A0FB  40                 	db	64
  3780  00A0FC  00                 	db	0
  3781  00A0FD  01                 	db	1
  3782  00A0FE                     __end_of_configDescriptor1:
  3783                           	opt stack 0
  3784  00A0FE                     _sd001:
  3785                           	opt stack 0
  3786  00A0FE  34                 	db	52
  3787  00A0FF  03                 	db	3
  3788  00A100  0053               	dw	83
  3789  00A102  006F               	dw	111
  3790  00A104  006C               	dw	108
  3791  00A106  0064               	dw	100
  3792  00A108  0065               	dw	101
  3793  00A10A  0072               	dw	114
  3794  00A10C  006E               	dw	110
  3795  00A10E  0065               	dw	101
  3796  00A110  0072               	dw	114
  3797  00A112  0064               	dw	100
  3798  00A114  002E               	dw	46
  3799  00A116  0063               	dw	99
  3800  00A118  006F               	dw	111
  3801  00A11A  006D               	dw	109
  3802  00A11C  0020               	dw	32
  3803  00A11E  0020               	dw	32
  3804  00A120  0020               	dw	32
  3805  00A122  0020               	dw	32
  3806  00A124  0020               	dw	32
  3807  00A126  0020               	dw	32
  3808  00A128  0020               	dw	32
  3809  00A12A  0020               	dw	32
  3810  00A12C  0020               	dw	32
  3811  00A12E  0020               	dw	32
  3812  00A130  0020               	dw	32
  3813  00A132                     __end_of_sd001:
  3814                           	opt stack 0
  3815  00A132                     _sd002:
  3816                           	opt stack 0
  3817  00A132  2E                 	db	46
  3818  00A133  03                 	db	3
  3819  00A134  0053               	dw	83
  3820  00A136  0074               	dw	116
  3821  00A138  0065               	dw	101
  3822  00A13A  0070               	dw	112
  3823  00A13C  0070               	dw	112
  3824  00A13E  0065               	dw	101
  3825  00A140  0072               	dw	114
  3826  00A142  004D               	dw	77
  3827  00A144  006F               	dw	111
  3828  00A146  0074               	dw	116
  3829  00A148  006F               	dw	111
  3830  00A14A  0072               	dw	114
  3831  00A14C  0043               	dw	67
  3832  00A14E  006F               	dw	111
  3833  00A150  006E               	dw	110
  3834  00A152  0074               	dw	116
  3835  00A154  0072               	dw	114
  3836  00A156  006F               	dw	111
  3837  00A158  006C               	dw	108
  3838  00A15A  006C               	dw	108
  3839  00A15C  0065               	dw	101
  3840  00A15E  0072               	dw	114
  3841  00A160                     __end_of_sd002:
  3842                           	opt stack 0
  3843  00A160                     _inq_resp:
  3844                           	opt stack 0
  3845  00A160  00                 	db	0
  3846  00A161  80                 	db	128
  3847  00A162  04                 	db	4
  3848  00A163  02                 	db	2
  3849  00A164  20                 	db	32
  3850  00A165  00                 	db	0
  3851  00A166  00                 	db	0
  3852  00A167  00                 	db	0
  3853  00A168  4D                 	db	77
  3854  00A169  69                 	db	105
  3855  00A16A  63                 	db	99
  3856  00A16B  72                 	db	114
  3857  00A16C  6F                 	db	111
  3858  00A16D  63                 	db	99
  3859  00A16E  68                 	db	104
  3860  00A16F  70                 	db	112
  3861  00A170  4D                 	db	77
  3862  00A171  61                 	db	97
  3863  00A172  73                 	db	115
  3864  00A173  73                 	db	115
  3865  00A174  20                 	db	32
  3866  00A175  53                 	db	83
  3867  00A176  74                 	db	116
  3868  00A177  6F                 	db	111
  3869  00A178  72                 	db	114
  3870  00A179  61                 	db	97
  3871  00A17A  67                 	db	103
  3872  00A17B  65                 	db	101
  3873  00A17C  20                 	db	32
  3874  00A17D  20                 	db	32
  3875  00A17E  20                 	db	32
  3876  00A17F  20                 	db	32
  3877  00A180  30                 	db	48
  3878  00A181  30                 	db	48
  3879  00A182  30                 	db	48
  3880  00A183  31                 	db	49
  3881  00A184                     __end_of_inq_resp:
  3882                           	opt stack 0
  3883  00A184                     _hid_rpt01:
  3884                           	opt stack 0
  3885  00A184  06                 	db	6
  3886  00A185  00                 	db	0
  3887  00A186  FF                 	db	255
  3888  00A187  09                 	db	9
  3889  00A188  01                 	db	1
  3890  00A189  A1                 	db	161
  3891  00A18A  01                 	db	1
  3892  00A18B  19                 	db	25
  3893  00A18C  01                 	db	1
  3894  00A18D  29                 	db	41
  3895  00A18E  40                 	db	64
  3896  00A18F  15                 	db	21
  3897  00A190  00                 	db	0
  3898  00A191  26                 	db	38
  3899  00A192  FF                 	db	255
  3900  00A193  00                 	db	0
  3901  00A194  75                 	db	117
  3902  00A195  08                 	db	8
  3903  00A196  95                 	db	149
  3904  00A197  40                 	db	64
  3905  00A198  81                 	db	129
  3906  00A199  00                 	db	0
  3907  00A19A  19                 	db	25
  3908  00A19B  01                 	db	1
  3909  00A19C  29                 	db	41
  3910  00A19D  40                 	db	64
  3911  00A19E  91                 	db	145
  3912  00A19F  00                 	db	0
  3913  00A1A0  C0                 	db	192
  3914  00A1A1                     __end_of_hid_rpt01:
  3915                           	opt stack 0
  3916  00A1A1                     _sd003:
  3917                           	opt stack 0
  3918  00A1A1  1A                 	db	26
  3919  00A1A2  03                 	db	3
  3920  00A1A3  0031               	dw	49
  3921  00A1A5  0032               	dw	50
  3922  00A1A7  0033               	dw	51
  3923  00A1A9  0034               	dw	52
  3924  00A1AB  0035               	dw	53
  3925  00A1AD  0036               	dw	54
  3926  00A1AF  0037               	dw	55
  3927  00A1B1  0038               	dw	56
  3928  00A1B3  0039               	dw	57
  3929  00A1B5  0030               	dw	48
  3930  00A1B7  0039               	dw	57
  3931  00A1B9  0039               	dw	57
  3932  00A1BB                     __end_of_sd003:
  3933                           	opt stack 0
  3934  00A1BB                     _overshoot_cost_in_steps_string:
  3935                           	opt stack 0
  3936  00A1BB  4F                 	db	79
  3937  00A1BC  56                 	db	86
  3938  00A1BD  45                 	db	69
  3939  00A1BE  52                 	db	82
  3940  00A1BF  53                 	db	83
  3941  00A1C0  48                 	db	72
  3942  00A1C1  4F                 	db	79
  3943  00A1C2  4F                 	db	79
  3944  00A1C3  54                 	db	84
  3945  00A1C4  5F                 	db	95
  3946  00A1C5  43                 	db	67
  3947  00A1C6  4F                 	db	79
  3948  00A1C7  53                 	db	83
  3949  00A1C8  54                 	db	84
  3950  00A1C9  5F                 	db	95
  3951  00A1CA  49                 	db	73
  3952  00A1CB  4E                 	db	78
  3953  00A1CC  5F                 	db	95
  3954  00A1CD  53                 	db	83
  3955  00A1CE  54                 	db	84
  3956  00A1CF  45                 	db	69
  3957  00A1D0  50                 	db	80
  3958  00A1D1  53                 	db	83
  3959  00A1D2  00                 	db	0
  3960  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3961                           	opt stack 0
  3962  00A1D3                     _maximum_speed_manual_string:
  3963                           	opt stack 0
  3964  00A1D3  4D                 	db	77
  3965  00A1D4  41                 	db	65
  3966  00A1D5  58                 	db	88
  3967  00A1D6  49                 	db	73
  3968  00A1D7  4D                 	db	77
  3969  00A1D8  55                 	db	85
  3970  00A1D9  4D                 	db	77
  3971  00A1DA  5F                 	db	95
  3972  00A1DB  53                 	db	83
  3973  00A1DC  50                 	db	80
  3974  00A1DD  45                 	db	69
  3975  00A1DE  45                 	db	69
  3976  00A1DF  44                 	db	68
  3977  00A1E0  5F                 	db	95
  3978  00A1E1  4D                 	db	77
  3979  00A1E2  41                 	db	65
  3980  00A1E3  4E                 	db	78
  3981  00A1E4  55                 	db	85
  3982  00A1E5  41                 	db	65
  3983  00A1E6  4C                 	db	76
  3984  00A1E7  00                 	db	0
  3985  00A1E8                     __end_of_maximum_speed_manual_string:
  3986                           	opt stack 0
  3987  00A1E8                     _initial_speed_manual_string:
  3988                           	opt stack 0
  3989  00A1E8  49                 	db	73
  3990  00A1E9  4E                 	db	78
  3991  00A1EA  49                 	db	73
  3992  00A1EB  54                 	db	84
  3993  00A1EC  49                 	db	73
  3994  00A1ED  41                 	db	65
  3995  00A1EE  4C                 	db	76
  3996  00A1EF  5F                 	db	95
  3997  00A1F0  53                 	db	83
  3998  00A1F1  50                 	db	80
  3999  00A1F2  45                 	db	69
  4000  00A1F3  45                 	db	69
  4001  00A1F4  44                 	db	68
  4002  00A1F5  5F                 	db	95
  4003  00A1F6  4D                 	db	77
  4004  00A1F7  41                 	db	65
  4005  00A1F8  4E                 	db	78
  4006  00A1F9  55                 	db	85
  4007  00A1FA  41                 	db	65
  4008  00A1FB  4C                 	db	76
  4009  00A1FC  00                 	db	0
  4010  00A1FD                     __end_of_initial_speed_manual_string:
  4011                           	opt stack 0
  4012  00A1FD                     _full_circle_in_steps_string:
  4013                           	opt stack 0
  4014  00A1FD  46                 	db	70
  4015  00A1FE  55                 	db	85
  4016  00A1FF  4C                 	db	76
  4017  00A200  4C                 	db	76
  4018  00A201  5F                 	db	95
  4019  00A202  43                 	db	67
  4020  00A203  49                 	db	73
  4021  00A204  52                 	db	82
  4022  00A205  43                 	db	67
  4023  00A206  4C                 	db	76
  4024  00A207  45                 	db	69
  4025  00A208  5F                 	db	95
  4026  00A209  49                 	db	73
  4027  00A20A  4E                 	db	78
  4028  00A20B  5F                 	db	95
  4029  00A20C  53                 	db	83
  4030  00A20D  54                 	db	84
  4031  00A20E  45                 	db	69
  4032  00A20F  50                 	db	80
  4033  00A210  53                 	db	83
  4034  00A211  00                 	db	0
  4035  00A212                     __end_of_full_circle_in_steps_string:
  4036                           	opt stack 0
  4037  00A212                     _overshoot_in_steps_string:
  4038                           	opt stack 0
  4039  00A212  4F                 	db	79
  4040  00A213  56                 	db	86
  4041  00A214  45                 	db	69
  4042  00A215  52                 	db	82
  4043  00A216  53                 	db	83
  4044  00A217  48                 	db	72
  4045  00A218  4F                 	db	79
  4046  00A219  4F                 	db	79
  4047  00A21A  54                 	db	84
  4048  00A21B  5F                 	db	95
  4049  00A21C  49                 	db	73
  4050  00A21D  4E                 	db	78
  4051  00A21E  5F                 	db	95
  4052  00A21F  53                 	db	83
  4053  00A220  54                 	db	84
  4054  00A221  45                 	db	69
  4055  00A222  50                 	db	80
  4056  00A223  53                 	db	83
  4057  00A224  00                 	db	0
  4058  00A225                     __end_of_overshoot_in_steps_string:
  4059                           	opt stack 0
  4060  00A225                     _maximum_speed_arc_string:
  4061                           	opt stack 0
  4062  00A225  4D                 	db	77
  4063  00A226  41                 	db	65
  4064  00A227  58                 	db	88
  4065  00A228  49                 	db	73
  4066  00A229  4D                 	db	77
  4067  00A22A  55                 	db	85
  4068  00A22B  4D                 	db	77
  4069  00A22C  5F                 	db	95
  4070  00A22D  53                 	db	83
  4071  00A22E  50                 	db	80
  4072  00A22F  45                 	db	69
  4073  00A230  45                 	db	69
  4074  00A231  44                 	db	68
  4075  00A232  5F                 	db	95
  4076  00A233  41                 	db	65
  4077  00A234  52                 	db	82
  4078  00A235  43                 	db	67
  4079  00A236  00                 	db	0
  4080  00A237                     __end_of_maximum_speed_arc_string:
  4081                           	opt stack 0
  4082  00A237                     _initial_speed_arc_string:
  4083                           	opt stack 0
  4084  00A237  49                 	db	73
  4085  00A238  4E                 	db	78
  4086  00A239  49                 	db	73
  4087  00A23A  54                 	db	84
  4088  00A23B  49                 	db	73
  4089  00A23C  41                 	db	65
  4090  00A23D  4C                 	db	76
  4091  00A23E  5F                 	db	95
  4092  00A23F  53                 	db	83
  4093  00A240  50                 	db	80
  4094  00A241  45                 	db	69
  4095  00A242  45                 	db	69
  4096  00A243  44                 	db	68
  4097  00A244  5F                 	db	95
  4098  00A245  41                 	db	65
  4099  00A246  52                 	db	82
  4100  00A247  43                 	db	67
  4101  00A248  00                 	db	0
  4102  00A249                     __end_of_initial_speed_arc_string:
  4103                           	opt stack 0
  4104  00A249                     _inverse_direction_string:
  4105                           	opt stack 0
  4106  00A249  49                 	db	73
  4107  00A24A  4E                 	db	78
  4108  00A24B  56                 	db	86
  4109  00A24C  45                 	db	69
  4110  00A24D  52                 	db	82
  4111  00A24E  53                 	db	83
  4112  00A24F  45                 	db	69
  4113  00A250  5F                 	db	95
  4114  00A251  44                 	db	68
  4115  00A252  49                 	db	73
  4116  00A253  52                 	db	82
  4117  00A254  45                 	db	69
  4118  00A255  43                 	db	67
  4119  00A256  54                 	db	84
  4120  00A257  49                 	db	73
  4121  00A258  4F                 	db	79
  4122  00A259  4E                 	db	78
  4123  00A25A  00                 	db	0
  4124  00A25B                     __end_of_inverse_direction_string:
  4125                           	opt stack 0
  4126  00A25B                     _device_dsc:
  4127                           	opt stack 0
  4128  00A25B  12                 	db	18
  4129  00A25C  01                 	db	1
  4130  00A25D  0200               	dw	512
  4131  00A25F  00                 	db	0
  4132  00A260  00                 	db	0
  4133  00A261  00                 	db	0
  4134  00A262  08                 	db	8
  4135  00A263  04D8               	dw	1240
  4136  00A265  EDCF               	dw	60879
  4137  00A267  0100               	dw	256
  4138  00A269  01                 	db	1
  4139  00A26A  02                 	db	2
  4140  00A26B  00                 	db	0
  4141  00A26C  01                 	db	1
  4142  00A26D                     __end_of_device_dsc:
  4143                           	opt stack 0
  4144  00A26D                     _use_ccw_limit_string:
  4145                           	opt stack 0
  4146  00A26D  55                 	db	85
  4147  00A26E  53                 	db	83
  4148  00A26F  45                 	db	69
  4149  00A270  5F                 	db	95
  4150  00A271  43                 	db	67
  4151  00A272  43                 	db	67
  4152  00A273  57                 	db	87
  4153  00A274  5F                 	db	95
  4154  00A275  4C                 	db	76
  4155  00A276  49                 	db	73
  4156  00A277  4D                 	db	77
  4157  00A278  49                 	db	73
  4158  00A279  54                 	db	84
  4159  00A27A  00                 	db	0
  4160  00A27B                     __end_of_use_ccw_limit_string:
  4161                           	opt stack 0
  4162  00A27B                     _beep_duration_string:
  4163                           	opt stack 0
  4164  00A27B  42                 	db	66
  4165  00A27C  45                 	db	69
  4166  00A27D  45                 	db	69
  4167  00A27E  50                 	db	80
  4168  00A27F  5F                 	db	95
  4169  00A280  44                 	db	68
  4170  00A281  55                 	db	85
  4171  00A282  52                 	db	82
  4172  00A283  41                 	db	65
  4173  00A284  54                 	db	84
  4174  00A285  49                 	db	73
  4175  00A286  4F                 	db	79
  4176  00A287  4E                 	db	78
  4177  00A288  00                 	db	0
  4178  00A289                     __end_of_beep_duration_string:
  4179                           	opt stack 0
  4180  00A289                     _maximum_speed_string:
  4181                           	opt stack 0
  4182  00A289  4D                 	db	77
  4183  00A28A  41                 	db	65
  4184  00A28B  58                 	db	88
  4185  00A28C  49                 	db	73
  4186  00A28D  4D                 	db	77
  4187  00A28E  55                 	db	85
  4188  00A28F  4D                 	db	77
  4189  00A290  5F                 	db	95
  4190  00A291  53                 	db	83
  4191  00A292  50                 	db	80
  4192  00A293  45                 	db	69
  4193  00A294  45                 	db	69
  4194  00A295  44                 	db	68
  4195  00A296  00                 	db	0
  4196  00A297                     __end_of_maximum_speed_string:
  4197                           	opt stack 0
  4198  00A297                     _minimum_speed_string:
  4199                           	opt stack 0
  4200  00A297  4D                 	db	77
  4201  00A298  49                 	db	73
  4202  00A299  4E                 	db	78
  4203  00A29A  49                 	db	73
  4204  00A29B  4D                 	db	77
  4205  00A29C  55                 	db	85
  4206  00A29D  4D                 	db	77
  4207  00A29E  5F                 	db	95
  4208  00A29F  53                 	db	83
  4209  00A2A0  50                 	db	80
  4210  00A2A1  45                 	db	69
  4211  00A2A2  45                 	db	69
  4212  00A2A3  44                 	db	68
  4213  00A2A4  00                 	db	0
  4214  00A2A5                     __end_of_minimum_speed_string:
  4215                           	opt stack 0
  4216  00A2A5                     _use_cw_limit_string:
  4217                           	opt stack 0
  4218  00A2A5  55                 	db	85
  4219  00A2A6  53                 	db	83
  4220  00A2A7  45                 	db	69
  4221  00A2A8  5F                 	db	95
  4222  00A2A9  43                 	db	67
  4223  00A2AA  57                 	db	87
  4224  00A2AB  5F                 	db	95
  4225  00A2AC  4C                 	db	76
  4226  00A2AD  49                 	db	73
  4227  00A2AE  4D                 	db	77
  4228  00A2AF  49                 	db	73
  4229  00A2B0  54                 	db	84
  4230  00A2B1  00                 	db	0
  4231  00A2B2                     __end_of_use_cw_limit_string:
  4232                           	opt stack 0
  4233  00A2B2                     _ccw_limit_string:
  4234                           	opt stack 0
  4235  00A2B2  43                 	db	67
  4236  00A2B3  43                 	db	67
  4237  00A2B4  57                 	db	87
  4238  00A2B5  5F                 	db	95
  4239  00A2B6  4C                 	db	76
  4240  00A2B7  49                 	db	73
  4241  00A2B8  4D                 	db	77
  4242  00A2B9  49                 	db	73
  4243  00A2BA  54                 	db	84
  4244  00A2BB  00                 	db	0
  4245  00A2BC                     __end_of_ccw_limit_string:
  4246                           	opt stack 0
  4247  00A2BC                     _cw_limit_string:
  4248                           	opt stack 0
  4249  00A2BC  43                 	db	67
  4250  00A2BD  57                 	db	87
  4251  00A2BE  5F                 	db	95
  4252  00A2BF  4C                 	db	76
  4253  00A2C0  49                 	db	73
  4254  00A2C1  4D                 	db	77
  4255  00A2C2  49                 	db	73
  4256  00A2C3  54                 	db	84
  4257  00A2C4  00                 	db	0
  4258  00A2C5                     __end_of_cw_limit_string:
  4259                           	opt stack 0
  4260  00A2C5                     _bit_pattern_ae:
  4261                           	opt stack 0
  4262  00A2C5  0A                 	db	10
  4263  00A2C6  00                 	db	0
  4264  00A2C7  0E                 	db	14
  4265  00A2C8  01                 	db	1
  4266  00A2C9  0F                 	db	15
  4267  00A2CA  11                 	db	17
  4268  00A2CB  0F                 	db	15
  4269  00A2CC  00                 	db	0
  4270  00A2CD                     __end_of_bit_pattern_ae:
  4271                           	opt stack 0
  4272  00A2CD                     _bit_pattern_degree:
  4273                           	opt stack 0
  4274  00A2CD  18                 	db	24
  4275  00A2CE  18                 	db	24
  4276  00A2CF  00                 	db	0
  4277  00A2D0  00                 	db	0
  4278  00A2D1  00                 	db	0
  4279  00A2D2  00                 	db	0
  4280  00A2D3  00                 	db	0
  4281  00A2D4  00                 	db	0
  4282  00A2D5                     __end_of_bit_pattern_degree:
  4283                           	opt stack 0
  4284  00A2D5                     _bit_pattern_verticalbar:
  4285                           	opt stack 0
  4286  00A2D5  04                 	db	4
  4287  00A2D6  04                 	db	4
  4288  00A2D7  04                 	db	4
  4289  00A2D8  04                 	db	4
  4290  00A2D9  04                 	db	4
  4291  00A2DA  04                 	db	4
  4292  00A2DB  04                 	db	4
  4293  00A2DC  04                 	db	4
  4294  00A2DD                     __end_of_bit_pattern_verticalbar:
  4295                           	opt stack 0
  4296  00A2DD                     _flash_command_pagesize_528:
  4297                           	opt stack 0
  4298  00A2DD  3D                 	db	61
  4299  00A2DE  2A                 	db	42
  4300  00A2DF  80                 	db	128
  4301  00A2E0  A7                 	db	167
  4302  00A2E1                     __end_of_flash_command_pagesize_528:
  4303                           	opt stack 0
  4304  00A2E1                     _flash_command_pagesize_512:
  4305                           	opt stack 0
  4306  00A2E1  3D                 	db	61
  4307  00A2E2  2A                 	db	42
  4308  00A2E3  80                 	db	128
  4309  00A2E4  A6                 	db	166
  4310  00A2E5                     __end_of_flash_command_pagesize_512:
  4311                           	opt stack 0
  4312  00A2E5                     _sd000:
  4313                           	opt stack 0
  4314  00A2E5  04                 	db	4
  4315  00A2E6  03                 	db	3
  4316  00A2E7  0409               	dw	1033
  4317  00A2E9                     __end_of_sd000:
  4318                           	opt stack 0
  4319  0000                     _RPINR22	set	3837
  4320  0000                     _RPOR23	set	3799
  4321  0000                     _RPOR21	set	3797
  4322  0000                     _RPINR21	set	3836
  4323  0000                     _RPOR4	set	3780
  4324  0000                     _PPSCONbits	set	3775
  4325  0000                     _CCPTMRS0bits	set	3922
  4326  0000                     _ANCON0bits	set	3912
  4327  0000                     _ANCON1bits	set	3913
  4328  0000                     _UEP0bits	set	3878
  4329  0000                     _UIEbits	set	3894
  4330  0000                     _UADDR	set	3896
  4331  0000                     _UIE	set	3894
  4332  0000                     _UEIE	set	3895
  4333  0000                     _UCFG	set	3897
  4334  0000                     _UEP1	set	3879
  4335  0000                     _UEP0	set	3878
  4336  0000                     _ADRESL	set	4035
  4337  0000                     _ADRESH	set	4036
  4338  0000                     _ADCON1bits	set	4033
  4339  0000                     _ADCON0bits	set	4034
  4340  0000                     _PORTA	set	3968
  4341  0000                     _PORTE	set	3972
  4342  0000                     _TMR2	set	4044
  4343  0000                     _PIE1bits	set	3997
  4344  0000                     _CCPR1L	set	4027
  4345  0000                     _PR2	set	4043
  4346  0000                     _T2CONbits	set	4042
  4347  0000                     _CCP1CONbits	set	4026
  4348  0000                     _RXADDRL	set	3945
  4349  0000                     _RXADDRH	set	3944
  4350  0000                     _DMABCL	set	3943
  4351  0000                     _DMABCH	set	3942
  4352  0000                     _TXADDRL	set	3947
  4353  0000                     _TXADDRH	set	3946
  4354  0000                     _DMACON2bits	set	3974
  4355  0000                     _DMACON1bits	set	3976
  4356  0000                     _SSP2CON1bits	set	3954
  4357  0000                     _SSP2STATbits	set	3955
  4358  0000                     _PORTDbits	set	3971
  4359  0000                     _PORTEbits	set	3972
  4360  0000                     _SSP1BUF	set	4041
  4361  0000                     _SSP1CON2bits	set	4037
  4362  0000                     _SSP1CON1bits	set	4038
  4363  0000                     _SSP1ADD	set	4040
  4364  0000                     _SSP1STATbits	set	4039
  4365  0000                     _PORTAbits	set	3968
  4366  0000                     _T0CONbits	set	4053
  4367  0000                     _TRISEbits	set	3990
  4368  0000                     _EECON2	set	4007
  4369  0000                     _LATBbits	set	3978
  4370  0000                     _LATAbits	set	3977
  4371  0000                     _TRISAbits	set	3986
  4372  0000                     _LATCbits	set	3979
  4373  0000                     _TRISCbits	set	3988
  4374  0000                     _TRISBbits	set	3987
  4375  0000                     _LATDbits	set	3980
  4376  0000                     _TRISDbits	set	3989
  4377  0000                     _TMR0L	set	4054
  4378  0000                     _TMR0H	set	4055
  4379  0000                     _PIR1bits	set	3998
  4380  0000                     _OSCCON	set	4051
  4381  0000                     _OSCTUNEbits	set	3995
  4382  0000                     _INTCONbits	set	4082
  4383  0000                     _IPR2bits	set	4002
  4384  0000                     _RCONbits	set	4048
  4385  0000                     _UCON	set	3941
  4386  0000                     _USTAT	set	3940
  4387  0000                     _PIR2bits	set	4001
  4388  0000                     _UIRbits	set	3938
  4389  0000                     _UCONbits	set	3941
  4390  0000                     _UIR	set	3938
  4391  0000                     _UEIR	set	3939
  4392  0000                     _PIE2bits	set	4000
  4393  00A2E9                     STR_18:
  4394                           
  4395                           ; BSR set to: 1
  4396  00A2E9  68                 	db	104	;'h'
  4397  00A2EA  65                 	db	101	;'e'
  4398  00A2EB  6C                 	db	108	;'l'
  4399  00A2EC  6C                 	db	108	;'l'
  4400  00A2ED  6F                 	db	111	;'o'
  4401  00A2EE  20                 	db	32
  4402  00A2EF  77                 	db	119	;'w'
  4403  00A2F0  6F                 	db	111	;'o'
  4404  00A2F1  72                 	db	114	;'r'
  4405  00A2F2  6C                 	db	108	;'l'
  4406  00A2F3  64                 	db	100	;'d'
  4407  00A2F4  21                 	db	33
  4408  00A2F5  00                 	db	0
  4409  00A2F6                     STR_15:
  4410                           
  4411                           ; BSR set to: 1
  4412  00A2F6  53                 	db	83	;'S'
  4413  00A2F7  74                 	db	116	;'t'
  4414  00A2F8  65                 	db	101	;'e'
  4415  00A2F9  70                 	db	112	;'p'
  4416  00A2FA  70                 	db	112	;'p'
  4417  00A2FB  65                 	db	101	;'e'
  4418  00A2FC  72                 	db	114	;'r'
  4419  00A2FD  43                 	db	67	;'C'
  4420  00A2FE  74                 	db	116	;'t'
  4421  00A2FF  72                 	db	114	;'r'
  4422  00A300  6C                 	db	108	;'l'
  4423  00A301  00                 	db	0
  4424  00A302                     STR_16:
  4425                           
  4426                           ; BSR set to: 1
  4427  00A302  46                 	db	70	;'F'
  4428  00A303  49                 	db	73	;'I'
  4429  00A304  4C                 	db	76	;'L'
  4430  00A305  45                 	db	69	;'E'
  4431  00A306  20                 	db	32
  4432  00A307  20                 	db	32
  4433  00A308  20                 	db	32
  4434  00A309  20                 	db	32
  4435  00A30A  00                 	db	0
  4436  00A30B                     STR_7:
  4437                           
  4438                           ; BSR set to: 1
  4439  00A30B  4D                 	db	77	;'M'
  4440  00A30C  53                 	db	83	;'S'
  4441  00A30D  44                 	db	68	;'D'
  4442  00A30E  4F                 	db	79	;'O'
  4443  00A30F  53                 	db	83	;'S'
  4444  00A310  35                 	db	53	;'5'
  4445  00A311  2E                 	db	46
  4446  00A312  30                 	db	48	;'0'
  4447  00A313  00                 	db	0
  4448  00A314                     STR_1:
  4449                           
  4450                           ; BSR set to: 1
  4451  00A314  20                 	db	32
  4452  00A315  20                 	db	32
  4453  00A316  20                 	db	32
  4454  00A317  20                 	db	32
  4455  00A318  20                 	db	32
  4456  00A319  20                 	db	32
  4457  00A31A  20                 	db	32
  4458  00A31B  20                 	db	32
  4459  00A31C  00                 	db	0
  4460  00A31D                     STR_2:
  4461                           
  4462                           ; BSR set to: 1
  4463  00A31D  43                 	db	67	;'C'
  4464  00A31E  61                 	db	97	;'a'
  4465  00A31F  6E                 	db	110	;'n'
  4466  00A320  63                 	db	99	;'c'
  4467  00A321  65                 	db	101	;'e'
  4468  00A322  6C                 	db	108	;'l'
  4469  00A323  00                 	db	0
  4470  00A324                     STR_6:
  4471                           
  4472                           ; BSR set to: 1
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  74                 	db	116	;'t'
  4475  00A326  6F                 	db	111	;'o'
  4476  00A327  70                 	db	112	;'p'
  4477  00A328  20                 	db	32
  4478  00A329  00                 	db	0
  4479  00A32A                     STR_17:
  4480                           
  4481                           ; BSR set to: 1
  4482  00A32A  54                 	db	84	;'T'
  4483  00A32B  58                 	db	88	;'X'
  4484  00A32C  54                 	db	84	;'T'
  4485  00A32D  00                 	db	0
  4486  0000                     
  4487                           ; #config settings
  4488  00A32E  00                 	db	0	; dummy byte at the end
  4489  0000                     
  4490                           	psect	cinit
  4491  0135BC                     __pcinit:
  4492                           	opt stack 0
  4493  0135BC                     start_initialization:
  4494                           	opt stack 0
  4495  0135BC                     __initialization:
  4496                           	opt stack 0
  4497                           
  4498                           ; Initialize objects allocated to BANK4 (80 bytes)
  4499                           ; load TBLPTR registers with __pidataBANK4
  4500  0135BC  0E54               	movlw	low __pidataBANK4
  4501  0135BE  6EF6               	movwf	tblptrl,c
  4502  0135C0  0E4B               	movlw	high __pidataBANK4
  4503  0135C2  6EF7               	movwf	tblptrh,c
  4504  0135C4  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4505  0135C6  6EF8               	movwf	tblptru,c
  4506  0135C8  EE04  F000         	lfsr	0,__pdataBANK4
  4507  0135CC  EE10 F050          	lfsr	1,80
  4508  0135D0                     copy_data0:
  4509  0135D0  0009               	tblrd		*+
  4510  0135D2  CFF5 FFEE          	movff	tablat,postinc0
  4511  0135D6  50E5               	movf	postdec1,w,c
  4512  0135D8  50E1               	movf	fsr1l,w,c
  4513  0135DA  E1FA               	bnz	copy_data0
  4514                           
  4515                           ; Initialize objects allocated to BANK2 (77 bytes)
  4516                           ; load TBLPTR registers with __pidataBANK2
  4517  0135DC  0EE4               	movlw	low __pidataBANK2
  4518  0135DE  6EF6               	movwf	tblptrl,c
  4519  0135E0  0E4C               	movlw	high __pidataBANK2
  4520  0135E2  6EF7               	movwf	tblptrh,c
  4521  0135E4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4522  0135E6  6EF8               	movwf	tblptru,c
  4523  0135E8  EE02  F089         	lfsr	0,__pdataBANK2
  4524  0135EC  EE10 F04D          	lfsr	1,77
  4525  0135F0                     copy_data1:
  4526  0135F0  0009               	tblrd		*+
  4527  0135F2  CFF5 FFEE          	movff	tablat,postinc0
  4528  0135F6  50E5               	movf	postdec1,w,c
  4529  0135F8  50E1               	movf	fsr1l,w,c
  4530  0135FA  E1FA               	bnz	copy_data1
  4531                           
  4532                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4533  0135FC  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4534  013600  EE14 F000          	lfsr	1,1024
  4535  013604                     clear_0:
  4536  013604  6AEE               	clrf	postinc0,c
  4537  013606  50E5               	movf	postdec1,w,c
  4538  013608  50E1               	movf	fsr1l,w,c
  4539  01360A  E1FC               	bnz	clear_0
  4540  01360C  50E2               	movf	fsr1h,w,c
  4541  01360E  E1FA               	bnz	clear_0
  4542                           
  4543                           ; Clear objects allocated to BANK3 (184 bytes)
  4544  013610  EE03  F000         	lfsr	0,__pbssBANK3
  4545  013614  0EB8               	movlw	184
  4546  013616                     clear_1:
  4547  013616  6AEE               	clrf	postinc0,c
  4548  013618  06E8               	decf	wreg,f,c
  4549  01361A  E1FD               	bnz	clear_1
  4550                           
  4551                           ; Clear objects allocated to BANK2 (137 bytes)
  4552  01361C  EE02  F000         	lfsr	0,__pbssBANK2
  4553  013620  0E89               	movlw	137
  4554  013622                     clear_2:
  4555  013622  6AEE               	clrf	postinc0,c
  4556  013624  06E8               	decf	wreg,f,c
  4557  013626  E1FD               	bnz	clear_2
  4558                           
  4559                           ; Clear objects allocated to BANK1 (195 bytes)
  4560  013628  EE01  F000         	lfsr	0,__pbssBANK1
  4561  01362C  0EC3               	movlw	195
  4562  01362E                     clear_3:
  4563  01362E  6AEE               	clrf	postinc0,c
  4564  013630  06E8               	decf	wreg,f,c
  4565  013632  E1FD               	bnz	clear_3
  4566                           
  4567                           ; Clear objects allocated to BANK0 (2 bytes)
  4568  013634  0100               	movlb	0
  4569  013636  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4570  013638  6BFE               	clrf	__pbssBANK0& (0+255),b
  4571                           
  4572                           ; Clear objects allocated to COMRAM (13 bytes)
  4573  01363A  EE00  F052         	lfsr	0,__pbssCOMRAM
  4574  01363E  0E0D               	movlw	13
  4575  013640                     clear_4:
  4576  013640  6AEE               	clrf	postinc0,c
  4577  013642  06E8               	decf	wreg,f,c
  4578  013644  E1FD               	bnz	clear_4
  4579  013646                     end_of_initialization:
  4580                           	opt stack 0
  4581  013646                     __end_of__initialization:
  4582                           	opt stack 0
  4583  013646  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4584  013648  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4585  01364A  0100               	movlb	0
  4586  01364C  EF93  F09A         	goto	_main	;jump to C main() function
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           
  4597                           	psect	bssCOMRAM
  4598  000052                     __pbssCOMRAM:
  4599                           	opt stack 0
  4600  000052                     _inPipes:
  4601                           	opt stack 0
  4602  000052                     	ds	6
  4603  000058                     _motor_current_stepcount:
  4604                           	opt stack 0
  4605  000058                     	ds	4
  4606  00005C                     _pBDTEntryEP0OutNext:
  4607                           	opt stack 0
  4608  00005C                     	ds	2
  4609  00005E                     _USBDeviceState:
  4610                           	opt stack 0
  4611  00005E                     	ds	1
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           
  4622                           	psect	bssBANK0
  4623  0000FE                     __pbssBANK0:
  4624                           	opt stack 0
  4625  0000FE                     _motor_current_speed:
  4626                           	opt stack 0
  4627  0000FE                     	ds	2
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           
  4638                           	psect	bssBANK1
  4639  000100                     __pbssBANK1:
  4640                           	opt stack 0
  4641  000100                     _gblSenseData:
  4642                           	opt stack 0
  4643  000100                     	ds	18
  4644  000112                     _outPipes:
  4645                           	opt stack 0
  4646  000112                     	ds	9
  4647  00011B                     _pBDTEntryIn:
  4648                           	opt stack 0
  4649  00011B                     	ds	6
  4650  000121                     _pBDTEntryOut:
  4651                           	opt stack 0
  4652  000121                     	ds	6
  4653  000127                     _motor_final_stepcount:
  4654                           	opt stack 0
  4655  000127                     	ds	4
  4656  00012B                     _LBA:
  4657                           	opt stack 0
  4658  00012B                     	ds	4
  4659  00012F                     _USB1msTickCount:
  4660                           	opt stack 0
  4661  00012F                     	ds	4
  4662  000133                     _config_external:
  4663                           	opt stack 0
  4664  000133                     	ds	3
  4665  000136                     _config_internal:
  4666                           	opt stack 0
  4667  000136                     	ds	3
  4668  000139                     _ep_data_out:
  4669                           	opt stack 0
  4670  000139                     	ds	3
  4671  00013C                     _ep_data_in:
  4672                           	opt stack 0
  4673  00013C                     	ds	3
  4674  00013F                     _motor_maximum_speed:
  4675                           	opt stack 0
  4676  00013F                     	ds	2
  4677  000141                     _USBInHandle:
  4678                           	opt stack 0
  4679  000141                     	ds	2
  4680  000143                     _USBOutHandle:
  4681                           	opt stack 0
  4682  000143                     	ds	2
  4683  000145                     _TransferLength:
  4684                           	opt stack 0
  4685  000145                     	ds	2
  4686  000147                     _gblMediaPresent:
  4687                           	opt stack 0
  4688  000147                     	ds	2
  4689  000149                     _USBMSDInHandle:
  4690                           	opt stack 0
  4691  000149                     	ds	2
  4692  00014B                     _USBMSDOutHandle:
  4693                           	opt stack 0
  4694  00014B                     	ds	2
  4695  00014D                     _ptrNextData:
  4696                           	opt stack 0
  4697  00014D                     	ds	2
  4698  00014F                     _pDst:
  4699                           	opt stack 0
  4700  00014F                     	ds	2
  4701  000151                     _pBDTEntryEP0OutCurrent:
  4702                           	opt stack 0
  4703  000151                     	ds	2
  4704  000153                     _enc2:
  4705                           	opt stack 0
  4706  000153                     	ds	1
  4707  000154                     _enc1:
  4708                           	opt stack 0
  4709  000154                     	ds	1
  4710  000155                     _motor_direction:
  4711                           	opt stack 0
  4712  000155                     	ds	1
  4713  000156                     _motor_mode:
  4714                           	opt stack 0
  4715  000156                     	ds	1
  4716  000157                     _motor_cue_write_index:
  4717                           	opt stack 0
  4718  000157                     	ds	1
  4719  000158                     _motor_cue_read_index:
  4720                           	opt stack 0
  4721  000158                     	ds	1
  4722  000159                     _active_configuration:
  4723                           	opt stack 0
  4724  000159                     	ds	1
  4725  00015A                     _power_state:
  4726                           	opt stack 0
  4727  00015A                     	ds	1
  4728  00015B                     _MSDCBWValid:
  4729                           	opt stack 0
  4730  00015B                     	ds	1
  4731  00015C                     _MSDHostNoData:
  4732                           	opt stack 0
  4733  00015C                     	ds	1
  4734  00015D                     _SoftDetach:
  4735                           	opt stack 0
  4736  00015D                     	ds	1
  4737  00015E                     _gblCBWLength:
  4738                           	opt stack 0
  4739  00015E                     	ds	1
  4740  00015F                     _MSDRetryAttempt:
  4741                           	opt stack 0
  4742  00015F                     	ds	1
  4743  000160                     _MSDWriteState:
  4744                           	opt stack 0
  4745  000160                     	ds	1
  4746  000161                     _MSDReadState:
  4747                           	opt stack 0
  4748  000161                     	ds	1
  4749  000162                     _MSDCommandState:
  4750                           	opt stack 0
  4751  000162                     	ds	1
  4752  000163                     _MSD_State:
  4753                           	opt stack 0
  4754  000163                     	ds	1
  4755  000164                     _USBTicksSinceSuspendEnd:
  4756                           	opt stack 0
  4757  000164                     	ds	1
  4758  000165                     _USBDeferOUTDataStagePackets:
  4759                           	opt stack 0
  4760  000165                     	ds	1
  4761  000166                     _USBDeferINDataStagePackets:
  4762                           	opt stack 0
  4763  000166                     	ds	1
  4764  000167                     _USBStatusStageEnabledFlag2:
  4765                           	opt stack 0
  4766  000167                     	ds	1
  4767  000168                     _USBStatusStageEnabledFlag1:
  4768                           	opt stack 0
  4769  000168                     	ds	1
  4770  000169                     _USBDeferStatusStagePacket:
  4771                           	opt stack 0
  4772  000169                     	ds	1
  4773  00016A                     _USBStatusStageTimeoutCounter:
  4774                           	opt stack 0
  4775  00016A                     	ds	1
  4776  00016B                     _BothEP0OutUOWNsSet:
  4777                           	opt stack 0
  4778  00016B                     	ds	1
  4779  00016C                     _endpoint_number:
  4780                           	opt stack 0
  4781  00016C                     	ds	1
  4782  00016D                     _USBBusIsSuspended:
  4783                           	opt stack 0
  4784  00016D                     	ds	1
  4785  00016E                     _RemoteWakeup:
  4786                           	opt stack 0
  4787  00016E                     	ds	1
  4788  00016F                     _controlTransferState:
  4789                           	opt stack 0
  4790  00016F                     	ds	1
  4791  000170                     _shortPacketStatus:
  4792                           	opt stack 0
  4793  000170                     	ds	1
  4794  000171                     _os:
  4795                           	opt stack 0
  4796  000171                     	ds	48
  4797  0001A1                     _config:
  4798                           	opt stack 0
  4799  0001A1                     	ds	28
  4800  0001BD                     _USBAlternateInterface:
  4801                           	opt stack 0
  4802  0001BD                     	ds	2
  4803  0001BF                     _active_protocol:
  4804                           	opt stack 0
  4805  0001BF                     	ds	1
  4806  0001C0                     _idle_rate:
  4807                           	opt stack 0
  4808  0001C0                     	ds	1
  4809  0001C1                     _USTATcopy:
  4810                           	opt stack 0
  4811  0001C1                     	ds	1
  4812  0001C2                     _USBActiveConfiguration:
  4813                           	opt stack 0
  4814  0001C2                     	ds	1
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postdec1	equ	0xFE5
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           
  4825                           	psect	bssBANK2
  4826  000200                     __pbssBANK2:
  4827                           	opt stack 0
  4828  000200                     _gblCBW:
  4829                           	opt stack 0
  4830  000200                     	ds	31
  4831  00021F                     _params:
  4832                           	opt stack 0
  4833  00021F                     	ds	7
  4834  000226                     _motor_next_speed_check:
  4835                           	opt stack 0
  4836  000226                     	ds	4
  4837  00022A                     _gblBLKLen:
  4838                           	opt stack 0
  4839  00022A                     	ds	4
  4840  00022E                     _gblNumBLKS:
  4841                           	opt stack 0
  4842  00022E                     	ds	4
  4843  000232                     _MSBBufferIndex:
  4844                           	opt stack 0
  4845  000232                     	ds	2
  4846  000234                     _display_content:
  4847                           	opt stack 0
  4848  000234                     	ds	80
  4849  000284                     _mediaInformation:
  4850                           	opt stack 0
  4851  000284                     	ds	5
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           
  4862                           	psect	dataBANK2
  4863  000289                     __pdataBANK2:
  4864                           	opt stack 0
  4865  000289                     _LUN:
  4866                           	opt stack 0
  4867  000289                     	ds	29
  4868  0002A6                     i2c_display_init@F6942:
  4869                           	opt stack 0
  4870  0002A6                     	ds	9
  4871  0002AF                     __i2c_display_send_init_sequence@F6939:
  4872                           	opt stack 0
  4873  0002AF                     	ds	9
  4874  0002B8                     	ds	8
  4875  0002C0                     _configFile_used_name:
  4876                           	opt stack 0
  4877  0002C0                     	ds	8
  4878  0002C8                     _configFile_name:
  4879                           	opt stack 0
  4880  0002C8                     	ds	8
  4881  0002D0                     _configFile_used_extention:
  4882                           	opt stack 0
  4883  0002D0                     	ds	3
  4884  0002D3                     _configFile_extention:
  4885                           	opt stack 0
  4886  0002D3                     	ds	3
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           postdec1	equ	0xFE5
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           
  4897                           	psect	bssBANK3
  4898  000300                     __pbssBANK3:
  4899                           	opt stack 0
  4900  000300                     _motor_command_cue:
  4901                           	opt stack 0
  4902  000300                     	ds	56
  4903  000338                     _ToSendDataBuffer:
  4904                           	opt stack 0
  4905  000338                     	ds	64
  4906  000378                     _ReceivedDataBuffer:
  4907                           	opt stack 0
  4908  000378                     	ds	64
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           postinc0	equ	0xFEE
  4914                           wreg	equ	0xFE8
  4915                           postdec1	equ	0xFE5
  4916                           fsr1h	equ	0xFE2
  4917                           fsr1l	equ	0xFE1
  4918                           
  4919                           	psect	dataBANK4
  4920  000400                     __pdataBANK4:
  4921                           	opt stack 0
  4922  000400                     _dc_startup:
  4923                           	opt stack 0
  4924  000400                     	ds	80
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           
  4935                           	psect	bssBIGRAMll
  4936  000800                     __pbssBIGRAMll:
  4937                           	opt stack 0
  4938  000800                     _ConfigFile_buffer:
  4939                           	opt stack 0
  4940  000800                     	ds	512
  4941  000A00                     _buffer:
  4942                           	opt stack 0
  4943  000A00                     	ds	512
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           postdec1	equ	0xFE5
  4951                           fsr1h	equ	0xFE2
  4952                           fsr1l	equ	0xFE1
  4953                           
  4954                           	psect	cstackBANK1
  4955  0001C3                     __pcstackBANK1:
  4956                           	opt stack 0
  4957  0001C3                     ??_configFile_read:
  4958                           
  4959                           ; 1 bytes @ 0x0
  4960  0001C3                     	ds	8
  4961  0001CB                     configFile_read@item_string:
  4962                           	opt stack 0
  4963                           
  4964                           ; 31 bytes @ 0x8
  4965  0001CB                     	ds	31
  4966  0001EA                     configFile_read@value_string:
  4967                           	opt stack 0
  4968                           
  4969                           ; 12 bytes @ 0x27
  4970  0001EA                     	ds	12
  4971  0001F6                     configFile_read@file_size:
  4972                           	opt stack 0
  4973                           
  4974                           ; 4 bytes @ 0x33
  4975  0001F6                     	ds	4
  4976  0001FA                     configFile_read@file_number:
  4977                           	opt stack 0
  4978                           
  4979                           ; 1 bytes @ 0x37
  4980  0001FA                     	ds	1
  4981  0001FB                     configFile_read@position:
  4982                           	opt stack 0
  4983                           
  4984                           ; 4 bytes @ 0x38
  4985  0001FB                     	ds	4
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           
  4996                           	psect	cstackBANK0
  4997  000060                     __pcstackBANK0:
  4998                           	opt stack 0
  4999  000060                     ??_motor_stop:
  5000  000060                     ??_isdigit:
  5001  000060                     ??__i2c_wait_idle:
  5002  000060                     ??__display_clear:
  5003  000060                     ??__divide_jump_size_increment:
  5004  000060                     ??__divide_jump_size_decrement:
  5005  000060                     ?_USBTransferOnePacket:
  5006                           	opt stack 0
  5007  000060                     ?_ExternalFlash_MediaInitialize:
  5008                           	opt stack 0
  5009  000060                     ?_ExternalFlash_SectorSizeRead:
  5010                           	opt stack 0
  5011  000060                     ?_strlen:
  5012                           	opt stack 0
  5013  000060                     ?_strncmp:
  5014                           	opt stack 0
  5015  000060                     ?__sector_from_file_number:
  5016                           	opt stack 0
  5017  000060                     ?__offset_from_file_number:
  5018                           	opt stack 0
  5019  000060                     ?__data_sector_from_cluster:
  5020                           	opt stack 0
  5021  000060                     ?__fat_sector_from_cluster:
  5022                           	opt stack 0
  5023  000060                     ?__fat_offset_from_cluster:
  5024                           	opt stack 0
  5025  000060                     ?__cluster_from_sector_and_offset:
  5026                           	opt stack 0
  5027  000060                     ?__get_available_offset_from_buffer:
  5028                           	opt stack 0
  5029  000060                     ?__read_value_from_offset:
  5030                           	opt stack 0
  5031  000060                     ?__get_time:
  5032                           	opt stack 0
  5033  000060                     ?__get_date:
  5034                           	opt stack 0
  5035  000060                     ?__encoder_next_setup_stepsize:
  5036                           	opt stack 0
  5037  000060                     ?__encoder_next_arc_step_size:
  5038                           	opt stack 0
  5039  000060                     ?___wmul:
  5040                           	opt stack 0
  5041  000060                     ?___lwdiv:
  5042                           	opt stack 0
  5043  000060                     ?___lwmod:
  5044                           	opt stack 0
  5045  000060                     ?_ExternalFlash_CapacityRead:
  5046                           	opt stack 0
  5047  000060                     ?___lmul:
  5048                           	opt stack 0
  5049  000060                     ?___lldiv:
  5050                           	opt stack 0
  5051  000060                     ?___aldiv:
  5052                           	opt stack 0
  5053  000060                     ?___almod:
  5054                           	opt stack 0
  5055  000060                     ?___fltol:
  5056                           	opt stack 0
  5057  000060                     ?___llmod:
  5058                           	opt stack 0
  5059  000060                     ?___xxtofl:
  5060                           	opt stack 0
  5061  000060                     USBTransferOnePacket@dir:
  5062                           	opt stack 0
  5063  000060                     USBStallEndpoint@dir:
  5064                           	opt stack 0
  5065  000060                     __i2c_send@dat:
  5066                           	opt stack 0
  5067  000060                     display_get_character@position:
  5068                           	opt stack 0
  5069  000060                     __encoder_next_divide_step_size@old_stepsize:
  5070                           	opt stack 0
  5071  000060                     toupper@c:
  5072                           	opt stack 0
  5073  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5074                           	opt stack 0
  5075  000060                     SYSTEM_Initialize@pll_startup_counter:
  5076                           	opt stack 0
  5077  000060                     ExternalFlash_MediaInitialize@config:
  5078                           	opt stack 0
  5079  000060                     ExternalFlash_SectorSizeRead@config:
  5080                           	opt stack 0
  5081  000060                     ExternalFlash_CapacityRead@config:
  5082                           	opt stack 0
  5083  000060                     ExternalFlash_MediaDetect@config:
  5084                           	opt stack 0
  5085  000060                     ExternalFlash_WriteProtectStateGet@config:
  5086                           	opt stack 0
  5087  000060                     __data_sector_from_cluster@fat_cluster:
  5088                           	opt stack 0
  5089  000060                     __fat_sector_from_cluster@cluster:
  5090                           	opt stack 0
  5091  000060                     __fat_offset_from_cluster@cluster:
  5092                           	opt stack 0
  5093  000060                     __cluster_from_sector_and_offset@sector:
  5094                           	opt stack 0
  5095  000060                     __get_available_offset_from_buffer@minimum_offset:
  5096                           	opt stack 0
  5097  000060                     __read_value_from_offset@offset:
  5098                           	opt stack 0
  5099  000060                     __write_value_to_offset@offset:
  5100                           	opt stack 0
  5101  000060                     __get_mbr@idx:
  5102                           	opt stack 0
  5103  000060                     __get_fbr@idx:
  5104                           	opt stack 0
  5105  000060                     __get_fat@idx:
  5106                           	opt stack 0
  5107  000060                     __get_root@idx:
  5108                           	opt stack 0
  5109  000060                     __get_data@idx:
  5110                           	opt stack 0
  5111  000060                     spi_tx@data:
  5112                           	opt stack 0
  5113  000060                     spi_tx_tx@command:
  5114                           	opt stack 0
  5115  000060                     spi_tx_rx@command:
  5116                           	opt stack 0
  5117  000060                     __fill_buffer_get_mode_details@outBuffer:
  5118                           	opt stack 0
  5119  000060                     motor_change_speed@new_speed:
  5120                           	opt stack 0
  5121  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5122                           	opt stack 0
  5123  000060                     __encoder_next_arc_step_size@old_stepsize:
  5124                           	opt stack 0
  5125  000060                     __get_item@item_string:
  5126                           	opt stack 0
  5127  000060                     ___wmul@multiplier:
  5128                           	opt stack 0
  5129  000060                     ___lwdiv@dividend:
  5130                           	opt stack 0
  5131  000060                     ___lwmod@dividend:
  5132                           	opt stack 0
  5133  000060                     memcpy@d1:
  5134                           	opt stack 0
  5135  000060                     memset@p1:
  5136                           	opt stack 0
  5137  000060                     strlen@s:
  5138                           	opt stack 0
  5139  000060                     strncmp@s1:
  5140                           	opt stack 0
  5141  000060                     __spi_init@details:
  5142                           	opt stack 0
  5143  000060                     ___lmul@multiplier:
  5144                           	opt stack 0
  5145  000060                     ___lldiv@dividend:
  5146                           	opt stack 0
  5147  000060                     ___aldiv@dividend:
  5148                           	opt stack 0
  5149  000060                     ___almod@dividend:
  5150                           	opt stack 0
  5151  000060                     ___fltol@f1:
  5152                           	opt stack 0
  5153  000060                     ___llmod@dividend:
  5154                           	opt stack 0
  5155  000060                     ___xxtofl@val:
  5156                           	opt stack 0
  5157                           
  5158                           ; 4 bytes @ 0x0
  5159  000060                     	ds	1
  5160  000061                     ??_USBStallEndpoint:
  5161  000061                     ??_display_get_character:
  5162  000061                     ?_stricmp:
  5163                           	opt stack 0
  5164  000061                     _isdigit$8180:
  5165                           	opt stack 0
  5166  000061                     USBTransferOnePacket@data:
  5167                           	opt stack 0
  5168  000061                     stricmp@s1:
  5169                           	opt stack 0
  5170                           
  5171                           ; 2 bytes @ 0x1
  5172  000061                     	ds	1
  5173  000062                     ??_MSDComputeDeviceInAndResidue:
  5174  000062                     ??_strlen:
  5175  000062                     ??__fill_buffer_get_mode_details:
  5176  000062                     ??__get_mbr:
  5177  000062                     ??__get_fbr:
  5178  000062                     ??__get_fat:
  5179  000062                     ??__get_root:
  5180  000062                     ??__encoder_next_setup_stepsize:
  5181  000062                     ??__encoder_next_arc_step_size:
  5182  000062                     __display_clear@row:
  5183                           	opt stack 0
  5184  000062                     __sector_from_file_number@file_number:
  5185                           	opt stack 0
  5186  000062                     __offset_from_file_number@file_number:
  5187                           	opt stack 0
  5188  000062                     isdigit@c:
  5189                           	opt stack 0
  5190  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5191                           	opt stack 0
  5192  000062                     __cluster_from_sector_and_offset@offset:
  5193                           	opt stack 0
  5194  000062                     __get_available_offset_from_buffer@buffer:
  5195                           	opt stack 0
  5196  000062                     __read_value_from_offset@buffer:
  5197                           	opt stack 0
  5198  000062                     __write_value_to_offset@buffer:
  5199                           	opt stack 0
  5200  000062                     spi_tx@length:
  5201                           	opt stack 0
  5202  000062                     spi_tx_tx@command_length:
  5203                           	opt stack 0
  5204  000062                     spi_tx_rx@command_length:
  5205                           	opt stack 0
  5206  000062                     motor_set_manual_speed@new_speed:
  5207                           	opt stack 0
  5208  000062                     __get_item@value_string:
  5209                           	opt stack 0
  5210  000062                     ___wmul@multiplicand:
  5211                           	opt stack 0
  5212  000062                     ___lwdiv@divisor:
  5213                           	opt stack 0
  5214  000062                     ___lwmod@divisor:
  5215                           	opt stack 0
  5216  000062                     memcpy@s1:
  5217                           	opt stack 0
  5218  000062                     memset@c:
  5219                           	opt stack 0
  5220  000062                     strncmp@s2:
  5221                           	opt stack 0
  5222                           
  5223                           ; 2 bytes @ 0x2
  5224  000062                     	ds	1
  5225  000063                     USBTransferOnePacket@len:
  5226                           	opt stack 0
  5227  000063                     __display_clear@col:
  5228                           	opt stack 0
  5229  000063                     display_get_character@line:
  5230                           	opt stack 0
  5231  000063                     spi_init@configuration:
  5232                           	opt stack 0
  5233  000063                     __sector_from_file_number@sector:
  5234                           	opt stack 0
  5235  000063                     __offset_from_file_number@offset:
  5236                           	opt stack 0
  5237  000063                     stricmp@s2:
  5238                           	opt stack 0
  5239                           
  5240                           ; 2 bytes @ 0x3
  5241  000063                     	ds	1
  5242  000064                     ??_USBTransferOnePacket:
  5243  000064                     ??_spi_tx:
  5244  000064                     ??__get_available_offset_from_buffer:
  5245  000064                     ??__read_value_from_offset:
  5246  000064                     ??___fltol:
  5247  000064                     ??___xxtofl:
  5248  000064                     SYSTEM_Initialize@state:
  5249                           	opt stack 0
  5250  000064                     ___lwmod@counter:
  5251                           	opt stack 0
  5252  000064                     __write_value_to_offset@value:
  5253                           	opt stack 0
  5254  000064                     spi_tx_tx@data:
  5255                           	opt stack 0
  5256  000064                     spi_tx_rx@data:
  5257                           	opt stack 0
  5258  000064                     __fill_buffer_get_display@outBuffer:
  5259                           	opt stack 0
  5260  000064                     __parse_set_manual_speed@data:
  5261                           	opt stack 0
  5262  000064                     __get_item@buffer:
  5263                           	opt stack 0
  5264  000064                     ___wmul@product:
  5265                           	opt stack 0
  5266  000064                     ___lwdiv@quotient:
  5267                           	opt stack 0
  5268  000064                     memcpy@n:
  5269                           	opt stack 0
  5270  000064                     memset@n:
  5271                           	opt stack 0
  5272  000064                     strlen@cp:
  5273                           	opt stack 0
  5274  000064                     strncmp@len:
  5275                           	opt stack 0
  5276  000064                     ___lmul@multiplicand:
  5277                           	opt stack 0
  5278  000064                     ___lldiv@divisor:
  5279                           	opt stack 0
  5280  000064                     ___aldiv@divisor:
  5281                           	opt stack 0
  5282  000064                     ___almod@divisor:
  5283                           	opt stack 0
  5284  000064                     ___llmod@divisor:
  5285                           	opt stack 0
  5286                           
  5287                           ; 4 bytes @ 0x4
  5288  000064                     	ds	1
  5289  000065                     ??_stricmp:
  5290  000065                     USBStallEndpoint@ep:
  5291                           	opt stack 0
  5292  000065                     __i2c_eeprom_busy@busy:
  5293                           	opt stack 0
  5294  000065                     __i2c_write@data:
  5295                           	opt stack 0
  5296  000065                     __i2c_read@data:
  5297                           	opt stack 0
  5298  000065                     i2c_display_write_fixed@data:
  5299                           	opt stack 0
  5300                           
  5301                           ; 2 bytes @ 0x5
  5302  000065                     	ds	1
  5303  000066                     ??_strncmp:
  5304  000066                     ??__write_value_to_offset:
  5305  000066                     ??__get_item:
  5306  000066                     ?_atoi:
  5307                           	opt stack 0
  5308  000066                     __fill_buffer_get_display@secondHalf:
  5309                           	opt stack 0
  5310  000066                     ___lwdiv@counter:
  5311                           	opt stack 0
  5312  000066                     stricmp@r:
  5313                           	opt stack 0
  5314  000066                     USBStallEndpoint@p:
  5315                           	opt stack 0
  5316  000066                     __get_available_offset_from_buffer@offset:
  5317                           	opt stack 0
  5318  000066                     spi_tx_tx@data_length:
  5319                           	opt stack 0
  5320  000066                     spi_tx_rx@data_length:
  5321                           	opt stack 0
  5322  000066                     __parse_set_manual_speed@out_buffer:
  5323                           	opt stack 0
  5324  000066                     atoi@s:
  5325                           	opt stack 0
  5326  000066                     memcpy@d:
  5327                           	opt stack 0
  5328  000066                     memset@p:
  5329                           	opt stack 0
  5330                           
  5331                           ; 2 bytes @ 0x6
  5332  000066                     	ds	1
  5333  000067                     ??__fill_buffer_get_display:
  5334  000067                     __i2c_write@length:
  5335                           	opt stack 0
  5336  000067                     __i2c_read@length:
  5337                           	opt stack 0
  5338  000067                     i2c_display_write_fixed@length:
  5339                           	opt stack 0
  5340  000067                     __read_value_from_offset@value:
  5341                           	opt stack 0
  5342  000067                     utoa@buf:
  5343                           	opt stack 0
  5344                           
  5345                           ; 2 bytes @ 0x7
  5346  000067                     	ds	1
  5347  000068                     ??_spi_tx_rx:
  5348  000068                     ??_spi_tx_tx:
  5349  000068                     ??_atoi:
  5350  000068                     ??__i2c_read:
  5351  000068                     USBDeviceInit@i:
  5352                           	opt stack 0
  5353  000068                     USBTransferOnePacket@ep:
  5354                           	opt stack 0
  5355  000068                     MSDErrorHandler@ErrorCase:
  5356                           	opt stack 0
  5357  000068                     __i2c_write@slave_address:
  5358                           	opt stack 0
  5359  000068                     i2c_display_write_fixed@pos:
  5360                           	opt stack 0
  5361  000068                     __flash_wakeup@command:
  5362                           	opt stack 0
  5363  000068                     ___aldiv@counter:
  5364                           	opt stack 0
  5365  000068                     ___almod@counter:
  5366                           	opt stack 0
  5367  000068                     ___fltol@sign1:
  5368                           	opt stack 0
  5369  000068                     ___llmod@counter:
  5370                           	opt stack 0
  5371  000068                     ___xxtofl@sign:
  5372                           	opt stack 0
  5373  000068                     __parse_set_manual_speed@out_idx_ptr:
  5374                           	opt stack 0
  5375  000068                     memcpy@s:
  5376                           	opt stack 0
  5377  000068                     ___lmul@product:
  5378                           	opt stack 0
  5379  000068                     ___lldiv@quotient:
  5380                           	opt stack 0
  5381                           
  5382                           ; 4 bytes @ 0x8
  5383  000068                     	ds	1
  5384  000069                     MSDErrorHandler@OldMSD_State:
  5385                           	opt stack 0
  5386  000069                     __i2c_write@cntr:
  5387                           	opt stack 0
  5388  000069                     __get_item@value_ctr:
  5389                           	opt stack 0
  5390  000069                     ___aldiv@sign:
  5391                           	opt stack 0
  5392  000069                     ___almod@sign:
  5393                           	opt stack 0
  5394  000069                     ___fltol@exp1:
  5395                           	opt stack 0
  5396  000069                     ___xxtofl@exp:
  5397                           	opt stack 0
  5398  000069                     USBTransferOnePacket@handle:
  5399                           	opt stack 0
  5400  000069                     utoa@val:
  5401                           	opt stack 0
  5402                           
  5403                           ; 2 bytes @ 0x9
  5404  000069                     	ds	1
  5405  00006A                     ??__parse_set_manual_speed:
  5406  00006A                     ??_i2c_display_init:
  5407  00006A                     __ic2_display_set_ddram_address@address:
  5408                           	opt stack 0
  5409  00006A                     __get_item@item_ctr:
  5410                           	opt stack 0
  5411  00006A                     atoi@sign:
  5412                           	opt stack 0
  5413  00006A                     memcpy@tmp:
  5414                           	opt stack 0
  5415  00006A                     __ic2_display_set_cgram_address@data_array:
  5416                           	opt stack 0
  5417  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5418                           	opt stack 0
  5419  00006A                     ___aldiv@quotient:
  5420                           	opt stack 0
  5421  00006A                     ___xxtofl@arg:
  5422                           	opt stack 0
  5423                           
  5424                           ; 4 bytes @ 0xA
  5425  00006A                     	ds	1
  5426  00006B                     __ic2_display_set_ddram_address@data_array:
  5427                           	opt stack 0
  5428  00006B                     __fill_buffer_get_status@outBuffer:
  5429                           	opt stack 0
  5430  00006B                     __parse_set_manual_speed@new_speed:
  5431                           	opt stack 0
  5432  00006B                     atoi@a:
  5433                           	opt stack 0
  5434  00006B                     utoa@base:
  5435                           	opt stack 0
  5436  00006B                     i2c_display_init@init_sequence:
  5437                           	opt stack 0
  5438                           
  5439                           ; 9 bytes @ 0xB
  5440  00006B                     	ds	1
  5441  00006C                     ?__flash_get_status:
  5442                           	opt stack 0
  5443  00006C                     ?_atol:
  5444                           	opt stack 0
  5445  00006C                     __fill_buffer_get_display@cntr:
  5446                           	opt stack 0
  5447  00006C                     ___lldiv@counter:
  5448                           	opt stack 0
  5449  00006C                     atol@s:
  5450                           	opt stack 0
  5451                           
  5452                           ; 2 bytes @ 0xC
  5453  00006C                     	ds	1
  5454  00006D                     __ic2_display_set_cgram_address@address:
  5455                           	opt stack 0
  5456  00006D                     i2c_display_cursor@position:
  5457                           	opt stack 0
  5458  00006D                     __fill_buffer_get_display@line:
  5459                           	opt stack 0
  5460  00006D                     utoa@v:
  5461                           	opt stack 0
  5462  00006D                     ultoa@buf:
  5463                           	opt stack 0
  5464                           
  5465                           ; 2 bytes @ 0xD
  5466  00006D                     	ds	1
  5467  00006E                     ?___fldiv:
  5468                           	opt stack 0
  5469  00006E                     ?___flmul:
  5470                           	opt stack 0
  5471  00006E                     ?___flneg:
  5472                           	opt stack 0
  5473  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5474                           	opt stack 0
  5475  00006E                     i2c_display_cursor@line:
  5476                           	opt stack 0
  5477  00006E                     __flash_get_status@command:
  5478                           	opt stack 0
  5479  00006E                     __fill_buffer_get_display@start_line:
  5480                           	opt stack 0
  5481  00006E                     i2c_display_program_custom_character@bit_pattern:
  5482                           	opt stack 0
  5483  00006E                     ___flneg@f1:
  5484                           	opt stack 0
  5485  00006E                     ___fldiv@b:
  5486                           	opt stack 0
  5487  00006E                     ___flmul@b:
  5488                           	opt stack 0
  5489                           
  5490                           ; 4 bytes @ 0xE
  5491  00006E                     	ds	1
  5492  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5493                           	opt stack 0
  5494  00006F                     __i2c_read@slave_address:
  5495                           	opt stack 0
  5496  00006F                     i2c_display_cursor@address:
  5497                           	opt stack 0
  5498  00006F                     __fill_buffer_get_display@position:
  5499                           	opt stack 0
  5500  00006F                     utoa@c:
  5501                           	opt stack 0
  5502  00006F                     __flash_get_status@status:
  5503                           	opt stack 0
  5504  00006F                     ultoa@val:
  5505                           	opt stack 0
  5506                           
  5507                           ; 4 bytes @ 0xF
  5508  00006F                     	ds	1
  5509  000070                     ??_atol:
  5510  000070                     ??_i2c_display_program_custom_character:
  5511  000070                     MSDCheckForErrorCases@DeviceNoData:
  5512                           	opt stack 0
  5513  000070                     __i2c_read@cntr:
  5514                           	opt stack 0
  5515  000070                     display_update@line:
  5516                           	opt stack 0
  5517  000070                     api_prepare@inBuffer:
  5518                           	opt stack 0
  5519  000070                     itoa@buf:
  5520                           	opt stack 0
  5521                           
  5522                           ; 2 bytes @ 0x10
  5523  000070                     	ds	1
  5524  000071                     i2c_eeprom_read@address:
  5525                           	opt stack 0
  5526  000071                     __flash_is_busy@status:
  5527                           	opt stack 0
  5528                           
  5529                           ; 2 bytes @ 0x11
  5530  000071                     	ds	1
  5531  000072                     ?___fladd:
  5532                           	opt stack 0
  5533  000072                     api_prepare@outBuffer:
  5534                           	opt stack 0
  5535  000072                     itoa@val:
  5536                           	opt stack 0
  5537  000072                     ___fladd@b:
  5538                           	opt stack 0
  5539  000072                     ___fldiv@a:
  5540                           	opt stack 0
  5541  000072                     ___flmul@a:
  5542                           	opt stack 0
  5543                           
  5544                           ; 4 bytes @ 0x12
  5545  000072                     	ds	1
  5546  000073                     i2c_eeprom_read@data:
  5547                           	opt stack 0
  5548  000073                     __flash_copy_page_to_buffer@page:
  5549                           	opt stack 0
  5550  000073                     __flash_compare_page_to_buffer@page:
  5551                           	opt stack 0
  5552  000073                     __flash_write_to_buffer@start:
  5553                           	opt stack 0
  5554  000073                     __flash_write_page_from_buffer@page:
  5555                           	opt stack 0
  5556  000073                     __flash_partial_read@page:
  5557                           	opt stack 0
  5558  000073                     ultoa@base:
  5559                           	opt stack 0
  5560  000073                     __flash_set_page_size@command:
  5561                           	opt stack 0
  5562                           
  5563                           ; 4 bytes @ 0x13
  5564  000073                     	ds	1
  5565  000074                     api_prepare@command:
  5566                           	opt stack 0
  5567  000074                     atol@sign:
  5568                           	opt stack 0
  5569  000074                     itoa@base:
  5570                           	opt stack 0
  5571  000074                     i2c_display_program_custom_character@data_array:
  5572                           	opt stack 0
  5573                           
  5574                           ; 11 bytes @ 0x14
  5575  000074                     	ds	1
  5576  000075                     i2c_eeprom_read@length:
  5577                           	opt stack 0
  5578  000075                     __flash_copy_page_to_buffer@buffer:
  5579                           	opt stack 0
  5580  000075                     __flash_compare_page_to_buffer@buffer:
  5581                           	opt stack 0
  5582  000075                     __flash_write_page_from_buffer@buffer:
  5583                           	opt stack 0
  5584  000075                     __flash_write_to_buffer@data:
  5585                           	opt stack 0
  5586  000075                     __flash_partial_read@start:
  5587                           	opt stack 0
  5588  000075                     atol@a:
  5589                           	opt stack 0
  5590  000075                     ultoa@v:
  5591                           	opt stack 0
  5592                           
  5593                           ; 4 bytes @ 0x15
  5594  000075                     	ds	1
  5595  000076                     ??_i2c_eeprom_read:
  5596  000076                     ??___fldiv:
  5597  000076                     ??___flmul:
  5598  000076                     ??__flash_copy_page_to_buffer:
  5599  000076                     ??__flash_compare_page_to_buffer:
  5600  000076                     ??__flash_write_page_from_buffer:
  5601  000076                     itoa@cp:
  5602                           	opt stack 0
  5603  000076                     ___fladd@a:
  5604                           	opt stack 0
  5605                           
  5606                           ; 4 bytes @ 0x16
  5607  000076                     	ds	1
  5608  000077                     i2c_eeprom_read@addr:
  5609                           	opt stack 0
  5610  000077                     __flash_set_page_size@size:
  5611                           	opt stack 0
  5612  000077                     __flash_write_to_buffer@data_length:
  5613                           	opt stack 0
  5614  000077                     __flash_partial_read@length:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x17
  5618  000077                     	ds	1
  5619  000078                     i2c_eeprom_read@slave_address:
  5620                           	opt stack 0
  5621  000078                     __display_padded_itoa@value:
  5622                           	opt stack 0
  5623  000078                     __display_itoa_u16@value:
  5624                           	opt stack 0
  5625                           
  5626                           ; 2 bytes @ 0x18
  5627  000078                     	ds	1
  5628  000079                     ?_i2c_eeprom_readUint32:
  5629                           	opt stack 0
  5630  000079                     __flash_write_to_buffer@buffer:
  5631                           	opt stack 0
  5632  000079                     atol@c:
  5633                           	opt stack 0
  5634  000079                     ultoa@c:
  5635                           	opt stack 0
  5636  000079                     i2c_eeprom_readUint32@address:
  5637                           	opt stack 0
  5638  000079                     __flash_compare_page_to_buffer@status:
  5639                           	opt stack 0
  5640  000079                     __flash_partial_read@data:
  5641                           	opt stack 0
  5642  000079                     __flash_copy_page_to_buffer@command:
  5643                           	opt stack 0
  5644  000079                     __flash_write_page_from_buffer@command:
  5645                           	opt stack 0
  5646                           
  5647                           ; 4 bytes @ 0x19
  5648  000079                     	ds	1
  5649  00007A                     ??___fladd:
  5650  00007A                     __display_padded_itoa@length:
  5651                           	opt stack 0
  5652  00007A                     ___flmul@sign:
  5653                           	opt stack 0
  5654  00007A                     __display_itoa_u16@text:
  5655                           	opt stack 0
  5656  00007A                     __parse_item@item_string:
  5657                           	opt stack 0
  5658  00007A                     ltoa@buf:
  5659                           	opt stack 0
  5660  00007A                     __flash_write_to_buffer@command:
  5661                           	opt stack 0
  5662  00007A                     ___fldiv@rem:
  5663                           	opt stack 0
  5664                           
  5665                           ; 4 bytes @ 0x1A
  5666  00007A                     	ds	1
  5667  00007B                     ??__flash_partial_read:
  5668  00007B                     __display_padded_itoa@text:
  5669                           	opt stack 0
  5670  00007B                     __flash_compare_page_to_buffer@command:
  5671                           	opt stack 0
  5672  00007B                     ___flmul@grs:
  5673                           	opt stack 0
  5674                           
  5675                           ; 4 bytes @ 0x1B
  5676  00007B                     	ds	1
  5677  00007C                     __display_start@cntr:
  5678                           	opt stack 0
  5679  00007C                     __parse_item@value_string:
  5680                           	opt stack 0
  5681  00007C                     ltoa@val:
  5682                           	opt stack 0
  5683                           
  5684                           ; 4 bytes @ 0x1C
  5685  00007C                     	ds	1
  5686  00007D                     ??__display_padded_itoa:
  5687  00007D                     i2c_eeprom_readUint32@data:
  5688                           	opt stack 0
  5689                           
  5690                           ; 4 bytes @ 0x1D
  5691  00007D                     	ds	1
  5692  00007E                     ___fldiv@sign:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x1E
  5696  00007E                     	ds	1
  5697  00007F                     i2c_display_program_custom_character@address:
  5698                           	opt stack 0
  5699  00007F                     ___flmul@aexp:
  5700                           	opt stack 0
  5701  00007F                     flash_sector_write@page:
  5702                           	opt stack 0
  5703  00007F                     flash_partial_write@page:
  5704                           	opt stack 0
  5705  00007F                     ___fldiv@new_exp:
  5706                           	opt stack 0
  5707  00007F                     __flash_partial_read@command:
  5708                           	opt stack 0
  5709                           
  5710                           ; 4 bytes @ 0x1F
  5711  00007F                     	ds	1
  5712  000080                     i2c_display_program_custom_character@cntr:
  5713                           	opt stack 0
  5714  000080                     ___flmul@bexp:
  5715                           	opt stack 0
  5716  000080                     ltoa@base:
  5717                           	opt stack 0
  5718                           
  5719                           ; 2 bytes @ 0x20
  5720  000080                     	ds	1
  5721  000081                     flash_sector_write@data:
  5722                           	opt stack 0
  5723  000081                     flash_partial_write@start:
  5724                           	opt stack 0
  5725  000081                     ___fldiv@grs:
  5726                           	opt stack 0
  5727  000081                     ___flmul@prod:
  5728                           	opt stack 0
  5729                           
  5730                           ; 4 bytes @ 0x21
  5731  000081                     	ds	1
  5732  000082                     ___fladd@signs:
  5733                           	opt stack 0
  5734  000082                     ltoa@cp:
  5735                           	opt stack 0
  5736  000082                     __display_padded_itoa@tmp:
  5737                           	opt stack 0
  5738                           
  5739                           ; 10 bytes @ 0x22
  5740  000082                     	ds	1
  5741  000083                     flash_sector_write@match:
  5742                           	opt stack 0
  5743  000083                     ___fladd@aexp:
  5744                           	opt stack 0
  5745  000083                     flash_partial_write@length:
  5746                           	opt stack 0
  5747  000083                     __flash_partial_read@address:
  5748                           	opt stack 0
  5749                           
  5750                           ; 4 bytes @ 0x23
  5751  000083                     	ds	1
  5752  000084                     ___fladd@bexp:
  5753                           	opt stack 0
  5754  000084                     ExternalFlash_SectorWrite@config:
  5755                           	opt stack 0
  5756  000084                     fat_format@cntr:
  5757                           	opt stack 0
  5758  000084                     __add_item@item_string:
  5759                           	opt stack 0
  5760                           
  5761                           ; 2 bytes @ 0x24
  5762  000084                     	ds	1
  5763  000085                     ___fladd@grs:
  5764                           	opt stack 0
  5765  000085                     ___fldiv@bexp:
  5766                           	opt stack 0
  5767  000085                     flash_partial_write@data:
  5768                           	opt stack 0
  5769  000085                     ___flmul@temp:
  5770                           	opt stack 0
  5771                           
  5772                           ; 2 bytes @ 0x25
  5773  000085                     	ds	1
  5774  000086                     ___fldiv@aexp:
  5775                           	opt stack 0
  5776  000086                     ExternalFlash_SectorWrite@sector_addr:
  5777                           	opt stack 0
  5778  000086                     __add_item@value:
  5779                           	opt stack 0
  5780                           
  5781                           ; 4 bytes @ 0x26
  5782  000086                     	ds	1
  5783  000087                     ??_adc_read_temperature:
  5784  000087                     ?__motor_get_speed_in_degrees:
  5785                           	opt stack 0
  5786  000087                     ?_motor_steps_from_degrees:
  5787                           	opt stack 0
  5788  000087                     ?__step_position_from_divide_position:
  5789                           	opt stack 0
  5790  000087                     flash_partial_write@match:
  5791                           	opt stack 0
  5792  000087                     flash_sector_read@page:
  5793                           	opt stack 0
  5794  000087                     flash_partial_read@page:
  5795                           	opt stack 0
  5796  000087                     motor_steps_from_degrees@degrees:
  5797                           	opt stack 0
  5798  000087                     __motor_get_speed_in_degrees@speed_index:
  5799                           	opt stack 0
  5800  000087                     __step_position_from_divide_position@divide_position:
  5801                           	opt stack 0
  5802  000087                     motor_calculate_position_in_degrees@tmp:
  5803                           	opt stack 0
  5804                           
  5805                           ; 4 bytes @ 0x27
  5806  000087                     	ds	1
  5807  000088                     __write_root@data:
  5808                           	opt stack 0
  5809                           
  5810                           ; 2 bytes @ 0x28
  5811  000088                     	ds	1
  5812  000089                     ??__motor_get_speed_in_degrees:
  5813  000089                     flash_sector_read@data:
  5814                           	opt stack 0
  5815  000089                     flash_partial_read@start:
  5816                           	opt stack 0
  5817  000089                     adc_read_temperature@adc_result:
  5818                           	opt stack 0
  5819                           
  5820                           ; 2 bytes @ 0x29
  5821  000089                     	ds	1
  5822  00008A                     ExternalFlash_SectorWrite@buffer:
  5823                           	opt stack 0
  5824  00008A                     __write_root@sector:
  5825                           	opt stack 0
  5826  00008A                     __add_item@buffer:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0x2A
  5830  00008A                     	ds	1
  5831  00008B                     ??_fat_get_format_status:
  5832  00008B                     ?__get_available_cluster:
  5833                           	opt stack 0
  5834  00008B                     flash_partial_read@length:
  5835                           	opt stack 0
  5836  00008B                     ExternalFlash_SectorRead@config:
  5837                           	opt stack 0
  5838  00008B                     __get_available_cluster@first_sector:
  5839                           	opt stack 0
  5840  00008B                     fat_find_file@name:
  5841                           	opt stack 0
  5842  00008B                     motor_steps_from_degrees@steps:
  5843                           	opt stack 0
  5844  00008B                     __motor_get_speed_in_degrees@speed:
  5845                           	opt stack 0
  5846  00008B                     __step_position_from_divide_position@target_position:
  5847                           	opt stack 0
  5848  00008B                     adc_read_temperature@temperature:
  5849                           	opt stack 0
  5850                           
  5851                           ; 4 bytes @ 0x2B
  5852  00008B                     	ds	1
  5853  00008C                     ??__add_item:
  5854  00008C                     __display_padded_itoa@len:
  5855                           	opt stack 0
  5856  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5857                           	opt stack 0
  5858  00008C                     __write_root@offset:
  5859                           	opt stack 0
  5860                           
  5861                           ; 2 bytes @ 0x2C
  5862  00008C                     	ds	1
  5863  00008D                     __display_padded_itoa@pos:
  5864                           	opt stack 0
  5865  00008D                     flash_partial_read@data:
  5866                           	opt stack 0
  5867  00008D                     ExternalFlash_SectorWrite@page:
  5868                           	opt stack 0
  5869  00008D                     __get_available_cluster@skip_sector:
  5870                           	opt stack 0
  5871  00008D                     fat_find_file@extension:
  5872                           	opt stack 0
  5873  00008D                     fat_get_format_status@cntr:
  5874                           	opt stack 0
  5875  00008D                     ExternalFlash_SectorRead@sector_addr:
  5876                           	opt stack 0
  5877                           
  5878                           ; 4 bytes @ 0x2D
  5879  00008D                     	ds	1
  5880  00008E                     __display_padded_itoa@padding:
  5881                           	opt stack 0
  5882  00008E                     __write_root@file_number:
  5883                           	opt stack 0
  5884  00008E                     __add_item@length:
  5885                           	opt stack 0
  5886                           
  5887                           ; 1 bytes @ 0x2E
  5888  00008E                     	ds	1
  5889  00008F                     ??_MSDWriteHandler:
  5890  00008F                     ??_fat_find_file:
  5891  00008F                     ?__read_fat:
  5892                           	opt stack 0
  5893  00008F                     ?_motor_nonzero_steps_from_degrees:
  5894                           	opt stack 0
  5895  00008F                     __display_signed_itoa@value:
  5896                           	opt stack 0
  5897  00008F                     __get_available_cluster@cluster:
  5898                           	opt stack 0
  5899  00008F                     __root_is_available@root_sector:
  5900                           	opt stack 0
  5901  00008F                     __read_fat@cluster:
  5902                           	opt stack 0
  5903  00008F                     fat_get_file_information@data:
  5904                           	opt stack 0
  5905  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5906                           	opt stack 0
  5907  00008F                     __motor_get_speed_in_degrees@lookup:
  5908                           	opt stack 0
  5909  00008F                     __motor_run@distance_in_steps:
  5910                           	opt stack 0
  5911                           
  5912                           ; 4 bytes @ 0x2F
  5913  00008F                     	ds	2
  5914  000091                     fat_find_file@file_number:
  5915                           	opt stack 0
  5916  000091                     __display_signed_itoa@text:
  5917                           	opt stack 0
  5918  000091                     ExternalFlash_SectorRead@buffer:
  5919                           	opt stack 0
  5920  000091                     __get_available_cluster@offset:
  5921                           	opt stack 0
  5922  000091                     __root_is_available@offset:
  5923                           	opt stack 0
  5924  000091                     __read_fat@sector:
  5925                           	opt stack 0
  5926                           
  5927                           ; 2 bytes @ 0x31
  5928  000091                     	ds	1
  5929  000092                     fat_find_file@sector:
  5930                           	opt stack 0
  5931  000092                     fat_get_file_information@root_sector:
  5932                           	opt stack 0
  5933                           
  5934                           ; 2 bytes @ 0x32
  5935  000092                     	ds	1
  5936  000093                     ?_motor_speed_from_index:
  5937                           	opt stack 0
  5938  000093                     __root_is_available@file_number:
  5939                           	opt stack 0
  5940  000093                     ExternalFlash_SectorRead@page:
  5941                           	opt stack 0
  5942  000093                     __get_available_cluster@sector:
  5943                           	opt stack 0
  5944  000093                     __read_fat@offset:
  5945                           	opt stack 0
  5946  000093                     motor_speed_from_index@speed_index:
  5947                           	opt stack 0
  5948  000093                     __motor_run@speed:
  5949                           	opt stack 0
  5950  000093                     motor_nonzero_steps_from_degrees@steps:
  5951                           	opt stack 0
  5952                           
  5953                           ; 4 bytes @ 0x33
  5954  000093                     	ds	1
  5955  000094                     __root_is_available@first_byte:
  5956                           	opt stack 0
  5957  000094                     fat_find_file@offset:
  5958                           	opt stack 0
  5959  000094                     fat_get_file_information@offset:
  5960                           	opt stack 0
  5961                           
  5962                           ; 2 bytes @ 0x34
  5963  000094                     	ds	1
  5964  000095                     ??_MSDReadHandler:
  5965  000095                     ??__motor_run:
  5966  000095                     ?__make_cluster_chain:
  5967                           	opt stack 0
  5968  000095                     ?_fat_get_file_size:
  5969                           	opt stack 0
  5970  000095                     __get_available_root_entry@file_number:
  5971                           	opt stack 0
  5972  000095                     __display_itoa@value:
  5973                           	opt stack 0
  5974  000095                     __make_cluster_chain@first_cluster:
  5975                           	opt stack 0
  5976  000095                     __read_fat@value:
  5977                           	opt stack 0
  5978                           
  5979                           ; 2 bytes @ 0x35
  5980  000095                     	ds	1
  5981  000096                     fat_get_file_information@file_number:
  5982                           	opt stack 0
  5983                           
  5984                           ; 1 bytes @ 0x36
  5985  000096                     	ds	1
  5986  000097                     ?__find_nth_cluster:
  5987                           	opt stack 0
  5988  000097                     __display_itoa@decimals:
  5989                           	opt stack 0
  5990  000097                     __find_nth_cluster@cluster:
  5991                           	opt stack 0
  5992  000097                     __make_cluster_chain@number_of_clusters:
  5993                           	opt stack 0
  5994                           
  5995                           ; 2 bytes @ 0x37
  5996  000097                     	ds	1
  5997  000098                     __display_itoa@text:
  5998                           	opt stack 0
  5999                           
  6000                           ; 2 bytes @ 0x38
  6001  000098                     	ds	1
  6002  000099                     ??_MSDProcessCommandMediaPresent:
  6003  000099                     ??__make_cluster_chain:
  6004  000099                     __motor_run@direction:
  6005                           	opt stack 0
  6006  000099                     __find_nth_cluster@n:
  6007                           	opt stack 0
  6008  000099                     fat_get_file_size@sector:
  6009                           	opt stack 0
  6010                           
  6011                           ; 2 bytes @ 0x39
  6012  000099                     	ds	1
  6013  00009A                     ??__display_itoa:
  6014  00009A                     __motor_run@maximum_distance_in_degrees:
  6015                           	opt stack 0
  6016                           
  6017                           ; 2 bytes @ 0x3A
  6018  00009A                     	ds	1
  6019  00009B                     _MSDProcessCommandMediaPresent$2606:
  6020                           	opt stack 0
  6021  00009B                     __find_nth_cluster@offset:
  6022                           	opt stack 0
  6023  00009B                     __make_cluster_chain@next_offset:
  6024                           	opt stack 0
  6025  00009B                     fat_get_file_size@offset:
  6026                           	opt stack 0
  6027                           
  6028                           ; 2 bytes @ 0x3B
  6029  00009B                     	ds	1
  6030  00009C                     __motor_run@maximum_distance_in_steps:
  6031                           	opt stack 0
  6032                           
  6033                           ; 4 bytes @ 0x3C
  6034  00009C                     	ds	1
  6035  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6036                           	opt stack 0
  6037  00009D                     __find_nth_cluster@sector_in_buffer:
  6038                           	opt stack 0
  6039  00009D                     __make_cluster_chain@minimum_sector:
  6040                           	opt stack 0
  6041  00009D                     fat_get_file_size@file_size:
  6042                           	opt stack 0
  6043                           
  6044                           ; 4 bytes @ 0x3D
  6045  00009D                     	ds	1
  6046  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6047                           	opt stack 0
  6048                           
  6049                           ; 4 bytes @ 0x3E
  6050  00009E                     	ds	1
  6051  00009F                     __find_nth_cluster@sector:
  6052                           	opt stack 0
  6053  00009F                     __make_cluster_chain@different_sector_cluster:
  6054                           	opt stack 0
  6055                           
  6056                           ; 2 bytes @ 0x3F
  6057  00009F                     	ds	1
  6058  0000A0                     motor_schedule_command@distance_in_steps:
  6059                           	opt stack 0
  6060  0000A0                     __display_itoa@tmp:
  6061                           	opt stack 0
  6062                           
  6063                           ; 10 bytes @ 0x40
  6064  0000A0                     	ds	1
  6065  0000A1                     __make_cluster_chain@data_changed:
  6066                           	opt stack 0
  6067  0000A1                     fat_get_file_size@file_number:
  6068                           	opt stack 0
  6069  0000A1                     fat_read_from_file_fast@start_byte:
  6070                           	opt stack 0
  6071  0000A1                     fat_modify_file@start_byte:
  6072                           	opt stack 0
  6073                           
  6074                           ; 4 bytes @ 0x41
  6075  0000A1                     	ds	1
  6076  0000A2                     __make_cluster_chain@remaining_clusters:
  6077                           	opt stack 0
  6078  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6079                           	opt stack 0
  6080                           
  6081                           ; 4 bytes @ 0x42
  6082  0000A2                     	ds	2
  6083  0000A4                     __make_cluster_chain@sector:
  6084                           	opt stack 0
  6085  0000A4                     motor_schedule_command@speed:
  6086                           	opt stack 0
  6087                           
  6088                           ; 2 bytes @ 0x44
  6089  0000A4                     	ds	1
  6090  0000A5                     fat_modify_file@length:
  6091                           	opt stack 0
  6092  0000A5                     fat_read_from_file_fast@length:
  6093                           	opt stack 0
  6094                           
  6095                           ; 4 bytes @ 0x45
  6096  0000A5                     	ds	1
  6097  0000A6                     MSDProcessCommandMediaPresent@i:
  6098                           	opt stack 0
  6099  0000A6                     motor_schedule_command@direction:
  6100                           	opt stack 0
  6101  0000A6                     __make_cluster_chain@sector_in_buffer:
  6102                           	opt stack 0
  6103                           
  6104                           ; 2 bytes @ 0x46
  6105  0000A6                     	ds	1
  6106  0000A7                     ??_MSDProcessCommand:
  6107  0000A7                     motor_set_zero@direction:
  6108                           	opt stack 0
  6109  0000A7                     fat_modify_file@data:
  6110                           	opt stack 0
  6111  0000A7                     __parse_jump_steps@data:
  6112                           	opt stack 0
  6113  0000A7                     motor_go_to_steps_position@target_position:
  6114                           	opt stack 0
  6115  0000A7                     _motor_arc_move$8784:
  6116                           	opt stack 0
  6117                           
  6118                           ; 4 bytes @ 0x47
  6119  0000A7                     	ds	1
  6120  0000A8                     __make_cluster_chain@offset:
  6121                           	opt stack 0
  6122                           
  6123                           ; 2 bytes @ 0x48
  6124  0000A8                     	ds	1
  6125  0000A9                     ??_fat_modify_file:
  6126  0000A9                     fat_read_from_file_fast@data:
  6127                           	opt stack 0
  6128  0000A9                     __parse_jump_steps@out_buffer:
  6129                           	opt stack 0
  6130                           
  6131                           ; 2 bytes @ 0x49
  6132  0000A9                     	ds	1
  6133  0000AA                     __display_itoa@len:
  6134                           	opt stack 0
  6135  0000AA                     __make_cluster_chain@next_cluster:
  6136                           	opt stack 0
  6137                           
  6138                           ; 2 bytes @ 0x4A
  6139  0000AA                     	ds	1
  6140  0000AB                     ??_motor_go_to_steps_position:
  6141  0000AB                     __display_itoa@missing:
  6142                           	opt stack 0
  6143  0000AB                     motor_arc_move@direction:
  6144                           	opt stack 0
  6145  0000AB                     fat_read_from_file_fast@cluster:
  6146                           	opt stack 0
  6147  0000AB                     __parse_jump_steps@out_idx_ptr:
  6148                           	opt stack 0
  6149                           
  6150                           ; 2 bytes @ 0x4B
  6151  0000AB                     	ds	1
  6152  0000AC                     ??_MSDTasks:
  6153  0000AC                     __display_itoa@pos:
  6154                           	opt stack 0
  6155  0000AC                     fat_create_file@name:
  6156                           	opt stack 0
  6157  0000AC                     fat_resize_file@new_file_size:
  6158                           	opt stack 0
  6159  0000AC                     motor_arc_move@arc_in_steps:
  6160                           	opt stack 0
  6161                           
  6162                           ; 4 bytes @ 0x4C
  6163  0000AC                     	ds	1
  6164  0000AD                     ??__parse_jump_steps:
  6165  0000AD                     _MSDTasks$2588:
  6166                           	opt stack 0
  6167  0000AD                     fat_read_from_file_fast@cluster_number:
  6168                           	opt stack 0
  6169  0000AD                     __display_itoa_long@value:
  6170                           	opt stack 0
  6171                           
  6172                           ; 4 bytes @ 0x4D
  6173  0000AD                     	ds	1
  6174  0000AE                     __parse_jump_steps@return_value:
  6175                           	opt stack 0
  6176  0000AE                     fat_create_file@extension:
  6177                           	opt stack 0
  6178                           
  6179                           ; 2 bytes @ 0x4E
  6180  0000AE                     	ds	1
  6181  0000AF                     ??_fat_read_from_file_fast:
  6182  0000AF                     _MSDTasks$2589:
  6183                           	opt stack 0
  6184  0000AF                     __parse_jump_steps@number_of_steps:
  6185                           	opt stack 0
  6186                           
  6187                           ; 4 bytes @ 0x4F
  6188  0000AF                     	ds	1
  6189  0000B0                     ??_fat_resize_file:
  6190  0000B0                     fat_create_file@size:
  6191                           	opt stack 0
  6192                           
  6193                           ; 4 bytes @ 0x50
  6194  0000B0                     	ds	1
  6195  0000B1                     MSDTasks@i:
  6196                           	opt stack 0
  6197  0000B1                     __display_itoa_long@decimals:
  6198                           	opt stack 0
  6199                           
  6200                           ; 1 bytes @ 0x51
  6201  0000B1                     	ds	1
  6202  0000B2                     __display_itoa_long@text:
  6203                           	opt stack 0
  6204                           
  6205                           ; 2 bytes @ 0x52
  6206  0000B2                     	ds	1
  6207  0000B3                     __parse_command_long@data:
  6208                           	opt stack 0
  6209  0000B3                     motor_go_to_steps_position@overhead_cw:
  6210                           	opt stack 0
  6211                           
  6212                           ; 4 bytes @ 0x53
  6213  0000B3                     	ds	1
  6214  0000B4                     ??__display_itoa_long:
  6215  0000B4                     ??_fat_create_file:
  6216  0000B4                     fat_resize_file@old_number_of_clusters:
  6217                           	opt stack 0
  6218                           
  6219                           ; 2 bytes @ 0x54
  6220  0000B4                     	ds	1
  6221  0000B5                     fat_modify_file@sector:
  6222                           	opt stack 0
  6223  0000B5                     __parse_command_long@out_buffer:
  6224                           	opt stack 0
  6225                           
  6226                           ; 2 bytes @ 0x55
  6227  0000B5                     	ds	1
  6228  0000B6                     fat_resize_file@new_number_of_clusters:
  6229                           	opt stack 0
  6230                           
  6231                           ; 2 bytes @ 0x56
  6232  0000B6                     	ds	1
  6233  0000B7                     fat_modify_file@file_number:
  6234                           	opt stack 0
  6235  0000B7                     __parse_command_long@out_idx_ptr:
  6236                           	opt stack 0
  6237  0000B7                     motor_go_to_steps_position@overhead_ccw:
  6238                           	opt stack 0
  6239                           
  6240                           ; 4 bytes @ 0x57
  6241  0000B7                     	ds	1
  6242  0000B8                     __display_itoa_long@length:
  6243                           	opt stack 0
  6244  0000B8                     fat_modify_file@return_code:
  6245                           	opt stack 0
  6246  0000B8                     fat_create_file@number_of_clusters:
  6247                           	opt stack 0
  6248  0000B8                     fat_resize_file@first_cluster:
  6249                           	opt stack 0
  6250                           
  6251                           ; 2 bytes @ 0x58
  6252  0000B8                     	ds	1
  6253  0000B9                     __parse_command_long@length:
  6254                           	opt stack 0
  6255  0000B9                     __display_itoa_long@short_value:
  6256                           	opt stack 0
  6257  0000B9                     fat_modify_file@cluster:
  6258                           	opt stack 0
  6259                           
  6260                           ; 2 bytes @ 0x59
  6261  0000B9                     	ds	1
  6262  0000BA                     fat_resize_file@file_number:
  6263                           	opt stack 0
  6264  0000BA                     fat_create_file@first_cluster:
  6265                           	opt stack 0
  6266                           
  6267                           ; 2 bytes @ 0x5A
  6268  0000BA                     	ds	1
  6269  0000BB                     __display_itoa_long@last_digit:
  6270                           	opt stack 0
  6271  0000BB                     fat_read_from_file_fast@sector:
  6272                           	opt stack 0
  6273  0000BB                     fat_modify_file@offset:
  6274                           	opt stack 0
  6275  0000BB                     motor_go_to_steps_position@distance_cw:
  6276                           	opt stack 0
  6277  0000BB                     fat_resize_file@root:
  6278                           	opt stack 0
  6279                           
  6280                           ; 32 bytes @ 0x5B
  6281  0000BB                     	ds	1
  6282  0000BC                     ??_display_prepare:
  6283  0000BC                     fat_create_file@file_number:
  6284                           	opt stack 0
  6285                           
  6286                           ; 1 bytes @ 0x5C
  6287  0000BC                     	ds	1
  6288  0000BD                     fat_read_from_file_fast@working_cluster:
  6289                           	opt stack 0
  6290  0000BD                     fat_modify_file@number_of_bytes:
  6291                           	opt stack 0
  6292  0000BD                     fat_create_file@root_entry:
  6293                           	opt stack 0
  6294                           
  6295                           ; 32 bytes @ 0x5D
  6296  0000BD                     	ds	1
  6297  0000BE                     display_prepare@temp:
  6298                           	opt stack 0
  6299                           
  6300                           ; 10 bytes @ 0x5E
  6301  0000BE                     	ds	1
  6302  0000BF                     fat_read_from_file_fast@offset:
  6303                           	opt stack 0
  6304  0000BF                     fat_modify_file@position:
  6305                           	opt stack 0
  6306  0000BF                     motor_go_to_steps_position@distance_ccw:
  6307                           	opt stack 0
  6308                           
  6309                           ; 4 bytes @ 0x5F
  6310  0000BF                     	ds	2
  6311  0000C1                     fat_read_from_file_fast@needed_cluster:
  6312                           	opt stack 0
  6313                           
  6314                           ; 2 bytes @ 0x61
  6315  0000C1                     	ds	2
  6316  0000C3                     ??_motor_divide_jump:
  6317  0000C3                     __parse_command_short@cmd:
  6318                           	opt stack 0
  6319  0000C3                     fat_read_from_file_fast@read_length:
  6320                           	opt stack 0
  6321  0000C3                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6322                           	opt stack 0
  6323  0000C3                     fat_modify_file@root:
  6324                           	opt stack 0
  6325                           
  6326                           ; 32 bytes @ 0x63
  6327  0000C3                     	ds	1
  6328  0000C4                     api_parse@inBuffer:
  6329                           	opt stack 0
  6330  0000C4                     motor_divide_jump@target_position_in_steps:
  6331                           	opt stack 0
  6332                           
  6333                           ; 4 bytes @ 0x64
  6334  0000C4                     	ds	1
  6335  0000C5                     fat_read_from_file_fast@position:
  6336                           	opt stack 0
  6337                           
  6338                           ; 4 bytes @ 0x65
  6339  0000C5                     	ds	1
  6340  0000C6                     api_parse@receivedDataLength:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x66
  6344  0000C6                     	ds	1
  6345  0000C7                     api_parse@outBuffer:
  6346                           	opt stack 0
  6347  0000C7                     motor_divide_jump_to_nearest@nearest_divide_position:
  6348                           	opt stack 0
  6349                           
  6350                           ; 2 bytes @ 0x67
  6351  0000C7                     	ds	1
  6352  0000C8                     display_prepare@space:
  6353                           	opt stack 0
  6354  0000C8                     motor_divide_jump@target_divide_position:
  6355                           	opt stack 0
  6356                           
  6357                           ; 2 bytes @ 0x68
  6358  0000C8                     	ds	1
  6359  0000C9                     ??_api_parse:
  6360  0000C9                     display_prepare@cntr:
  6361                           	opt stack 0
  6362  0000C9                     fat_read_from_file@start_byte:
  6363                           	opt stack 0
  6364  0000C9                     motor_divide_jump_to_nearest@divide_position_float:
  6365                           	opt stack 0
  6366                           
  6367                           ; 4 bytes @ 0x69
  6368  0000C9                     	ds	2
  6369  0000CB                     api_parse@out_idx_ptr:
  6370                           	opt stack 0
  6371                           
  6372                           ; 2 bytes @ 0x6B
  6373  0000CB                     	ds	2
  6374  0000CD                     ??_encoder_statemachine:
  6375  0000CD                     api_parse@out_idx:
  6376                           	opt stack 0
  6377  0000CD                     fat_read_from_file@length:
  6378                           	opt stack 0
  6379                           
  6380                           ; 4 bytes @ 0x6D
  6381  0000CD                     	ds	1
  6382  0000CE                     api_parse@in_idx:
  6383                           	opt stack 0
  6384                           
  6385                           ; 1 bytes @ 0x6E
  6386  0000CE                     	ds	1
  6387  0000CF                     
  6388                           ; 1 bytes @ 0x6F
  6389  0000CF                     	ds	2
  6390  0000D1                     fat_read_from_file@data:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x71
  6394  0000D1                     	ds	2
  6395  0000D3                     ??_fat_read_from_file:
  6396                           
  6397                           ; 1 bytes @ 0x73
  6398  0000D3                     	ds	4
  6399  0000D7                     fat_read_from_file@file_number:
  6400                           	opt stack 0
  6401                           
  6402                           ; 1 bytes @ 0x77
  6403  0000D7                     	ds	1
  6404  0000D8                     fat_read_from_file@return_code:
  6405                           	opt stack 0
  6406                           
  6407                           ; 1 bytes @ 0x78
  6408  0000D8                     	ds	1
  6409  0000D9                     fat_read_from_file@cluster:
  6410                           	opt stack 0
  6411                           
  6412                           ; 2 bytes @ 0x79
  6413  0000D9                     	ds	2
  6414  0000DB                     fat_read_from_file@cluster_number:
  6415                           	opt stack 0
  6416                           
  6417                           ; 2 bytes @ 0x7B
  6418  0000DB                     	ds	2
  6419  0000DD                     fat_read_from_file@root:
  6420                           	opt stack 0
  6421                           
  6422                           ; 32 bytes @ 0x7D
  6423  0000DD                     	ds	6
  6424  0000E3                     ??_configFile_write:
  6425                           
  6426                           ; 1 bytes @ 0x83
  6427  0000E3                     	ds	1
  6428  0000E4                     configFile_write@file_number:
  6429                           	opt stack 0
  6430                           
  6431                           ; 1 bytes @ 0x84
  6432  0000E4                     	ds	1
  6433  0000E5                     configFile_write@file_size:
  6434                           	opt stack 0
  6435                           
  6436                           ; 4 bytes @ 0x85
  6437  0000E5                     	ds	24
  6438  0000FD                     main@startup_timer:
  6439                           	opt stack 0
  6440                           
  6441                           ; 1 bytes @ 0x9D
  6442  0000FD                     	ds	1
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           postinc0	equ	0xFEE
  6448                           wreg	equ	0xFE8
  6449                           postdec1	equ	0xFE5
  6450                           fsr1h	equ	0xFE2
  6451                           fsr1l	equ	0xFE1
  6452                           
  6453                           	psect	cstackCOMRAM
  6454  000001                     __pcstackCOMRAM:
  6455                           	opt stack 0
  6456  000001                     ??_USBStdGetDscHandler:
  6457  000001                     ??_USBStdGetStatusHandler:
  6458  000001                     ??i2__i2c_wait_idle:
  6459  000001                     ?i2_USBTransferOnePacket:
  6460                           	opt stack 0
  6461  000001                     ?i2_ExternalFlash_MediaInitialize:
  6462                           	opt stack 0
  6463  000001                     USBConfigureEndpoint@direction:
  6464                           	opt stack 0
  6465  000001                     USBCtrlTrfTxService@byteToSend:
  6466                           	opt stack 0
  6467  000001                     USBCtrlTrfRxService@i:
  6468                           	opt stack 0
  6469  000001                     i2USBTransferOnePacket@dir:
  6470                           	opt stack 0
  6471  000001                     i2USBStallEndpoint@dir:
  6472                           	opt stack 0
  6473  000001                     i2__i2c_send@dat:
  6474                           	opt stack 0
  6475  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6476                           	opt stack 0
  6477  000001                     i2ExternalFlash_MediaInitialize@config:
  6478                           	opt stack 0
  6479  000001                     i2ExternalFlash_MediaDetect@config:
  6480                           	opt stack 0
  6481  000001                     i2memcpy@d1:
  6482                           	opt stack 0
  6483  000001                     i2memset@p1:
  6484                           	opt stack 0
  6485                           
  6486                           ; 2 bytes @ 0x0
  6487  000001                     	ds	1
  6488  000002                     ??_USBConfigureEndpoint:
  6489  000002                     ??i2_USBStallEndpoint:
  6490  000002                     USBCtrlTrfRxService@byteToRead:
  6491                           	opt stack 0
  6492  000002                     USBCtrlTrfInHandler@lastDTS:
  6493                           	opt stack 0
  6494  000002                     USBStdGetStatusHandler@p:
  6495                           	opt stack 0
  6496  000002                     i2USBTransferOnePacket@data:
  6497                           	opt stack 0
  6498                           
  6499                           ; 2 bytes @ 0x1
  6500  000002                     	ds	1
  6501  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6502                           	opt stack 0
  6503  000003                     i2memcpy@s1:
  6504                           	opt stack 0
  6505  000003                     i2memset@c:
  6506                           	opt stack 0
  6507                           
  6508                           ; 2 bytes @ 0x2
  6509  000003                     	ds	1
  6510  000004                     i2USBTransferOnePacket@len:
  6511                           	opt stack 0
  6512                           
  6513                           ; 1 bytes @ 0x3
  6514  000004                     	ds	1
  6515  000005                     ??i2_USBTransferOnePacket:
  6516  000005                     i2SYSTEM_Initialize@state:
  6517                           	opt stack 0
  6518  000005                     i2memcpy@n:
  6519                           	opt stack 0
  6520  000005                     i2memset@n:
  6521                           	opt stack 0
  6522                           
  6523                           ; 2 bytes @ 0x4
  6524  000005                     	ds	1
  6525  000006                     USBConfigureEndpoint@EPNum:
  6526                           	opt stack 0
  6527  000006                     i2USBStallEndpoint@ep:
  6528                           	opt stack 0
  6529  000006                     i2__i2c_eeprom_busy@busy:
  6530                           	opt stack 0
  6531  000006                     i2__i2c_write@data:
  6532                           	opt stack 0
  6533                           
  6534                           ; 2 bytes @ 0x5
  6535  000006                     	ds	1
  6536  000007                     USBConfigureEndpoint@handle:
  6537                           	opt stack 0
  6538  000007                     i2USBStallEndpoint@p:
  6539                           	opt stack 0
  6540  000007                     i2memcpy@d:
  6541                           	opt stack 0
  6542  000007                     i2memset@p:
  6543                           	opt stack 0
  6544                           
  6545                           ; 2 bytes @ 0x6
  6546  000007                     	ds	1
  6547  000008                     i2__i2c_write@length:
  6548                           	opt stack 0
  6549                           
  6550                           ; 1 bytes @ 0x7
  6551  000008                     	ds	1
  6552  000009                     USBEnableEndpoint@options:
  6553                           	opt stack 0
  6554  000009                     i2USBDeviceInit@i:
  6555                           	opt stack 0
  6556  000009                     i2USBTransferOnePacket@ep:
  6557                           	opt stack 0
  6558  000009                     i2__i2c_write@slave_address:
  6559                           	opt stack 0
  6560  000009                     i2memcpy@s:
  6561                           	opt stack 0
  6562                           
  6563                           ; 2 bytes @ 0x8
  6564  000009                     	ds	1
  6565  00000A                     i2__i2c_write@cntr:
  6566                           	opt stack 0
  6567  00000A                     USBEnableEndpoint@p:
  6568                           	opt stack 0
  6569  00000A                     i2USBTransferOnePacket@handle:
  6570                           	opt stack 0
  6571                           
  6572                           ; 2 bytes @ 0x9
  6573  00000A                     	ds	1
  6574  00000B                     i2memcpy@tmp:
  6575                           	opt stack 0
  6576  00000B                     i2c_eeprom_write@address:
  6577                           	opt stack 0
  6578                           
  6579                           ; 2 bytes @ 0xA
  6580  00000B                     	ds	1
  6581  00000C                     ??_USBMSDInit:
  6582  00000C                     USBEnableEndpoint@ep:
  6583                           	opt stack 0
  6584  00000C                     _USBCheckMSDRequest$2534:
  6585                           	opt stack 0
  6586  00000C                     MSDTransferTerminated@handle:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0xB
  6590  00000C                     	ds	1
  6591  00000D                     i2c_eeprom_write@data:
  6592                           	opt stack 0
  6593                           
  6594                           ; 2 bytes @ 0xC
  6595  00000D                     	ds	1
  6596  00000E                     _USBCheckMSDRequest$2535:
  6597                           	opt stack 0
  6598  00000E                     _MSDTransferTerminated$2623:
  6599                           	opt stack 0
  6600                           
  6601                           ; 2 bytes @ 0xD
  6602  00000E                     	ds	1
  6603  00000F                     i2c_eeprom_write@length:
  6604                           	opt stack 0
  6605                           
  6606                           ; 1 bytes @ 0xE
  6607  00000F                     	ds	1
  6608  000010                     ??_i2c_eeprom_write:
  6609  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6610                           	opt stack 0
  6611                           
  6612                           ; 2 bytes @ 0xF
  6613  000010                     	ds	2
  6614  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6615                           	opt stack 0
  6616                           
  6617                           ; 2 bytes @ 0x11
  6618  000012                     	ds	1
  6619  000013                     i2c_eeprom_write@dat:
  6620                           	opt stack 0
  6621                           
  6622                           ; 17 bytes @ 0x12
  6623  000013                     	ds	1
  6624  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6625                           	opt stack 0
  6626                           
  6627                           ; 2 bytes @ 0x13
  6628  000014                     	ds	2
  6629  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6630                           
  6631                           ; 1 bytes @ 0x15
  6632  000016                     	ds	2
  6633  000018                     ??_USBStdFeatureReqHandler:
  6634  000018                     USBStdSetCfgHandler@i:
  6635                           	opt stack 0
  6636                           
  6637                           ; 1 bytes @ 0x17
  6638  000018                     	ds	1
  6639  000019                     USBStdFeatureReqHandler@pUEP:
  6640                           	opt stack 0
  6641                           
  6642                           ; 2 bytes @ 0x18
  6643  000019                     	ds	2
  6644  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6645                           	opt stack 0
  6646                           
  6647                           ; 1 bytes @ 0x1A
  6648  00001B                     	ds	1
  6649  00001C                     USBStdFeatureReqHandler@p:
  6650                           	opt stack 0
  6651                           
  6652                           ; 2 bytes @ 0x1B
  6653  00001C                     	ds	2
  6654  00001E                     ??_USBCtrlEPService:
  6655  00001E                     
  6656                           ; 1 bytes @ 0x1D
  6657  00001E                     	ds	1
  6658  00001F                     USBDeviceTasks@i:
  6659                           	opt stack 0
  6660                           
  6661                           ; 1 bytes @ 0x1E
  6662  00001F                     	ds	5
  6663  000024                     i2c_eeprom_write@slave_address:
  6664                           	opt stack 0
  6665                           
  6666                           ; 1 bytes @ 0x23
  6667  000024                     	ds	1
  6668  000025                     i2c_eeprom_write@cntr:
  6669                           	opt stack 0
  6670                           
  6671                           ; 1 bytes @ 0x24
  6672  000025                     	ds	1
  6673  000026                     i2c_eeprom_writeUint32@address:
  6674                           	opt stack 0
  6675                           
  6676                           ; 2 bytes @ 0x25
  6677  000026                     	ds	2
  6678  000028                     i2c_eeprom_writeUint32@data:
  6679                           	opt stack 0
  6680                           
  6681                           ; 4 bytes @ 0x27
  6682  000028                     	ds	4
  6683  00002C                     ??_motor_isr:
  6684  00002C                     
  6685                           ; 1 bytes @ 0x2B
  6686  00002C                     	ds	16
  6687  00003C                     motor_isr@steps_until_standstill:
  6688                           	opt stack 0
  6689                           
  6690                           ; 2 bytes @ 0x3B
  6691  00003C                     	ds	2
  6692  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6693                           	opt stack 0
  6694                           
  6695                           ; 2 bytes @ 0x3D
  6696  00003E                     	ds	2
  6697  000040                     motor_isr@steps_remaining:
  6698                           	opt stack 0
  6699                           
  6700                           ; 4 bytes @ 0x3F
  6701  000040                     	ds	4
  6702  000044                     ??_SYS_InterruptHigh:
  6703                           
  6704                           ; 1 bytes @ 0x43
  6705  000044                     	ds	14
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           postinc0	equ	0xFEE
  6711                           wreg	equ	0xFE8
  6712                           postdec1	equ	0xFE5
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           
  6716 ;;
  6717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6718 ;;
  6719 ;; *************** function _main *****************
  6720 ;; Defined at:
  6721 ;;		line 49 in file "main.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;Total ram usage:        1 bytes
  6740 ;; Hardware stack levels required when called:   22
  6741 ;; This function calls:
  6742 ;;		_APP_DeviceCustomHIDTasks
  6743 ;;		_APP_DeviceMSDTasks
  6744 ;;		_SYSTEM_Initialize
  6745 ;;		_USBDeviceAttach
  6746 ;;		_USBDeviceInit
  6747 ;;		_adc_read_temperature
  6748 ;;		_display_prepare
  6749 ;;		_display_update
  6750 ;;		_encoder_statemachine
  6751 ;;		_motor_calculate_position_in_degrees
  6752 ;;		_motor_process_cue
  6753 ;;		_system_init
  6754 ;; This function is called by:
  6755 ;;		Startup code after reset
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text0
  6760  013526                     __ptext0:
  6761                           	opt stack 0
  6762  013526                     _main:
  6763                           	opt stack 9
  6764                           
  6765                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6766                           
  6767                           ;incstack = 0
  6768  013526  EC5C  F08C         	call	_system_init	;wreg free
  6769                           
  6770                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6771  01352A  0E00               	movlw	0
  6772  01352C  ECF4  F0A2         	call	_SYSTEM_Initialize
  6773                           
  6774                           ;main.c: 59: USBDeviceInit();
  6775  013530  EC2B  F07F         	call	_USBDeviceInit	;wreg free
  6776                           
  6777                           ;main.c: 60: USBDeviceAttach();
  6778  013534  EC8B  F0A9         	call	_USBDeviceAttach	;wreg free
  6779                           
  6780                           ;main.c: 63: startup_timer = 150;
  6781  013538  0E96               	movlw	150
  6782  01353A  0100               	movlb	0	; () banked
  6783  01353C  6FFD               	movwf	main@startup_timer& (0+255),b
  6784                           
  6785                           ;main.c: 64: while(startup_timer)
  6786  01353E  D00D               	goto	l863
  6787  013540                     
  6788                           ; BSR set to: 0
  6789                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6790                           
  6791                           ; BSR set to: 0
  6792  013540  EC47  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6793                           
  6794                           ;main.c: 69: if(!os.done)
  6795  013544  0101               	movlb	1	; () banked
  6796  013546  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6797  013548  A4D8               	btfss	status,2,c
  6798  01354A  D007               	goto	l863
  6799                           
  6800                           ; BSR set to: 1
  6801                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6802  01354C  ECB6  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6803                           
  6804                           ;main.c: 74: --startup_timer;
  6805  013550  0100               	movlb	0	; () banked
  6806  013552  07FD               	decf	main@startup_timer& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;main.c: 75: os.done = 1;
  6810  013554  0E01               	movlw	1
  6811  013556  0101               	movlb	1	; () banked
  6812  013558  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6813  01355A                     l863:
  6814                           
  6815                           ; BSR set to: 1
  6816                           
  6817                           ; BSR set to: 1
  6818  01355A  0100               	movlb	0	; () banked
  6819  01355C  51FD               	movf	main@startup_timer& (0+255),w,b
  6820  01355E  A4D8               	btfss	status,2,c
  6821  013560  D7EF               	goto	l862
  6822  013562                     u18700:
  6823                           
  6824                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6825                           
  6826                           ; BSR set to: 0
  6827                           
  6828                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6829                           
  6830                           ; BSR set to: 0
  6831  013562  EC47  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6832                           
  6833                           ;main.c: 85: if(!os.done)
  6834  013566  0101               	movlb	1	; () banked
  6835  013568  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6836  01356A  A4D8               	btfss	status,2,c
  6837  01356C  D7FA               	goto	u18700
  6838                           
  6839                           ; BSR set to: 1
  6840  01356E  0004               	clrwdt		;# 
  6841                           
  6842                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6843  013570  ECB6  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6844                           
  6845                           ;main.c: 94: encoder_statemachine();
  6846  013574  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6847                           
  6848                           ;main.c: 97: motor_process_cue();
  6849  013578  ECC7  F09E         	call	_motor_process_cue	;wreg free
  6850                           
  6851                           ;main.c: 100: adc_read_temperature();
  6852  01357C  EC17  F079         	call	_adc_read_temperature	;wreg free
  6853                           
  6854                           ;main.c: 103: switch(os.timeSlot)
  6855  013580  D008               	goto	l867
  6856  013582                     
  6857                           ;main.c: 114: motor_calculate_position_in_degrees();
  6858  013582  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
  6859  013586                     
  6860                           ;main.c: 117: display_prepare();
  6861  013586  EC98  F051         	call	_display_prepare	;wreg free
  6862                           
  6863                           ;main.c: 118: break;
  6864  01358A  D014               	goto	l869
  6865  01358C                     
  6866                           ;main.c: 121: display_update();
  6867  01358C  ECD0  F0A8         	call	_display_update	;wreg free
  6868                           
  6869                           ;main.c: 123: }
  6870                           
  6871                           ;main.c: 122: break;
  6872  013590  D011               	goto	l869
  6873  013592                     l867:
  6874  013592  0101               	movlb	1	; () banked
  6875  013594  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6876                           
  6877                           ; Switch size 1, requested type "space"
  6878                           ; Number of cases is 5, Range of values is 0 to 7
  6879                           ; switch strategies available:
  6880                           ; Name         Instructions Cycles
  6881                           ; simple_byte           16     9 (average)
  6882                           ;	Chosen strategy is simple_byte
  6883  013596  0A00               	xorlw	0	; case 0
  6884  013598  B4D8               	btfsc	status,2,c
  6885  01359A  D00C               	goto	l869
  6886  01359C  0A01               	xorlw	1	; case 1
  6887  01359E  B4D8               	btfsc	status,2,c
  6888  0135A0  D009               	goto	l869
  6889  0135A2  0A04               	xorlw	4	; case 5
  6890  0135A4  B4D8               	btfsc	status,2,c
  6891  0135A6  D7ED               	goto	l871
  6892  0135A8  0A03               	xorlw	3	; case 6
  6893  0135AA  B4D8               	btfsc	status,2,c
  6894  0135AC  D7EC               	goto	l872
  6895  0135AE  0A01               	xorlw	1	; case 7
  6896  0135B0  B4D8               	btfsc	status,2,c
  6897  0135B2  D7EC               	goto	l873
  6898  0135B4                     l869:
  6899                           
  6900                           ;main.c: 125: os.done = 1;
  6901                           
  6902                           ; BSR set to: 1
  6903  0135B4  0E01               	movlw	1
  6904  0135B6  0101               	movlb	1	; () banked
  6905  0135B8  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6906                           
  6907                           ; BSR set to: 1
  6908                           
  6909                           ; BSR set to: 1
  6910  0135BA  D7D3               	goto	u18700
  6911  0135BC                     __end_of_main:
  6912                           	opt stack 0
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           postinc0	equ	0xFEE
  6918                           wreg	equ	0xFE8
  6919                           postdec1	equ	0xFE5
  6920                           fsr1h	equ	0xFE2
  6921                           fsr1l	equ	0xFE1
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _system_init *****************
  6925 ;; Defined at:
  6926 ;;		line 177 in file "os.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:   20
  6947 ;; This function calls:
  6948 ;;		__backlight_init
  6949 ;;		__system_pin_setup
  6950 ;;		__system_timer0_init
  6951 ;;		_adc_init
  6952 ;;		_configFile_read
  6953 ;;		_configFile_readDefault
  6954 ;;		_configFile_write
  6955 ;;		_display_init
  6956 ;;		_display_update
  6957 ;;		_encoder_init
  6958 ;;		_fat_init
  6959 ;;		_flash_init
  6960 ;;		_i2c_eeprom_readUint32
  6961 ;;		_i2c_init
  6962 ;;		_motor_calculate_position_in_degrees
  6963 ;;		_motor_init
  6964 ;; This function is called by:
  6965 ;;		_main
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text1
  6970  0118B8                     __ptext1:
  6971                           	opt stack 0
  6972  0118B8                     _system_init:
  6973                           	opt stack 10
  6974                           
  6975                           ;os.c: 180: _system_pin_setup();
  6976                           
  6977                           ; BSR set to: 1
  6978                           ;incstack = 0
  6979  0118B8  EC4C  F0A0         	call	__system_pin_setup	;wreg free
  6980                           
  6981                           ;os.c: 183: adc_init();
  6982  0118BC  ECD3  F0A3         	call	_adc_init	;wreg free
  6983                           
  6984                           ;os.c: 186: flash_init();
  6985  0118C0  EC68  F0AC         	call	_flash_init	;wreg free
  6986                           
  6987                           ;os.c: 189: fat_init();
  6988  0118C4  EC50  F0AC         	call	_fat_init	;wreg free
  6989                           
  6990                           ;os.c: 192: encoder_init();
  6991  0118C8  EC3E  F0AB         	call	_encoder_init	;wreg free
  6992                           
  6993                           ;os.c: 195: i2c_init();
  6994  0118CC  ECD7  F0AB         	call	_i2c_init	;wreg free
  6995                           
  6996                           ;os.c: 198: display_init();
  6997  0118D0  EC7A  F0A8         	call	_display_init	;wreg free
  6998                           
  6999                           ;os.c: 199: display_update();
  7000  0118D4  ECD0  F0A8         	call	_display_update	;wreg free
  7001                           
  7002                           ;os.c: 200: _backlight_init();
  7003  0118D8  ECBC  F0AC         	call	__backlight_init	;wreg free
  7004                           
  7005                           ;os.c: 203: motor_init();
  7006  0118DC  ECC8  F0AB         	call	_motor_init	;wreg free
  7007                           
  7008                           ;os.c: 206: configFile_readDefault();
  7009  0118E0  ECE7  F0A0         	call	_configFile_readDefault	;wreg free
  7010                           
  7011                           ;os.c: 209: configFile_read();
  7012  0118E4  ECDD  F07A         	call	_configFile_read	;wreg free
  7013                           
  7014                           ;os.c: 212: configFile_write();
  7015  0118E8  ECCA  F060         	call	_configFile_write	;wreg free
  7016                           
  7017                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7018  0118EC  0E01               	movlw	1
  7019  0118EE  0101               	movlb	1	; () banked
  7020  0118F0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;os.c: 216: os.busy = 0;
  7024  0118F2  0E00               	movlw	0
  7025  0118F4  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7029  0118F6  0E01               	movlw	1
  7030  0118F8  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;os.c: 219: os.setup_step_size = 1000;
  7034  0118FA  0E03               	movlw	3
  7035  0118FC  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7036  0118FE  0EE8               	movlw	232
  7037  011900  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7041  011902  0E01               	movlw	1
  7042  011904  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;os.c: 221: os.division = 36;
  7046  011906  0E00               	movlw	0
  7047  011908  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7048  01190A  0E24               	movlw	36
  7049  01190C  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;os.c: 222: os.divide_step_size = 10;
  7053  01190E  0E0A               	movlw	10
  7054  011910  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;os.c: 223: os.divide_position = 0;
  7058  011912  0E00               	movlw	0
  7059  011914  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7060  011916  0E00               	movlw	0
  7061  011918  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7062                           
  7063                           ; BSR set to: 1
  7064                           ;os.c: 224: os.divide_jump_size = 1;
  7065  01191A  0E00               	movlw	0
  7066  01191C  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7067  01191E  0E01               	movlw	1
  7068  011920  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;os.c: 225: os.arc_step_size = 1000;
  7072  011922  0E03               	movlw	3
  7073  011924  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7074  011926  0EE8               	movlw	232
  7075  011928  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7076                           
  7077                           ; BSR set to: 1
  7078                           ;os.c: 226: os.arc_size = 1000;
  7079  01192A  0EE8               	movlw	232
  7080  01192C  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7081  01192E  0E03               	movlw	3
  7082  011930  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7083  011932  0E00               	movlw	0
  7084  011934  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7085  011936  0E00               	movlw	0
  7086  011938  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7090  01193A  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7091  01193E  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7095  011942  0E01               	movlw	1
  7096  011944  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7097                           
  7098                           ; BSR set to: 1
  7099                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7100  011946  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7101  01194A  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7105  01194E  0E01               	movlw	1
  7106  011950  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;os.c: 231: os.beep_count = 0;
  7110  011952  0E00               	movlw	0
  7111  011954  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7112                           
  7113                           ; BSR set to: 1
  7114                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7115  011956  0E02               	movlw	2
  7116  011958  0100               	movlb	0	; () banked
  7117  01195A  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7118  01195C  0E00               	movlw	0
  7119  01195E  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7120  011960  EC32  F0AA         	call	_i2c_eeprom_readUint32	;wreg free
  7121  011964  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7122  011968  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7123  01196C  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7124  011970  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7125                           
  7126                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7127  011974  0101               	movlb	1	; () banked
  7128  011976  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7129  011978  5DA1               	subwf	_config& (0+255),w,b
  7130  01197A  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7131  01197C  59A2               	subwfb	(_config+1)& (0+255),w,b
  7132  01197E  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7133  011980  59A3               	subwfb	(_config+2)& (0+255),w,b
  7134  011982  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7135  011984  59A4               	subwfb	(_config+3)& (0+255),w,b
  7136  011986  B0D8               	btfsc	status,0,c
  7137  011988  D008               	goto	l1082
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7141  01198A  0E00               	movlw	0
  7142  01198C  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7143  01198E  0E00               	movlw	0
  7144  011990  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7145  011992  0E00               	movlw	0
  7146  011994  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7147  011996  0E00               	movlw	0
  7148  011998  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7149  01199A                     l1082:
  7150                           
  7151                           ; BSR set to: 1
  7152                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7153                           
  7154                           ; BSR set to: 1
  7155  01199A  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
  7156                           
  7157                           ;os.c: 242: _system_timer0_init();
  7158  01199E  EC48  F0AA         	call	__system_timer0_init	;wreg free
  7159  0119A2  0012               	return		;funcret
  7160  0119A4                     __end_of_system_init:
  7161                           	opt stack 0
  7162                           tblptru	equ	0xFF8
  7163                           tblptrh	equ	0xFF7
  7164                           tblptrl	equ	0xFF6
  7165                           tablat	equ	0xFF5
  7166                           postinc0	equ	0xFEE
  7167                           wreg	equ	0xFE8
  7168                           postdec1	equ	0xFE5
  7169                           fsr1h	equ	0xFE2
  7170                           fsr1l	equ	0xFE1
  7171                           status	equ	0xFD8
  7172                           
  7173 ;; *************** function _motor_init *****************
  7174 ;; Defined at:
  7175 ;;		line 184 in file "motor.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;Total ram usage:        0 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:   10
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_system_init
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text2
  7204  015790                     __ptext2:
  7205                           	opt stack 0
  7206  015790                     _motor_init:
  7207                           	opt stack 19
  7208                           
  7209                           ;motor.c: 187: motor_cue_read_index = 0;
  7210                           
  7211                           ;incstack = 0
  7212  015790  0E00               	movlw	0
  7213  015792  0101               	movlb	1	; () banked
  7214  015794  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7215                           
  7216                           ;motor.c: 188: motor_cue_write_index = 0;
  7217  015796  0E00               	movlw	0
  7218  015798  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;motor.c: 194: CCPTMRS0bits.C2TSEL = 0b000;
  7222  01579A  010F               	movlb	15	; () banked
  7223  01579C  9752               	bcf	82,3,b	;volatile
  7224  01579E  9952               	bcf	82,4,b	;volatile
  7225  0157A0  9B52               	bcf	82,5,b	;volatile
  7226                           
  7227                           ;motor.c: 199: CCP1CONbits.P1M = 0b00;
  7228  0157A2  0E3F               	movlw	-193
  7229  0157A4  16BA               	andwf	4026,f,c	;volatile
  7230                           
  7231                           ;motor.c: 202: CCP1CONbits.DC1B = 0b00;
  7232  0157A6  0ECF               	movlw	-49
  7233  0157A8  16BA               	andwf	4026,f,c	;volatile
  7234                           
  7235                           ; BSR set to: 15
  7236                           ;motor.c: 205: LATBbits.LB0 = 0;
  7237  0157AA  908A               	bcf	3978,0,c	;volatile
  7238                           
  7239                           ; BSR set to: 15
  7240  0157AC  0012               	return		;funcret
  7241  0157AE                     __end_of_motor_init:
  7242                           	opt stack 0
  7243                           tblptru	equ	0xFF8
  7244                           tblptrh	equ	0xFF7
  7245                           tblptrl	equ	0xFF6
  7246                           tablat	equ	0xFF5
  7247                           postinc0	equ	0xFEE
  7248                           wreg	equ	0xFE8
  7249                           postdec1	equ	0xFE5
  7250                           fsr1h	equ	0xFE2
  7251                           fsr1l	equ	0xFE1
  7252                           status	equ	0xFD8
  7253                           
  7254 ;; *************** function _i2c_init *****************
  7255 ;; Defined at:
  7256 ;;		line 24 in file "i2c.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:   10
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_system_init
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text3
  7285  0157AE                     __ptext3:
  7286                           	opt stack 0
  7287  0157AE                     _i2c_init:
  7288                           	opt stack 19
  7289                           
  7290                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7291                           
  7292                           ; BSR set to: 15
  7293                           ;incstack = 0
  7294  0157AE  8A93               	bsf	3987,5,c	;volatile
  7295                           
  7296                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7297  0157B0  8893               	bsf	3987,4,c	;volatile
  7298                           
  7299                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7300  0157B2  8EC7               	bsf	4039,7,c	;volatile
  7301                           
  7302                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7303  0157B4  9CC7               	bcf	4039,6,c	;volatile
  7304                           
  7305                           ;i2c.c: 32: SSP1ADD = 119;
  7306  0157B6  0E77               	movlw	119
  7307  0157B8  6EC8               	movwf	4040,c	;volatile
  7308                           
  7309                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7310  0157BA  9EC6               	bcf	4038,7,c	;volatile
  7311                           
  7312                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7313  0157BC  9CC6               	bcf	4038,6,c	;volatile
  7314                           
  7315                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7316  0157BE  50C6               	movf	4038,w,c	;volatile
  7317  0157C0  0BF0               	andlw	-16
  7318  0157C2  0908               	iorlw	8
  7319  0157C4  6EC6               	movwf	4038,c	;volatile
  7320                           
  7321                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7322  0157C6  8AC6               	bsf	4038,5,c	;volatile
  7323  0157C8  0012               	return		;funcret
  7324  0157CA                     __end_of_i2c_init:
  7325                           	opt stack 0
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           postinc0	equ	0xFEE
  7331                           wreg	equ	0xFE8
  7332                           postdec1	equ	0xFE5
  7333                           fsr1h	equ	0xFE2
  7334                           fsr1l	equ	0xFE1
  7335                           status	equ	0xFD8
  7336                           
  7337 ;; *************** function _i2c_eeprom_readUint32 *****************
  7338 ;; Defined at:
  7339 ;;		line 235 in file "i2c.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  address         2   25[BANK0 ] unsigned int 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  data            4   29[BANK0 ] unsigned long 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  4   25[BANK0 ] unsigned long 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;Total ram usage:        8 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:   13
  7360 ;; This function calls:
  7361 ;;		_i2c_eeprom_read
  7362 ;; This function is called by:
  7363 ;;		_system_init
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text4
  7368  015464                     __ptext4:
  7369                           	opt stack 0
  7370  015464                     _i2c_eeprom_readUint32:
  7371                           	opt stack 16
  7372                           
  7373                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7374                           
  7375                           ;incstack = 0
  7376  015464  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7377  015468  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7378  01546C  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7379  01546E  0100               	movlb	0	; () banked
  7380  015470  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7381  015472  0E00               	movlw	high i2c_eeprom_readUint32@data
  7382  015474  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7383  015476  0E04               	movlw	4
  7384  015478  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7385  01547A  EC83  F0A4         	call	_i2c_eeprom_read	;wreg free
  7386                           
  7387                           ;i2c.c: 239: return data;
  7388  01547E  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7389  015482  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7390  015486  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7391  01548A  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7392  01548E  0012               	return	
  7393  015490                     __end_of_i2c_eeprom_readUint32:
  7394                           	opt stack 0
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           postinc0	equ	0xFEE
  7400                           wreg	equ	0xFE8
  7401                           postdec1	equ	0xFE5
  7402                           fsr1h	equ	0xFE2
  7403                           fsr1l	equ	0xFE1
  7404                           status	equ	0xFD8
  7405                           
  7406 ;; *************** function _i2c_eeprom_read *****************
  7407 ;; Defined at:
  7408 ;;		line 263 in file "i2c.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  address         2   17[BANK0 ] unsigned int 
  7411 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7412 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7413 ;;  length          1   21[BANK0 ] unsigned char 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7416 ;;  addr            1   23[BANK0 ] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7426 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;Total ram usage:        8 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:   12
  7433 ;; This function calls:
  7434 ;;		__i2c_eeprom_busy
  7435 ;;		__i2c_read
  7436 ;;		__i2c_write
  7437 ;; This function is called by:
  7438 ;;		_i2c_eeprom_readUint32
  7439 ;;		_i2c_eeprom_readUint16
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text5
  7444  014906                     __ptext5:
  7445                           	opt stack 0
  7446  014906                     _i2c_eeprom_read:
  7447                           	opt stack 16
  7448                           
  7449                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7450                           
  7451                           ;incstack = 0
  7452  014906  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7453                           
  7454                           ;i2c.c: 268: address &= 0b0000011100000000;
  7455  01490A  0100               	movlb	0	; () banked
  7456  01490C  0E00               	movlw	0
  7457  01490E  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7458  014910  0E07               	movlw	7
  7459  014912  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7460                           
  7461                           ;i2c.c: 269: address >>= 7;
  7462  014914  0E07               	movlw	7
  7463  014916  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7464  014918                     u14115:
  7465  014918  90D8               	bcf	status,0,c
  7466  01491A  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7467  01491C  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7468  01491E  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7469  014920  D7FB               	goto	u14115
  7470                           
  7471                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7472  014922  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7473  014924  09A0               	iorlw	160
  7474  014926  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7475  014928                     
  7476                           ; BSR set to: 0
  7477                           
  7478                           ; BSR set to: 0
  7479  014928  ECC8  F0AA         	call	__i2c_eeprom_busy	;wreg free
  7480  01492C  0900               	iorlw	0
  7481  01492E  A4D8               	btfss	status,2,c
  7482  014930  D7FB               	goto	l1213
  7483                           
  7484                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7485  014932  0E77               	movlw	low i2c_eeprom_read@addr
  7486  014934  0100               	movlb	0	; () banked
  7487  014936  6F65               	movwf	__i2c_write@data& (0+255),b
  7488  014938  0E00               	movlw	high i2c_eeprom_read@addr
  7489  01493A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7490  01493C  0E01               	movlw	1
  7491  01493E  6F67               	movwf	__i2c_write@length& (0+255),b
  7492  014940  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7493  014942  ECFA  F0A5         	call	__i2c_write
  7494                           
  7495                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7496  014946  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7497  01494A  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7498  01494E  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7499  014952  0100               	movlb	0	; () banked
  7500  014954  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7501  014956  EC28  F09B         	call	__i2c_read
  7502  01495A  0012               	return		;funcret
  7503  01495C                     __end_of_i2c_eeprom_read:
  7504                           	opt stack 0
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           postinc0	equ	0xFEE
  7510                           wreg	equ	0xFE8
  7511                           postdec1	equ	0xFE5
  7512                           fsr1h	equ	0xFE2
  7513                           fsr1l	equ	0xFE1
  7514                           status	equ	0xFD8
  7515                           
  7516 ;; *************** function __i2c_read *****************
  7517 ;; Defined at:
  7518 ;;		line 103 in file "i2c.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  slave_addres    1    wreg     unsigned char 
  7521 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7522 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7523 ;;  length          1    7[BANK0 ] unsigned char 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7526 ;;  cntr            1   16[BANK0 ] unsigned char 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7536 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7538 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7539 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;Total ram usage:       12 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:   11
  7543 ;; This function calls:
  7544 ;;		__i2c_acknowledge
  7545 ;;		__i2c_get
  7546 ;;		__i2c_not_acknowledge
  7547 ;;		__i2c_send
  7548 ;;		__i2c_start
  7549 ;;		__i2c_stop
  7550 ;;		__i2c_wait_idle
  7551 ;; This function is called by:
  7552 ;;		_i2c_eeprom_read
  7553 ;;		_i2c_eeprom_readByte
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text6
  7558  013650                     __ptext6:
  7559                           	opt stack 0
  7560  013650                     __i2c_read:
  7561                           	opt stack 16
  7562                           
  7563                           ;incstack = 0
  7564                           ;__i2c_read@slave_address stored from wreg
  7565  013650  0100               	movlb	0	; () banked
  7566  013652  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7567                           
  7568                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7569  013654  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
  7570                           
  7571                           ;i2c.c: 108: _i2c_start();
  7572  013658  ECA9  F0AC         	call	__i2c_start	;wreg free
  7573                           
  7574                           ;i2c.c: 109: _i2c_wait_idle();
  7575  01365C  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
  7576                           
  7577                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7578  013660  0100               	movlb	0	; () banked
  7579  013662  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7580  013664  0901               	iorlw	1
  7581  013666  EC96  F0AC         	call	__i2c_send
  7582                           
  7583                           ;i2c.c: 111: _i2c_wait_idle();
  7584  01366A  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
  7585                           
  7586                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7587  01366E  0E00               	movlw	0
  7588  013670  0100               	movlb	0	; () banked
  7589  013672  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7590  013674  D00F               	goto	l1164
  7591  013676                     
  7592                           ; BSR set to: 0
  7593                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7594                           
  7595                           ; BSR set to: 0
  7596  013676  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7597  013678  0D01               	mullw	1
  7598  01367A  50F3               	movf	prodl,w,c
  7599  01367C  2565               	addwf	__i2c_read@data& (0+255),w,b
  7600  01367E  6ED9               	movwf	fsr2l,c
  7601  013680  50F4               	movf	prodh,w,c
  7602  013682  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7603  013684  6EDA               	movwf	fsr2h,c
  7604  013686  EC8C  F0AC         	call	__i2c_get	;wreg free
  7605  01368A  6EDF               	movwf	indf2,c
  7606                           
  7607                           ;i2c.c: 124: _i2c_acknowledge();
  7608  01368C  EC91  F0AC         	call	__i2c_acknowledge	;wreg free
  7609  013690  0100               	movlb	0	; () banked
  7610  013692  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7611  013694                     l1164:
  7612                           
  7613                           ; BSR set to: 0
  7614                           
  7615                           ; BSR set to: 0
  7616  013694  0EFF               	movlw	255
  7617  013696  6F68               	movwf	??__i2c_read& (0+255),b
  7618  013698  0EFF               	movlw	255
  7619  01369A  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7620  01369C  5167               	movf	__i2c_read@length& (0+255),w,b
  7621  01369E  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7622  0136A0  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7623  0136A2  5168               	movf	??__i2c_read& (0+255),w,b
  7624  0136A4  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7625  0136A6  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7626  0136A8  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7627  0136AA  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7628  0136AC  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7629  0136AE  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7630  0136B0  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7631  0136B2  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7632  0136B4  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7633  0136B6  0A80               	xorlw	128
  7634  0136B8  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7635  0136BA  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7636  0136BC  0A80               	xorlw	128
  7637  0136BE  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7638  0136C0  A0D8               	btfss	status,0,c
  7639  0136C2  D7D9               	goto	l1165
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7643                           
  7644                           ; BSR set to: 0
  7645  0136C4  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7646  0136C6  0D01               	mullw	1
  7647  0136C8  50F3               	movf	prodl,w,c
  7648  0136CA  2565               	addwf	__i2c_read@data& (0+255),w,b
  7649  0136CC  6ED9               	movwf	fsr2l,c
  7650  0136CE  50F4               	movf	prodh,w,c
  7651  0136D0  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7652  0136D2  6EDA               	movwf	fsr2h,c
  7653  0136D4  EC8C  F0AC         	call	__i2c_get	;wreg free
  7654  0136D8  6EDF               	movwf	indf2,c
  7655                           
  7656                           ;i2c.c: 127: _i2c_not_acknowledge();
  7657  0136DA  EC87  F0AC         	call	__i2c_not_acknowledge	;wreg free
  7658                           
  7659                           ;i2c.c: 129: _i2c_stop();
  7660  0136DE  ECA5  F0AC         	call	__i2c_stop	;wreg free
  7661  0136E2  0012               	return		;funcret
  7662  0136E4                     __end_of__i2c_read:
  7663                           	opt stack 0
  7664                           tblptru	equ	0xFF8
  7665                           tblptrh	equ	0xFF7
  7666                           tblptrl	equ	0xFF6
  7667                           tablat	equ	0xFF5
  7668                           prodh	equ	0xFF4
  7669                           prodl	equ	0xFF3
  7670                           postinc0	equ	0xFEE
  7671                           wreg	equ	0xFE8
  7672                           postdec1	equ	0xFE5
  7673                           fsr1h	equ	0xFE2
  7674                           fsr1l	equ	0xFE1
  7675                           indf2	equ	0xFDF
  7676                           fsr2h	equ	0xFDA
  7677                           fsr2l	equ	0xFD9
  7678                           status	equ	0xFD8
  7679                           
  7680 ;; *************** function __i2c_not_acknowledge *****************
  7681 ;; Defined at:
  7682 ;;		line 76 in file "i2c.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		None
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:   10
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		__i2c_read
  7707 ;;		_i2c_adc_read
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text7
  7712  01590E                     __ptext7:
  7713                           	opt stack 0
  7714  01590E                     __i2c_not_acknowledge:
  7715                           	opt stack 16
  7716                           
  7717                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7718                           
  7719                           ;incstack = 0
  7720  01590E  8AC5               	bsf	4037,5,c	;volatile
  7721                           
  7722                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7723  015910  88C5               	bsf	4037,4,c	;volatile
  7724  015912  A8C5               	btfss	4037,4,c	;volatile
  7725  015914  0012               	return	
  7726  015916  D7FD               	goto	l1153
  7727  015918                     __end_of__i2c_not_acknowledge:
  7728                           	opt stack 0
  7729                           tblptru	equ	0xFF8
  7730                           tblptrh	equ	0xFF7
  7731                           tblptrl	equ	0xFF6
  7732                           tablat	equ	0xFF5
  7733                           prodh	equ	0xFF4
  7734                           prodl	equ	0xFF3
  7735                           postinc0	equ	0xFEE
  7736                           wreg	equ	0xFE8
  7737                           postdec1	equ	0xFE5
  7738                           fsr1h	equ	0xFE2
  7739                           fsr1l	equ	0xFE1
  7740                           indf2	equ	0xFDF
  7741                           fsr2h	equ	0xFDA
  7742                           fsr2l	equ	0xFD9
  7743                           status	equ	0xFD8
  7744                           
  7745 ;; *************** function __i2c_get *****************
  7746 ;; Defined at:
  7747 ;;		line 56 in file "i2c.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:   10
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		__i2c_read
  7772 ;;		_i2c_adc_read
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text8
  7777  015918                     __ptext8:
  7778                           	opt stack 0
  7779  015918                     __i2c_get:
  7780                           	opt stack 16
  7781                           
  7782                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7783                           
  7784                           ;incstack = 0
  7785  015918  86C5               	bsf	4037,3,c	;volatile
  7786  01591A  B6C5               	btfsc	4037,3,c	;volatile
  7787  01591C  D7FE               	goto	l1135
  7788                           
  7789                           ;i2c.c: 60: return SSP1BUF;
  7790  01591E  50C9               	movf	4041,w,c	;volatile
  7791  015920  0012               	return	
  7792  015922                     __end_of__i2c_get:
  7793                           	opt stack 0
  7794                           tblptru	equ	0xFF8
  7795                           tblptrh	equ	0xFF7
  7796                           tblptrl	equ	0xFF6
  7797                           tablat	equ	0xFF5
  7798                           prodh	equ	0xFF4
  7799                           prodl	equ	0xFF3
  7800                           postinc0	equ	0xFEE
  7801                           wreg	equ	0xFE8
  7802                           postdec1	equ	0xFE5
  7803                           fsr1h	equ	0xFE2
  7804                           fsr1l	equ	0xFE1
  7805                           indf2	equ	0xFDF
  7806                           fsr2h	equ	0xFDA
  7807                           fsr2l	equ	0xFD9
  7808                           status	equ	0xFD8
  7809                           
  7810 ;; *************** function __i2c_acknowledge *****************
  7811 ;; Defined at:
  7812 ;;		line 69 in file "i2c.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;		None
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		None
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;Total ram usage:        0 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:   10
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		__i2c_read
  7837 ;;		_i2c_adc_read
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text9
  7842  015922                     __ptext9:
  7843                           	opt stack 0
  7844  015922                     __i2c_acknowledge:
  7845                           	opt stack 16
  7846                           
  7847                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7848                           
  7849                           ;incstack = 0
  7850  015922  9AC5               	bcf	4037,5,c	;volatile
  7851                           
  7852                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7853  015924  88C5               	bsf	4037,4,c	;volatile
  7854  015926  A8C5               	btfss	4037,4,c	;volatile
  7855  015928  0012               	return	
  7856  01592A  D7FD               	goto	l1147
  7857  01592C                     __end_of__i2c_acknowledge:
  7858                           	opt stack 0
  7859                           tblptru	equ	0xFF8
  7860                           tblptrh	equ	0xFF7
  7861                           tblptrl	equ	0xFF6
  7862                           tablat	equ	0xFF5
  7863                           prodh	equ	0xFF4
  7864                           prodl	equ	0xFF3
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           postdec1	equ	0xFE5
  7868                           fsr1h	equ	0xFE2
  7869                           fsr1l	equ	0xFE1
  7870                           indf2	equ	0xFDF
  7871                           fsr2h	equ	0xFDA
  7872                           fsr2l	equ	0xFD9
  7873                           status	equ	0xFD8
  7874                           
  7875 ;; *************** function __i2c_eeprom_busy *****************
  7876 ;; Defined at:
  7877 ;;		line 169 in file "i2c.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  busy            1    5[BANK0 ] unsigned char 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      unsigned char 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;Total ram usage:        1 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:   11
  7898 ;; This function calls:
  7899 ;;		__i2c_send
  7900 ;;		__i2c_start
  7901 ;;		__i2c_stop
  7902 ;;		__i2c_wait_idle
  7903 ;; This function is called by:
  7904 ;;		_i2c_eeprom_read
  7905 ;;		_i2c_eeprom_writeByte
  7906 ;;		_i2c_eeprom_readByte
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text10
  7911  015590                     __ptext10:
  7912                           	opt stack 0
  7913  015590                     __i2c_eeprom_busy:
  7914                           	opt stack 16
  7915                           
  7916                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7917                           
  7918                           ;incstack = 0
  7919  015590  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
  7920                           
  7921                           ;i2c.c: 173: _i2c_start();
  7922  015594  ECA9  F0AC         	call	__i2c_start	;wreg free
  7923                           
  7924                           ;i2c.c: 174: _i2c_wait_idle();
  7925  015598  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
  7926                           
  7927                           ;i2c.c: 175: _i2c_send(0b10100000);
  7928  01559C  0EA0               	movlw	160
  7929  01559E  EC96  F0AC         	call	__i2c_send
  7930                           
  7931                           ;i2c.c: 176: _i2c_wait_idle();
  7932  0155A2  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
  7933                           
  7934                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7935  0155A6  0E00               	movlw	0
  7936  0155A8  BCC5               	btfsc	4037,6,c	;volatile
  7937  0155AA  0E01               	movlw	1
  7938  0155AC  0100               	movlb	0	; () banked
  7939  0155AE  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;i2c.c: 181: _i2c_stop();
  7943  0155B0  ECA5  F0AC         	call	__i2c_stop	;wreg free
  7944                           
  7945                           ;i2c.c: 183: return 0;
  7946  0155B4  0E00               	movlw	0
  7947  0155B6  0012               	return	
  7948  0155B8                     __end_of__i2c_eeprom_busy:
  7949                           	opt stack 0
  7950                           tblptru	equ	0xFF8
  7951                           tblptrh	equ	0xFF7
  7952                           tblptrl	equ	0xFF6
  7953                           tablat	equ	0xFF5
  7954                           prodh	equ	0xFF4
  7955                           prodl	equ	0xFF3
  7956                           postinc0	equ	0xFEE
  7957                           wreg	equ	0xFE8
  7958                           postdec1	equ	0xFE5
  7959                           fsr1h	equ	0xFE2
  7960                           fsr1l	equ	0xFE1
  7961                           indf2	equ	0xFDF
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function _flash_init *****************
  7967 ;; Defined at:
  7968 ;;		line 361 in file "flash.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:   14
  7989 ;; This function calls:
  7990 ;;		__flash_set_page_size
  7991 ;;		_spi_init
  7992 ;; This function is called by:
  7993 ;;		_system_init
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text11
  7998  0158D0                     __ptext11:
  7999                           	opt stack 0
  8000  0158D0                     _flash_init:
  8001                           	opt stack 15
  8002                           
  8003                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8004                           
  8005                           ;incstack = 0
  8006  0158D0  0E00               	movlw	0
  8007  0158D2  ECFD  F0A7         	call	_spi_init
  8008                           
  8009                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8010  0158D6  0E00               	movlw	0
  8011  0158D8  EC72  F09F         	call	__flash_set_page_size
  8012  0158DC  0012               	return		;funcret
  8013  0158DE                     __end_of_flash_init:
  8014                           	opt stack 0
  8015                           tblptru	equ	0xFF8
  8016                           tblptrh	equ	0xFF7
  8017                           tblptrl	equ	0xFF6
  8018                           tablat	equ	0xFF5
  8019                           prodh	equ	0xFF4
  8020                           prodl	equ	0xFF3
  8021                           postinc0	equ	0xFEE
  8022                           wreg	equ	0xFE8
  8023                           postdec1	equ	0xFE5
  8024                           fsr1h	equ	0xFE2
  8025                           fsr1l	equ	0xFE1
  8026                           indf2	equ	0xFDF
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _spi_init *****************
  8032 ;; Defined at:
  8033 ;;		line 89 in file "spi.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  configuratio    1    wreg     enum E6823
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  configuratio    1    3[BANK0 ] enum E6823
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;Total ram usage:        1 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   11
  8054 ;; This function calls:
  8055 ;;		__spi_init
  8056 ;; This function is called by:
  8057 ;;		_flash_init
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text12
  8062  014FFA                     __ptext12:
  8063                           	opt stack 0
  8064  014FFA                     _spi_init:
  8065                           	opt stack 17
  8066                           
  8067                           ;incstack = 0
  8068                           ;spi_init@configuration stored from wreg
  8069  014FFA  0100               	movlb	0	; () banked
  8070  014FFC  6F63               	movwf	spi_init@configuration& (0+255),b
  8071                           
  8072                           ;spi.c: 91: switch(configuration)
  8073  014FFE  D012               	goto	l2164
  8074  015000                     
  8075                           ;spi.c: 94: _spi_init(config_internal);
  8076  015000  C136  F060         	movff	_config_internal,__spi_init@details
  8077  015004  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8078  015008  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8079  01500C  ECB4  F0A8         	call	__spi_init	;wreg free
  8080                           
  8081                           ;spi.c: 95: break;
  8082  015010  D011               	goto	l2166
  8083  015012                     
  8084                           ;spi.c: 98: _spi_init(config_external);
  8085  015012  C133  F060         	movff	_config_external,__spi_init@details
  8086  015016  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8087  01501A  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8088  01501E  ECB4  F0A8         	call	__spi_init	;wreg free
  8089                           
  8090                           ;spi.c: 100: }
  8091                           
  8092                           ;spi.c: 99: break;
  8093  015022  D008               	goto	l2166
  8094  015024                     l2164:
  8095  015024  0100               	movlb	0	; () banked
  8096  015026  5163               	movf	spi_init@configuration& (0+255),w,b
  8097                           
  8098                           ; Switch size 1, requested type "space"
  8099                           ; Number of cases is 2, Range of values is 0 to 1
  8100                           ; switch strategies available:
  8101                           ; Name         Instructions Cycles
  8102                           ; simple_byte            7     4 (average)
  8103                           ;	Chosen strategy is simple_byte
  8104  015028  0A00               	xorlw	0	; case 0
  8105  01502A  B4D8               	btfsc	status,2,c
  8106  01502C  D7E9               	goto	l2165
  8107  01502E  0A01               	xorlw	1	; case 1
  8108  015030  B4D8               	btfsc	status,2,c
  8109  015032  D7EF               	goto	l2167
  8110  015034                     l2166:
  8111                           
  8112                           ;spi.c: 102: active_configuration = configuration;
  8113  015034  C063  F159         	movff	spi_init@configuration,_active_configuration
  8114  015038  0012               	return		;funcret
  8115  01503A                     __end_of_spi_init:
  8116                           	opt stack 0
  8117                           tblptru	equ	0xFF8
  8118                           tblptrh	equ	0xFF7
  8119                           tblptrl	equ	0xFF6
  8120                           tablat	equ	0xFF5
  8121                           prodh	equ	0xFF4
  8122                           prodl	equ	0xFF3
  8123                           postinc0	equ	0xFEE
  8124                           wreg	equ	0xFE8
  8125                           postdec1	equ	0xFE5
  8126                           fsr1h	equ	0xFE2
  8127                           fsr1l	equ	0xFE1
  8128                           indf2	equ	0xFDF
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function __spi_init *****************
  8134 ;; Defined at:
  8135 ;;		line 24 in file "spi.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  details         3    0[BANK0 ] struct .
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8149 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:        3 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:   10
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_spi_init
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text13
  8164  015168                     __ptext13:
  8165                           	opt stack 0
  8166  015168                     __spi_init:
  8167                           	opt stack 17
  8168                           
  8169                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8170                           
  8171                           ;incstack = 0
  8172  015168  0E55               	movlw	85
  8173  01516A  6EA7               	movwf	4007,c	;volsfr
  8174  01516C  0EAA               	movlw	170
  8175  01516E  6EA7               	movwf	4007,c	;volsfr
  8176  015170  010E               	movlb	14	; () banked
  8177  015172  91BF               	bcf	191,0,b	;volatile
  8178                           
  8179                           ;spi.c: 31: RPINR21 = 22;
  8180  015174  0E16               	movlw	22
  8181  015176  6FFC               	movwf	252,b	;volatile
  8182                           
  8183                           ;spi.c: 32: RPOR21 = 10;
  8184  015178  0E0A               	movlw	10
  8185  01517A  6FD5               	movwf	213,b	;volatile
  8186                           
  8187                           ;spi.c: 34: RPOR23 = 11;
  8188  01517C  0E0B               	movlw	11
  8189  01517E  6FD7               	movwf	215,b	;volatile
  8190                           
  8191                           ;spi.c: 35: RPINR22 = 23;
  8192  015180  0E17               	movlw	23
  8193  015182  6FFD               	movwf	253,b	;volatile
  8194                           
  8195                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8196  015184  0E55               	movlw	85
  8197  015186  6EA7               	movwf	4007,c	;volsfr
  8198  015188  0EAA               	movlw	170
  8199  01518A  6EA7               	movwf	4007,c	;volsfr
  8200                           
  8201                           ; BSR set to: 14
  8202  01518C  81BF               	bsf	191,0,b	;volatile
  8203                           
  8204                           ; BSR set to: 14
  8205                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8206  01518E  8E73               	bsf	3955,7,c	;volatile
  8207                           
  8208                           ; BSR set to: 14
  8209                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8210  015190  8C73               	bsf	3955,6,c	;volatile
  8211                           
  8212                           ; BSR set to: 14
  8213                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8214  015192  9872               	bcf	3954,4,c	;volatile
  8215                           
  8216                           ; BSR set to: 14
  8217                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8218  015194  9072               	bcf	3954,0,c	;volatile
  8219  015196  9272               	bcf	3954,1,c	;volatile
  8220  015198  9472               	bcf	3954,2,c	;volatile
  8221  01519A  9672               	bcf	3954,3,c	;volatile
  8222                           
  8223                           ; BSR set to: 14
  8224                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8225  01519C  8A72               	bsf	3954,5,c	;volatile
  8226                           
  8227                           ; BSR set to: 14
  8228  01519E  0012               	return		;funcret
  8229  0151A0                     __end_of__spi_init:
  8230                           	opt stack 0
  8231                           tblptru	equ	0xFF8
  8232                           tblptrh	equ	0xFF7
  8233                           tblptrl	equ	0xFF6
  8234                           tablat	equ	0xFF5
  8235                           prodh	equ	0xFF4
  8236                           prodl	equ	0xFF3
  8237                           postinc0	equ	0xFEE
  8238                           wreg	equ	0xFE8
  8239                           postdec1	equ	0xFE5
  8240                           fsr1h	equ	0xFE2
  8241                           fsr1l	equ	0xFE1
  8242                           indf2	equ	0xFDF
  8243                           fsr2h	equ	0xFDA
  8244                           fsr2l	equ	0xFD9
  8245                           status	equ	0xFD8
  8246                           
  8247 ;; *************** function __flash_set_page_size *****************
  8248 ;; Defined at:
  8249 ;;		line 99 in file "flash.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  size            1    wreg     enum E6996
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  size            1   23[BANK0 ] enum E6996
  8254 ;;  command         4   19[BANK0 ] unsigned char [4]
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;Total ram usage:        5 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; Hardware stack levels required when called:   13
  8271 ;; This function calls:
  8272 ;;		__flash_is_busy
  8273 ;;		_memcpy
  8274 ;;		_spi_tx
  8275 ;; This function is called by:
  8276 ;;		_flash_init
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text14
  8281  013EE4                     __ptext14:
  8282                           	opt stack 0
  8283  013EE4                     __flash_set_page_size:
  8284                           	opt stack 15
  8285                           
  8286                           ; BSR set to: 14
  8287                           ;incstack = 0
  8288                           ;__flash_set_page_size@size stored from wreg
  8289  013EE4  0100               	movlb	0	; () banked
  8290  013EE6  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8291  013EE8                     
  8292                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8293  013EE8  EC62  F0AB         	call	__flash_is_busy	;wreg free
  8294  013EEC  0900               	iorlw	0
  8295  013EEE  A4D8               	btfss	status,2,c
  8296  013EF0  D7FB               	goto	l15520
  8297                           
  8298                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8299  013EF2  0100               	movlb	0	; () banked
  8300  013EF4  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8301  013EF6  A4D8               	btfss	status,2,c
  8302  013EF8  D00E               	goto	l1522
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8306  013EFA  0E73               	movlw	low __flash_set_page_size@command
  8307  013EFC  6F60               	movwf	memcpy@d1& (0+255),b
  8308  013EFE  0E00               	movlw	high __flash_set_page_size@command
  8309  013F00  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8310  013F02  0EE1               	movlw	low _flash_command_pagesize_512
  8311  013F04  6F62               	movwf	memcpy@s1& (0+255),b
  8312  013F06  0EA2               	movlw	high _flash_command_pagesize_512
  8313  013F08  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8314  013F0A  0E00               	movlw	0
  8315  013F0C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8316  013F0E  0E04               	movlw	4
  8317  013F10  6F64               	movwf	memcpy@n& (0+255),b
  8318  013F12  ECDD  F0A1         	call	_memcpy	;wreg free
  8319  013F16                     l1522:
  8320                           
  8321                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8322  013F16  0100               	movlb	0	; () banked
  8323  013F18  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8324  013F1A  A4D8               	btfss	status,2,c
  8325  013F1C  D00E               	goto	l1523
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8329  013F1E  0E73               	movlw	low __flash_set_page_size@command
  8330  013F20  6F60               	movwf	memcpy@d1& (0+255),b
  8331  013F22  0E00               	movlw	high __flash_set_page_size@command
  8332  013F24  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8333  013F26  0EDD               	movlw	low _flash_command_pagesize_528
  8334  013F28  6F62               	movwf	memcpy@s1& (0+255),b
  8335  013F2A  0EA2               	movlw	high _flash_command_pagesize_528
  8336  013F2C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8337  013F2E  0E00               	movlw	0
  8338  013F30  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8339  013F32  0E04               	movlw	4
  8340  013F34  6F64               	movwf	memcpy@n& (0+255),b
  8341  013F36  ECDD  F0A1         	call	_memcpy	;wreg free
  8342  013F3A                     l1523:
  8343                           
  8344                           ;flash.c: 113: spi_tx(command, 4);
  8345  013F3A  0E73               	movlw	low __flash_set_page_size@command
  8346  013F3C  0100               	movlb	0	; () banked
  8347  013F3E  6F60               	movwf	spi_tx@data& (0+255),b
  8348  013F40  0E00               	movlw	high __flash_set_page_size@command
  8349  013F42  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8350  013F44  0E00               	movlw	0
  8351  013F46  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8352  013F48  0E04               	movlw	4
  8353  013F4A  6F62               	movwf	spi_tx@length& (0+255),b
  8354  013F4C  EC4E  F0A3         	call	_spi_tx	;wreg free
  8355  013F50  0012               	return		;funcret
  8356  013F52                     __end_of__flash_set_page_size:
  8357                           	opt stack 0
  8358                           tblptru	equ	0xFF8
  8359                           tblptrh	equ	0xFF7
  8360                           tblptrl	equ	0xFF6
  8361                           tablat	equ	0xFF5
  8362                           prodh	equ	0xFF4
  8363                           prodl	equ	0xFF3
  8364                           postinc0	equ	0xFEE
  8365                           wreg	equ	0xFE8
  8366                           postdec1	equ	0xFE5
  8367                           fsr1h	equ	0xFE2
  8368                           fsr1l	equ	0xFE1
  8369                           indf2	equ	0xFDF
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _fat_init *****************
  8375 ;; Defined at:
  8376 ;;		line 1382 in file "fat16.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;Total ram usage:        0 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:   16
  8397 ;; This function calls:
  8398 ;;		_fat_format
  8399 ;;		_fat_get_format_status
  8400 ;; This function is called by:
  8401 ;;		_system_init
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text15
  8406  0158A0                     __ptext15:
  8407                           	opt stack 0
  8408  0158A0                     _fat_init:
  8409                           	opt stack 13
  8410                           
  8411                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8412                           
  8413                           ;incstack = 0
  8414  0158A0  ECB3  F096         	call	_fat_get_format_status	;wreg free
  8415  0158A4  0900               	iorlw	0
  8416  0158A6  A4D8               	btfss	status,2,c
  8417  0158A8  0012               	return	
  8418                           
  8419                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  8420  0158AA  EC1F  F076         	call	_fat_format	;wreg free
  8421  0158AE  0012               	return	
  8422  0158B0                     __end_of_fat_init:
  8423                           	opt stack 0
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           postinc0	equ	0xFEE
  8431                           wreg	equ	0xFE8
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           fsr2h	equ	0xFDA
  8437                           fsr2l	equ	0xFD9
  8438                           status	equ	0xFD8
  8439                           
  8440 ;; *************** function _fat_get_format_status *****************
  8441 ;; Defined at:
  8442 ;;		line 1292 in file "fat16.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  cntr            2   45[BANK0 ] unsigned int 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      enum E6970
  8449 ;; Registers used:
  8450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;Total ram usage:        4 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:   15
  8463 ;; This function calls:
  8464 ;;		__get_fbr
  8465 ;;		__get_mbr
  8466 ;;		_flash_sector_read
  8467 ;; This function is called by:
  8468 ;;		_fat_init
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text16
  8473  012D66                     __ptext16:
  8474                           	opt stack 0
  8475  012D66                     _fat_get_format_status:
  8476                           	opt stack 13
  8477                           
  8478                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  8479                           
  8480                           ;incstack = 0
  8481  012D66  0E00               	movlw	0
  8482  012D68  0100               	movlb	0	; () banked
  8483  012D6A  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8484  012D6C  0E00               	movlw	0
  8485  012D6E  6F87               	movwf	flash_sector_read@page& (0+255),b
  8486  012D70  0E00               	movlw	low _buffer
  8487  012D72  6F89               	movwf	flash_sector_read@data& (0+255),b
  8488  012D74  0E0A               	movlw	high _buffer
  8489  012D76  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8490  012D78  EC04  F0AB         	call	_flash_sector_read	;wreg free
  8491                           
  8492                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  8493  012D7C  0E00               	movlw	0
  8494  012D7E  0100               	movlb	0	; () banked
  8495  012D80  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8496  012D82  0E00               	movlw	0
  8497  012D84  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8498  012D86                     l15712:
  8499                           
  8500                           ; BSR set to: 0
  8501  012D86  0E02               	movlw	2
  8502  012D88  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8503  012D8A  B0D8               	btfsc	status,0,c
  8504  012D8C  D017               	goto	u14570
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  8508                           
  8509                           ; BSR set to: 0
  8510                           
  8511                           ; BSR set to: 0
  8512  012D8E  0E00               	movlw	low _buffer
  8513  012D90  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8514  012D92  6ED9               	movwf	fsr2l,c
  8515  012D94  0E0A               	movlw	high _buffer
  8516  012D96  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8517  012D98  6EDA               	movwf	fsr2h,c
  8518  012D9A  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8519  012D9E  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8520  012DA2  ECEC  F092         	call	__get_mbr	;wreg free
  8521  012DA6  0100               	movlb	0	; () banked
  8522  012DA8  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8523  012DAA  50DE               	movf	postinc2,w,c
  8524  012DAC  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8525  012DAE  B4D8               	btfsc	status,2,c
  8526  012DB0  D002               	goto	l2046
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  8530  012DB2  0E00               	movlw	0
  8531                           
  8532                           ; BSR set to: 0
  8533  012DB4  0012               	return	
  8534  012DB6                     l2046:
  8535                           
  8536                           ; BSR set to: 0
  8537                           
  8538                           ; BSR set to: 0
  8539  012DB6  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8540  012DB8  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8541  012DBA  D7E5               	goto	l15712
  8542  012DBC                     u14570:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  8546                           
  8547                           ; BSR set to: 0
  8548  012DBC  0E00               	movlw	0
  8549  012DBE  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8550  012DC0  0E01               	movlw	1
  8551  012DC2  6F87               	movwf	flash_sector_read@page& (0+255),b
  8552  012DC4  0E00               	movlw	low _buffer
  8553  012DC6  6F89               	movwf	flash_sector_read@data& (0+255),b
  8554  012DC8  0E0A               	movlw	high _buffer
  8555  012DCA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8556  012DCC  EC04  F0AB         	call	_flash_sector_read	;wreg free
  8557                           
  8558                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  8559  012DD0  0E00               	movlw	0
  8560  012DD2  0100               	movlb	0	; () banked
  8561  012DD4  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8562  012DD6  0E00               	movlw	0
  8563  012DD8  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8564  012DDA                     l15730:
  8565                           
  8566                           ; BSR set to: 0
  8567  012DDA  0E02               	movlw	2
  8568  012DDC  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8569  012DDE  B0D8               	btfsc	status,0,c
  8570  012DE0  D017               	goto	u14600
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  8574                           
  8575                           ; BSR set to: 0
  8576                           
  8577                           ; BSR set to: 0
  8578  012DE2  0E00               	movlw	low _buffer
  8579  012DE4  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8580  012DE6  6ED9               	movwf	fsr2l,c
  8581  012DE8  0E0A               	movlw	high _buffer
  8582  012DEA  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8583  012DEC  6EDA               	movwf	fsr2h,c
  8584  012DEE  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8585  012DF2  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8586  012DF6  EC71  F070         	call	__get_fbr	;wreg free
  8587  012DFA  0100               	movlb	0	; () banked
  8588  012DFC  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8589  012DFE  50DE               	movf	postinc2,w,c
  8590  012E00  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8591  012E02  B4D8               	btfsc	status,2,c
  8592  012E04  D002               	goto	l2050
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  8596  012E06  0E00               	movlw	0
  8597                           
  8598                           ; BSR set to: 0
  8599  012E08  0012               	return	
  8600  012E0A                     l2050:
  8601                           
  8602                           ; BSR set to: 0
  8603                           
  8604                           ; BSR set to: 0
  8605  012E0A  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8606  012E0C  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8607  012E0E  D7E5               	goto	l15730
  8608  012E10                     u14600:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  8612                           
  8613                           ; BSR set to: 0
  8614  012E10  0E01               	movlw	1
  8615  012E12  0012               	return	
  8616  012E14                     __end_of_fat_get_format_status:
  8617                           	opt stack 0
  8618                           tblptru	equ	0xFF8
  8619                           tblptrh	equ	0xFF7
  8620                           tblptrl	equ	0xFF6
  8621                           tablat	equ	0xFF5
  8622                           prodh	equ	0xFF4
  8623                           prodl	equ	0xFF3
  8624                           postinc0	equ	0xFEE
  8625                           wreg	equ	0xFE8
  8626                           postdec1	equ	0xFE5
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           fsr2h	equ	0xFDA
  8632                           fsr2l	equ	0xFD9
  8633                           status	equ	0xFD8
  8634                           
  8635 ;; *************** function _fat_format *****************
  8636 ;; Defined at:
  8637 ;;		line 1320 in file "fat16.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  cntr            2   36[BANK0 ] unsigned int 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      unsigned char 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;Total ram usage:        2 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:   15
  8658 ;; This function calls:
  8659 ;;		__get_data
  8660 ;;		__get_fat
  8661 ;;		__get_fbr
  8662 ;;		__get_mbr
  8663 ;;		__get_root
  8664 ;;		_flash_sector_write
  8665 ;; This function is called by:
  8666 ;;		_fat_init
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text17
  8671  00EC3E                     __ptext17:
  8672                           	opt stack 0
  8673  00EC3E                     _fat_format:
  8674                           	opt stack 13
  8675                           
  8676                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;incstack = 0
  8680  00EC3E  0E00               	movlw	0
  8681  00EC40  0100               	movlb	0	; () banked
  8682  00EC42  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8683  00EC44  0E00               	movlw	0
  8684  00EC46  6F84               	movwf	fat_format@cntr& (0+255),b
  8685  00EC48                     l15750:
  8686                           
  8687                           ; BSR set to: 0
  8688  00EC48  0E02               	movlw	2
  8689  00EC4A  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8690  00EC4C  B0D8               	btfsc	status,0,c
  8691  00EC4E  D011               	goto	u14620
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  8695                           
  8696                           ; BSR set to: 0
  8697                           
  8698                           ; BSR set to: 0
  8699  00EC50  0E00               	movlw	low _buffer
  8700  00EC52  2584               	addwf	fat_format@cntr& (0+255),w,b
  8701  00EC54  6ED9               	movwf	fsr2l,c
  8702  00EC56  0E0A               	movlw	high _buffer
  8703  00EC58  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8704  00EC5A  6EDA               	movwf	fsr2h,c
  8705  00EC5C  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  8706  00EC60  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  8707  00EC64  ECEC  F092         	call	__get_mbr	;wreg free
  8708  00EC68  6EDF               	movwf	indf2,c
  8709  00EC6A  0100               	movlb	0	; () banked
  8710  00EC6C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8711  00EC6E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8712  00EC70  D7EB               	goto	l15750
  8713  00EC72                     u14620:
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  8717                           
  8718                           ; BSR set to: 0
  8719  00EC72  0E00               	movlw	0
  8720  00EC74  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8721  00EC76  0E00               	movlw	0
  8722  00EC78  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8723  00EC7A  0E00               	movlw	low _buffer
  8724  00EC7C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8725  00EC7E  0E0A               	movlw	high _buffer
  8726  00EC80  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8727  00EC82  EC22  F0A6         	call	_flash_sector_write	;wreg free
  8728                           
  8729                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  8730  00EC86  0E00               	movlw	0
  8731  00EC88  0100               	movlb	0	; () banked
  8732  00EC8A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8733  00EC8C  0E00               	movlw	0
  8734  00EC8E  6F84               	movwf	fat_format@cntr& (0+255),b
  8735  00EC90                     l15764:
  8736                           
  8737                           ; BSR set to: 0
  8738  00EC90  0E02               	movlw	2
  8739  00EC92  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8740  00EC94  B0D8               	btfsc	status,0,c
  8741  00EC96  D011               	goto	u14640
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  8745                           
  8746                           ; BSR set to: 0
  8747                           
  8748                           ; BSR set to: 0
  8749  00EC98  0E00               	movlw	low _buffer
  8750  00EC9A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8751  00EC9C  6ED9               	movwf	fsr2l,c
  8752  00EC9E  0E0A               	movlw	high _buffer
  8753  00ECA0  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8754  00ECA2  6EDA               	movwf	fsr2h,c
  8755  00ECA4  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  8756  00ECA8  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  8757  00ECAC  EC71  F070         	call	__get_fbr	;wreg free
  8758  00ECB0  6EDF               	movwf	indf2,c
  8759  00ECB2  0100               	movlb	0	; () banked
  8760  00ECB4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8761  00ECB6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8762  00ECB8  D7EB               	goto	l15764
  8763  00ECBA                     u14640:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  8767                           
  8768                           ; BSR set to: 0
  8769  00ECBA  0E00               	movlw	0
  8770  00ECBC  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8771  00ECBE  0E01               	movlw	1
  8772  00ECC0  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8773  00ECC2  0E00               	movlw	low _buffer
  8774  00ECC4  6F81               	movwf	flash_sector_write@data& (0+255),b
  8775  00ECC6  0E0A               	movlw	high _buffer
  8776  00ECC8  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8777  00ECCA  EC22  F0A6         	call	_flash_sector_write	;wreg free
  8778                           
  8779                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  8780  00ECCE  0E00               	movlw	0
  8781  00ECD0  0100               	movlb	0	; () banked
  8782  00ECD2  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8783  00ECD4  0E00               	movlw	0
  8784  00ECD6  6F84               	movwf	fat_format@cntr& (0+255),b
  8785  00ECD8                     l15778:
  8786                           
  8787                           ; BSR set to: 0
  8788  00ECD8  0E02               	movlw	2
  8789  00ECDA  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8790  00ECDC  B0D8               	btfsc	status,0,c
  8791  00ECDE  D011               	goto	u14660
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  8795                           
  8796                           ; BSR set to: 0
  8797                           
  8798                           ; BSR set to: 0
  8799  00ECE0  0E00               	movlw	low _buffer
  8800  00ECE2  2584               	addwf	fat_format@cntr& (0+255),w,b
  8801  00ECE4  6ED9               	movwf	fsr2l,c
  8802  00ECE6  0E0A               	movlw	high _buffer
  8803  00ECE8  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8804  00ECEA  6EDA               	movwf	fsr2h,c
  8805  00ECEC  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  8806  00ECF0  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  8807  00ECF4  EC7B  F0A3         	call	__get_fat	;wreg free
  8808  00ECF8  6EDF               	movwf	indf2,c
  8809  00ECFA  0100               	movlb	0	; () banked
  8810  00ECFC  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8811  00ECFE  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8812  00ED00  D7EB               	goto	l15778
  8813  00ED02                     u14660:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  8817                           
  8818                           ; BSR set to: 0
  8819  00ED02  0E00               	movlw	0
  8820  00ED04  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8821  00ED06  0E02               	movlw	2
  8822  00ED08  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8823  00ED0A  0E00               	movlw	low _buffer
  8824  00ED0C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8825  00ED0E  0E0A               	movlw	high _buffer
  8826  00ED10  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8827  00ED12  EC22  F0A6         	call	_flash_sector_write	;wreg free
  8828                           
  8829                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  8830  00ED16  0E00               	movlw	0
  8831  00ED18  0100               	movlb	0	; () banked
  8832  00ED1A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8833  00ED1C  0E00               	movlw	0
  8834  00ED1E  6F84               	movwf	fat_format@cntr& (0+255),b
  8835  00ED20                     l15792:
  8836                           
  8837                           ; BSR set to: 0
  8838  00ED20  0E02               	movlw	2
  8839  00ED22  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8840  00ED24  B0D8               	btfsc	status,0,c
  8841  00ED26  D00B               	goto	u14680
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  8845                           
  8846                           ; BSR set to: 0
  8847                           
  8848                           ; BSR set to: 0
  8849  00ED28  0E00               	movlw	low _buffer
  8850  00ED2A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8851  00ED2C  6ED9               	movwf	fsr2l,c
  8852  00ED2E  0E0A               	movlw	high _buffer
  8853  00ED30  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8854  00ED32  6EDA               	movwf	fsr2h,c
  8855  00ED34  0E00               	movlw	0
  8856  00ED36  6EDF               	movwf	indf2,c
  8857                           
  8858                           ; BSR set to: 0
  8859  00ED38  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8860  00ED3A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8861  00ED3C  D7F1               	goto	l15792
  8862  00ED3E                     u14680:
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  8866                           
  8867                           ; BSR set to: 0
  8868  00ED3E  0E00               	movlw	0
  8869  00ED40  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8870  00ED42  0E03               	movlw	3
  8871  00ED44  6F84               	movwf	fat_format@cntr& (0+255),b
  8872  00ED46                     l15804:
  8873                           
  8874                           ; BSR set to: 0
  8875  00ED46  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8876  00ED48  E112               	bnz	l15814
  8877  00ED4A  0E22               	movlw	34
  8878  00ED4C  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8879  00ED4E  B0D8               	btfsc	status,0,c
  8880  00ED50  D00E               	goto	u14700
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  8884                           
  8885                           ; BSR set to: 0
  8886                           
  8887                           ; BSR set to: 0
  8888  00ED52  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  8889  00ED56  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  8890  00ED5A  0E00               	movlw	low _buffer
  8891  00ED5C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8892  00ED5E  0E0A               	movlw	high _buffer
  8893  00ED60  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8894  00ED62  EC22  F0A6         	call	_flash_sector_write	;wreg free
  8895  00ED66  0100               	movlb	0	; () banked
  8896  00ED68  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8897  00ED6A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8898  00ED6C  D7EC               	goto	l15804
  8899  00ED6E                     u14700:
  8900  00ED6E                     l15814:
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  8904  00ED6E  0E00               	movlw	0
  8905  00ED70  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8906  00ED72  0E00               	movlw	0
  8907  00ED74  6F84               	movwf	fat_format@cntr& (0+255),b
  8908  00ED76                     l15816:
  8909                           
  8910                           ; BSR set to: 0
  8911  00ED76  0E02               	movlw	2
  8912  00ED78  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8913  00ED7A  B0D8               	btfsc	status,0,c
  8914  00ED7C  D011               	goto	u14720
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  8918                           
  8919                           ; BSR set to: 0
  8920                           
  8921                           ; BSR set to: 0
  8922  00ED7E  0E00               	movlw	low _buffer
  8923  00ED80  2584               	addwf	fat_format@cntr& (0+255),w,b
  8924  00ED82  6ED9               	movwf	fsr2l,c
  8925  00ED84  0E0A               	movlw	high _buffer
  8926  00ED86  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8927  00ED88  6EDA               	movwf	fsr2h,c
  8928  00ED8A  C084  F060         	movff	fat_format@cntr,__get_root@idx
  8929  00ED8E  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  8930  00ED92  ECAF  F07B         	call	__get_root	;wreg free
  8931  00ED96  6EDF               	movwf	indf2,c
  8932  00ED98  0100               	movlb	0	; () banked
  8933  00ED9A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8934  00ED9C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8935  00ED9E  D7EB               	goto	l15816
  8936  00EDA0                     u14720:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  8940                           
  8941                           ; BSR set to: 0
  8942  00EDA0  0E00               	movlw	0
  8943  00EDA2  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8944  00EDA4  0E22               	movlw	34
  8945  00EDA6  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8946  00EDA8  0E00               	movlw	low _buffer
  8947  00EDAA  6F81               	movwf	flash_sector_write@data& (0+255),b
  8948  00EDAC  0E0A               	movlw	high _buffer
  8949  00EDAE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8950  00EDB0  EC22  F0A6         	call	_flash_sector_write	;wreg free
  8951                           
  8952                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  8953  00EDB4  0E00               	movlw	0
  8954  00EDB6  0100               	movlb	0	; () banked
  8955  00EDB8  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8956  00EDBA  0E00               	movlw	0
  8957  00EDBC  6F84               	movwf	fat_format@cntr& (0+255),b
  8958  00EDBE                     l15830:
  8959                           
  8960                           ; BSR set to: 0
  8961  00EDBE  0E02               	movlw	2
  8962  00EDC0  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8963  00EDC2  B0D8               	btfsc	status,0,c
  8964  00EDC4  D00B               	goto	u14740
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  8968                           
  8969                           ; BSR set to: 0
  8970                           
  8971                           ; BSR set to: 0
  8972  00EDC6  0E00               	movlw	low _buffer
  8973  00EDC8  2584               	addwf	fat_format@cntr& (0+255),w,b
  8974  00EDCA  6ED9               	movwf	fsr2l,c
  8975  00EDCC  0E0A               	movlw	high _buffer
  8976  00EDCE  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8977  00EDD0  6EDA               	movwf	fsr2h,c
  8978  00EDD2  0E00               	movlw	0
  8979  00EDD4  6EDF               	movwf	indf2,c
  8980                           
  8981                           ; BSR set to: 0
  8982  00EDD6  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8983  00EDD8  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8984  00EDDA  D7F1               	goto	l15830
  8985  00EDDC                     u14740:
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  8989                           
  8990                           ; BSR set to: 0
  8991  00EDDC  0E00               	movlw	0
  8992  00EDDE  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8993  00EDE0  0E23               	movlw	35
  8994  00EDE2  6F84               	movwf	fat_format@cntr& (0+255),b
  8995  00EDE4                     l15842:
  8996                           
  8997                           ; BSR set to: 0
  8998  00EDE4  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8999  00EDE6  E112               	bnz	l15852
  9000  00EDE8  0E26               	movlw	38
  9001  00EDEA  5D84               	subwf	fat_format@cntr& (0+255),w,b
  9002  00EDEC  B0D8               	btfsc	status,0,c
  9003  00EDEE  D00E               	goto	u14760
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  9007                           
  9008                           ; BSR set to: 0
  9009                           
  9010                           ; BSR set to: 0
  9011  00EDF0  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  9012  00EDF4  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  9013  00EDF8  0E00               	movlw	low _buffer
  9014  00EDFA  6F81               	movwf	flash_sector_write@data& (0+255),b
  9015  00EDFC  0E0A               	movlw	high _buffer
  9016  00EDFE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9017  00EE00  EC22  F0A6         	call	_flash_sector_write	;wreg free
  9018  00EE04  0100               	movlb	0	; () banked
  9019  00EE06  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9020  00EE08  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9021  00EE0A  D7EC               	goto	l15842
  9022  00EE0C                     u14760:
  9023  00EE0C                     l15852:
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  9027  00EE0C  0E00               	movlw	0
  9028  00EE0E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  9029  00EE10  0E00               	movlw	0
  9030  00EE12  6F84               	movwf	fat_format@cntr& (0+255),b
  9031  00EE14                     l15854:
  9032                           
  9033                           ; BSR set to: 0
  9034  00EE14  0E02               	movlw	2
  9035  00EE16  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  9036  00EE18  B0D8               	btfsc	status,0,c
  9037  00EE1A  D011               	goto	u14780
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  9041                           
  9042                           ; BSR set to: 0
  9043                           
  9044                           ; BSR set to: 0
  9045  00EE1C  0E00               	movlw	low _buffer
  9046  00EE1E  2584               	addwf	fat_format@cntr& (0+255),w,b
  9047  00EE20  6ED9               	movwf	fsr2l,c
  9048  00EE22  0E0A               	movlw	high _buffer
  9049  00EE24  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  9050  00EE26  6EDA               	movwf	fsr2h,c
  9051  00EE28  C084  F060         	movff	fat_format@cntr,__get_data@idx
  9052  00EE2C  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  9053  00EE30  EC74  F0AA         	call	__get_data	;wreg free
  9054  00EE34  6EDF               	movwf	indf2,c
  9055  00EE36  0100               	movlb	0	; () banked
  9056  00EE38  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9057  00EE3A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9058  00EE3C  D7EB               	goto	l15854
  9059  00EE3E                     u14780:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  9063                           
  9064                           ; BSR set to: 0
  9065  00EE3E  0E00               	movlw	0
  9066  00EE40  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9067  00EE42  0E26               	movlw	38
  9068  00EE44  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9069  00EE46  0E00               	movlw	low _buffer
  9070  00EE48  6F81               	movwf	flash_sector_write@data& (0+255),b
  9071  00EE4A  0E0A               	movlw	high _buffer
  9072  00EE4C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9073  00EE4E  EC22  F0A6         	call	_flash_sector_write	;wreg free
  9074  00EE52  0012               	return	
  9075  00EE54                     __end_of_fat_format:
  9076                           	opt stack 0
  9077                           tblptru	equ	0xFF8
  9078                           tblptrh	equ	0xFF7
  9079                           tblptrl	equ	0xFF6
  9080                           tablat	equ	0xFF5
  9081                           prodh	equ	0xFF4
  9082                           prodl	equ	0xFF3
  9083                           postinc0	equ	0xFEE
  9084                           wreg	equ	0xFE8
  9085                           postdec1	equ	0xFE5
  9086                           fsr1h	equ	0xFE2
  9087                           fsr1l	equ	0xFE1
  9088                           indf2	equ	0xFDF
  9089                           postinc2	equ	0xFDE
  9090                           fsr2h	equ	0xFDA
  9091                           fsr2l	equ	0xFD9
  9092                           status	equ	0xFD8
  9093                           
  9094 ;; *************** function __get_root *****************
  9095 ;; Defined at:
  9096 ;;		line 1210 in file "fat16.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  idx             2    0[BANK0 ] unsigned int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      unsigned char 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9112 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;Total ram usage:        6 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:   10
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_fat_format
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text18
  9125  00F75E                     __ptext18:
  9126                           	opt stack 0
  9127  00F75E                     __get_root:
  9128                           	opt stack 17
  9129                           
  9130                           ;fat16.c: 1212: if(idx < 0x20)
  9131                           
  9132                           ;incstack = 0
  9133  00F75E  0100               	movlb	0	; () banked
  9134  00F760  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9135  00F762  E11D               	bnz	l14836
  9136  00F764  0E20               	movlw	32
  9137  00F766  5D60               	subwf	__get_root@idx& (0+255),w,b
  9138  00F768  B0D8               	btfsc	status,0,c
  9139  00F76A  D019               	goto	l2011
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  9143  00F76C  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9144  00F76E  E110               	bnz	l14830
  9145  00F770  0E0B               	movlw	11
  9146  00F772  5D60               	subwf	__get_root@idx& (0+255),w,b
  9147  00F774  B0D8               	btfsc	status,0,c
  9148  00F776  D00C               	goto	l2009
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
  9152  00F778  0EF6               	movlw	low STR_15
  9153  00F77A  2560               	addwf	__get_root@idx& (0+255),w,b
  9154  00F77C  6EF6               	movwf	tblptrl,c
  9155  00F77E  0EA2               	movlw	high STR_15
  9156  00F780  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9157  00F782  6EF7               	movwf	tblptrh,c
  9158  00F784                     	if	1	;There are 3 active tblptr bytes
  9159  00F784  6AF8               	clrf	tblptru,c
  9160  00F786  0E00               	movlw	low (__mediumconst shr (0+16))
  9161  00F788  22F8               	addwfc	tblptru,f,c
  9162  00F78A                     	endif
  9163  00F78A  0008               	tblrd		*
  9164  00F78C  50F5               	movf	tablat,w,c
  9165                           
  9166                           ; BSR set to: 0
  9167  00F78E  0012               	return	
  9168  00F790                     l2009:
  9169  00F790                     l14830:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  9173  00F790  0E0B               	movlw	11
  9174  00F792  1960               	xorwf	__get_root@idx& (0+255),w,b
  9175  00F794  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  9176  00F796  A4D8               	btfss	status,2,c
  9177  00F798  D002               	goto	l2011
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  9181  00F79A  0E08               	movlw	8
  9182                           
  9183                           ; BSR set to: 0
  9184  00F79C  0012               	return	
  9185  00F79E                     l2011:
  9186  00F79E                     l14836:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  9190  00F79E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9191  00F7A0  E103               	bnz	u13531
  9192  00F7A2  0E40               	movlw	64
  9193  00F7A4  5D60               	subwf	__get_root@idx& (0+255),w,b
  9194  00F7A6  B0D8               	btfsc	status,0,c
  9195  00F7A8                     u13531:
  9196  00F7A8  D0A4               	goto	l2037
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  9200  00F7AA  0E20               	movlw	32
  9201  00F7AC  5F60               	subwf	__get_root@idx& (0+255),f,b
  9202  00F7AE  0E00               	movlw	0
  9203  00F7B0  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  9204                           
  9205                           ;fat16.c: 1226: if(idx < 0+8)
  9206  00F7B2  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9207  00F7B4  E110               	bnz	l14844
  9208  00F7B6  0E08               	movlw	8
  9209  00F7B8  5D60               	subwf	__get_root@idx& (0+255),w,b
  9210  00F7BA  B0D8               	btfsc	status,0,c
  9211  00F7BC  D00C               	goto	l2013
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  9215  00F7BE  0E02               	movlw	low STR_16
  9216  00F7C0  2560               	addwf	__get_root@idx& (0+255),w,b
  9217  00F7C2  6EF6               	movwf	tblptrl,c
  9218  00F7C4  0EA3               	movlw	high STR_16
  9219  00F7C6  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9220  00F7C8  6EF7               	movwf	tblptrh,c
  9221  00F7CA                     	if	1	;There are 3 active tblptr bytes
  9222  00F7CA  6AF8               	clrf	tblptru,c
  9223  00F7CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9224  00F7CE  22F8               	addwfc	tblptru,f,c
  9225  00F7D0                     	endif
  9226  00F7D0  0008               	tblrd		*
  9227  00F7D2  50F5               	movf	tablat,w,c
  9228                           
  9229                           ; BSR set to: 0
  9230  00F7D4  0012               	return	
  9231  00F7D6                     l2013:
  9232  00F7D6                     l14844:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  9236  00F7D6  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9237  00F7D8  E146               	bnz	l14936
  9238  00F7DA  0E0B               	movlw	11
  9239  00F7DC  5D60               	subwf	__get_root@idx& (0+255),w,b
  9240  00F7DE  B0D8               	btfsc	status,0,c
  9241  00F7E0  D042               	goto	l2015
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  9245  00F7E2  0EF8               	movlw	248
  9246  00F7E4  6F62               	movwf	??__get_root& (0+255),b
  9247  00F7E6  0EFF               	movlw	255
  9248  00F7E8  6F63               	movwf	(??__get_root+1)& (0+255),b
  9249  00F7EA  C060  F064         	movff	__get_root@idx,??__get_root+2
  9250  00F7EE  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  9251  00F7F2  5162               	movf	??__get_root& (0+255),w,b
  9252  00F7F4  2764               	addwf	(??__get_root+2)& (0+255),f,b
  9253  00F7F6  5163               	movf	(??__get_root+1)& (0+255),w,b
  9254  00F7F8  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  9255  00F7FA  0E2A               	movlw	low STR_17
  9256  00F7FC  2564               	addwf	(??__get_root+2)& (0+255),w,b
  9257  00F7FE  6EF6               	movwf	tblptrl,c
  9258  00F800  0EA3               	movlw	high STR_17
  9259  00F802  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  9260  00F804  6EF7               	movwf	tblptrh,c
  9261  00F806                     	if	1	;There are 3 active tblptr bytes
  9262  00F806  6AF8               	clrf	tblptru,c
  9263  00F808  0E00               	movlw	low (__mediumconst shr (0+16))
  9264  00F80A  22F8               	addwfc	tblptru,f,c
  9265  00F80C                     	endif
  9266  00F80C  0008               	tblrd		*
  9267  00F80E  50F5               	movf	tablat,w,c
  9268                           
  9269                           ; BSR set to: 0
  9270  00F810  0012               	return	
  9271  00F812                     
  9272                           ; BSR set to: 0
  9273                           ;fat16.c: 1237: return 0x20;
  9274                           
  9275                           ; BSR set to: 0
  9276  00F812  0E20               	movlw	32
  9277                           
  9278                           ; BSR set to: 0
  9279  00F814  0012               	return	
  9280  00F816                     
  9281                           ; BSR set to: 0
  9282                           ;fat16.c: 1239: return 0x06;
  9283                           
  9284                           ; BSR set to: 0
  9285  00F816  0E06               	movlw	6
  9286                           
  9287                           ; BSR set to: 0
  9288  00F818  0012               	return	
  9289  00F81A                     
  9290                           ; BSR set to: 0
  9291                           ;fat16.c: 1241: return 0x28;
  9292                           
  9293                           ; BSR set to: 0
  9294  00F81A  0E28               	movlw	40
  9295                           
  9296                           ; BSR set to: 0
  9297  00F81C  0012               	return	
  9298  00F81E                     
  9299                           ; BSR set to: 0
  9300                           ;fat16.c: 1243: return 0x78;
  9301                           
  9302                           ; BSR set to: 0
  9303  00F81E  0E78               	movlw	120
  9304                           
  9305                           ; BSR set to: 0
  9306  00F820  0012               	return	
  9307  00F822                     
  9308                           ; BSR set to: 0
  9309                           ;fat16.c: 1245: return 0xDE;
  9310                           
  9311                           ; BSR set to: 0
  9312  00F822  0EDE               	movlw	222
  9313                           
  9314                           ; BSR set to: 0
  9315  00F824  0012               	return	
  9316  00F826                     
  9317                           ; BSR set to: 0
  9318                           ;fat16.c: 1247: return 0x38;
  9319                           
  9320                           ; BSR set to: 0
  9321  00F826  0E38               	movlw	56
  9322                           
  9323                           ; BSR set to: 0
  9324  00F828  0012               	return	
  9325  00F82A                     
  9326                           ; BSR set to: 0
  9327                           ;fat16.c: 1249: return 0x5F;
  9328                           
  9329                           ; BSR set to: 0
  9330  00F82A  0E5F               	movlw	95
  9331                           
  9332                           ; BSR set to: 0
  9333  00F82C  0012               	return	
  9334  00F82E                     
  9335                           ; BSR set to: 0
  9336                           ;fat16.c: 1251: return 0x4B;
  9337                           
  9338                           ; BSR set to: 0
  9339  00F82E  0E4B               	movlw	75
  9340                           
  9341                           ; BSR set to: 0
  9342  00F830  0012               	return	
  9343  00F832                     
  9344                           ; BSR set to: 0
  9345                           ;fat16.c: 1253: return 0x00;
  9346                           
  9347                           ; BSR set to: 0
  9348  00F832  0E00               	movlw	0
  9349                           
  9350                           ; BSR set to: 0
  9351  00F834  0012               	return	
  9352  00F836                     
  9353                           ; BSR set to: 0
  9354                           ;fat16.c: 1255: return 0x00;
  9355                           
  9356                           ; BSR set to: 0
  9357  00F836  0E00               	movlw	0
  9358                           
  9359                           ; BSR set to: 0
  9360  00F838  0012               	return	
  9361  00F83A                     
  9362                           ; BSR set to: 0
  9363                           ;fat16.c: 1257: return 0x04;
  9364                           
  9365                           ; BSR set to: 0
  9366  00F83A  0E04               	movlw	4
  9367                           
  9368                           ; BSR set to: 0
  9369  00F83C  0012               	return	
  9370  00F83E                     
  9371                           ; BSR set to: 0
  9372                           ;fat16.c: 1259: return 0x77;
  9373                           
  9374                           ; BSR set to: 0
  9375  00F83E  0E77               	movlw	119
  9376                           
  9377                           ; BSR set to: 0
  9378  00F840  0012               	return	
  9379  00F842                     
  9380                           ; BSR set to: 0
  9381                           ;fat16.c: 1261: return 0xDE;
  9382                           
  9383                           ; BSR set to: 0
  9384  00F842  0EDE               	movlw	222
  9385                           
  9386                           ; BSR set to: 0
  9387  00F844  0012               	return	
  9388  00F846                     
  9389                           ; BSR set to: 0
  9390                           ;fat16.c: 1263: return 0x38;
  9391                           
  9392                           ; BSR set to: 0
  9393  00F846  0E38               	movlw	56
  9394                           
  9395                           ; BSR set to: 0
  9396  00F848  0012               	return	
  9397  00F84A                     
  9398                           ; BSR set to: 0
  9399                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  9400                           
  9401                           ; BSR set to: 0
  9402  00F84A  0E02               	movlw	2
  9403                           
  9404                           ; BSR set to: 0
  9405  00F84C  0012               	return	
  9406  00F84E                     
  9407                           ; BSR set to: 0
  9408                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  9409                           
  9410                           ; BSR set to: 0
  9411  00F84E  0E00               	movlw	0
  9412                           
  9413                           ; BSR set to: 0
  9414  00F850  0012               	return	
  9415  00F852                     
  9416                           ; BSR set to: 0
  9417                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  9418                           
  9419                           ; BSR set to: 0
  9420  00F852  0E0C               	movlw	12
  9421                           
  9422                           ; BSR set to: 0
  9423  00F854  0012               	return	
  9424  00F856                     
  9425                           ; BSR set to: 0
  9426                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  9427                           
  9428                           ; BSR set to: 0
  9429  00F856  0E00               	movlw	0
  9430                           
  9431                           ; BSR set to: 0
  9432  00F858  0012               	return	
  9433  00F85A                     
  9434                           ; BSR set to: 0
  9435                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  9436                           
  9437                           ; BSR set to: 0
  9438  00F85A  0E00               	movlw	0
  9439                           
  9440                           ; BSR set to: 0
  9441  00F85C  0012               	return	
  9442  00F85E                     
  9443                           ; BSR set to: 0
  9444                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9445                           
  9446                           ; BSR set to: 0
  9447  00F85E  0E00               	movlw	0
  9448                           
  9449                           ; BSR set to: 0
  9450  00F860  0012               	return	
  9451  00F862                     
  9452                           ; BSR set to: 0
  9453                           ;fat16.c: 1277: return 0x00;
  9454                           
  9455                           ; BSR set to: 0
  9456  00F862  0E00               	movlw	0
  9457                           
  9458                           ; BSR set to: 0
  9459  00F864  0012               	return	
  9460  00F866                     l2015:
  9461  00F866                     l14936:
  9462                           
  9463                           ; BSR set to: 0
  9464  00F866  C060  F062         	movff	__get_root@idx,??__get_root
  9465  00F86A  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  9466                           
  9467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9468                           ; Switch size 1, requested type "space"
  9469                           ; Number of cases is 1, Range of values is 0 to 0
  9470                           ; switch strategies available:
  9471                           ; Name         Instructions Cycles
  9472                           ; simple_byte            4     3 (average)
  9473                           ;	Chosen strategy is simple_byte
  9474  00F86E  5163               	movf	(??__get_root+1)& (0+255),w,b
  9475  00F870  0A00               	xorlw	0	; case 0
  9476  00F872  A4D8               	btfss	status,2,c
  9477  00F874  D7F6               	goto	l2036
  9478                           
  9479                           ; BSR set to: 0
  9480                           ; Switch size 1, requested type "space"
  9481                           ; Number of cases is 20, Range of values is 11 to 31
  9482                           ; switch strategies available:
  9483                           ; Name         Instructions Cycles
  9484                           ; simple_byte           61    31 (average)
  9485                           ;	Chosen strategy is simple_byte
  9486  00F876  5162               	movf	??__get_root& (0+255),w,b
  9487  00F878  0A0B               	xorlw	11	; case 11
  9488  00F87A  B4D8               	btfsc	status,2,c
  9489  00F87C  D7CA               	goto	l2016
  9490  00F87E  0A06               	xorlw	6	; case 13
  9491  00F880  B4D8               	btfsc	status,2,c
  9492  00F882  D7C9               	goto	l2017
  9493  00F884  0A03               	xorlw	3	; case 14
  9494  00F886  B4D8               	btfsc	status,2,c
  9495  00F888  D7C8               	goto	l2018
  9496  00F88A  0A01               	xorlw	1	; case 15
  9497  00F88C  B4D8               	btfsc	status,2,c
  9498  00F88E  D7C7               	goto	l2019
  9499  00F890  0A1F               	xorlw	31	; case 16
  9500  00F892  B4D8               	btfsc	status,2,c
  9501  00F894  D7C6               	goto	l2020
  9502  00F896  0A01               	xorlw	1	; case 17
  9503  00F898  B4D8               	btfsc	status,2,c
  9504  00F89A  D7C5               	goto	l2021
  9505  00F89C  0A03               	xorlw	3	; case 18
  9506  00F89E  B4D8               	btfsc	status,2,c
  9507  00F8A0  D7C4               	goto	l2022
  9508  00F8A2  0A01               	xorlw	1	; case 19
  9509  00F8A4  B4D8               	btfsc	status,2,c
  9510  00F8A6  D7C3               	goto	l2023
  9511  00F8A8  0A07               	xorlw	7	; case 20
  9512  00F8AA  B4D8               	btfsc	status,2,c
  9513  00F8AC  D7C2               	goto	l2024
  9514  00F8AE  0A01               	xorlw	1	; case 21
  9515  00F8B0  B4D8               	btfsc	status,2,c
  9516  00F8B2  D7C1               	goto	l2025
  9517  00F8B4  0A03               	xorlw	3	; case 22
  9518  00F8B6  B4D8               	btfsc	status,2,c
  9519  00F8B8  D7C0               	goto	l2026
  9520  00F8BA  0A01               	xorlw	1	; case 23
  9521  00F8BC  B4D8               	btfsc	status,2,c
  9522  00F8BE  D7BF               	goto	l2027
  9523  00F8C0  0A0F               	xorlw	15	; case 24
  9524  00F8C2  B4D8               	btfsc	status,2,c
  9525  00F8C4  D7BE               	goto	l2028
  9526  00F8C6  0A01               	xorlw	1	; case 25
  9527  00F8C8  B4D8               	btfsc	status,2,c
  9528  00F8CA  D7BD               	goto	l2029
  9529  00F8CC  0A03               	xorlw	3	; case 26
  9530  00F8CE  B4D8               	btfsc	status,2,c
  9531  00F8D0  D7BC               	goto	l2030
  9532  00F8D2  0A01               	xorlw	1	; case 27
  9533  00F8D4  B4D8               	btfsc	status,2,c
  9534  00F8D6  D7BB               	goto	l2031
  9535  00F8D8  0A07               	xorlw	7	; case 28
  9536  00F8DA  B4D8               	btfsc	status,2,c
  9537  00F8DC  D7BA               	goto	l2032
  9538  00F8DE  0A01               	xorlw	1	; case 29
  9539  00F8E0  B4D8               	btfsc	status,2,c
  9540  00F8E2  D7B9               	goto	l2033
  9541  00F8E4  0A03               	xorlw	3	; case 30
  9542  00F8E6  B4D8               	btfsc	status,2,c
  9543  00F8E8  D7B8               	goto	l2034
  9544  00F8EA  0A01               	xorlw	1	; case 31
  9545  00F8EC  B4D8               	btfsc	status,2,c
  9546  00F8EE  D7B7               	goto	l2035
  9547  00F8F0  D7B8               	goto	l2036
  9548  00F8F2                     l2037:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  9552                           
  9553                           ; BSR set to: 0
  9554                           
  9555                           ; BSR set to: 0
  9556  00F8F2  0E00               	movlw	0
  9557  00F8F4  0012               	return	
  9558  00F8F6                     __end_of__get_root:
  9559                           	opt stack 0
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           postinc0	equ	0xFEE
  9567                           wreg	equ	0xFE8
  9568                           postdec1	equ	0xFE5
  9569                           fsr1h	equ	0xFE2
  9570                           fsr1l	equ	0xFE1
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577 ;; *************** function __get_mbr *****************
  9578 ;; Defined at:
  9579 ;;		line 1037 in file "fat16.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  idx             2    0[BANK0 ] unsigned int 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      unsigned char 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9596 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;Total ram usage:        4 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:   10
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_fat_get_format_status
  9604 ;;		_fat_format
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text19
  9609  0125D8                     __ptext19:
  9610                           	opt stack 0
  9611  0125D8                     __get_mbr:
  9612                           	opt stack 17
  9613                           
  9614                           ;fat16.c: 1039: switch (idx)
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;incstack = 0
  9618  0125D8  D026               	goto	l1918
  9619  0125DA                     
  9620                           ;fat16.c: 1042: return 0x80;
  9621  0125DA  0E80               	movlw	128
  9622  0125DC  0012               	return	
  9623  0125DE                     
  9624                           ;fat16.c: 1044: return 0;
  9625  0125DE  0E00               	movlw	0
  9626  0125E0  0012               	return	
  9627  0125E2                     
  9628                           ;fat16.c: 1046: return 2;
  9629  0125E2  0E02               	movlw	2
  9630  0125E4  0012               	return	
  9631  0125E6                     
  9632                           ;fat16.c: 1048: return 0;
  9633  0125E6  0E00               	movlw	0
  9634  0125E8  0012               	return	
  9635  0125EA                     
  9636                           ;fat16.c: 1050: return 0x04;
  9637  0125EA  0E04               	movlw	4
  9638  0125EC  0012               	return	
  9639  0125EE                     
  9640                           ;fat16.c: 1052: return 2;
  9641  0125EE  0E02               	movlw	2
  9642  0125F0  0012               	return	
  9643  0125F2                     
  9644                           ;fat16.c: 1054: return 3;
  9645  0125F2  0E03               	movlw	3
  9646  0125F4  0012               	return	
  9647  0125F6                     
  9648                           ;fat16.c: 1056: return 8;
  9649  0125F6  0E08               	movlw	8
  9650  0125F8  0012               	return	
  9651  0125FA                     
  9652                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9653  0125FA  0E01               	movlw	1
  9654  0125FC  0012               	return	
  9655  0125FE                     
  9656                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9657  0125FE  0E00               	movlw	0
  9658  012600  0012               	return	
  9659  012602                     
  9660                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9661  012602  0E00               	movlw	0
  9662  012604  0012               	return	
  9663  012606                     
  9664                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9665  012606  0E00               	movlw	0
  9666  012608  0012               	return	
  9667  01260A                     
  9668                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9669  01260A  0EFF               	movlw	255
  9670  01260C  0012               	return	
  9671  01260E                     
  9672                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9673  01260E  0E1F               	movlw	31
  9674  012610  0012               	return	
  9675  012612                     
  9676                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9677  012612  0E00               	movlw	0
  9678  012614  0012               	return	
  9679  012616                     
  9680                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9681  012616  0E00               	movlw	0
  9682  012618  0012               	return	
  9683  01261A                     
  9684                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9685  01261A  0E55               	movlw	85
  9686  01261C  0012               	return	
  9687  01261E                     
  9688                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9689  01261E  0EAA               	movlw	170
  9690  012620  0012               	return	
  9691  012622                     
  9692                           ;fat16.c: 1078: return 0X00;
  9693  012622  0E00               	movlw	0
  9694                           
  9695                           ;fat16.c: 1079: }
  9696  012624  0012               	return	
  9697  012626                     l1918:
  9698  012626  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9699  01262A  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9700                           
  9701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9702                           ; Switch size 1, requested type "space"
  9703                           ; Number of cases is 1, Range of values is 1 to 1
  9704                           ; switch strategies available:
  9705                           ; Name         Instructions Cycles
  9706                           ; simple_byte            4     3 (average)
  9707                           ;	Chosen strategy is simple_byte
  9708  01262E  0100               	movlb	0	; () banked
  9709  012630  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9710  012632  0A01               	xorlw	1	; case 1
  9711  012634  A4D8               	btfss	status,2,c
  9712  012636  D7F5               	goto	l1938
  9713                           
  9714                           ; BSR set to: 0
  9715                           ; Switch size 1, requested type "space"
  9716                           ; Number of cases is 18, Range of values is 190 to 255
  9717                           ; switch strategies available:
  9718                           ; Name         Instructions Cycles
  9719                           ; simple_byte           55    28 (average)
  9720                           ;	Chosen strategy is simple_byte
  9721  012638  5162               	movf	??__get_mbr& (0+255),w,b
  9722  01263A  0ABE               	xorlw	190	; case 190
  9723  01263C  B4D8               	btfsc	status,2,c
  9724  01263E  D7CD               	goto	l1919
  9725  012640  0A01               	xorlw	1	; case 191
  9726  012642  B4D8               	btfsc	status,2,c
  9727  012644  D7CC               	goto	l1921
  9728  012646  0A7F               	xorlw	127	; case 192
  9729  012648  B4D8               	btfsc	status,2,c
  9730  01264A  D7CB               	goto	l1922
  9731  01264C  0A01               	xorlw	1	; case 193
  9732  01264E  B4D8               	btfsc	status,2,c
  9733  012650  D7CA               	goto	l1923
  9734  012652  0A03               	xorlw	3	; case 194
  9735  012654  B4D8               	btfsc	status,2,c
  9736  012656  D7C9               	goto	l1924
  9737  012658  0A01               	xorlw	1	; case 195
  9738  01265A  B4D8               	btfsc	status,2,c
  9739  01265C  D7C8               	goto	l1925
  9740  01265E  0A07               	xorlw	7	; case 196
  9741  012660  B4D8               	btfsc	status,2,c
  9742  012662  D7C7               	goto	l1926
  9743  012664  0A01               	xorlw	1	; case 197
  9744  012666  B4D8               	btfsc	status,2,c
  9745  012668  D7C6               	goto	l1927
  9746  01266A  0A03               	xorlw	3	; case 198
  9747  01266C  B4D8               	btfsc	status,2,c
  9748  01266E  D7C5               	goto	l1928
  9749  012670  0A01               	xorlw	1	; case 199
  9750  012672  B4D8               	btfsc	status,2,c
  9751  012674  D7C4               	goto	l1929
  9752  012676  0A0F               	xorlw	15	; case 200
  9753  012678  B4D8               	btfsc	status,2,c
  9754  01267A  D7C3               	goto	l1930
  9755  01267C  0A01               	xorlw	1	; case 201
  9756  01267E  B4D8               	btfsc	status,2,c
  9757  012680  D7C2               	goto	l1931
  9758  012682  0A03               	xorlw	3	; case 202
  9759  012684  B4D8               	btfsc	status,2,c
  9760  012686  D7C1               	goto	l1932
  9761  012688  0A01               	xorlw	1	; case 203
  9762  01268A  B4D8               	btfsc	status,2,c
  9763  01268C  D7C0               	goto	l1933
  9764  01268E  0A07               	xorlw	7	; case 204
  9765  012690  B4D8               	btfsc	status,2,c
  9766  012692  D7BF               	goto	l1934
  9767  012694  0A01               	xorlw	1	; case 205
  9768  012696  B4D8               	btfsc	status,2,c
  9769  012698  D7BE               	goto	l1935
  9770  01269A  0A33               	xorlw	51	; case 254
  9771  01269C  B4D8               	btfsc	status,2,c
  9772  01269E  D7BD               	goto	l1936
  9773  0126A0  0A01               	xorlw	1	; case 255
  9774  0126A2  B4D8               	btfsc	status,2,c
  9775  0126A4  D7BC               	goto	l1937
  9776  0126A6  D7BD               	goto	l1938
  9777  0126A8                     __end_of__get_mbr:
  9778                           	opt stack 0
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           postinc0	equ	0xFEE
  9786                           wreg	equ	0xFE8
  9787                           postdec1	equ	0xFE5
  9788                           fsr1h	equ	0xFE2
  9789                           fsr1l	equ	0xFE1
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function __get_fbr *****************
  9797 ;; Defined at:
  9798 ;;		line 1082 in file "fat16.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  idx             2    0[BANK0 ] unsigned int 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;		None
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      unsigned char 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9815 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9816 ;;Total ram usage:        4 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:   10
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_fat_get_format_status
  9823 ;;		_fat_format
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text20
  9828  00E0E2                     __ptext20:
  9829                           	opt stack 0
  9830  00E0E2                     __get_fbr:
  9831                           	opt stack 17
  9832                           
  9833                           ;fat16.c: 1084: switch (idx)
  9834                           
  9835                           ;incstack = 0
  9836  00E0E2  D098               	goto	l1942
  9837  00E0E4                     
  9838                           ;fat16.c: 1087: return 0xEB;
  9839  00E0E4  0EEB               	movlw	235
  9840  00E0E6  0012               	return	
  9841  00E0E8                     
  9842                           ;fat16.c: 1089: return 0x3C;
  9843  00E0E8  0E3C               	movlw	60
  9844  00E0EA  0012               	return	
  9845  00E0EC                     
  9846                           ;fat16.c: 1091: return 0x90;
  9847  00E0EC  0E90               	movlw	144
  9848  00E0EE  0012               	return	
  9849  00E0F0                     
  9850                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  9851  00E0F0  0E0B               	movlw	low STR_7
  9852  00E0F2  6EF6               	movwf	tblptrl,c
  9853  00E0F4                     	if	1	;There is more than 1 active tblptr byte
  9854  00E0F4  0EA3               	movlw	high STR_7
  9855  00E0F6  6EF7               	movwf	tblptrh,c
  9856  00E0F8                     	endif
  9857  00E0F8                     	if	1	;There are 3 active tblptr bytes
  9858  00E0F8  0E00               	movlw	low (STR_7 shr (0+16))
  9859  00E0FA  6EF8               	movwf	tblptru,c
  9860  00E0FC                     	endif
  9861  00E0FC  0008               	tblrd		*
  9862  00E0FE  50F5               	movf	tablat,w,c
  9863  00E100  0012               	return	
  9864  00E102                     
  9865                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  9866  00E102  0E0C               	movlw	low (STR_7+1)
  9867  00E104  6EF6               	movwf	tblptrl,c
  9868  00E106  0EA3               	movlw	high (STR_7+1)
  9869  00E108  6EF7               	movwf	tblptrh,c
  9870  00E10A                     	if	0	;tblptru may be non-zero
  9871  00E10A                     	endif
  9872  00E10A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9873  00E10A  0E00               	movlw	low (__mediumconst shr (0+16))
  9874  00E10C  6EF8               	movwf	tblptru,c
  9875  00E10E                     	endif
  9876  00E10E  0008               	tblrd		*
  9877  00E110  50F5               	movf	tablat,w,c
  9878  00E112  0012               	return	
  9879  00E114                     
  9880                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  9881  00E114  0E0D               	movlw	low (STR_7+2)
  9882  00E116  6EF6               	movwf	tblptrl,c
  9883  00E118  0EA3               	movlw	high (STR_7+2)
  9884  00E11A  6EF7               	movwf	tblptrh,c
  9885  00E11C                     	if	0	;tblptru may be non-zero
  9886  00E11C                     	endif
  9887  00E11C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9888  00E11C  0E00               	movlw	low (__mediumconst shr (0+16))
  9889  00E11E  6EF8               	movwf	tblptru,c
  9890  00E120                     	endif
  9891  00E120  0008               	tblrd		*
  9892  00E122  50F5               	movf	tablat,w,c
  9893  00E124  0012               	return	
  9894  00E126                     
  9895                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  9896  00E126  0E0E               	movlw	low (STR_7+3)
  9897  00E128  6EF6               	movwf	tblptrl,c
  9898  00E12A  0EA3               	movlw	high (STR_7+3)
  9899  00E12C  6EF7               	movwf	tblptrh,c
  9900  00E12E                     	if	0	;tblptru may be non-zero
  9901  00E12E                     	endif
  9902  00E12E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9903  00E12E  0E00               	movlw	low (__mediumconst shr (0+16))
  9904  00E130  6EF8               	movwf	tblptru,c
  9905  00E132                     	endif
  9906  00E132  0008               	tblrd		*
  9907  00E134  50F5               	movf	tablat,w,c
  9908  00E136  0012               	return	
  9909  00E138                     
  9910                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  9911  00E138  0E0F               	movlw	low (STR_7+4)
  9912  00E13A  6EF6               	movwf	tblptrl,c
  9913  00E13C  0EA3               	movlw	high (STR_7+4)
  9914  00E13E  6EF7               	movwf	tblptrh,c
  9915  00E140                     	if	0	;tblptru may be non-zero
  9916  00E140                     	endif
  9917  00E140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9918  00E140  0E00               	movlw	low (__mediumconst shr (0+16))
  9919  00E142  6EF8               	movwf	tblptru,c
  9920  00E144                     	endif
  9921  00E144  0008               	tblrd		*
  9922  00E146  50F5               	movf	tablat,w,c
  9923  00E148  0012               	return	
  9924  00E14A                     
  9925                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  9926  00E14A  0E10               	movlw	low (STR_7+5)
  9927  00E14C  6EF6               	movwf	tblptrl,c
  9928  00E14E  0EA3               	movlw	high (STR_7+5)
  9929  00E150  6EF7               	movwf	tblptrh,c
  9930  00E152                     	if	0	;tblptru may be non-zero
  9931  00E152                     	endif
  9932  00E152                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9933  00E152  0E00               	movlw	low (__mediumconst shr (0+16))
  9934  00E154  6EF8               	movwf	tblptru,c
  9935  00E156                     	endif
  9936  00E156  0008               	tblrd		*
  9937  00E158  50F5               	movf	tablat,w,c
  9938  00E15A  0012               	return	
  9939  00E15C                     
  9940                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  9941  00E15C  0E11               	movlw	low (STR_7+6)
  9942  00E15E  6EF6               	movwf	tblptrl,c
  9943  00E160  0EA3               	movlw	high (STR_7+6)
  9944  00E162  6EF7               	movwf	tblptrh,c
  9945  00E164                     	if	0	;tblptru may be non-zero
  9946  00E164                     	endif
  9947  00E164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9948  00E164  0E00               	movlw	low (__mediumconst shr (0+16))
  9949  00E166  6EF8               	movwf	tblptru,c
  9950  00E168                     	endif
  9951  00E168  0008               	tblrd		*
  9952  00E16A  50F5               	movf	tablat,w,c
  9953  00E16C  0012               	return	
  9954  00E16E                     
  9955                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  9956  00E16E  0E12               	movlw	low (STR_7+7)
  9957  00E170  6EF6               	movwf	tblptrl,c
  9958  00E172  0EA3               	movlw	high (STR_7+7)
  9959  00E174  6EF7               	movwf	tblptrh,c
  9960  00E176                     	if	0	;tblptru may be non-zero
  9961  00E176                     	endif
  9962  00E176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9963  00E176  0E00               	movlw	low (__mediumconst shr (0+16))
  9964  00E178  6EF8               	movwf	tblptru,c
  9965  00E17A                     	endif
  9966  00E17A  0008               	tblrd		*
  9967  00E17C  50F5               	movf	tablat,w,c
  9968  00E17E  0012               	return	
  9969  00E180                     
  9970                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9971  00E180  0E00               	movlw	0
  9972  00E182  0012               	return	
  9973  00E184                     
  9974                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9975  00E184  0E02               	movlw	2
  9976  00E186  0012               	return	
  9977  00E188                     
  9978                           ;fat16.c: 1113: return 1;
  9979  00E188  0E01               	movlw	1
  9980  00E18A  0012               	return	
  9981  00E18C                     
  9982                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9983  00E18C  0E01               	movlw	1
  9984  00E18E  0012               	return	
  9985  00E190                     
  9986                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9987  00E190  0E00               	movlw	0
  9988  00E192  0012               	return	
  9989  00E194                     
  9990                           ;fat16.c: 1119: return 1;
  9991  00E194  0E01               	movlw	1
  9992  00E196  0012               	return	
  9993  00E198                     
  9994                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9995  00E198  0E40               	movlw	64
  9996  00E19A  0012               	return	
  9997  00E19C                     
  9998                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9999  00E19C  0E00               	movlw	0
 10000  00E19E  0012               	return	
 10001  00E1A0                     
 10002                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 10003  00E1A0  0EFF               	movlw	255
 10004  00E1A2  0012               	return	
 10005  00E1A4                     
 10006                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 10007  00E1A4  0E1F               	movlw	31
 10008  00E1A6  0012               	return	
 10009  00E1A8                     
 10010                           ;fat16.c: 1129: return 0XF8;
 10011  00E1A8  0EF8               	movlw	248
 10012  00E1AA  0012               	return	
 10013  00E1AC                     
 10014                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 10015  00E1AC  0E20               	movlw	32
 10016  00E1AE  0012               	return	
 10017  00E1B0                     
 10018                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 10019  00E1B0  0E00               	movlw	0
 10020  00E1B2  0012               	return	
 10021  00E1B4                     
 10022                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 10023  00E1B4  0E3F               	movlw	63
 10024  00E1B6  0012               	return	
 10025  00E1B8                     
 10026                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 10027  00E1B8  0E00               	movlw	0
 10028  00E1BA  0012               	return	
 10029  00E1BC                     
 10030                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 10031  00E1BC  0E10               	movlw	16
 10032  00E1BE  0012               	return	
 10033  00E1C0                     
 10034                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 10035  00E1C0  0E00               	movlw	0
 10036  00E1C2  0012               	return	
 10037  00E1C4                     
 10038                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 10039  00E1C4  0E00               	movlw	0
 10040  00E1C6  0012               	return	
 10041  00E1C8                     
 10042                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 10043  00E1C8  0E00               	movlw	0
 10044  00E1CA  0012               	return	
 10045  00E1CC                     
 10046                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 10047  00E1CC  0E00               	movlw	0
 10048  00E1CE  0012               	return	
 10049  00E1D0                     
 10050                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 10051  00E1D0  0E00               	movlw	0
 10052  00E1D2  0012               	return	
 10053  00E1D4                     
 10054                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 10055  00E1D4  0E01               	movlw	1
 10056  00E1D6  0012               	return	
 10057  00E1D8                     
 10058                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 10059  00E1D8  0E00               	movlw	0
 10060  00E1DA  0012               	return	
 10061  00E1DC                     
 10062                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 10063  00E1DC  0E22               	movlw	34
 10064  00E1DE  0012               	return	
 10065  00E1E0                     
 10066                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 10067  00E1E0  0E00               	movlw	0
 10068  00E1E2  0012               	return	
 10069  00E1E4                     
 10070                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 10071                           
 10072                           ;fat16.c: 1160: case 0x2F:
 10073  00E1E4  0E00               	movlw	0
 10074  00E1E6  0012               	return	
 10075  00E1E8                     
 10076                           ;fat16.c: 1163: return 'F';
 10077  00E1E8  0E46               	movlw	70
 10078  00E1EA  0012               	return	
 10079  00E1EC                     
 10080                           ;fat16.c: 1165: return 'A';
 10081  00E1EC  0E41               	movlw	65
 10082  00E1EE  0012               	return	
 10083  00E1F0                     
 10084                           ;fat16.c: 1167: return 'T';
 10085  00E1F0  0E54               	movlw	84
 10086  00E1F2  0012               	return	
 10087  00E1F4                     
 10088                           ;fat16.c: 1169: return '1';
 10089  00E1F4  0E31               	movlw	49
 10090  00E1F6  0012               	return	
 10091  00E1F8                     
 10092                           ;fat16.c: 1171: return '6';
 10093  00E1F8  0E36               	movlw	54
 10094  00E1FA  0012               	return	
 10095  00E1FC                     
 10096                           ;fat16.c: 1173: return ' ';
 10097  00E1FC  0E20               	movlw	32
 10098  00E1FE  0012               	return	
 10099  00E200                     
 10100                           ;fat16.c: 1175: return ' ';
 10101  00E200  0E20               	movlw	32
 10102  00E202  0012               	return	
 10103  00E204                     
 10104                           ;fat16.c: 1177: return ' ';
 10105  00E204  0E20               	movlw	32
 10106  00E206  0012               	return	
 10107  00E208                     
 10108                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 10109  00E208  0E55               	movlw	85
 10110  00E20A  0012               	return	
 10111  00E20C                     
 10112                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 10113  00E20C  0EAA               	movlw	170
 10114  00E20E  0012               	return	
 10115  00E210                     
 10116                           ;fat16.c: 1183: return 0X00;
 10117  00E210  0E00               	movlw	0
 10118                           
 10119                           ;fat16.c: 1184: }
 10120  00E212  0012               	return	
 10121  00E214                     l1942:
 10122  00E214  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 10123  00E218  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 10124                           
 10125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10126                           ; Switch size 1, requested type "space"
 10127                           ; Number of cases is 2, Range of values is 0 to 1
 10128                           ; switch strategies available:
 10129                           ; Name         Instructions Cycles
 10130                           ; simple_byte            7     4 (average)
 10131                           ;	Chosen strategy is simple_byte
 10132  00E21C  0100               	movlb	0	; () banked
 10133  00E21E  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 10134  00E220  0A00               	xorlw	0	; case 0
 10135  00E222  B4D8               	btfsc	status,2,c
 10136  00E224  D004               	goto	l19352
 10137  00E226  0A01               	xorlw	1	; case 1
 10138  00E228  B4D8               	btfsc	status,2,c
 10139  00E22A  D08D               	goto	l19354
 10140  00E22C  D7F1               	goto	l1992
 10141  00E22E                     l19352:
 10142                           
 10143                           ; BSR set to: 0
 10144                           ; Switch size 1, requested type "space"
 10145                           ; Number of cases is 46, Range of values is 0 to 61
 10146                           ; switch strategies available:
 10147                           ; Name         Instructions Cycles
 10148                           ; simple_byte          139    70 (average)
 10149                           ;	Chosen strategy is simple_byte
 10150  00E22E  5162               	movf	??__get_fbr& (0+255),w,b
 10151  00E230  0A00               	xorlw	0	; case 0
 10152  00E232  B4D8               	btfsc	status,2,c
 10153  00E234  D757               	goto	l1943
 10154  00E236  0A01               	xorlw	1	; case 1
 10155  00E238  B4D8               	btfsc	status,2,c
 10156  00E23A  D756               	goto	l1945
 10157  00E23C  0A03               	xorlw	3	; case 2
 10158  00E23E  B4D8               	btfsc	status,2,c
 10159  00E240  D755               	goto	l1946
 10160  00E242  0A01               	xorlw	1	; case 3
 10161  00E244  B4D8               	btfsc	status,2,c
 10162  00E246  D754               	goto	l1947
 10163  00E248  0A07               	xorlw	7	; case 4
 10164  00E24A  B4D8               	btfsc	status,2,c
 10165  00E24C  D75A               	goto	l1948
 10166  00E24E  0A01               	xorlw	1	; case 5
 10167  00E250  B4D8               	btfsc	status,2,c
 10168  00E252  D760               	goto	l1949
 10169  00E254  0A03               	xorlw	3	; case 6
 10170  00E256  B4D8               	btfsc	status,2,c
 10171  00E258  D766               	goto	l1950
 10172  00E25A  0A01               	xorlw	1	; case 7
 10173  00E25C  B4D8               	btfsc	status,2,c
 10174  00E25E  D76C               	goto	l1951
 10175  00E260  0A0F               	xorlw	15	; case 8
 10176  00E262  B4D8               	btfsc	status,2,c
 10177  00E264  D772               	goto	l1952
 10178  00E266  0A01               	xorlw	1	; case 9
 10179  00E268  B4D8               	btfsc	status,2,c
 10180  00E26A  D778               	goto	l1953
 10181  00E26C  0A03               	xorlw	3	; case 10
 10182  00E26E  B4D8               	btfsc	status,2,c
 10183  00E270  D77E               	goto	l1954
 10184  00E272  0A01               	xorlw	1	; case 11
 10185  00E274  B4D8               	btfsc	status,2,c
 10186  00E276  D784               	goto	l1955
 10187  00E278  0A07               	xorlw	7	; case 12
 10188  00E27A  B4D8               	btfsc	status,2,c
 10189  00E27C  D783               	goto	l1956
 10190  00E27E  0A01               	xorlw	1	; case 13
 10191  00E280  B4D8               	btfsc	status,2,c
 10192  00E282  D782               	goto	l1957
 10193  00E284  0A03               	xorlw	3	; case 14
 10194  00E286  B4D8               	btfsc	status,2,c
 10195  00E288  D781               	goto	l1958
 10196  00E28A  0A01               	xorlw	1	; case 15
 10197  00E28C  B4D8               	btfsc	status,2,c
 10198  00E28E  D780               	goto	l1959
 10199  00E290  0A1F               	xorlw	31	; case 16
 10200  00E292  B4D8               	btfsc	status,2,c
 10201  00E294  D77F               	goto	l1960
 10202  00E296  0A01               	xorlw	1	; case 17
 10203  00E298  B4D8               	btfsc	status,2,c
 10204  00E29A  D77E               	goto	l1961
 10205  00E29C  0A03               	xorlw	3	; case 18
 10206  00E29E  B4D8               	btfsc	status,2,c
 10207  00E2A0  D77D               	goto	l1962
 10208  00E2A2  0A01               	xorlw	1	; case 19
 10209  00E2A4  B4D8               	btfsc	status,2,c
 10210  00E2A6  D77C               	goto	l1963
 10211  00E2A8  0A07               	xorlw	7	; case 20
 10212  00E2AA  B4D8               	btfsc	status,2,c
 10213  00E2AC  D77B               	goto	l1964
 10214  00E2AE  0A01               	xorlw	1	; case 21
 10215  00E2B0  B4D8               	btfsc	status,2,c
 10216  00E2B2  D77A               	goto	l1965
 10217  00E2B4  0A03               	xorlw	3	; case 22
 10218  00E2B6  B4D8               	btfsc	status,2,c
 10219  00E2B8  D779               	goto	l1966
 10220  00E2BA  0A01               	xorlw	1	; case 23
 10221  00E2BC  B4D8               	btfsc	status,2,c
 10222  00E2BE  D778               	goto	l1967
 10223  00E2C0  0A0F               	xorlw	15	; case 24
 10224  00E2C2  B4D8               	btfsc	status,2,c
 10225  00E2C4  D777               	goto	l1968
 10226  00E2C6  0A01               	xorlw	1	; case 25
 10227  00E2C8  B4D8               	btfsc	status,2,c
 10228  00E2CA  D776               	goto	l1969
 10229  00E2CC  0A03               	xorlw	3	; case 26
 10230  00E2CE  B4D8               	btfsc	status,2,c
 10231  00E2D0  D775               	goto	l1970
 10232  00E2D2  0A01               	xorlw	1	; case 27
 10233  00E2D4  B4D8               	btfsc	status,2,c
 10234  00E2D6  D774               	goto	l1971
 10235  00E2D8  0A07               	xorlw	7	; case 28
 10236  00E2DA  B4D8               	btfsc	status,2,c
 10237  00E2DC  D773               	goto	l1972
 10238  00E2DE  0A01               	xorlw	1	; case 29
 10239  00E2E0  B4D8               	btfsc	status,2,c
 10240  00E2E2  D772               	goto	l1973
 10241  00E2E4  0A03               	xorlw	3	; case 30
 10242  00E2E6  B4D8               	btfsc	status,2,c
 10243  00E2E8  D771               	goto	l1974
 10244  00E2EA  0A01               	xorlw	1	; case 31
 10245  00E2EC  B4D8               	btfsc	status,2,c
 10246  00E2EE  D770               	goto	l1975
 10247  00E2F0  0A37               	xorlw	55	; case 40
 10248  00E2F2  B4D8               	btfsc	status,2,c
 10249  00E2F4  D76F               	goto	l1976
 10250  00E2F6  0A01               	xorlw	1	; case 41
 10251  00E2F8  B4D8               	btfsc	status,2,c
 10252  00E2FA  D76E               	goto	l1977
 10253  00E2FC  0A05               	xorlw	5	; case 44
 10254  00E2FE  B4D8               	btfsc	status,2,c
 10255  00E300  D76D               	goto	l1978
 10256  00E302  0A01               	xorlw	1	; case 45
 10257  00E304  B4D8               	btfsc	status,2,c
 10258  00E306  D76C               	goto	l1979
 10259  00E308  0A03               	xorlw	3	; case 46
 10260  00E30A  B4D8               	btfsc	status,2,c
 10261  00E30C  D76B               	goto	l1980
 10262  00E30E  0A01               	xorlw	1	; case 47
 10263  00E310  B4D8               	btfsc	status,2,c
 10264  00E312  D768               	goto	l1980
 10265  00E314  0A19               	xorlw	25	; case 54
 10266  00E316  B4D8               	btfsc	status,2,c
 10267  00E318  D767               	goto	l1982
 10268  00E31A  0A01               	xorlw	1	; case 55
 10269  00E31C  B4D8               	btfsc	status,2,c
 10270  00E31E  D766               	goto	l1983
 10271  00E320  0A0F               	xorlw	15	; case 56
 10272  00E322  B4D8               	btfsc	status,2,c
 10273  00E324  D765               	goto	l1984
 10274  00E326  0A01               	xorlw	1	; case 57
 10275  00E328  B4D8               	btfsc	status,2,c
 10276  00E32A  D764               	goto	l1985
 10277  00E32C  0A03               	xorlw	3	; case 58
 10278  00E32E  B4D8               	btfsc	status,2,c
 10279  00E330  D763               	goto	l1986
 10280  00E332  0A01               	xorlw	1	; case 59
 10281  00E334  B4D8               	btfsc	status,2,c
 10282  00E336  D762               	goto	l1987
 10283  00E338  0A07               	xorlw	7	; case 60
 10284  00E33A  B4D8               	btfsc	status,2,c
 10285  00E33C  D761               	goto	l1988
 10286  00E33E  0A01               	xorlw	1	; case 61
 10287  00E340  B4D8               	btfsc	status,2,c
 10288  00E342  D760               	goto	l1989
 10289  00E344  D765               	goto	l1992
 10290  00E346                     l19354:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ; Switch size 1, requested type "space"
 10294                           ; Number of cases is 2, Range of values is 254 to 255
 10295                           ; switch strategies available:
 10296                           ; Name         Instructions Cycles
 10297                           ; simple_byte            7     4 (average)
 10298                           ;	Chosen strategy is simple_byte
 10299  00E346  5162               	movf	??__get_fbr& (0+255),w,b
 10300  00E348  0AFE               	xorlw	254	; case 254
 10301  00E34A  B4D8               	btfsc	status,2,c
 10302  00E34C  D75D               	goto	l1990
 10303  00E34E  0A01               	xorlw	1	; case 255
 10304  00E350  B4D8               	btfsc	status,2,c
 10305  00E352  D75C               	goto	l1991
 10306  00E354  D75D               	goto	l1992
 10307  00E356                     __end_of__get_fbr:
 10308                           	opt stack 0
 10309                           tblptru	equ	0xFF8
 10310                           tblptrh	equ	0xFF7
 10311                           tblptrl	equ	0xFF6
 10312                           tablat	equ	0xFF5
 10313                           prodh	equ	0xFF4
 10314                           prodl	equ	0xFF3
 10315                           postinc0	equ	0xFEE
 10316                           wreg	equ	0xFE8
 10317                           postdec1	equ	0xFE5
 10318                           fsr1h	equ	0xFE2
 10319                           fsr1l	equ	0xFE1
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           fsr2h	equ	0xFDA
 10323                           fsr2l	equ	0xFD9
 10324                           status	equ	0xFD8
 10325                           
 10326 ;; *************** function __get_fat *****************
 10327 ;; Defined at:
 10328 ;;		line 1187 in file "fat16.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  idx             2    0[BANK0 ] unsigned int 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10345 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10346 ;;Total ram usage:        4 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:   10
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_fat_format
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text21
 10357  0146F6                     __ptext21:
 10358                           	opt stack 0
 10359  0146F6                     __get_fat:
 10360                           	opt stack 17
 10361                           
 10362                           ;fat16.c: 1189: switch (idx)
 10363                           
 10364                           ;incstack = 0
 10365  0146F6  D00E               	goto	l1996
 10366  0146F8                     
 10367                           ;fat16.c: 1193: return 0xF8;
 10368  0146F8  0EF8               	movlw	248
 10369  0146FA  0012               	return	
 10370  0146FC                     
 10371                           ;fat16.c: 1195: return 0xFF;
 10372  0146FC  0EFF               	movlw	255
 10373  0146FE  0012               	return	
 10374  014700                     
 10375                           ;fat16.c: 1197: return 0xFF;
 10376  014700  0EFF               	movlw	255
 10377  014702  0012               	return	
 10378  014704                     
 10379                           ;fat16.c: 1199: return 0xFF;
 10380  014704  0EFF               	movlw	255
 10381  014706  0012               	return	
 10382  014708                     
 10383                           ;fat16.c: 1202: return 0xFF;
 10384  014708  0EFF               	movlw	255
 10385  01470A  0012               	return	
 10386  01470C                     
 10387                           ;fat16.c: 1204: return 0xFF;
 10388  01470C  0EFF               	movlw	255
 10389  01470E  0012               	return	
 10390  014710                     
 10391                           ;fat16.c: 1206: return 0X00;
 10392  014710  0E00               	movlw	0
 10393                           
 10394                           ;fat16.c: 1207: }
 10395  014712  0012               	return	
 10396  014714                     l1996:
 10397  014714  C060  F062         	movff	__get_fat@idx,??__get_fat
 10398  014718  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 10399                           
 10400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10401                           ; Switch size 1, requested type "space"
 10402                           ; Number of cases is 1, Range of values is 0 to 0
 10403                           ; switch strategies available:
 10404                           ; Name         Instructions Cycles
 10405                           ; simple_byte            4     3 (average)
 10406                           ;	Chosen strategy is simple_byte
 10407  01471C  0100               	movlb	0	; () banked
 10408  01471E  5163               	movf	(??__get_fat+1)& (0+255),w,b
 10409  014720  0A00               	xorlw	0	; case 0
 10410  014722  A4D8               	btfss	status,2,c
 10411  014724  D7F5               	goto	l2004
 10412                           
 10413                           ; BSR set to: 0
 10414                           ; Switch size 1, requested type "space"
 10415                           ; Number of cases is 6, Range of values is 0 to 5
 10416                           ; switch strategies available:
 10417                           ; Name         Instructions Cycles
 10418                           ; simple_byte           19    10 (average)
 10419                           ;	Chosen strategy is simple_byte
 10420  014726  5162               	movf	??__get_fat& (0+255),w,b
 10421  014728  0A00               	xorlw	0	; case 0
 10422  01472A  B4D8               	btfsc	status,2,c
 10423  01472C  D7E5               	goto	l1997
 10424  01472E  0A01               	xorlw	1	; case 1
 10425  014730  B4D8               	btfsc	status,2,c
 10426  014732  D7E4               	goto	l1999
 10427  014734  0A03               	xorlw	3	; case 2
 10428  014736  B4D8               	btfsc	status,2,c
 10429  014738  D7E3               	goto	l2000
 10430  01473A  0A01               	xorlw	1	; case 3
 10431  01473C  B4D8               	btfsc	status,2,c
 10432  01473E  D7E2               	goto	l2001
 10433  014740  0A07               	xorlw	7	; case 4
 10434  014742  B4D8               	btfsc	status,2,c
 10435  014744  D7E1               	goto	l2002
 10436  014746  0A01               	xorlw	1	; case 5
 10437  014748  B4D8               	btfsc	status,2,c
 10438  01474A  D7E0               	goto	l2003
 10439  01474C  D7E1               	goto	l2004
 10440  01474E                     __end_of__get_fat:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           postinc0	equ	0xFEE
 10449                           wreg	equ	0xFE8
 10450                           postdec1	equ	0xFE5
 10451                           fsr1h	equ	0xFE2
 10452                           fsr1l	equ	0xFE1
 10453                           indf2	equ	0xFDF
 10454                           postinc2	equ	0xFDE
 10455                           fsr2h	equ	0xFDA
 10456                           fsr2l	equ	0xFD9
 10457                           status	equ	0xFD8
 10458                           
 10459 ;; *************** function __get_data *****************
 10460 ;; Defined at:
 10461 ;;		line 1283 in file "fat16.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  idx             2    0[BANK0 ] unsigned int 
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      unsigned char 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10479 ;;Total ram usage:        2 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:   10
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_fat_format
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text22
 10490  0154E8                     __ptext22:
 10491                           	opt stack 0
 10492  0154E8                     __get_data:
 10493                           	opt stack 17
 10494                           
 10495                           ;fat16.c: 1285: if(idx < 12)
 10496                           
 10497                           ;incstack = 0
 10498  0154E8  0100               	movlb	0	; () banked
 10499  0154EA  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 10500  0154EC  E110               	bnz	l14954
 10501  0154EE  0E0C               	movlw	12
 10502  0154F0  5D60               	subwf	__get_data@idx& (0+255),w,b
 10503  0154F2  B0D8               	btfsc	status,0,c
 10504  0154F4  D00C               	goto	l2040
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 10508  0154F6  0EE9               	movlw	low STR_18
 10509  0154F8  2560               	addwf	__get_data@idx& (0+255),w,b
 10510  0154FA  6EF6               	movwf	tblptrl,c
 10511  0154FC  0EA2               	movlw	high STR_18
 10512  0154FE  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 10513  015500  6EF7               	movwf	tblptrh,c
 10514  015502                     	if	1	;There are 3 active tblptr bytes
 10515  015502  6AF8               	clrf	tblptru,c
 10516  015504  0E00               	movlw	low (__mediumconst shr (0+16))
 10517  015506  22F8               	addwfc	tblptru,f,c
 10518  015508                     	endif
 10519  015508  0008               	tblrd		*
 10520  01550A  50F5               	movf	tablat,w,c
 10521                           
 10522                           ; BSR set to: 0
 10523  01550C  0012               	return	
 10524  01550E                     l2040:
 10525  01550E                     l14954:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 10529  01550E  0E00               	movlw	0
 10530  015510  0012               	return	
 10531  015512                     __end_of__get_data:
 10532                           	opt stack 0
 10533                           tblptru	equ	0xFF8
 10534                           tblptrh	equ	0xFF7
 10535                           tblptrl	equ	0xFF6
 10536                           tablat	equ	0xFF5
 10537                           prodh	equ	0xFF4
 10538                           prodl	equ	0xFF3
 10539                           postinc0	equ	0xFEE
 10540                           wreg	equ	0xFE8
 10541                           postdec1	equ	0xFE5
 10542                           fsr1h	equ	0xFE2
 10543                           fsr1l	equ	0xFE1
 10544                           indf2	equ	0xFDF
 10545                           postinc2	equ	0xFDE
 10546                           fsr2h	equ	0xFDA
 10547                           fsr2l	equ	0xFD9
 10548                           status	equ	0xFD8
 10549                           
 10550 ;; *************** function _encoder_init *****************
 10551 ;; Defined at:
 10552 ;;		line 92 in file "encoder.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  1    wreg      void 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10570 ;;Total ram usage:        0 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:   10
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_system_init
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           	psect	text23
 10581  01567C                     __ptext23:
 10582                           	opt stack 0
 10583  01567C                     _encoder_init:
 10584                           	opt stack 19
 10585                           
 10586                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;incstack = 0
 10590  01567C  5084               	movf	3972,w,c	;volatile
 10591  01567E  0B07               	andlw	7
 10592  015680  0101               	movlb	1	; () banked
 10593  015682  6F54               	movwf	_enc1& (0+255),b
 10594                           
 10595                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
 10596  015684  5080               	movf	3968,w,c	;volatile
 10597  015686  0B07               	andlw	7
 10598  015688  6F53               	movwf	_enc2& (0+255),b
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;encoder.c: 96: os.encoder1Count = 0;
 10602  01568A  0E00               	movlw	0
 10603  01568C  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 10604                           
 10605                           ; BSR set to: 1
 10606                           ;encoder.c: 97: os.encoder2Count = 0;
 10607  01568E  0E00               	movlw	0
 10608  015690  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 10609                           
 10610                           ; BSR set to: 1
 10611                           ;encoder.c: 98: os.button1 = 0;
 10612  015692  0E00               	movlw	0
 10613  015694  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 10614                           
 10615                           ; BSR set to: 1
 10616                           ;encoder.c: 99: os.button2 = 0;
 10617  015696  0E00               	movlw	0
 10618  015698  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 10619                           
 10620                           ; BSR set to: 1
 10621                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10622  01569A  0E01               	movlw	1
 10623  01569C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 10624                           
 10625                           ; BSR set to: 1
 10626  01569E  0012               	return		;funcret
 10627  0156A0                     __end_of_encoder_init:
 10628                           	opt stack 0
 10629                           tblptru	equ	0xFF8
 10630                           tblptrh	equ	0xFF7
 10631                           tblptrl	equ	0xFF6
 10632                           tablat	equ	0xFF5
 10633                           prodh	equ	0xFF4
 10634                           prodl	equ	0xFF3
 10635                           postinc0	equ	0xFEE
 10636                           wreg	equ	0xFE8
 10637                           postdec1	equ	0xFE5
 10638                           fsr1h	equ	0xFE2
 10639                           fsr1l	equ	0xFE1
 10640                           indf2	equ	0xFDF
 10641                           postinc2	equ	0xFDE
 10642                           fsr2h	equ	0xFDA
 10643                           fsr2l	equ	0xFD9
 10644                           status	equ	0xFD8
 10645                           
 10646 ;; *************** function _display_update *****************
 10647 ;; Defined at:
 10648 ;;		line 618 in file "display.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;  line            1   16[BANK0 ] unsigned char 
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10666 ;;Total ram usage:        1 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:   14
 10669 ;; This function calls:
 10670 ;;		_i2c_display_cursor
 10671 ;;		_i2c_display_write_fixed
 10672 ;; This function is called by:
 10673 ;;		_main
 10674 ;;		_system_init
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text24
 10679  0151A0                     __ptext24:
 10680                           	opt stack 0
 10681  0151A0                     _display_update:
 10682                           	opt stack 15
 10683                           
 10684                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
 10685                           
 10686                           ; BSR set to: 1
 10687                           ;incstack = 0
 10688  0151A0  0E00               	movlw	0
 10689  0151A2  0100               	movlb	0	; () banked
 10690  0151A4  6F70               	movwf	display_update@line& (0+255),b
 10691  0151A6                     l16738:
 10692                           
 10693                           ; BSR set to: 0
 10694  0151A6  0E03               	movlw	3
 10695  0151A8  6570               	cpfsgt	display_update@line& (0+255),b
 10696  0151AA  D001               	goto	l1485
 10697  0151AC  0012               	return	
 10698  0151AE                     l1485:
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
 10702                           
 10703                           ; BSR set to: 0
 10704  0151AE  0E00               	movlw	0
 10705  0151B0  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10706  0151B2  5170               	movf	display_update@line& (0+255),w,b
 10707  0151B4  EC74  F0AB         	call	_i2c_display_cursor
 10708                           
 10709                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
 10710  0151B8  0100               	movlb	0	; () banked
 10711  0151BA  5170               	movf	display_update@line& (0+255),w,b
 10712  0151BC  0D14               	mullw	20
 10713  0151BE  0E34               	movlw	low _display_content
 10714  0151C0  24F3               	addwf	prodl,w,c
 10715  0151C2  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10716  0151C4  0E02               	movlw	high _display_content
 10717  0151C6  20F4               	addwfc	prodh,w,c
 10718  0151C8  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10719  0151CA  0E14               	movlw	20
 10720  0151CC  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10721  0151CE  ECD9  F0A4         	call	_i2c_display_write_fixed	;wreg free
 10722  0151D2  0100               	movlb	0	; () banked
 10723  0151D4  2B70               	incf	display_update@line& (0+255),f,b
 10724  0151D6  D7E7               	goto	l16738
 10725  0151D8                     __end_of_display_update:
 10726                           	opt stack 0
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           postinc0	equ	0xFEE
 10734                           wreg	equ	0xFE8
 10735                           postdec1	equ	0xFE5
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           fsr2h	equ	0xFDA
 10741                           fsr2l	equ	0xFD9
 10742                           status	equ	0xFD8
 10743                           
 10744 ;; *************** function _i2c_display_write_fixed *****************
 10745 ;; Defined at:
 10746 ;;		line 419 in file "i2c.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10749 ;;		 -> display_content(80), 
 10750 ;;  length          1    7[BANK0 ] unsigned char 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  pos             1    8[BANK0 ] unsigned char 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;Total ram usage:        4 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:   11
 10769 ;; This function calls:
 10770 ;;		__i2c_send
 10771 ;;		__i2c_start
 10772 ;;		__i2c_stop
 10773 ;;		__i2c_wait_idle
 10774 ;; This function is called by:
 10775 ;;		_display_update
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text25
 10780  0149B2                     __ptext25:
 10781                           	opt stack 0
 10782  0149B2                     _i2c_display_write_fixed:
 10783                           	opt stack 17
 10784                           
 10785                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;incstack = 0
 10789  0149B2  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 10790                           
 10791                           ;i2c.c: 427: _i2c_start();
 10792  0149B6  ECA9  F0AC         	call	__i2c_start	;wreg free
 10793                           
 10794                           ;i2c.c: 428: _i2c_wait_idle();
 10795  0149BA  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 10796                           
 10797                           ;i2c.c: 429: _i2c_send(0b01111000);
 10798  0149BE  0E78               	movlw	120
 10799  0149C0  EC96  F0AC         	call	__i2c_send
 10800                           
 10801                           ;i2c.c: 430: _i2c_wait_idle();
 10802  0149C4  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 10803                           
 10804                           ;i2c.c: 431: _i2c_send(0b01000000);
 10805  0149C8  0E40               	movlw	64
 10806  0149CA  EC96  F0AC         	call	__i2c_send
 10807                           
 10808                           ;i2c.c: 432: _i2c_wait_idle();
 10809  0149CE  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 10810                           
 10811                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
 10812  0149D2  0E00               	movlw	0
 10813  0149D4  0100               	movlb	0	; () banked
 10814  0149D6  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10815  0149D8  D00F               	goto	l1243
 10816  0149DA                     
 10817                           ; BSR set to: 0
 10818                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
 10819                           
 10820                           ; BSR set to: 0
 10821  0149DA  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10822  0149DC  0D01               	mullw	1
 10823  0149DE  50F3               	movf	prodl,w,c
 10824  0149E0  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10825  0149E2  6ED9               	movwf	fsr2l,c
 10826  0149E4  50F4               	movf	prodh,w,c
 10827  0149E6  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10828  0149E8  6EDA               	movwf	fsr2h,c
 10829  0149EA  50DF               	movf	indf2,w,c
 10830  0149EC  EC96  F0AC         	call	__i2c_send
 10831                           
 10832                           ;i2c.c: 438: _i2c_wait_idle();
 10833  0149F0  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 10834  0149F4  0100               	movlb	0	; () banked
 10835  0149F6  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10836  0149F8                     l1243:
 10837                           
 10838                           ; BSR set to: 0
 10839                           
 10840                           ; BSR set to: 0
 10841  0149F8  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10842  0149FA  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10843  0149FC  A0D8               	btfss	status,0,c
 10844  0149FE  D7ED               	goto	l1244
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
 10848                           
 10849                           ; BSR set to: 0
 10850  014A00  ECA5  F0AC         	call	__i2c_stop	;wreg free
 10851  014A04  0012               	return		;funcret
 10852  014A06                     __end_of_i2c_display_write_fixed:
 10853                           	opt stack 0
 10854                           tblptru	equ	0xFF8
 10855                           tblptrh	equ	0xFF7
 10856                           tblptrl	equ	0xFF6
 10857                           tablat	equ	0xFF5
 10858                           prodh	equ	0xFF4
 10859                           prodl	equ	0xFF3
 10860                           postinc0	equ	0xFEE
 10861                           wreg	equ	0xFE8
 10862                           postdec1	equ	0xFE5
 10863                           fsr1h	equ	0xFE2
 10864                           fsr1l	equ	0xFE1
 10865                           indf2	equ	0xFDF
 10866                           postinc2	equ	0xFDE
 10867                           fsr2h	equ	0xFDA
 10868                           fsr2l	equ	0xFD9
 10869                           status	equ	0xFD8
 10870                           
 10871 ;; *************** function _i2c_display_cursor *****************
 10872 ;; Defined at:
 10873 ;;		line 379 in file "i2c.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  line            1    wreg     unsigned char 
 10876 ;;  position        1   13[BANK0 ] unsigned char 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  line            1   14[BANK0 ] unsigned char 
 10879 ;;  address         1   15[BANK0 ] unsigned char 
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      void 
 10882 ;; Registers used:
 10883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10889 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10892 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10893 ;;Total ram usage:        3 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:   13
 10896 ;; This function calls:
 10897 ;;		__ic2_display_set_ddram_address
 10898 ;; This function is called by:
 10899 ;;		_display_update
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text26
 10904  0156E8                     __ptext26:
 10905                           	opt stack 0
 10906  0156E8                     _i2c_display_cursor:
 10907                           	opt stack 15
 10908                           
 10909                           ;incstack = 0
 10910                           ;i2c_display_cursor@line stored from wreg
 10911  0156E8  0100               	movlb	0	; () banked
 10912  0156EA  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10913                           
 10914                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
 10915  0156EC  0E03               	movlw	3
 10916  0156EE  0100               	movlb	0	; () banked
 10917  0156F0  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10918                           
 10919                           ;i2c.c: 385: address = line<<5;
 10920  0156F2  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10921  0156F4  46E8               	rlncf	wreg,f,c
 10922  0156F6  0BE0               	andlw	224
 10923  0156F8  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10924                           
 10925                           ;i2c.c: 386: position &= 0b11111;
 10926  0156FA  0E1F               	movlw	31
 10927  0156FC  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10928                           
 10929                           ;i2c.c: 387: address |= position;
 10930  0156FE  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10931  015700  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
 10935  015702  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10936  015704  EC50  F0AB         	call	__ic2_display_set_ddram_address
 10937  015708  0012               	return		;funcret
 10938  01570A                     __end_of_i2c_display_cursor:
 10939                           	opt stack 0
 10940                           tblptru	equ	0xFF8
 10941                           tblptrh	equ	0xFF7
 10942                           tblptrl	equ	0xFF6
 10943                           tablat	equ	0xFF5
 10944                           prodh	equ	0xFF4
 10945                           prodl	equ	0xFF3
 10946                           postinc0	equ	0xFEE
 10947                           wreg	equ	0xFE8
 10948                           postdec1	equ	0xFE5
 10949                           fsr1h	equ	0xFE2
 10950                           fsr1l	equ	0xFE1
 10951                           indf2	equ	0xFDF
 10952                           postinc2	equ	0xFDE
 10953                           fsr2h	equ	0xFDA
 10954                           fsr2l	equ	0xFD9
 10955                           status	equ	0xFD8
 10956                           
 10957 ;; *************** function __ic2_display_set_ddram_address *****************
 10958 ;; Defined at:
 10959 ;;		line 350 in file "i2c.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  address         1    wreg     unsigned char 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  address         1   10[BANK0 ] unsigned char 
 10964 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10975 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10977 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10978 ;;Total ram usage:        3 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:   12
 10981 ;; This function calls:
 10982 ;;		__i2c_write
 10983 ;; This function is called by:
 10984 ;;		_i2c_display_cursor
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text27
 10989  0156A0                     __ptext27:
 10990                           	opt stack 0
 10991  0156A0                     __ic2_display_set_ddram_address:
 10992                           	opt stack 15
 10993                           
 10994                           ;incstack = 0
 10995                           ;__ic2_display_set_ddram_address@address stored from wreg
 10996  0156A0  0100               	movlb	0	; () banked
 10997  0156A2  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10998                           
 10999                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
 11000  0156A4  0E00               	movlw	0
 11001  0156A6  0100               	movlb	0	; () banked
 11002  0156A8  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
 11006  0156AA  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 11007  0156AC  0980               	iorlw	128
 11008  0156AE  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
 11012  0156B0  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 11013  0156B2  6F65               	movwf	__i2c_write@data& (0+255),b
 11014  0156B4  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 11015  0156B6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11016  0156B8  0E02               	movlw	2
 11017  0156BA  6F67               	movwf	__i2c_write@length& (0+255),b
 11018  0156BC  0E78               	movlw	120
 11019  0156BE  ECFA  F0A5         	call	__i2c_write
 11020  0156C2  0012               	return		;funcret
 11021  0156C4                     __end_of__ic2_display_set_ddram_address:
 11022                           	opt stack 0
 11023                           tblptru	equ	0xFF8
 11024                           tblptrh	equ	0xFF7
 11025                           tblptrl	equ	0xFF6
 11026                           tablat	equ	0xFF5
 11027                           prodh	equ	0xFF4
 11028                           prodl	equ	0xFF3
 11029                           postinc0	equ	0xFEE
 11030                           wreg	equ	0xFE8
 11031                           postdec1	equ	0xFE5
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           indf2	equ	0xFDF
 11035                           postinc2	equ	0xFDE
 11036                           fsr2h	equ	0xFDA
 11037                           fsr2l	equ	0xFD9
 11038                           status	equ	0xFD8
 11039                           
 11040 ;; *************** function _display_init *****************
 11041 ;; Defined at:
 11042 ;;		line 256 in file "display.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      void 
 11049 ;; Registers used:
 11050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11060 ;;Total ram usage:        0 bytes
 11061 ;; Hardware stack levels used:    1
 11062 ;; Hardware stack levels required when called:   15
 11063 ;; This function calls:
 11064 ;;		__display_start
 11065 ;;		_i2c_display_init
 11066 ;;		_i2c_display_program_custom_character
 11067 ;; This function is called by:
 11068 ;;		_system_init
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           	psect	text28
 11073  0150F4                     __ptext28:
 11074                           	opt stack 0
 11075  0150F4                     _display_init:
 11076                           	opt stack 14
 11077                           
 11078                           ;display.c: 258: i2c_display_init();
 11079                           
 11080                           ;incstack = 0
 11081  0150F4  ECD2  F0A5         	call	_i2c_display_init	;wreg free
 11082                           
 11083                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 11084  0150F8  0ED5               	movlw	low _bit_pattern_verticalbar
 11085  0150FA  0100               	movlb	0	; () banked
 11086  0150FC  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11087  0150FE  0EA2               	movlw	high _bit_pattern_verticalbar
 11088  015100  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11089  015102  0E00               	movlw	0
 11090  015104  EC94  F09D         	call	_i2c_display_program_custom_character
 11091                           
 11092                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 11093  015108  0ECD               	movlw	low _bit_pattern_degree
 11094  01510A  0100               	movlb	0	; () banked
 11095  01510C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11096  01510E  0EA2               	movlw	high _bit_pattern_degree
 11097  015110  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11098  015112  0E01               	movlw	1
 11099  015114  EC94  F09D         	call	_i2c_display_program_custom_character
 11100                           
 11101                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 11102  015118  0EC5               	movlw	low _bit_pattern_ae
 11103  01511A  0100               	movlb	0	; () banked
 11104  01511C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11105  01511E  0EA2               	movlw	high _bit_pattern_ae
 11106  015120  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11107  015122  0E02               	movlw	2
 11108  015124  EC94  F09D         	call	_i2c_display_program_custom_character
 11109                           
 11110                           ;display.c: 263: _display_start();
 11111  015128  EC5A  F096         	call	__display_start	;wreg free
 11112  01512C  0012               	return		;funcret
 11113  01512E                     __end_of_display_init:
 11114                           	opt stack 0
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           postinc0	equ	0xFEE
 11122                           wreg	equ	0xFE8
 11123                           postdec1	equ	0xFE5
 11124                           fsr1h	equ	0xFE2
 11125                           fsr1l	equ	0xFE1
 11126                           indf2	equ	0xFDF
 11127                           postinc2	equ	0xFDE
 11128                           fsr2h	equ	0xFDA
 11129                           fsr2l	equ	0xFD9
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function _i2c_display_program_custom_character *****************
 11133 ;; Defined at:
 11134 ;;		line 444 in file "i2c.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  address         1    wreg     unsigned char 
 11137 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 11138 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  address         1   31[BANK0 ] unsigned char 
 11141 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 11142 ;;  cntr            1   32[BANK0 ] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11153 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11155 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11156 ;;Total ram usage:       19 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:   13
 11159 ;; This function calls:
 11160 ;;		__i2c_write
 11161 ;;		__ic2_display_set_cgram_address
 11162 ;; This function is called by:
 11163 ;;		_display_init
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text29
 11168  013B28                     __ptext29:
 11169                           	opt stack 0
 11170  013B28                     _i2c_display_program_custom_character:
 11171                           	opt stack 15
 11172                           
 11173                           ;incstack = 0
 11174                           ;i2c_display_program_custom_character@address stored from wreg
 11175  013B28  0100               	movlb	0	; () banked
 11176  013B2A  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 11177                           
 11178                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 11179  013B2C  0100               	movlb	0	; () banked
 11180  013B2E  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 11181  013B30  42E8               	rrncf	wreg,f,c
 11182  013B32  0BF8               	andlw	248
 11183  013B34  EC89  F0AA         	call	__ic2_display_set_cgram_address
 11184                           
 11185                           ;i2c.c: 453: data_array[0] = 0b01000000;
 11186  013B38  0E40               	movlw	64
 11187  013B3A  0100               	movlb	0	; () banked
 11188  013B3C  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 11192  013B3E  0E00               	movlw	0
 11193  013B40  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 11194  013B42                     l15404:
 11195                           
 11196                           ; BSR set to: 0
 11197  013B42  0E07               	movlw	7
 11198  013B44  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 11199  013B46  D001               	goto	l1249
 11200  013B48  D023               	goto	u14160
 11201  013B4A                     l1249:
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 11205                           
 11206                           ; BSR set to: 0
 11207  013B4A  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11208  013B4C  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 11209  013B4E  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 11210  013B50  0E01               	movlw	1
 11211  013B52  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 11212  013B54  0E00               	movlw	0
 11213  013B56  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 11214  013B58  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11215  013B5A  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 11216  013B5C  6ED9               	movwf	fsr2l,c
 11217  013B5E  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11218  013B60  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 11219  013B62  6EDA               	movwf	fsr2h,c
 11220  013B64  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11221  013B66  0D01               	mullw	1
 11222  013B68  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 11223  013B6C  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 11224  013B70  50F3               	movf	prodl,w,c
 11225  013B72  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 11226  013B74  50F4               	movf	prodh,w,c
 11227  013B76  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 11228  013B78  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 11229  013B7C  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 11230  013B80                     	if	0	;tblptru may be non-zero
 11231  013B80                     	endif
 11232  013B80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11233  013B80  0E00               	movlw	low (__mediumconst shr (0+16))
 11234  013B82  6EF8               	movwf	tblptru,c
 11235  013B84                     	endif
 11236  013B84  0008               	tblrd		*
 11237  013B86  50F5               	movf	tablat,w,c
 11238  013B88  0B1F               	andlw	31
 11239  013B8A  6EDF               	movwf	indf2,c
 11240                           
 11241                           ; BSR set to: 0
 11242  013B8C  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 11243  013B8E  D7D9               	goto	l15404
 11244  013B90                     u14160:
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 11248                           
 11249                           ; BSR set to: 0
 11250  013B90  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11251  013B92  6F65               	movwf	__i2c_write@data& (0+255),b
 11252  013B94  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11253  013B96  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11254  013B98  0E09               	movlw	9
 11255  013B9A  6F67               	movwf	__i2c_write@length& (0+255),b
 11256  013B9C  0E78               	movlw	120
 11257  013B9E  ECFA  F0A5         	call	__i2c_write
 11258  013BA2  0012               	return		;funcret
 11259  013BA4                     __end_of_i2c_display_program_custom_character:
 11260                           	opt stack 0
 11261                           tblptru	equ	0xFF8
 11262                           tblptrh	equ	0xFF7
 11263                           tblptrl	equ	0xFF6
 11264                           tablat	equ	0xFF5
 11265                           prodh	equ	0xFF4
 11266                           prodl	equ	0xFF3
 11267                           postinc0	equ	0xFEE
 11268                           wreg	equ	0xFE8
 11269                           postdec1	equ	0xFE5
 11270                           fsr1h	equ	0xFE2
 11271                           fsr1l	equ	0xFE1
 11272                           indf2	equ	0xFDF
 11273                           postinc2	equ	0xFDE
 11274                           fsr2h	equ	0xFDA
 11275                           fsr2l	equ	0xFD9
 11276                           status	equ	0xFD8
 11277                           
 11278 ;; *************** function __ic2_display_set_cgram_address *****************
 11279 ;; Defined at:
 11280 ;;		line 363 in file "i2c.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  address         1    wreg     unsigned char 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  address         1   13[BANK0 ] unsigned char 
 11285 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11296 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;Total ram usage:        4 bytes
 11300 ;; Hardware stack levels used:    1
 11301 ;; Hardware stack levels required when called:   12
 11302 ;; This function calls:
 11303 ;;		__i2c_write
 11304 ;; This function is called by:
 11305 ;;		_i2c_display_program_custom_character
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text30
 11310  015512                     __ptext30:
 11311                           	opt stack 0
 11312  015512                     __ic2_display_set_cgram_address:
 11313                           	opt stack 15
 11314                           
 11315                           ;incstack = 0
 11316                           ;__ic2_display_set_cgram_address@address stored from wreg
 11317  015512  0100               	movlb	0	; () banked
 11318  015514  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 11319                           
 11320                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 11321  015516  0100               	movlb	0	; () banked
 11322  015518  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;i2c.c: 371: data_array[0] = 0b00000000;
 11326  01551A  0E00               	movlw	0
 11327  01551C  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;i2c.c: 372: data_array[1] = 0b00111000;
 11331  01551E  0E38               	movlw	56
 11332  015520  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 11333                           
 11334                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 11335  015522  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 11336  015524  0940               	iorlw	64
 11337  015526  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 11341  015528  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 11342  01552A  6F65               	movwf	__i2c_write@data& (0+255),b
 11343  01552C  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 11344  01552E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11345  015530  0E03               	movlw	3
 11346  015532  6F67               	movwf	__i2c_write@length& (0+255),b
 11347  015534  0E78               	movlw	120
 11348  015536  ECFA  F0A5         	call	__i2c_write
 11349  01553A  0012               	return		;funcret
 11350  01553C                     __end_of__ic2_display_set_cgram_address:
 11351                           	opt stack 0
 11352                           tblptru	equ	0xFF8
 11353                           tblptrh	equ	0xFF7
 11354                           tblptrl	equ	0xFF6
 11355                           tablat	equ	0xFF5
 11356                           prodh	equ	0xFF4
 11357                           prodl	equ	0xFF3
 11358                           postinc0	equ	0xFEE
 11359                           wreg	equ	0xFE8
 11360                           postdec1	equ	0xFE5
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           indf2	equ	0xFDF
 11364                           postinc2	equ	0xFDE
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _i2c_display_init *****************
 11370 ;; Defined at:
 11371 ;;		line 321 in file "i2c.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;Total ram usage:       10 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:   12
 11392 ;; This function calls:
 11393 ;;		__i2c_write
 11394 ;; This function is called by:
 11395 ;;		_display_init
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text31
 11400  014BA4                     __ptext31:
 11401                           	opt stack 0
 11402  014BA4                     _i2c_display_init:
 11403                           	opt stack 16
 11404                           
 11405                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 11406                           
 11407                           ;incstack = 0
 11408  014BA4  EE22  F0A6         	lfsr	2,i2c_display_init@F6942
 11409  014BA8  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 11410  014BAC  0E08               	movlw	8
 11411  014BAE                     u14131:
 11412  014BAE  CFDB FFE3          	movff	plusw2,plusw1
 11413  014BB2  06E8               	decf	wreg,f,c
 11414  014BB4  E2FC               	bc	u14131
 11415                           
 11416                           ;i2c.c: 338: LATAbits.LA3 = 0;
 11417  014BB6  9689               	bcf	3977,3,c	;volatile
 11418                           
 11419                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 11420  014BB8  0E1A               	movlw	26
 11421  014BBA  0100               	movlb	0	; () banked
 11422  014BBC  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11423  014BBE  0EF8               	movlw	248
 11424  014BC0                     u19097:
 11425  014BC0  2EE8               	decfsz	wreg,f,c
 11426  014BC2  D7FE               	bra	u19097
 11427  014BC4  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11428  014BC6  D7FC               	bra	u19097
 11429  014BC8  F000               	nop	
 11430                           
 11431                           ;i2c.c: 340: LATAbits.LA3 = 1;
 11432  014BCA  8689               	bsf	3977,3,c	;volatile
 11433                           
 11434                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 11435  014BCC  0E82               	movlw	130
 11436  014BCE  0100               	movlb	0	; () banked
 11437  014BD0  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11438  014BD2  0EDD               	movlw	221
 11439  014BD4                     u19107:
 11440  014BD4  2EE8               	decfsz	wreg,f,c
 11441  014BD6  D7FE               	bra	u19107
 11442  014BD8  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11443  014BDA  D7FC               	bra	u19107
 11444  014BDC  D000               	nop2	
 11445                           
 11446                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 11447  014BDE  0E6B               	movlw	low i2c_display_init@init_sequence
 11448  014BE0  0100               	movlb	0	; () banked
 11449  014BE2  6F65               	movwf	__i2c_write@data& (0+255),b
 11450  014BE4  0E00               	movlw	high i2c_display_init@init_sequence
 11451  014BE6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11452  014BE8  0E09               	movlw	9
 11453  014BEA  6F67               	movwf	__i2c_write@length& (0+255),b
 11454  014BEC  0E78               	movlw	120
 11455  014BEE  ECFA  F0A5         	call	__i2c_write
 11456  014BF2  0012               	return		;funcret
 11457  014BF4                     __end_of_i2c_display_init:
 11458                           	opt stack 0
 11459                           tblptru	equ	0xFF8
 11460                           tblptrh	equ	0xFF7
 11461                           tblptrl	equ	0xFF6
 11462                           tablat	equ	0xFF5
 11463                           prodh	equ	0xFF4
 11464                           prodl	equ	0xFF3
 11465                           postinc0	equ	0xFEE
 11466                           wreg	equ	0xFE8
 11467                           postdec1	equ	0xFE5
 11468                           plusw1	equ	0xFE3
 11469                           fsr1h	equ	0xFE2
 11470                           fsr1l	equ	0xFE1
 11471                           indf2	equ	0xFDF
 11472                           postinc2	equ	0xFDE
 11473                           plusw2	equ	0xFDB
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function __i2c_write *****************
 11479 ;; Defined at:
 11480 ;;		line 84 in file "i2c.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;  slave_addres    1    wreg     unsigned char 
 11483 ;;  data            2    5[BANK0 ] PTR unsigned char 
 11484 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 11485 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 11486 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 11487 ;;  length          1    7[BANK0 ] unsigned char 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 11490 ;;  cntr            1    9[BANK0 ] unsigned char 
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11500 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11504 ;;Total ram usage:        5 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; Hardware stack levels required when called:   11
 11507 ;; This function calls:
 11508 ;;		__i2c_send
 11509 ;;		__i2c_start
 11510 ;;		__i2c_stop
 11511 ;;		__i2c_wait_idle
 11512 ;; This function is called by:
 11513 ;;		_i2c_eeprom_read
 11514 ;;		_i2c_display_init
 11515 ;;		__ic2_display_set_ddram_address
 11516 ;;		__ic2_display_set_cgram_address
 11517 ;;		_i2c_display_program_custom_character
 11518 ;;		_i2c_adc_start
 11519 ;;		_i2c_eeprom_writeByte
 11520 ;;		_i2c_eeprom_readByte
 11521 ;;		__i2c_display_send_init_sequence
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text32
 11526  014BF4                     __ptext32:
 11527                           	opt stack 0
 11528  014BF4                     __i2c_write:
 11529                           	opt stack 16
 11530                           
 11531                           ;incstack = 0
 11532                           ;__i2c_write@slave_address stored from wreg
 11533  014BF4  0100               	movlb	0	; () banked
 11534  014BF6  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 11535                           
 11536                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 11537  014BF8  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 11538                           
 11539                           ;i2c.c: 89: _i2c_start();
 11540  014BFC  ECA9  F0AC         	call	__i2c_start	;wreg free
 11541                           
 11542                           ;i2c.c: 90: _i2c_wait_idle();
 11543  014C00  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 11544                           
 11545                           ;i2c.c: 91: _i2c_send(slave_address);
 11546  014C04  0100               	movlb	0	; () banked
 11547  014C06  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 11548  014C08  EC96  F0AC         	call	__i2c_send
 11549                           
 11550                           ;i2c.c: 92: _i2c_wait_idle();
 11551  014C0C  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 11552                           
 11553                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 11554  014C10  0E00               	movlw	0
 11555  014C12  0100               	movlb	0	; () banked
 11556  014C14  6F69               	movwf	__i2c_write@cntr& (0+255),b
 11557  014C16  D00F               	goto	l1158
 11558  014C18                     
 11559                           ; BSR set to: 0
 11560                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 11561                           
 11562                           ; BSR set to: 0
 11563  014C18  5169               	movf	__i2c_write@cntr& (0+255),w,b
 11564  014C1A  0D01               	mullw	1
 11565  014C1C  50F3               	movf	prodl,w,c
 11566  014C1E  2565               	addwf	__i2c_write@data& (0+255),w,b
 11567  014C20  6ED9               	movwf	fsr2l,c
 11568  014C22  50F4               	movf	prodh,w,c
 11569  014C24  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 11570  014C26  6EDA               	movwf	fsr2h,c
 11571  014C28  50DF               	movf	indf2,w,c
 11572  014C2A  EC96  F0AC         	call	__i2c_send
 11573                           
 11574                           ;i2c.c: 97: _i2c_wait_idle();
 11575  014C2E  ECB5  F0A0         	call	__i2c_wait_idle	;wreg free
 11576  014C32  0100               	movlb	0	; () banked
 11577  014C34  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 11578  014C36                     l1158:
 11579                           
 11580                           ; BSR set to: 0
 11581                           
 11582                           ; BSR set to: 0
 11583  014C36  5167               	movf	__i2c_write@length& (0+255),w,b
 11584  014C38  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 11585  014C3A  A0D8               	btfss	status,0,c
 11586  014C3C  D7ED               	goto	l1159
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 11590                           
 11591                           ; BSR set to: 0
 11592  014C3E  ECA5  F0AC         	call	__i2c_stop	;wreg free
 11593  014C42  0012               	return		;funcret
 11594  014C44                     __end_of__i2c_write:
 11595                           	opt stack 0
 11596                           tblptru	equ	0xFF8
 11597                           tblptrh	equ	0xFF7
 11598                           tblptrl	equ	0xFF6
 11599                           tablat	equ	0xFF5
 11600                           prodh	equ	0xFF4
 11601                           prodl	equ	0xFF3
 11602                           postinc0	equ	0xFEE
 11603                           wreg	equ	0xFE8
 11604                           postdec1	equ	0xFE5
 11605                           plusw1	equ	0xFE3
 11606                           fsr1h	equ	0xFE2
 11607                           fsr1l	equ	0xFE1
 11608                           indf2	equ	0xFDF
 11609                           postinc2	equ	0xFDE
 11610                           plusw2	equ	0xFDB
 11611                           fsr2h	equ	0xFDA
 11612                           fsr2l	equ	0xFD9
 11613                           status	equ	0xFD8
 11614                           
 11615 ;; *************** function __i2c_wait_idle *****************
 11616 ;; Defined at:
 11617 ;;		line 40 in file "i2c.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11633 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11634 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11635 ;;Total ram usage:        5 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:   10
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		__i2c_write
 11642 ;;		__i2c_read
 11643 ;;		__i2c_eeprom_busy
 11644 ;;		_i2c_display_write_fixed
 11645 ;;		_i2c_adc_read
 11646 ;;		_i2c_display_write
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           	psect	text33
 11651  01416A                     __ptext33:
 11652                           	opt stack 0
 11653  01416A                     __i2c_wait_idle:
 11654                           	opt stack 16
 11655                           
 11656                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11657                           
 11658                           ;incstack = 0
 11659  01416A  A4C7               	btfss	4039,2,c	;volatile
 11660  01416C  D004               	goto	u11460
 11661  01416E  0100               	movlb	0	; () banked
 11662  014170  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11663  014172  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11664  014174  D002               	goto	u11468
 11665  014176                     u11460:
 11666  014176  0100               	movlb	0	; () banked
 11667  014178  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11668  01417A                     u11468:
 11669  01417A  A0C5               	btfss	4037,0,c	;volatile
 11670  01417C  D003               	goto	u11470
 11671  01417E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11672  014180  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11673  014182  D002               	goto	u11478
 11674  014184                     u11470:
 11675  014184  0100               	movlb	0	; () banked
 11676  014186  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11677  014188                     u11478:
 11678  014188  A2C5               	btfss	4037,1,c	;volatile
 11679  01418A  D003               	goto	u11480
 11680  01418C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11681  01418E  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11682  014190  D002               	goto	u11488
 11683  014192                     u11480:
 11684  014192  0100               	movlb	0	; () banked
 11685  014194  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11686  014196                     u11488:
 11687  014196  A4C5               	btfss	4037,2,c	;volatile
 11688  014198  D003               	goto	u11490
 11689  01419A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11690  01419C  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11691  01419E  D002               	goto	u11498
 11692  0141A0                     u11490:
 11693  0141A0  0100               	movlb	0	; () banked
 11694  0141A2  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11695  0141A4                     u11498:
 11696  0141A4  A6C5               	btfss	4037,3,c	;volatile
 11697  0141A6  D003               	goto	u11500
 11698  0141A8  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11699  0141AA  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11700  0141AC  D002               	goto	u11508
 11701  0141AE                     u11500:
 11702  0141AE  0100               	movlb	0	; () banked
 11703  0141B0  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11704  0141B2                     u11508:
 11705  0141B2  A8C5               	btfss	4037,4,c	;volatile
 11706  0141B4  D002               	goto	u11510
 11707  0141B6  0E01               	movlw	1
 11708  0141B8  D001               	goto	u11516
 11709  0141BA                     u11510:
 11710  0141BA  0E00               	movlw	0
 11711  0141BC                     u11516:
 11712  0141BC  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11713  0141BE  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11714  0141C0  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11715  0141C2  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11716  0141C4  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11717  0141C6  0900               	iorlw	0
 11718  0141C8  B4D8               	btfsc	status,2,c
 11719  0141CA  0012               	return	
 11720  0141CC  D7CE               	goto	__i2c_wait_idle
 11721  0141CE                     __end_of__i2c_wait_idle:
 11722                           	opt stack 0
 11723                           tblptru	equ	0xFF8
 11724                           tblptrh	equ	0xFF7
 11725                           tblptrl	equ	0xFF6
 11726                           tablat	equ	0xFF5
 11727                           prodh	equ	0xFF4
 11728                           prodl	equ	0xFF3
 11729                           postinc0	equ	0xFEE
 11730                           wreg	equ	0xFE8
 11731                           postdec1	equ	0xFE5
 11732                           plusw1	equ	0xFE3
 11733                           fsr1h	equ	0xFE2
 11734                           fsr1l	equ	0xFE1
 11735                           indf2	equ	0xFDF
 11736                           postinc2	equ	0xFDE
 11737                           plusw2	equ	0xFDB
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function __i2c_stop *****************
 11743 ;; Defined at:
 11744 ;;		line 63 in file "i2c.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		None
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:   10
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		__i2c_write
 11769 ;;		__i2c_read
 11770 ;;		__i2c_eeprom_busy
 11771 ;;		_i2c_display_write_fixed
 11772 ;;		_i2c_adc_read
 11773 ;;		_i2c_display_write
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text34
 11778  01594A                     __ptext34:
 11779                           	opt stack 0
 11780  01594A                     __i2c_stop:
 11781                           	opt stack 16
 11782                           
 11783                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;incstack = 0
 11787  01594A  84C5               	bsf	4037,2,c	;volatile
 11788  01594C  A4C5               	btfss	4037,2,c	;volatile
 11789  01594E  0012               	return	
 11790  015950  D7FD               	goto	l1141
 11791  015952                     __end_of__i2c_stop:
 11792                           	opt stack 0
 11793                           tblptru	equ	0xFF8
 11794                           tblptrh	equ	0xFF7
 11795                           tblptrl	equ	0xFF6
 11796                           tablat	equ	0xFF5
 11797                           prodh	equ	0xFF4
 11798                           prodl	equ	0xFF3
 11799                           postinc0	equ	0xFEE
 11800                           wreg	equ	0xFE8
 11801                           postdec1	equ	0xFE5
 11802                           plusw1	equ	0xFE3
 11803                           fsr1h	equ	0xFE2
 11804                           fsr1l	equ	0xFE1
 11805                           indf2	equ	0xFDF
 11806                           postinc2	equ	0xFDE
 11807                           plusw2	equ	0xFDB
 11808                           fsr2h	equ	0xFDA
 11809                           fsr2l	equ	0xFD9
 11810                           status	equ	0xFD8
 11811                           
 11812 ;; *************** function __i2c_start *****************
 11813 ;; Defined at:
 11814 ;;		line 45 in file "i2c.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		None
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:   10
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		__i2c_write
 11839 ;;		__i2c_read
 11840 ;;		__i2c_eeprom_busy
 11841 ;;		_i2c_display_write_fixed
 11842 ;;		_i2c_adc_read
 11843 ;;		_i2c_display_write
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text35
 11848  015952                     __ptext35:
 11849                           	opt stack 0
 11850  015952                     __i2c_start:
 11851                           	opt stack 16
 11852                           
 11853                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 11854                           
 11855                           ;incstack = 0
 11856  015952  80C5               	bsf	4037,0,c	;volatile
 11857  015954  A0C5               	btfss	4037,0,c	;volatile
 11858  015956  0012               	return	
 11859  015958  D7FD               	goto	l1126
 11860  01595A                     __end_of__i2c_start:
 11861                           	opt stack 0
 11862                           tblptru	equ	0xFF8
 11863                           tblptrh	equ	0xFF7
 11864                           tblptrl	equ	0xFF6
 11865                           tablat	equ	0xFF5
 11866                           prodh	equ	0xFF4
 11867                           prodl	equ	0xFF3
 11868                           postinc0	equ	0xFEE
 11869                           wreg	equ	0xFE8
 11870                           postdec1	equ	0xFE5
 11871                           plusw1	equ	0xFE3
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           plusw2	equ	0xFDB
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function __i2c_send *****************
 11882 ;; Defined at:
 11883 ;;		line 51 in file "i2c.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  dat             1    wreg     unsigned char 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  dat             1    0[BANK0 ] unsigned char 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11900 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11901 ;;Total ram usage:        1 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:   10
 11904 ;; This function calls:
 11905 ;;		Nothing
 11906 ;; This function is called by:
 11907 ;;		__i2c_write
 11908 ;;		__i2c_read
 11909 ;;		__i2c_eeprom_busy
 11910 ;;		_i2c_display_write_fixed
 11911 ;;		_i2c_adc_read
 11912 ;;		_i2c_display_write
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text36
 11917  01592C                     __ptext36:
 11918                           	opt stack 0
 11919  01592C                     __i2c_send:
 11920                           	opt stack 16
 11921                           
 11922                           ;incstack = 0
 11923                           ;__i2c_send@dat stored from wreg
 11924  01592C  0100               	movlb	0	; () banked
 11925  01592E  6F60               	movwf	__i2c_send@dat& (0+255),b
 11926                           
 11927                           ;i2c.c: 53: SSP1BUF = dat;
 11928  015930  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11929  015934  0012               	return		;funcret
 11930  015936                     __end_of__i2c_send:
 11931                           	opt stack 0
 11932                           tblptru	equ	0xFF8
 11933                           tblptrh	equ	0xFF7
 11934                           tblptrl	equ	0xFF6
 11935                           tablat	equ	0xFF5
 11936                           prodh	equ	0xFF4
 11937                           prodl	equ	0xFF3
 11938                           postinc0	equ	0xFEE
 11939                           wreg	equ	0xFE8
 11940                           postdec1	equ	0xFE5
 11941                           plusw1	equ	0xFE3
 11942                           fsr1h	equ	0xFE2
 11943                           fsr1l	equ	0xFE1
 11944                           indf2	equ	0xFDF
 11945                           postinc2	equ	0xFDE
 11946                           plusw2	equ	0xFDB
 11947                           fsr2h	equ	0xFDA
 11948                           fsr2l	equ	0xFD9
 11949                           status	equ	0xFD8
 11950                           
 11951 ;; *************** function __display_start *****************
 11952 ;; Defined at:
 11953 ;;		line 266 in file "display.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  cntr            1   28[BANK0 ] unsigned char 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      void 
 11960 ;; Registers used:
 11961 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11971 ;;Total ram usage:        1 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:   14
 11974 ;; This function calls:
 11975 ;;		__display_itoa_u16
 11976 ;;		_memcpy
 11977 ;; This function is called by:
 11978 ;;		_display_init
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text37
 11983  012CB4                     __ptext37:
 11984                           	opt stack 0
 11985  012CB4                     __display_start:
 11986                           	opt stack 14
 11987                           
 11988                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11989                           
 11990                           ;incstack = 0
 11991  012CB4  0E34               	movlw	low _display_content
 11992  012CB6  0100               	movlb	0	; () banked
 11993  012CB8  6F60               	movwf	memcpy@d1& (0+255),b
 11994  012CBA  0E02               	movlw	high _display_content
 11995  012CBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11996  012CBE  0E00               	movlw	low _dc_startup
 11997  012CC0  6F62               	movwf	memcpy@s1& (0+255),b
 11998  012CC2  0E04               	movlw	high _dc_startup
 11999  012CC4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12000  012CC6  0E00               	movlw	0
 12001  012CC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12002  012CCA  0E50               	movlw	80
 12003  012CCC  6F64               	movwf	memcpy@n& (0+255),b
 12004  012CCE  ECDD  F0A1         	call	_memcpy	;wreg free
 12005                           
 12006                           ;display.c: 270: cntr = 6;
 12007  012CD2  0E06               	movlw	6
 12008  012CD4  0100               	movlb	0	; () banked
 12009  012CD6  6F7C               	movwf	__display_start@cntr& (0+255),b
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 12013  012CD8  0E00               	movlw	0
 12014  012CDA  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12015  012CDC  0E00               	movlw	0
 12016  012CDE  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12017  012CE0  517C               	movf	__display_start@cntr& (0+255),w,b
 12018  012CE2  0D01               	mullw	1
 12019  012CE4  0E5C               	movlw	low (_display_content+40)
 12020  012CE6  24F3               	addwf	prodl,w,c
 12021  012CE8  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12022  012CEA  0E02               	movlw	high (_display_content+40)
 12023  012CEC  20F4               	addwfc	prodh,w,c
 12024  012CEE  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12025  012CF0  EC00  F096         	call	__display_itoa_u16	;wreg free
 12026  012CF4  0100               	movlb	0	; () banked
 12027  012CF6  277C               	addwf	__display_start@cntr& (0+255),f,b
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;display.c: 272: display_content[2][cntr++] = '.';
 12031  012CF8  517C               	movf	__display_start@cntr& (0+255),w,b
 12032  012CFA  0D01               	mullw	1
 12033  012CFC  0E5C               	movlw	low (_display_content+40)
 12034  012CFE  24F3               	addwf	prodl,w,c
 12035  012D00  6ED9               	movwf	fsr2l,c
 12036  012D02  0E02               	movlw	high (_display_content+40)
 12037  012D04  20F4               	addwfc	prodh,w,c
 12038  012D06  6EDA               	movwf	fsr2h,c
 12039  012D08  0E2E               	movlw	46
 12040  012D0A  6EDF               	movwf	indf2,c
 12041                           
 12042                           ; BSR set to: 0
 12043  012D0C  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 12047  012D0E  0E00               	movlw	0
 12048  012D10  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12049  012D12  0E05               	movlw	5
 12050  012D14  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12051  012D16  517C               	movf	__display_start@cntr& (0+255),w,b
 12052  012D18  0D01               	mullw	1
 12053  012D1A  0E5C               	movlw	low (_display_content+40)
 12054  012D1C  24F3               	addwf	prodl,w,c
 12055  012D1E  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12056  012D20  0E02               	movlw	high (_display_content+40)
 12057  012D22  20F4               	addwfc	prodh,w,c
 12058  012D24  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12059  012D26  EC00  F096         	call	__display_itoa_u16	;wreg free
 12060  012D2A  0100               	movlb	0	; () banked
 12061  012D2C  277C               	addwf	__display_start@cntr& (0+255),f,b
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;display.c: 274: display_content[2][cntr++] = '.';
 12065  012D2E  517C               	movf	__display_start@cntr& (0+255),w,b
 12066  012D30  0D01               	mullw	1
 12067  012D32  0E5C               	movlw	low (_display_content+40)
 12068  012D34  24F3               	addwf	prodl,w,c
 12069  012D36  6ED9               	movwf	fsr2l,c
 12070  012D38  0E02               	movlw	high (_display_content+40)
 12071  012D3A  20F4               	addwfc	prodh,w,c
 12072  012D3C  6EDA               	movwf	fsr2h,c
 12073  012D3E  0E2E               	movlw	46
 12074  012D40  6EDF               	movwf	indf2,c
 12075                           
 12076                           ; BSR set to: 0
 12077  012D42  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;display.c: 275: cntr += _display_itoa_u16(0x03, &display_content[2][cntr]);
 12081  012D44  0E00               	movlw	0
 12082  012D46  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12083  012D48  0E03               	movlw	3
 12084  012D4A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12085  012D4C  517C               	movf	__display_start@cntr& (0+255),w,b
 12086  012D4E  0D01               	mullw	1
 12087  012D50  0E5C               	movlw	low (_display_content+40)
 12088  012D52  24F3               	addwf	prodl,w,c
 12089  012D54  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12090  012D56  0E02               	movlw	high (_display_content+40)
 12091  012D58  20F4               	addwfc	prodh,w,c
 12092  012D5A  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12093  012D5C  EC00  F096         	call	__display_itoa_u16	;wreg free
 12094  012D60  0100               	movlb	0	; () banked
 12095  012D62  277C               	addwf	__display_start@cntr& (0+255),f,b
 12096                           
 12097                           ; BSR set to: 0
 12098  012D64  0012               	return		;funcret
 12099  012D66                     __end_of__display_start:
 12100                           	opt stack 0
 12101                           tblptru	equ	0xFF8
 12102                           tblptrh	equ	0xFF7
 12103                           tblptrl	equ	0xFF6
 12104                           tablat	equ	0xFF5
 12105                           prodh	equ	0xFF4
 12106                           prodl	equ	0xFF3
 12107                           postinc0	equ	0xFEE
 12108                           wreg	equ	0xFE8
 12109                           postdec1	equ	0xFE5
 12110                           plusw1	equ	0xFE3
 12111                           fsr1h	equ	0xFE2
 12112                           fsr1l	equ	0xFE1
 12113                           indf2	equ	0xFDF
 12114                           postinc2	equ	0xFDE
 12115                           plusw2	equ	0xFDB
 12116                           fsr2h	equ	0xFDA
 12117                           fsr2l	equ	0xFD9
 12118                           status	equ	0xFD8
 12119                           
 12120 ;; *************** function __display_itoa_u16 *****************
 12121 ;; Defined at:
 12122 ;;		line 226 in file "display.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  value           2   24[BANK0 ] unsigned int 
 12125 ;;  text            2   26[BANK0 ] PTR unsigned char 
 12126 ;;		 -> display_content(80), 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;		None
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  1    wreg      unsigned char 
 12131 ;; Registers used:
 12132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12142 ;;Total ram usage:        4 bytes
 12143 ;; Hardware stack levels used:    1
 12144 ;; Hardware stack levels required when called:   13
 12145 ;; This function calls:
 12146 ;;		_itoa
 12147 ;; This function is called by:
 12148 ;;		__display_start
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text38
 12153  012C00                     __ptext38:
 12154                           	opt stack 0
 12155  012C00                     __display_itoa_u16:
 12156                           	opt stack 14
 12157                           
 12158                           ;display.c: 228: itoa(text, value, 10);
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;incstack = 0
 12162  012C00  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 12163  012C04  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 12164  012C08  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 12165  012C0C  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 12166  012C10  0E00               	movlw	0
 12167  012C12  0100               	movlb	0	; () banked
 12168  012C14  6F75               	movwf	(itoa@base+1)& (0+255),b
 12169  012C16  0E0A               	movlw	10
 12170  012C18  6F74               	movwf	itoa@base& (0+255),b
 12171  012C1A  EC97  F0A7         	call	_itoa	;wreg free
 12172                           
 12173                           ;display.c: 229: if(value>9999)
 12174  012C1E  0E10               	movlw	16
 12175  012C20  0100               	movlb	0	; () banked
 12176  012C22  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12177  012C24  0E27               	movlw	39
 12178  012C26  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12179  012C28  A0D8               	btfss	status,0,c
 12180  012C2A  D00A               	goto	l1359
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 12184  012C2C  EE20 F005          	lfsr	2,5
 12185  012C30  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12186  012C32  26D9               	addwf	fsr2l,f,c
 12187  012C34  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12188  012C36  22DA               	addwfc	fsr2h,f,c
 12189  012C38  0E20               	movlw	32
 12190  012C3A  6EDF               	movwf	indf2,c
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;display.c: 232: return 5;
 12194  012C3C  0E05               	movlw	5
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;display.c: 233: }
 12198                           
 12199                           ; BSR set to: 0
 12200  012C3E  0012               	return	
 12201  012C40                     l1359:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;display.c: 234: else if (value>999)
 12205                           
 12206                           ; BSR set to: 0
 12207  012C40  0EE8               	movlw	232
 12208  012C42  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12209  012C44  0E03               	movlw	3
 12210  012C46  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12211  012C48  A0D8               	btfss	status,0,c
 12212  012C4A  D00A               	goto	l1362
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 12216  012C4C  EE20 F004          	lfsr	2,4
 12217  012C50  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12218  012C52  26D9               	addwf	fsr2l,f,c
 12219  012C54  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12220  012C56  22DA               	addwfc	fsr2h,f,c
 12221  012C58  0E20               	movlw	32
 12222  012C5A  6EDF               	movwf	indf2,c
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;display.c: 237: return 4;
 12226  012C5C  0E04               	movlw	4
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;display.c: 238: }
 12230                           
 12231                           ; BSR set to: 0
 12232  012C5E  0012               	return	
 12233  012C60                     l1362:
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;display.c: 239: else if (value>99)
 12237                           
 12238                           ; BSR set to: 0
 12239  012C60  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12240  012C62  E104               	bnz	u13110
 12241  012C64  0E64               	movlw	100
 12242  012C66  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12243  012C68  A0D8               	btfss	status,0,c
 12244  012C6A  D00A               	goto	l1364
 12245  012C6C                     u13110:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 12249  012C6C  EE20 F003          	lfsr	2,3
 12250  012C70  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12251  012C72  26D9               	addwf	fsr2l,f,c
 12252  012C74  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12253  012C76  22DA               	addwfc	fsr2h,f,c
 12254  012C78  0E20               	movlw	32
 12255  012C7A  6EDF               	movwf	indf2,c
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;display.c: 242: return 3;
 12259  012C7C  0E03               	movlw	3
 12260                           
 12261                           ; BSR set to: 0
 12262                           ;display.c: 243: }
 12263                           
 12264                           ; BSR set to: 0
 12265  012C7E  0012               	return	
 12266  012C80                     l1364:
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;display.c: 244: else if (value>9)
 12270                           
 12271                           ; BSR set to: 0
 12272  012C80  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12273  012C82  E104               	bnz	u13120
 12274  012C84  0E0A               	movlw	10
 12275  012C86  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12276  012C88  A0D8               	btfss	status,0,c
 12277  012C8A  D00A               	goto	l1366
 12278  012C8C                     u13120:
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 12282  012C8C  EE20 F002          	lfsr	2,2
 12283  012C90  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12284  012C92  26D9               	addwf	fsr2l,f,c
 12285  012C94  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12286  012C96  22DA               	addwfc	fsr2h,f,c
 12287  012C98  0E20               	movlw	32
 12288  012C9A  6EDF               	movwf	indf2,c
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;display.c: 247: return 2;
 12292  012C9C  0E02               	movlw	2
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;display.c: 248: }
 12296                           
 12297                           ; BSR set to: 0
 12298  012C9E  0012               	return	
 12299  012CA0                     l1366:
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 12303                           
 12304                           ; BSR set to: 0
 12305  012CA0  EE20 F001          	lfsr	2,1
 12306  012CA4  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12307  012CA6  26D9               	addwf	fsr2l,f,c
 12308  012CA8  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12309  012CAA  22DA               	addwfc	fsr2h,f,c
 12310  012CAC  0E20               	movlw	32
 12311  012CAE  6EDF               	movwf	indf2,c
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;display.c: 252: return 1;
 12315  012CB0  0E01               	movlw	1
 12316                           
 12317                           ; BSR set to: 0
 12318                           
 12319                           ; BSR set to: 0
 12320                           
 12321                           ; BSR set to: 0
 12322                           
 12323                           ; BSR set to: 0
 12324  012CB2  0012               	return	
 12325  012CB4                     __end_of__display_itoa_u16:
 12326                           	opt stack 0
 12327                           tblptru	equ	0xFF8
 12328                           tblptrh	equ	0xFF7
 12329                           tblptrl	equ	0xFF6
 12330                           tablat	equ	0xFF5
 12331                           prodh	equ	0xFF4
 12332                           prodl	equ	0xFF3
 12333                           postinc0	equ	0xFEE
 12334                           wreg	equ	0xFE8
 12335                           postdec1	equ	0xFE5
 12336                           plusw1	equ	0xFE3
 12337                           fsr1h	equ	0xFE2
 12338                           fsr1l	equ	0xFE1
 12339                           indf2	equ	0xFDF
 12340                           postinc2	equ	0xFDE
 12341                           plusw2	equ	0xFDB
 12342                           fsr2h	equ	0xFDA
 12343                           fsr2l	equ	0xFD9
 12344                           status	equ	0xFD8
 12345                           
 12346 ;; *************** function _configFile_write *****************
 12347 ;; Defined at:
 12348 ;;		line 270 in file "config_file.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  file_size       4  133[BANK0 ] unsigned long 
 12353 ;;  file_number     1  132[BANK0 ] unsigned char 
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      void 
 12356 ;; Registers used:
 12357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12367 ;;Total ram usage:        6 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; Hardware stack levels required when called:   18
 12370 ;; This function calls:
 12371 ;;		__add_item
 12372 ;;		_fat_create_file
 12373 ;;		_fat_find_file
 12374 ;;		_fat_modify_file
 12375 ;;		_fat_resize_file
 12376 ;; This function is called by:
 12377 ;;		_system_init
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text39
 12382  00C194                     __ptext39:
 12383                           	opt stack 0
 12384  00C194                     _configFile_write:
 12385                           	opt stack 11
 12386                           
 12387                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 12388                           
 12389                           ; BSR set to: 0
 12390                           ;incstack = 0
 12391  00C194  0E00               	movlw	0
 12392  00C196  0100               	movlb	0	; () banked
 12393  00C198  6FE5               	movwf	configFile_write@file_size& (0+255),b
 12394  00C19A  0E00               	movlw	0
 12395  00C19C  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 12396  00C19E  0E00               	movlw	0
 12397  00C1A0  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 12398  00C1A2  0E00               	movlw	0
 12399  00C1A4  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 12403  00C1A6  0EFD               	movlw	low _full_circle_in_steps_string
 12404  00C1A8  6F84               	movwf	__add_item@item_string& (0+255),b
 12405  00C1AA  0EA1               	movlw	high _full_circle_in_steps_string
 12406  00C1AC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12407  00C1AE  C1A1  F086         	movff	_config,__add_item@value
 12408  00C1B2  C1A2  F087         	movff	_config+1,__add_item@value+1
 12409  00C1B6  C1A3  F088         	movff	_config+2,__add_item@value+2
 12410  00C1BA  C1A4  F089         	movff	_config+3,__add_item@value+3
 12411  00C1BE  0E00               	movlw	low _ConfigFile_buffer
 12412  00C1C0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12413  00C1C2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12414  00C1C4  0E08               	movlw	high _ConfigFile_buffer
 12415  00C1C6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12416  00C1C8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12417  00C1CA  EC2F  F08E         	call	__add_item	;wreg free
 12418  00C1CE  0100               	movlb	0	; () banked
 12419  00C1D0  6FE3               	movwf	??_configFile_write& (0+255),b
 12420  00C1D2  51E3               	movf	??_configFile_write& (0+255),w,b
 12421  00C1D4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12422  00C1D6  0E00               	movlw	0
 12423  00C1D8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12424  00C1DA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12425  00C1DC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 12429  00C1DE  0E49               	movlw	low _inverse_direction_string
 12430  00C1E0  6F84               	movwf	__add_item@item_string& (0+255),b
 12431  00C1E2  0EA2               	movlw	high _inverse_direction_string
 12432  00C1E4  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12433  00C1E6  0101               	movlb	1	; () banked
 12434  00C1E8  51A5               	movf	(_config+4)& (0+255),w,b
 12435  00C1EA  0100               	movlb	0	; () banked
 12436  00C1EC  6F86               	movwf	__add_item@value& (0+255),b
 12437  00C1EE  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12438  00C1F0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12439  00C1F2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12440  00C1F4  0E00               	movlw	low _ConfigFile_buffer
 12441  00C1F6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12442  00C1F8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12443  00C1FA  0E08               	movlw	high _ConfigFile_buffer
 12444  00C1FC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12445  00C1FE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12446  00C200  EC2F  F08E         	call	__add_item	;wreg free
 12447  00C204  0100               	movlb	0	; () banked
 12448  00C206  6FE3               	movwf	??_configFile_write& (0+255),b
 12449  00C208  51E3               	movf	??_configFile_write& (0+255),w,b
 12450  00C20A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12451  00C20C  0E00               	movlw	0
 12452  00C20E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12453  00C210  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12454  00C212  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 12458  00C214  0E12               	movlw	low _overshoot_in_steps_string
 12459  00C216  6F84               	movwf	__add_item@item_string& (0+255),b
 12460  00C218  0EA2               	movlw	high _overshoot_in_steps_string
 12461  00C21A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12462  00C21C  C1A6  F086         	movff	_config+5,__add_item@value
 12463  00C220  C1A7  F087         	movff	_config+6,__add_item@value+1
 12464  00C224  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12465  00C226  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12466  00C228  0E00               	movlw	low _ConfigFile_buffer
 12467  00C22A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12468  00C22C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12469  00C22E  0E08               	movlw	high _ConfigFile_buffer
 12470  00C230  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12471  00C232  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12472  00C234  EC2F  F08E         	call	__add_item	;wreg free
 12473  00C238  0100               	movlb	0	; () banked
 12474  00C23A  6FE3               	movwf	??_configFile_write& (0+255),b
 12475  00C23C  51E3               	movf	??_configFile_write& (0+255),w,b
 12476  00C23E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12477  00C240  0E00               	movlw	0
 12478  00C242  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12479  00C244  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12480  00C246  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 12484  00C248  0EBB               	movlw	low _overshoot_cost_in_steps_string
 12485  00C24A  6F84               	movwf	__add_item@item_string& (0+255),b
 12486  00C24C  0EA1               	movlw	high _overshoot_cost_in_steps_string
 12487  00C24E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12488  00C250  C1A8  F086         	movff	_config+7,__add_item@value
 12489  00C254  C1A9  F087         	movff	_config+8,__add_item@value+1
 12490  00C258  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12491  00C25A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12492  00C25C  0E00               	movlw	low _ConfigFile_buffer
 12493  00C25E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12494  00C260  6F8A               	movwf	__add_item@buffer& (0+255),b
 12495  00C262  0E08               	movlw	high _ConfigFile_buffer
 12496  00C264  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12497  00C266  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12498  00C268  EC2F  F08E         	call	__add_item	;wreg free
 12499  00C26C  0100               	movlb	0	; () banked
 12500  00C26E  6FE3               	movwf	??_configFile_write& (0+255),b
 12501  00C270  51E3               	movf	??_configFile_write& (0+255),w,b
 12502  00C272  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12503  00C274  0E00               	movlw	0
 12504  00C276  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12505  00C278  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12506  00C27A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12510  00C27C  0E97               	movlw	low _minimum_speed_string
 12511  00C27E  6F84               	movwf	__add_item@item_string& (0+255),b
 12512  00C280  0EA2               	movlw	high _minimum_speed_string
 12513  00C282  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12514  00C284  C1AA  F086         	movff	_config+9,__add_item@value
 12515  00C288  C1AB  F087         	movff	_config+10,__add_item@value+1
 12516  00C28C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12517  00C28E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12518  00C290  0E00               	movlw	low _ConfigFile_buffer
 12519  00C292  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12520  00C294  6F8A               	movwf	__add_item@buffer& (0+255),b
 12521  00C296  0E08               	movlw	high _ConfigFile_buffer
 12522  00C298  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12523  00C29A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12524  00C29C  EC2F  F08E         	call	__add_item	;wreg free
 12525  00C2A0  0100               	movlb	0	; () banked
 12526  00C2A2  6FE3               	movwf	??_configFile_write& (0+255),b
 12527  00C2A4  51E3               	movf	??_configFile_write& (0+255),w,b
 12528  00C2A6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12529  00C2A8  0E00               	movlw	0
 12530  00C2AA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12531  00C2AC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12532  00C2AE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12536  00C2B0  0E89               	movlw	low _maximum_speed_string
 12537  00C2B2  6F84               	movwf	__add_item@item_string& (0+255),b
 12538  00C2B4  0EA2               	movlw	high _maximum_speed_string
 12539  00C2B6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12540  00C2B8  C1AC  F086         	movff	_config+11,__add_item@value
 12541  00C2BC  C1AD  F087         	movff	_config+12,__add_item@value+1
 12542  00C2C0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12543  00C2C2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12544  00C2C4  0E00               	movlw	low _ConfigFile_buffer
 12545  00C2C6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12546  00C2C8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12547  00C2CA  0E08               	movlw	high _ConfigFile_buffer
 12548  00C2CC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12549  00C2CE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12550  00C2D0  EC2F  F08E         	call	__add_item	;wreg free
 12551  00C2D4  0100               	movlb	0	; () banked
 12552  00C2D6  6FE3               	movwf	??_configFile_write& (0+255),b
 12553  00C2D8  51E3               	movf	??_configFile_write& (0+255),w,b
 12554  00C2DA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12555  00C2DC  0E00               	movlw	0
 12556  00C2DE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12557  00C2E0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12558  00C2E2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 12562  00C2E4  0E37               	movlw	low _initial_speed_arc_string
 12563  00C2E6  6F84               	movwf	__add_item@item_string& (0+255),b
 12564  00C2E8  0EA2               	movlw	high _initial_speed_arc_string
 12565  00C2EA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12566  00C2EC  C1AE  F086         	movff	_config+13,__add_item@value
 12567  00C2F0  C1AF  F087         	movff	_config+14,__add_item@value+1
 12568  00C2F4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12569  00C2F6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12570  00C2F8  0E00               	movlw	low _ConfigFile_buffer
 12571  00C2FA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12572  00C2FC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12573  00C2FE  0E08               	movlw	high _ConfigFile_buffer
 12574  00C300  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12575  00C302  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12576  00C304  EC2F  F08E         	call	__add_item	;wreg free
 12577  00C308  0100               	movlb	0	; () banked
 12578  00C30A  6FE3               	movwf	??_configFile_write& (0+255),b
 12579  00C30C  51E3               	movf	??_configFile_write& (0+255),w,b
 12580  00C30E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12581  00C310  0E00               	movlw	0
 12582  00C312  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12583  00C314  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12584  00C316  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 12588  00C318  0E25               	movlw	low _maximum_speed_arc_string
 12589  00C31A  6F84               	movwf	__add_item@item_string& (0+255),b
 12590  00C31C  0EA2               	movlw	high _maximum_speed_arc_string
 12591  00C31E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12592  00C320  C1B0  F086         	movff	_config+15,__add_item@value
 12593  00C324  C1B1  F087         	movff	_config+16,__add_item@value+1
 12594  00C328  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12595  00C32A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12596  00C32C  0E00               	movlw	low _ConfigFile_buffer
 12597  00C32E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12598  00C330  6F8A               	movwf	__add_item@buffer& (0+255),b
 12599  00C332  0E08               	movlw	high _ConfigFile_buffer
 12600  00C334  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12601  00C336  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12602  00C338  EC2F  F08E         	call	__add_item	;wreg free
 12603  00C33C  0100               	movlb	0	; () banked
 12604  00C33E  6FE3               	movwf	??_configFile_write& (0+255),b
 12605  00C340  51E3               	movf	??_configFile_write& (0+255),w,b
 12606  00C342  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12607  00C344  0E00               	movlw	0
 12608  00C346  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12609  00C348  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12610  00C34A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 12614  00C34C  0EE8               	movlw	low _initial_speed_manual_string
 12615  00C34E  6F84               	movwf	__add_item@item_string& (0+255),b
 12616  00C350  0EA1               	movlw	high _initial_speed_manual_string
 12617  00C352  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12618  00C354  C1B2  F086         	movff	_config+17,__add_item@value
 12619  00C358  C1B3  F087         	movff	_config+18,__add_item@value+1
 12620  00C35C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12621  00C35E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12622  00C360  0E00               	movlw	low _ConfigFile_buffer
 12623  00C362  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12624  00C364  6F8A               	movwf	__add_item@buffer& (0+255),b
 12625  00C366  0E08               	movlw	high _ConfigFile_buffer
 12626  00C368  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12627  00C36A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12628  00C36C  EC2F  F08E         	call	__add_item	;wreg free
 12629  00C370  0100               	movlb	0	; () banked
 12630  00C372  6FE3               	movwf	??_configFile_write& (0+255),b
 12631  00C374  51E3               	movf	??_configFile_write& (0+255),w,b
 12632  00C376  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12633  00C378  0E00               	movlw	0
 12634  00C37A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12635  00C37C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12636  00C37E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 12640  00C380  0ED3               	movlw	low _maximum_speed_manual_string
 12641  00C382  6F84               	movwf	__add_item@item_string& (0+255),b
 12642  00C384  0EA1               	movlw	high _maximum_speed_manual_string
 12643  00C386  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12644  00C388  C1B4  F086         	movff	_config+19,__add_item@value
 12645  00C38C  C1B5  F087         	movff	_config+20,__add_item@value+1
 12646  00C390  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12647  00C392  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12648  00C394  0E00               	movlw	low _ConfigFile_buffer
 12649  00C396  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12650  00C398  6F8A               	movwf	__add_item@buffer& (0+255),b
 12651  00C39A  0E08               	movlw	high _ConfigFile_buffer
 12652  00C39C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12653  00C39E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12654  00C3A0  EC2F  F08E         	call	__add_item	;wreg free
 12655  00C3A4  0100               	movlb	0	; () banked
 12656  00C3A6  6FE3               	movwf	??_configFile_write& (0+255),b
 12657  00C3A8  51E3               	movf	??_configFile_write& (0+255),w,b
 12658  00C3AA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12659  00C3AC  0E00               	movlw	0
 12660  00C3AE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12661  00C3B0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12662  00C3B2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12666  00C3B4  0E6D               	movlw	low _use_ccw_limit_string
 12667  00C3B6  6F84               	movwf	__add_item@item_string& (0+255),b
 12668  00C3B8  0EA2               	movlw	high _use_ccw_limit_string
 12669  00C3BA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12670  00C3BC  0101               	movlb	1	; () banked
 12671  00C3BE  51BA               	movf	(_config+25)& (0+255),w,b
 12672  00C3C0  0100               	movlb	0	; () banked
 12673  00C3C2  6F86               	movwf	__add_item@value& (0+255),b
 12674  00C3C4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12675  00C3C6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12676  00C3C8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12677  00C3CA  0E00               	movlw	low _ConfigFile_buffer
 12678  00C3CC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12679  00C3CE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12680  00C3D0  0E08               	movlw	high _ConfigFile_buffer
 12681  00C3D2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12682  00C3D4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12683  00C3D6  EC2F  F08E         	call	__add_item	;wreg free
 12684  00C3DA  0100               	movlb	0	; () banked
 12685  00C3DC  6FE3               	movwf	??_configFile_write& (0+255),b
 12686  00C3DE  51E3               	movf	??_configFile_write& (0+255),w,b
 12687  00C3E0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12688  00C3E2  0E00               	movlw	0
 12689  00C3E4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12690  00C3E6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12691  00C3E8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12695  00C3EA  0EB2               	movlw	low _ccw_limit_string
 12696  00C3EC  6F84               	movwf	__add_item@item_string& (0+255),b
 12697  00C3EE  0EA2               	movlw	high _ccw_limit_string
 12698  00C3F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12699  00C3F2  C1BB  F086         	movff	_config+26,__add_item@value
 12700  00C3F6  C1BC  F087         	movff	_config+27,__add_item@value+1
 12701  00C3FA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12702  00C3FC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12703  00C3FE  0E00               	movlw	low _ConfigFile_buffer
 12704  00C400  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12705  00C402  6F8A               	movwf	__add_item@buffer& (0+255),b
 12706  00C404  0E08               	movlw	high _ConfigFile_buffer
 12707  00C406  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12708  00C408  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12709  00C40A  EC2F  F08E         	call	__add_item	;wreg free
 12710  00C40E  0100               	movlb	0	; () banked
 12711  00C410  6FE3               	movwf	??_configFile_write& (0+255),b
 12712  00C412  51E3               	movf	??_configFile_write& (0+255),w,b
 12713  00C414  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12714  00C416  0E00               	movlw	0
 12715  00C418  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12716  00C41A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12717  00C41C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12721  00C41E  0EA5               	movlw	low _use_cw_limit_string
 12722  00C420  6F84               	movwf	__add_item@item_string& (0+255),b
 12723  00C422  0EA2               	movlw	high _use_cw_limit_string
 12724  00C424  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12725  00C426  0101               	movlb	1	; () banked
 12726  00C428  51B7               	movf	(_config+22)& (0+255),w,b
 12727  00C42A  0100               	movlb	0	; () banked
 12728  00C42C  6F86               	movwf	__add_item@value& (0+255),b
 12729  00C42E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12730  00C430  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12731  00C432  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12732  00C434  0E00               	movlw	low _ConfigFile_buffer
 12733  00C436  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12734  00C438  6F8A               	movwf	__add_item@buffer& (0+255),b
 12735  00C43A  0E08               	movlw	high _ConfigFile_buffer
 12736  00C43C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12737  00C43E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12738  00C440  EC2F  F08E         	call	__add_item	;wreg free
 12739  00C444  0100               	movlb	0	; () banked
 12740  00C446  6FE3               	movwf	??_configFile_write& (0+255),b
 12741  00C448  51E3               	movf	??_configFile_write& (0+255),w,b
 12742  00C44A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12743  00C44C  0E00               	movlw	0
 12744  00C44E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12745  00C450  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12746  00C452  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12750  00C454  0EBC               	movlw	low _cw_limit_string
 12751  00C456  6F84               	movwf	__add_item@item_string& (0+255),b
 12752  00C458  0EA2               	movlw	high _cw_limit_string
 12753  00C45A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12754  00C45C  C1B8  F086         	movff	_config+23,__add_item@value
 12755  00C460  C1B9  F087         	movff	_config+24,__add_item@value+1
 12756  00C464  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12757  00C466  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12758  00C468  0E00               	movlw	low _ConfigFile_buffer
 12759  00C46A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12760  00C46C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12761  00C46E  0E08               	movlw	high _ConfigFile_buffer
 12762  00C470  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12763  00C472  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12764  00C474  EC2F  F08E         	call	__add_item	;wreg free
 12765  00C478  0100               	movlb	0	; () banked
 12766  00C47A  6FE3               	movwf	??_configFile_write& (0+255),b
 12767  00C47C  51E3               	movf	??_configFile_write& (0+255),w,b
 12768  00C47E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12769  00C480  0E00               	movlw	0
 12770  00C482  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12771  00C484  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12772  00C486  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12776  00C488  0E7B               	movlw	low _beep_duration_string
 12777  00C48A  6F84               	movwf	__add_item@item_string& (0+255),b
 12778  00C48C  0EA2               	movlw	high _beep_duration_string
 12779  00C48E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12780  00C490  0101               	movlb	1	; () banked
 12781  00C492  51B6               	movf	(_config+21)& (0+255),w,b
 12782  00C494  0100               	movlb	0	; () banked
 12783  00C496  6F86               	movwf	__add_item@value& (0+255),b
 12784  00C498  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12785  00C49A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12786  00C49C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12787  00C49E  0E00               	movlw	low _ConfigFile_buffer
 12788  00C4A0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12789  00C4A2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12790  00C4A4  0E08               	movlw	high _ConfigFile_buffer
 12791  00C4A6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12792  00C4A8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12793  00C4AA  EC2F  F08E         	call	__add_item	;wreg free
 12794  00C4AE  0100               	movlb	0	; () banked
 12795  00C4B0  6FE3               	movwf	??_configFile_write& (0+255),b
 12796  00C4B2  51E3               	movf	??_configFile_write& (0+255),w,b
 12797  00C4B4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12798  00C4B6  0E00               	movlw	0
 12799  00C4B8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12800  00C4BA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12801  00C4BC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12805  00C4BE  0EC0               	movlw	low _configFile_used_name
 12806  00C4C0  6F8B               	movwf	fat_find_file@name& (0+255),b
 12807  00C4C2  0E02               	movlw	high _configFile_used_name
 12808  00C4C4  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12809  00C4C6  0ED0               	movlw	low _configFile_used_extention
 12810  00C4C8  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12811  00C4CA  0E02               	movlw	high _configFile_used_extention
 12812  00C4CC  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12813  00C4CE  EC48  F08D         	call	_fat_find_file	;wreg free
 12814  00C4D2  0100               	movlb	0	; () banked
 12815  00C4D4  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;config_file.c: 294: if(file_number==0xFF)
 12819  00C4D6  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12820  00C4D8  A4D8               	btfss	status,2,c
 12821  00C4DA  D015               	goto	l2967
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12825  00C4DC  0EC0               	movlw	low _configFile_used_name
 12826  00C4DE  6FAC               	movwf	fat_create_file@name& (0+255),b
 12827  00C4E0  0E02               	movlw	high _configFile_used_name
 12828  00C4E2  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12829  00C4E4  0ED0               	movlw	low _configFile_used_extention
 12830  00C4E6  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12831  00C4E8  0E02               	movlw	high _configFile_used_extention
 12832  00C4EA  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12833  00C4EC  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12834  00C4F0  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12835  00C4F4  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12836  00C4F8  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12837  00C4FC  ECB9  F081         	call	_fat_create_file	;wreg free
 12838  00C500  0100               	movlb	0	; () banked
 12839  00C502  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12840                           
 12841                           ;config_file.c: 297: }
 12842  00C504  D00B               	goto	l2968
 12843  00C506                     l2967:
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 12847                           
 12848                           ; BSR set to: 0
 12849  00C506  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12850  00C50A  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12851  00C50E  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12852  00C512  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12853  00C516  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12854  00C518  EC71  F089         	call	_fat_resize_file
 12855  00C51C                     l2968:
 12856                           
 12857                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12858  00C51C  0E00               	movlw	0
 12859  00C51E  0100               	movlb	0	; () banked
 12860  00C520  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12861  00C522  0E00               	movlw	0
 12862  00C524  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12863  00C526  0E00               	movlw	0
 12864  00C528  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12865  00C52A  0E00               	movlw	0
 12866  00C52C  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12867  00C52E  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12868  00C532  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12869  00C536  0E00               	movlw	low _ConfigFile_buffer
 12870  00C538  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12871  00C53A  0E08               	movlw	high _ConfigFile_buffer
 12872  00C53C  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12873  00C53E  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12874  00C540  ECE0  F072         	call	_fat_modify_file
 12875  00C544  0012               	return		;funcret
 12876  00C546                     __end_of_configFile_write:
 12877                           	opt stack 0
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           postinc0	equ	0xFEE
 12885                           wreg	equ	0xFE8
 12886                           postdec1	equ	0xFE5
 12887                           plusw1	equ	0xFE3
 12888                           fsr1h	equ	0xFE2
 12889                           fsr1l	equ	0xFE1
 12890                           indf2	equ	0xFDF
 12891                           postinc2	equ	0xFDE
 12892                           plusw2	equ	0xFDB
 12893                           fsr2h	equ	0xFDA
 12894                           fsr2l	equ	0xFD9
 12895                           status	equ	0xFD8
 12896                           
 12897 ;; *************** function _fat_resize_file *****************
 12898 ;; Defined at:
 12899 ;;		line 910 in file "fat16.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  file_number     1    wreg     unsigned char 
 12902 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  file_number     1   90[BANK0 ] unsigned char 
 12905 ;;  root           32   91[BANK0 ] struct .
 12906 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12907 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12908 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      unsigned char 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12919 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12920 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12921 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12922 ;;Total ram usage:       47 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:   17
 12925 ;; This function calls:
 12926 ;;		__make_cluster_chain
 12927 ;;		__root_is_available
 12928 ;;		__write_root
 12929 ;;		_fat_get_file_information
 12930 ;; This function is called by:
 12931 ;;		_configFile_write
 12932 ;;		_fat_append_to_file
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           	psect	text40
 12937  0112E2                     __ptext40:
 12938                           	opt stack 0
 12939  0112E2                     _fat_resize_file:
 12940                           	opt stack 11
 12941                           
 12942                           ;incstack = 0
 12943                           ;fat_resize_file@file_number stored from wreg
 12944  0112E2  0100               	movlb	0	; () banked
 12945  0112E4  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12946                           
 12947                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 12948  0112E6  0E3F               	movlw	63
 12949  0112E8  0100               	movlb	0	; () banked
 12950  0112EA  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12951  0112EC  D002               	goto	l1900
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 12955  0112EE  0EFF               	movlw	255
 12956                           
 12957                           ; BSR set to: 0
 12958  0112F0  0012               	return	
 12959  0112F2                     l1900:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 12963                           
 12964                           ; BSR set to: 0
 12965  0112F2  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12966  0112F4  EC16  F0A0         	call	__root_is_available
 12967  0112F8  0900               	iorlw	0
 12968  0112FA  B4D8               	btfsc	status,2,c
 12969  0112FC  D002               	goto	l1902
 12970                           
 12971                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 12972  0112FE  0EFE               	movlw	254
 12973  011300  0012               	return	
 12974  011302                     l1902:
 12975                           
 12976                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 12977  011302  0EBB               	movlw	low fat_resize_file@root
 12978  011304  0100               	movlb	0	; () banked
 12979  011306  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12980  011308  0E00               	movlw	high fat_resize_file@root
 12981  01130A  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12982  01130C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12983  01130E  EC10  F09E         	call	_fat_get_file_information
 12984                           
 12985                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12986  011312  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12987  011316  0EFF               	movlw	255
 12988  011318  24DE               	addwf	postinc2,w,c
 12989  01131A  0100               	movlb	0	; () banked
 12990  01131C  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12991  01131E  0E01               	movlw	1
 12992  011320  20DE               	addwfc	postinc2,w,c
 12993  011322  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12994  011324  0E00               	movlw	0
 12995  011326  20DE               	addwfc	postinc2,w,c
 12996  011328  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12997  01132A  0E00               	movlw	0
 12998  01132C  20DE               	addwfc	postinc2,w,c
 12999  01132E  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13000  011330  0E0A               	movlw	10
 13001  011332  D005               	goto	u14410
 13002  011334                     u14415:
 13003  011334  90D8               	bcf	status,0,c
 13004  011336  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13005  011338  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13006  01133A  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13007  01133C  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13008  01133E                     u14410:
 13009  01133E  2EE8               	decfsz	wreg,f,c
 13010  011340  D7F9               	goto	u14415
 13011  011342  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 13012  011346  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 13016  01134A  0EFF               	movlw	255
 13017  01134C  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 13018  01134E  6FB0               	movwf	??_fat_resize_file& (0+255),b
 13019  011350  0E01               	movlw	1
 13020  011352  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 13021  011354  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 13022  011356  0E00               	movlw	0
 13023  011358  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 13024  01135A  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 13025  01135C  0E00               	movlw	0
 13026  01135E  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 13027  011360  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13028  011362  0E0A               	movlw	10
 13029  011364  D005               	goto	u14420
 13030  011366                     u14425:
 13031  011366  90D8               	bcf	status,0,c
 13032  011368  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13033  01136A  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13034  01136C  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13035  01136E  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13036  011370                     u14420:
 13037  011370  2EE8               	decfsz	wreg,f,c
 13038  011372  D7F9               	goto	u14425
 13039  011374  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 13040  011378  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 13044  01137C  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 13045  01137E  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 13046  011380  E104               	bnz	u14430
 13047  011382  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 13048  011384  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 13049  011386  B4D8               	btfsc	status,2,c
 13050  011388  D01A               	goto	l1903
 13051  01138A                     u14430:
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 13055  01138A  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 13056  01138E  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 13057  011392  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 13058  011396  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 13059  01139A  EC6B  F06C         	call	__make_cluster_chain	;wreg free
 13060  01139E  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 13061  0113A2  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 13062                           
 13063                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 13064  0113A6  0100               	movlb	0	; () banked
 13065  0113A8  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 13066  0113AA  E105               	bnz	l1904
 13067  0113AC  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 13068  0113AE  A4D8               	btfss	status,2,c
 13069  0113B0  D002               	goto	l1904
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 13073  0113B2  0EFD               	movlw	253
 13074                           
 13075                           ; BSR set to: 0
 13076  0113B4  0012               	return	
 13077  0113B6                     l1904:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 13081  0113B6  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 13082  0113BA  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 13083  0113BE                     l1903:
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 13087  0113BE  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 13088  0113C2  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 13089  0113C6  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 13090  0113CA  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;fat16.c: 956: _write_root(file_number, &root);
 13094  0113CE  0EBB               	movlw	low fat_resize_file@root
 13095  0113D0  6F88               	movwf	__write_root@data& (0+255),b
 13096  0113D2  0E00               	movlw	high fat_resize_file@root
 13097  0113D4  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13098  0113D6  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 13099  0113D8  EC99  F0A6         	call	__write_root
 13100                           
 13101                           ;fat16.c: 959: return 0x00;
 13102  0113DC  0E00               	movlw	0
 13103  0113DE  0012               	return	
 13104  0113E0                     __end_of_fat_resize_file:
 13105                           	opt stack 0
 13106                           tblptru	equ	0xFF8
 13107                           tblptrh	equ	0xFF7
 13108                           tblptrl	equ	0xFF6
 13109                           tablat	equ	0xFF5
 13110                           prodh	equ	0xFF4
 13111                           prodl	equ	0xFF3
 13112                           postinc0	equ	0xFEE
 13113                           wreg	equ	0xFE8
 13114                           postdec1	equ	0xFE5
 13115                           plusw1	equ	0xFE3
 13116                           fsr1h	equ	0xFE2
 13117                           fsr1l	equ	0xFE1
 13118                           indf2	equ	0xFDF
 13119                           postinc2	equ	0xFDE
 13120                           plusw2	equ	0xFDB
 13121                           fsr2h	equ	0xFDA
 13122                           fsr2l	equ	0xFD9
 13123                           status	equ	0xFD8
 13124                           
 13125 ;; *************** function _fat_modify_file *****************
 13126 ;; Defined at:
 13127 ;;		line 962 in file "fat16.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  file_number     1    wreg     unsigned char 
 13130 ;;  start_byte      4   65[BANK0 ] unsigned long 
 13131 ;;  length          2   69[BANK0 ] unsigned int 
 13132 ;;  data            2   71[BANK0 ] PTR unsigned char 
 13133 ;;		 -> ConfigFile_buffer(512), 
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  file_number     1   87[BANK0 ] unsigned char 
 13136 ;;  root           32   99[BANK0 ] struct .
 13137 ;;  position        4   95[BANK0 ] unsigned long 
 13138 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 13139 ;;  offset          2   91[BANK0 ] unsigned int 
 13140 ;;  cluster         2   89[BANK0 ] unsigned int 
 13141 ;;  sector          2   85[BANK0 ] unsigned int 
 13142 ;;  return_code     1   88[BANK0 ] unsigned char 
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      unsigned char 
 13145 ;; Registers used:
 13146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13152 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13153 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13154 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;Total ram usage:       66 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:   17
 13159 ;; This function calls:
 13160 ;;		__data_sector_from_cluster
 13161 ;;		__find_nth_cluster
 13162 ;;		__read_fat
 13163 ;;		_fat_get_file_information
 13164 ;;		_flash_partial_write
 13165 ;; This function is called by:
 13166 ;;		_configFile_write
 13167 ;;		_fat_append_to_file
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           	psect	text41
 13172  00E5C0                     __ptext41:
 13173                           	opt stack 0
 13174  00E5C0                     _fat_modify_file:
 13175                           	opt stack 11
 13176                           
 13177                           ;incstack = 0
 13178                           ;fat_modify_file@file_number stored from wreg
 13179  00E5C0  0100               	movlb	0	; () banked
 13180  00E5C2  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 13181                           
 13182                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 13183  00E5C4  0EC3               	movlw	low fat_modify_file@root
 13184  00E5C6  0100               	movlb	0	; () banked
 13185  00E5C8  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 13186  00E5CA  0E00               	movlw	high fat_modify_file@root
 13187  00E5CC  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 13188  00E5CE  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 13189  00E5D0  EC10  F09E         	call	_fat_get_file_information
 13190  00E5D4  0100               	movlb	0	; () banked
 13191  00E5D6  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;fat16.c: 974: if(return_code!=0x00)
 13195  00E5D8  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 13196  00E5DA  A4D8               	btfss	status,2,c
 13197  00E5DC  0012               	return	
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 13201                           
 13202                           ; BSR set to: 0
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;fat16.c: 975: {;fat16.c: 977: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 13206  00E5DE  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13207  00E5E0  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13208  00E5E2  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13209  00E5E4  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13210  00E5E6  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13211  00E5E8  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13212  00E5EA  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13213  00E5EC  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13214  00E5EE  A0D8               	btfss	status,0,c
 13215  00E5F0  0012               	return	
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 13219                           
 13220                           ; BSR set to: 0
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 13224  00E5F2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13225  00E5F4  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 13226  00E5F6  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13227  00E5F8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13228  00E5FA  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 13229  00E5FC  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13230  00E5FE  0E00               	movlw	0
 13231  00E600  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 13232  00E602  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 13233  00E604  0E00               	movlw	0
 13234  00E606  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 13235  00E608  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 13236  00E60A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13237  00E60C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13238  00E60E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13239  00E610  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13240  00E612  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13241  00E614  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13242  00E616  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13243  00E618  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13244  00E61A  B0D8               	btfsc	status,0,c
 13245  00E61C  D00E               	goto	l1910
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 13249  00E61E  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13250  00E622  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13251  00E626  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13252  00E628  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13253  00E62A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13254  00E62C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13255  00E62E  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 13256  00E630  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13257  00E632  6FA5               	movwf	fat_modify_file@length& (0+255),b
 13258  00E634  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 13259  00E636  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13260  00E638  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 13261  00E63A                     l1910:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 13265                           
 13266                           ; BSR set to: 0
 13267  00E63A  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 13268  00E63E  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 13269  00E642  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13270  00E646  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13271  00E64A  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 13272  00E64E  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 13273  00E652  0E0A               	movlw	10
 13274  00E654  D005               	goto	u14480
 13275  00E656                     u14485:
 13276  00E656  90D8               	bcf	status,0,c
 13277  00E658  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 13278  00E65A  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 13279  00E65C  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 13280  00E65E  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 13281  00E660                     u14480:
 13282  00E660  2EE8               	decfsz	wreg,f,c
 13283  00E662  D7F9               	goto	u14485
 13284  00E664  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 13285  00E668  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 13286  00E66C  EC0A  F099         	call	__find_nth_cluster	;wreg free
 13287  00E670  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 13288  00E674  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 13289                           
 13290                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 13291  00E678  0E00               	movlw	0
 13292  00E67A  0100               	movlb	0	; () banked
 13293  00E67C  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 13294  00E67E  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13295  00E680  0EFE               	movlw	254
 13296  00E682  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13297  00E684  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13298  00E686  0EFF               	movlw	255
 13299  00E688  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13300  00E68A  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13301  00E68C  0EFF               	movlw	255
 13302  00E68E  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13303  00E690  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 13307  00E692  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13308  00E696  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13309  00E69A  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13310  00E69C  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13311  00E69E  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13312  00E6A0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13313  00E6A2  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13314  00E6A4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13315  00E6A6  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13316  00E6A8  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13317  00E6AA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13318  00E6AC  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;fat16.c: 1003: position = 0;
 13322  00E6AE  0E00               	movlw	0
 13323  00E6B0  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13324  00E6B2  0E00               	movlw	0
 13325  00E6B4  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13326  00E6B6  0E00               	movlw	0
 13327  00E6B8  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13328  00E6BA  0E00               	movlw	0
 13329  00E6BC  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13330                           
 13331                           ;fat16.c: 1004: while(position < length)
 13332  00E6BE  D089               	goto	l1911
 13333  00E6C0                     
 13334                           ; BSR set to: 0
 13335                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 13336                           
 13337                           ; BSR set to: 0
 13338  00E6C0  0E02               	movlw	2
 13339  00E6C2  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 13340  00E6C4  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 13341  00E6C6  A4D8               	btfss	status,2,c
 13342  00E6C8  D00F               	goto	l1913
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 13346  00E6CA  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 13347  00E6CE  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 13348  00E6D2  ECA7  F0A3         	call	__read_fat	;wreg free
 13349  00E6D6  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 13350  00E6DA  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 13351                           
 13352                           ;fat16.c: 1012: offset = 0;
 13353  00E6DE  0E00               	movlw	0
 13354  00E6E0  0100               	movlb	0	; () banked
 13355  00E6E2  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13356  00E6E4  0E00               	movlw	0
 13357  00E6E6  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13358  00E6E8                     l1913:
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 13362                           
 13363                           ; BSR set to: 0
 13364  00E6E8  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 13365  00E6EC  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 13366  00E6F0  EC58  F0AC         	call	__data_sector_from_cluster	;wreg free
 13367  00E6F4  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 13368  00E6F8  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 13369                           
 13370                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 13371  00E6FC  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 13372  00E700  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 13373  00E704  0100               	movlb	0	; () banked
 13374  00E706  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13375  00E708  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13376  00E70A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13377  00E70C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13378  00E70E  0E00               	movlw	0
 13379  00E710  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13380  00E712  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13381  00E714  0E02               	movlw	2
 13382  00E716  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13383  00E718  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 13387  00E71A  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13388  00E71C  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13389  00E71E  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13390  00E720  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13391  00E722  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13392  00E724  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13393  00E726  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 13394  00E72A  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 13395  00E72E  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 13396  00E732  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 13397  00E736  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 13398  00E738  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 13399  00E73A  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 13400  00E73C  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 13401  00E73E  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 13402  00E740  0E00               	movlw	0
 13403  00E742  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 13404  00E744  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 13405  00E746  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 13406  00E748  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13407  00E74A  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 13408  00E74C  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 13409  00E74E  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13410  00E750  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 13411  00E752  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 13412  00E754  0E00               	movlw	0
 13413  00E756  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 13414  00E758  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 13415  00E75A  0E00               	movlw	0
 13416  00E75C  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 13417  00E75E  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 13418  00E760  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13419  00E762  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 13420  00E764  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13421  00E766  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 13422  00E768  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13423  00E76A  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 13424  00E76C  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13425  00E76E  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 13426  00E770  B0D8               	btfsc	status,0,c
 13427  00E772  D00E               	goto	l1914
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 13431  00E774  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13432  00E778  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13433  00E77C  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13434  00E77E  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13435  00E780  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13436  00E782  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13437  00E784  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13438  00E786  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13439  00E788  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13440  00E78A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13441  00E78C  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13442  00E78E  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13443  00E790                     l1914:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 13447                           
 13448                           ; BSR set to: 0
 13449  00E790  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 13450  00E794  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 13451  00E798  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 13452  00E79C  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 13453  00E7A0  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 13454  00E7A4  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 13455  00E7A8  51BF               	movf	fat_modify_file@position& (0+255),w,b
 13456  00E7AA  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 13457  00E7AC  6F85               	movwf	flash_partial_write@data& (0+255),b
 13458  00E7AE  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 13459  00E7B0  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 13460  00E7B2  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 13461  00E7B4  ECE0  F09F         	call	_flash_partial_write	;wreg free
 13462                           
 13463                           ;fat16.c: 1029: position += number_of_bytes;
 13464  00E7B8  0100               	movlb	0	; () banked
 13465  00E7BA  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13466  00E7BC  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 13467  00E7BE  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13468  00E7C0  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 13469  00E7C2  0E00               	movlw	0
 13470  00E7C4  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 13471  00E7C6  0E00               	movlw	0
 13472  00E7C8  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;fat16.c: 1030: offset += number_of_bytes;
 13476  00E7CA  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13477  00E7CC  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 13478  00E7CE  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13479  00E7D0  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 13480  00E7D2                     l1911:
 13481                           
 13482                           ; BSR set to: 0
 13483                           
 13484                           ; BSR set to: 0
 13485  00E7D2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13486  00E7D4  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13487  00E7D6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13488  00E7D8  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13489  00E7DA  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13490  00E7DC  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13491  00E7DE  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13492  00E7E0  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 13493  00E7E2  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13494  00E7E4  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 13495  00E7E6  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13496  00E7E8  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 13497  00E7EA  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13498  00E7EC  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 13499  00E7EE  B0D8               	btfsc	status,0,c
 13500  00E7F0  0012               	return	
 13501  00E7F2  D766               	goto	l1912
 13502  00E7F4                     __end_of_fat_modify_file:
 13503                           	opt stack 0
 13504                           tblptru	equ	0xFF8
 13505                           tblptrh	equ	0xFF7
 13506                           tblptrl	equ	0xFF6
 13507                           tablat	equ	0xFF5
 13508                           prodh	equ	0xFF4
 13509                           prodl	equ	0xFF3
 13510                           postinc0	equ	0xFEE
 13511                           wreg	equ	0xFE8
 13512                           postdec1	equ	0xFE5
 13513                           plusw1	equ	0xFE3
 13514                           fsr1h	equ	0xFE2
 13515                           fsr1l	equ	0xFE1
 13516                           indf2	equ	0xFDF
 13517                           postinc2	equ	0xFDE
 13518                           plusw2	equ	0xFDB
 13519                           fsr2h	equ	0xFDA
 13520                           fsr2l	equ	0xFD9
 13521                           status	equ	0xFD8
 13522                           
 13523 ;; *************** function _fat_create_file *****************
 13524 ;; Defined at:
 13525 ;;		line 586 in file "fat16.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  name            2   76[BANK0 ] PTR unsigned char 
 13528 ;;		 -> configFile_used_name(8), 
 13529 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 13530 ;;		 -> configFile_used_extention(3), 
 13531 ;;  size            4   80[BANK0 ] unsigned long 
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;  root_entry     32   93[BANK0 ] struct .
 13534 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 13535 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 13536 ;;  file_number     1   92[BANK0 ] unsigned char 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1    wreg      unsigned char 
 13539 ;; Registers used:
 13540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13546 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13547 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13549 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13550 ;;Total ram usage:       49 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:   17
 13553 ;; This function calls:
 13554 ;;		__get_available_root_entry
 13555 ;;		__get_date
 13556 ;;		__get_time
 13557 ;;		__make_cluster_chain
 13558 ;;		__write_root
 13559 ;;		_fat_find_file
 13560 ;;		_memcpy
 13561 ;; This function is called by:
 13562 ;;		_configFile_write
 13563 ;;		_fat_copy_file
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           	psect	text42
 13568  010372                     __ptext42:
 13569                           	opt stack 0
 13570  010372                     _fat_create_file:
 13571                           	opt stack 11
 13572                           
 13573                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;incstack = 0
 13577  010372  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 13578  010376  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 13579  01037A  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 13580  01037E  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13581  010382  EC48  F08D         	call	_fat_find_file	;wreg free
 13582  010386  0AFF               	xorlw	255
 13583  010388  B4D8               	btfsc	status,2,c
 13584  01038A  D002               	goto	l1849
 13585                           
 13586                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 13587  01038C  0EFF               	movlw	255
 13588  01038E  0012               	return	
 13589  010390                     l1849:
 13590                           
 13591                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 13592  010390  EC9E  F0AA         	call	__get_available_root_entry	;wreg free
 13593  010394  0100               	movlb	0	; () banked
 13594  010396  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;fat16.c: 605: if(file_number == 0xFF)
 13598  010398  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 13599  01039A  A4D8               	btfss	status,2,c
 13600  01039C  D002               	goto	l1851
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 13604  01039E  0EFE               	movlw	254
 13605                           
 13606                           ; BSR set to: 0
 13607  0103A0  0012               	return	
 13608  0103A2                     l1851:
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 13612                           
 13613                           ; BSR set to: 0
 13614  0103A2  0EFF               	movlw	255
 13615  0103A4  25B0               	addwf	fat_create_file@size& (0+255),w,b
 13616  0103A6  6FB4               	movwf	??_fat_create_file& (0+255),b
 13617  0103A8  0E01               	movlw	1
 13618  0103AA  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13619  0103AC  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13620  0103AE  0E00               	movlw	0
 13621  0103B0  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13622  0103B2  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13623  0103B4  0E00               	movlw	0
 13624  0103B6  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13625  0103B8  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13626  0103BA  0E0A               	movlw	10
 13627  0103BC  D005               	goto	u14370
 13628  0103BE                     u14375:
 13629  0103BE  90D8               	bcf	status,0,c
 13630  0103C0  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13631  0103C2  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13632  0103C4  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13633  0103C6  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13634  0103C8                     u14370:
 13635  0103C8  2EE8               	decfsz	wreg,f,c
 13636  0103CA  D7F9               	goto	u14375
 13637  0103CC  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13638  0103D0  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13642  0103D4  0E00               	movlw	0
 13643  0103D6  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13644  0103D8  0E00               	movlw	0
 13645  0103DA  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13646  0103DC  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13647  0103E0  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13648  0103E4  EC6B  F06C         	call	__make_cluster_chain	;wreg free
 13649  0103E8  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13650  0103EC  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13651                           
 13652                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 13653  0103F0  0100               	movlb	0	; () banked
 13654  0103F2  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13655  0103F4  E105               	bnz	l15578
 13656  0103F6  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13657  0103F8  A4D8               	btfss	status,2,c
 13658  0103FA  D002               	goto	l1852
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 13662  0103FC  0EFD               	movlw	253
 13663                           
 13664                           ; BSR set to: 0
 13665  0103FE  0012               	return	
 13666  010400                     l1852:
 13667  010400                     l15578:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 13671  010400  0EBD               	movlw	low fat_create_file@root_entry
 13672  010402  6F60               	movwf	memcpy@d1& (0+255),b
 13673  010404  0E00               	movlw	high fat_create_file@root_entry
 13674  010406  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13675  010408  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13676  01040C  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13677  010410  0E00               	movlw	0
 13678  010412  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13679  010414  0E08               	movlw	8
 13680  010416  6F64               	movwf	memcpy@n& (0+255),b
 13681  010418  ECDD  F0A1         	call	_memcpy	;wreg free
 13682                           
 13683                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 13684  01041C  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13685  01041E  0100               	movlb	0	; () banked
 13686  010420  6F60               	movwf	memcpy@d1& (0+255),b
 13687  010422  0E00               	movlw	high (fat_create_file@root_entry+8)
 13688  010424  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13689  010426  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13690  01042A  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13691  01042E  0E00               	movlw	0
 13692  010430  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13693  010432  0E03               	movlw	3
 13694  010434  6F64               	movwf	memcpy@n& (0+255),b
 13695  010436  ECDD  F0A1         	call	_memcpy	;wreg free
 13696                           
 13697                           ;fat16.c: 629: root_entry.attributes = 0x00;
 13698  01043A  0E00               	movlw	0
 13699  01043C  0100               	movlb	0	; () banked
 13700  01043E  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 13704  010440  0E00               	movlw	0
 13705  010442  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 13709  010444  0E00               	movlw	0
 13710  010446  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 13714  010448  EC6F  F0AC         	call	__get_time	;wreg free
 13715  01044C  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13716  010450  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13717                           
 13718                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 13719  010454  EC75  F0AC         	call	__get_date	;wreg free
 13720  010458  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13721  01045C  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13722                           
 13723                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 13724  010460  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13725  010464  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13726                           
 13727                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 13728  010468  0E00               	movlw	0
 13729  01046A  0100               	movlb	0	; () banked
 13730  01046C  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13731  01046E  0E00               	movlw	0
 13732  010470  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 13736  010472  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13737  010476  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 13741  01047A  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13742  01047E  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 13746  010482  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13747  010486  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;fat16.c: 639: root_entry.fileSize = size;
 13751  01048A  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13752  01048E  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13753  010492  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13754  010496  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 13758  01049A  0EBD               	movlw	low fat_create_file@root_entry
 13759  01049C  6F88               	movwf	__write_root@data& (0+255),b
 13760  01049E  0E00               	movlw	high fat_create_file@root_entry
 13761  0104A0  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13762  0104A2  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13763  0104A4  EC99  F0A6         	call	__write_root
 13764                           
 13765                           ;fat16.c: 644: return file_number;
 13766  0104A8  0100               	movlb	0	; () banked
 13767  0104AA  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13768  0104AC  0012               	return	
 13769  0104AE                     __end_of_fat_create_file:
 13770                           	opt stack 0
 13771                           tblptru	equ	0xFF8
 13772                           tblptrh	equ	0xFF7
 13773                           tblptrl	equ	0xFF6
 13774                           tablat	equ	0xFF5
 13775                           prodh	equ	0xFF4
 13776                           prodl	equ	0xFF3
 13777                           postinc0	equ	0xFEE
 13778                           wreg	equ	0xFE8
 13779                           postdec1	equ	0xFE5
 13780                           plusw1	equ	0xFE3
 13781                           fsr1h	equ	0xFE2
 13782                           fsr1l	equ	0xFE1
 13783                           indf2	equ	0xFDF
 13784                           postinc2	equ	0xFDE
 13785                           plusw2	equ	0xFDB
 13786                           fsr2h	equ	0xFDA
 13787                           fsr2l	equ	0xFD9
 13788                           status	equ	0xFD8
 13789                           
 13790 ;; *************** function __write_root *****************
 13791 ;; Defined at:
 13792 ;;		line 473 in file "fat16.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  file_number     1    wreg     unsigned char 
 13795 ;;  data            2   40[BANK0 ] PTR struct .
 13796 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  file_number     1   46[BANK0 ] unsigned char 
 13799 ;;  offset          2   44[BANK0 ] unsigned int 
 13800 ;;  sector          2   42[BANK0 ] unsigned int 
 13801 ;; Return value:  Size  Location     Type
 13802 ;;                  1    wreg      void 
 13803 ;; Registers used:
 13804 ;;		wreg, status,2, status,0, cstack
 13805 ;; Tracked objects:
 13806 ;;		On entry : 0/0
 13807 ;;		On exit  : 0/0
 13808 ;;		Unchanged: 0/0
 13809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13814 ;;Total ram usage:        7 bytes
 13815 ;; Hardware stack levels used:    1
 13816 ;; Hardware stack levels required when called:   15
 13817 ;; This function calls:
 13818 ;;		__offset_from_file_number
 13819 ;;		__sector_from_file_number
 13820 ;;		_flash_partial_write
 13821 ;; This function is called by:
 13822 ;;		_fat_create_file
 13823 ;;		_fat_resize_file
 13824 ;;		_fat_rename_file
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           	psect	text43
 13829  014D32                     __ptext43:
 13830                           	opt stack 0
 13831  014D32                     __write_root:
 13832                           	opt stack 12
 13833                           
 13834                           ;incstack = 0
 13835                           ;__write_root@file_number stored from wreg
 13836  014D32  0100               	movlb	0	; () banked
 13837  014D34  6F8E               	movwf	__write_root@file_number& (0+255),b
 13838                           
 13839                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 13840  014D36  0100               	movlb	0	; () banked
 13841  014D38  518E               	movf	__write_root@file_number& (0+255),w,b
 13842  014D3A  ECA4  F0A9         	call	__sector_from_file_number
 13843  014D3E  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13844  014D42  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13845                           
 13846                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 13847  014D46  0100               	movlb	0	; () banked
 13848  014D48  518E               	movf	__write_root@file_number& (0+255),w,b
 13849  014D4A  ECB3  F0AA         	call	__offset_from_file_number
 13850  014D4E  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13851  014D52  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13852                           
 13853                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 13854  014D56  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13855  014D5A  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13856  014D5E  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13857  014D62  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13858  014D66  0E00               	movlw	0
 13859  014D68  0100               	movlb	0	; () banked
 13860  014D6A  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13861  014D6C  0E20               	movlw	32
 13862  014D6E  6F83               	movwf	flash_partial_write@length& (0+255),b
 13863  014D70  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13864  014D74  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13865  014D78  ECE0  F09F         	call	_flash_partial_write	;wreg free
 13866  014D7C  0012               	return		;funcret
 13867  014D7E                     __end_of__write_root:
 13868                           	opt stack 0
 13869                           tblptru	equ	0xFF8
 13870                           tblptrh	equ	0xFF7
 13871                           tblptrl	equ	0xFF6
 13872                           tablat	equ	0xFF5
 13873                           prodh	equ	0xFF4
 13874                           prodl	equ	0xFF3
 13875                           postinc0	equ	0xFEE
 13876                           wreg	equ	0xFE8
 13877                           postdec1	equ	0xFE5
 13878                           plusw1	equ	0xFE3
 13879                           fsr1h	equ	0xFE2
 13880                           fsr1l	equ	0xFE1
 13881                           indf2	equ	0xFDF
 13882                           postinc2	equ	0xFDE
 13883                           plusw2	equ	0xFDB
 13884                           fsr2h	equ	0xFDA
 13885                           fsr2l	equ	0xFD9
 13886                           status	equ	0xFD8
 13887                           
 13888 ;; *************** function _flash_partial_write *****************
 13889 ;; Defined at:
 13890 ;;		line 460 in file "flash.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  page            2   31[BANK0 ] unsigned int 
 13893 ;;  start           2   33[BANK0 ] unsigned int 
 13894 ;;  length          2   35[BANK0 ] unsigned int 
 13895 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13896 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13897 ;;		 -> _delete_root@deleted_value(1), 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  match           1   39[BANK0 ] enum E7004
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      void 
 13902 ;; Registers used:
 13903 ;;		wreg, status,2, status,0, cstack
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/0
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13909 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13912 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13913 ;;Total ram usage:        9 bytes
 13914 ;; Hardware stack levels used:    1
 13915 ;; Hardware stack levels required when called:   14
 13916 ;; This function calls:
 13917 ;;		__flash_compare_page_to_buffer
 13918 ;;		__flash_copy_page_to_buffer
 13919 ;;		__flash_is_busy
 13920 ;;		__flash_write_page_from_buffer
 13921 ;;		__flash_write_to_buffer
 13922 ;; This function is called by:
 13923 ;;		__write_root
 13924 ;;		_fat_modify_file
 13925 ;;		__delete_root
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text44
 13930  013FC0                     __ptext44:
 13931                           	opt stack 0
 13932  013FC0                     _flash_partial_write:
 13933                           	opt stack 12
 13934                           
 13935                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13936                           
 13937                           ;incstack = 0
 13938  013FC0  EC62  F0AB         	call	__flash_is_busy	;wreg free
 13939  013FC4  0900               	iorlw	0
 13940  013FC6  A4D8               	btfss	status,2,c
 13941  013FC8  D7FB               	goto	_flash_partial_write
 13942                           
 13943                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13944  013FCA  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13945  013FCE  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13946  013FD2  0E00               	movlw	0
 13947  013FD4  0100               	movlb	0	; () banked
 13948  013FD6  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13949  013FD8  EC9A  F0A2         	call	__flash_copy_page_to_buffer	;wreg free
 13950                           
 13951                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13952  013FDC  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13953  013FE0  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13954  013FE4  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13955  013FE8  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13956  013FEC  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13957  013FF0  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13958  013FF4  0E00               	movlw	0
 13959  013FF6  0100               	movlb	0	; () banked
 13960  013FF8  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13961  013FFA  EC81  F0A5         	call	__flash_write_to_buffer	;wreg free
 13962                           
 13963                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13964  013FFE  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13965  014002  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13966  014006  0E00               	movlw	0
 13967  014008  0100               	movlb	0	; () banked
 13968  01400A  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13969  01400C  ECD2  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 13970  014010  0100               	movlb	0	; () banked
 13971  014012  6F87               	movwf	flash_partial_write@match& (0+255),b
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13975  014014  0587               	decf	flash_partial_write@match& (0+255),w,b
 13976  014016  A4D8               	btfss	status,2,c
 13977  014018  0012               	return	
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13981  01401A  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13982  01401E  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13983  014022  0E00               	movlw	0
 13984  014024  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13985  014026  EC21  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 13986  01402A  0012               	return	
 13987  01402C                     __end_of_flash_partial_write:
 13988                           	opt stack 0
 13989                           tblptru	equ	0xFF8
 13990                           tblptrh	equ	0xFF7
 13991                           tblptrl	equ	0xFF6
 13992                           tablat	equ	0xFF5
 13993                           prodh	equ	0xFF4
 13994                           prodl	equ	0xFF3
 13995                           postinc0	equ	0xFEE
 13996                           wreg	equ	0xFE8
 13997                           postdec1	equ	0xFE5
 13998                           plusw1	equ	0xFE3
 13999                           fsr1h	equ	0xFE2
 14000                           fsr1l	equ	0xFE1
 14001                           indf2	equ	0xFDF
 14002                           postinc2	equ	0xFDE
 14003                           plusw2	equ	0xFDB
 14004                           fsr2h	equ	0xFDA
 14005                           fsr2l	equ	0xFD9
 14006                           status	equ	0xFD8
 14007                           
 14008 ;; *************** function __flash_copy_page_to_buffer *****************
 14009 ;; Defined at:
 14010 ;;		line 154 in file "flash.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;  page            2   19[BANK0 ] unsigned int 
 14013 ;;  buffer          1   21[BANK0 ] enum E7000
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;  command         4   25[BANK0 ] unsigned char [4]
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      void 
 14018 ;; Registers used:
 14019 ;;		wreg, status,2, status,0, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 0/0
 14022 ;;		On exit  : 0/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14025 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14027 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14028 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14029 ;;Total ram usage:       10 bytes
 14030 ;; Hardware stack levels used:    1
 14031 ;; Hardware stack levels required when called:   13
 14032 ;; This function calls:
 14033 ;;		__flash_is_busy
 14034 ;;		_spi_tx
 14035 ;; This function is called by:
 14036 ;;		_flash_partial_write
 14037 ;;		_flash_copy_page_to_buffer
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text45
 14042  014534                     __ptext45:
 14043                           	opt stack 0
 14044  014534                     __flash_copy_page_to_buffer:
 14045                           	opt stack 12
 14046                           
 14047                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 14048                           
 14049                           ;incstack = 0
 14050  014534  EC62  F0AB         	call	__flash_is_busy	;wreg free
 14051  014538  0900               	iorlw	0
 14052  01453A  A4D8               	btfss	status,2,c
 14053  01453C  D7FB               	goto	__flash_copy_page_to_buffer
 14054                           
 14055                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 14056  01453E  0100               	movlb	0	; () banked
 14057  014540  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14058  014542  A4D8               	btfss	status,2,c
 14059  014544  D002               	goto	l1540
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;flash.c: 163: command[0] = 0x53;
 14063  014546  0E53               	movlw	83
 14064  014548  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14065  01454A                     l1540:
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 14069                           
 14070                           ; BSR set to: 0
 14071  01454A  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14072  01454C  A4D8               	btfss	status,2,c
 14073  01454E  D002               	goto	l1541
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;flash.c: 165: command[0] = 0x55;
 14077  014550  0E55               	movlw	85
 14078  014552  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14079  014554                     l1541:
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 14083                           
 14084                           ; BSR set to: 0
 14085  014554  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 14086  014558  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 14087  01455C  0E07               	movlw	7
 14088  01455E  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 14089  014560                     u11585:
 14090  014560  90D8               	bcf	status,0,c
 14091  014562  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 14092  014564  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 14093  014566  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 14094  014568  D7FB               	goto	u11585
 14095  01456A  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 14096  01456C  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 14100  01456E  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14101  014570  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14102  014572  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 14103                           
 14104                           ;flash.c: 169: command[3] = 0x00;
 14105  014574  0E00               	movlw	0
 14106  014576  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;flash.c: 172: spi_tx(command, 4);
 14110  014578  0E79               	movlw	low __flash_copy_page_to_buffer@command
 14111  01457A  6F60               	movwf	spi_tx@data& (0+255),b
 14112  01457C  0E00               	movlw	high __flash_copy_page_to_buffer@command
 14113  01457E  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 14114  014580  0E00               	movlw	0
 14115  014582  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 14116  014584  0E04               	movlw	4
 14117  014586  6F62               	movwf	spi_tx@length& (0+255),b
 14118  014588  EC4E  F0A3         	call	_spi_tx	;wreg free
 14119  01458C  0012               	return		;funcret
 14120  01458E                     __end_of__flash_copy_page_to_buffer:
 14121                           	opt stack 0
 14122                           tblptru	equ	0xFF8
 14123                           tblptrh	equ	0xFF7
 14124                           tblptrl	equ	0xFF6
 14125                           tablat	equ	0xFF5
 14126                           prodh	equ	0xFF4
 14127                           prodl	equ	0xFF3
 14128                           postinc0	equ	0xFEE
 14129                           wreg	equ	0xFE8
 14130                           postdec1	equ	0xFE5
 14131                           plusw1	equ	0xFE3
 14132                           fsr1h	equ	0xFE2
 14133                           fsr1l	equ	0xFE1
 14134                           indf2	equ	0xFDF
 14135                           postinc2	equ	0xFDE
 14136                           plusw2	equ	0xFDB
 14137                           fsr2h	equ	0xFDA
 14138                           fsr2l	equ	0xFD9
 14139                           status	equ	0xFD8
 14140                           
 14141 ;; *************** function __make_cluster_chain *****************
 14142 ;; Defined at:
 14143 ;;		line 213 in file "fat16.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 14146 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 14147 ;; Auto vars:     Size  Location     Type
 14148 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 14149 ;;  offset          2   72[BANK0 ] unsigned int 
 14150 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 14151 ;;  sector          2   68[BANK0 ] unsigned int 
 14152 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 14153 ;;  different_se    2   63[BANK0 ] unsigned int 
 14154 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 14155 ;;  next_offset     2   59[BANK0 ] unsigned int 
 14156 ;;  data_changed    1   65[BANK0 ] unsigned char 
 14157 ;; Return value:  Size  Location     Type
 14158 ;;                  2   53[BANK0 ] unsigned int 
 14159 ;; Registers used:
 14160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14161 ;; Tracked objects:
 14162 ;;		On entry : 0/0
 14163 ;;		On exit  : 0/0
 14164 ;;		Unchanged: 0/0
 14165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14167 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14169 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14170 ;;Total ram usage:       23 bytes
 14171 ;; Hardware stack levels used:    1
 14172 ;; Hardware stack levels required when called:   16
 14173 ;; This function calls:
 14174 ;;		__fat_offset_from_cluster
 14175 ;;		__fat_sector_from_cluster
 14176 ;;		__get_available_cluster
 14177 ;;		__get_available_offset_from_buffer
 14178 ;;		__read_value_from_offset
 14179 ;;		__write_value_to_offset
 14180 ;;		_flash_sector_read
 14181 ;;		_flash_sector_write
 14182 ;; This function is called by:
 14183 ;;		_fat_create_file
 14184 ;;		_fat_resize_file
 14185 ;;		_fat_delete_file
 14186 ;; This function uses a non-reentrant model
 14187 ;;
 14188                           
 14189                           	psect	text46
 14190  00D8D6                     __ptext46:
 14191                           	opt stack 0
 14192  00D8D6                     __make_cluster_chain:
 14193                           	opt stack 11
 14194                           
 14195                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 14196                           
 14197                           ;incstack = 0
 14198  00D8D6  0E00               	movlw	0
 14199  00D8D8  0100               	movlb	0	; () banked
 14200  00D8DA  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 14201  00D8DC  0E00               	movlw	0
 14202  00D8DE  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 14206  00D8E0  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 14207  00D8E4  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 14208                           
 14209                           ;fat16.c: 228: minimum_sector = 2;
 14210  00D8E8  0E00               	movlw	0
 14211  00D8EA  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 14212  00D8EC  0E02               	movlw	2
 14213  00D8EE  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 14214                           
 14215                           ;fat16.c: 229: data_changed = 0;
 14216  00D8F0  0E00               	movlw	0
 14217  00D8F2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 14221  00D8F4  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14222  00D8F6  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14223  00D8F8  A4D8               	btfss	status,2,c
 14224  00D8FA  D024               	goto	l1774
 14225                           
 14226                           ; BSR set to: 0
 14227  00D8FC  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14228  00D8FE  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14229  00D900  B4D8               	btfsc	status,2,c
 14230  00D902  D020               	goto	l1774
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 14234  00D904  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14235  00D908  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14236  00D90C  0E00               	movlw	0
 14237  00D90E  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 14238  00D910  0E00               	movlw	0
 14239  00D912  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 14240  00D914  EC54  F093         	call	__get_available_cluster	;wreg free
 14241  00D918  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 14242  00D91C  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 14243                           
 14244                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 14245  00D920  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 14246  00D924  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 14247  00D928  ECE5  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14248  00D92C  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14249  00D930  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14250                           
 14251                           ;fat16.c: 237: if(first_cluster == 0)
 14252  00D934  0100               	movlb	0	; () banked
 14253  00D936  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14254  00D938  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14255  00D93A  A4D8               	btfss	status,2,c
 14256  00D93C  D003               	goto	l1774
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 14260  00D93E  6995               	setf	?__make_cluster_chain& (0+255),b
 14261  00D940  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14262  00D942  0012               	return	
 14263  00D944                     l1774:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 14267                           
 14268                           ; BSR set to: 0
 14269  00D944  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 14270  00D948  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 14271                           
 14272                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 14273  00D94C  D103               	goto	l1791
 14274  00D94E                     
 14275                           ; BSR set to: 0
 14276                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 14277                           
 14278                           ; BSR set to: 0
 14279  00D94E  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 14280  00D952  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 14281  00D956  ECE5  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14282  00D95A  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 14283  00D95E  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 14284                           
 14285                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 14286  00D962  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 14287  00D966  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 14288  00D96A  ECF2  F0AB         	call	__fat_offset_from_cluster	;wreg free
 14289  00D96E  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 14290  00D972  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 14291                           
 14292                           ;fat16.c: 263: if(sector != sector_in_buffer)
 14293  00D976  0100               	movlb	0	; () banked
 14294  00D978  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14295  00D97A  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 14296  00D97C  E104               	bnz	u13160
 14297  00D97E  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14298  00D980  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 14299  00D982  B4D8               	btfsc	status,2,c
 14300  00D984  D037               	goto	l1778
 14301  00D986                     u13160:
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 14305  00D986  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14306  00D988  B4D8               	btfsc	status,2,c
 14307  00D98A  D00A               	goto	l1779
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 14311  00D98C  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14312  00D990  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14313  00D994  0E00               	movlw	low _buffer
 14314  00D996  6F81               	movwf	flash_sector_write@data& (0+255),b
 14315  00D998  0E0A               	movlw	high _buffer
 14316  00D99A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14317  00D99C  EC22  F0A6         	call	_flash_sector_write	;wreg free
 14318  00D9A0                     l1779:
 14319                           
 14320                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 14321  00D9A0  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14322  00D9A4  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14323  00D9A8  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 14324  00D9AC  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 14325  00D9B0  EC54  F093         	call	__get_available_cluster	;wreg free
 14326  00D9B4  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 14327  00D9B8  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 14328                           
 14329                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 14330  00D9BC  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 14331  00D9C0  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 14332  00D9C4  ECE5  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14333  00D9C8  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14334  00D9CC  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14335                           
 14336                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 14337  00D9D0  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 14338  00D9D4  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 14339  00D9D8  0E00               	movlw	low _buffer
 14340  00D9DA  0100               	movlb	0	; () banked
 14341  00D9DC  6F89               	movwf	flash_sector_read@data& (0+255),b
 14342  00D9DE  0E0A               	movlw	high _buffer
 14343  00D9E0  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14344  00D9E2  EC04  F0AB         	call	_flash_sector_read	;wreg free
 14345                           
 14346                           ;fat16.c: 279: sector_in_buffer = sector;
 14347  00D9E6  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 14348  00D9EA  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 14349                           
 14350                           ;fat16.c: 280: data_changed = 0;
 14351  00D9EE  0E00               	movlw	0
 14352  00D9F0  0100               	movlb	0	; () banked
 14353  00D9F2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14354  00D9F4                     l1778:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 14358                           
 14359                           ; BSR set to: 0
 14360  00D9F4  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14361  00D9F6  E104               	bnz	u13180
 14362  00D9F8  0E02               	movlw	2
 14363  00D9FA  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14364  00D9FC  A0D8               	btfss	status,0,c
 14365  00D9FE  D05E               	goto	l1780
 14366  00DA00                     u13180:
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 14370  00DA00  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14371  00DA04  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14372  00DA08  0E00               	movlw	low _buffer
 14373  00DA0A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14374  00DA0C  0E0A               	movlw	high _buffer
 14375  00DA0E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14376  00DA10  EC0A  F0A7         	call	__read_value_from_offset	;wreg free
 14377  00DA14  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14378  00DA18  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14379                           
 14380                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 14381  00DA1C  0100               	movlb	0	; () banked
 14382  00DA1E  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14383  00DA20  E104               	bnz	u13190
 14384  00DA22  0E02               	movlw	2
 14385  00DA24  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14386  00DA26  A0D8               	btfss	status,0,c
 14387  00DA28  D006               	goto	u13200
 14388  00DA2A                     u13190:
 14389                           
 14390                           ; BSR set to: 0
 14391  00DA2A  0EDA               	movlw	218
 14392  00DA2C  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14393  00DA2E  0E1F               	movlw	31
 14394  00DA30  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14395  00DA32  A0D8               	btfss	status,0,c
 14396  00DA34  D06B               	goto	l1790
 14397  00DA36                     u13200:
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 14401                           
 14402                           ; BSR set to: 0
 14403  00DA36  0E02               	movlw	2
 14404  00DA38  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 14405  00DA3A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14406  00DA3C  0E00               	movlw	0
 14407  00DA3E  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 14408  00DA40  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14409  00DA42  0E00               	movlw	low _buffer
 14410  00DA44  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14411  00DA46  0E0A               	movlw	high _buffer
 14412  00DA48  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14413  00DA4A  EC3D  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14414  00DA4E  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 14415  00DA52  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 14416                           
 14417                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 14418  00DA56  0100               	movlb	0	; () banked
 14419  00DA58  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 14420  00DA5A  E103               	bnz	u13210
 14421  00DA5C  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14422  00DA5E  B4D8               	btfsc	status,2,c
 14423  00DA60  D013               	goto	l1784
 14424  00DA62                     u13210:
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 14428  00DA62  0EFE               	movlw	254
 14429  00DA64  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14430  00DA66  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 14431  00DA68  0EFF               	movlw	255
 14432  00DA6A  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14433  00DA6C  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;fat16.c: 299: next_cluster <<= 8;
 14437  00DA6E  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 14438  00DA70  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14439  00DA72  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 14443  00DA74  90D8               	bcf	status,0,c
 14444  00DA76  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14445  00DA78  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 14446  00DA7A  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 14447  00DA7C  6F99               	movwf	??__make_cluster_chain& (0+255),b
 14448  00DA7E  5199               	movf	??__make_cluster_chain& (0+255),w,b
 14449  00DA80  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 14450  00DA82  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 14451  00DA84  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 14452                           
 14453                           ;fat16.c: 301: }
 14454  00DA86  D00B               	goto	l1787
 14455  00DA88                     l1784:
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 14459                           
 14460                           ; BSR set to: 0
 14461  00DA88  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 14462  00DA8A  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 14463  00DA8C  A4D8               	btfss	status,2,c
 14464  00DA8E  D003               	goto	l1786
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 14468  00DA90  6995               	setf	?__make_cluster_chain& (0+255),b
 14469  00DA92  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14470  00DA94  0012               	return	
 14471  00DA96                     l1786:
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 14475  00DA96  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 14476  00DA9A  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 14477  00DA9E                     l1787:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 14481                           
 14482                           ; BSR set to: 0
 14483                           
 14484                           ; BSR set to: 0
 14485  00DA9E  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14486  00DAA2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14487  00DAA6  0E00               	movlw	low _buffer
 14488  00DAA8  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14489  00DAAA  0E0A               	movlw	high _buffer
 14490  00DAAC  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14491  00DAAE  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 14492  00DAB2  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 14493  00DAB6  EC08  F0A9         	call	__write_value_to_offset	;wreg free
 14494  00DABA  D025               	goto	L90
 14495  00DABC                     l1780:
 14496                           
 14497                           ; BSR set to: 0
 14498                           ;fat16.c: 326: else if(remaining_clusters == 1)
 14499                           
 14500                           ; BSR set to: 0
 14501  00DABC  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14502  00DABE  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14503  00DAC0  A4D8               	btfss	status,2,c
 14504  00DAC2  D028               	goto	l1789
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 14508  00DAC4  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14509  00DAC8  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14510  00DACC  0E00               	movlw	low _buffer
 14511  00DACE  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14512  00DAD0  0E0A               	movlw	high _buffer
 14513  00DAD2  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14514  00DAD4  EC0A  F0A7         	call	__read_value_from_offset	;wreg free
 14515  00DAD8  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14516  00DADC  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14517                           
 14518                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 14519  00DAE0  0100               	movlb	0	; () banked
 14520  00DAE2  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 14521  00DAE4  E103               	bnz	u13240
 14522  00DAE6  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14523  00DAE8  B4D8               	btfsc	status,2,c
 14524  00DAEA  D010               	goto	l1790
 14525  00DAEC                     u13240:
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 14529  00DAEC  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14530  00DAF0  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14531  00DAF4  0E00               	movlw	low _buffer
 14532  00DAF6  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14533  00DAF8  0E0A               	movlw	high _buffer
 14534  00DAFA  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14535  00DAFC  0EFF               	movlw	255
 14536  00DAFE  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14537  00DB00  6964               	setf	__write_value_to_offset@value& (0+255),b
 14538  00DB02  EC08  F0A9         	call	__write_value_to_offset	;wreg free
 14539  00DB06                     L90:
 14540                           
 14541                           ;fat16.c: 336: data_changed = 1;
 14542  00DB06  0E01               	movlw	1
 14543  00DB08  0100               	movlb	0	; () banked
 14544  00DB0A  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14545  00DB0C                     l1790:
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 14549                           
 14550                           ; BSR set to: 0
 14551  00DB0C  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 14552  00DB0E  A0D8               	btfss	status,0,c
 14553  00DB10  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 14554                           
 14555                           ;fat16.c: 341: }
 14556  00DB12  D020               	goto	l1791
 14557  00DB14                     l1789:
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 14561                           
 14562                           ; BSR set to: 0
 14563  00DB14  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14564  00DB18  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14565  00DB1C  0E00               	movlw	low _buffer
 14566  00DB1E  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14567  00DB20  0E0A               	movlw	high _buffer
 14568  00DB22  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14569  00DB24  EC0A  F0A7         	call	__read_value_from_offset	;wreg free
 14570  00DB28  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14571  00DB2C  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14572                           
 14573                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 14574  00DB30  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14575  00DB34  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14576  00DB38  0E00               	movlw	low _buffer
 14577  00DB3A  0100               	movlb	0	; () banked
 14578  00DB3C  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14579  00DB3E  0E0A               	movlw	high _buffer
 14580  00DB40  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14581  00DB42  0E00               	movlw	0
 14582  00DB44  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14583  00DB46  0E00               	movlw	0
 14584  00DB48  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14585  00DB4A  EC08  F0A9         	call	__write_value_to_offset	;wreg free
 14586                           
 14587                           ;fat16.c: 352: data_changed = 1;
 14588  00DB4E  0E01               	movlw	1
 14589  00DB50  0100               	movlb	0	; () banked
 14590  00DB52  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14591  00DB54                     l1791:
 14592                           
 14593                           ; BSR set to: 0
 14594                           
 14595                           ; BSR set to: 0
 14596                           
 14597                           ; BSR set to: 0
 14598                           
 14599                           ; BSR set to: 0
 14600  00DB54  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14601  00DB56  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14602  00DB58  A4D8               	btfss	status,2,c
 14603  00DB5A  D6F9               	goto	l1777
 14604                           
 14605                           ; BSR set to: 0
 14606  00DB5C  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14607  00DB5E  E104               	bnz	u13260
 14608  00DB60  0E02               	movlw	2
 14609  00DB62  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14610  00DB64  A0D8               	btfss	status,0,c
 14611  00DB66  D006               	goto	u13270
 14612  00DB68                     u13260:
 14613                           
 14614                           ; BSR set to: 0
 14615  00DB68  0EDA               	movlw	218
 14616  00DB6A  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14617  00DB6C  0E1F               	movlw	31
 14618  00DB6E  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14619  00DB70  A0D8               	btfss	status,0,c
 14620  00DB72  D6ED               	goto	l1777
 14621  00DB74                     u13270:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 14625                           
 14626                           ; BSR set to: 0
 14627                           
 14628                           ; BSR set to: 0
 14629  00DB74  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14630  00DB76  B4D8               	btfsc	status,2,c
 14631  00DB78  D00A               	goto	l1795
 14632                           
 14633                           ; BSR set to: 0
 14634                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 14635  00DB7A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14636  00DB7E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14637  00DB82  0E00               	movlw	low _buffer
 14638  00DB84  6F81               	movwf	flash_sector_write@data& (0+255),b
 14639  00DB86  0E0A               	movlw	high _buffer
 14640  00DB88  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14641  00DB8A  EC22  F0A6         	call	_flash_sector_write	;wreg free
 14642  00DB8E                     l1795:
 14643                           
 14644                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 14645  00DB8E  0100               	movlb	0	; () banked
 14646  00DB90  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14647  00DB92  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14648  00DB94  B4D8               	btfsc	status,2,c
 14649  00DB96  D005               	goto	l1796
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 14653  00DB98  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14654  00DB9C  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;fat16.c: 367: }
 14658  00DBA0  0012               	return	
 14659  00DBA2                     l1796:
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 14663                           
 14664                           ; BSR set to: 0
 14665  00DBA2  0E00               	movlw	0
 14666  00DBA4  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14667  00DBA6  0E00               	movlw	0
 14668  00DBA8  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14669                           
 14670                           ; BSR set to: 0
 14671  00DBAA  0012               	return	
 14672  00DBAC                     __end_of__make_cluster_chain:
 14673                           	opt stack 0
 14674                           tblptru	equ	0xFF8
 14675                           tblptrh	equ	0xFF7
 14676                           tblptrl	equ	0xFF6
 14677                           tablat	equ	0xFF5
 14678                           prodh	equ	0xFF4
 14679                           prodl	equ	0xFF3
 14680                           postinc0	equ	0xFEE
 14681                           wreg	equ	0xFE8
 14682                           postdec1	equ	0xFE5
 14683                           plusw1	equ	0xFE3
 14684                           fsr1h	equ	0xFE2
 14685                           fsr1l	equ	0xFE1
 14686                           indf2	equ	0xFDF
 14687                           postinc2	equ	0xFDE
 14688                           plusw2	equ	0xFDB
 14689                           fsr2h	equ	0xFDA
 14690                           fsr2l	equ	0xFD9
 14691                           status	equ	0xFD8
 14692                           
 14693 ;; *************** function __write_value_to_offset *****************
 14694 ;; Defined at:
 14695 ;;		line 123 in file "fat16.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  offset          2    0[BANK0 ] unsigned int 
 14698 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14699 ;;		 -> buffer(512), 
 14700 ;;  value           2    4[BANK0 ] unsigned int 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1    wreg      void 
 14705 ;; Registers used:
 14706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14714 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14715 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14716 ;;Total ram usage:        8 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:   10
 14719 ;; This function calls:
 14720 ;;		Nothing
 14721 ;; This function is called by:
 14722 ;;		__make_cluster_chain
 14723 ;; This function uses a non-reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text47
 14727  015210                     __ptext47:
 14728                           	opt stack 0
 14729  015210                     __write_value_to_offset:
 14730                           	opt stack 16
 14731                           
 14732                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;incstack = 0
 14736  015210  0100               	movlb	0	; () banked
 14737  015212  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14738  015214  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14739  015216  6ED9               	movwf	fsr2l,c
 14740  015218  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14741  01521A  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14742  01521C  6EDA               	movwf	fsr2h,c
 14743  01521E  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;fat16.c: 126: value >>= 8;
 14747  015222  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14748  015224  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14749  015226  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14753  015228  0E01               	movlw	1
 14754  01522A  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14755  01522C  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14756  01522E  0E00               	movlw	0
 14757  015230  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14758  015232  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14759  015234  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14760  015236  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14761  015238  6ED9               	movwf	fsr2l,c
 14762  01523A  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14763  01523C  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14764  01523E  6EDA               	movwf	fsr2h,c
 14765  015240  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14766                           
 14767                           ; BSR set to: 0
 14768  015244  0012               	return		;funcret
 14769  015246                     __end_of__write_value_to_offset:
 14770                           	opt stack 0
 14771                           tblptru	equ	0xFF8
 14772                           tblptrh	equ	0xFF7
 14773                           tblptrl	equ	0xFF6
 14774                           tablat	equ	0xFF5
 14775                           prodh	equ	0xFF4
 14776                           prodl	equ	0xFF3
 14777                           postinc0	equ	0xFEE
 14778                           wreg	equ	0xFE8
 14779                           postdec1	equ	0xFE5
 14780                           plusw1	equ	0xFE3
 14781                           fsr1h	equ	0xFE2
 14782                           fsr1l	equ	0xFE1
 14783                           indf2	equ	0xFDF
 14784                           postinc2	equ	0xFDE
 14785                           plusw2	equ	0xFDB
 14786                           fsr2h	equ	0xFDA
 14787                           fsr2l	equ	0xFD9
 14788                           status	equ	0xFD8
 14789                           
 14790 ;; *************** function __get_available_cluster *****************
 14791 ;; Defined at:
 14792 ;;		line 130 in file "fat16.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14795 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;  sector          2   51[BANK0 ] unsigned int 
 14798 ;;  offset          2   49[BANK0 ] unsigned int 
 14799 ;;  cluster         2   47[BANK0 ] unsigned int 
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  2   43[BANK0 ] unsigned int 
 14802 ;; Registers used:
 14803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14810 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14812 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14813 ;;Total ram usage:       10 bytes
 14814 ;; Hardware stack levels used:    1
 14815 ;; Hardware stack levels required when called:   15
 14816 ;; This function calls:
 14817 ;;		__cluster_from_sector_and_offset
 14818 ;;		__get_available_offset_from_buffer
 14819 ;;		_flash_sector_read
 14820 ;; This function is called by:
 14821 ;;		__make_cluster_chain
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text48
 14826  0126A8                     __ptext48:
 14827                           	opt stack 0
 14828  0126A8                     __get_available_cluster:
 14829                           	opt stack 11
 14830                           
 14831                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;incstack = 0
 14835  0126A8  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14836  0126AC  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14837  0126B0  0100               	movlb	0	; () banked
 14838  0126B2  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14839  0126B4  E15B               	bnz	l13786
 14840  0126B6  0E22               	movlw	34
 14841  0126B8  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14842  0126BA  B0D8               	btfsc	status,0,c
 14843  0126BC  D057               	goto	u12610
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 14847                           
 14848                           ; BSR set to: 0
 14849                           
 14850                           ; BSR set to: 0
 14851  0126BE  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14852  0126C0  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14853  0126C2  E104               	bnz	l13762
 14854  0126C4  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14855  0126C6  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14856  0126C8  B4D8               	btfsc	status,2,c
 14857  0126CA  D04D               	goto	l1762
 14858  0126CC                     l13762:
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 14862  0126CC  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14863  0126D0  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14864  0126D4  0E00               	movlw	low _buffer
 14865  0126D6  6F89               	movwf	flash_sector_read@data& (0+255),b
 14866  0126D8  0E0A               	movlw	high _buffer
 14867  0126DA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14868  0126DC  EC04  F0AB         	call	_flash_sector_read	;wreg free
 14869                           
 14870                           ;fat16.c: 149: if(sector == 2)
 14871  0126E0  0E02               	movlw	2
 14872  0126E2  0100               	movlb	0	; () banked
 14873  0126E4  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14874  0126E6  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14875  0126E8  A4D8               	btfss	status,2,c
 14876  0126EA  D00B               	goto	l1757
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 14880  0126EC  0E00               	movlw	0
 14881  0126EE  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14882  0126F0  0E04               	movlw	4
 14883  0126F2  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14884  0126F4  0E00               	movlw	low _buffer
 14885  0126F6  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14886  0126F8  0E0A               	movlw	high _buffer
 14887  0126FA  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14888  0126FC  EC3D  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14889  012700  D00B               	goto	L1
 14890  012702                     l1757:
 14891                           
 14892                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14893  012702  0E00               	movlw	0
 14894  012704  0100               	movlb	0	; () banked
 14895  012706  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14896  012708  0E00               	movlw	0
 14897  01270A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14898  01270C  0E00               	movlw	low _buffer
 14899  01270E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14900  012710  0E0A               	movlw	high _buffer
 14901  012712  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14902  012714  EC3D  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14903  012718                     L1:
 14904  012718  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14905  01271C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14906                           
 14907                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 14908  012720  0100               	movlb	0	; () banked
 14909  012722  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14910  012724  E103               	bnz	u12590
 14911  012726  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14912  012728  B4D8               	btfsc	status,2,c
 14913  01272A  D01D               	goto	l1762
 14914  01272C                     u12590:
 14915                           
 14916                           ; BSR set to: 0
 14917                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14918  01272C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14919  012730  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14920  012734  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14921  012738  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14922  01273C  ECDC  F0AA         	call	__cluster_from_sector_and_offset	;wreg free
 14923  012740  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14924  012744  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14925                           
 14926                           ;fat16.c: 165: if(cluster > 8191)
 14927  012748  0E20               	movlw	32
 14928  01274A  0100               	movlb	0	; () banked
 14929  01274C  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14930  01274E  A0D8               	btfss	status,0,c
 14931  012750  D005               	goto	l1760
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 14935  012752  0E00               	movlw	0
 14936  012754  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14937  012756  0E00               	movlw	0
 14938  012758  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14939                           
 14940                           ; BSR set to: 0
 14941  01275A  0012               	return	
 14942  01275C                     l1760:
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 14946  01275C  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14947  012760  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14948  012764  0012               	return	
 14949  012766                     l1762:
 14950                           
 14951                           ; BSR set to: 0
 14952                           
 14953                           ; BSR set to: 0
 14954                           
 14955                           ; BSR set to: 0
 14956                           
 14957                           ; BSR set to: 0
 14958  012766  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14959  012768  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14960  01276A  D7A3               	goto	L2
 14961  01276C                     u12610:
 14962  01276C                     l13786:
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 14966  01276C  0E00               	movlw	0
 14967  01276E  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14968  012770  0E00               	movlw	0
 14969  012772  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14970  012774  0012               	return	
 14971  012776                     __end_of__get_available_cluster:
 14972                           	opt stack 0
 14973                           tblptru	equ	0xFF8
 14974                           tblptrh	equ	0xFF7
 14975                           tblptrl	equ	0xFF6
 14976                           tablat	equ	0xFF5
 14977                           prodh	equ	0xFF4
 14978                           prodl	equ	0xFF3
 14979                           postinc0	equ	0xFEE
 14980                           wreg	equ	0xFE8
 14981                           postdec1	equ	0xFE5
 14982                           plusw1	equ	0xFE3
 14983                           fsr1h	equ	0xFE2
 14984                           fsr1l	equ	0xFE1
 14985                           indf2	equ	0xFDF
 14986                           postinc2	equ	0xFDE
 14987                           plusw2	equ	0xFDB
 14988                           fsr2h	equ	0xFDA
 14989                           fsr2l	equ	0xFD9
 14990                           status	equ	0xFD8
 14991                           
 14992 ;; *************** function __get_available_offset_from_buffer *****************
 14993 ;; Defined at:
 14994 ;;		line 98 in file "fat16.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14997 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14998 ;;		 -> buffer(512), 
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;  offset          2    6[BANK0 ] unsigned int 
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  2    0[BANK0 ] unsigned int 
 15003 ;; Registers used:
 15004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15014 ;;Total ram usage:        8 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:   10
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		__get_available_cluster
 15021 ;;		__make_cluster_chain
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           	psect	text49
 15026  01447A                     __ptext49:
 15027                           	opt stack 0
 15028  01447A                     __get_available_offset_from_buffer:
 15029                           	opt stack 16
 15030                           
 15031                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;incstack = 0
 15035  01447A  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 15036  01447E  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 15037  014482  0E02               	movlw	2
 15038  014484  0100               	movlb	0	; () banked
 15039  014486  D022               	goto	L3
 15040  014488                     
 15041                           ; BSR set to: 0
 15042                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 15043                           
 15044                           ; BSR set to: 0
 15045  014488  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15046  01448A  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15047  01448C  6ED9               	movwf	fsr2l,c
 15048  01448E  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15049  014490  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15050  014492  6EDA               	movwf	fsr2h,c
 15051  014494  50DF               	movf	indf2,w,c
 15052  014496  A4D8               	btfss	status,2,c
 15053  014498  D014               	goto	l1743
 15054                           
 15055                           ; BSR set to: 0
 15056  01449A  0E01               	movlw	1
 15057  01449C  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15058  01449E  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 15059  0144A0  0E00               	movlw	0
 15060  0144A2  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15061  0144A4  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 15062  0144A6  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 15063  0144A8  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15064  0144AA  6ED9               	movwf	fsr2l,c
 15065  0144AC  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 15066  0144AE  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15067  0144B0  6EDA               	movwf	fsr2h,c
 15068  0144B2  50DF               	movf	indf2,w,c
 15069  0144B4  A4D8               	btfss	status,2,c
 15070  0144B6  D005               	goto	l1743
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 15074  0144B8  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 15075  0144BC  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 15076  0144C0  0012               	return	
 15077  0144C2                     l1743:
 15078                           
 15079                           ; BSR set to: 0
 15080                           
 15081                           ; BSR set to: 0
 15082  0144C2  0E02               	movlw	2
 15083  0144C4  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 15084  0144C6  0E00               	movlw	0
 15085  0144C8  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 15086  0144CA  0E02               	movlw	2
 15087  0144CC                     L3:
 15088  0144CC  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15089  0144CE  A0D8               	btfss	status,0,c
 15090  0144D0  D7DB               	goto	l1741
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 15094  0144D2  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 15095  0144D4  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 15096                           
 15097                           ; BSR set to: 0
 15098  0144D6  0012               	return		;funcret
 15099  0144D8                     __end_of__get_available_offset_from_buffer:
 15100                           	opt stack 0
 15101                           tblptru	equ	0xFF8
 15102                           tblptrh	equ	0xFF7
 15103                           tblptrl	equ	0xFF6
 15104                           tablat	equ	0xFF5
 15105                           prodh	equ	0xFF4
 15106                           prodl	equ	0xFF3
 15107                           postinc0	equ	0xFEE
 15108                           wreg	equ	0xFE8
 15109                           postdec1	equ	0xFE5
 15110                           plusw1	equ	0xFE3
 15111                           fsr1h	equ	0xFE2
 15112                           fsr1l	equ	0xFE1
 15113                           indf2	equ	0xFDF
 15114                           postinc2	equ	0xFDE
 15115                           plusw2	equ	0xFDB
 15116                           fsr2h	equ	0xFDA
 15117                           fsr2l	equ	0xFD9
 15118                           status	equ	0xFD8
 15119                           
 15120 ;; *************** function __cluster_from_sector_and_offset *****************
 15121 ;; Defined at:
 15122 ;;		line 89 in file "fat16.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;  sector          2    0[BANK0 ] unsigned int 
 15125 ;;  offset          2    2[BANK0 ] unsigned int 
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  2    0[BANK0 ] unsigned int 
 15130 ;; Registers used:
 15131 ;;		wreg, status,2, status,0
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15140 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15141 ;;Total ram usage:        4 bytes
 15142 ;; Hardware stack levels used:    1
 15143 ;; Hardware stack levels required when called:   10
 15144 ;; This function calls:
 15145 ;;		Nothing
 15146 ;; This function is called by:
 15147 ;;		__get_available_cluster
 15148 ;; This function uses a non-reentrant model
 15149 ;;
 15150                           
 15151                           	psect	text50
 15152  0155B8                     __ptext50:
 15153                           	opt stack 0
 15154  0155B8                     __cluster_from_sector_and_offset:
 15155                           	opt stack 15
 15156                           
 15157                           ;fat16.c: 91: offset >>= 1;
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;incstack = 0
 15161  0155B8  0100               	movlb	0	; () banked
 15162  0155BA  90D8               	bcf	status,0,c
 15163  0155BC  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 15164  0155BE  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;fat16.c: 92: sector -= 2;
 15168  0155C0  0E02               	movlw	2
 15169  0155C2  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15170  0155C4  0E00               	movlw	0
 15171  0155C6  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15172                           
 15173                           ; BSR set to: 0
 15174                           ;fat16.c: 93: sector <<= 8;
 15175  0155C8  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 15176  0155CA  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 15177  0155CC  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 15178                           
 15179                           ; BSR set to: 0
 15180                           ;fat16.c: 94: sector |= offset;
 15181  0155CE  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 15182  0155D0  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15183  0155D2  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 15184  0155D4  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;fat16.c: 95: return sector;
 15188  0155D6  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 15189  0155DA  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 15190  0155DE  0012               	return	
 15191  0155E0                     __end_of__cluster_from_sector_and_offset:
 15192                           	opt stack 0
 15193                           tblptru	equ	0xFF8
 15194                           tblptrh	equ	0xFF7
 15195                           tblptrl	equ	0xFF6
 15196                           tablat	equ	0xFF5
 15197                           prodh	equ	0xFF4
 15198                           prodl	equ	0xFF3
 15199                           postinc0	equ	0xFEE
 15200                           wreg	equ	0xFE8
 15201                           postdec1	equ	0xFE5
 15202                           plusw1	equ	0xFE3
 15203                           fsr1h	equ	0xFE2
 15204                           fsr1l	equ	0xFE1
 15205                           indf2	equ	0xFDF
 15206                           postinc2	equ	0xFDE
 15207                           plusw2	equ	0xFDB
 15208                           fsr2h	equ	0xFDA
 15209                           fsr2l	equ	0xFD9
 15210                           status	equ	0xFD8
 15211                           
 15212 ;; *************** function __get_time *****************
 15213 ;; Defined at:
 15214 ;;		line 376 in file "fat16.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;		None
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;		None
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  2    0[BANK0 ] unsigned int 
 15221 ;; Registers used:
 15222 ;;		wreg, status,2
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15232 ;;Total ram usage:        2 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; Hardware stack levels required when called:   10
 15235 ;; This function calls:
 15236 ;;		Nothing
 15237 ;; This function is called by:
 15238 ;;		_fat_create_file
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242                           	psect	text51
 15243  0158DE                     __ptext51:
 15244                           	opt stack 0
 15245  0158DE                     __get_time:
 15246                           	opt stack 17
 15247                           
 15248                           ;fat16.c: 388: return 0x0000;
 15249                           
 15250                           ; BSR set to: 0
 15251                           ;incstack = 0
 15252  0158DE  0E00               	movlw	0
 15253  0158E0  0100               	movlb	0	; () banked
 15254  0158E2  6F61               	movwf	(?__get_time+1)& (0+255),b
 15255  0158E4  0E00               	movlw	0
 15256  0158E6  6F60               	movwf	?__get_time& (0+255),b
 15257  0158E8  0012               	return	
 15258  0158EA                     __end_of__get_time:
 15259                           	opt stack 0
 15260                           tblptru	equ	0xFF8
 15261                           tblptrh	equ	0xFF7
 15262                           tblptrl	equ	0xFF6
 15263                           tablat	equ	0xFF5
 15264                           prodh	equ	0xFF4
 15265                           prodl	equ	0xFF3
 15266                           postinc0	equ	0xFEE
 15267                           wreg	equ	0xFE8
 15268                           postdec1	equ	0xFE5
 15269                           plusw1	equ	0xFE3
 15270                           fsr1h	equ	0xFE2
 15271                           fsr1l	equ	0xFE1
 15272                           indf2	equ	0xFDF
 15273                           postinc2	equ	0xFDE
 15274                           plusw2	equ	0xFDB
 15275                           fsr2h	equ	0xFDA
 15276                           fsr2l	equ	0xFD9
 15277                           status	equ	0xFD8
 15278                           
 15279 ;; *************** function __get_date *****************
 15280 ;; Defined at:
 15281 ;;		line 392 in file "fat16.c"
 15282 ;; Parameters:    Size  Location     Type
 15283 ;;		None
 15284 ;; Auto vars:     Size  Location     Type
 15285 ;;		None
 15286 ;; Return value:  Size  Location     Type
 15287 ;;                  2    0[BANK0 ] unsigned int 
 15288 ;; Registers used:
 15289 ;;		wreg, status,2
 15290 ;; Tracked objects:
 15291 ;;		On entry : 0/0
 15292 ;;		On exit  : 0/0
 15293 ;;		Unchanged: 0/0
 15294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15295 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15298 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15299 ;;Total ram usage:        2 bytes
 15300 ;; Hardware stack levels used:    1
 15301 ;; Hardware stack levels required when called:   10
 15302 ;; This function calls:
 15303 ;;		Nothing
 15304 ;; This function is called by:
 15305 ;;		_fat_create_file
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           
 15309                           	psect	text52
 15310  0158EA                     __ptext52:
 15311                           	opt stack 0
 15312  0158EA                     __get_date:
 15313                           	opt stack 17
 15314                           
 15315                           ;fat16.c: 404: return 0x0000;
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;incstack = 0
 15319  0158EA  0E00               	movlw	0
 15320  0158EC  0100               	movlb	0	; () banked
 15321  0158EE  6F61               	movwf	(?__get_date+1)& (0+255),b
 15322  0158F0  0E00               	movlw	0
 15323  0158F2  6F60               	movwf	?__get_date& (0+255),b
 15324  0158F4  0012               	return	
 15325  0158F6                     __end_of__get_date:
 15326                           	opt stack 0
 15327                           tblptru	equ	0xFF8
 15328                           tblptrh	equ	0xFF7
 15329                           tblptrl	equ	0xFF6
 15330                           tablat	equ	0xFF5
 15331                           prodh	equ	0xFF4
 15332                           prodl	equ	0xFF3
 15333                           postinc0	equ	0xFEE
 15334                           wreg	equ	0xFE8
 15335                           postdec1	equ	0xFE5
 15336                           plusw1	equ	0xFE3
 15337                           fsr1h	equ	0xFE2
 15338                           fsr1l	equ	0xFE1
 15339                           indf2	equ	0xFDF
 15340                           postinc2	equ	0xFDE
 15341                           plusw2	equ	0xFDB
 15342                           fsr2h	equ	0xFDA
 15343                           fsr2l	equ	0xFD9
 15344                           status	equ	0xFD8
 15345                           
 15346 ;; *************** function __get_available_root_entry *****************
 15347 ;; Defined at:
 15348 ;;		line 442 in file "fat16.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;  file_number     1   53[BANK0 ] unsigned char 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      unsigned char 
 15355 ;; Registers used:
 15356 ;;		wreg, status,2, status,0, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15366 ;;Total ram usage:        1 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:   16
 15369 ;; This function calls:
 15370 ;;		__root_is_available
 15371 ;; This function is called by:
 15372 ;;		_fat_create_file
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text53
 15377  01553C                     __ptext53:
 15378                           	opt stack 0
 15379  01553C                     __get_available_root_entry:
 15380                           	opt stack 11
 15381                           
 15382                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;incstack = 0
 15386  01553C  0E00               	movlw	0
 15387  01553E  0100               	movlb	0	; () banked
 15388  015540  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 15389  015542                     l14358:
 15390                           
 15391                           ; BSR set to: 0
 15392  015542  0E3F               	movlw	63
 15393  015544  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15394  015546  D001               	goto	l1814
 15395  015548  D00C               	goto	u13320
 15396  01554A                     l1814:
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 15400                           
 15401                           ; BSR set to: 0
 15402  01554A  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15403  01554C  EC16  F0A0         	call	__root_is_available
 15404  015550  0900               	iorlw	0
 15405  015552  B4D8               	btfsc	status,2,c
 15406  015554  D003               	goto	l1816
 15407                           
 15408                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 15409  015556  0100               	movlb	0	; () banked
 15410  015558  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15411                           
 15412                           ; BSR set to: 0
 15413  01555A  0012               	return	
 15414  01555C                     l1816:
 15415                           
 15416                           ; BSR set to: 0
 15417  01555C  0100               	movlb	0	; () banked
 15418  01555E  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15419  015560  D7F0               	goto	l14358
 15420  015562                     u13320:
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 15424                           
 15425                           ; BSR set to: 0
 15426  015562  0EFF               	movlw	255
 15427  015564  0012               	return	
 15428  015566                     __end_of__get_available_root_entry:
 15429                           	opt stack 0
 15430                           tblptru	equ	0xFF8
 15431                           tblptrh	equ	0xFF7
 15432                           tblptrl	equ	0xFF6
 15433                           tablat	equ	0xFF5
 15434                           prodh	equ	0xFF4
 15435                           prodl	equ	0xFF3
 15436                           postinc0	equ	0xFEE
 15437                           wreg	equ	0xFE8
 15438                           postdec1	equ	0xFE5
 15439                           plusw1	equ	0xFE3
 15440                           fsr1h	equ	0xFE2
 15441                           fsr1l	equ	0xFE1
 15442                           indf2	equ	0xFDF
 15443                           postinc2	equ	0xFDE
 15444                           plusw2	equ	0xFDB
 15445                           fsr2h	equ	0xFDA
 15446                           fsr2l	equ	0xFD9
 15447                           status	equ	0xFD8
 15448                           
 15449 ;; *************** function __add_item *****************
 15450 ;; Defined at:
 15451 ;;		line 39 in file "config_file.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 15454 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 15455 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 15456 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 15457 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 15458 ;;  value           4   38[BANK0 ] long 
 15459 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 15460 ;;		 -> ConfigFile_buffer(512), 
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;  length          1   46[BANK0 ] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      unsigned char 
 15465 ;; Registers used:
 15466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15475 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15476 ;;Total ram usage:       11 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:   13
 15479 ;; This function calls:
 15480 ;;		_ltoa
 15481 ;; This function is called by:
 15482 ;;		_configFile_write
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text54
 15487  011C5E                     __ptext54:
 15488                           	opt stack 0
 15489  011C5E                     __add_item:
 15490                           	opt stack 15
 15491                           
 15492                           ;config_file.c: 41: uint8_t length = 0;
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;incstack = 0
 15496  011C5E  0E00               	movlw	0
 15497  011C60  0100               	movlb	0	; () banked
 15498  011C62  6F8E               	movwf	__add_item@length& (0+255),b
 15499                           
 15500                           ;config_file.c: 44: while(item_string[length])
 15501  011C64  D01C               	goto	l2912
 15502  011C66                     
 15503                           ; BSR set to: 0
 15504                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 15505                           
 15506                           ; BSR set to: 0
 15507  011C66  518E               	movf	__add_item@length& (0+255),w,b
 15508  011C68  0D01               	mullw	1
 15509  011C6A  C084  F08C         	movff	__add_item@item_string,??__add_item
 15510  011C6E  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15511  011C72  50F3               	movf	prodl,w,c
 15512  011C74  278C               	addwf	??__add_item& (0+255),f,b
 15513  011C76  50F4               	movf	prodh,w,c
 15514  011C78  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15515  011C7A  C08C  FFF6         	movff	??__add_item,tblptrl
 15516  011C7E  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15517  011C82                     	if	0	;tblptru may be non-zero
 15518  011C82                     	endif
 15519  011C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15520  011C82  0E00               	movlw	low (__mediumconst shr (0+16))
 15521  011C84  6EF8               	movwf	tblptru,c
 15522  011C86                     	endif
 15523  011C86  518E               	movf	__add_item@length& (0+255),w,b
 15524  011C88  0D01               	mullw	1
 15525  011C8A  50F3               	movf	prodl,w,c
 15526  011C8C  258A               	addwf	__add_item@buffer& (0+255),w,b
 15527  011C8E  6ED9               	movwf	fsr2l,c
 15528  011C90  50F4               	movf	prodh,w,c
 15529  011C92  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15530  011C94  6EDA               	movwf	fsr2h,c
 15531  011C96  0008               	tblrd		*
 15532  011C98  CFF5 FFDF          	movff	tablat,indf2
 15533                           
 15534                           ; BSR set to: 0
 15535                           ;config_file.c: 47: ++length;
 15536  011C9C  2B8E               	incf	__add_item@length& (0+255),f,b
 15537  011C9E                     l2912:
 15538                           
 15539                           ; BSR set to: 0
 15540                           
 15541                           ; BSR set to: 0
 15542  011C9E  518E               	movf	__add_item@length& (0+255),w,b
 15543  011CA0  0D01               	mullw	1
 15544  011CA2  C084  F08C         	movff	__add_item@item_string,??__add_item
 15545  011CA6  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15546  011CAA  50F3               	movf	prodl,w,c
 15547  011CAC  278C               	addwf	??__add_item& (0+255),f,b
 15548  011CAE  50F4               	movf	prodh,w,c
 15549  011CB0  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15550  011CB2  C08C  FFF6         	movff	??__add_item,tblptrl
 15551  011CB6  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15552  011CBA                     	if	0	;tblptru may be non-zero
 15553  011CBA                     	endif
 15554  011CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15555  011CBA  0E00               	movlw	low (__mediumconst shr (0+16))
 15556  011CBC  6EF8               	movwf	tblptru,c
 15557  011CBE                     	endif
 15558  011CBE  0008               	tblrd		*
 15559  011CC0  50F5               	movf	tablat,w,c
 15560  011CC2  0900               	iorlw	0
 15561  011CC4  A4D8               	btfss	status,2,c
 15562  011CC6  D7CF               	goto	l2913
 15563                           
 15564                           ; BSR set to: 0
 15565                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 15566                           
 15567                           ; BSR set to: 0
 15568  011CC8  518E               	movf	__add_item@length& (0+255),w,b
 15569  011CCA  0D01               	mullw	1
 15570  011CCC  50F3               	movf	prodl,w,c
 15571  011CCE  258A               	addwf	__add_item@buffer& (0+255),w,b
 15572  011CD0  6ED9               	movwf	fsr2l,c
 15573  011CD2  50F4               	movf	prodh,w,c
 15574  011CD4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15575  011CD6  6EDA               	movwf	fsr2h,c
 15576  011CD8  0E3D               	movlw	61
 15577  011CDA  6EDF               	movwf	indf2,c
 15578                           
 15579                           ; BSR set to: 0
 15580  011CDC  2B8E               	incf	__add_item@length& (0+255),f,b
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 15584  011CDE  518E               	movf	__add_item@length& (0+255),w,b
 15585  011CE0  0D01               	mullw	1
 15586  011CE2  50F3               	movf	prodl,w,c
 15587  011CE4  258A               	addwf	__add_item@buffer& (0+255),w,b
 15588  011CE6  6F7A               	movwf	ltoa@buf& (0+255),b
 15589  011CE8  50F4               	movf	prodh,w,c
 15590  011CEA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15591  011CEC  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 15592  011CEE  C086  F07C         	movff	__add_item@value,ltoa@val
 15593  011CF2  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 15594  011CF6  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 15595  011CFA  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 15596  011CFE  0E00               	movlw	0
 15597  011D00  6F81               	movwf	(ltoa@base+1)& (0+255),b
 15598  011D02  0E0A               	movlw	10
 15599  011D04  6F80               	movwf	ltoa@base& (0+255),b
 15600  011D06  EC03  F0A5         	call	_ltoa	;wreg free
 15601                           
 15602                           ;config_file.c: 55: while(buffer[length])
 15603  011D0A  D002               	goto	l2915
 15604  011D0C                     
 15605                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 15606  011D0C  0100               	movlb	0	; () banked
 15607  011D0E  2B8E               	incf	__add_item@length& (0+255),f,b
 15608  011D10                     l2915:
 15609                           
 15610                           ; BSR set to: 0
 15611  011D10  0100               	movlb	0	; () banked
 15612  011D12  518E               	movf	__add_item@length& (0+255),w,b
 15613  011D14  0D01               	mullw	1
 15614  011D16  50F3               	movf	prodl,w,c
 15615  011D18  258A               	addwf	__add_item@buffer& (0+255),w,b
 15616  011D1A  6ED9               	movwf	fsr2l,c
 15617  011D1C  50F4               	movf	prodh,w,c
 15618  011D1E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15619  011D20  6EDA               	movwf	fsr2h,c
 15620  011D22  50DF               	movf	indf2,w,c
 15621  011D24  A4D8               	btfss	status,2,c
 15622  011D26  D7F2               	goto	l2916
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\n';
 15626                           
 15627                           ; BSR set to: 0
 15628  011D28  518E               	movf	__add_item@length& (0+255),w,b
 15629  011D2A  0D01               	mullw	1
 15630  011D2C  50F3               	movf	prodl,w,c
 15631  011D2E  258A               	addwf	__add_item@buffer& (0+255),w,b
 15632  011D30  6ED9               	movwf	fsr2l,c
 15633  011D32  50F4               	movf	prodh,w,c
 15634  011D34  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15635  011D36  6EDA               	movwf	fsr2h,c
 15636  011D38  0E0A               	movlw	10
 15637  011D3A  6EDF               	movwf	indf2,c
 15638                           
 15639                           ; BSR set to: 0
 15640  011D3C  2B8E               	incf	__add_item@length& (0+255),f,b
 15641                           
 15642                           ; BSR set to: 0
 15643                           ;config_file.c: 64: return length;
 15644  011D3E  518E               	movf	__add_item@length& (0+255),w,b
 15645  011D40  0012               	return	
 15646  011D42                     __end_of__add_item:
 15647                           	opt stack 0
 15648                           tblptru	equ	0xFF8
 15649                           tblptrh	equ	0xFF7
 15650                           tblptrl	equ	0xFF6
 15651                           tablat	equ	0xFF5
 15652                           prodh	equ	0xFF4
 15653                           prodl	equ	0xFF3
 15654                           postinc0	equ	0xFEE
 15655                           wreg	equ	0xFE8
 15656                           postdec1	equ	0xFE5
 15657                           plusw1	equ	0xFE3
 15658                           fsr1h	equ	0xFE2
 15659                           fsr1l	equ	0xFE1
 15660                           indf2	equ	0xFDF
 15661                           postinc2	equ	0xFDE
 15662                           plusw2	equ	0xFDB
 15663                           fsr2h	equ	0xFDA
 15664                           fsr2l	equ	0xFD9
 15665                           status	equ	0xFD8
 15666                           
 15667 ;; *************** function _ltoa *****************
 15668 ;; Defined at:
 15669 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15672 ;;		 -> ConfigFile_buffer(512), 
 15673 ;;  val             4   28[BANK0 ] long 
 15674 ;;  base            2   32[BANK0 ] int 
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15677 ;;		 -> ConfigFile_buffer(512), 
 15678 ;; Return value:  Size  Location     Type
 15679 ;;                  2   26[BANK0 ] PTR unsigned char 
 15680 ;; Registers used:
 15681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15682 ;; Tracked objects:
 15683 ;;		On entry : 0/0
 15684 ;;		On exit  : 0/0
 15685 ;;		Unchanged: 0/0
 15686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15687 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15688 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15690 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15691 ;;Total ram usage:       10 bytes
 15692 ;; Hardware stack levels used:    1
 15693 ;; Hardware stack levels required when called:   12
 15694 ;; This function calls:
 15695 ;;		_ultoa
 15696 ;; This function is called by:
 15697 ;;		__add_item
 15698 ;; This function uses a non-reentrant model
 15699 ;;
 15700                           
 15701                           	psect	text55
 15702  014A06                     __ptext55:
 15703                           	opt stack 0
 15704  014A06                     _ltoa:
 15705                           	opt stack 15
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;incstack = 0
 15709  014A06  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15710  014A0A  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15711  014A0E  0100               	movlb	0	; () banked
 15712  014A10  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15713  014A12  D010               	goto	l3684
 15714                           
 15715                           ; BSR set to: 0
 15716  014A14  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15717  014A18  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15718  014A1C  0E2D               	movlw	45
 15719  014A1E  6EDF               	movwf	indf2,c
 15720                           
 15721                           ; BSR set to: 0
 15722  014A20  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15723  014A22  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15724                           
 15725                           ; BSR set to: 0
 15726  014A24  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15727  014A26  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15728  014A28  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15729  014A2A  6D7C               	negf	ltoa@val& (0+255),b
 15730  014A2C  0E00               	movlw	0
 15731  014A2E  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15732  014A30  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15733  014A32  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15734  014A34                     l3684:
 15735                           
 15736                           ; BSR set to: 0
 15737                           
 15738                           ; BSR set to: 0
 15739  014A34  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15740  014A38  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15741  014A3C  C07C  F06F         	movff	ltoa@val,ultoa@val
 15742  014A40  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15743  014A44  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15744  014A48  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15745  014A4C  C080  F073         	movff	ltoa@base,ultoa@base
 15746  014A50  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15747  014A54  ECF0  F089         	call	_ultoa	;wreg free
 15748  014A58  0012               	return	
 15749  014A5A                     __end_of_ltoa:
 15750                           	opt stack 0
 15751                           tblptru	equ	0xFF8
 15752                           tblptrh	equ	0xFF7
 15753                           tblptrl	equ	0xFF6
 15754                           tablat	equ	0xFF5
 15755                           prodh	equ	0xFF4
 15756                           prodl	equ	0xFF3
 15757                           postinc0	equ	0xFEE
 15758                           wreg	equ	0xFE8
 15759                           postdec1	equ	0xFE5
 15760                           plusw1	equ	0xFE3
 15761                           fsr1h	equ	0xFE2
 15762                           fsr1l	equ	0xFE1
 15763                           indf2	equ	0xFDF
 15764                           postinc2	equ	0xFDE
 15765                           plusw2	equ	0xFDB
 15766                           fsr2h	equ	0xFDA
 15767                           fsr2l	equ	0xFD9
 15768                           status	equ	0xFD8
 15769                           
 15770 ;; *************** function _ultoa *****************
 15771 ;; Defined at:
 15772 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15775 ;;		 -> ConfigFile_buffer(512), 
 15776 ;;  val             4   15[BANK0 ] unsigned long 
 15777 ;;  base            2   19[BANK0 ] int 
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;  v               4   21[BANK0 ] unsigned long 
 15780 ;;  c               1   25[BANK0 ] unsigned char 
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  2   13[BANK0 ] PTR unsigned char 
 15783 ;; Registers used:
 15784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15785 ;; Tracked objects:
 15786 ;;		On entry : 0/0
 15787 ;;		On exit  : 0/0
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15790 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15791 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15793 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15794 ;;Total ram usage:       13 bytes
 15795 ;; Hardware stack levels used:    1
 15796 ;; Hardware stack levels required when called:   11
 15797 ;; This function calls:
 15798 ;;		___lldiv
 15799 ;;		___llmod
 15800 ;; This function is called by:
 15801 ;;		_ltoa
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805                           	psect	text56
 15806  0113E0                     __ptext56:
 15807                           	opt stack 0
 15808  0113E0                     _ultoa:
 15809                           	opt stack 15
 15810                           
 15811                           ;incstack = 0
 15812  0113E0  C06F  F075         	movff	ultoa@val,ultoa@v
 15813  0113E4  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15814  0113E8  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15815  0113EC  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15816  0113F0  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15817  0113F4  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15818  0113F8  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15819  0113FC  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15820  011400  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15821  011404  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15822  011408  0100               	movlb	0	; () banked
 15823  01140A  0E00               	movlw	0
 15824  01140C  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15825  01140E  0EFF               	movlw	-1
 15826  011410  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15827  011412  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15828  011414  EC8F  F09C         	call	___lldiv	;wreg free
 15829  011418  C060  F075         	movff	?___lldiv,ultoa@v
 15830  01141C  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15831  011420  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15832  011424  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15833  011428  0100               	movlb	0	; () banked
 15834  01142A  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15835  01142C  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15836                           
 15837                           ; BSR set to: 0
 15838  01142E  5175               	movf	ultoa@v& (0+255),w,b
 15839  011430  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15840  011432  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15841  011434  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15842  011436  A4D8               	btfss	status,2,c
 15843  011438  D7DB               	goto	l3688
 15844                           
 15845                           ; BSR set to: 0
 15846                           
 15847                           ; BSR set to: 0
 15848  01143A  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15849  01143E  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15850  011442  0E00               	movlw	0
 15851  011444  6EDF               	movwf	indf2,c
 15852                           
 15853                           ; BSR set to: 0
 15854  011446  076D               	decf	ultoa@buf& (0+255),f,b
 15855  011448  A0D8               	btfss	status,0,c
 15856  01144A  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15857  01144C                     
 15858                           ; BSR set to: 0
 15859                           
 15860                           ; BSR set to: 0
 15861  01144C  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15862  011450  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15863  011454  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15864  011458  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15865  01145C  C073  F064         	movff	ultoa@base,___llmod@divisor
 15866  011460  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15867  011464  0E00               	movlw	0
 15868  011466  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15869  011468  0EFF               	movlw	-1
 15870  01146A  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15871  01146C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15872  01146E  EC81  F0A0         	call	___llmod	;wreg free
 15873  011472  0100               	movlb	0	; () banked
 15874  011474  5160               	movf	?___llmod& (0+255),w,b
 15875  011476  6F79               	movwf	ultoa@c& (0+255),b
 15876                           
 15877                           ; BSR set to: 0
 15878  011478  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15879  01147C  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15880  011480  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15881  011484  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15882  011488  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15883  01148C  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15884  011490  0E00               	movlw	0
 15885  011492  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15886  011494  0EFF               	movlw	-1
 15887  011496  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15888  011498  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15889  01149A  EC8F  F09C         	call	___lldiv	;wreg free
 15890  01149E  C060  F06F         	movff	?___lldiv,ultoa@val
 15891  0114A2  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15892  0114A6  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15893  0114AA  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15894  0114AE  0E09               	movlw	9
 15895  0114B0  0100               	movlb	0	; () banked
 15896  0114B2  6579               	cpfsgt	ultoa@c& (0+255),b
 15897  0114B4  D002               	goto	l3691
 15898                           
 15899                           ; BSR set to: 0
 15900  0114B6  0E07               	movlw	7
 15901  0114B8  2779               	addwf	ultoa@c& (0+255),f,b
 15902  0114BA                     l3691:
 15903                           
 15904                           ; BSR set to: 0
 15905  0114BA  0E30               	movlw	48
 15906  0114BC  2779               	addwf	ultoa@c& (0+255),f,b
 15907                           
 15908                           ; BSR set to: 0
 15909  0114BE  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15910  0114C2  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15911  0114C6  C079  FFDF         	movff	ultoa@c,indf2
 15912                           
 15913                           ; BSR set to: 0
 15914  0114CA  076D               	decf	ultoa@buf& (0+255),f,b
 15915  0114CC  A0D8               	btfss	status,0,c
 15916  0114CE  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15917                           
 15918                           ; BSR set to: 0
 15919  0114D0  516F               	movf	ultoa@val& (0+255),w,b
 15920  0114D2  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15921  0114D4  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15922  0114D6  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15923  0114D8  B4D8               	btfsc	status,2,c
 15924  0114DA  0012               	return	
 15925  0114DC  D7B7               	goto	l3690
 15926  0114DE                     __end_of_ultoa:
 15927                           	opt stack 0
 15928                           tblptru	equ	0xFF8
 15929                           tblptrh	equ	0xFF7
 15930                           tblptrl	equ	0xFF6
 15931                           tablat	equ	0xFF5
 15932                           prodh	equ	0xFF4
 15933                           prodl	equ	0xFF3
 15934                           postinc0	equ	0xFEE
 15935                           wreg	equ	0xFE8
 15936                           postdec1	equ	0xFE5
 15937                           plusw1	equ	0xFE3
 15938                           fsr1h	equ	0xFE2
 15939                           fsr1l	equ	0xFE1
 15940                           indf2	equ	0xFDF
 15941                           postinc2	equ	0xFDE
 15942                           plusw2	equ	0xFDB
 15943                           fsr2h	equ	0xFDA
 15944                           fsr2l	equ	0xFD9
 15945                           status	equ	0xFD8
 15946                           
 15947 ;; *************** function ___llmod *****************
 15948 ;; Defined at:
 15949 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;  dividend        4    0[BANK0 ] unsigned long 
 15952 ;;  divisor         4    4[BANK0 ] unsigned long 
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;  counter         1    8[BANK0 ] unsigned char 
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  4    0[BANK0 ] unsigned long 
 15957 ;; Registers used:
 15958 ;;		wreg, status,2, status,0
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15964 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15967 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15968 ;;Total ram usage:        9 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:   10
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		_ultoa
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text57
 15979  014102                     __ptext57:
 15980                           	opt stack 0
 15981  014102                     ___llmod:
 15982                           	opt stack 15
 15983                           
 15984                           ; BSR set to: 0
 15985                           ;incstack = 0
 15986  014102  0100               	movlb	0	; () banked
 15987  014104  5164               	movf	___llmod@divisor& (0+255),w,b
 15988  014106  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15989  014108  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15990  01410A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15991  01410C  B4D8               	btfsc	status,2,c
 15992  01410E  D024               	goto	l3386
 15993                           
 15994                           ; BSR set to: 0
 15995  014110  0E01               	movlw	1
 15996  014112  6F68               	movwf	___llmod@counter& (0+255),b
 15997  014114  D006               	goto	l3381
 15998  014116                     
 15999                           ; BSR set to: 0
 16000                           
 16001                           ; BSR set to: 0
 16002  014116  90D8               	bcf	status,0,c
 16003  014118  3764               	rlcf	___llmod@divisor& (0+255),f,b
 16004  01411A  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 16005  01411C  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16006  01411E  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16007  014120  2B68               	incf	___llmod@counter& (0+255),f,b
 16008  014122                     l3381:
 16009                           
 16010                           ; BSR set to: 0
 16011                           
 16012                           ; BSR set to: 0
 16013  014122  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16014  014124  D7F8               	goto	l3382
 16015  014126                     u11840:
 16016                           
 16017                           ; BSR set to: 0
 16018                           
 16019                           ; BSR set to: 0
 16020                           
 16021                           ; BSR set to: 0
 16022  014126  5164               	movf	___llmod@divisor& (0+255),w,b
 16023  014128  5D60               	subwf	___llmod@dividend& (0+255),w,b
 16024  01412A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16025  01412C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16026  01412E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16027  014130  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16028  014132  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16029  014134  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16030  014136  A0D8               	btfss	status,0,c
 16031  014138  D008               	goto	l3385
 16032                           
 16033                           ; BSR set to: 0
 16034  01413A  5164               	movf	___llmod@divisor& (0+255),w,b
 16035  01413C  5F60               	subwf	___llmod@dividend& (0+255),f,b
 16036  01413E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16037  014140  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16038  014142  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16039  014144  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16040  014146  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16041  014148  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16042  01414A                     l3385:
 16043                           
 16044                           ; BSR set to: 0
 16045                           
 16046                           ; BSR set to: 0
 16047  01414A  90D8               	bcf	status,0,c
 16048  01414C  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16049  01414E  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16050  014150  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16051  014152  3364               	rrcf	___llmod@divisor& (0+255),f,b
 16052                           
 16053                           ; BSR set to: 0
 16054  014154  2F68               	decfsz	___llmod@counter& (0+255),f,b
 16055  014156  D7E7               	goto	u11840
 16056  014158                     l3386:
 16057                           
 16058                           ; BSR set to: 0
 16059                           
 16060                           ; BSR set to: 0
 16061  014158  C060  F060         	movff	___llmod@dividend,?___llmod
 16062  01415C  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 16063  014160  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 16064  014164  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 16065                           
 16066                           ; BSR set to: 0
 16067  014168  0012               	return		;funcret
 16068  01416A                     __end_of___llmod:
 16069                           	opt stack 0
 16070                           tblptru	equ	0xFF8
 16071                           tblptrh	equ	0xFF7
 16072                           tblptrl	equ	0xFF6
 16073                           tablat	equ	0xFF5
 16074                           prodh	equ	0xFF4
 16075                           prodl	equ	0xFF3
 16076                           postinc0	equ	0xFEE
 16077                           wreg	equ	0xFE8
 16078                           postdec1	equ	0xFE5
 16079                           plusw1	equ	0xFE3
 16080                           fsr1h	equ	0xFE2
 16081                           fsr1l	equ	0xFE1
 16082                           indf2	equ	0xFDF
 16083                           postinc2	equ	0xFDE
 16084                           plusw2	equ	0xFDB
 16085                           fsr2h	equ	0xFDA
 16086                           fsr2l	equ	0xFD9
 16087                           status	equ	0xFD8
 16088                           
 16089 ;; *************** function ___lldiv *****************
 16090 ;; Defined at:
 16091 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;  dividend        4    0[BANK0 ] unsigned long 
 16094 ;;  divisor         4    4[BANK0 ] unsigned long 
 16095 ;; Auto vars:     Size  Location     Type
 16096 ;;  quotient        4    8[BANK0 ] unsigned long 
 16097 ;;  counter         1   12[BANK0 ] unsigned char 
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  4    0[BANK0 ] unsigned long 
 16100 ;; Registers used:
 16101 ;;		wreg, status,2, status,0
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16107 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16108 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16110 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16111 ;;Total ram usage:       13 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:   10
 16114 ;; This function calls:
 16115 ;;		Nothing
 16116 ;; This function is called by:
 16117 ;;		_ultoa
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           	psect	text58
 16122  01391E                     __ptext58:
 16123                           	opt stack 0
 16124  01391E                     ___lldiv:
 16125                           	opt stack 15
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;incstack = 0
 16129  01391E  0E00               	movlw	0
 16130  013920  0100               	movlb	0	; () banked
 16131  013922  6F68               	movwf	___lldiv@quotient& (0+255),b
 16132  013924  0E00               	movlw	0
 16133  013926  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 16134  013928  0E00               	movlw	0
 16135  01392A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 16136  01392C  0E00               	movlw	0
 16137  01392E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 16138                           
 16139                           ; BSR set to: 0
 16140  013930  5164               	movf	___lldiv@divisor& (0+255),w,b
 16141  013932  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16142  013934  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16143  013936  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16144  013938  B4D8               	btfsc	status,2,c
 16145  01393A  D02A               	goto	l3005
 16146                           
 16147                           ; BSR set to: 0
 16148  01393C  0E01               	movlw	1
 16149  01393E  6F6C               	movwf	___lldiv@counter& (0+255),b
 16150  013940  D006               	goto	l3000
 16151  013942                     
 16152                           ; BSR set to: 0
 16153                           
 16154                           ; BSR set to: 0
 16155  013942  90D8               	bcf	status,0,c
 16156  013944  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 16157  013946  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16158  013948  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16159  01394A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16160  01394C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 16161  01394E                     l3000:
 16162                           
 16163                           ; BSR set to: 0
 16164                           
 16165                           ; BSR set to: 0
 16166  01394E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16167  013950  D7F8               	goto	l3001
 16168  013952                     u11810:
 16169                           
 16170                           ; BSR set to: 0
 16171                           
 16172                           ; BSR set to: 0
 16173                           
 16174                           ; BSR set to: 0
 16175  013952  90D8               	bcf	status,0,c
 16176  013954  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 16177  013956  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16178  013958  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16179  01395A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16180                           
 16181                           ; BSR set to: 0
 16182  01395C  5164               	movf	___lldiv@divisor& (0+255),w,b
 16183  01395E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 16184  013960  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16185  013962  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16186  013964  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16187  013966  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16188  013968  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16189  01396A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16190  01396C  A0D8               	btfss	status,0,c
 16191  01396E  D009               	goto	l3004
 16192                           
 16193                           ; BSR set to: 0
 16194  013970  5164               	movf	___lldiv@divisor& (0+255),w,b
 16195  013972  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 16196  013974  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16197  013976  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16198  013978  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16199  01397A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16200  01397C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16201  01397E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16202                           
 16203                           ; BSR set to: 0
 16204  013980  8168               	bsf	___lldiv@quotient& (0+255),0,b
 16205  013982                     l3004:
 16206                           
 16207                           ; BSR set to: 0
 16208                           
 16209                           ; BSR set to: 0
 16210  013982  90D8               	bcf	status,0,c
 16211  013984  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16212  013986  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16213  013988  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16214  01398A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 16215                           
 16216                           ; BSR set to: 0
 16217  01398C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 16218  01398E  D7E1               	goto	u11810
 16219  013990                     l3005:
 16220                           
 16221                           ; BSR set to: 0
 16222                           
 16223                           ; BSR set to: 0
 16224  013990  C068  F060         	movff	___lldiv@quotient,?___lldiv
 16225  013994  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 16226  013998  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 16227  01399C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 16228                           
 16229                           ; BSR set to: 0
 16230  0139A0  0012               	return		;funcret
 16231  0139A2                     __end_of___lldiv:
 16232                           	opt stack 0
 16233                           tblptru	equ	0xFF8
 16234                           tblptrh	equ	0xFF7
 16235                           tblptrl	equ	0xFF6
 16236                           tablat	equ	0xFF5
 16237                           prodh	equ	0xFF4
 16238                           prodl	equ	0xFF3
 16239                           postinc0	equ	0xFEE
 16240                           wreg	equ	0xFE8
 16241                           postdec1	equ	0xFE5
 16242                           plusw1	equ	0xFE3
 16243                           fsr1h	equ	0xFE2
 16244                           fsr1l	equ	0xFE1
 16245                           indf2	equ	0xFDF
 16246                           postinc2	equ	0xFDE
 16247                           plusw2	equ	0xFDB
 16248                           fsr2h	equ	0xFDA
 16249                           fsr2l	equ	0xFD9
 16250                           status	equ	0xFD8
 16251                           
 16252 ;; *************** function _configFile_readDefault *****************
 16253 ;; Defined at:
 16254 ;;		line 209 in file "config_file.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;		None
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;		None
 16259 ;; Return value:  Size  Location     Type
 16260 ;;                  1    wreg      void 
 16261 ;; Registers used:
 16262 ;;		wreg, status,2
 16263 ;; Tracked objects:
 16264 ;;		On entry : 0/0
 16265 ;;		On exit  : 0/0
 16266 ;;		Unchanged: 0/0
 16267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16272 ;;Total ram usage:        0 bytes
 16273 ;; Hardware stack levels used:    1
 16274 ;; Hardware stack levels required when called:   10
 16275 ;; This function calls:
 16276 ;;		Nothing
 16277 ;; This function is called by:
 16278 ;;		_system_init
 16279 ;; This function uses a non-reentrant model
 16280 ;;
 16281                           
 16282                           	psect	text59
 16283  0141CE                     __ptext59:
 16284                           	opt stack 0
 16285  0141CE                     _configFile_readDefault:
 16286                           	opt stack 19
 16287                           
 16288                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 16289                           
 16290                           ; BSR set to: 0
 16291                           ;incstack = 0
 16292  0141CE  0E00               	movlw	0
 16293  0141D0  0101               	movlb	1	; () banked
 16294  0141D2  6FA1               	movwf	_config& (0+255),b
 16295  0141D4  0ECA               	movlw	202
 16296  0141D6  6FA2               	movwf	(_config+1)& (0+255),b
 16297  0141D8  0E08               	movlw	8
 16298  0141DA  6FA3               	movwf	(_config+2)& (0+255),b
 16299  0141DC  0E00               	movlw	0
 16300  0141DE  6FA4               	movwf	(_config+3)& (0+255),b
 16301                           
 16302                           ;config_file.c: 212: config.inverse_direction = 1;
 16303  0141E0  0E01               	movlw	1
 16304  0141E2  6FA5               	movwf	(_config+4)& (0+255),b
 16305                           
 16306                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 16307  0141E4  0E19               	movlw	25
 16308  0141E6  6FA7               	movwf	(_config+6)& (0+255),b
 16309  0141E8  0E00               	movlw	0
 16310  0141EA  6FA6               	movwf	(_config+5)& (0+255),b
 16311                           
 16312                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 16313  0141EC  0E0B               	movlw	11
 16314  0141EE  6FA9               	movwf	(_config+8)& (0+255),b
 16315  0141F0  0EB8               	movlw	184
 16316  0141F2  6FA8               	movwf	(_config+7)& (0+255),b
 16317                           
 16318                           ;config_file.c: 215: config.minimum_speed = 1;
 16319  0141F4  0E00               	movlw	0
 16320  0141F6  6FAB               	movwf	(_config+10)& (0+255),b
 16321  0141F8  0E01               	movlw	1
 16322  0141FA  6FAA               	movwf	(_config+9)& (0+255),b
 16323                           
 16324                           ;config_file.c: 216: config.maximum_speed = 380;
 16325  0141FC  0E01               	movlw	1
 16326  0141FE  6FAD               	movwf	(_config+12)& (0+255),b
 16327  014200  0E7C               	movlw	124
 16328  014202  6FAC               	movwf	(_config+11)& (0+255),b
 16329                           
 16330                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 16331  014204  0E01               	movlw	1
 16332  014206  6FB1               	movwf	(_config+16)& (0+255),b
 16333  014208  0E31               	movlw	49
 16334  01420A  6FB0               	movwf	(_config+15)& (0+255),b
 16335                           
 16336                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 16337  01420C  0E01               	movlw	1
 16338  01420E  6FB5               	movwf	(_config+20)& (0+255),b
 16339  014210  0E31               	movlw	49
 16340  014212  6FB4               	movwf	(_config+19)& (0+255),b
 16341                           
 16342                           ;config_file.c: 219: config.use_ccw_limit = 0;
 16343  014214  0E00               	movlw	0
 16344  014216  6FBA               	movwf	(_config+25)& (0+255),b
 16345                           
 16346                           ;config_file.c: 220: config.ccw_limit = 35500;
 16347  014218  0E8A               	movlw	138
 16348  01421A  6FBC               	movwf	(_config+27)& (0+255),b
 16349  01421C  0EAC               	movlw	172
 16350  01421E  6FBB               	movwf	(_config+26)& (0+255),b
 16351                           
 16352                           ;config_file.c: 221: config.use_cw_limit = 0;
 16353  014220  0E00               	movlw	0
 16354  014222  6FB7               	movwf	(_config+22)& (0+255),b
 16355                           
 16356                           ;config_file.c: 222: config.cw_limit = 500;
 16357  014224  0E01               	movlw	1
 16358  014226  6FB9               	movwf	(_config+24)& (0+255),b
 16359  014228  0EF4               	movlw	244
 16360  01422A  6FB8               	movwf	(_config+23)& (0+255),b
 16361                           
 16362                           ;config_file.c: 223: config.beep_duration = 10;
 16363  01422C  0E0A               	movlw	10
 16364  01422E  6FB6               	movwf	(_config+21)& (0+255),b
 16365                           
 16366                           ; BSR set to: 1
 16367  014230  0012               	return		;funcret
 16368  014232                     __end_of_configFile_readDefault:
 16369                           	opt stack 0
 16370                           tblptru	equ	0xFF8
 16371                           tblptrh	equ	0xFF7
 16372                           tblptrl	equ	0xFF6
 16373                           tablat	equ	0xFF5
 16374                           prodh	equ	0xFF4
 16375                           prodl	equ	0xFF3
 16376                           postinc0	equ	0xFEE
 16377                           wreg	equ	0xFE8
 16378                           postdec1	equ	0xFE5
 16379                           plusw1	equ	0xFE3
 16380                           fsr1h	equ	0xFE2
 16381                           fsr1l	equ	0xFE1
 16382                           indf2	equ	0xFDF
 16383                           postinc2	equ	0xFDE
 16384                           plusw2	equ	0xFDB
 16385                           fsr2h	equ	0xFDA
 16386                           fsr2l	equ	0xFD9
 16387                           status	equ	0xFD8
 16388                           
 16389 ;; *************** function _configFile_read *****************
 16390 ;; Defined at:
 16391 ;;		line 227 in file "config_file.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;		None
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 16396 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 16397 ;;  position        4   56[BANK1 ] unsigned long 
 16398 ;;  file_size       4   51[BANK1 ] unsigned long 
 16399 ;;  file_number     1   55[BANK1 ] unsigned char 
 16400 ;; Return value:  Size  Location     Type
 16401 ;;                  1    wreg      void 
 16402 ;; Registers used:
 16403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16404 ;; Tracked objects:
 16405 ;;		On entry : 0/0
 16406 ;;		On exit  : 0/0
 16407 ;;		Unchanged: 0/0
 16408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16410 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16411 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16412 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16413 ;;Total ram usage:       60 bytes
 16414 ;; Hardware stack levels used:    1
 16415 ;; Hardware stack levels required when called:   19
 16416 ;; This function calls:
 16417 ;;		__get_item
 16418 ;;		__parse_item
 16419 ;;		_fat_find_file
 16420 ;;		_fat_get_file_size
 16421 ;;		_fat_read_from_file
 16422 ;; This function is called by:
 16423 ;;		_system_init
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           	psect	text60
 16428  00F5BA                     __ptext60:
 16429                           	opt stack 0
 16430  00F5BA                     _configFile_read:
 16431                           	opt stack 10
 16432                           
 16433                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 16434                           
 16435                           ; BSR set to: 1
 16436                           ;incstack = 0
 16437  00F5BA  0EC8               	movlw	low _configFile_name
 16438  00F5BC  0100               	movlb	0	; () banked
 16439  00F5BE  6F8B               	movwf	fat_find_file@name& (0+255),b
 16440  00F5C0  0E02               	movlw	high _configFile_name
 16441  00F5C2  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 16442  00F5C4  0ED3               	movlw	low _configFile_extention
 16443  00F5C6  6F8D               	movwf	fat_find_file@extension& (0+255),b
 16444  00F5C8  0E02               	movlw	high _configFile_extention
 16445  00F5CA  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 16446  00F5CC  EC48  F08D         	call	_fat_find_file	;wreg free
 16447  00F5D0  0101               	movlb	1	; () banked
 16448  00F5D2  6FFA               	movwf	configFile_read@file_number& (0+255),b
 16449                           
 16450                           ; BSR set to: 1
 16451                           ;config_file.c: 237: if(file_number==0xFF)
 16452  00F5D4  29FA               	incf	configFile_read@file_number& (0+255),w,b
 16453  00F5D6  B4D8               	btfsc	status,2,c
 16454  00F5D8  0012               	return	
 16455                           
 16456                           ; BSR set to: 1
 16457                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 16458                           
 16459                           ; BSR set to: 1
 16460                           
 16461                           ; BSR set to: 1
 16462                           ;config_file.c: 238: {;config_file.c: 240: return;
 16463  00F5DA  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16464  00F5DC  EC4D  F09E         	call	_fat_get_file_size
 16465  00F5E0  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 16466  00F5E4  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 16467  00F5E8  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 16468  00F5EC  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 16469                           
 16470                           ;config_file.c: 247: position = 0;
 16471  00F5F0  0E00               	movlw	0
 16472  00F5F2  0101               	movlb	1	; () banked
 16473  00F5F4  6FFB               	movwf	configFile_read@position& (0+255),b
 16474  00F5F6  0E00               	movlw	0
 16475  00F5F8  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 16476  00F5FA  0E00               	movlw	0
 16477  00F5FC  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 16478  00F5FE  0E00               	movlw	0
 16479  00F600  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 16480                           
 16481                           ;config_file.c: 248: while((file_size-position)>3)
 16482  00F602  D086               	goto	l2960
 16483  00F604                     
 16484                           ; BSR set to: 1
 16485                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 16486                           
 16487                           ; BSR set to: 1
 16488  00F604  0E2D               	movlw	45
 16489  00F606  25FB               	addwf	configFile_read@position& (0+255),w,b
 16490  00F608  6FC3               	movwf	??_configFile_read& (0+255),b
 16491  00F60A  0E00               	movlw	0
 16492  00F60C  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 16493  00F60E  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 16494  00F610  0E00               	movlw	0
 16495  00F612  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 16496  00F614  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 16497  00F616  0E00               	movlw	0
 16498  00F618  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 16499  00F61A  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 16500  00F61C  51C3               	movf	??_configFile_read& (0+255),w,b
 16501  00F61E  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 16502  00F620  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 16503  00F622  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 16504  00F624  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 16505  00F626  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 16506  00F628  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 16507  00F62A  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 16508  00F62C  B0D8               	btfsc	status,0,c
 16509  00F62E  D035               	goto	l2962
 16510                           
 16511                           ; BSR set to: 1
 16512                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 16513  00F630  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16514  00F634  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16515  00F638  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16516  00F63C  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16517  00F640  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16518  00F644  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16519  00F648  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16520  00F64C  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16521  00F650  1FC3               	comf	??_configFile_read& (0+255),f,b
 16522  00F652  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16523  00F654  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16524  00F656  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16525  00F658  2BC3               	incf	??_configFile_read& (0+255),f,b
 16526  00F65A  0E00               	movlw	0
 16527  00F65C  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16528  00F65E  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16529  00F660  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16530  00F662  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16531  00F664  25C3               	addwf	??_configFile_read& (0+255),w,b
 16532  00F666  0100               	movlb	0	; () banked
 16533  00F668  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16534  00F66A  0101               	movlb	1	; () banked
 16535  00F66C  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16536  00F66E  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16537  00F670  0100               	movlb	0	; () banked
 16538  00F672  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16539  00F674  0101               	movlb	1	; () banked
 16540  00F676  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16541  00F678  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16542  00F67A  0100               	movlb	0	; () banked
 16543  00F67C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16544  00F67E  0101               	movlb	1	; () banked
 16545  00F680  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16546  00F682  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16547  00F684  0100               	movlb	0	; () banked
 16548  00F686  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16549  00F688  0E00               	movlw	low _ConfigFile_buffer
 16550  00F68A  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16551  00F68C  0E08               	movlw	high _ConfigFile_buffer
 16552  00F68E  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16553  00F690  0101               	movlb	1	; () banked
 16554  00F692  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16555  00F694  ECBC  F08D         	call	_fat_read_from_file
 16556                           
 16557                           ;config_file.c: 254: }
 16558  00F698  D019               	goto	l2963
 16559  00F69A                     l2962:
 16560                           
 16561                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 16562  00F69A  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16563  00F69E  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16564  00F6A2  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16565  00F6A6  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16566  00F6AA  0E2D               	movlw	45
 16567  00F6AC  0100               	movlb	0	; () banked
 16568  00F6AE  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16569  00F6B0  0E00               	movlw	0
 16570  00F6B2  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16571  00F6B4  0E00               	movlw	0
 16572  00F6B6  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16573  00F6B8  0E00               	movlw	0
 16574  00F6BA  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16575  00F6BC  0E00               	movlw	low _ConfigFile_buffer
 16576  00F6BE  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16577  00F6C0  0E08               	movlw	high _ConfigFile_buffer
 16578  00F6C2  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16579  00F6C4  0101               	movlb	1	; () banked
 16580  00F6C6  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16581  00F6C8  ECBC  F08D         	call	_fat_read_from_file
 16582  00F6CC                     l2963:
 16583                           
 16584                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 16585  00F6CC  0ECB               	movlw	low configFile_read@item_string
 16586  00F6CE  0100               	movlb	0	; () banked
 16587  00F6D0  6F60               	movwf	__get_item@item_string& (0+255),b
 16588  00F6D2  0E01               	movlw	high configFile_read@item_string
 16589  00F6D4  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 16590  00F6D6  0EEA               	movlw	low configFile_read@value_string
 16591  00F6D8  6F62               	movwf	__get_item@value_string& (0+255),b
 16592  00F6DA  0E01               	movlw	high configFile_read@value_string
 16593  00F6DC  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16594  00F6DE  0E00               	movlw	low _ConfigFile_buffer
 16595  00F6E0  6F64               	movwf	__get_item@buffer& (0+255),b
 16596  00F6E2  0E08               	movlw	high _ConfigFile_buffer
 16597  00F6E4  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16598  00F6E6  EC35  F07D         	call	__get_item	;wreg free
 16599  00F6EA  0101               	movlb	1	; () banked
 16600  00F6EC  6FC3               	movwf	??_configFile_read& (0+255),b
 16601  00F6EE  51C3               	movf	??_configFile_read& (0+255),w,b
 16602  00F6F0  27FB               	addwf	configFile_read@position& (0+255),f,b
 16603  00F6F2  0E00               	movlw	0
 16604  00F6F4  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16605  00F6F6  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16606  00F6F8  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16607                           
 16608                           ; BSR set to: 1
 16609                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 16610  00F6FA  0ECB               	movlw	low configFile_read@item_string
 16611  00F6FC  0100               	movlb	0	; () banked
 16612  00F6FE  6F7A               	movwf	__parse_item@item_string& (0+255),b
 16613  00F700  0E01               	movlw	high configFile_read@item_string
 16614  00F702  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 16615  00F704  0EEA               	movlw	low configFile_read@value_string
 16616  00F706  6F7C               	movwf	__parse_item@value_string& (0+255),b
 16617  00F708  0E01               	movlw	high configFile_read@value_string
 16618  00F70A  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 16619  00F70C  EC6A  F064         	call	__parse_item	;wreg free
 16620  00F710                     l2960:
 16621  00F710  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16622  00F714  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16623  00F718  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16624  00F71C  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16625  00F720  0101               	movlb	1	; () banked
 16626  00F722  1FC3               	comf	??_configFile_read& (0+255),f,b
 16627  00F724  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16628  00F726  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16629  00F728  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16630  00F72A  2BC3               	incf	??_configFile_read& (0+255),f,b
 16631  00F72C  0E00               	movlw	0
 16632  00F72E  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16633  00F730  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16634  00F732  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16635  00F734  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16636  00F736  25C3               	addwf	??_configFile_read& (0+255),w,b
 16637  00F738  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16638  00F73A  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16639  00F73C  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16640  00F73E  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16641  00F740  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16642  00F742  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16643  00F744  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16644  00F746  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16645  00F748  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16646  00F74A  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16647  00F74C  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16648  00F74E  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16649  00F750  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16650  00F752  E104               	bnz	u16451
 16651  00F754  0E04               	movlw	4
 16652  00F756  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16653  00F758  A0D8               	btfss	status,0,c
 16654  00F75A  0012               	return	
 16655  00F75C                     u16451:
 16656  00F75C  D753               	goto	l2961
 16657  00F75E                     __end_of_configFile_read:
 16658                           	opt stack 0
 16659                           tblptru	equ	0xFF8
 16660                           tblptrh	equ	0xFF7
 16661                           tblptrl	equ	0xFF6
 16662                           tablat	equ	0xFF5
 16663                           prodh	equ	0xFF4
 16664                           prodl	equ	0xFF3
 16665                           postinc0	equ	0xFEE
 16666                           wreg	equ	0xFE8
 16667                           postdec1	equ	0xFE5
 16668                           plusw1	equ	0xFE3
 16669                           fsr1h	equ	0xFE2
 16670                           fsr1l	equ	0xFE1
 16671                           indf2	equ	0xFDF
 16672                           postinc2	equ	0xFDE
 16673                           plusw2	equ	0xFDB
 16674                           fsr2h	equ	0xFDA
 16675                           fsr2l	equ	0xFD9
 16676                           status	equ	0xFD8
 16677                           
 16678 ;; *************** function _fat_read_from_file *****************
 16679 ;; Defined at:
 16680 ;;		line 751 in file "fat16.c"
 16681 ;; Parameters:    Size  Location     Type
 16682 ;;  file_number     1    wreg     unsigned char 
 16683 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16684 ;;  length          4  109[BANK0 ] unsigned long 
 16685 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16686 ;;		 -> ConfigFile_buffer(512), 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;  file_number     1  119[BANK0 ] unsigned char 
 16689 ;;  root           32  125[BANK0 ] struct .
 16690 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16691 ;;  cluster         2  121[BANK0 ] unsigned int 
 16692 ;;  return_code     1  120[BANK0 ] unsigned char 
 16693 ;; Return value:  Size  Location     Type
 16694 ;;                  1    wreg      unsigned char 
 16695 ;; Registers used:
 16696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16702 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16703 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16705 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16706 ;;Total ram usage:       52 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:   18
 16709 ;; This function calls:
 16710 ;;		_fat_get_file_information
 16711 ;;		_fat_read_from_file_fast
 16712 ;; This function is called by:
 16713 ;;		_configFile_read
 16714 ;; This function uses a non-reentrant model
 16715 ;;
 16716                           
 16717                           	psect	text61
 16718  011B78                     __ptext61:
 16719                           	opt stack 0
 16720  011B78                     _fat_read_from_file:
 16721                           	opt stack 10
 16722                           
 16723                           ; BSR set to: 1
 16724                           ;incstack = 0
 16725                           ;fat_read_from_file@file_number stored from wreg
 16726  011B78  0100               	movlb	0	; () banked
 16727  011B7A  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16728                           
 16729                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16730  011B7C  0EDD               	movlw	low fat_read_from_file@root
 16731  011B7E  0100               	movlb	0	; () banked
 16732  011B80  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16733  011B82  0E00               	movlw	high fat_read_from_file@root
 16734  011B84  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16735  011B86  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16736  011B88  EC10  F09E         	call	_fat_get_file_information
 16737  011B8C  0100               	movlb	0	; () banked
 16738  011B8E  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;fat16.c: 760: if(return_code!=0x00)
 16742  011B90  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16743  011B92  A4D8               	btfss	status,2,c
 16744  011B94  0012               	return	
 16745                           
 16746                           ; BSR set to: 0
 16747                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 16748                           
 16749                           ; BSR set to: 0
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;fat16.c: 761: {;fat16.c: 763: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16753  011B96  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16754  011B98  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16755  011B9A  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16756  011B9C  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16757  011B9E  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16758  011BA0  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16759  011BA2  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16760  011BA4  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16761  011BA6  A0D8               	btfss	status,0,c
 16762  011BA8  0012               	return	
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 16766                           
 16767                           ; BSR set to: 0
 16768                           
 16769                           ; BSR set to: 0
 16770                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16771  011BAA  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16772  011BAC  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16773  011BAE  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16774  011BB0  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16775  011BB2  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16776  011BB4  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16777  011BB6  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16778  011BB8  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16779  011BBA  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16780  011BBC  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16781  011BBE  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16782  011BC0  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16783  011BC2  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16784  011BC4  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16785  011BC6  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16786  011BC8  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16787  011BCA  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16788  011BCC  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16789  011BCE  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16790  011BD0  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16791  011BD2  B0D8               	btfsc	status,0,c
 16792  011BD4  D01D               	goto	l1877
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 16796  011BD6  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16797  011BDA  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16798  011BDE  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16799  011BE2  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16800  011BE6  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16801  011BE8  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16802  011BEA  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16803  011BEC  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16804  011BEE  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16805  011BF0  0E00               	movlw	0
 16806  011BF2  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16807  011BF4  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16808  011BF6  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16809  011BF8  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16810  011BFA  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16811  011BFC  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16812  011BFE  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16813  011C00  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16814  011C02  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16815  011C04  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16816  011C06  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16817  011C08  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16818  011C0A  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16819  011C0C  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16820  011C0E  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16821  011C10                     l1877:
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 16825                           
 16826                           ; BSR set to: 0
 16827  011C10  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16828  011C14  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;fat16.c: 781: cluster_number = 0;
 16832  011C18  0E00               	movlw	0
 16833  011C1A  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16834  011C1C  0E00               	movlw	0
 16835  011C1E  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16839  011C20  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16840  011C24  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16841  011C28  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16842  011C2C  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16843  011C30  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16844  011C34  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16845  011C38  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16846  011C3C  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16847  011C40  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16848  011C44  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16849  011C48  0ED9               	movlw	low fat_read_from_file@cluster
 16850  011C4A  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16851  011C4C  0E00               	movlw	high fat_read_from_file@cluster
 16852  011C4E  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16853  011C50  0EDB               	movlw	low fat_read_from_file@cluster_number
 16854  011C52  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16855  011C54  0E00               	movlw	high fat_read_from_file@cluster_number
 16856  011C56  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16857  011C58  ECFA  F073         	call	_fat_read_from_file_fast	;wreg free
 16858  011C5C  0012               	return	
 16859  011C5E                     __end_of_fat_read_from_file:
 16860                           	opt stack 0
 16861                           tblptru	equ	0xFF8
 16862                           tblptrh	equ	0xFF7
 16863                           tblptrl	equ	0xFF6
 16864                           tablat	equ	0xFF5
 16865                           prodh	equ	0xFF4
 16866                           prodl	equ	0xFF3
 16867                           postinc0	equ	0xFEE
 16868                           wreg	equ	0xFE8
 16869                           postdec1	equ	0xFE5
 16870                           plusw1	equ	0xFE3
 16871                           fsr1h	equ	0xFE2
 16872                           fsr1l	equ	0xFE1
 16873                           indf2	equ	0xFDF
 16874                           postinc2	equ	0xFDE
 16875                           plusw2	equ	0xFDB
 16876                           fsr2h	equ	0xFDA
 16877                           fsr2l	equ	0xFD9
 16878                           status	equ	0xFD8
 16879                           
 16880 ;; *************** function _fat_read_from_file_fast *****************
 16881 ;; Defined at:
 16882 ;;		line 787 in file "fat16.c"
 16883 ;; Parameters:    Size  Location     Type
 16884 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16885 ;;  length          4   69[BANK0 ] unsigned long 
 16886 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16887 ;;		 -> ConfigFile_buffer(512), 
 16888 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16889 ;;		 -> fat_read_from_file@cluster(2), 
 16890 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16891 ;;		 -> fat_read_from_file@cluster_number(2), 
 16892 ;; Auto vars:     Size  Location     Type
 16893 ;;  position        4  101[BANK0 ] unsigned long 
 16894 ;;  read_length     2   99[BANK0 ] unsigned int 
 16895 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16896 ;;  offset          2   95[BANK0 ] unsigned int 
 16897 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16898 ;;  sector          2   91[BANK0 ] unsigned int 
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  1    wreg      unsigned char 
 16901 ;; Registers used:
 16902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16903 ;; Tracked objects:
 16904 ;;		On entry : 0/0
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16908 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16909 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16910 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16911 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16912 ;;Total ram usage:       40 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; Hardware stack levels required when called:   17
 16915 ;; This function calls:
 16916 ;;		__data_sector_from_cluster
 16917 ;;		__find_nth_cluster
 16918 ;;		__read_fat
 16919 ;;		_flash_partial_read
 16920 ;; This function is called by:
 16921 ;;		_fat_read_from_file
 16922 ;; This function uses a non-reentrant model
 16923 ;;
 16924                           
 16925                           	psect	text62
 16926  00E7F4                     __ptext62:
 16927                           	opt stack 0
 16928  00E7F4                     _fat_read_from_file_fast:
 16929                           	opt stack 10
 16930                           
 16931                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16932                           
 16933                           ;incstack = 0
 16934  00E7F4  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16935  00E7F8  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16936  00E7FC  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16937  00E800  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16938  00E804  0E0A               	movlw	10
 16939  00E806  D006               	goto	u13440
 16940  00E808                     u13445:
 16941  00E808  0100               	movlb	0	; () banked
 16942  00E80A  90D8               	bcf	status,0,c
 16943  00E80C  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16944  00E80E  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16945  00E810  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16946  00E812  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16947  00E814                     u13440:
 16948  00E814  2EE8               	decfsz	wreg,f,c
 16949  00E816  D7F8               	goto	u13445
 16950  00E818  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16951  00E81C  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 16955  00E820  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16956  00E824  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16957  00E828  50DE               	movf	postinc2,w,c
 16958  00E82A  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16959  00E82C  50DE               	movf	postinc2,w,c
 16960  00E82E  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16961  00E830  B0D8               	btfsc	status,0,c
 16962  00E832  D002               	goto	l1880
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 16966  00E834  0EFF               	movlw	255
 16967                           
 16968                           ; BSR set to: 0
 16969  00E836  0012               	return	
 16970  00E838                     l1880:
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16974                           
 16975                           ; BSR set to: 0
 16976  00E838  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16977  00E83C  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16978  00E840  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16979  00E844  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16980  00E848  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16981  00E84C  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16982  00E850  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16983  00E854  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16984  00E858  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16985  00E85A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16986  00E85C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16987  00E85E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16988  00E860  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16989  00E862  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16990  00E864  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16991  00E866  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16992  00E868  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16993  00E86A  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16994  00E86C  EC0A  F099         	call	__find_nth_cluster	;wreg free
 16995  00E870  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16996  00E874  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16997  00E878  0100               	movlb	0	; () banked
 16998  00E87A  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16999  00E87E  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 17003  00E882  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 17004  00E886  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 17005  00E88A  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 17006  00E88E  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;fat16.c: 813: working_cluster = (*cluster);
 17010  00E892  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 17011  00E896  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 17012  00E89A  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 17013  00E89E  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;fat16.c: 816: position = (needed_cluster << 9);
 17017  00E8A2  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 17018  00E8A6  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 17019  00E8AA  0E09               	movlw	9
 17020  00E8AC                     u13465:
 17021  00E8AC  90D8               	bcf	status,0,c
 17022  00E8AE  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 17023  00E8B0  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17024  00E8B2  2EE8               	decfsz	wreg,f,c
 17025  00E8B4  D7FB               	goto	u13465
 17026  00E8B6  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 17027  00E8BA  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 17028  00E8BE  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 17029  00E8C0  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;fat16.c: 817: offset = start_byte - position;
 17033  00E8C2  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17034  00E8C6  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17035  00E8CA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17036  00E8CC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17037  00E8CE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17038  00E8D0  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17039  00E8D2  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 17040  00E8D4  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17041  00E8D6  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17042  00E8D8  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 17043  00E8DA  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17044  00E8DC  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;fat16.c: 820: position = 0;
 17048  00E8DE  0E00               	movlw	0
 17049  00E8E0  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 17050  00E8E2  0E00               	movlw	0
 17051  00E8E4  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 17052  00E8E6  0E00               	movlw	0
 17053  00E8E8  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 17054  00E8EA  0E00               	movlw	0
 17055  00E8EC  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 17056                           
 17057                           ;fat16.c: 821: while(position < length)
 17058  00E8EE  D089               	goto	l1882
 17059  00E8F0                     
 17060                           ; BSR set to: 0
 17061                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 17062                           
 17063                           ; BSR set to: 0
 17064  00E8F0  0E02               	movlw	2
 17065  00E8F2  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 17066  00E8F4  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 17067  00E8F6  A4D8               	btfss	status,2,c
 17068  00E8F8  D00F               	goto	l1884
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 17072  00E8FA  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 17073  00E8FE  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 17074  00E902  ECA7  F0A3         	call	__read_fat	;wreg free
 17075  00E906  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 17076  00E90A  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 17077                           
 17078                           ;fat16.c: 828: offset = 0;
 17079  00E90E  0E00               	movlw	0
 17080  00E910  0100               	movlb	0	; () banked
 17081  00E912  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17082  00E914  0E00               	movlw	0
 17083  00E916  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17084  00E918                     l1884:
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 17088                           
 17089                           ; BSR set to: 0
 17090  00E918  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 17091  00E91C  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 17092  00E920  EC58  F0AC         	call	__data_sector_from_cluster	;wreg free
 17093  00E924  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 17094  00E928  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 17095                           
 17096                           ;fat16.c: 835: read_length = 512 - offset;
 17097  00E92C  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 17098  00E930  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 17099  00E934  0100               	movlb	0	; () banked
 17100  00E936  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17101  00E938  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17102  00E93A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17103  00E93C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17104  00E93E  0E00               	movlw	0
 17105  00E940  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17106  00E942  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17107  00E944  0E02               	movlw	2
 17108  00E946  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17109  00E948  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;fat16.c: 836: if(read_length > (length-position))
 17113  00E94A  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17114  00E94C  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 17115  00E94E  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17116  00E950  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 17117  00E952  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 17118  00E954  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 17119  00E956  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 17120  00E95A  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 17121  00E95E  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 17122  00E962  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 17123  00E966  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17124  00E968  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17125  00E96A  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17126  00E96C  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17127  00E96E  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17128  00E970  0E00               	movlw	0
 17129  00E972  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17130  00E974  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17131  00E976  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17132  00E978  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17133  00E97A  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 17134  00E97C  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 17135  00E97E  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17136  00E980  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 17137  00E982  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 17138  00E984  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17139  00E986  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 17140  00E988  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 17141  00E98A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17142  00E98C  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 17143  00E98E  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 17144  00E990  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 17145  00E992  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 17146  00E994  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17147  00E996  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 17148  00E998  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 17149  00E99A  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 17150  00E99C  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 17151  00E99E  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 17152  00E9A0  B0D8               	btfsc	status,0,c
 17153  00E9A2  D00E               	goto	l1885
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 17157  00E9A4  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17158  00E9A8  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17159  00E9AC  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17160  00E9AE  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17161  00E9B0  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17162  00E9B2  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17163  00E9B4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17164  00E9B6  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17165  00E9B8  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17166  00E9BA  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17167  00E9BC  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17168  00E9BE  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17169  00E9C0                     l1885:
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 17173                           
 17174                           ; BSR set to: 0
 17175  00E9C0  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 17176  00E9C4  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 17177  00E9C8  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 17178  00E9CC  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 17179  00E9D0  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 17180  00E9D4  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 17181  00E9D8  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 17182  00E9DA  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 17183  00E9DC  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17184  00E9DE  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17185  00E9E0  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 17186  00E9E2  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17187  00E9E4  EC18  F0AB         	call	_flash_partial_read	;wreg free
 17188                           
 17189                           ;fat16.c: 846: position += read_length;
 17190  00E9E8  0100               	movlb	0	; () banked
 17191  00E9EA  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17192  00E9EC  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 17193  00E9EE  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17194  00E9F0  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 17195  00E9F2  0E00               	movlw	0
 17196  00E9F4  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 17197  00E9F6  0E00               	movlw	0
 17198  00E9F8  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;fat16.c: 847: offset += read_length;
 17202  00E9FA  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17203  00E9FC  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 17204  00E9FE  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17205  00EA00  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 17206  00EA02                     l1882:
 17207                           
 17208                           ; BSR set to: 0
 17209                           
 17210                           ; BSR set to: 0
 17211  00EA02  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17212  00EA04  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 17213  00EA06  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17214  00EA08  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17215  00EA0A  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17216  00EA0C  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 17217  00EA0E  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17218  00EA10  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 17219  00EA12  A0D8               	btfss	status,0,c
 17220  00EA14  D76D               	goto	l1883
 17221                           
 17222                           ; BSR set to: 0
 17223                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 17224                           
 17225                           ; BSR set to: 0
 17226  00EA16  0E00               	movlw	0
 17227  00EA18  0012               	return	
 17228  00EA1A                     __end_of_fat_read_from_file_fast:
 17229                           	opt stack 0
 17230                           tblptru	equ	0xFF8
 17231                           tblptrh	equ	0xFF7
 17232                           tblptrl	equ	0xFF6
 17233                           tablat	equ	0xFF5
 17234                           prodh	equ	0xFF4
 17235                           prodl	equ	0xFF3
 17236                           postinc0	equ	0xFEE
 17237                           wreg	equ	0xFE8
 17238                           postdec1	equ	0xFE5
 17239                           plusw1	equ	0xFE3
 17240                           fsr1h	equ	0xFE2
 17241                           fsr1l	equ	0xFE1
 17242                           indf2	equ	0xFDF
 17243                           postinc2	equ	0xFDE
 17244                           postdec2	equ	0xFDD
 17245                           plusw2	equ	0xFDB
 17246                           fsr2h	equ	0xFDA
 17247                           fsr2l	equ	0xFD9
 17248                           status	equ	0xFD8
 17249                           
 17250 ;; *************** function __find_nth_cluster *****************
 17251 ;; Defined at:
 17252 ;;		line 182 in file "fat16.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;  cluster         2   55[BANK0 ] unsigned int 
 17255 ;;  n               2   57[BANK0 ] unsigned int 
 17256 ;; Auto vars:     Size  Location     Type
 17257 ;;  sector          2   63[BANK0 ] unsigned int 
 17258 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 17259 ;;  offset          2   59[BANK0 ] unsigned int 
 17260 ;; Return value:  Size  Location     Type
 17261 ;;                  2   55[BANK0 ] unsigned int 
 17262 ;; Registers used:
 17263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17264 ;; Tracked objects:
 17265 ;;		On entry : 0/0
 17266 ;;		On exit  : 0/0
 17267 ;;		Unchanged: 0/0
 17268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17272 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17273 ;;Total ram usage:       10 bytes
 17274 ;; Hardware stack levels used:    1
 17275 ;; Hardware stack levels required when called:   16
 17276 ;; This function calls:
 17277 ;;		__fat_offset_from_cluster
 17278 ;;		__fat_sector_from_cluster
 17279 ;;		__read_fat
 17280 ;;		__read_value_from_offset
 17281 ;;		_flash_sector_read
 17282 ;; This function is called by:
 17283 ;;		_fat_read_from_file_fast
 17284 ;;		_fat_modify_file
 17285 ;;		_fat_copy_sector_to_buffer
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           	psect	text63
 17290  013214                     __ptext63:
 17291                           	opt stack 0
 17292  013214                     __find_nth_cluster:
 17293                           	opt stack 11
 17294                           
 17295                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;incstack = 0
 17299  013214  0E00               	movlw	0
 17300  013216  0100               	movlb	0	; () banked
 17301  013218  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 17302  01321A  0E00               	movlw	0
 17303  01321C  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 17304                           
 17305                           ; BSR set to: 0
 17306                           ;fat16.c: 189: if(n==1)
 17307  01321E  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 17308  013220  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17309  013222  A4D8               	btfss	status,2,c
 17310  013224  D040               	goto	l1767
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 17314  013226  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 17315  01322A  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 17316  01322E  ECA7  F0A3         	call	__read_fat	;wreg free
 17317  013232  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 17318  013236  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 17319  01323A  0012               	return	
 17320  01323C                     
 17321                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 17322  01323C  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 17323  013240  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 17324  013244  ECE5  F0AB         	call	__fat_sector_from_cluster	;wreg free
 17325  013248  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 17326  01324C  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 17327                           
 17328                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 17329  013250  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 17330  013254  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 17331  013258  ECF2  F0AB         	call	__fat_offset_from_cluster	;wreg free
 17332  01325C  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 17333  013260  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 17334                           
 17335                           ;fat16.c: 201: if(sector != sector_in_buffer)
 17336  013264  0100               	movlb	0	; () banked
 17337  013266  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 17338  013268  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 17339  01326A  E104               	bnz	u12630
 17340  01326C  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 17341  01326E  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 17342  013270  B4D8               	btfsc	status,2,c
 17343  013272  D00A               	goto	l1769
 17344  013274                     u12630:
 17345                           
 17346                           ; BSR set to: 0
 17347                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 17348  013274  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 17349  013278  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 17350  01327C  0E00               	movlw	low _buffer
 17351  01327E  6F89               	movwf	flash_sector_read@data& (0+255),b
 17352  013280  0E0A               	movlw	high _buffer
 17353  013282  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17354  013284  EC04  F0AB         	call	_flash_sector_read	;wreg free
 17355  013288                     l1769:
 17356                           
 17357                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 17358  013288  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 17359  01328C  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 17360  013290  0E00               	movlw	low _buffer
 17361  013292  0100               	movlb	0	; () banked
 17362  013294  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 17363  013296  0E0A               	movlw	high _buffer
 17364  013298  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 17365  01329A  EC0A  F0A7         	call	__read_value_from_offset	;wreg free
 17366  01329E  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 17367  0132A2  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 17368  0132A6                     l1767:
 17369  0132A6  0100               	movlb	0	; () banked
 17370  0132A8  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 17371  0132AA  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17372  0132AC  A4D8               	btfss	status,2,c
 17373  0132AE  D7C6               	goto	l1768
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 17377  0132B0  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 17378  0132B4  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 17379  0132B8  0012               	return		;funcret
 17380  0132BA                     __end_of__find_nth_cluster:
 17381                           	opt stack 0
 17382                           tblptru	equ	0xFF8
 17383                           tblptrh	equ	0xFF7
 17384                           tblptrl	equ	0xFF6
 17385                           tablat	equ	0xFF5
 17386                           prodh	equ	0xFF4
 17387                           prodl	equ	0xFF3
 17388                           postinc0	equ	0xFEE
 17389                           wreg	equ	0xFE8
 17390                           postdec1	equ	0xFE5
 17391                           plusw1	equ	0xFE3
 17392                           fsr1h	equ	0xFE2
 17393                           fsr1l	equ	0xFE1
 17394                           indf2	equ	0xFDF
 17395                           postinc2	equ	0xFDE
 17396                           postdec2	equ	0xFDD
 17397                           plusw2	equ	0xFDB
 17398                           fsr2h	equ	0xFDA
 17399                           fsr2l	equ	0xFD9
 17400                           status	equ	0xFD8
 17401                           
 17402 ;; *************** function __read_value_from_offset *****************
 17403 ;; Defined at:
 17404 ;;		line 114 in file "fat16.c"
 17405 ;; Parameters:    Size  Location     Type
 17406 ;;  offset          2    0[BANK0 ] unsigned int 
 17407 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 17408 ;;		 -> buffer(512), 
 17409 ;; Auto vars:     Size  Location     Type
 17410 ;;  value           2    7[BANK0 ] unsigned int 
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  2    0[BANK0 ] unsigned int 
 17413 ;; Registers used:
 17414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 0/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17422 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17423 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17424 ;;Total ram usage:        9 bytes
 17425 ;; Hardware stack levels used:    1
 17426 ;; Hardware stack levels required when called:   10
 17427 ;; This function calls:
 17428 ;;		Nothing
 17429 ;; This function is called by:
 17430 ;;		__find_nth_cluster
 17431 ;;		__make_cluster_chain
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text64
 17436  014E14                     __ptext64:
 17437                           	opt stack 0
 17438  014E14                     __read_value_from_offset:
 17439                           	opt stack 16
 17440                           
 17441                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 17442                           
 17443                           ;incstack = 0
 17444  014E14  0E01               	movlw	1
 17445  014E16  0100               	movlb	0	; () banked
 17446  014E18  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 17447  014E1A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17448  014E1C  0E00               	movlw	0
 17449  014E1E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 17450  014E20  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 17451  014E22  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17452  014E24  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17453  014E26  6ED9               	movwf	fsr2l,c
 17454  014E28  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 17455  014E2A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17456  014E2C  6EDA               	movwf	fsr2h,c
 17457  014E2E  50DF               	movf	indf2,w,c
 17458  014E30  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 17459  014E32  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 17460  014E34  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 17461  014E36  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;fat16.c: 118: value <<= 8;
 17465  014E38  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 17466  014E3A  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 17467  014E3C  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;fat16.c: 119: value |= buffer[offset];
 17471  014E3E  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 17472  014E40  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17473  014E42  6ED9               	movwf	fsr2l,c
 17474  014E44  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 17475  014E46  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17476  014E48  6EDA               	movwf	fsr2h,c
 17477  014E4A  50DF               	movf	indf2,w,c
 17478  014E4C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17479  014E4E  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17480  014E50  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;fat16.c: 120: return value;
 17484  014E52  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 17485  014E56  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 17486  014E5A  0012               	return	
 17487  014E5C                     __end_of__read_value_from_offset:
 17488                           	opt stack 0
 17489                           tblptru	equ	0xFF8
 17490                           tblptrh	equ	0xFF7
 17491                           tblptrl	equ	0xFF6
 17492                           tablat	equ	0xFF5
 17493                           prodh	equ	0xFF4
 17494                           prodl	equ	0xFF3
 17495                           postinc0	equ	0xFEE
 17496                           wreg	equ	0xFE8
 17497                           postdec1	equ	0xFE5
 17498                           plusw1	equ	0xFE3
 17499                           fsr1h	equ	0xFE2
 17500                           fsr1l	equ	0xFE1
 17501                           indf2	equ	0xFDF
 17502                           postinc2	equ	0xFDE
 17503                           postdec2	equ	0xFDD
 17504                           plusw2	equ	0xFDB
 17505                           fsr2h	equ	0xFDA
 17506                           fsr2l	equ	0xFD9
 17507                           status	equ	0xFD8
 17508                           
 17509 ;; *************** function __read_fat *****************
 17510 ;; Defined at:
 17511 ;;		line 456 in file "fat16.c"
 17512 ;; Parameters:    Size  Location     Type
 17513 ;;  cluster         2   47[BANK0 ] unsigned int 
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;  value           2   53[BANK0 ] unsigned int 
 17516 ;;  offset          2   51[BANK0 ] unsigned int 
 17517 ;;  sector          2   49[BANK0 ] unsigned int 
 17518 ;; Return value:  Size  Location     Type
 17519 ;;                  2   47[BANK0 ] unsigned int 
 17520 ;; Registers used:
 17521 ;;		wreg, status,2, status,0, cstack
 17522 ;; Tracked objects:
 17523 ;;		On entry : 0/0
 17524 ;;		On exit  : 0/0
 17525 ;;		Unchanged: 0/0
 17526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17528 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17530 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17531 ;;Total ram usage:        8 bytes
 17532 ;; Hardware stack levels used:    1
 17533 ;; Hardware stack levels required when called:   15
 17534 ;; This function calls:
 17535 ;;		__fat_offset_from_cluster
 17536 ;;		__fat_sector_from_cluster
 17537 ;;		_flash_partial_read
 17538 ;; This function is called by:
 17539 ;;		__find_nth_cluster
 17540 ;;		_fat_read_from_file_fast
 17541 ;;		_fat_modify_file
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           	psect	text65
 17546  01474E                     __ptext65:
 17547                           	opt stack 0
 17548  01474E                     __read_fat:
 17549                           	opt stack 12
 17550                           
 17551                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;incstack = 0
 17555  01474E  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 17556  014752  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 17557  014756  ECE5  F0AB         	call	__fat_sector_from_cluster	;wreg free
 17558  01475A  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 17559  01475E  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 17560                           
 17561                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 17562  014762  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 17563  014766  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 17564  01476A  ECF2  F0AB         	call	__fat_offset_from_cluster	;wreg free
 17565  01476E  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 17566  014772  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 17567                           
 17568                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 17569  014776  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 17570  01477A  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 17571  01477E  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 17572  014782  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17573  014786  0E00               	movlw	0
 17574  014788  0100               	movlb	0	; () banked
 17575  01478A  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17576  01478C  0E02               	movlw	2
 17577  01478E  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17578  014790  0E95               	movlw	low __read_fat@value
 17579  014792  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17580  014794  0E00               	movlw	high __read_fat@value
 17581  014796  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17582  014798  EC18  F0AB         	call	_flash_partial_read	;wreg free
 17583                           
 17584                           ;fat16.c: 470: return value;
 17585  01479C  C095  F08F         	movff	__read_fat@value,?__read_fat
 17586  0147A0  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 17587  0147A4  0012               	return	
 17588  0147A6                     __end_of__read_fat:
 17589                           	opt stack 0
 17590                           tblptru	equ	0xFF8
 17591                           tblptrh	equ	0xFF7
 17592                           tblptrl	equ	0xFF6
 17593                           tablat	equ	0xFF5
 17594                           prodh	equ	0xFF4
 17595                           prodl	equ	0xFF3
 17596                           postinc0	equ	0xFEE
 17597                           wreg	equ	0xFE8
 17598                           postdec1	equ	0xFE5
 17599                           plusw1	equ	0xFE3
 17600                           fsr1h	equ	0xFE2
 17601                           fsr1l	equ	0xFE1
 17602                           indf2	equ	0xFDF
 17603                           postinc2	equ	0xFDE
 17604                           postdec2	equ	0xFDD
 17605                           plusw2	equ	0xFDB
 17606                           fsr2h	equ	0xFDA
 17607                           fsr2l	equ	0xFD9
 17608                           status	equ	0xFD8
 17609                           
 17610 ;; *************** function __fat_sector_from_cluster *****************
 17611 ;; Defined at:
 17612 ;;		line 75 in file "fat16.c"
 17613 ;; Parameters:    Size  Location     Type
 17614 ;;  cluster         2    0[BANK0 ] unsigned int 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;		None
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  2    0[BANK0 ] unsigned int 
 17619 ;; Registers used:
 17620 ;;		wreg, status,2, status,0
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17630 ;;Total ram usage:        2 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:   10
 17633 ;; This function calls:
 17634 ;;		Nothing
 17635 ;; This function is called by:
 17636 ;;		__find_nth_cluster
 17637 ;;		__make_cluster_chain
 17638 ;;		__read_fat
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text66
 17643  0157CA                     __ptext66:
 17644                           	opt stack 0
 17645  0157CA                     __fat_sector_from_cluster:
 17646                           	opt stack 16
 17647                           
 17648                           ;fat16.c: 77: cluster >>= 8;
 17649                           
 17650                           ;incstack = 0
 17651  0157CA  0100               	movlb	0	; () banked
 17652  0157CC  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17653  0157CE  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17654  0157D0  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17655                           
 17656                           ; BSR set to: 0
 17657                           ;fat16.c: 78: cluster += 2;
 17658  0157D2  0E02               	movlw	2
 17659  0157D4  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17660  0157D6  0E00               	movlw	0
 17661  0157D8  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17662                           
 17663                           ; BSR set to: 0
 17664                           ;fat16.c: 79: return cluster;
 17665  0157DA  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17666  0157DE  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17667  0157E2  0012               	return	
 17668  0157E4                     __end_of__fat_sector_from_cluster:
 17669                           	opt stack 0
 17670                           tblptru	equ	0xFF8
 17671                           tblptrh	equ	0xFF7
 17672                           tblptrl	equ	0xFF6
 17673                           tablat	equ	0xFF5
 17674                           prodh	equ	0xFF4
 17675                           prodl	equ	0xFF3
 17676                           postinc0	equ	0xFEE
 17677                           wreg	equ	0xFE8
 17678                           postdec1	equ	0xFE5
 17679                           plusw1	equ	0xFE3
 17680                           fsr1h	equ	0xFE2
 17681                           fsr1l	equ	0xFE1
 17682                           indf2	equ	0xFDF
 17683                           postinc2	equ	0xFDE
 17684                           postdec2	equ	0xFDD
 17685                           plusw2	equ	0xFDB
 17686                           fsr2h	equ	0xFDA
 17687                           fsr2l	equ	0xFD9
 17688                           status	equ	0xFD8
 17689                           
 17690 ;; *************** function __fat_offset_from_cluster *****************
 17691 ;; Defined at:
 17692 ;;		line 82 in file "fat16.c"
 17693 ;; Parameters:    Size  Location     Type
 17694 ;;  cluster         2    0[BANK0 ] unsigned int 
 17695 ;; Auto vars:     Size  Location     Type
 17696 ;;		None
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  2    0[BANK0 ] unsigned int 
 17699 ;; Registers used:
 17700 ;;		wreg, status,2, status,0
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17706 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17710 ;;Total ram usage:        2 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; Hardware stack levels required when called:   10
 17713 ;; This function calls:
 17714 ;;		Nothing
 17715 ;; This function is called by:
 17716 ;;		__find_nth_cluster
 17717 ;;		__make_cluster_chain
 17718 ;;		__read_fat
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text67
 17723  0157E4                     __ptext67:
 17724                           	opt stack 0
 17725  0157E4                     __fat_offset_from_cluster:
 17726                           	opt stack 16
 17727                           
 17728                           ;fat16.c: 84: cluster &= 0xFF;
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;incstack = 0
 17732  0157E4  0EFF               	movlw	255
 17733  0157E6  0100               	movlb	0	; () banked
 17734  0157E8  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17735  0157EA  0E00               	movlw	0
 17736  0157EC  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;fat16.c: 85: cluster <<= 1;
 17740  0157EE  90D8               	bcf	status,0,c
 17741  0157F0  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17742  0157F2  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;fat16.c: 86: return cluster;
 17746  0157F4  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17747  0157F8  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17748  0157FC  0012               	return	
 17749  0157FE                     __end_of__fat_offset_from_cluster:
 17750                           	opt stack 0
 17751                           tblptru	equ	0xFF8
 17752                           tblptrh	equ	0xFF7
 17753                           tblptrl	equ	0xFF6
 17754                           tablat	equ	0xFF5
 17755                           prodh	equ	0xFF4
 17756                           prodl	equ	0xFF3
 17757                           postinc0	equ	0xFEE
 17758                           wreg	equ	0xFE8
 17759                           postdec1	equ	0xFE5
 17760                           plusw1	equ	0xFE3
 17761                           fsr1h	equ	0xFE2
 17762                           fsr1l	equ	0xFE1
 17763                           indf2	equ	0xFDF
 17764                           postinc2	equ	0xFDE
 17765                           postdec2	equ	0xFDD
 17766                           plusw2	equ	0xFDB
 17767                           fsr2h	equ	0xFDA
 17768                           fsr2l	equ	0xFD9
 17769                           status	equ	0xFD8
 17770                           
 17771 ;; *************** function __data_sector_from_cluster *****************
 17772 ;; Defined at:
 17773 ;;		line 70 in file "fat16.c"
 17774 ;; Parameters:    Size  Location     Type
 17775 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17776 ;; Auto vars:     Size  Location     Type
 17777 ;;		None
 17778 ;; Return value:  Size  Location     Type
 17779 ;;                  2    0[BANK0 ] unsigned int 
 17780 ;; Registers used:
 17781 ;;		wreg, status,2, status,0
 17782 ;; Tracked objects:
 17783 ;;		On entry : 0/0
 17784 ;;		On exit  : 0/0
 17785 ;;		Unchanged: 0/0
 17786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17787 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17791 ;;Total ram usage:        2 bytes
 17792 ;; Hardware stack levels used:    1
 17793 ;; Hardware stack levels required when called:   10
 17794 ;; This function calls:
 17795 ;;		Nothing
 17796 ;; This function is called by:
 17797 ;;		_fat_read_from_file_fast
 17798 ;;		_fat_modify_file
 17799 ;;		_fat_copy_sector_to_buffer
 17800 ;; This function uses a non-reentrant model
 17801 ;;
 17802                           
 17803                           	psect	text68
 17804  0158B0                     __ptext68:
 17805                           	opt stack 0
 17806  0158B0                     __data_sector_from_cluster:
 17807                           	opt stack 17
 17808                           
 17809                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;incstack = 0
 17813  0158B0  0E24               	movlw	36
 17814  0158B2  0100               	movlb	0	; () banked
 17815  0158B4  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17816  0158B6  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17817  0158B8  0E00               	movlw	0
 17818  0158BA  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17819  0158BC  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17820  0158BE  0012               	return	
 17821  0158C0                     __end_of__data_sector_from_cluster:
 17822                           	opt stack 0
 17823                           tblptru	equ	0xFF8
 17824                           tblptrh	equ	0xFF7
 17825                           tblptrl	equ	0xFF6
 17826                           tablat	equ	0xFF5
 17827                           prodh	equ	0xFF4
 17828                           prodl	equ	0xFF3
 17829                           postinc0	equ	0xFEE
 17830                           wreg	equ	0xFE8
 17831                           postdec1	equ	0xFE5
 17832                           plusw1	equ	0xFE3
 17833                           fsr1h	equ	0xFE2
 17834                           fsr1l	equ	0xFE1
 17835                           indf2	equ	0xFDF
 17836                           postinc2	equ	0xFDE
 17837                           postdec2	equ	0xFDD
 17838                           plusw2	equ	0xFDB
 17839                           fsr2h	equ	0xFDA
 17840                           fsr2l	equ	0xFD9
 17841                           status	equ	0xFD8
 17842                           
 17843 ;; *************** function _fat_get_file_information *****************
 17844 ;; Defined at:
 17845 ;;		line 1391 in file "fat16.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;  file_number     1    wreg     unsigned char 
 17848 ;;  data            2   47[BANK0 ] PTR struct .
 17849 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;  file_number     1   54[BANK0 ] unsigned char 
 17852 ;;  offset          2   52[BANK0 ] unsigned int 
 17853 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17854 ;; Return value:  Size  Location     Type
 17855 ;;                  1    wreg      unsigned char 
 17856 ;; Registers used:
 17857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17858 ;; Tracked objects:
 17859 ;;		On entry : 0/0
 17860 ;;		On exit  : 0/0
 17861 ;;		Unchanged: 0/0
 17862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17864 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17866 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17867 ;;Total ram usage:        8 bytes
 17868 ;; Hardware stack levels used:    1
 17869 ;; Hardware stack levels required when called:   15
 17870 ;; This function calls:
 17871 ;;		__offset_from_file_number
 17872 ;;		__sector_from_file_number
 17873 ;;		_flash_partial_read
 17874 ;; This function is called by:
 17875 ;;		_fat_read_from_file
 17876 ;;		_fat_resize_file
 17877 ;;		_fat_modify_file
 17878 ;;		_fat_rename_file
 17879 ;; This function uses a non-reentrant model
 17880 ;;
 17881                           
 17882                           	psect	text69
 17883  013C20                     __ptext69:
 17884                           	opt stack 0
 17885  013C20                     _fat_get_file_information:
 17886                           	opt stack 12
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;incstack = 0
 17890                           ;fat_get_file_information@file_number stored from wreg
 17891  013C20  0100               	movlb	0	; () banked
 17892  013C22  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17893                           
 17894                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 17895  013C24  0E3F               	movlw	63
 17896  013C26  0100               	movlb	0	; () banked
 17897  013C28  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17898  013C2A  D002               	goto	l2078
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 17902  013C2C  0E01               	movlw	1
 17903                           
 17904                           ; BSR set to: 0
 17905  013C2E  0012               	return	
 17906  013C30                     l2078:
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 17910                           
 17911                           ; BSR set to: 0
 17912  013C30  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17913  013C32  ECA4  F0A9         	call	__sector_from_file_number
 17914  013C36  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17915  013C3A  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17916                           
 17917                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 17918  013C3E  0100               	movlb	0	; () banked
 17919  013C40  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17920  013C42  ECB3  F0AA         	call	__offset_from_file_number
 17921  013C46  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17922  013C4A  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17923                           
 17924                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17925  013C4E  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17926  013C52  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17927  013C56  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17928  013C5A  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17929  013C5E  0E00               	movlw	0
 17930  013C60  0100               	movlb	0	; () banked
 17931  013C62  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17932  013C64  0E20               	movlw	32
 17933  013C66  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17934  013C68  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17935  013C6C  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17936  013C70  EC18  F0AB         	call	_flash_partial_read	;wreg free
 17937                           
 17938                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17939  013C74  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17940  013C78  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17941  013C7C  50DF               	movf	indf2,w,c
 17942  013C7E  B4D8               	btfsc	status,2,c
 17943  013C80  D008               	goto	u13430
 17944  013C82  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17945  013C86  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17946  013C8A  0EE5               	movlw	229
 17947  013C8C  18DE               	xorwf	postinc2,w,c
 17948  013C8E  A4D8               	btfss	status,2,c
 17949  013C90  D002               	goto	l2080
 17950  013C92                     u13430:
 17951                           
 17952                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 17953  013C92  0E02               	movlw	2
 17954  013C94  0012               	return	
 17955  013C96                     l2080:
 17956                           
 17957                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 17958  013C96  0E00               	movlw	0
 17959  013C98  0012               	return	
 17960  013C9A                     __end_of_fat_get_file_information:
 17961                           	opt stack 0
 17962                           tblptru	equ	0xFF8
 17963                           tblptrh	equ	0xFF7
 17964                           tblptrl	equ	0xFF6
 17965                           tablat	equ	0xFF5
 17966                           prodh	equ	0xFF4
 17967                           prodl	equ	0xFF3
 17968                           postinc0	equ	0xFEE
 17969                           wreg	equ	0xFE8
 17970                           postdec1	equ	0xFE5
 17971                           plusw1	equ	0xFE3
 17972                           fsr1h	equ	0xFE2
 17973                           fsr1l	equ	0xFE1
 17974                           indf2	equ	0xFDF
 17975                           postinc2	equ	0xFDE
 17976                           postdec2	equ	0xFDD
 17977                           plusw2	equ	0xFDB
 17978                           fsr2h	equ	0xFDA
 17979                           fsr2l	equ	0xFD9
 17980                           status	equ	0xFD8
 17981                           
 17982 ;; *************** function _fat_get_file_size *****************
 17983 ;; Defined at:
 17984 ;;		line 562 in file "fat16.c"
 17985 ;; Parameters:    Size  Location     Type
 17986 ;;  file_number     1    wreg     unsigned char 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;  file_number     1   65[BANK0 ] unsigned char 
 17989 ;;  file_size       4   61[BANK0 ] unsigned long 
 17990 ;;  offset          2   59[BANK0 ] unsigned int 
 17991 ;;  sector          2   57[BANK0 ] unsigned int 
 17992 ;; Return value:  Size  Location     Type
 17993 ;;                  4   53[BANK0 ] unsigned long 
 17994 ;; Registers used:
 17995 ;;		wreg, status,2, status,0, cstack
 17996 ;; Tracked objects:
 17997 ;;		On entry : 0/0
 17998 ;;		On exit  : 0/0
 17999 ;;		Unchanged: 0/0
 18000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18002 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18004 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18005 ;;Total ram usage:       13 bytes
 18006 ;; Hardware stack levels used:    1
 18007 ;; Hardware stack levels required when called:   16
 18008 ;; This function calls:
 18009 ;;		__offset_from_file_number
 18010 ;;		__root_is_available
 18011 ;;		__sector_from_file_number
 18012 ;;		_flash_partial_read
 18013 ;; This function is called by:
 18014 ;;		_configFile_read
 18015 ;;		_fat_append_to_file
 18016 ;;		_fat_copy_file
 18017 ;;		_fat_copy_sector_to_buffer
 18018 ;;		_fat_write_sector_from_buffer
 18019 ;; This function uses a non-reentrant model
 18020 ;;
 18021                           
 18022                           	psect	text70
 18023  013C9A                     __ptext70:
 18024                           	opt stack 0
 18025  013C9A                     _fat_get_file_size:
 18026                           	opt stack 12
 18027                           
 18028                           ;incstack = 0
 18029                           ;fat_get_file_size@file_number stored from wreg
 18030  013C9A  0100               	movlb	0	; () banked
 18031  013C9C  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 18032                           
 18033                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 18034  013C9E  0100               	movlb	0	; () banked
 18035  013CA0  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18036  013CA2  EC16  F0A0         	call	__root_is_available
 18037  013CA6  0900               	iorlw	0
 18038  013CA8  B4D8               	btfsc	status,2,c
 18039  013CAA  D006               	goto	l1845
 18040                           
 18041                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 18042  013CAC  0100               	movlb	0	; () banked
 18043  013CAE  6995               	setf	?_fat_get_file_size& (0+255),b
 18044  013CB0  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 18045  013CB2  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 18046  013CB4  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 18047  013CB6  0012               	return	
 18048  013CB8                     l1845:
 18049                           
 18050                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 18051                           
 18052                           ; BSR set to: 0
 18053  013CB8  0100               	movlb	0	; () banked
 18054  013CBA  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18055  013CBC  ECA4  F0A9         	call	__sector_from_file_number
 18056  013CC0  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 18057  013CC4  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 18058                           
 18059                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 18060  013CC8  0100               	movlb	0	; () banked
 18061  013CCA  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18062  013CCC  ECB3  F0AA         	call	__offset_from_file_number
 18063  013CD0  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 18064  013CD4  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 18065                           
 18066                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 18067  013CD8  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 18068  013CDC  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 18069  013CE0  0E1C               	movlw	28
 18070  013CE2  0100               	movlb	0	; () banked
 18071  013CE4  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 18072  013CE6  6F89               	movwf	flash_partial_read@start& (0+255),b
 18073  013CE8  0E00               	movlw	0
 18074  013CEA  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 18075  013CEC  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 18076  013CEE  0E00               	movlw	0
 18077  013CF0  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18078  013CF2  0E04               	movlw	4
 18079  013CF4  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18080  013CF6  0E9D               	movlw	low fat_get_file_size@file_size
 18081  013CF8  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18082  013CFA  0E00               	movlw	high fat_get_file_size@file_size
 18083  013CFC  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18084  013CFE  EC18  F0AB         	call	_flash_partial_read	;wreg free
 18085                           
 18086                           ;fat16.c: 583: return file_size;
 18087  013D02  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 18088  013D06  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 18089  013D0A  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 18090  013D0E  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 18091  013D12  0012               	return	
 18092  013D14                     __end_of_fat_get_file_size:
 18093                           	opt stack 0
 18094                           tblptru	equ	0xFF8
 18095                           tblptrh	equ	0xFF7
 18096                           tblptrl	equ	0xFF6
 18097                           tablat	equ	0xFF5
 18098                           prodh	equ	0xFF4
 18099                           prodl	equ	0xFF3
 18100                           postinc0	equ	0xFEE
 18101                           wreg	equ	0xFE8
 18102                           postdec1	equ	0xFE5
 18103                           plusw1	equ	0xFE3
 18104                           fsr1h	equ	0xFE2
 18105                           fsr1l	equ	0xFE1
 18106                           indf2	equ	0xFDF
 18107                           postinc2	equ	0xFDE
 18108                           postdec2	equ	0xFDD
 18109                           plusw2	equ	0xFDB
 18110                           fsr2h	equ	0xFDA
 18111                           fsr2l	equ	0xFD9
 18112                           status	equ	0xFD8
 18113                           
 18114 ;; *************** function __root_is_available *****************
 18115 ;; Defined at:
 18116 ;;		line 408 in file "fat16.c"
 18117 ;; Parameters:    Size  Location     Type
 18118 ;;  file_number     1    wreg     unsigned char 
 18119 ;; Auto vars:     Size  Location     Type
 18120 ;;  file_number     1   51[BANK0 ] unsigned char 
 18121 ;;  offset          2   49[BANK0 ] unsigned int 
 18122 ;;  root_sector     2   47[BANK0 ] unsigned int 
 18123 ;;  first_byte      1   52[BANK0 ] unsigned char 
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  1    wreg      unsigned char 
 18126 ;; Registers used:
 18127 ;;		wreg, status,2, status,0, cstack
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/0
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18134 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18137 ;;Total ram usage:        6 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; Hardware stack levels required when called:   15
 18140 ;; This function calls:
 18141 ;;		__offset_from_file_number
 18142 ;;		__sector_from_file_number
 18143 ;;		_flash_partial_read
 18144 ;; This function is called by:
 18145 ;;		__get_available_root_entry
 18146 ;;		_fat_get_file_size
 18147 ;;		_fat_resize_file
 18148 ;;		_fat_delete_file
 18149 ;;		_fat_append_to_file
 18150 ;;		_fat_copy_file
 18151 ;;		_fat_copy_sector_to_buffer
 18152 ;;		_fat_write_sector_from_buffer
 18153 ;; This function uses a non-reentrant model
 18154 ;;
 18155                           
 18156                           	psect	text71
 18157  01402C                     __ptext71:
 18158                           	opt stack 0
 18159  01402C                     __root_is_available:
 18160                           	opt stack 12
 18161                           
 18162                           ;incstack = 0
 18163                           ;__root_is_available@file_number stored from wreg
 18164  01402C  0100               	movlb	0	; () banked
 18165  01402E  6F93               	movwf	__root_is_available@file_number& (0+255),b
 18166                           
 18167                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 18168  014030  0E3F               	movlw	63
 18169  014032  0100               	movlb	0	; () banked
 18170  014034  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 18171  014036  D002               	goto	l1806
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 18175  014038  0E00               	movlw	0
 18176                           
 18177                           ; BSR set to: 0
 18178  01403A  0012               	return	
 18179  01403C                     l1806:
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 18183                           
 18184                           ; BSR set to: 0
 18185  01403C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18186  01403E  ECA4  F0A9         	call	__sector_from_file_number
 18187  014042  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 18188  014046  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 18189                           
 18190                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 18191  01404A  0100               	movlb	0	; () banked
 18192  01404C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18193  01404E  ECB3  F0AA         	call	__offset_from_file_number
 18194  014052  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 18195  014056  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 18196                           
 18197                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 18198  01405A  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 18199  01405E  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 18200  014062  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 18201  014066  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 18202  01406A  0E00               	movlw	0
 18203  01406C  0100               	movlb	0	; () banked
 18204  01406E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18205  014070  0E01               	movlw	1
 18206  014072  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18207  014074  0E94               	movlw	low __root_is_available@first_byte
 18208  014076  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18209  014078  0E00               	movlw	high __root_is_available@first_byte
 18210  01407A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18211  01407C  EC18  F0AB         	call	_flash_partial_read	;wreg free
 18212                           
 18213                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 18214  014080  0100               	movlb	0	; () banked
 18215  014082  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 18216  014084  B4D8               	btfsc	status,2,c
 18217  014086  D004               	goto	u12670
 18218                           
 18219                           ; BSR set to: 0
 18220  014088  0EE5               	movlw	229
 18221  01408A  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 18222  01408C  A4D8               	btfss	status,2,c
 18223  01408E  D002               	goto	l1808
 18224  014090                     u12670:
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 18228                           
 18229                           ; BSR set to: 0
 18230  014090  0E01               	movlw	1
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;fat16.c: 434: }
 18234                           
 18235                           ; BSR set to: 0
 18236  014092  0012               	return	
 18237  014094                     l1808:
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 18241                           
 18242                           ; BSR set to: 0
 18243  014094  0E00               	movlw	0
 18244                           
 18245                           ; BSR set to: 0
 18246  014096  0012               	return	
 18247  014098                     __end_of__root_is_available:
 18248                           	opt stack 0
 18249                           tblptru	equ	0xFF8
 18250                           tblptrh	equ	0xFF7
 18251                           tblptrl	equ	0xFF6
 18252                           tablat	equ	0xFF5
 18253                           prodh	equ	0xFF4
 18254                           prodl	equ	0xFF3
 18255                           postinc0	equ	0xFEE
 18256                           wreg	equ	0xFE8
 18257                           postdec1	equ	0xFE5
 18258                           plusw1	equ	0xFE3
 18259                           fsr1h	equ	0xFE2
 18260                           fsr1l	equ	0xFE1
 18261                           indf2	equ	0xFDF
 18262                           postinc2	equ	0xFDE
 18263                           postdec2	equ	0xFDD
 18264                           plusw2	equ	0xFDB
 18265                           fsr2h	equ	0xFDA
 18266                           fsr2l	equ	0xFD9
 18267                           status	equ	0xFD8
 18268                           
 18269 ;; *************** function _flash_partial_read *****************
 18270 ;; Defined at:
 18271 ;;		line 452 in file "flash.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  page            2   39[BANK0 ] unsigned int 
 18274 ;;  start           2   41[BANK0 ] unsigned int 
 18275 ;;  length          2   43[BANK0 ] unsigned int 
 18276 ;;  data            2   45[BANK0 ] PTR unsigned char 
 18277 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 18278 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 18279 ;;		 -> _root_is_available@first_byte(1), 
 18280 ;; Auto vars:     Size  Location     Type
 18281 ;;		None
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  1    wreg      void 
 18284 ;; Registers used:
 18285 ;;		wreg, status,2, status,0, cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18291 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18294 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18295 ;;Total ram usage:        8 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:   14
 18298 ;; This function calls:
 18299 ;;		__flash_partial_read
 18300 ;; This function is called by:
 18301 ;;		__root_is_available
 18302 ;;		__read_fat
 18303 ;;		_fat_get_file_size
 18304 ;;		_fat_read_from_file_fast
 18305 ;;		_fat_get_file_information
 18306 ;;		__get_first_cluster
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           	psect	text72
 18311  015630                     __ptext72:
 18312                           	opt stack 0
 18313  015630                     _flash_partial_read:
 18314                           	opt stack 12
 18315                           
 18316                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;incstack = 0
 18320  015630  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 18321  015634  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 18322  015638  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 18323  01563C  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 18324  015640  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 18325  015644  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 18326  015648  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 18327  01564C  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 18328  015650  EC8A  F09E         	call	__flash_partial_read	;wreg free
 18329  015654  0012               	return		;funcret
 18330  015656                     __end_of_flash_partial_read:
 18331                           	opt stack 0
 18332                           tblptru	equ	0xFF8
 18333                           tblptrh	equ	0xFF7
 18334                           tblptrl	equ	0xFF6
 18335                           tablat	equ	0xFF5
 18336                           prodh	equ	0xFF4
 18337                           prodl	equ	0xFF3
 18338                           postinc0	equ	0xFEE
 18339                           wreg	equ	0xFE8
 18340                           postdec1	equ	0xFE5
 18341                           plusw1	equ	0xFE3
 18342                           fsr1h	equ	0xFE2
 18343                           fsr1l	equ	0xFE1
 18344                           indf2	equ	0xFDF
 18345                           postinc2	equ	0xFDE
 18346                           postdec2	equ	0xFDD
 18347                           plusw2	equ	0xFDB
 18348                           fsr2h	equ	0xFDA
 18349                           fsr2l	equ	0xFD9
 18350                           status	equ	0xFD8
 18351                           
 18352 ;; *************** function __sector_from_file_number *****************
 18353 ;; Defined at:
 18354 ;;		line 52 in file "fat16.c"
 18355 ;; Parameters:    Size  Location     Type
 18356 ;;  file_number     1    wreg     unsigned char 
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;  file_number     1    2[BANK0 ] unsigned char 
 18359 ;;  sector          2    3[BANK0 ] unsigned int 
 18360 ;; Return value:  Size  Location     Type
 18361 ;;                  2    0[BANK0 ] unsigned int 
 18362 ;; Registers used:
 18363 ;;		wreg, status,2, status,0
 18364 ;; Tracked objects:
 18365 ;;		On entry : 0/0
 18366 ;;		On exit  : 0/0
 18367 ;;		Unchanged: 0/0
 18368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18369 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18370 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18372 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18373 ;;Total ram usage:        5 bytes
 18374 ;; Hardware stack levels used:    1
 18375 ;; Hardware stack levels required when called:   10
 18376 ;; This function calls:
 18377 ;;		Nothing
 18378 ;; This function is called by:
 18379 ;;		__root_is_available
 18380 ;;		__write_root
 18381 ;;		_fat_get_file_size
 18382 ;;		_fat_get_file_information
 18383 ;;		__delete_root
 18384 ;;		__get_first_cluster
 18385 ;; This function uses a non-reentrant model
 18386 ;;
 18387                           
 18388                           	psect	text73
 18389  015348                     __ptext73:
 18390                           	opt stack 0
 18391  015348                     __sector_from_file_number:
 18392                           	opt stack 16
 18393                           
 18394                           ;incstack = 0
 18395                           ;__sector_from_file_number@file_number stored from wreg
 18396  015348  0100               	movlb	0	; () banked
 18397  01534A  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 18398                           
 18399                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 18400  01534C  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 18401  015350  0100               	movlb	0	; () banked
 18402  015352  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;fat16.c: 56: sector >>= 4;
 18406  015354  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 18407  015356  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18408  015358  0E0F               	movlw	15
 18409  01535A  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 18410  01535C  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 18411  01535E  0BF0               	andlw	240
 18412  015360  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 18413  015362  0E0F               	movlw	15
 18414  015364  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;fat16.c: 57: sector += 34;
 18418  015366  0E22               	movlw	34
 18419  015368  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 18420  01536A  0E00               	movlw	0
 18421  01536C  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;fat16.c: 58: return sector;
 18425  01536E  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 18426  015372  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 18427  015376  0012               	return	
 18428  015378                     __end_of__sector_from_file_number:
 18429                           	opt stack 0
 18430                           tblptru	equ	0xFF8
 18431                           tblptrh	equ	0xFF7
 18432                           tblptrl	equ	0xFF6
 18433                           tablat	equ	0xFF5
 18434                           prodh	equ	0xFF4
 18435                           prodl	equ	0xFF3
 18436                           postinc0	equ	0xFEE
 18437                           wreg	equ	0xFE8
 18438                           postdec1	equ	0xFE5
 18439                           plusw1	equ	0xFE3
 18440                           fsr1h	equ	0xFE2
 18441                           fsr1l	equ	0xFE1
 18442                           indf2	equ	0xFDF
 18443                           postinc2	equ	0xFDE
 18444                           postdec2	equ	0xFDD
 18445                           plusw2	equ	0xFDB
 18446                           fsr2h	equ	0xFDA
 18447                           fsr2l	equ	0xFD9
 18448                           status	equ	0xFD8
 18449                           
 18450 ;; *************** function __offset_from_file_number *****************
 18451 ;; Defined at:
 18452 ;;		line 61 in file "fat16.c"
 18453 ;; Parameters:    Size  Location     Type
 18454 ;;  file_number     1    wreg     unsigned char 
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;  file_number     1    2[BANK0 ] unsigned char 
 18457 ;;  offset          2    3[BANK0 ] unsigned int 
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  2    0[BANK0 ] unsigned int 
 18460 ;; Registers used:
 18461 ;;		wreg, status,2, status,0
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18468 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18470 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18471 ;;Total ram usage:        5 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:   10
 18474 ;; This function calls:
 18475 ;;		Nothing
 18476 ;; This function is called by:
 18477 ;;		__root_is_available
 18478 ;;		__write_root
 18479 ;;		_fat_get_file_size
 18480 ;;		_fat_get_file_information
 18481 ;;		__delete_root
 18482 ;;		__get_first_cluster
 18483 ;; This function uses a non-reentrant model
 18484 ;;
 18485                           
 18486                           	psect	text74
 18487  015566                     __ptext74:
 18488                           	opt stack 0
 18489  015566                     __offset_from_file_number:
 18490                           	opt stack 16
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;incstack = 0
 18494                           ;__offset_from_file_number@file_number stored from wreg
 18495  015566  0100               	movlb	0	; () banked
 18496  015568  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 18497                           
 18498                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 18499  01556A  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 18500  01556E  0100               	movlb	0	; () banked
 18501  015570  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;fat16.c: 65: offset &= 0b1111;
 18505  015572  0E0F               	movlw	15
 18506  015574  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 18507  015576  0E00               	movlw	0
 18508  015578  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;fat16.c: 66: offset <<= 5;
 18512  01557A  0E05               	movlw	5
 18513  01557C                     u11595:
 18514  01557C  90D8               	bcf	status,0,c
 18515  01557E  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 18516  015580  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18517  015582  2EE8               	decfsz	wreg,f,c
 18518  015584  D7FB               	goto	u11595
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;fat16.c: 67: return offset;
 18522  015586  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 18523  01558A  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 18524  01558E  0012               	return	
 18525  015590                     __end_of__offset_from_file_number:
 18526                           	opt stack 0
 18527                           tblptru	equ	0xFF8
 18528                           tblptrh	equ	0xFF7
 18529                           tblptrl	equ	0xFF6
 18530                           tablat	equ	0xFF5
 18531                           prodh	equ	0xFF4
 18532                           prodl	equ	0xFF3
 18533                           postinc0	equ	0xFEE
 18534                           wreg	equ	0xFE8
 18535                           postdec1	equ	0xFE5
 18536                           plusw1	equ	0xFE3
 18537                           fsr1h	equ	0xFE2
 18538                           fsr1l	equ	0xFE1
 18539                           indf2	equ	0xFDF
 18540                           postinc2	equ	0xFDE
 18541                           postdec2	equ	0xFDD
 18542                           plusw2	equ	0xFDB
 18543                           fsr2h	equ	0xFDA
 18544                           fsr2l	equ	0xFD9
 18545                           status	equ	0xFD8
 18546                           
 18547 ;; *************** function _fat_find_file *****************
 18548 ;; Defined at:
 18549 ;;		line 517 in file "fat16.c"
 18550 ;; Parameters:    Size  Location     Type
 18551 ;;  name            2   43[BANK0 ] PTR unsigned char 
 18552 ;;		 -> configFile_used_name(8), configFile_name(8), 
 18553 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 18554 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 18555 ;; Auto vars:     Size  Location     Type
 18556 ;;  offset          2   52[BANK0 ] unsigned int 
 18557 ;;  sector          2   50[BANK0 ] unsigned int 
 18558 ;;  file_number     1   49[BANK0 ] unsigned char 
 18559 ;; Return value:  Size  Location     Type
 18560 ;;                  1    wreg      unsigned char 
 18561 ;; Registers used:
 18562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18563 ;; Tracked objects:
 18564 ;;		On entry : 0/0
 18565 ;;		On exit  : 0/0
 18566 ;;		Unchanged: 0/0
 18567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18569 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18571 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18572 ;;Total ram usage:       11 bytes
 18573 ;; Hardware stack levels used:    1
 18574 ;; Hardware stack levels required when called:   15
 18575 ;; This function calls:
 18576 ;;		_flash_sector_read
 18577 ;;		_strncmp
 18578 ;; This function is called by:
 18579 ;;		_fat_create_file
 18580 ;;		_configFile_read
 18581 ;;		_configFile_write
 18582 ;; This function uses a non-reentrant model
 18583 ;;
 18584                           
 18585                           	psect	text75
 18586  011A90                     __ptext75:
 18587                           	opt stack 0
 18588  011A90                     _fat_find_file:
 18589                           	opt stack 13
 18590                           
 18591                           ;fat16.c: 519: uint8_t file_number = 0;
 18592                           
 18593                           ; BSR set to: 0
 18594                           ;incstack = 0
 18595  011A90  0E00               	movlw	0
 18596  011A92  0100               	movlb	0	; () banked
 18597  011A94  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18598                           
 18599                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18600  011A96  0E00               	movlw	0
 18601  011A98  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18602  011A9A  0E22               	movlw	34
 18603  011A9C  6F92               	movwf	fat_find_file@sector& (0+255),b
 18604                           
 18605                           ; BSR set to: 0
 18606  011A9E  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18607  011AA0  E169               	bnz	l1833
 18608  011AA2  0E26               	movlw	38
 18609  011AA4  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18610  011AA6  B0D8               	btfsc	status,0,c
 18611  011AA8  D065               	goto	u13400
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 18615                           
 18616                           ; BSR set to: 0
 18617                           
 18618                           ; BSR set to: 0
 18619  011AAA  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18620  011AAE  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18621  011AB2  0E00               	movlw	low _buffer
 18622  011AB4  6F89               	movwf	flash_sector_read@data& (0+255),b
 18623  011AB6  0E0A               	movlw	high _buffer
 18624  011AB8  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18625  011ABA  EC04  F0AB         	call	_flash_sector_read	;wreg free
 18626                           
 18627                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 18628  011ABE  0E00               	movlw	0
 18629  011AC0  0100               	movlb	0	; () banked
 18630  011AC2  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18631  011AC4  0E00               	movlw	0
 18632  011AC6  6F94               	movwf	fat_find_file@offset& (0+255),b
 18633  011AC8                     l14388:
 18634                           
 18635                           ; BSR set to: 0
 18636  011AC8  0E02               	movlw	2
 18637  011ACA  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18638  011ACC  B0D8               	btfsc	status,0,c
 18639  011ACE  D04D               	goto	u13390
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 18643                           
 18644                           ; BSR set to: 0
 18645                           
 18646                           ; BSR set to: 0
 18647  011AD0  0E00               	movlw	low _buffer
 18648  011AD2  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18649  011AD4  6ED9               	movwf	fsr2l,c
 18650  011AD6  0E0A               	movlw	high _buffer
 18651  011AD8  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18652  011ADA  6EDA               	movwf	fsr2h,c
 18653  011ADC  50DF               	movf	indf2,w,c
 18654  011ADE  A4D8               	btfss	status,2,c
 18655  011AE0  D002               	goto	l1836
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 18659  011AE2  0EFF               	movlw	255
 18660                           
 18661                           ; BSR set to: 0
 18662  011AE4  0012               	return	
 18663  011AE6                     l1836:
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 18667                           
 18668                           ; BSR set to: 0
 18669  011AE6  0E00               	movlw	low _buffer
 18670  011AE8  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18671  011AEA  6ED9               	movwf	fsr2l,c
 18672  011AEC  0E0A               	movlw	high _buffer
 18673  011AEE  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18674  011AF0  6EDA               	movwf	fsr2h,c
 18675  011AF2  0EE5               	movlw	229
 18676  011AF4  18DE               	xorwf	postinc2,w,c
 18677  011AF6  B4D8               	btfsc	status,2,c
 18678  011AF8  D032               	goto	l1842
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18682                           
 18683                           ; BSR set to: 0
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;fat16.c: 537: {;fat16.c: 541: }
 18687  011AFA  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18688  011AFE  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18689  011B02  0E00               	movlw	low _buffer
 18690  011B04  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18691  011B06  6F62               	movwf	strncmp@s2& (0+255),b
 18692  011B08  0E0A               	movlw	high _buffer
 18693  011B0A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18694  011B0C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18695  011B0E  0E00               	movlw	0
 18696  011B10  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18697  011B12  0E08               	movlw	8
 18698  011B14  6F64               	movwf	strncmp@len& (0+255),b
 18699  011B16  EC54  F09D         	call	_strncmp	;wreg free
 18700  011B1A  0100               	movlb	0	; () banked
 18701  011B1C  5160               	movf	?_strncmp& (0+255),w,b
 18702  011B1E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18703  011B20  A4D8               	btfss	status,2,c
 18704  011B22  D01D               	goto	l1842
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18708  011B24  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18709  011B28  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18710  011B2C  0E08               	movlw	8
 18711  011B2E  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18712  011B30  6F8F               	movwf	??_fat_find_file& (0+255),b
 18713  011B32  0E00               	movlw	0
 18714  011B34  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18715  011B36  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18716  011B38  0E00               	movlw	low _buffer
 18717  011B3A  258F               	addwf	??_fat_find_file& (0+255),w,b
 18718  011B3C  6F62               	movwf	strncmp@s2& (0+255),b
 18719  011B3E  0E0A               	movlw	high _buffer
 18720  011B40  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18721  011B42  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18722  011B44  0E00               	movlw	0
 18723  011B46  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18724  011B48  0E03               	movlw	3
 18725  011B4A  6F64               	movwf	strncmp@len& (0+255),b
 18726  011B4C  EC54  F09D         	call	_strncmp	;wreg free
 18727  011B50  0100               	movlb	0	; () banked
 18728  011B52  5160               	movf	?_strncmp& (0+255),w,b
 18729  011B54  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18730  011B56  A4D8               	btfss	status,2,c
 18731  011B58  D002               	goto	l1842
 18732                           
 18733                           ; BSR set to: 0
 18734                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 18735  011B5A  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18736                           
 18737                           ; BSR set to: 0
 18738  011B5C  0012               	return	
 18739  011B5E                     l1842:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 18743                           
 18744                           ; BSR set to: 0
 18745                           
 18746                           ; BSR set to: 0
 18747                           
 18748                           ; BSR set to: 0
 18749                           
 18750                           ; BSR set to: 0
 18751  011B5E  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18752                           
 18753                           ; BSR set to: 0
 18754  011B60  0E20               	movlw	32
 18755  011B62  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18756  011B64  0E00               	movlw	0
 18757  011B66  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18758  011B68  D7AF               	goto	l14388
 18759  011B6A                     u13390:
 18760                           
 18761                           ; BSR set to: 0
 18762                           
 18763                           ; BSR set to: 0
 18764  011B6A  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18765  011B6C  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18766                           
 18767                           ; BSR set to: 0
 18768  011B6E  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18769  011B70  E101               	bnz	l14422
 18770  011B72  D797               	goto	L4
 18771  011B74                     u13400:
 18772  011B74                     l1833:
 18773  011B74                     l14422:
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 18777  011B74  0EFF               	movlw	255
 18778  011B76  0012               	return	
 18779  011B78                     __end_of_fat_find_file:
 18780                           	opt stack 0
 18781                           tblptru	equ	0xFF8
 18782                           tblptrh	equ	0xFF7
 18783                           tblptrl	equ	0xFF6
 18784                           tablat	equ	0xFF5
 18785                           prodh	equ	0xFF4
 18786                           prodl	equ	0xFF3
 18787                           postinc0	equ	0xFEE
 18788                           wreg	equ	0xFE8
 18789                           postdec1	equ	0xFE5
 18790                           plusw1	equ	0xFE3
 18791                           fsr1h	equ	0xFE2
 18792                           fsr1l	equ	0xFE1
 18793                           indf2	equ	0xFDF
 18794                           postinc2	equ	0xFDE
 18795                           postdec2	equ	0xFDD
 18796                           plusw2	equ	0xFDB
 18797                           fsr2h	equ	0xFDA
 18798                           fsr2l	equ	0xFD9
 18799                           status	equ	0xFD8
 18800                           
 18801 ;; *************** function _strncmp *****************
 18802 ;; Defined at:
 18803 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18804 ;; Parameters:    Size  Location     Type
 18805 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18806 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18807 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18808 ;;		 -> buffer(512), 
 18809 ;;  len             2    4[BANK0 ] unsigned int 
 18810 ;; Auto vars:     Size  Location     Type
 18811 ;;		None
 18812 ;; Return value:  Size  Location     Type
 18813 ;;                  2    0[BANK0 ] int 
 18814 ;; Registers used:
 18815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18816 ;; Tracked objects:
 18817 ;;		On entry : 0/0
 18818 ;;		On exit  : 0/0
 18819 ;;		Unchanged: 0/0
 18820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18821 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18823 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18824 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18825 ;;Total ram usage:        9 bytes
 18826 ;; Hardware stack levels used:    1
 18827 ;; Hardware stack levels required when called:   10
 18828 ;; This function calls:
 18829 ;;		Nothing
 18830 ;; This function is called by:
 18831 ;;		_fat_find_file
 18832 ;; This function uses a non-reentrant model
 18833 ;;
 18834                           
 18835                           	psect	text76
 18836  013AA8                     __ptext76:
 18837                           	opt stack 0
 18838  013AA8                     _strncmp:
 18839                           	opt stack 17
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;incstack = 0
 18843  013AA8  D031               	goto	l3724
 18844  013AAA                     l13832:
 18845  013AAA  C060  FFD9         	movff	strncmp@s1,fsr2l
 18846  013AAE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18847  013AB2  50DF               	movf	indf2,w,c
 18848  013AB4  B4D8               	btfsc	status,2,c
 18849  013AB6  D00C               	goto	u12690
 18850  013AB8  C062  FFD9         	movff	strncmp@s2,fsr2l
 18851  013ABC  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18852  013AC0  C060  FFE1         	movff	strncmp@s1,fsr1l
 18853  013AC4  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18854  013AC8  50DE               	movf	postinc2,w,c
 18855  013ACA  18E6               	xorwf	postinc1,w,c
 18856  013ACC  B4D8               	btfsc	status,2,c
 18857  013ACE  D019               	goto	l3726
 18858  013AD0                     u12690:
 18859  013AD0  C062  FFD9         	movff	strncmp@s2,fsr2l
 18860  013AD4  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18861  013AD8  50DF               	movf	indf2,w,c
 18862  013ADA  0100               	movlb	0	; () banked
 18863  013ADC  6F66               	movwf	??_strncmp& (0+255),b
 18864  013ADE  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18865  013AE0  1F66               	comf	??_strncmp& (0+255),f,b
 18866  013AE2  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18867  013AE4  4B66               	infsnz	??_strncmp& (0+255),f,b
 18868  013AE6  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18869  013AE8  C060  FFD9         	movff	strncmp@s1,fsr2l
 18870  013AEC  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18871  013AF0  50DF               	movf	indf2,w,c
 18872  013AF2  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18873  013AF4  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18874  013AF6  2566               	addwf	??_strncmp& (0+255),w,b
 18875  013AF8  6F60               	movwf	?_strncmp& (0+255),b
 18876  013AFA  0E00               	movlw	0
 18877  013AFC  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18878  013AFE  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18879                           
 18880                           ; BSR set to: 0
 18881  013B00  0012               	return	
 18882  013B02                     l3726:
 18883                           
 18884                           ; BSR set to: 0
 18885  013B02  0100               	movlb	0	; () banked
 18886  013B04  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18887  013B06  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18888  013B08  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18889  013B0A  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18890  013B0C                     l3724:
 18891                           
 18892                           ; BSR set to: 0
 18893  013B0C  0100               	movlb	0	; () banked
 18894  013B0E  0764               	decf	strncmp@len& (0+255),f,b
 18895  013B10  A0D8               	btfss	status,0,c
 18896  013B12  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18897  013B14  2964               	incf	strncmp@len& (0+255),w,b
 18898  013B16  E1C9               	bnz	l13832
 18899  013B18  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18900  013B1A  A4D8               	btfss	status,2,c
 18901  013B1C  D7C6               	goto	l3725
 18902                           
 18903                           ; BSR set to: 0
 18904                           
 18905                           ; BSR set to: 0
 18906  013B1E  0E00               	movlw	0
 18907  013B20  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18908  013B22  0E00               	movlw	0
 18909  013B24  6F60               	movwf	?_strncmp& (0+255),b
 18910  013B26  0012               	return	
 18911  013B28                     __end_of_strncmp:
 18912                           	opt stack 0
 18913                           tblptru	equ	0xFF8
 18914                           tblptrh	equ	0xFF7
 18915                           tblptrl	equ	0xFF6
 18916                           tablat	equ	0xFF5
 18917                           prodh	equ	0xFF4
 18918                           prodl	equ	0xFF3
 18919                           postinc0	equ	0xFEE
 18920                           wreg	equ	0xFE8
 18921                           postinc1	equ	0xFE6
 18922                           postdec1	equ	0xFE5
 18923                           plusw1	equ	0xFE3
 18924                           fsr1h	equ	0xFE2
 18925                           fsr1l	equ	0xFE1
 18926                           indf2	equ	0xFDF
 18927                           postinc2	equ	0xFDE
 18928                           postdec2	equ	0xFDD
 18929                           plusw2	equ	0xFDB
 18930                           fsr2h	equ	0xFDA
 18931                           fsr2l	equ	0xFD9
 18932                           status	equ	0xFD8
 18933                           
 18934 ;; *************** function __parse_item *****************
 18935 ;; Defined at:
 18936 ;;		line 108 in file "config_file.c"
 18937 ;; Parameters:    Size  Location     Type
 18938 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 18939 ;;		 -> configFile_read@item_string(31), 
 18940 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 18941 ;;		 -> configFile_read@value_string(12), 
 18942 ;; Auto vars:     Size  Location     Type
 18943 ;;		None
 18944 ;; Return value:  Size  Location     Type
 18945 ;;                  1    wreg      unsigned char 
 18946 ;; Registers used:
 18947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18948 ;; Tracked objects:
 18949 ;;		On entry : 0/0
 18950 ;;		On exit  : 0/0
 18951 ;;		Unchanged: 0/0
 18952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18957 ;;Total ram usage:        4 bytes
 18958 ;; Hardware stack levels used:    1
 18959 ;; Hardware stack levels required when called:   12
 18960 ;; This function calls:
 18961 ;;		_atoi
 18962 ;;		_atol
 18963 ;;		_stricmp
 18964 ;; This function is called by:
 18965 ;;		_configFile_read
 18966 ;; This function uses a non-reentrant model
 18967 ;;
 18968                           
 18969                           	psect	text77
 18970  00C8D4                     __ptext77:
 18971                           	opt stack 0
 18972  00C8D4                     __parse_item:
 18973                           	opt stack 16
 18974                           
 18975                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18976                           
 18977                           ; BSR set to: 0
 18978                           ;incstack = 0
 18979  00C8D4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18980  00C8D8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18981  00C8DC  0EFD               	movlw	low _full_circle_in_steps_string
 18982  00C8DE  0100               	movlb	0	; () banked
 18983  00C8E0  6F63               	movwf	stricmp@s2& (0+255),b
 18984  00C8E2  0EA1               	movlw	high _full_circle_in_steps_string
 18985  00C8E4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18986  00C8E6  ECC7  F0A2         	call	_stricmp	;wreg free
 18987  00C8EA  0100               	movlb	0	; () banked
 18988  00C8EC  5161               	movf	?_stricmp& (0+255),w,b
 18989  00C8EE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18990  00C8F0  A4D8               	btfss	status,2,c
 18991  00C8F2  D00F               	goto	l2936
 18992                           
 18993                           ; BSR set to: 0
 18994                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18995  00C8F4  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18996  00C8F8  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18997  00C8FC  EC6F  F08A         	call	_atol	;wreg free
 18998  00C900  C06C  F1A1         	movff	?_atol,_config
 18999  00C904  C06D  F1A2         	movff	?_atol+1,_config+1
 19000  00C908  C06E  F1A3         	movff	?_atol+2,_config+2
 19001  00C90C  C06F  F1A4         	movff	?_atol+3,_config+3
 19002                           
 19003                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 19004  00C910  0012               	return	
 19005  00C912                     l2936:
 19006                           
 19007                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19008  00C912  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19009  00C916  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19010  00C91A  0E12               	movlw	low _overshoot_in_steps_string
 19011  00C91C  0100               	movlb	0	; () banked
 19012  00C91E  6F63               	movwf	stricmp@s2& (0+255),b
 19013  00C920  0EA2               	movlw	high _overshoot_in_steps_string
 19014  00C922  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19015  00C924  ECC7  F0A2         	call	_stricmp	;wreg free
 19016  00C928  0100               	movlb	0	; () banked
 19017  00C92A  5161               	movf	?_stricmp& (0+255),w,b
 19018  00C92C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19019  00C92E  A4D8               	btfss	status,2,c
 19020  00C930  D00B               	goto	l2938
 19021                           
 19022                           ; BSR set to: 0
 19023                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 19024  00C932  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19025  00C936  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19026  00C93A  EC40  F091         	call	_atoi	;wreg free
 19027  00C93E  C066  F1A6         	movff	?_atoi,_config+5
 19028  00C942  C067  F1A7         	movff	?_atoi+1,_config+6
 19029                           
 19030                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 19031  00C946  0012               	return	
 19032  00C948                     l2938:
 19033                           
 19034                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 19035  00C948  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19036  00C94C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19037  00C950  0E49               	movlw	low _inverse_direction_string
 19038  00C952  0100               	movlb	0	; () banked
 19039  00C954  6F63               	movwf	stricmp@s2& (0+255),b
 19040  00C956  0EA2               	movlw	high _inverse_direction_string
 19041  00C958  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19042  00C95A  ECC7  F0A2         	call	_stricmp	;wreg free
 19043  00C95E  0100               	movlb	0	; () banked
 19044  00C960  5161               	movf	?_stricmp& (0+255),w,b
 19045  00C962  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19046  00C964  A4D8               	btfss	status,2,c
 19047  00C966  D00B               	goto	l2939
 19048                           
 19049                           ; BSR set to: 0
 19050                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 19051  00C968  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19052  00C96C  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19053  00C970  EC6F  F08A         	call	_atol	;wreg free
 19054  00C974  0100               	movlb	0	; () banked
 19055  00C976  516C               	movf	?_atol& (0+255),w,b
 19056  00C978  0101               	movlb	1	; () banked
 19057  00C97A  6FA5               	movwf	(_config+4)& (0+255),b
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 19061  00C97C  0012               	return	
 19062  00C97E                     l2939:
 19063                           
 19064                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19065                           
 19066                           ; BSR set to: 1
 19067  00C97E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19068  00C982  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19069  00C986  0E12               	movlw	low _overshoot_in_steps_string
 19070  00C988  0100               	movlb	0	; () banked
 19071  00C98A  6F63               	movwf	stricmp@s2& (0+255),b
 19072  00C98C  0EA2               	movlw	high _overshoot_in_steps_string
 19073  00C98E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19074  00C990  ECC7  F0A2         	call	_stricmp	;wreg free
 19075  00C994  0100               	movlb	0	; () banked
 19076  00C996  5161               	movf	?_stricmp& (0+255),w,b
 19077  00C998  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19078  00C99A  A4D8               	btfss	status,2,c
 19079  00C99C  D00B               	goto	l2940
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 19083  00C99E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19084  00C9A2  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19085  00C9A6  EC40  F091         	call	_atoi	;wreg free
 19086  00C9AA  C066  F1A6         	movff	?_atoi,_config+5
 19087  00C9AE  C067  F1A7         	movff	?_atoi+1,_config+6
 19088                           
 19089                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 19090  00C9B2  0012               	return	
 19091  00C9B4                     l2940:
 19092                           
 19093                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 19094  00C9B4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19095  00C9B8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19096  00C9BC  0EBB               	movlw	low _overshoot_cost_in_steps_string
 19097  00C9BE  0100               	movlb	0	; () banked
 19098  00C9C0  6F63               	movwf	stricmp@s2& (0+255),b
 19099  00C9C2  0EA1               	movlw	high _overshoot_cost_in_steps_string
 19100  00C9C4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19101  00C9C6  ECC7  F0A2         	call	_stricmp	;wreg free
 19102  00C9CA  0100               	movlb	0	; () banked
 19103  00C9CC  5161               	movf	?_stricmp& (0+255),w,b
 19104  00C9CE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19105  00C9D0  A4D8               	btfss	status,2,c
 19106  00C9D2  D00B               	goto	l2941
 19107                           
 19108                           ; BSR set to: 0
 19109                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 19110  00C9D4  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19111  00C9D8  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19112  00C9DC  EC40  F091         	call	_atoi	;wreg free
 19113  00C9E0  C066  F1A8         	movff	?_atoi,_config+7
 19114  00C9E4  C067  F1A9         	movff	?_atoi+1,_config+8
 19115                           
 19116                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 19117  00C9E8  0012               	return	
 19118  00C9EA                     l2941:
 19119                           
 19120                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 19121  00C9EA  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19122  00C9EE  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19123  00C9F2  0E97               	movlw	low _minimum_speed_string
 19124  00C9F4  0100               	movlb	0	; () banked
 19125  00C9F6  6F63               	movwf	stricmp@s2& (0+255),b
 19126  00C9F8  0EA2               	movlw	high _minimum_speed_string
 19127  00C9FA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19128  00C9FC  ECC7  F0A2         	call	_stricmp	;wreg free
 19129  00CA00  0100               	movlb	0	; () banked
 19130  00CA02  5161               	movf	?_stricmp& (0+255),w,b
 19131  00CA04  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19132  00CA06  A4D8               	btfss	status,2,c
 19133  00CA08  D00B               	goto	l2942
 19134                           
 19135                           ; BSR set to: 0
 19136                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 19137  00CA0A  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19138  00CA0E  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19139  00CA12  EC40  F091         	call	_atoi	;wreg free
 19140  00CA16  C066  F1AA         	movff	?_atoi,_config+9
 19141  00CA1A  C067  F1AB         	movff	?_atoi+1,_config+10
 19142                           
 19143                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 19144  00CA1E  0012               	return	
 19145  00CA20                     l2942:
 19146                           
 19147                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 19148  00CA20  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19149  00CA24  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19150  00CA28  0E89               	movlw	low _maximum_speed_string
 19151  00CA2A  0100               	movlb	0	; () banked
 19152  00CA2C  6F63               	movwf	stricmp@s2& (0+255),b
 19153  00CA2E  0EA2               	movlw	high _maximum_speed_string
 19154  00CA30  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19155  00CA32  ECC7  F0A2         	call	_stricmp	;wreg free
 19156  00CA36  0100               	movlb	0	; () banked
 19157  00CA38  5161               	movf	?_stricmp& (0+255),w,b
 19158  00CA3A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19159  00CA3C  A4D8               	btfss	status,2,c
 19160  00CA3E  D00B               	goto	l2943
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 19164  00CA40  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19165  00CA44  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19166  00CA48  EC40  F091         	call	_atoi	;wreg free
 19167  00CA4C  C066  F1AC         	movff	?_atoi,_config+11
 19168  00CA50  C067  F1AD         	movff	?_atoi+1,_config+12
 19169                           
 19170                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 19171  00CA54  0012               	return	
 19172  00CA56                     l2943:
 19173                           
 19174                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 19175  00CA56  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19176  00CA5A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19177  00CA5E  0E37               	movlw	low _initial_speed_arc_string
 19178  00CA60  0100               	movlb	0	; () banked
 19179  00CA62  6F63               	movwf	stricmp@s2& (0+255),b
 19180  00CA64  0EA2               	movlw	high _initial_speed_arc_string
 19181  00CA66  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19182  00CA68  ECC7  F0A2         	call	_stricmp	;wreg free
 19183  00CA6C  0100               	movlb	0	; () banked
 19184  00CA6E  5161               	movf	?_stricmp& (0+255),w,b
 19185  00CA70  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19186  00CA72  A4D8               	btfss	status,2,c
 19187  00CA74  D00B               	goto	l2944
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 19191  00CA76  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19192  00CA7A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19193  00CA7E  EC40  F091         	call	_atoi	;wreg free
 19194  00CA82  C066  F1AE         	movff	?_atoi,_config+13
 19195  00CA86  C067  F1AF         	movff	?_atoi+1,_config+14
 19196                           
 19197                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 19198  00CA8A  0012               	return	
 19199  00CA8C                     l2944:
 19200                           
 19201                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 19202  00CA8C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19203  00CA90  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19204  00CA94  0E25               	movlw	low _maximum_speed_arc_string
 19205  00CA96  0100               	movlb	0	; () banked
 19206  00CA98  6F63               	movwf	stricmp@s2& (0+255),b
 19207  00CA9A  0EA2               	movlw	high _maximum_speed_arc_string
 19208  00CA9C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19209  00CA9E  ECC7  F0A2         	call	_stricmp	;wreg free
 19210  00CAA2  0100               	movlb	0	; () banked
 19211  00CAA4  5161               	movf	?_stricmp& (0+255),w,b
 19212  00CAA6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19213  00CAA8  A4D8               	btfss	status,2,c
 19214  00CAAA  D00B               	goto	l2945
 19215                           
 19216                           ; BSR set to: 0
 19217                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 19218  00CAAC  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19219  00CAB0  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19220  00CAB4  EC40  F091         	call	_atoi	;wreg free
 19221  00CAB8  C066  F1B0         	movff	?_atoi,_config+15
 19222  00CABC  C067  F1B1         	movff	?_atoi+1,_config+16
 19223                           
 19224                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 19225  00CAC0  0012               	return	
 19226  00CAC2                     l2945:
 19227                           
 19228                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 19229  00CAC2  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19230  00CAC6  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19231  00CACA  0EE8               	movlw	low _initial_speed_manual_string
 19232  00CACC  0100               	movlb	0	; () banked
 19233  00CACE  6F63               	movwf	stricmp@s2& (0+255),b
 19234  00CAD0  0EA1               	movlw	high _initial_speed_manual_string
 19235  00CAD2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19236  00CAD4  ECC7  F0A2         	call	_stricmp	;wreg free
 19237  00CAD8  0100               	movlb	0	; () banked
 19238  00CADA  5161               	movf	?_stricmp& (0+255),w,b
 19239  00CADC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19240  00CADE  A4D8               	btfss	status,2,c
 19241  00CAE0  D00B               	goto	l2946
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 19245  00CAE2  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19246  00CAE6  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19247  00CAEA  EC40  F091         	call	_atoi	;wreg free
 19248  00CAEE  C066  F1B2         	movff	?_atoi,_config+17
 19249  00CAF2  C067  F1B3         	movff	?_atoi+1,_config+18
 19250                           
 19251                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 19252  00CAF6  0012               	return	
 19253  00CAF8                     l2946:
 19254                           
 19255                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 19256  00CAF8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19257  00CAFC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19258  00CB00  0ED3               	movlw	low _maximum_speed_manual_string
 19259  00CB02  0100               	movlb	0	; () banked
 19260  00CB04  6F63               	movwf	stricmp@s2& (0+255),b
 19261  00CB06  0EA1               	movlw	high _maximum_speed_manual_string
 19262  00CB08  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19263  00CB0A  ECC7  F0A2         	call	_stricmp	;wreg free
 19264  00CB0E  0100               	movlb	0	; () banked
 19265  00CB10  5161               	movf	?_stricmp& (0+255),w,b
 19266  00CB12  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19267  00CB14  A4D8               	btfss	status,2,c
 19268  00CB16  D00B               	goto	l2947
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 19272  00CB18  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19273  00CB1C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19274  00CB20  EC40  F091         	call	_atoi	;wreg free
 19275  00CB24  C066  F1B4         	movff	?_atoi,_config+19
 19276  00CB28  C067  F1B5         	movff	?_atoi+1,_config+20
 19277                           
 19278                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 19279  00CB2C  0012               	return	
 19280  00CB2E                     l2947:
 19281                           
 19282                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 19283  00CB2E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19284  00CB32  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19285  00CB36  0E7B               	movlw	low _beep_duration_string
 19286  00CB38  0100               	movlb	0	; () banked
 19287  00CB3A  6F63               	movwf	stricmp@s2& (0+255),b
 19288  00CB3C  0EA2               	movlw	high _beep_duration_string
 19289  00CB3E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19290  00CB40  ECC7  F0A2         	call	_stricmp	;wreg free
 19291  00CB44  0100               	movlb	0	; () banked
 19292  00CB46  5161               	movf	?_stricmp& (0+255),w,b
 19293  00CB48  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19294  00CB4A  A4D8               	btfss	status,2,c
 19295  00CB4C  D00B               	goto	l2948
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 19299  00CB4E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19300  00CB52  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19301  00CB56  EC40  F091         	call	_atoi	;wreg free
 19302  00CB5A  0100               	movlb	0	; () banked
 19303  00CB5C  5166               	movf	?_atoi& (0+255),w,b
 19304  00CB5E  0101               	movlb	1	; () banked
 19305  00CB60  6FB6               	movwf	(_config+21)& (0+255),b
 19306                           
 19307                           ; BSR set to: 1
 19308                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 19309  00CB62  0012               	return	
 19310  00CB64                     l2948:
 19311                           
 19312                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 19313                           
 19314                           ; BSR set to: 1
 19315  00CB64  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19316  00CB68  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19317  00CB6C  0EA5               	movlw	low _use_cw_limit_string
 19318  00CB6E  0100               	movlb	0	; () banked
 19319  00CB70  6F63               	movwf	stricmp@s2& (0+255),b
 19320  00CB72  0EA2               	movlw	high _use_cw_limit_string
 19321  00CB74  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19322  00CB76  ECC7  F0A2         	call	_stricmp	;wreg free
 19323  00CB7A  0100               	movlb	0	; () banked
 19324  00CB7C  5161               	movf	?_stricmp& (0+255),w,b
 19325  00CB7E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19326  00CB80  A4D8               	btfss	status,2,c
 19327  00CB82  D00B               	goto	l2949
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 19331  00CB84  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19332  00CB88  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19333  00CB8C  EC6F  F08A         	call	_atol	;wreg free
 19334  00CB90  0100               	movlb	0	; () banked
 19335  00CB92  516C               	movf	?_atol& (0+255),w,b
 19336  00CB94  0101               	movlb	1	; () banked
 19337  00CB96  6FB7               	movwf	(_config+22)& (0+255),b
 19338                           
 19339                           ; BSR set to: 1
 19340                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 19341  00CB98  0012               	return	
 19342  00CB9A                     l2949:
 19343                           
 19344                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 19345                           
 19346                           ; BSR set to: 1
 19347  00CB9A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19348  00CB9E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19349  00CBA2  0EBC               	movlw	low _cw_limit_string
 19350  00CBA4  0100               	movlb	0	; () banked
 19351  00CBA6  6F63               	movwf	stricmp@s2& (0+255),b
 19352  00CBA8  0EA2               	movlw	high _cw_limit_string
 19353  00CBAA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19354  00CBAC  ECC7  F0A2         	call	_stricmp	;wreg free
 19355  00CBB0  0100               	movlb	0	; () banked
 19356  00CBB2  5161               	movf	?_stricmp& (0+255),w,b
 19357  00CBB4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19358  00CBB6  A4D8               	btfss	status,2,c
 19359  00CBB8  D00B               	goto	l2950
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 19363  00CBBA  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19364  00CBBE  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19365  00CBC2  EC6F  F08A         	call	_atol	;wreg free
 19366  00CBC6  C06C  F1B8         	movff	?_atol,_config+23
 19367  00CBCA  C06D  F1B9         	movff	?_atol+1,_config+24
 19368                           
 19369                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 19370  00CBCE  0012               	return	
 19371  00CBD0                     l2950:
 19372                           
 19373                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 19374  00CBD0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19375  00CBD4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19376  00CBD8  0E6D               	movlw	low _use_ccw_limit_string
 19377  00CBDA  0100               	movlb	0	; () banked
 19378  00CBDC  6F63               	movwf	stricmp@s2& (0+255),b
 19379  00CBDE  0EA2               	movlw	high _use_ccw_limit_string
 19380  00CBE0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19381  00CBE2  ECC7  F0A2         	call	_stricmp	;wreg free
 19382  00CBE6  0100               	movlb	0	; () banked
 19383  00CBE8  5161               	movf	?_stricmp& (0+255),w,b
 19384  00CBEA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19385  00CBEC  A4D8               	btfss	status,2,c
 19386  00CBEE  D00B               	goto	l2951
 19387                           
 19388                           ; BSR set to: 0
 19389                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 19390  00CBF0  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19391  00CBF4  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19392  00CBF8  EC6F  F08A         	call	_atol	;wreg free
 19393  00CBFC  0100               	movlb	0	; () banked
 19394  00CBFE  516C               	movf	?_atol& (0+255),w,b
 19395  00CC00  0101               	movlb	1	; () banked
 19396  00CC02  6FBA               	movwf	(_config+25)& (0+255),b
 19397                           
 19398                           ; BSR set to: 1
 19399                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 19400  00CC04  0012               	return	
 19401  00CC06                     l2951:
 19402                           
 19403                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 19404                           
 19405                           ; BSR set to: 1
 19406  00CC06  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19407  00CC0A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19408  00CC0E  0EB2               	movlw	low _ccw_limit_string
 19409  00CC10  0100               	movlb	0	; () banked
 19410  00CC12  6F63               	movwf	stricmp@s2& (0+255),b
 19411  00CC14  0EA2               	movlw	high _ccw_limit_string
 19412  00CC16  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19413  00CC18  ECC7  F0A2         	call	_stricmp	;wreg free
 19414  00CC1C  0100               	movlb	0	; () banked
 19415  00CC1E  5161               	movf	?_stricmp& (0+255),w,b
 19416  00CC20  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19417  00CC22  A4D8               	btfss	status,2,c
 19418  00CC24  0012               	return	
 19419                           
 19420                           ; BSR set to: 0
 19421                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 19422  00CC26  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19423  00CC2A  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19424  00CC2E  EC6F  F08A         	call	_atol	;wreg free
 19425  00CC32  C06C  F1BB         	movff	?_atol,_config+26
 19426  00CC36  C06D  F1BC         	movff	?_atol+1,_config+27
 19427                           
 19428                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 19429  00CC3A  0012               	return	
 19430  00CC3C                     __end_of__parse_item:
 19431                           	opt stack 0
 19432                           tblptru	equ	0xFF8
 19433                           tblptrh	equ	0xFF7
 19434                           tblptrl	equ	0xFF6
 19435                           tablat	equ	0xFF5
 19436                           prodh	equ	0xFF4
 19437                           prodl	equ	0xFF3
 19438                           postinc0	equ	0xFEE
 19439                           wreg	equ	0xFE8
 19440                           postinc1	equ	0xFE6
 19441                           postdec1	equ	0xFE5
 19442                           plusw1	equ	0xFE3
 19443                           fsr1h	equ	0xFE2
 19444                           fsr1l	equ	0xFE1
 19445                           indf2	equ	0xFDF
 19446                           postinc2	equ	0xFDE
 19447                           postdec2	equ	0xFDD
 19448                           plusw2	equ	0xFDB
 19449                           fsr2h	equ	0xFDA
 19450                           fsr2l	equ	0xFD9
 19451                           status	equ	0xFD8
 19452                           
 19453 ;; *************** function _stricmp *****************
 19454 ;; Defined at:
 19455 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 19456 ;; Parameters:    Size  Location     Type
 19457 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 19458 ;;		 -> configFile_read@item_string(31), 
 19459 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 19460 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 19461 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 19462 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 19463 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 19464 ;; Auto vars:     Size  Location     Type
 19465 ;;  r               1    6[BANK0 ] char 
 19466 ;; Return value:  Size  Location     Type
 19467 ;;                  2    1[BANK0 ] int 
 19468 ;; Registers used:
 19469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19470 ;; Tracked objects:
 19471 ;;		On entry : 0/0
 19472 ;;		On exit  : 0/0
 19473 ;;		Unchanged: 0/0
 19474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19478 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19479 ;;Total ram usage:        6 bytes
 19480 ;; Hardware stack levels used:    1
 19481 ;; Hardware stack levels required when called:   11
 19482 ;; This function calls:
 19483 ;;		_toupper
 19484 ;; This function is called by:
 19485 ;;		__parse_item
 19486 ;; This function uses a non-reentrant model
 19487 ;;
 19488                           
 19489                           	psect	text78
 19490  01458E                     __ptext78:
 19491                           	opt stack 0
 19492  01458E                     _stricmp:
 19493                           	opt stack 16
 19494                           
 19495                           ;incstack = 0
 19496  01458E  D005               	goto	l3710
 19497  014590  0100               	movlb	0	; () banked
 19498  014592  4B61               	infsnz	stricmp@s1& (0+255),f,b
 19499  014594  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 19500  014596  4B63               	infsnz	stricmp@s2& (0+255),f,b
 19501  014598  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 19502  01459A                     l3710:
 19503                           
 19504                           ; BSR set to: 0
 19505  01459A  C063  FFF6         	movff	stricmp@s2,tblptrl
 19506  01459E  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 19507  0145A2                     	if	0	;tblptru may be non-zero
 19508  0145A2                     	endif
 19509  0145A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19510  0145A2  0E00               	movlw	low (__mediumconst shr (0+16))
 19511  0145A4  6EF8               	movwf	tblptru,c
 19512  0145A6                     	endif
 19513  0145A6  0008               	tblrd		*
 19514  0145A8  50F5               	movf	tablat,w,c
 19515  0145AA  EC26  F0AC         	call	_toupper
 19516  0145AE  0800               	sublw	0
 19517  0145B0  0100               	movlb	0	; () banked
 19518  0145B2  6F65               	movwf	??_stricmp& (0+255),b
 19519  0145B4  C061  FFD9         	movff	stricmp@s1,fsr2l
 19520  0145B8  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19521  0145BC  50DF               	movf	indf2,w,c
 19522  0145BE  EC26  F0AC         	call	_toupper
 19523  0145C2  0100               	movlb	0	; () banked
 19524  0145C4  2565               	addwf	??_stricmp& (0+255),w,b
 19525  0145C6  6F66               	movwf	stricmp@r& (0+255),b
 19526  0145C8  5166               	movf	stricmp@r& (0+255),w,b
 19527  0145CA  A4D8               	btfss	status,2,c
 19528  0145CC  D007               	goto	u13770
 19529                           
 19530                           ; BSR set to: 0
 19531  0145CE  C061  FFD9         	movff	stricmp@s1,fsr2l
 19532  0145D2  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19533  0145D6  50DF               	movf	indf2,w,c
 19534  0145D8  A4D8               	btfss	status,2,c
 19535  0145DA  D7DA               	goto	l3711
 19536  0145DC                     u13770:
 19537                           
 19538                           ; BSR set to: 0
 19539                           
 19540                           ; BSR set to: 0
 19541                           
 19542                           ; BSR set to: 0
 19543  0145DC  5166               	movf	stricmp@r& (0+255),w,b
 19544  0145DE  6F61               	movwf	?_stricmp& (0+255),b
 19545  0145E0  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19546  0145E2  BF61               	btfsc	?_stricmp& (0+255),7,b
 19547  0145E4  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19548  0145E6  0012               	return	
 19549  0145E8                     __end_of_stricmp:
 19550                           	opt stack 0
 19551                           tblptru	equ	0xFF8
 19552                           tblptrh	equ	0xFF7
 19553                           tblptrl	equ	0xFF6
 19554                           tablat	equ	0xFF5
 19555                           prodh	equ	0xFF4
 19556                           prodl	equ	0xFF3
 19557                           postinc0	equ	0xFEE
 19558                           wreg	equ	0xFE8
 19559                           postinc1	equ	0xFE6
 19560                           postdec1	equ	0xFE5
 19561                           plusw1	equ	0xFE3
 19562                           fsr1h	equ	0xFE2
 19563                           fsr1l	equ	0xFE1
 19564                           indf2	equ	0xFDF
 19565                           postinc2	equ	0xFDE
 19566                           postdec2	equ	0xFDD
 19567                           plusw2	equ	0xFDB
 19568                           fsr2h	equ	0xFDA
 19569                           fsr2l	equ	0xFD9
 19570                           status	equ	0xFD8
 19571                           
 19572 ;; *************** function _toupper *****************
 19573 ;; Defined at:
 19574 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19575 ;; Parameters:    Size  Location     Type
 19576 ;;  c               1    wreg     unsigned char 
 19577 ;; Auto vars:     Size  Location     Type
 19578 ;;  c               1    0[BANK0 ] unsigned char 
 19579 ;; Return value:  Size  Location     Type
 19580 ;;                  1    wreg      unsigned char 
 19581 ;; Registers used:
 19582 ;;		wreg, status,2, status,0
 19583 ;; Tracked objects:
 19584 ;;		On entry : 0/0
 19585 ;;		On exit  : 0/0
 19586 ;;		Unchanged: 0/0
 19587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19592 ;;Total ram usage:        1 bytes
 19593 ;; Hardware stack levels used:    1
 19594 ;; Hardware stack levels required when called:   10
 19595 ;; This function calls:
 19596 ;;		Nothing
 19597 ;; This function is called by:
 19598 ;;		_stricmp
 19599 ;; This function uses a non-reentrant model
 19600 ;;
 19601                           
 19602                           	psect	text79
 19603  01584C                     __ptext79:
 19604                           	opt stack 0
 19605  01584C                     _toupper:
 19606                           	opt stack 16
 19607                           
 19608                           ; BSR set to: 0
 19609                           ;incstack = 0
 19610                           ;toupper@c stored from wreg
 19611  01584C  0100               	movlb	0	; () banked
 19612  01584E  6F60               	movwf	toupper@c& (0+255),b
 19613  015850  0E7B               	movlw	123
 19614  015852  0100               	movlb	0	; () banked
 19615  015854  6160               	cpfslt	toupper@c& (0+255),b
 19616  015856  D004               	goto	l3733
 19617                           
 19618                           ; BSR set to: 0
 19619  015858  0E60               	movlw	96
 19620  01585A  6560               	cpfsgt	toupper@c& (0+255),b
 19621  01585C  D001               	goto	l3733
 19622                           
 19623                           ; BSR set to: 0
 19624  01585E  9B60               	bcf	toupper@c& (0+255),5,b
 19625  015860                     l3733:
 19626                           
 19627                           ; BSR set to: 0
 19628                           
 19629                           ; BSR set to: 0
 19630  015860  5160               	movf	toupper@c& (0+255),w,b
 19631  015862  0012               	return	
 19632  015864                     __end_of_toupper:
 19633                           	opt stack 0
 19634                           tblptru	equ	0xFF8
 19635                           tblptrh	equ	0xFF7
 19636                           tblptrl	equ	0xFF6
 19637                           tablat	equ	0xFF5
 19638                           prodh	equ	0xFF4
 19639                           prodl	equ	0xFF3
 19640                           postinc0	equ	0xFEE
 19641                           wreg	equ	0xFE8
 19642                           postinc1	equ	0xFE6
 19643                           postdec1	equ	0xFE5
 19644                           plusw1	equ	0xFE3
 19645                           fsr1h	equ	0xFE2
 19646                           fsr1l	equ	0xFE1
 19647                           indf2	equ	0xFDF
 19648                           postinc2	equ	0xFDE
 19649                           postdec2	equ	0xFDD
 19650                           plusw2	equ	0xFDB
 19651                           fsr2h	equ	0xFDA
 19652                           fsr2l	equ	0xFD9
 19653                           status	equ	0xFD8
 19654                           
 19655 ;; *************** function _atol *****************
 19656 ;; Defined at:
 19657 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19658 ;; Parameters:    Size  Location     Type
 19659 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19660 ;;		 -> configFile_read@value_string(12), 
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;  a               4   21[BANK0 ] long 
 19663 ;;  c               1   25[BANK0 ] unsigned char 
 19664 ;;  sign            1   20[BANK0 ] unsigned char 
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  4   12[BANK0 ] long 
 19667 ;; Registers used:
 19668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/0
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19674 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19675 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19677 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19678 ;;Total ram usage:       14 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:   11
 19681 ;; This function calls:
 19682 ;;		___lmul
 19683 ;;		_isdigit
 19684 ;; This function is called by:
 19685 ;;		__parse_item
 19686 ;; This function uses a non-reentrant model
 19687 ;;
 19688                           
 19689                           	psect	text80
 19690  0114DE                     __ptext80:
 19691                           	opt stack 0
 19692  0114DE                     _atol:
 19693                           	opt stack 16
 19694                           
 19695                           ; BSR set to: 0
 19696                           ;incstack = 0
 19697  0114DE  C06C  FFD9         	movff	atol@s,fsr2l
 19698  0114E2  C06D  FFDA         	movff	atol@s+1,fsr2h
 19699  0114E6  50DF               	movf	indf2,w,c
 19700  0114E8  0100               	movlb	0	; () banked
 19701  0114EA  6F79               	movwf	atol@c& (0+255),b
 19702                           
 19703                           ; BSR set to: 0
 19704  0114EC  4B6C               	infsnz	atol@s& (0+255),f,b
 19705  0114EE  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19706                           
 19707                           ; BSR set to: 0
 19708  0114F0  0E20               	movlw	32
 19709  0114F2  1979               	xorwf	atol@c& (0+255),w,b
 19710  0114F4  B4D8               	btfsc	status,2,c
 19711  0114F6  D7F3               	goto	_atol
 19712                           
 19713                           ; BSR set to: 0
 19714  0114F8  0E09               	movlw	9
 19715  0114FA  1979               	xorwf	atol@c& (0+255),w,b
 19716  0114FC  B4D8               	btfsc	status,2,c
 19717  0114FE  D7EF               	goto	_atol
 19718                           
 19719                           ; BSR set to: 0
 19720                           
 19721                           ; BSR set to: 0
 19722  011500  0E00               	movlw	0
 19723  011502  6F75               	movwf	atol@a& (0+255),b
 19724  011504  0E00               	movlw	0
 19725  011506  6F76               	movwf	(atol@a+1)& (0+255),b
 19726  011508  0E00               	movlw	0
 19727  01150A  6F77               	movwf	(atol@a+2)& (0+255),b
 19728  01150C  0E00               	movlw	0
 19729  01150E  6F78               	movwf	(atol@a+3)& (0+255),b
 19730  011510  0E00               	movlw	0
 19731  011512  6F74               	movwf	atol@sign& (0+255),b
 19732                           
 19733                           ; BSR set to: 0
 19734  011514  0E2D               	movlw	45
 19735  011516  1979               	xorwf	atol@c& (0+255),w,b
 19736  011518  A4D8               	btfss	status,2,c
 19737  01151A  D002               	goto	l3653
 19738                           
 19739                           ; BSR set to: 0
 19740  01151C  2B74               	incf	atol@sign& (0+255),f,b
 19741  01151E  D029               	goto	L91
 19742  011520                     l3653:
 19743                           
 19744                           ; BSR set to: 0
 19745                           
 19746                           ; BSR set to: 0
 19747  011520  0E2B               	movlw	43
 19748  011522  1979               	xorwf	atol@c& (0+255),w,b
 19749  011524  A4D8               	btfss	status,2,c
 19750  011526  D02D               	goto	l3656
 19751  011528  D024               	goto	L91
 19752  01152A                     
 19753                           ; BSR set to: 0
 19754  01152A  C075  F060         	movff	atol@a,___lmul@multiplier
 19755  01152E  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19756  011532  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19757  011536  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19758  01153A  0E0A               	movlw	10
 19759  01153C  0100               	movlb	0	; () banked
 19760  01153E  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19761  011540  0E00               	movlw	0
 19762  011542  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19763  011544  0E00               	movlw	0
 19764  011546  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19765  011548  0E00               	movlw	0
 19766  01154A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19767  01154C  ECFF  F0A3         	call	___lmul	;wreg free
 19768  011550  C079  F070         	movff	atol@c,??_atol
 19769  011554  0ED0               	movlw	208
 19770  011556  0100               	movlb	0	; () banked
 19771  011558  2770               	addwf	??_atol& (0+255),f,b
 19772  01155A  5170               	movf	??_atol& (0+255),w,b
 19773  01155C  2560               	addwf	?___lmul& (0+255),w,b
 19774  01155E  6F75               	movwf	atol@a& (0+255),b
 19775  011560  0E00               	movlw	0
 19776  011562  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19777  011564  6F76               	movwf	(atol@a+1)& (0+255),b
 19778  011566  0E00               	movlw	0
 19779  011568  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19780  01156A  6F77               	movwf	(atol@a+2)& (0+255),b
 19781  01156C  0E00               	movlw	0
 19782  01156E  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19783  011570  6F78               	movwf	(atol@a+3)& (0+255),b
 19784  011572                     L91:
 19785                           
 19786                           ; BSR set to: 0
 19787  011572  C06C  FFD9         	movff	atol@s,fsr2l
 19788  011576  C06D  FFDA         	movff	atol@s+1,fsr2h
 19789  01157A  50DF               	movf	indf2,w,c
 19790  01157C  6F79               	movwf	atol@c& (0+255),b
 19791                           
 19792                           ; BSR set to: 0
 19793  01157E  4B6C               	infsnz	atol@s& (0+255),f,b
 19794  011580  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19795  011582                     l3656:
 19796                           
 19797                           ; BSR set to: 0
 19798                           
 19799                           ; BSR set to: 0
 19800  011582  5179               	movf	atol@c& (0+255),w,b
 19801  011584  EC85  F0AB         	call	_isdigit
 19802  011588  B0D8               	btfsc	status,0,c
 19803  01158A  D7CF               	goto	l3657
 19804  01158C  0100               	movlb	0	; () banked
 19805  01158E  5174               	movf	atol@sign& (0+255),w,b
 19806  011590  B4D8               	btfsc	status,2,c
 19807  011592  D01A               	goto	l3659
 19808                           
 19809                           ; BSR set to: 0
 19810  011594  C075  F070         	movff	atol@a,??_atol
 19811  011598  C076  F071         	movff	atol@a+1,??_atol+1
 19812  01159C  C077  F072         	movff	atol@a+2,??_atol+2
 19813  0115A0  C078  F073         	movff	atol@a+3,??_atol+3
 19814  0115A4  1F70               	comf	??_atol& (0+255),f,b
 19815  0115A6  1F71               	comf	(??_atol+1)& (0+255),f,b
 19816  0115A8  1F72               	comf	(??_atol+2)& (0+255),f,b
 19817  0115AA  1F73               	comf	(??_atol+3)& (0+255),f,b
 19818  0115AC  2B70               	incf	??_atol& (0+255),f,b
 19819  0115AE  0E00               	movlw	0
 19820  0115B0  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19821  0115B2  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19822  0115B4  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19823  0115B6  C070  F06C         	movff	??_atol,?_atol
 19824  0115BA  C071  F06D         	movff	??_atol+1,?_atol+1
 19825  0115BE  C072  F06E         	movff	??_atol+2,?_atol+2
 19826  0115C2  C073  F06F         	movff	??_atol+3,?_atol+3
 19827                           
 19828                           ; BSR set to: 0
 19829  0115C6  0012               	return	
 19830  0115C8                     l3659:
 19831                           
 19832                           ; BSR set to: 0
 19833  0115C8  C075  F06C         	movff	atol@a,?_atol
 19834  0115CC  C076  F06D         	movff	atol@a+1,?_atol+1
 19835  0115D0  C077  F06E         	movff	atol@a+2,?_atol+2
 19836  0115D4  C078  F06F         	movff	atol@a+3,?_atol+3
 19837                           
 19838                           ; BSR set to: 0
 19839  0115D8  0012               	return		;funcret
 19840  0115DA                     __end_of_atol:
 19841                           	opt stack 0
 19842                           tblptru	equ	0xFF8
 19843                           tblptrh	equ	0xFF7
 19844                           tblptrl	equ	0xFF6
 19845                           tablat	equ	0xFF5
 19846                           prodh	equ	0xFF4
 19847                           prodl	equ	0xFF3
 19848                           postinc0	equ	0xFEE
 19849                           wreg	equ	0xFE8
 19850                           postinc1	equ	0xFE6
 19851                           postdec1	equ	0xFE5
 19852                           plusw1	equ	0xFE3
 19853                           fsr1h	equ	0xFE2
 19854                           fsr1l	equ	0xFE1
 19855                           indf2	equ	0xFDF
 19856                           postinc2	equ	0xFDE
 19857                           postdec2	equ	0xFDD
 19858                           plusw2	equ	0xFDB
 19859                           fsr2h	equ	0xFDA
 19860                           fsr2l	equ	0xFD9
 19861                           status	equ	0xFD8
 19862                           
 19863 ;; *************** function _atoi *****************
 19864 ;; Defined at:
 19865 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19866 ;; Parameters:    Size  Location     Type
 19867 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19868 ;;		 -> configFile_read@value_string(12), 
 19869 ;; Auto vars:     Size  Location     Type
 19870 ;;  a               2   11[BANK0 ] int 
 19871 ;;  sign            1   10[BANK0 ] unsigned char 
 19872 ;; Return value:  Size  Location     Type
 19873 ;;                  2    6[BANK0 ] int 
 19874 ;; Registers used:
 19875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19876 ;; Tracked objects:
 19877 ;;		On entry : 0/0
 19878 ;;		On exit  : 0/0
 19879 ;;		Unchanged: 0/0
 19880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19882 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19884 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19885 ;;Total ram usage:        7 bytes
 19886 ;; Hardware stack levels used:    1
 19887 ;; Hardware stack levels required when called:   11
 19888 ;; This function calls:
 19889 ;;		___wmul
 19890 ;;		_isdigit
 19891 ;; This function is called by:
 19892 ;;		__parse_item
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           	psect	text81
 19897  012280                     __ptext81:
 19898                           	opt stack 0
 19899  012280                     _atoi:
 19900                           	opt stack 16
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;incstack = 0
 19904  012280  D003               	goto	l3636
 19905  012282  0100               	movlb	0	; () banked
 19906  012284  4B66               	infsnz	atoi@s& (0+255),f,b
 19907  012286  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19908  012288                     l3636:
 19909                           
 19910                           ; BSR set to: 0
 19911  012288  C066  FFD9         	movff	atoi@s,fsr2l
 19912  01228C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19913  012290  0E20               	movlw	32
 19914  012292  18DE               	xorwf	postinc2,w,c
 19915  012294  B4D8               	btfsc	status,2,c
 19916  012296  D7F5               	goto	l3637
 19917  012298  C066  FFD9         	movff	atoi@s,fsr2l
 19918  01229C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19919  0122A0  0E09               	movlw	9
 19920  0122A2  18DE               	xorwf	postinc2,w,c
 19921  0122A4  B4D8               	btfsc	status,2,c
 19922  0122A6  D7ED               	goto	l3637
 19923  0122A8  0E00               	movlw	0
 19924  0122AA  0100               	movlb	0	; () banked
 19925  0122AC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19926  0122AE  0E00               	movlw	0
 19927  0122B0  6F6B               	movwf	atoi@a& (0+255),b
 19928  0122B2  0E00               	movlw	0
 19929  0122B4  6F6A               	movwf	atoi@sign& (0+255),b
 19930                           
 19931                           ; BSR set to: 0
 19932  0122B6  C066  FFD9         	movff	atoi@s,fsr2l
 19933  0122BA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19934  0122BE  0E2D               	movlw	45
 19935  0122C0  18DE               	xorwf	postinc2,w,c
 19936  0122C2  A4D8               	btfss	status,2,c
 19937  0122C4  D002               	goto	l3639
 19938                           
 19939                           ; BSR set to: 0
 19940  0122C6  2B6A               	incf	atoi@sign& (0+255),f,b
 19941  0122C8  D026               	goto	l15172
 19942  0122CA                     l3639:
 19943                           
 19944                           ; BSR set to: 0
 19945                           
 19946                           ; BSR set to: 0
 19947  0122CA  C066  FFD9         	movff	atoi@s,fsr2l
 19948  0122CE  C067  FFDA         	movff	atoi@s+1,fsr2h
 19949  0122D2  0E2B               	movlw	43
 19950  0122D4  18DE               	xorwf	postinc2,w,c
 19951  0122D6  A4D8               	btfss	status,2,c
 19952  0122D8  D020               	goto	l3642
 19953  0122DA  D01D               	goto	l15172
 19954  0122DC                     
 19955                           ; BSR set to: 0
 19956  0122DC  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19957  0122E0  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19958  0122E4  0E00               	movlw	0
 19959  0122E6  0100               	movlb	0	; () banked
 19960  0122E8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19961  0122EA  0E0A               	movlw	10
 19962  0122EC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19963  0122EE  ECF0  F0AA         	call	___wmul	;wreg free
 19964  0122F2  C066  FFD9         	movff	atoi@s,fsr2l
 19965  0122F6  C067  FFDA         	movff	atoi@s+1,fsr2h
 19966  0122FA  50DF               	movf	indf2,w,c
 19967  0122FC  0100               	movlb	0	; () banked
 19968  0122FE  6F68               	movwf	??_atoi& (0+255),b
 19969  012300  6B69               	clrf	(??_atoi+1)& (0+255),b
 19970  012302  5160               	movf	?___wmul& (0+255),w,b
 19971  012304  2768               	addwf	??_atoi& (0+255),f,b
 19972  012306  5161               	movf	(?___wmul+1)& (0+255),w,b
 19973  012308  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19974  01230A  0ED0               	movlw	208
 19975  01230C  2568               	addwf	??_atoi& (0+255),w,b
 19976  01230E  6F6B               	movwf	atoi@a& (0+255),b
 19977  012310  0EFF               	movlw	255
 19978  012312  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19979  012314  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19980  012316                     l15172:
 19981                           
 19982                           ; BSR set to: 0
 19983  012316  4B66               	infsnz	atoi@s& (0+255),f,b
 19984  012318  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19985  01231A                     l3642:
 19986                           
 19987                           ; BSR set to: 0
 19988                           
 19989                           ; BSR set to: 0
 19990  01231A  C066  FFD9         	movff	atoi@s,fsr2l
 19991  01231E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19992  012322  50DF               	movf	indf2,w,c
 19993  012324  EC85  F0AB         	call	_isdigit
 19994  012328  B0D8               	btfsc	status,0,c
 19995  01232A  D7D8               	goto	l3643
 19996  01232C  0100               	movlb	0	; () banked
 19997  01232E  516A               	movf	atoi@sign& (0+255),w,b
 19998  012330  B4D8               	btfsc	status,2,c
 19999  012332  D00D               	goto	l3645
 20000                           
 20001                           ; BSR set to: 0
 20002  012334  C06B  F068         	movff	atoi@a,??_atoi
 20003  012338  C06C  F069         	movff	atoi@a+1,??_atoi+1
 20004  01233C  1F68               	comf	??_atoi& (0+255),f,b
 20005  01233E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 20006  012340  4B68               	infsnz	??_atoi& (0+255),f,b
 20007  012342  2B69               	incf	(??_atoi+1)& (0+255),f,b
 20008  012344  C068  F066         	movff	??_atoi,?_atoi
 20009  012348  C069  F067         	movff	??_atoi+1,?_atoi+1
 20010  01234C  0012               	return	
 20011  01234E                     l3645:
 20012                           
 20013                           ; BSR set to: 0
 20014  01234E  C06B  F066         	movff	atoi@a,?_atoi
 20015  012352  C06C  F067         	movff	atoi@a+1,?_atoi+1
 20016                           
 20017                           ; BSR set to: 0
 20018  012356  0012               	return		;funcret
 20019  012358                     __end_of_atoi:
 20020                           	opt stack 0
 20021                           tblptru	equ	0xFF8
 20022                           tblptrh	equ	0xFF7
 20023                           tblptrl	equ	0xFF6
 20024                           tablat	equ	0xFF5
 20025                           prodh	equ	0xFF4
 20026                           prodl	equ	0xFF3
 20027                           postinc0	equ	0xFEE
 20028                           wreg	equ	0xFE8
 20029                           postinc1	equ	0xFE6
 20030                           postdec1	equ	0xFE5
 20031                           plusw1	equ	0xFE3
 20032                           fsr1h	equ	0xFE2
 20033                           fsr1l	equ	0xFE1
 20034                           indf2	equ	0xFDF
 20035                           postinc2	equ	0xFDE
 20036                           postdec2	equ	0xFDD
 20037                           plusw2	equ	0xFDB
 20038                           fsr2h	equ	0xFDA
 20039                           fsr2l	equ	0xFD9
 20040                           status	equ	0xFD8
 20041                           
 20042 ;; *************** function _isdigit *****************
 20043 ;; Defined at:
 20044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 20045 ;; Parameters:    Size  Location     Type
 20046 ;;  c               1    wreg     unsigned char 
 20047 ;; Auto vars:     Size  Location     Type
 20048 ;;  c               1    2[BANK0 ] unsigned char 
 20049 ;; Return value:  Size  Location     Type
 20050 ;;		None               void
 20051 ;; Registers used:
 20052 ;;		wreg, status,2, status,0
 20053 ;; Tracked objects:
 20054 ;;		On entry : 0/0
 20055 ;;		On exit  : 0/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20061 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20062 ;;Total ram usage:        3 bytes
 20063 ;; Hardware stack levels used:    1
 20064 ;; Hardware stack levels required when called:   10
 20065 ;; This function calls:
 20066 ;;		Nothing
 20067 ;; This function is called by:
 20068 ;;		_atoi
 20069 ;;		_atol
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           	psect	text82
 20074  01570A                     __ptext82:
 20075                           	opt stack 0
 20076  01570A                     _isdigit:
 20077                           	opt stack 16
 20078                           
 20079                           ; BSR set to: 0
 20080                           ;incstack = 0
 20081                           ;isdigit@c stored from wreg
 20082  01570A  0100               	movlb	0	; () banked
 20083  01570C  6F62               	movwf	isdigit@c& (0+255),b
 20084  01570E  0E00               	movlw	0
 20085  015710  0100               	movlb	0	; () banked
 20086  015712  6F61               	movwf	_isdigit$8180& (0+255),b
 20087                           
 20088                           ; BSR set to: 0
 20089  015714  0E3A               	movlw	58
 20090  015716  6162               	cpfslt	isdigit@c& (0+255),b
 20091  015718  D005               	goto	l3664
 20092                           
 20093                           ; BSR set to: 0
 20094  01571A  0E2F               	movlw	47
 20095  01571C  6562               	cpfsgt	isdigit@c& (0+255),b
 20096  01571E  D002               	goto	l3664
 20097                           
 20098                           ; BSR set to: 0
 20099  015720  0E01               	movlw	1
 20100  015722  6F61               	movwf	_isdigit$8180& (0+255),b
 20101  015724                     l3664:
 20102                           
 20103                           ; BSR set to: 0
 20104                           
 20105                           ; BSR set to: 0
 20106  015724  C061  F060         	movff	_isdigit$8180,??_isdigit
 20107  015728  3160               	rrcf	??_isdigit& (0+255),w,b
 20108  01572A  0012               	return	
 20109  01572C                     __end_of_isdigit:
 20110                           	opt stack 0
 20111                           tblptru	equ	0xFF8
 20112                           tblptrh	equ	0xFF7
 20113                           tblptrl	equ	0xFF6
 20114                           tablat	equ	0xFF5
 20115                           prodh	equ	0xFF4
 20116                           prodl	equ	0xFF3
 20117                           postinc0	equ	0xFEE
 20118                           wreg	equ	0xFE8
 20119                           postinc1	equ	0xFE6
 20120                           postdec1	equ	0xFE5
 20121                           plusw1	equ	0xFE3
 20122                           fsr1h	equ	0xFE2
 20123                           fsr1l	equ	0xFE1
 20124                           indf2	equ	0xFDF
 20125                           postinc2	equ	0xFDE
 20126                           postdec2	equ	0xFDD
 20127                           plusw2	equ	0xFDB
 20128                           fsr2h	equ	0xFDA
 20129                           fsr2l	equ	0xFD9
 20130                           status	equ	0xFD8
 20131                           
 20132 ;; *************** function ___wmul *****************
 20133 ;; Defined at:
 20134 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 20135 ;; Parameters:    Size  Location     Type
 20136 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20137 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20138 ;; Auto vars:     Size  Location     Type
 20139 ;;  product         2    4[BANK0 ] unsigned int 
 20140 ;; Return value:  Size  Location     Type
 20141 ;;                  2    0[BANK0 ] unsigned int 
 20142 ;; Registers used:
 20143 ;;		wreg, status,2, status,0, prodl, prodh
 20144 ;; Tracked objects:
 20145 ;;		On entry : 0/0
 20146 ;;		On exit  : 0/0
 20147 ;;		Unchanged: 0/0
 20148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20152 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20153 ;;Total ram usage:        6 bytes
 20154 ;; Hardware stack levels used:    1
 20155 ;; Hardware stack levels required when called:   10
 20156 ;; This function calls:
 20157 ;;		Nothing
 20158 ;; This function is called by:
 20159 ;;		_atoi
 20160 ;; This function uses a non-reentrant model
 20161 ;;
 20162                           
 20163                           	psect	text83
 20164  0155E0                     __ptext83:
 20165                           	opt stack 0
 20166  0155E0                     ___wmul:
 20167                           	opt stack 16
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;incstack = 0
 20171  0155E0  0100               	movlb	0	; () banked
 20172  0155E2  5160               	movf	___wmul@multiplier& (0+255),w,b
 20173  0155E4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20174  0155E6  CFF3 F064          	movff	prodl,___wmul@product
 20175  0155EA  CFF4 F065          	movff	prodh,___wmul@product+1
 20176  0155EE  5160               	movf	___wmul@multiplier& (0+255),w,b
 20177  0155F0  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20178  0155F2  50F3               	movf	prodl,w,c
 20179  0155F4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20180  0155F6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20181  0155F8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20182  0155FA  50F3               	movf	prodl,w,c
 20183  0155FC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20184                           
 20185                           ; BSR set to: 0
 20186  0155FE  C064  F060         	movff	___wmul@product,?___wmul
 20187  015602  C065  F061         	movff	___wmul@product+1,?___wmul+1
 20188  015606  0012               	return	
 20189  015608                     __end_of___wmul:
 20190                           	opt stack 0
 20191                           tblptru	equ	0xFF8
 20192                           tblptrh	equ	0xFF7
 20193                           tblptrl	equ	0xFF6
 20194                           tablat	equ	0xFF5
 20195                           prodh	equ	0xFF4
 20196                           prodl	equ	0xFF3
 20197                           postinc0	equ	0xFEE
 20198                           wreg	equ	0xFE8
 20199                           postinc1	equ	0xFE6
 20200                           postdec1	equ	0xFE5
 20201                           plusw1	equ	0xFE3
 20202                           fsr1h	equ	0xFE2
 20203                           fsr1l	equ	0xFE1
 20204                           indf2	equ	0xFDF
 20205                           postinc2	equ	0xFDE
 20206                           postdec2	equ	0xFDD
 20207                           plusw2	equ	0xFDB
 20208                           fsr2h	equ	0xFDA
 20209                           fsr2l	equ	0xFD9
 20210                           status	equ	0xFD8
 20211                           
 20212 ;; *************** function __get_item *****************
 20213 ;; Defined at:
 20214 ;;		line 67 in file "config_file.c"
 20215 ;; Parameters:    Size  Location     Type
 20216 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20217 ;;		 -> configFile_read@item_string(31), 
 20218 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20219 ;;		 -> configFile_read@value_string(12), 
 20220 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20221 ;;		 -> ConfigFile_buffer(512), 
 20222 ;; Auto vars:     Size  Location     Type
 20223 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20224 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20225 ;; Return value:  Size  Location     Type
 20226 ;;                  1    wreg      unsigned char 
 20227 ;; Registers used:
 20228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20229 ;; Tracked objects:
 20230 ;;		On entry : 0/0
 20231 ;;		On exit  : 0/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20234 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20236 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20237 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20238 ;;Total ram usage:       11 bytes
 20239 ;; Hardware stack levels used:    1
 20240 ;; Hardware stack levels required when called:   10
 20241 ;; This function calls:
 20242 ;;		Nothing
 20243 ;; This function is called by:
 20244 ;;		_configFile_read
 20245 ;; This function uses a non-reentrant model
 20246 ;;
 20247                           
 20248                           	psect	text84
 20249  00FA6A                     __ptext84:
 20250                           	opt stack 0
 20251  00FA6A                     __get_item:
 20252                           	opt stack 18
 20253                           
 20254                           ;config_file.c: 69: uint8_t item_ctr;;config_file.c: 70: uint8_t value_ctr;;config_file.
      +                          c: 73: for(item_ctr=0;item_ctr<30;++item_ctr)
 20255                           
 20256                           ; BSR set to: 0
 20257                           ;incstack = 0
 20258  00FA6A  0E00               	movlw	0
 20259  00FA6C  0100               	movlb	0	; () banked
 20260  00FA6E  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20261  00FA70                     l16112:
 20262                           
 20263                           ; BSR set to: 0
 20264  00FA70  0E1D               	movlw	29
 20265  00FA72  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20266  00FA74  D001               	goto	l2921
 20267  00FA76  D020               	goto	u14920
 20268  00FA78                     l2921:
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;config_file.c: 74: {;config_file.c: 76: if(buffer[item_ctr] == '=')
 20272                           
 20273                           ; BSR set to: 0
 20274  00FA78  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20275  00FA7A  0D01               	mullw	1
 20276  00FA7C  50F3               	movf	prodl,w,c
 20277  00FA7E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20278  00FA80  6ED9               	movwf	fsr2l,c
 20279  00FA82  50F4               	movf	prodh,w,c
 20280  00FA84  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20281  00FA86  6EDA               	movwf	fsr2h,c
 20282  00FA88  0E3D               	movlw	61
 20283  00FA8A  18DE               	xorwf	postinc2,w,c
 20284  00FA8C  B4D8               	btfsc	status,2,c
 20285  00FA8E  D014               	goto	u14920
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;config_file.c: 79: };config_file.c: 80: item_string[item_ctr] = buffer[item_ctr];
 20289                           
 20290                           ; BSR set to: 0
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;config_file.c: 77: {;config_file.c: 78: break;
 20294  00FA90  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20295  00FA92  0D01               	mullw	1
 20296  00FA94  50F3               	movf	prodl,w,c
 20297  00FA96  2564               	addwf	__get_item@buffer& (0+255),w,b
 20298  00FA98  6ED9               	movwf	fsr2l,c
 20299  00FA9A  50F4               	movf	prodh,w,c
 20300  00FA9C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20301  00FA9E  6EDA               	movwf	fsr2h,c
 20302  00FAA0  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20303  00FAA2  0D01               	mullw	1
 20304  00FAA4  50F3               	movf	prodl,w,c
 20305  00FAA6  2560               	addwf	__get_item@item_string& (0+255),w,b
 20306  00FAA8  6EE1               	movwf	fsr1l,c
 20307  00FAAA  50F4               	movf	prodh,w,c
 20308  00FAAC  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20309  00FAAE  6EE2               	movwf	fsr1h,c
 20310  00FAB0  CFDF FFE7          	movff	indf2,indf1
 20311                           
 20312                           ; BSR set to: 0
 20313  00FAB4  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20314  00FAB6  D7DC               	goto	l16112
 20315  00FAB8                     u14920:
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;config_file.c: 81: };config_file.c: 82: item_string[item_ctr++] = 0;
 20319                           
 20320                           ; BSR set to: 0
 20321  00FAB8  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20322  00FABA  0D01               	mullw	1
 20323  00FABC  50F3               	movf	prodl,w,c
 20324  00FABE  2560               	addwf	__get_item@item_string& (0+255),w,b
 20325  00FAC0  6ED9               	movwf	fsr2l,c
 20326  00FAC2  50F4               	movf	prodh,w,c
 20327  00FAC4  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20328  00FAC6  6EDA               	movwf	fsr2h,c
 20329  00FAC8  0E00               	movlw	0
 20330  00FACA  6EDF               	movwf	indf2,c
 20331                           
 20332                           ; BSR set to: 0
 20333  00FACC  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;config_file.c: 85: for(value_ctr=0;value_ctr<11;++value_ctr)
 20337  00FACE  0E00               	movlw	0
 20338  00FAD0  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20339  00FAD2                     l16132:
 20340                           
 20341                           ; BSR set to: 0
 20342  00FAD2  0E0A               	movlw	10
 20343  00FAD4  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20344  00FAD6  D001               	goto	l2924
 20345  00FAD8  D03B               	goto	u14960
 20346  00FADA                     l2924:
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;config_file.c: 86: {;config_file.c: 88: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20350                           
 20351                           ; BSR set to: 0
 20352  00FADA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20353  00FADC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20354  00FAE0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20355  00FAE2  2766               	addwf	??__get_item& (0+255),f,b
 20356  00FAE4  0E00               	movlw	0
 20357  00FAE6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20358  00FAE8  5166               	movf	??__get_item& (0+255),w,b
 20359  00FAEA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20360  00FAEC  6ED9               	movwf	fsr2l,c
 20361  00FAEE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20362  00FAF0  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20363  00FAF2  6EDA               	movwf	fsr2h,c
 20364  00FAF4  0E0D               	movlw	13
 20365  00FAF6  18DE               	xorwf	postinc2,w,c
 20366  00FAF8  B4D8               	btfsc	status,2,c
 20367  00FAFA  D02A               	goto	u14960
 20368                           
 20369                           ; BSR set to: 0
 20370  00FAFC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20371  00FAFE  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20372  00FB02  6B67               	clrf	(??__get_item+1)& (0+255),b
 20373  00FB04  2766               	addwf	??__get_item& (0+255),f,b
 20374  00FB06  0E00               	movlw	0
 20375  00FB08  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20376  00FB0A  5166               	movf	??__get_item& (0+255),w,b
 20377  00FB0C  2564               	addwf	__get_item@buffer& (0+255),w,b
 20378  00FB0E  6ED9               	movwf	fsr2l,c
 20379  00FB10  5167               	movf	(??__get_item+1)& (0+255),w,b
 20380  00FB12  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20381  00FB14  6EDA               	movwf	fsr2h,c
 20382  00FB16  0E0A               	movlw	10
 20383  00FB18  18DE               	xorwf	postinc2,w,c
 20384  00FB1A  B4D8               	btfsc	status,2,c
 20385  00FB1C  D019               	goto	u14960
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;config_file.c: 91: };config_file.c: 92: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20389                           
 20390                           ; BSR set to: 0
 20391                           
 20392                           ; BSR set to: 0
 20393                           ;config_file.c: 89: {;config_file.c: 90: break;
 20394  00FB1E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20395  00FB20  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20396  00FB24  6B67               	clrf	(??__get_item+1)& (0+255),b
 20397  00FB26  2766               	addwf	??__get_item& (0+255),f,b
 20398  00FB28  0E00               	movlw	0
 20399  00FB2A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20400  00FB2C  5166               	movf	??__get_item& (0+255),w,b
 20401  00FB2E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20402  00FB30  6ED9               	movwf	fsr2l,c
 20403  00FB32  5167               	movf	(??__get_item+1)& (0+255),w,b
 20404  00FB34  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20405  00FB36  6EDA               	movwf	fsr2h,c
 20406  00FB38  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20407  00FB3A  0D01               	mullw	1
 20408  00FB3C  50F3               	movf	prodl,w,c
 20409  00FB3E  2562               	addwf	__get_item@value_string& (0+255),w,b
 20410  00FB40  6EE1               	movwf	fsr1l,c
 20411  00FB42  50F4               	movf	prodh,w,c
 20412  00FB44  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20413  00FB46  6EE2               	movwf	fsr1h,c
 20414  00FB48  CFDF FFE7          	movff	indf2,indf1
 20415                           
 20416                           ; BSR set to: 0
 20417  00FB4C  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20418  00FB4E  D7C1               	goto	l16132
 20419  00FB50                     u14960:
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;config_file.c: 93: };config_file.c: 94: value_string[value_ctr++] = 0;
 20423                           
 20424                           ; BSR set to: 0
 20425  00FB50  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20426  00FB52  0D01               	mullw	1
 20427  00FB54  50F3               	movf	prodl,w,c
 20428  00FB56  2562               	addwf	__get_item@value_string& (0+255),w,b
 20429  00FB58  6ED9               	movwf	fsr2l,c
 20430  00FB5A  50F4               	movf	prodh,w,c
 20431  00FB5C  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20432  00FB5E  6EDA               	movwf	fsr2h,c
 20433  00FB60  0E00               	movlw	0
 20434  00FB62  6EDF               	movwf	indf2,c
 20435                           
 20436                           ; BSR set to: 0
 20437  00FB64  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;config_file.c: 97: if((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_ctr]
      +                          =='\n'))
 20441  00FB66  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20442  00FB68  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20443  00FB6C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20444  00FB6E  2766               	addwf	??__get_item& (0+255),f,b
 20445  00FB70  0E00               	movlw	0
 20446  00FB72  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20447  00FB74  5166               	movf	??__get_item& (0+255),w,b
 20448  00FB76  2564               	addwf	__get_item@buffer& (0+255),w,b
 20449  00FB78  6ED9               	movwf	fsr2l,c
 20450  00FB7A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20451  00FB7C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20452  00FB7E  6EDA               	movwf	fsr2h,c
 20453  00FB80  0E0D               	movlw	13
 20454  00FB82  18DE               	xorwf	postinc2,w,c
 20455  00FB84  B4D8               	btfsc	status,2,c
 20456  00FB86  D011               	goto	u14980
 20457                           
 20458                           ; BSR set to: 0
 20459  00FB88  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20460  00FB8A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20461  00FB8E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20462  00FB90  2766               	addwf	??__get_item& (0+255),f,b
 20463  00FB92  0E00               	movlw	0
 20464  00FB94  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20465  00FB96  5166               	movf	??__get_item& (0+255),w,b
 20466  00FB98  2564               	addwf	__get_item@buffer& (0+255),w,b
 20467  00FB9A  6ED9               	movwf	fsr2l,c
 20468  00FB9C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20469  00FB9E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20470  00FBA0  6EDA               	movwf	fsr2h,c
 20471  00FBA2  0E0A               	movlw	10
 20472  00FBA4  18DE               	xorwf	postinc2,w,c
 20473  00FBA6  A4D8               	btfss	status,2,c
 20474  00FBA8  D005               	goto	l2929
 20475  00FBAA                     u14980:
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;config_file.c: 98: {;config_file.c: 99: return (item_ctr+value_ctr+1);
 20479                           
 20480                           ; BSR set to: 0
 20481  00FBAA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20482  00FBAC  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20483  00FBAE  6F66               	movwf	??__get_item& (0+255),b
 20484  00FBB0  2966               	incf	??__get_item& (0+255),w,b
 20485                           
 20486                           ; BSR set to: 0
 20487                           ;config_file.c: 100: }
 20488                           
 20489                           ; BSR set to: 0
 20490  00FBB2  0012               	return	
 20491  00FBB4                     l2929:
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;config_file.c: 101: else;config_file.c: 102: {;config_file.c: 103: return (item_ctr+val
      +                          ue_ctr);
 20495                           
 20496                           ; BSR set to: 0
 20497  00FBB4  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20498  00FBB6  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20499                           
 20500                           ; BSR set to: 0
 20501  00FBB8  0012               	return	
 20502  00FBBA                     __end_of__get_item:
 20503                           	opt stack 0
 20504                           tblptru	equ	0xFF8
 20505                           tblptrh	equ	0xFF7
 20506                           tblptrl	equ	0xFF6
 20507                           tablat	equ	0xFF5
 20508                           prodh	equ	0xFF4
 20509                           prodl	equ	0xFF3
 20510                           postinc0	equ	0xFEE
 20511                           wreg	equ	0xFE8
 20512                           indf1	equ	0xFE7
 20513                           postinc1	equ	0xFE6
 20514                           postdec1	equ	0xFE5
 20515                           plusw1	equ	0xFE3
 20516                           fsr1h	equ	0xFE2
 20517                           fsr1l	equ	0xFE1
 20518                           indf2	equ	0xFDF
 20519                           postinc2	equ	0xFDE
 20520                           postdec2	equ	0xFDD
 20521                           plusw2	equ	0xFDB
 20522                           fsr2h	equ	0xFDA
 20523                           fsr2l	equ	0xFD9
 20524                           status	equ	0xFD8
 20525                           
 20526 ;; *************** function _adc_init *****************
 20527 ;; Defined at:
 20528 ;;		line 19 in file "adc.c"
 20529 ;; Parameters:    Size  Location     Type
 20530 ;;		None
 20531 ;; Auto vars:     Size  Location     Type
 20532 ;;		None
 20533 ;; Return value:  Size  Location     Type
 20534 ;;                  1    wreg      void 
 20535 ;; Registers used:
 20536 ;;		wreg, status,2
 20537 ;; Tracked objects:
 20538 ;;		On entry : 0/0
 20539 ;;		On exit  : 0/0
 20540 ;;		Unchanged: 0/0
 20541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20546 ;;Total ram usage:        0 bytes
 20547 ;; Hardware stack levels used:    1
 20548 ;; Hardware stack levels required when called:   10
 20549 ;; This function calls:
 20550 ;;		Nothing
 20551 ;; This function is called by:
 20552 ;;		_system_init
 20553 ;; This function uses a non-reentrant model
 20554 ;;
 20555                           
 20556                           	psect	text85
 20557  0147A6                     __ptext85:
 20558                           	opt stack 0
 20559  0147A6                     _adc_init:
 20560                           	opt stack 19
 20561                           
 20562                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;incstack = 0
 20566  0147A6  0E00               	movlw	0
 20567  0147A8  0101               	movlb	1	; () banked
 20568  0147AA  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 20569  0147AC  0E00               	movlw	0
 20570  0147AE  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 20571                           
 20572                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20573  0147B0  0E00               	movlw	0
 20574  0147B2  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 20575  0147B4  0E00               	movlw	0
 20576  0147B6  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 20577                           
 20578                           ;adc.c: 24: os.fan_on = 0;
 20579  0147B8  0E00               	movlw	0
 20580  0147BA  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 20581                           
 20582                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20583  0147BC  0E00               	movlw	0
 20584  0147BE  0102               	movlb	2	; () banked
 20585  0147C0  6F1F               	movwf	_params& (0+255),b
 20586                           
 20587                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20588  0147C2  0E00               	movlw	0
 20589  0147C4  6F21               	movwf	(_params+2)& (0+255),b
 20590  0147C6  0E00               	movlw	0
 20591  0147C8  6F20               	movwf	(_params+1)& (0+255),b
 20592                           
 20593                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20594  0147CA  0E00               	movlw	0
 20595  0147CC  6F24               	movwf	(_params+5)& (0+255),b
 20596                           
 20597                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20598  0147CE  0E00               	movlw	0
 20599  0147D0  6F23               	movwf	(_params+4)& (0+255),b
 20600  0147D2  0E00               	movlw	0
 20601  0147D4  6F22               	movwf	(_params+3)& (0+255),b
 20602                           
 20603                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20604  0147D6  0E00               	movlw	0
 20605  0147D8  6F25               	movwf	(_params+6)& (0+255),b
 20606                           
 20607                           ; BSR set to: 2
 20608                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20609  0147DA  9EC2               	bcf	4034,7,c	;volatile
 20610                           
 20611                           ; BSR set to: 2
 20612                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20613  0147DC  9CC2               	bcf	4034,6,c	;volatile
 20614                           
 20615                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20616  0147DE  50C2               	movf	4034,w,c	;volatile
 20617  0147E0  0BC3               	andlw	-61
 20618  0147E2  0924               	iorlw	36
 20619  0147E4  6EC2               	movwf	4034,c	;volatile
 20620                           
 20621                           ; BSR set to: 2
 20622                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20623  0147E6  8EC1               	bsf	4033,7,c	;volatile
 20624                           
 20625                           ; BSR set to: 2
 20626                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20627  0147E8  9CC1               	bcf	4033,6,c	;volatile
 20628                           
 20629                           ; BSR set to: 2
 20630                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20631  0147EA  86C1               	bsf	4033,3,c	;volatile
 20632  0147EC  88C1               	bsf	4033,4,c	;volatile
 20633  0147EE  8AC1               	bsf	4033,5,c	;volatile
 20634                           
 20635                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20636  0147F0  50C1               	movf	4033,w,c	;volatile
 20637  0147F2  0BF8               	andlw	-8
 20638  0147F4  0906               	iorlw	6
 20639  0147F6  6EC1               	movwf	4033,c	;volatile
 20640                           
 20641                           ; BSR set to: 2
 20642                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20643  0147F8  80C2               	bsf	4034,0,c	;volatile
 20644                           
 20645                           ; BSR set to: 2
 20646                           ;adc.c: 41: ADCON0bits.GO = 1;
 20647  0147FA  82C2               	bsf	4034,1,c	;volatile
 20648                           
 20649                           ; BSR set to: 2
 20650  0147FC  0012               	return		;funcret
 20651  0147FE                     __end_of_adc_init:
 20652                           	opt stack 0
 20653                           tblptru	equ	0xFF8
 20654                           tblptrh	equ	0xFF7
 20655                           tblptrl	equ	0xFF6
 20656                           tablat	equ	0xFF5
 20657                           prodh	equ	0xFF4
 20658                           prodl	equ	0xFF3
 20659                           postinc0	equ	0xFEE
 20660                           wreg	equ	0xFE8
 20661                           indf1	equ	0xFE7
 20662                           postinc1	equ	0xFE6
 20663                           postdec1	equ	0xFE5
 20664                           plusw1	equ	0xFE3
 20665                           fsr1h	equ	0xFE2
 20666                           fsr1l	equ	0xFE1
 20667                           indf2	equ	0xFDF
 20668                           postinc2	equ	0xFDE
 20669                           postdec2	equ	0xFDD
 20670                           plusw2	equ	0xFDB
 20671                           fsr2h	equ	0xFDA
 20672                           fsr2l	equ	0xFD9
 20673                           status	equ	0xFD8
 20674                           
 20675 ;; *************** function __system_timer0_init *****************
 20676 ;; Defined at:
 20677 ;;		line 125 in file "os.c"
 20678 ;; Parameters:    Size  Location     Type
 20679 ;;		None
 20680 ;; Auto vars:     Size  Location     Type
 20681 ;;		None
 20682 ;; Return value:  Size  Location     Type
 20683 ;;                  1    wreg      void 
 20684 ;; Registers used:
 20685 ;;		wreg, status,2
 20686 ;; Tracked objects:
 20687 ;;		On entry : 0/0
 20688 ;;		On exit  : 0/0
 20689 ;;		Unchanged: 0/0
 20690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20695 ;;Total ram usage:        0 bytes
 20696 ;; Hardware stack levels used:    1
 20697 ;; Hardware stack levels required when called:   10
 20698 ;; This function calls:
 20699 ;;		Nothing
 20700 ;; This function is called by:
 20701 ;;		_system_init
 20702 ;; This function uses a non-reentrant model
 20703 ;;
 20704                           
 20705                           	psect	text86
 20706  015490                     __ptext86:
 20707                           	opt stack 0
 20708  015490                     __system_timer0_init:
 20709                           	opt stack 19
 20710                           
 20711                           ;os.c: 130: T0CONbits.T0CS = 0;
 20712                           
 20713                           ; BSR set to: 2
 20714                           ;incstack = 0
 20715  015490  9AD5               	bcf	4053,5,c	;volatile
 20716                           
 20717                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20718  015492  9CD5               	bcf	4053,6,c	;volatile
 20719                           
 20720                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20721  015494  94D5               	bcf	4053,2,c	;volatile
 20722                           
 20723                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20724  015496  82D5               	bsf	4053,1,c	;volatile
 20725                           
 20726                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20727  015498  90D5               	bcf	4053,0,c	;volatile
 20728                           
 20729                           ;os.c: 138: T0CONbits.PSA = 0;
 20730  01549A  96D5               	bcf	4053,3,c	;volatile
 20731                           
 20732                           ;os.c: 140: TMR0H = 0xFA;
 20733  01549C  0EFA               	movlw	250
 20734  01549E  6ED7               	movwf	4055,c	;volatile
 20735                           
 20736                           ;os.c: 141: TMR0L = 0x24;
 20737  0154A0  0E24               	movlw	36
 20738  0154A2  6ED6               	movwf	4054,c	;volatile
 20739                           
 20740                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20741  0154A4  8ED5               	bsf	4053,7,c	;volatile
 20742                           
 20743                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20744  0154A6  94F2               	bcf	intcon,2,c	;volatile
 20745                           
 20746                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20747  0154A8  8AF2               	bsf	intcon,5,c	;volatile
 20748                           
 20749                           ;os.c: 148: INTCONbits.GIE = 1;
 20750  0154AA  8EF2               	bsf	intcon,7,c	;volatile
 20751                           
 20752                           ;os.c: 151: os.subTimeSlot = 0;
 20753  0154AC  0E00               	movlw	0
 20754  0154AE  0101               	movlb	1	; () banked
 20755  0154B0  6F71               	movwf	_os& (0+255),b	;volatile
 20756                           
 20757                           ;os.c: 152: os.timeSlot = 0;
 20758  0154B2  0E00               	movlw	0
 20759  0154B4  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 20760                           
 20761                           ;os.c: 153: os.done = 0;
 20762  0154B6  0E00               	movlw	0
 20763  0154B8  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 20764                           
 20765                           ; BSR set to: 1
 20766  0154BA  0012               	return		;funcret
 20767  0154BC                     __end_of__system_timer0_init:
 20768                           	opt stack 0
 20769                           tblptru	equ	0xFF8
 20770                           tblptrh	equ	0xFF7
 20771                           tblptrl	equ	0xFF6
 20772                           tablat	equ	0xFF5
 20773                           prodh	equ	0xFF4
 20774                           prodl	equ	0xFF3
 20775                           intcon	equ	0xFF2
 20776                           postinc0	equ	0xFEE
 20777                           wreg	equ	0xFE8
 20778                           indf1	equ	0xFE7
 20779                           postinc1	equ	0xFE6
 20780                           postdec1	equ	0xFE5
 20781                           plusw1	equ	0xFE3
 20782                           fsr1h	equ	0xFE2
 20783                           fsr1l	equ	0xFE1
 20784                           indf2	equ	0xFDF
 20785                           postinc2	equ	0xFDE
 20786                           postdec2	equ	0xFDD
 20787                           plusw2	equ	0xFDB
 20788                           fsr2h	equ	0xFDA
 20789                           fsr2l	equ	0xFD9
 20790                           status	equ	0xFD8
 20791                           
 20792 ;; *************** function __system_pin_setup *****************
 20793 ;; Defined at:
 20794 ;;		line 59 in file "os.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;		None
 20797 ;; Auto vars:     Size  Location     Type
 20798 ;;		None
 20799 ;; Return value:  Size  Location     Type
 20800 ;;                  1    wreg      void 
 20801 ;; Registers used:
 20802 ;;		wreg, status,2
 20803 ;; Tracked objects:
 20804 ;;		On entry : 0/0
 20805 ;;		On exit  : 0/0
 20806 ;;		Unchanged: 0/0
 20807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20812 ;;Total ram usage:        0 bytes
 20813 ;; Hardware stack levels used:    1
 20814 ;; Hardware stack levels required when called:   10
 20815 ;; This function calls:
 20816 ;;		Nothing
 20817 ;; This function is called by:
 20818 ;;		_system_init
 20819 ;; This function uses a non-reentrant model
 20820 ;;
 20821                           
 20822                           	psect	text87
 20823  014098                     __ptext87:
 20824                           	opt stack 0
 20825  014098                     __system_pin_setup:
 20826                           	opt stack 19
 20827                           
 20828                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20829                           
 20830                           ; BSR set to: 1
 20831                           ;incstack = 0
 20832  014098  8A95               	bsf	3989,5,c	;volatile
 20833                           
 20834                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20835  01409A  9895               	bcf	3989,4,c	;volatile
 20836                           
 20837                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20838  01409C  9C95               	bcf	3989,6,c	;volatile
 20839                           
 20840                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20841  01409E  9E95               	bcf	3989,7,c	;volatile
 20842                           
 20843                           ;os.c: 66: LATDbits.LD7 = 1;
 20844  0140A0  8E8C               	bsf	3980,7,c	;volatile
 20845                           
 20846                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20847  0140A2  8693               	bsf	3987,3,c	;volatile
 20848                           
 20849                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20850  0140A4  010F               	movlb	15	; () banked
 20851  0140A6  9349               	bcf	73,1,b	;volatile
 20852                           
 20853                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20854  0140A8  9E94               	bcf	3988,7,c	;volatile
 20855                           
 20856                           ;os.c: 72: LATCbits.LC7 = 0;
 20857  0140AA  9E8B               	bcf	3979,7,c	;volatile
 20858                           
 20859                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20860  0140AC  9C94               	bcf	3988,6,c	;volatile
 20861                           
 20862                           ;os.c: 75: LATCbits.LC6 = 0;
 20863  0140AE  9C8B               	bcf	3979,6,c	;volatile
 20864                           
 20865                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20866  0140B0  9692               	bcf	3986,3,c	;volatile
 20867                           
 20868                           ;os.c: 78: LATAbits.LA3 = 0;
 20869  0140B2  9689               	bcf	3977,3,c	;volatile
 20870                           
 20871                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20872  0140B4  9294               	bcf	3988,1,c	;volatile
 20873                           
 20874                           ;os.c: 81: LATCbits.LC1 = 0;
 20875  0140B6  928B               	bcf	3979,1,c	;volatile
 20876                           
 20877                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20878  0140B8  8A93               	bsf	3987,5,c	;volatile
 20879                           
 20880                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20881  0140BA  8893               	bsf	3987,4,c	;volatile
 20882                           
 20883                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20884  0140BC  9093               	bcf	3987,0,c	;volatile
 20885                           
 20886                           ;os.c: 90: LATBbits.LB0 = 1;
 20887  0140BE  808A               	bsf	3978,0,c	;volatile
 20888                           
 20889                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20890  0140C0  9493               	bcf	3987,2,c	;volatile
 20891                           
 20892                           ;os.c: 93: LATBbits.LB2 = 0;
 20893  0140C2  948A               	bcf	3978,2,c	;volatile
 20894                           
 20895                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20896  0140C4  9293               	bcf	3987,1,c	;volatile
 20897                           
 20898                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20899  0140C6  8549               	bsf	73,2,b	;volatile
 20900                           
 20901                           ;os.c: 97: LATBbits.LB1 = 0;
 20902  0140C8  928A               	bcf	3978,1,c	;volatile
 20903                           
 20904                           ; BSR set to: 15
 20905                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20906  0140CA  0E55               	movlw	85
 20907  0140CC  6EA7               	movwf	4007,c	;volsfr
 20908  0140CE  0EAA               	movlw	170
 20909  0140D0  6EA7               	movwf	4007,c	;volsfr
 20910                           
 20911                           ; BSR set to: 15
 20912  0140D2  010E               	movlb	14	; () banked
 20913  0140D4  91BF               	bcf	191,0,b	;volatile
 20914                           
 20915                           ;os.c: 99: RPOR4 = 14;
 20916  0140D6  0E0E               	movlw	14
 20917  0140D8  6FC4               	movwf	196,b	;volatile
 20918                           
 20919                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20920  0140DA  0E55               	movlw	85
 20921  0140DC  6EA7               	movwf	4007,c	;volsfr
 20922  0140DE  0EAA               	movlw	170
 20923  0140E0  6EA7               	movwf	4007,c	;volsfr
 20924                           
 20925                           ; BSR set to: 14
 20926  0140E2  81BF               	bsf	191,0,b	;volatile
 20927                           
 20928                           ; BSR set to: 14
 20929                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20930  0140E4  8495               	bsf	3989,2,c	;volatile
 20931                           
 20932                           ; BSR set to: 14
 20933                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20934  0140E6  8496               	bsf	3990,2,c	;volatile
 20935                           
 20936                           ; BSR set to: 14
 20937                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20938  0140E8  010F               	movlb	15	; () banked
 20939  0140EA  8F48               	bsf	72,7,b	;volatile
 20940                           
 20941                           ; BSR set to: 15
 20942                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20943  0140EC  8096               	bsf	3990,0,c	;volatile
 20944                           
 20945                           ; BSR set to: 15
 20946                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20947  0140EE  8B48               	bsf	72,5,b	;volatile
 20948                           
 20949                           ; BSR set to: 15
 20950                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20951  0140F0  8296               	bsf	3990,1,c	;volatile
 20952                           
 20953                           ; BSR set to: 15
 20954                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20955  0140F2  8D48               	bsf	72,6,b	;volatile
 20956                           
 20957                           ; BSR set to: 15
 20958                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20959  0140F4  8092               	bsf	3986,0,c	;volatile
 20960                           
 20961                           ; BSR set to: 15
 20962                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20963  0140F6  8148               	bsf	72,0,b	;volatile
 20964                           
 20965                           ; BSR set to: 15
 20966                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20967  0140F8  8492               	bsf	3986,2,c	;volatile
 20968                           
 20969                           ; BSR set to: 15
 20970                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20971  0140FA  8548               	bsf	72,2,b	;volatile
 20972                           
 20973                           ; BSR set to: 15
 20974                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20975  0140FC  8292               	bsf	3986,1,c	;volatile
 20976                           
 20977                           ; BSR set to: 15
 20978                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20979  0140FE  8348               	bsf	72,1,b	;volatile
 20980                           
 20981                           ; BSR set to: 15
 20982  014100  0012               	return		;funcret
 20983  014102                     __end_of__system_pin_setup:
 20984                           	opt stack 0
 20985                           tblptru	equ	0xFF8
 20986                           tblptrh	equ	0xFF7
 20987                           tblptrl	equ	0xFF6
 20988                           tablat	equ	0xFF5
 20989                           prodh	equ	0xFF4
 20990                           prodl	equ	0xFF3
 20991                           intcon	equ	0xFF2
 20992                           postinc0	equ	0xFEE
 20993                           wreg	equ	0xFE8
 20994                           indf1	equ	0xFE7
 20995                           postinc1	equ	0xFE6
 20996                           postdec1	equ	0xFE5
 20997                           plusw1	equ	0xFE3
 20998                           fsr1h	equ	0xFE2
 20999                           fsr1l	equ	0xFE1
 21000                           indf2	equ	0xFDF
 21001                           postinc2	equ	0xFDE
 21002                           postdec2	equ	0xFDD
 21003                           plusw2	equ	0xFDB
 21004                           fsr2h	equ	0xFDA
 21005                           fsr2l	equ	0xFD9
 21006                           status	equ	0xFD8
 21007                           
 21008 ;; *************** function __backlight_init *****************
 21009 ;; Defined at:
 21010 ;;		line 158 in file "os.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;		None
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;		None
 21015 ;; Return value:  Size  Location     Type
 21016 ;;                  1    wreg      void 
 21017 ;; Registers used:
 21018 ;;		None
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/0
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21028 ;;Total ram usage:        0 bytes
 21029 ;; Hardware stack levels used:    1
 21030 ;; Hardware stack levels required when called:   10
 21031 ;; This function calls:
 21032 ;;		Nothing
 21033 ;; This function is called by:
 21034 ;;		_system_init
 21035 ;; This function uses a non-reentrant model
 21036 ;;
 21037                           
 21038                           	psect	text88
 21039  015978                     __ptext88:
 21040                           	opt stack 0
 21041  015978                     __backlight_init:
 21042                           	opt stack 19
 21043                           
 21044                           ;os.c: 160: LATCbits.LC1 = 1;
 21045                           
 21046                           ; BSR set to: 15
 21047                           ;incstack = 0
 21048  015978  828B               	bsf	3979,1,c	;volatile
 21049  01597A  0012               	return		;funcret
 21050  01597C                     __end_of__backlight_init:
 21051                           	opt stack 0
 21052                           tblptru	equ	0xFF8
 21053                           tblptrh	equ	0xFF7
 21054                           tblptrl	equ	0xFF6
 21055                           tablat	equ	0xFF5
 21056                           prodh	equ	0xFF4
 21057                           prodl	equ	0xFF3
 21058                           intcon	equ	0xFF2
 21059                           postinc0	equ	0xFEE
 21060                           wreg	equ	0xFE8
 21061                           indf1	equ	0xFE7
 21062                           postinc1	equ	0xFE6
 21063                           postdec1	equ	0xFE5
 21064                           plusw1	equ	0xFE3
 21065                           fsr1h	equ	0xFE2
 21066                           fsr1l	equ	0xFE1
 21067                           indf2	equ	0xFDF
 21068                           postinc2	equ	0xFDE
 21069                           postdec2	equ	0xFDD
 21070                           plusw2	equ	0xFDB
 21071                           fsr2h	equ	0xFDA
 21072                           fsr2l	equ	0xFD9
 21073                           status	equ	0xFD8
 21074                           
 21075 ;; *************** function _motor_process_cue *****************
 21076 ;; Defined at:
 21077 ;;		line 159 in file "motor.c"
 21078 ;; Parameters:    Size  Location     Type
 21079 ;;		None
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;		None
 21082 ;; Return value:  Size  Location     Type
 21083 ;;                  1    wreg      void 
 21084 ;; Registers used:
 21085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21086 ;; Tracked objects:
 21087 ;;		On entry : 0/0
 21088 ;;		On exit  : 0/0
 21089 ;;		Unchanged: 0/0
 21090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21095 ;;Total ram usage:        0 bytes
 21096 ;; Hardware stack levels used:    1
 21097 ;; Hardware stack levels required when called:   13
 21098 ;; This function calls:
 21099 ;;		__motor_run
 21100 ;;		_motor_items_in_cue
 21101 ;; This function is called by:
 21102 ;;		_main
 21103 ;; This function uses a non-reentrant model
 21104 ;;
 21105                           
 21106                           	psect	text89
 21107  013D8E                     __ptext89:
 21108                           	opt stack 0
 21109  013D8E                     _motor_process_cue:
 21110                           	opt stack 17
 21111                           
 21112                           ;motor.c: 161: if(motor_items_in_cue()==0)
 21113                           
 21114                           ;incstack = 0
 21115  013D8E  EC81  F0AC         	call	_motor_items_in_cue	;wreg free
 21116  013D92  0900               	iorlw	0
 21117  013D94  B4D8               	btfsc	status,2,c
 21118  013D96  0012               	return	
 21119                           
 21120                           ;motor.c: 166: else if(os.busy)
 21121                           
 21122                           ;motor.c: 165: }
 21123                           
 21124                           ;motor.c: 162: {;motor.c: 164: return;
 21125  013D98  0101               	movlb	1	; () banked
 21126  013D9A  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21127  013D9C  A4D8               	btfss	status,2,c
 21128  013D9E  0012               	return	
 21129                           
 21130                           ; BSR set to: 1
 21131                           ;motor.c: 171: else;motor.c: 172: {;motor.c: 174: _motor_run(;motor.c: 175: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 176: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 177: motor_command_cue[motor_cue_read_index].speed;motor.c: 178:
      +                           );
 21132                           
 21133                           ; BSR set to: 1
 21134                           
 21135                           ; BSR set to: 1
 21136                           ;motor.c: 170: }
 21137                           
 21138                           ; BSR set to: 1
 21139                           ;motor.c: 167: {;motor.c: 169: return;
 21140  013DA0  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21141  013DA2  0D07               	mullw	7
 21142  013DA4  0E01               	movlw	1
 21143  013DA6  26F3               	addwf	prodl,f,c
 21144  013DA8  0E00               	movlw	0
 21145  013DAA  22F4               	addwfc	prodh,f,c
 21146  013DAC  0E00               	movlw	low _motor_command_cue
 21147  013DAE  24F3               	addwf	prodl,w,c
 21148  013DB0  6ED9               	movwf	fsr2l,c
 21149  013DB2  0E03               	movlw	high _motor_command_cue
 21150  013DB4  20F4               	addwfc	prodh,w,c
 21151  013DB6  6EDA               	movwf	fsr2h,c
 21152  013DB8  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 21153  013DBC  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 21154  013DC0  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 21155  013DC4  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 21156  013DC8  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21157  013DCA  0D07               	mullw	7
 21158  013DCC  0E05               	movlw	5
 21159  013DCE  26F3               	addwf	prodl,f,c
 21160  013DD0  0E00               	movlw	0
 21161  013DD2  22F4               	addwfc	prodh,f,c
 21162  013DD4  0E00               	movlw	low _motor_command_cue
 21163  013DD6  24F3               	addwf	prodl,w,c
 21164  013DD8  6ED9               	movwf	fsr2l,c
 21165  013DDA  0E03               	movlw	high _motor_command_cue
 21166  013DDC  20F4               	addwfc	prodh,w,c
 21167  013DDE  6EDA               	movwf	fsr2h,c
 21168  013DE0  CFDE F093          	movff	postinc2,__motor_run@speed
 21169  013DE4  CFDD F094          	movff	postdec2,__motor_run@speed+1
 21170  013DE8  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21171  013DEA  0D07               	mullw	7
 21172  013DEC  0E00               	movlw	low _motor_command_cue
 21173  013DEE  24F3               	addwf	prodl,w,c
 21174  013DF0  6ED9               	movwf	fsr2l,c
 21175  013DF2  0E03               	movlw	high _motor_command_cue
 21176  013DF4  20F4               	addwfc	prodh,w,c
 21177  013DF6  6EDA               	movwf	fsr2h,c
 21178  013DF8  50DF               	movf	indf2,w,c
 21179  013DFA  ECA3  F062         	call	__motor_run
 21180                           
 21181                           ;motor.c: 180: ++motor_cue_read_index;
 21182  013DFE  0101               	movlb	1	; () banked
 21183  013E00  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 21184                           
 21185                           ; BSR set to: 1
 21186  013E02  0012               	return	
 21187  013E04                     __end_of_motor_process_cue:
 21188                           	opt stack 0
 21189                           tblptru	equ	0xFF8
 21190                           tblptrh	equ	0xFF7
 21191                           tblptrl	equ	0xFF6
 21192                           tablat	equ	0xFF5
 21193                           prodh	equ	0xFF4
 21194                           prodl	equ	0xFF3
 21195                           intcon	equ	0xFF2
 21196                           postinc0	equ	0xFEE
 21197                           wreg	equ	0xFE8
 21198                           indf1	equ	0xFE7
 21199                           postinc1	equ	0xFE6
 21200                           postdec1	equ	0xFE5
 21201                           plusw1	equ	0xFE3
 21202                           fsr1h	equ	0xFE2
 21203                           fsr1l	equ	0xFE1
 21204                           indf2	equ	0xFDF
 21205                           postinc2	equ	0xFDE
 21206                           postdec2	equ	0xFDD
 21207                           plusw2	equ	0xFDB
 21208                           fsr2h	equ	0xFDA
 21209                           fsr2l	equ	0xFD9
 21210                           status	equ	0xFD8
 21211                           
 21212 ;; *************** function _encoder_statemachine *****************
 21213 ;; Defined at:
 21214 ;;		line 210 in file "encoder.c"
 21215 ;; Parameters:    Size  Location     Type
 21216 ;;		None
 21217 ;; Auto vars:     Size  Location     Type
 21218 ;;		None
 21219 ;; Return value:  Size  Location     Type
 21220 ;;                  1    wreg      void 
 21221 ;; Registers used:
 21222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21223 ;; Tracked objects:
 21224 ;;		On entry : 0/0
 21225 ;;		On exit  : 0/0
 21226 ;;		Unchanged: 0/0
 21227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21230 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21231 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21232 ;;Total ram usage:        4 bytes
 21233 ;; Hardware stack levels used:    1
 21234 ;; Hardware stack levels required when called:   16
 21235 ;; This function calls:
 21236 ;;		__divide_jump_size_decrement
 21237 ;;		__divide_jump_size_increment
 21238 ;;		__encoder_next_arc_step_size
 21239 ;;		__encoder_next_divide_step_size
 21240 ;;		__encoder_next_setup_stepsize
 21241 ;;		_motor_arc_move
 21242 ;;		_motor_change_speed
 21243 ;;		_motor_decrease_manual_speed
 21244 ;;		_motor_divide_jump
 21245 ;;		_motor_divide_jump_to_nearest
 21246 ;;		_motor_go_to_steps_position
 21247 ;;		_motor_increase_manual_speed
 21248 ;;		_motor_nonzero_steps_from_degrees
 21249 ;;		_motor_schedule_command
 21250 ;;		_motor_set_zero
 21251 ;;		_motor_stop
 21252 ;; This function is called by:
 21253 ;;		_main
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text90
 21258  00AF94                     __ptext90:
 21259                           	opt stack 0
 21260  00AF94                     _encoder_statemachine:
 21261                           	opt stack 14
 21262                           
 21263                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21264                           
 21265                           ;incstack = 0
 21266  00AF94  0101               	movlb	1	; () banked
 21267  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21268  00AF98  A4D8               	btfss	status,2,c
 21269  00AF9A  EFCF  F05B         	goto	l2671
 21270                           
 21271                           ; BSR set to: 1
 21272  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21273  00AFA0  A4D8               	btfss	status,2,c
 21274  00AFA2  D3FD               	goto	l2671
 21275                           
 21276                           ; BSR set to: 1
 21277  00AFA4  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 21278  00AFA6  A4D8               	btfss	status,2,c
 21279  00AFA8  D3FA               	goto	l2671
 21280                           
 21281                           ; BSR set to: 1
 21282  00AFAA  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 21283  00AFAC  B4D8               	btfsc	status,2,c
 21284  00AFAE  0012               	return	
 21285  00AFB0  D3F6               	goto	l2671
 21286  00AFB2                     
 21287                           ; BSR set to: 1
 21288                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21289                           
 21290                           ; BSR set to: 1
 21291  00AFB2  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21292  00AFB4  B4D8               	btfsc	status,2,c
 21293  00AFB6  D003               	goto	u17190
 21294                           
 21295                           ; BSR set to: 1
 21296  00AFB8  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21297  00AFBA  A4D8               	btfss	status,2,c
 21298  00AFBC  D002               	goto	l2675
 21299  00AFBE                     u17190:
 21300                           
 21301                           ; BSR set to: 1
 21302                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21303                           
 21304                           ; BSR set to: 1
 21305  00AFBE  0E11               	movlw	17
 21306  00AFC0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21307  00AFC2                     l2675:
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21311                           
 21312                           ; BSR set to: 1
 21313  00AFC2  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21314  00AFC6  0100               	movlb	0	; () banked
 21315  00AFC8  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21316  00AFCA  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21317  00AFCC  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21318  00AFCE  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21319  00AFD2  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21320  00AFD4  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21321  00AFD6  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21322  00AFD8  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21323  00AFDA  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21324  00AFDC  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21325  00AFDE  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21326  00AFE0  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21327  00AFE2  D008               	goto	l2678
 21328  00AFE4  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21329  00AFE6  E103               	bnz	u17200
 21330  00AFE8  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21331  00AFEA  A0D8               	btfss	status,0,c
 21332  00AFEC  D003               	goto	l2678
 21333  00AFEE                     u17200:
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21337  00AFEE  0E02               	movlw	2
 21338  00AFF0  0101               	movlb	1	; () banked
 21339  00AFF2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21340  00AFF4                     l2678:
 21341                           
 21342                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21343                           
 21344                           ; BSR set to: 1
 21345  00AFF4  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21346  00AFF8  0100               	movlb	0	; () banked
 21347  00AFFA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21348  00AFFC  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21349  00AFFE  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21350  00B000  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21351  00B004  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21352  00B006  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21353  00B008  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21354  00B00A  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21355  00B00C  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21356  00B00E  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21357  00B010  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21358  00B012  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21359  00B014  D3E9               	goto	l2706
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21363  00B016  0E05               	movlw	5
 21364  00B018  D3B0               	goto	L22
 21365  00B01A                     
 21366                           ; BSR set to: 1
 21367                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21368                           
 21369                           ; BSR set to: 1
 21370  00B01A  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21371  00B01C  B4D8               	btfsc	status,2,c
 21372  00B01E  D003               	goto	u17230
 21373                           
 21374                           ; BSR set to: 1
 21375  00B020  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21376  00B022  A4D8               	btfss	status,2,c
 21377  00B024  D002               	goto	l2682
 21378  00B026                     u17230:
 21379                           
 21380                           ; BSR set to: 1
 21381                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21382                           
 21383                           ; BSR set to: 1
 21384  00B026  0E31               	movlw	49
 21385  00B028  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21386  00B02A                     l2682:
 21387                           
 21388                           ; BSR set to: 1
 21389                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21390                           
 21391                           ; BSR set to: 1
 21392  00B02A  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21393  00B02E  0100               	movlb	0	; () banked
 21394  00B030  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21395  00B032  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21396  00B034  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21397  00B036  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21398  00B03A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21399  00B03C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21400  00B03E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21401  00B040  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21402  00B042  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21403  00B044  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21404  00B046  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21405  00B048  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21406  00B04A  D008               	goto	l2685
 21407  00B04C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21408  00B04E  E103               	bnz	u17240
 21409  00B050  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21410  00B052  A0D8               	btfss	status,0,c
 21411  00B054  D003               	goto	l2685
 21412  00B056                     u17240:
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21416  00B056  0E03               	movlw	3
 21417  00B058  0101               	movlb	1	; () banked
 21418  00B05A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21419  00B05C                     l2685:
 21420                           
 21421                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21422                           
 21423                           ; BSR set to: 1
 21424  00B05C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21425  00B060  0100               	movlb	0	; () banked
 21426  00B062  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21427  00B064  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21428  00B066  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21429  00B068  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21430  00B06C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21431  00B06E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21432  00B070  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21433  00B072  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21434  00B074  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21435  00B076  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21436  00B078  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21437  00B07A  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21438  00B07C  D3B5               	goto	l2706
 21439                           
 21440                           ; BSR set to: 0
 21441                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21442  00B07E  0E01               	movlw	1
 21443  00B080  D37C               	goto	L22
 21444  00B082                     
 21445                           ; BSR set to: 1
 21446                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21447                           
 21448                           ; BSR set to: 1
 21449  00B082  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21450  00B084  B4D8               	btfsc	status,2,c
 21451  00B086  D003               	goto	u17270
 21452                           
 21453                           ; BSR set to: 1
 21454  00B088  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21455  00B08A  A4D8               	btfss	status,2,c
 21456  00B08C  D002               	goto	l2688
 21457  00B08E                     u17270:
 21458                           
 21459                           ; BSR set to: 1
 21460                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21461                           
 21462                           ; BSR set to: 1
 21463  00B08E  0E51               	movlw	81
 21464  00B090  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21465  00B092                     l2688:
 21466                           
 21467                           ; BSR set to: 1
 21468                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21469                           
 21470                           ; BSR set to: 1
 21471  00B092  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21472  00B096  0100               	movlb	0	; () banked
 21473  00B098  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21474  00B09A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21475  00B09C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21476  00B09E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21477  00B0A2  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21478  00B0A4  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21479  00B0A6  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21480  00B0A8  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21481  00B0AA  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21482  00B0AC  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21483  00B0AE  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21484  00B0B0  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21485  00B0B2  D008               	goto	l2691
 21486  00B0B4  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21487  00B0B6  E103               	bnz	u17280
 21488  00B0B8  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21489  00B0BA  A0D8               	btfss	status,0,c
 21490  00B0BC  D003               	goto	l2691
 21491  00B0BE                     u17280:
 21492                           
 21493                           ; BSR set to: 0
 21494                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21495  00B0BE  0E04               	movlw	4
 21496  00B0C0  0101               	movlb	1	; () banked
 21497  00B0C2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21498  00B0C4                     l2691:
 21499                           
 21500                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21501                           
 21502                           ; BSR set to: 1
 21503  00B0C4  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21504  00B0C8  0100               	movlb	0	; () banked
 21505  00B0CA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21506  00B0CC  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21507  00B0CE  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21508  00B0D0  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21509  00B0D4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21510  00B0D6  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21511  00B0D8  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21512  00B0DA  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21513  00B0DC  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21514  00B0DE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21515  00B0E0  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21516  00B0E2  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21517  00B0E4  D381               	goto	l2706
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21521  00B0E6  0E02               	movlw	2
 21522  00B0E8  D348               	goto	L22
 21523  00B0EA                     
 21524                           ; BSR set to: 1
 21525                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21526                           
 21527                           ; BSR set to: 1
 21528  00B0EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21529  00B0EC  B4D8               	btfsc	status,2,c
 21530  00B0EE  D003               	goto	u17310
 21531                           
 21532                           ; BSR set to: 1
 21533  00B0F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21534  00B0F2  A4D8               	btfss	status,2,c
 21535  00B0F4  D002               	goto	l2694
 21536  00B0F6                     u17310:
 21537                           
 21538                           ; BSR set to: 1
 21539                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21540                           
 21541                           ; BSR set to: 1
 21542  00B0F6  0E82               	movlw	130
 21543  00B0F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21544  00B0FA                     l2694:
 21545                           
 21546                           ; BSR set to: 1
 21547                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21548                           
 21549                           ; BSR set to: 1
 21550  00B0FA  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21551  00B0FE  0100               	movlb	0	; () banked
 21552  00B100  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21553  00B102  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21554  00B104  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21555  00B106  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21556  00B10A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21557  00B10C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21558  00B10E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21559  00B110  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21560  00B112  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21561  00B114  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21562  00B116  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21563  00B118  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21564  00B11A  D008               	goto	l2697
 21565  00B11C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21566  00B11E  E103               	bnz	u17320
 21567  00B120  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21568  00B122  A0D8               	btfss	status,0,c
 21569  00B124  D003               	goto	l2697
 21570  00B126                     u17320:
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21574  00B126  0E05               	movlw	5
 21575  00B128  0101               	movlb	1	; () banked
 21576  00B12A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21577  00B12C                     l2697:
 21578                           
 21579                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21580                           
 21581                           ; BSR set to: 1
 21582  00B12C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21583  00B130  0100               	movlb	0	; () banked
 21584  00B132  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21585  00B134  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21586  00B136  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21587  00B138  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21588  00B13C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21589  00B13E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21590  00B140  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21591  00B142  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21592  00B144  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21593  00B146  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21594  00B148  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21595  00B14A  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21596  00B14C  D34D               	goto	l2706
 21597                           
 21598                           ; BSR set to: 0
 21599                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21600  00B14E  0E03               	movlw	3
 21601  00B150  D314               	goto	L22
 21602  00B152                     
 21603                           ; BSR set to: 1
 21604                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21605                           
 21606                           ; BSR set to: 1
 21607  00B152  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21608  00B154  B4D8               	btfsc	status,2,c
 21609  00B156  D003               	goto	u17350
 21610                           
 21611                           ; BSR set to: 1
 21612  00B158  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21613  00B15A  A4D8               	btfss	status,2,c
 21614  00B15C  D002               	goto	l2700
 21615  00B15E                     u17350:
 21616                           
 21617                           ; BSR set to: 1
 21618                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21619                           
 21620                           ; BSR set to: 1
 21621  00B15E  0E71               	movlw	113
 21622  00B160  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21623  00B162                     l2700:
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21627                           
 21628                           ; BSR set to: 1
 21629  00B162  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21630  00B166  0100               	movlb	0	; () banked
 21631  00B168  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21632  00B16A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21633  00B16C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21634  00B16E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21635  00B172  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21636  00B174  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21637  00B176  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21638  00B178  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21639  00B17A  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21640  00B17C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21641  00B17E  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21642  00B180  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21643  00B182  D008               	goto	l2703
 21644  00B184  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21645  00B186  E103               	bnz	u17360
 21646  00B188  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21647  00B18A  A0D8               	btfss	status,0,c
 21648  00B18C  D003               	goto	l2703
 21649  00B18E                     u17360:
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21653  00B18E  0E01               	movlw	1
 21654  00B190  0101               	movlb	1	; () banked
 21655  00B192  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21656  00B194                     l2703:
 21657                           
 21658                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21659                           
 21660                           ; BSR set to: 1
 21661  00B194  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21662  00B198  0100               	movlb	0	; () banked
 21663  00B19A  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21664  00B19C  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21665  00B19E  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21666  00B1A0  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21667  00B1A4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21668  00B1A6  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21669  00B1A8  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21670  00B1AA  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21671  00B1AC  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21672  00B1AE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21673  00B1B0  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21674  00B1B2  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21675  00B1B4  D319               	goto	l2706
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21679  00B1B6  0E04               	movlw	4
 21680  00B1B8  D2E0               	goto	L22
 21681  00B1BA                     
 21682                           ; BSR set to: 1
 21683  00B1BA  0101               	movlb	1	; () banked
 21684  00B1BC  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21685                           
 21686                           ; Switch size 1, requested type "space"
 21687                           ; Number of cases is 6, Range of values is 1 to 240
 21688                           ; switch strategies available:
 21689                           ; Name         Instructions Cycles
 21690                           ; simple_byte           19    10 (average)
 21691                           ;	Chosen strategy is simple_byte
 21692  00B1BE  0A01               	xorlw	1	; case 1
 21693  00B1C0  B4D8               	btfsc	status,2,c
 21694  00B1C2  D6F7               	goto	l2674
 21695  00B1C4  0A03               	xorlw	3	; case 2
 21696  00B1C6  B4D8               	btfsc	status,2,c
 21697  00B1C8  D728               	goto	l2681
 21698  00B1CA  0A01               	xorlw	1	; case 3
 21699  00B1CC  B4D8               	btfsc	status,2,c
 21700  00B1CE  D759               	goto	l2687
 21701  00B1D0  0A07               	xorlw	7	; case 4
 21702  00B1D2  B4D8               	btfsc	status,2,c
 21703  00B1D4  D78A               	goto	l2693
 21704  00B1D6  0A01               	xorlw	1	; case 5
 21705  00B1D8  B4D8               	btfsc	status,2,c
 21706  00B1DA  D7BB               	goto	l2699
 21707  00B1DC  0AF5               	xorlw	245	; case 240
 21708                           
 21709                           ; BSR set to: 1
 21710                           ;encoder.c: 268: break;
 21711  00B1DE  D304               	goto	l2706
 21712  00B1E0                     
 21713                           ; BSR set to: 1
 21714                           ;encoder.c: 274: if(os.button1==1)
 21715                           
 21716                           ; BSR set to: 1
 21717  00B1E0  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21718  00B1E2  A4D8               	btfss	status,2,c
 21719  00B1E4  D00E               	goto	l2710
 21720                           
 21721                           ; BSR set to: 1
 21722                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 21723  00B1E6  0E00               	movlw	0
 21724  00B1E8  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 21725  00B1EA  0E00               	movlw	0
 21726  00B1EC  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 21727  00B1EE  0E00               	movlw	0
 21728  00B1F0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 21729  00B1F2  0E00               	movlw	0
 21730  00B1F4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 21731                           
 21732                           ;encoder.c: 277: os.divide_position = 0;
 21733  00B1F6  0E00               	movlw	0
 21734  00B1F8  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21735  00B1FA  0E00               	movlw	0
 21736  00B1FC  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21737                           
 21738                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21739  00B1FE  0E21               	movlw	33
 21740  00B200  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21741  00B202                     l2710:
 21742                           
 21743                           ; BSR set to: 1
 21744                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 21745                           
 21746                           ; BSR set to: 1
 21747  00B202  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21748  00B204  0A80               	xorlw	128
 21749  00B206  0F7F               	addlw	-129
 21750  00B208  A0D8               	btfss	status,0,c
 21751  00B20A  D002               	goto	l2711
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21755  00B20C  0E12               	movlw	18
 21756  00B20E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21757  00B210                     l2711:
 21758                           
 21759                           ; BSR set to: 1
 21760                           ;encoder.c: 282: if(os.encoder1Count<0)
 21761                           
 21762                           ; BSR set to: 1
 21763  00B210  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21764  00B212  D01B               	goto	l2713
 21765                           
 21766                           ; BSR set to: 1
 21767                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21768  00B214  0E12               	movlw	18
 21769  00B216  D00F               	goto	L10
 21770  00B218                     
 21771                           ; BSR set to: 1
 21772                           ;encoder.c: 286: if(os.button1==1)
 21773                           
 21774                           ; BSR set to: 1
 21775  00B218  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21776  00B21A  A4D8               	btfss	status,2,c
 21777  00B21C  D002               	goto	l2715
 21778                           
 21779                           ; BSR set to: 1
 21780                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21781  00B21E  0E01               	movlw	1
 21782  00B220  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21783  00B222                     l2715:
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;encoder.c: 288: if(os.encoder1Count>0)
 21787                           
 21788                           ; BSR set to: 1
 21789  00B222  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21790  00B224  0A80               	xorlw	128
 21791  00B226  0F7F               	addlw	-129
 21792  00B228  A0D8               	btfss	status,0,c
 21793  00B22A  D002               	goto	l2716
 21794                           
 21795                           ; BSR set to: 1
 21796                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21797  00B22C  0E11               	movlw	17
 21798  00B22E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21799  00B230                     l2716:
 21800                           
 21801                           ; BSR set to: 1
 21802                           ;encoder.c: 290: if(os.encoder1Count<0)
 21803                           
 21804                           ; BSR set to: 1
 21805  00B230  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21806  00B232  D00B               	goto	l2713
 21807                           
 21808                           ; BSR set to: 1
 21809                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21810  00B234  0E11               	movlw	17
 21811  00B236                     L10:
 21812  00B236  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21813                           
 21814                           ; BSR set to: 1
 21815                           ;encoder.c: 293: }
 21816                           
 21817                           ; BSR set to: 1
 21818                           ;encoder.c: 292: break;
 21819  00B238  D008               	goto	l2713
 21820  00B23A                     
 21821                           ; BSR set to: 1
 21822  00B23A  0101               	movlb	1	; () banked
 21823  00B23C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21824                           
 21825                           ; Switch size 1, requested type "space"
 21826                           ; Number of cases is 2, Range of values is 17 to 18
 21827                           ; switch strategies available:
 21828                           ; Name         Instructions Cycles
 21829                           ; simple_byte            7     4 (average)
 21830                           ;	Chosen strategy is simple_byte
 21831  00B23E  0A11               	xorlw	17	; case 17
 21832  00B240  B4D8               	btfsc	status,2,c
 21833  00B242  D7CE               	goto	l2709
 21834  00B244  0A03               	xorlw	3	; case 18
 21835  00B246  B4D8               	btfsc	status,2,c
 21836  00B248  D7E7               	goto	l2714
 21837  00B24A                     l2713:
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;encoder.c: 294: if(os.button2==1)
 21841                           
 21842                           ; BSR set to: 1
 21843  00B24A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21844  00B24C  A4D8               	btfss	status,2,c
 21845  00B24E  D00A               	goto	l2718
 21846                           
 21847                           ; BSR set to: 1
 21848                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21849  00B250  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21850  00B254  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21851  00B258  EC02  F09F         	call	__encoder_next_setup_stepsize	;wreg free
 21852  00B25C  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 21853  00B260  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 21854  00B264                     l2718:
 21855                           
 21856                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 21857  00B264  0101               	movlb	1	; () banked
 21858  00B266  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21859  00B268  0A80               	xorlw	128
 21860  00B26A  0F7F               	addlw	-129
 21861  00B26C  A0D8               	btfss	status,0,c
 21862  00B26E  D019               	goto	l2720
 21863                           
 21864                           ; BSR set to: 1
 21865                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 21866  00B270  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21867  00B272  A4D8               	btfss	status,2,c
 21868  00B274  D016               	goto	l2720
 21869                           
 21870                           ; BSR set to: 1
 21871                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 21872  00B276  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21873  00B27A  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21874  00B27E  ECBF  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21875  00B282  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21876  00B286  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21877  00B28A  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21878  00B28E  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21879  00B292  0E00               	movlw	0
 21880  00B294  0100               	movlb	0	; () banked
 21881  00B296  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21882  00B298  0E00               	movlw	0
 21883  00B29A  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21884  00B29C  0E01               	movlw	1
 21885  00B29E  EC61  F097         	call	_motor_schedule_command
 21886  00B2A2                     l2720:
 21887                           
 21888                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 21889  00B2A2  0101               	movlb	1	; () banked
 21890  00B2A4  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21891  00B2A6  D2A0               	goto	l2706
 21892                           
 21893                           ; BSR set to: 1
 21894                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 21895  00B2A8  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21896  00B2AA  A4D8               	btfss	status,2,c
 21897  00B2AC  D29D               	goto	l2706
 21898                           
 21899                           ; BSR set to: 1
 21900                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 21901  00B2AE  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21902  00B2B2  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21903  00B2B6  ECBF  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21904  00B2BA  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21905  00B2BE  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21906  00B2C2  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21907  00B2C6  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21908  00B2CA  0E00               	movlw	0
 21909  00B2CC  0100               	movlb	0	; () banked
 21910  00B2CE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21911  00B2D0  0E00               	movlw	0
 21912  00B2D2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21913  00B2D4  0EFF               	movlw	255
 21914  00B2D6  EC61  F097         	call	_motor_schedule_command
 21915                           
 21916                           ;encoder.c: 309: };encoder.c: 310: break;
 21917  00B2DA  D286               	goto	l2706
 21918  00B2DC                     
 21919                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 21920  00B2DC  0101               	movlb	1	; () banked
 21921  00B2DE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21922  00B2E0  B4D8               	btfsc	status,2,c
 21923  00B2E2  D003               	goto	u17500
 21924                           
 21925                           ; BSR set to: 1
 21926  00B2E4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21927  00B2E6  A4D8               	btfss	status,2,c
 21928  00B2E8  D003               	goto	l2726
 21929  00B2EA                     u17500:
 21930                           
 21931                           ; BSR set to: 1
 21932                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 21933                           
 21934                           ; BSR set to: 1
 21935  00B2EA  0EFF               	movlw	255
 21936  00B2EC  EC61  F098         	call	_motor_set_zero
 21937  00B2F0                     l2726:
 21938                           
 21939                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 21940  00B2F0  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21941  00B2F4  0100               	movlb	0	; () banked
 21942  00B2F6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21943  00B2F8  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21944  00B2FA  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21945  00B2FC  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21946  00B300  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21947  00B302  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21948  00B304  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21949  00B306  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21950  00B308  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21951  00B30A  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21952  00B30C  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21953  00B30E  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21954  00B310  D008               	goto	l2729
 21955  00B312  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21956  00B314  E103               	bnz	u17510
 21957  00B316  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21958  00B318  A0D8               	btfss	status,0,c
 21959  00B31A  D003               	goto	l2729
 21960  00B31C                     u17510:
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21964  00B31C  0E22               	movlw	34
 21965  00B31E  0101               	movlb	1	; () banked
 21966  00B320  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21967  00B322                     l2729:
 21968                           
 21969                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 21970                           
 21971                           ; BSR set to: 1
 21972  00B322  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21973  00B326  0100               	movlb	0	; () banked
 21974  00B328  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21975  00B32A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21976  00B32C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21977  00B32E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21978  00B332  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21979  00B334  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21980  00B336  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21981  00B338  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21982  00B33A  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21983  00B33C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21984  00B33E  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21985  00B340  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21986  00B342  D252               	goto	l2706
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21990  00B344  0E22               	movlw	34
 21991  00B346  D219               	goto	L22
 21992  00B348                     
 21993                           ; BSR set to: 1
 21994                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 21995                           
 21996                           ; BSR set to: 1
 21997  00B348  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21998  00B34A  B4D8               	btfsc	status,2,c
 21999  00B34C  D003               	goto	u17540
 22000                           
 22001                           ; BSR set to: 1
 22002  00B34E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22003  00B350  A4D8               	btfss	status,2,c
 22004  00B352  D003               	goto	l2733
 22005  00B354                     u17540:
 22006                           
 22007                           ; BSR set to: 1
 22008                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22009                           
 22010                           ; BSR set to: 1
 22011  00B354  0E01               	movlw	1
 22012  00B356  EC61  F098         	call	_motor_set_zero
 22013  00B35A                     l2733:
 22014                           
 22015                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22016  00B35A  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22017  00B35E  0100               	movlb	0	; () banked
 22018  00B360  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22019  00B362  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22020  00B364  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22021  00B366  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22022  00B36A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22023  00B36C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22024  00B36E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22025  00B370  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22026  00B372  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22027  00B374  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22028  00B376  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22029  00B378  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22030  00B37A  D008               	goto	l2736
 22031  00B37C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22032  00B37E  E103               	bnz	u17550
 22033  00B380  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22034  00B382  A0D8               	btfss	status,0,c
 22035  00B384  D003               	goto	l2736
 22036  00B386                     u17550:
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22040  00B386  0E21               	movlw	33
 22041  00B388  0101               	movlb	1	; () banked
 22042  00B38A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22043  00B38C                     l2736:
 22044                           
 22045                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22046                           
 22047                           ; BSR set to: 1
 22048  00B38C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22049  00B390  0100               	movlb	0	; () banked
 22050  00B392  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22051  00B394  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22052  00B396  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22053  00B398  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22054  00B39C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22055  00B39E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22056  00B3A0  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22057  00B3A2  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22058  00B3A4  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22059  00B3A6  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22060  00B3A8  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22061  00B3AA  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22062  00B3AC  D21D               	goto	l2706
 22063                           
 22064                           ; BSR set to: 0
 22065                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22066  00B3AE  0E21               	movlw	33
 22067  00B3B0  D1E4               	goto	L22
 22068  00B3B2                     
 22069                           ; BSR set to: 1
 22070  00B3B2  0101               	movlb	1	; () banked
 22071  00B3B4  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22072                           
 22073                           ; Switch size 1, requested type "space"
 22074                           ; Number of cases is 2, Range of values is 33 to 34
 22075                           ; switch strategies available:
 22076                           ; Name         Instructions Cycles
 22077                           ; simple_byte            7     4 (average)
 22078                           ;	Chosen strategy is simple_byte
 22079  00B3B6  0A21               	xorlw	33	; case 33
 22080  00B3B8  B4D8               	btfsc	status,2,c
 22081  00B3BA  D790               	goto	l2725
 22082  00B3BC  0A03               	xorlw	3	; case 34
 22083  00B3BE  B4D8               	btfsc	status,2,c
 22084  00B3C0  D7C3               	goto	l2732
 22085                           
 22086                           ; BSR set to: 1
 22087                           ;encoder.c: 336: break;
 22088  00B3C2  D212               	goto	l2706
 22089  00B3C4                     
 22090                           ; BSR set to: 1
 22091                           ;encoder.c: 342: if(os.button1==1)
 22092                           
 22093                           ; BSR set to: 1
 22094  00B3C4  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22095  00B3C6  A4D8               	btfss	status,2,c
 22096  00B3C8  D005               	goto	l2741
 22097                           
 22098                           ; BSR set to: 1
 22099                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22100  00B3CA  ECDD  F07D         	call	_motor_divide_jump_to_nearest	;wreg free
 22101                           
 22102                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22103  00B3CE  0E41               	movlw	65
 22104  00B3D0  0101               	movlb	1	; () banked
 22105  00B3D2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22106  00B3D4                     l2741:
 22107                           
 22108                           ; BSR set to: 1
 22109                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22110                           
 22111                           ; BSR set to: 1
 22112  00B3D4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22113  00B3D6  0A80               	xorlw	128
 22114  00B3D8  0F7F               	addlw	-129
 22115  00B3DA  A0D8               	btfss	status,0,c
 22116  00B3DC  D002               	goto	l2742
 22117                           
 22118                           ; BSR set to: 1
 22119                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22120  00B3DE  0E32               	movlw	50
 22121  00B3E0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22122  00B3E2                     l2742:
 22123                           
 22124                           ; BSR set to: 1
 22125                           ;encoder.c: 350: if(os.encoder1Count<0)
 22126                           
 22127                           ; BSR set to: 1
 22128  00B3E2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22129  00B3E4  D01B               	goto	l2744
 22130                           
 22131                           ; BSR set to: 1
 22132                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22133  00B3E6  0E32               	movlw	50
 22134  00B3E8  D00F               	goto	L13
 22135  00B3EA                     
 22136                           ; BSR set to: 1
 22137                           ;encoder.c: 354: if(os.button1==1)
 22138                           
 22139                           ; BSR set to: 1
 22140  00B3EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22141  00B3EC  A4D8               	btfss	status,2,c
 22142  00B3EE  D002               	goto	l2746
 22143                           
 22144                           ; BSR set to: 1
 22145                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22146  00B3F0  0E02               	movlw	2
 22147  00B3F2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22148  00B3F4                     l2746:
 22149                           
 22150                           ; BSR set to: 1
 22151                           ;encoder.c: 356: if(os.encoder1Count>0)
 22152                           
 22153                           ; BSR set to: 1
 22154  00B3F4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22155  00B3F6  0A80               	xorlw	128
 22156  00B3F8  0F7F               	addlw	-129
 22157  00B3FA  A0D8               	btfss	status,0,c
 22158  00B3FC  D002               	goto	l2747
 22159                           
 22160                           ; BSR set to: 1
 22161                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22162  00B3FE  0E31               	movlw	49
 22163  00B400  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22164  00B402                     l2747:
 22165                           
 22166                           ; BSR set to: 1
 22167                           ;encoder.c: 358: if(os.encoder1Count<0)
 22168                           
 22169                           ; BSR set to: 1
 22170  00B402  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22171  00B404  D00B               	goto	l2744
 22172                           
 22173                           ; BSR set to: 1
 22174                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22175  00B406  0E31               	movlw	49
 22176  00B408                     L13:
 22177  00B408  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22178                           
 22179                           ; BSR set to: 1
 22180                           ;encoder.c: 361: }
 22181                           
 22182                           ; BSR set to: 1
 22183                           ;encoder.c: 360: break;
 22184  00B40A  D008               	goto	l2744
 22185  00B40C                     
 22186                           ; BSR set to: 1
 22187  00B40C  0101               	movlb	1	; () banked
 22188  00B40E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22189                           
 22190                           ; Switch size 1, requested type "space"
 22191                           ; Number of cases is 2, Range of values is 49 to 50
 22192                           ; switch strategies available:
 22193                           ; Name         Instructions Cycles
 22194                           ; simple_byte            7     4 (average)
 22195                           ;	Chosen strategy is simple_byte
 22196  00B410  0A31               	xorlw	49	; case 49
 22197  00B412  B4D8               	btfsc	status,2,c
 22198  00B414  D7D7               	goto	l2740
 22199  00B416  0A03               	xorlw	3	; case 50
 22200  00B418  B4D8               	btfsc	status,2,c
 22201  00B41A  D7E7               	goto	l2745
 22202  00B41C                     l2744:
 22203                           
 22204                           ; BSR set to: 1
 22205                           ;encoder.c: 362: if(os.button2==1)
 22206                           
 22207                           ; BSR set to: 1
 22208  00B41C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22209  00B41E  A4D8               	btfss	status,2,c
 22210  00B420  D005               	goto	l2749
 22211                           
 22212                           ; BSR set to: 1
 22213                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22214  00B422  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22215  00B424  EC04  F0AA         	call	__encoder_next_divide_step_size
 22216  00B428  0101               	movlb	1	; () banked
 22217  00B42A  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 22218  00B42C                     l2749:
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22222                           
 22223                           ; BSR set to: 1
 22224  00B42C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22225  00B42E  0A80               	xorlw	128
 22226  00B430  0F7F               	addlw	-129
 22227  00B432  A0D8               	btfss	status,0,c
 22228  00B434  D004               	goto	l2750
 22229                           
 22230                           ; BSR set to: 1
 22231                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22232  00B436  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22233  00B438  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 22234  00B43A  0E00               	movlw	0
 22235  00B43C  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 22236  00B43E                     l2750:
 22237                           
 22238                           ; BSR set to: 1
 22239                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22240  00B43E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22241  00B440  D1D3               	goto	l2706
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22245  00B442  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22246  00B444  0100               	movlb	0	; () banked
 22247  00B446  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22248  00B448  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22249  00B44A  0101               	movlb	1	; () banked
 22250  00B44C  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22251  00B44E  0100               	movlb	0	; () banked
 22252  00B450  5DCD               	subwf	??_encoder_statemachine& (0+255),w,b
 22253  00B452  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22254  00B454  0A80               	xorlw	128
 22255  00B456  6FCF               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22256  00B458  0101               	movlb	1	; () banked
 22257  00B45A  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22258  00B45C  0A80               	xorlw	128
 22259  00B45E  0100               	movlb	0	; () banked
 22260  00B460  59CF               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22261  00B462  B0D8               	btfsc	status,0,c
 22262  00B464  D006               	goto	l2752
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22266  00B466  0101               	movlb	1	; () banked
 22267  00B468  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22268  00B46A  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 22269  00B46C  0E00               	movlw	0
 22270  00B46E  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 22271                           
 22272                           ;encoder.c: 375: }
 22273  00B470  D1BB               	goto	l2706
 22274  00B472                     l2752:
 22275                           
 22276                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22277                           
 22278                           ; BSR set to: 1
 22279  00B472  0E00               	movlw	0
 22280  00B474  0101               	movlb	1	; () banked
 22281  00B476  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 22282  00B478  0E01               	movlw	1
 22283  00B47A  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 22284                           
 22285                           ; BSR set to: 1
 22286                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22287                           
 22288                           ; BSR set to: 1
 22289  00B47C  D1B5               	goto	l2706
 22290  00B47E                     
 22291                           ;encoder.c: 384: if(os.button1==1)
 22292                           
 22293                           ; BSR set to: 1
 22294  00B47E  0101               	movlb	1	; () banked
 22295  00B480  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22296  00B482  A4D8               	btfss	status,2,c
 22297  00B484  D002               	goto	l2755
 22298                           
 22299                           ; BSR set to: 1
 22300                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22301  00B486  0E02               	movlw	2
 22302  00B488  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22303  00B48A                     l2755:
 22304                           
 22305                           ; BSR set to: 1
 22306                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22307                           
 22308                           ; BSR set to: 1
 22309  00B48A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22310  00B48C  B4D8               	btfsc	status,2,c
 22311                           
 22312                           ; BSR set to: 1
 22313                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22314  00B48E  ECB7  F097         	call	_motor_divide_jump	;wreg free
 22315                           
 22316                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22317  00B492  0101               	movlb	1	; () banked
 22318  00B494  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22319  00B496  0A80               	xorlw	128
 22320  00B498  0F7F               	addlw	-129
 22321  00B49A  B0D8               	btfsc	status,0,c
 22322                           
 22323                           ; BSR set to: 1
 22324                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22325  00B49C  EC1D  F0A8         	call	__divide_jump_size_increment	;wreg free
 22326                           
 22327                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22328  00B4A0  0101               	movlb	1	; () banked
 22329  00B4A2  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22330  00B4A4  D1A1               	goto	l2706
 22331                           
 22332                           ; BSR set to: 1
 22333                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22334  00B4A6  ECA9  F09F         	call	__divide_jump_size_decrement	;wreg free
 22335                           
 22336                           ;encoder.c: 399: };encoder.c: 400: break;
 22337  00B4AA  D19E               	goto	l2706
 22338  00B4AC                     
 22339                           ;encoder.c: 406: if(os.button1==1)
 22340  00B4AC  0101               	movlb	1	; () banked
 22341  00B4AE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22342  00B4B0  A4D8               	btfss	status,2,c
 22343  00B4B2  D002               	goto	l2762
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22347  00B4B4  0E62               	movlw	98
 22348  00B4B6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22349  00B4B8                     l2762:
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22353                           
 22354                           ; BSR set to: 1
 22355  00B4B8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22356  00B4BA  0A80               	xorlw	128
 22357  00B4BC  0F7F               	addlw	-129
 22358  00B4BE  A0D8               	btfss	status,0,c
 22359  00B4C0  D002               	goto	l2763
 22360                           
 22361                           ; BSR set to: 1
 22362                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22363  00B4C2  0E52               	movlw	82
 22364  00B4C4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22365  00B4C6                     l2763:
 22366                           
 22367                           ; BSR set to: 1
 22368                           ;encoder.c: 412: if(os.encoder1Count<0)
 22369                           
 22370                           ; BSR set to: 1
 22371  00B4C6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22372  00B4C8  D01B               	goto	l2765
 22373                           
 22374                           ; BSR set to: 1
 22375                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22376  00B4CA  0E52               	movlw	82
 22377  00B4CC  D00F               	goto	L14
 22378  00B4CE                     
 22379                           ; BSR set to: 1
 22380                           ;encoder.c: 416: if(os.button1==1)
 22381                           
 22382                           ; BSR set to: 1
 22383  00B4CE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22384  00B4D0  A4D8               	btfss	status,2,c
 22385  00B4D2  D002               	goto	l2767
 22386                           
 22387                           ; BSR set to: 1
 22388                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22389  00B4D4  0E03               	movlw	3
 22390  00B4D6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22391  00B4D8                     l2767:
 22392                           
 22393                           ; BSR set to: 1
 22394                           ;encoder.c: 418: if(os.encoder1Count>0)
 22395                           
 22396                           ; BSR set to: 1
 22397  00B4D8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22398  00B4DA  0A80               	xorlw	128
 22399  00B4DC  0F7F               	addlw	-129
 22400  00B4DE  A0D8               	btfss	status,0,c
 22401  00B4E0  D002               	goto	l2768
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22405  00B4E2  0E51               	movlw	81
 22406  00B4E4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22407  00B4E6                     l2768:
 22408                           
 22409                           ; BSR set to: 1
 22410                           ;encoder.c: 420: if(os.encoder1Count<0)
 22411                           
 22412                           ; BSR set to: 1
 22413  00B4E6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22414  00B4E8  D00B               	goto	l2765
 22415                           
 22416                           ; BSR set to: 1
 22417                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22418  00B4EA  0E51               	movlw	81
 22419  00B4EC                     L14:
 22420  00B4EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22421                           
 22422                           ; BSR set to: 1
 22423                           ;encoder.c: 423: }
 22424                           
 22425                           ; BSR set to: 1
 22426                           ;encoder.c: 422: break;
 22427  00B4EE  D008               	goto	l2765
 22428  00B4F0                     
 22429                           ; BSR set to: 1
 22430  00B4F0  0101               	movlb	1	; () banked
 22431  00B4F2  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22432                           
 22433                           ; Switch size 1, requested type "space"
 22434                           ; Number of cases is 2, Range of values is 81 to 82
 22435                           ; switch strategies available:
 22436                           ; Name         Instructions Cycles
 22437                           ; simple_byte            7     4 (average)
 22438                           ;	Chosen strategy is simple_byte
 22439  00B4F4  0A51               	xorlw	81	; case 81
 22440  00B4F6  B4D8               	btfsc	status,2,c
 22441  00B4F8  D7D9               	goto	l2761
 22442  00B4FA  0A03               	xorlw	3	; case 82
 22443  00B4FC  B4D8               	btfsc	status,2,c
 22444  00B4FE  D7E7               	goto	l2766
 22445  00B500                     l2765:
 22446                           
 22447                           ; BSR set to: 1
 22448                           ;encoder.c: 424: if(os.button2==1)
 22449                           
 22450                           ; BSR set to: 1
 22451  00B500  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22452  00B502  A4D8               	btfss	status,2,c
 22453  00B504  D00A               	goto	l2770
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22457  00B506  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 22458  00B50A  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22459  00B50E  EC3A  F09F         	call	__encoder_next_arc_step_size	;wreg free
 22460  00B512  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 22461  00B516  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 22462  00B51A                     l2770:
 22463                           
 22464                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22465  00B51A  0101               	movlb	1	; () banked
 22466  00B51C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22467  00B51E  0A80               	xorlw	128
 22468  00B520  0F7F               	addlw	-129
 22469  00B522  A0D8               	btfss	status,0,c
 22470  00B524  D01C               	goto	l2772
 22471                           
 22472                           ; BSR set to: 1
 22473                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22474  00B526  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22475  00B528  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 22476  00B52A  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22477  00B52C  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 22478  00B52E  0E00               	movlw	0
 22479  00B530  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22480  00B532  0E00               	movlw	0
 22481  00B534  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22482                           
 22483                           ; BSR set to: 1
 22484                           ;encoder.c: 431: if(os.arc_size>100000)
 22485  00B536  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22486  00B538  D012               	goto	l2772
 22487  00B53A  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22488  00B53C  E108               	bnz	u17790
 22489  00B53E  0EA1               	movlw	161
 22490  00B540  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 22491  00B542  0E86               	movlw	134
 22492  00B544  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 22493  00B546  0E01               	movlw	1
 22494  00B548  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22495  00B54A  A0D8               	btfss	status,0,c
 22496  00B54C  D008               	goto	l2772
 22497  00B54E                     u17790:
 22498                           
 22499                           ; BSR set to: 1
 22500                           ;encoder.c: 432: os.arc_size = 100000;
 22501  00B54E  0EA0               	movlw	160
 22502  00B550  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22503  00B552  0E86               	movlw	134
 22504  00B554  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22505  00B556  0E01               	movlw	1
 22506  00B558  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22507  00B55A  0E00               	movlw	0
 22508  00B55C  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22509  00B55E                     l2772:
 22510                           
 22511                           ; BSR set to: 1
 22512                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22513                           
 22514                           ; BSR set to: 1
 22515                           
 22516                           ; BSR set to: 1
 22517  00B55E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22518  00B560  D143               	goto	l2706
 22519                           
 22520                           ; BSR set to: 1
 22521                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22522  00B562  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22523  00B564  0100               	movlb	0	; () banked
 22524  00B566  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22525  00B568  0101               	movlb	1	; () banked
 22526  00B56A  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22527  00B56C  0100               	movlb	0	; () banked
 22528  00B56E  6FCE               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22529  00B570  6BCF               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22530  00B572  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22531  00B574  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22532  00B576  0101               	movlb	1	; () banked
 22533  00B578  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 22534  00B57A  0100               	movlb	0	; () banked
 22535  00B57C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22536  00B57E  0101               	movlb	1	; () banked
 22537  00B580  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 22538  00B582  0100               	movlb	0	; () banked
 22539  00B584  51CF               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22540  00B586  0101               	movlb	1	; () banked
 22541  00B588  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22542  00B58A  0100               	movlb	0	; () banked
 22543  00B58C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22544  00B58E  0101               	movlb	1	; () banked
 22545  00B590  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22546                           
 22547                           ;encoder.c: 437: if(os.arc_size<1)
 22548  00B592  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22549  00B594  D007               	goto	u17810
 22550  00B596  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22551  00B598  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22552  00B59A  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 22553  00B59C  E102               	bnz	u17811
 22554  00B59E  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 22555  00B5A0  B0D8               	btfsc	status,0,c
 22556  00B5A2                     u17811:
 22557  00B5A2  D122               	goto	l2706
 22558  00B5A4                     u17810:
 22559                           
 22560                           ; BSR set to: 1
 22561                           ;encoder.c: 438: os.arc_size = 1;
 22562  00B5A4  0E01               	movlw	1
 22563  00B5A6  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22564  00B5A8  0E00               	movlw	0
 22565  00B5AA  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22566  00B5AC  0E00               	movlw	0
 22567  00B5AE  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22568  00B5B0  0E00               	movlw	0
 22569  00B5B2  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22570                           
 22571                           ; BSR set to: 1
 22572                           ;encoder.c: 439: };encoder.c: 440: break;
 22573                           
 22574                           ; BSR set to: 1
 22575  00B5B4  D119               	goto	l2706
 22576  00B5B6                     
 22577                           ;encoder.c: 443: if(os.encoder1Count>0)
 22578                           
 22579                           ; BSR set to: 1
 22580  00B5B6  0101               	movlb	1	; () banked
 22581  00B5B8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22582  00B5BA  0A80               	xorlw	128
 22583  00B5BC  0F7F               	addlw	-129
 22584  00B5BE  A0D8               	btfss	status,0,c
 22585  00B5C0  D011               	goto	l2778
 22586                           
 22587                           ; BSR set to: 1
 22588                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22589  00B5C2  51B0               	movf	(_config+15)& (0+255),w,b
 22590  00B5C4  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 22591  00B5C6  51B1               	movf	(_config+16)& (0+255),w,b
 22592  00B5C8  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 22593  00B5CA  B0D8               	btfsc	status,0,c
 22594  00B5CC  D002               	goto	l2777
 22595                           
 22596                           ; BSR set to: 1
 22597                           ;encoder.c: 446: ++os.arc_speed;
 22598  00B5CE  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 22599  00B5D0  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 22600  00B5D2                     l2777:
 22601                           
 22602                           ; BSR set to: 1
 22603                           ;encoder.c: 447: if(os.busy)
 22604                           
 22605                           ; BSR set to: 1
 22606  00B5D2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22607  00B5D4  B4D8               	btfsc	status,2,c
 22608  00B5D6  D006               	goto	l2778
 22609                           
 22610                           ; BSR set to: 1
 22611                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22612  00B5D8  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22613  00B5DC  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22614  00B5E0  ECA0  F0AC         	call	_motor_change_speed	;wreg free
 22615  00B5E4                     l2778:
 22616                           
 22617                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22618  00B5E4  0101               	movlb	1	; () banked
 22619  00B5E6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22620  00B5E8  D046               	goto	l2782
 22621                           
 22622                           ; BSR set to: 1
 22623                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22624  00B5EA  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 22625  00B5EC  5DAA               	subwf	(_config+9)& (0+255),w,b
 22626  00B5EE  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 22627  00B5F0  59AB               	subwfb	(_config+10)& (0+255),w,b
 22628  00B5F2  B0D8               	btfsc	status,0,c
 22629  00B5F4  D003               	goto	l2780
 22630                           
 22631                           ; BSR set to: 1
 22632                           ;encoder.c: 453: --os.arc_speed;
 22633  00B5F6  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 22634  00B5F8  A0D8               	btfss	status,0,c
 22635  00B5FA  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 22636  00B5FC                     l2780:
 22637                           
 22638                           ; BSR set to: 1
 22639                           ;encoder.c: 454: if(os.busy)
 22640                           
 22641                           ; BSR set to: 1
 22642  00B5FC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22643  00B5FE  B4D8               	btfsc	status,2,c
 22644  00B600  D03A               	goto	l2782
 22645                           
 22646                           ; BSR set to: 1
 22647                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22648  00B602  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22649  00B606  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22650  00B60A  ECA0  F0AC         	call	_motor_change_speed	;wreg free
 22651                           
 22652                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22653  00B60E  D033               	goto	l2782
 22654  00B610                     
 22655                           ;encoder.c: 460: if(os.button2==1)
 22656  00B610  0101               	movlb	1	; () banked
 22657  00B612  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22658  00B614  A4D8               	btfss	status,2,c
 22659  00B616  D006               	goto	l2784
 22660                           
 22661                           ; BSR set to: 1
 22662                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22663  00B618  0EFF               	movlw	255
 22664  00B61A  ECE4  F08B         	call	_motor_arc_move
 22665                           
 22666                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22667  00B61E  0E62               	movlw	98
 22668  00B620  0101               	movlb	1	; () banked
 22669  00B622  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22670  00B624                     l2784:
 22671                           
 22672                           ; BSR set to: 1
 22673                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22674                           
 22675                           ; BSR set to: 1
 22676  00B624  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22677  00B626  0A80               	xorlw	128
 22678  00B628  0F7F               	addlw	-129
 22679  00B62A  A0D8               	btfss	status,0,c
 22680  00B62C  D0DD               	goto	l2706
 22681                           
 22682                           ; BSR set to: 1
 22683                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22684  00B62E  0E62               	movlw	98
 22685  00B630  D0A5               	goto	L21
 22686  00B632                     
 22687                           ; BSR set to: 1
 22688                           ;encoder.c: 469: if(os.button2==1)
 22689                           
 22690                           ; BSR set to: 1
 22691  00B632  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22692  00B634  A4D8               	btfss	status,2,c
 22693  00B636  D007               	goto	l2788
 22694                           
 22695                           ; BSR set to: 1
 22696                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 22697  00B638  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22698  00B63A  A4D8               	btfss	status,2,c
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;encoder.c: 472: motor_stop();
 22702  00B63C  EC52  F0A7         	call	_motor_stop	;wreg free
 22703                           
 22704                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22705  00B640  0E03               	movlw	3
 22706  00B642  0101               	movlb	1	; () banked
 22707  00B644  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22708  00B646                     l2788:
 22709                           
 22710                           ; BSR set to: 1
 22711                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 22712                           
 22713                           ; BSR set to: 1
 22714  00B646  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22715  00B648  0A80               	xorlw	128
 22716  00B64A  0F7F               	addlw	-129
 22717  00B64C  A0D8               	btfss	status,0,c
 22718  00B64E  D002               	goto	l2790
 22719                           
 22720                           ; BSR set to: 1
 22721                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 22722  00B650  0E63               	movlw	99
 22723  00B652  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22724  00B654                     l2790:
 22725                           
 22726                           ; BSR set to: 1
 22727                           ;encoder.c: 477: if(os.encoder2Count<0)
 22728                           
 22729                           ; BSR set to: 1
 22730  00B654  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22731  00B656  D0C8               	goto	l2706
 22732                           
 22733                           ; BSR set to: 1
 22734                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 22735  00B658  0E61               	movlw	97
 22736  00B65A  D090               	goto	L21
 22737  00B65C                     
 22738                           ; BSR set to: 1
 22739                           ;encoder.c: 481: if(os.button2==1)
 22740                           
 22741                           ; BSR set to: 1
 22742  00B65C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22743  00B65E  A4D8               	btfss	status,2,c
 22744  00B660  D006               	goto	l2793
 22745                           
 22746                           ; BSR set to: 1
 22747                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 22748  00B662  0E01               	movlw	1
 22749  00B664  ECE4  F08B         	call	_motor_arc_move
 22750                           
 22751                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22752  00B668  0E62               	movlw	98
 22753  00B66A  0101               	movlb	1	; () banked
 22754  00B66C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22755  00B66E                     l2793:
 22756                           
 22757                           ; BSR set to: 1
 22758                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 22759                           
 22760                           ; BSR set to: 1
 22761  00B66E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22762  00B670  D0BB               	goto	l2706
 22763                           
 22764                           ; BSR set to: 1
 22765                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22766  00B672  0E62               	movlw	98
 22767  00B674  D083               	goto	L21
 22768  00B676                     l2782:
 22769                           
 22770                           ; BSR set to: 1
 22771  00B676  0101               	movlb	1	; () banked
 22772  00B678  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22773                           
 22774                           ; Switch size 1, requested type "space"
 22775                           ; Number of cases is 3, Range of values is 97 to 99
 22776                           ; switch strategies available:
 22777                           ; Name         Instructions Cycles
 22778                           ; simple_byte           10     6 (average)
 22779                           ;	Chosen strategy is simple_byte
 22780  00B67A  0A61               	xorlw	97	; case 97
 22781  00B67C  B4D8               	btfsc	status,2,c
 22782  00B67E  D7C8               	goto	l2783
 22783  00B680  0A03               	xorlw	3	; case 98
 22784  00B682  B4D8               	btfsc	status,2,c
 22785  00B684  D7D6               	goto	l2787
 22786  00B686  0A01               	xorlw	1	; case 99
 22787  00B688  B4D8               	btfsc	status,2,c
 22788  00B68A  D7E8               	goto	l2792
 22789                           
 22790                           ; BSR set to: 1
 22791                           ;encoder.c: 490: break;
 22792  00B68C  D0AD               	goto	l2706
 22793  00B68E                     
 22794                           ;encoder.c: 493: if(os.button2==1)
 22795                           
 22796                           ; BSR set to: 1
 22797  00B68E  0101               	movlb	1	; () banked
 22798  00B690  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22799  00B692  A4D8               	btfss	status,2,c
 22800  00B694  D012               	goto	l2796
 22801                           
 22802                           ; BSR set to: 1
 22803                           ;encoder.c: 494: {;encoder.c: 496: motor_go_to_steps_position(0);
 22804  00B696  0E00               	movlw	0
 22805  00B698  0100               	movlb	0	; () banked
 22806  00B69A  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 22807  00B69C  0E00               	movlw	0
 22808  00B69E  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 22809  00B6A0  0E00               	movlw	0
 22810  00B6A2  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 22811  00B6A4  0E00               	movlw	0
 22812  00B6A6  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 22813  00B6A8  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 22814                           
 22815                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22816  00B6AC  0E05               	movlw	5
 22817  00B6AE  0101               	movlb	1	; () banked
 22818  00B6B0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22819                           
 22820                           ; BSR set to: 1
 22821                           ;encoder.c: 499: os.divide_position = 0;
 22822  00B6B2  0E00               	movlw	0
 22823  00B6B4  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 22824  00B6B6  0E00               	movlw	0
 22825  00B6B8  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 22826  00B6BA                     l2796:
 22827                           
 22828                           ; BSR set to: 1
 22829                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 22830                           
 22831                           ; BSR set to: 1
 22832  00B6BA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22833  00B6BC  A4D8               	btfss	status,2,c
 22834  00B6BE  D094               	goto	l2706
 22835                           
 22836                           ; BSR set to: 1
 22837                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22838  00B6C0  0E05               	movlw	5
 22839  00B6C2  D05C               	goto	L21
 22840  00B6C4                     
 22841                           ;encoder.c: 508: if(os.encoder1Count>0)
 22842                           
 22843                           ; BSR set to: 1
 22844  00B6C4  0101               	movlb	1	; () banked
 22845  00B6C6  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22846  00B6C8  0A80               	xorlw	128
 22847  00B6CA  0F7F               	addlw	-129
 22848  00B6CC  B0D8               	btfsc	status,0,c
 22849                           
 22850                           ; BSR set to: 1
 22851                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 22852  00B6CE  ECFF  F0AB         	call	_motor_increase_manual_speed	;wreg free
 22853                           
 22854                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 22855  00B6D2  0101               	movlb	1	; () banked
 22856  00B6D4  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22857  00B6D6  D054               	goto	l2801
 22858                           
 22859                           ; BSR set to: 1
 22860                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 22861  00B6D8  EC96  F0AB         	call	_motor_decrease_manual_speed	;wreg free
 22862                           
 22863                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 22864  00B6DC  D051               	goto	l2801
 22865  00B6DE                     
 22866                           ;encoder.c: 519: if(os.button2==1)
 22867  00B6DE  0101               	movlb	1	; () banked
 22868  00B6E0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22869  00B6E2  A4D8               	btfss	status,2,c
 22870  00B6E4  D013               	goto	l2803
 22871                           
 22872                           ; BSR set to: 1
 22873                           ;encoder.c: 520: {;encoder.c: 521: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 22874  00B6E6  0E00               	movlw	0
 22875  00B6E8  0100               	movlb	0	; () banked
 22876  00B6EA  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22877  00B6EC  0E00               	movlw	0
 22878  00B6EE  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22879  00B6F0  0E00               	movlw	0
 22880  00B6F2  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22881  00B6F4  0E00               	movlw	0
 22882  00B6F6  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22883  00B6F8  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 22884  00B6FC  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22885  00B700  0EFF               	movlw	255
 22886  00B702  EC61  F097         	call	_motor_schedule_command
 22887                           
 22888                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22889  00B706  0E84               	movlw	132
 22890  00B708  0101               	movlb	1	; () banked
 22891  00B70A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22892  00B70C                     l2803:
 22893                           
 22894                           ; BSR set to: 1
 22895                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 22896                           
 22897                           ; BSR set to: 1
 22898  00B70C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22899  00B70E  0A80               	xorlw	128
 22900  00B710  0F7F               	addlw	-129
 22901  00B712  A0D8               	btfss	status,0,c
 22902  00B714  D069               	goto	l2706
 22903                           
 22904                           ; BSR set to: 1
 22905                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22906  00B716  0E82               	movlw	130
 22907  00B718  D031               	goto	L21
 22908  00B71A                     
 22909                           ; BSR set to: 1
 22910                           ;encoder.c: 528: if(os.button2==1)
 22911                           
 22912                           ; BSR set to: 1
 22913  00B71A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22914  00B71C  A4D8               	btfss	status,2,c
 22915  00B71E  D002               	goto	l2807
 22916                           
 22917                           ; BSR set to: 1
 22918                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22919  00B720  0E04               	movlw	4
 22920  00B722  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22921  00B724                     l2807:
 22922                           
 22923                           ; BSR set to: 1
 22924                           ;encoder.c: 530: if(os.encoder2Count>0)
 22925                           
 22926                           ; BSR set to: 1
 22927  00B724  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22928  00B726  0A80               	xorlw	128
 22929  00B728  0F7F               	addlw	-129
 22930  00B72A  A0D8               	btfss	status,0,c
 22931  00B72C  D002               	goto	l2808
 22932                           
 22933                           ; BSR set to: 1
 22934                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22935  00B72E  0E83               	movlw	131
 22936  00B730  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22937  00B732                     l2808:
 22938                           
 22939                           ; BSR set to: 1
 22940                           ;encoder.c: 532: if(os.encoder2Count<0)
 22941                           
 22942                           ; BSR set to: 1
 22943  00B732  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22944  00B734  D059               	goto	l2706
 22945                           
 22946                           ; BSR set to: 1
 22947                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 22948  00B736  0E81               	movlw	129
 22949  00B738  D021               	goto	L21
 22950  00B73A                     
 22951                           ; BSR set to: 1
 22952                           ;encoder.c: 536: if(os.button2==1)
 22953                           
 22954                           ; BSR set to: 1
 22955  00B73A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22956  00B73C  A4D8               	btfss	status,2,c
 22957  00B73E  D012               	goto	l2811
 22958                           
 22959                           ; BSR set to: 1
 22960                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22961  00B740  0E84               	movlw	132
 22962  00B742  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22963                           
 22964                           ; BSR set to: 1
 22965                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 22966  00B744  0E00               	movlw	0
 22967  00B746  0100               	movlb	0	; () banked
 22968  00B748  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22969  00B74A  0E00               	movlw	0
 22970  00B74C  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22971  00B74E  0E00               	movlw	0
 22972  00B750  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22973  00B752  0E00               	movlw	0
 22974  00B754  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22975  00B756  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 22976  00B75A  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22977  00B75E  0E01               	movlw	1
 22978  00B760  EC61  F097         	call	_motor_schedule_command
 22979  00B764                     l2811:
 22980                           
 22981                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 22982  00B764  0101               	movlb	1	; () banked
 22983  00B766  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22984  00B768  D03F               	goto	l2706
 22985                           
 22986                           ; BSR set to: 1
 22987                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22988  00B76A  0E82               	movlw	130
 22989  00B76C  D007               	goto	L21
 22990  00B76E                     
 22991                           ; BSR set to: 1
 22992                           ;encoder.c: 545: if(os.button2==1)
 22993                           
 22994                           ; BSR set to: 1
 22995  00B76E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22996  00B770  A4D8               	btfss	status,2,c
 22997  00B772  D03A               	goto	l2706
 22998                           
 22999                           ; BSR set to: 1
 23000                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23001  00B774  EC52  F0A7         	call	_motor_stop	;wreg free
 23002                           
 23003                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23004  00B778  0E82               	movlw	130
 23005  00B77A                     L22:
 23006  00B77A  0101               	movlb	1	; () banked
 23007  00B77C                     L21:
 23008  00B77C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23009                           
 23010                           ; BSR set to: 1
 23011                           ;encoder.c: 551: }
 23012                           
 23013                           ; BSR set to: 1
 23014                           ;encoder.c: 549: };encoder.c: 550: break;
 23015  00B77E  D034               	goto	l2706
 23016  00B780                     l2801:
 23017                           
 23018                           ; BSR set to: 1
 23019  00B780  0101               	movlb	1	; () banked
 23020  00B782  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23021                           
 23022                           ; Switch size 1, requested type "space"
 23023                           ; Number of cases is 4, Range of values is 129 to 132
 23024                           ; switch strategies available:
 23025                           ; Name         Instructions Cycles
 23026                           ; simple_byte           13     7 (average)
 23027                           ;	Chosen strategy is simple_byte
 23028  00B784  0A81               	xorlw	129	; case 129
 23029  00B786  B4D8               	btfsc	status,2,c
 23030  00B788  D7AA               	goto	l2802
 23031  00B78A  0A03               	xorlw	3	; case 130
 23032  00B78C  B4D8               	btfsc	status,2,c
 23033  00B78E  D7C5               	goto	l2806
 23034  00B790  0A01               	xorlw	1	; case 131
 23035  00B792  B4D8               	btfsc	status,2,c
 23036  00B794  D7D2               	goto	l2810
 23037  00B796  0A07               	xorlw	7	; case 132
 23038  00B798  B4D8               	btfsc	status,2,c
 23039  00B79A  D7E9               	goto	l2813
 23040                           
 23041                           ; BSR set to: 1
 23042                           ;encoder.c: 553: }
 23043                           
 23044                           ; BSR set to: 1
 23045                           ;encoder.c: 552: break;
 23046  00B79C  D025               	goto	l2706
 23047  00B79E                     l2671:
 23048                           
 23049                           ; BSR set to: 1
 23050                           
 23051                           ; BSR set to: 1
 23052  00B79E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23053  00B7A0  0BF0               	andlw	240
 23054  00B7A2  0100               	movlb	0	; () banked
 23055  00B7A4  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 23056  00B7A6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23057                           
 23058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23059                           ; Switch size 1, requested type "space"
 23060                           ; Number of cases is 1, Range of values is 0 to 0
 23061                           ; switch strategies available:
 23062                           ; Name         Instructions Cycles
 23063                           ; simple_byte            4     3 (average)
 23064                           ;	Chosen strategy is simple_byte
 23065  00B7A8  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23066  00B7AA  0A00               	xorlw	0	; case 0
 23067  00B7AC  A4D8               	btfss	status,2,c
 23068  00B7AE  D01C               	goto	l2706
 23069                           
 23070                           ; BSR set to: 0
 23071                           ; Switch size 1, requested type "space"
 23072                           ; Number of cases is 9, Range of values is 0 to 128
 23073                           ; switch strategies available:
 23074                           ; Name         Instructions Cycles
 23075                           ; simple_byte           28    15 (average)
 23076                           ;	Chosen strategy is simple_byte
 23077  00B7B0  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 23078  00B7B2  0A00               	xorlw	0	; case 0
 23079  00B7B4  B4D8               	btfsc	status,2,c
 23080  00B7B6  D501               	goto	l2673
 23081  00B7B8  0A10               	xorlw	16	; case 16
 23082  00B7BA  B4D8               	btfsc	status,2,c
 23083  00B7BC  D53E               	goto	l2708
 23084  00B7BE  0A30               	xorlw	48	; case 32
 23085  00B7C0  B4D8               	btfsc	status,2,c
 23086  00B7C2  D5F7               	goto	l2724
 23087  00B7C4  0A10               	xorlw	16	; case 48
 23088  00B7C6  B4D8               	btfsc	status,2,c
 23089  00B7C8  D621               	goto	l2739
 23090  00B7CA  0A70               	xorlw	112	; case 64
 23091  00B7CC  B4D8               	btfsc	status,2,c
 23092  00B7CE  D657               	goto	l2754
 23093  00B7D0  0A10               	xorlw	16	; case 80
 23094  00B7D2  B4D8               	btfsc	status,2,c
 23095  00B7D4  D68D               	goto	l2760
 23096  00B7D6  0A30               	xorlw	48	; case 96
 23097  00B7D8  B4D8               	btfsc	status,2,c
 23098  00B7DA  D6ED               	goto	l2775
 23099  00B7DC  0A10               	xorlw	16	; case 112
 23100  00B7DE  B4D8               	btfsc	status,2,c
 23101  00B7E0  D756               	goto	l2795
 23102  00B7E2  0AF0               	xorlw	240	; case 128
 23103  00B7E4  B4D8               	btfsc	status,2,c
 23104  00B7E6  D76E               	goto	l2798
 23105  00B7E8                     l2706:
 23106                           
 23107                           ;encoder.c: 556: os.encoder1Count = 0;
 23108                           
 23109                           ; BSR set to: 0
 23110  00B7E8  0E00               	movlw	0
 23111  00B7EA  0101               	movlb	1	; () banked
 23112  00B7EC  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 23113                           
 23114                           ;encoder.c: 557: os.encoder2Count = 0;
 23115  00B7EE  0E00               	movlw	0
 23116  00B7F0  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 23117                           
 23118                           ;encoder.c: 558: os.button1 = 0;
 23119  00B7F2  0E00               	movlw	0
 23120  00B7F4  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 23121                           
 23122                           ;encoder.c: 559: os.button2 = 0;
 23123  00B7F6  0E00               	movlw	0
 23124  00B7F8  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 23125                           
 23126                           ; BSR set to: 1
 23127  00B7FA  0012               	return		;funcret
 23128  00B7FC                     __end_of_encoder_statemachine:
 23129                           	opt stack 0
 23130                           tblptru	equ	0xFF8
 23131                           tblptrh	equ	0xFF7
 23132                           tblptrl	equ	0xFF6
 23133                           tablat	equ	0xFF5
 23134                           prodh	equ	0xFF4
 23135                           prodl	equ	0xFF3
 23136                           intcon	equ	0xFF2
 23137                           postinc0	equ	0xFEE
 23138                           wreg	equ	0xFE8
 23139                           indf1	equ	0xFE7
 23140                           postinc1	equ	0xFE6
 23141                           postdec1	equ	0xFE5
 23142                           plusw1	equ	0xFE3
 23143                           fsr1h	equ	0xFE2
 23144                           fsr1l	equ	0xFE1
 23145                           indf2	equ	0xFDF
 23146                           postinc2	equ	0xFDE
 23147                           postdec2	equ	0xFDD
 23148                           plusw2	equ	0xFDB
 23149                           fsr2h	equ	0xFDA
 23150                           fsr2l	equ	0xFD9
 23151                           status	equ	0xFD8
 23152                           
 23153 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 23154 ;; Defined at:
 23155 ;;		line 50 in file "motor.c"
 23156 ;; Parameters:    Size  Location     Type
 23157 ;;  degrees         2   47[BANK0 ] unsigned int 
 23158 ;; Auto vars:     Size  Location     Type
 23159 ;;  steps           4   51[BANK0 ] unsigned long 
 23160 ;; Return value:  Size  Location     Type
 23161 ;;                  4   47[BANK0 ] unsigned long 
 23162 ;; Registers used:
 23163 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23164 ;; Tracked objects:
 23165 ;;		On entry : 0/0
 23166 ;;		On exit  : 0/0
 23167 ;;		Unchanged: 0/0
 23168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23170 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23172 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23173 ;;Total ram usage:        8 bytes
 23174 ;; Hardware stack levels used:    1
 23175 ;; Hardware stack levels required when called:   12
 23176 ;; This function calls:
 23177 ;;		_motor_steps_from_degrees
 23178 ;; This function is called by:
 23179 ;;		_encoder_statemachine
 23180 ;; This function uses a non-reentrant model
 23181 ;;
 23182                           
 23183                           	psect	text91
 23184  014D7E                     __ptext91:
 23185                           	opt stack 0
 23186  014D7E                     _motor_nonzero_steps_from_degrees:
 23187                           	opt stack 17
 23188                           
 23189                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 23190                           
 23191                           ; BSR set to: 1
 23192                           ;incstack = 0
 23193  014D7E  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 23194  014D82  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 23195  014D86  ECA1  F08E         	call	_motor_steps_from_degrees	;wreg free
 23196  014D8A  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 23197  014D8E  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 23198  014D92  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 23199  014D96  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 23200                           
 23201                           ;motor.c: 54: if(steps==0)
 23202  014D9A  0100               	movlb	0	; () banked
 23203  014D9C  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 23204  014D9E  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 23205  014DA0  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 23206  014DA2  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 23207  014DA4  A4D8               	btfss	status,2,c
 23208  014DA6  D008               	goto	l2407
 23209                           
 23210                           ; BSR set to: 0
 23211                           ;motor.c: 55: steps = 1;
 23212  014DA8  0E01               	movlw	1
 23213  014DAA  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 23214  014DAC  0E00               	movlw	0
 23215  014DAE  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 23216  014DB0  0E00               	movlw	0
 23217  014DB2  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 23218  014DB4  0E00               	movlw	0
 23219  014DB6  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 23220  014DB8                     l2407:
 23221                           
 23222                           ; BSR set to: 0
 23223                           ;motor.c: 56: return steps;
 23224                           
 23225                           ; BSR set to: 0
 23226  014DB8  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 23227  014DBC  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 23228  014DC0  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 23229  014DC4  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 23230  014DC8  0012               	return	
 23231  014DCA                     __end_of_motor_nonzero_steps_from_degrees:
 23232                           	opt stack 0
 23233                           tblptru	equ	0xFF8
 23234                           tblptrh	equ	0xFF7
 23235                           tblptrl	equ	0xFF6
 23236                           tablat	equ	0xFF5
 23237                           prodh	equ	0xFF4
 23238                           prodl	equ	0xFF3
 23239                           intcon	equ	0xFF2
 23240                           postinc0	equ	0xFEE
 23241                           wreg	equ	0xFE8
 23242                           indf1	equ	0xFE7
 23243                           postinc1	equ	0xFE6
 23244                           postdec1	equ	0xFE5
 23245                           plusw1	equ	0xFE3
 23246                           fsr1h	equ	0xFE2
 23247                           fsr1l	equ	0xFE1
 23248                           indf2	equ	0xFDF
 23249                           postinc2	equ	0xFDE
 23250                           postdec2	equ	0xFDD
 23251                           plusw2	equ	0xFDB
 23252                           fsr2h	equ	0xFDA
 23253                           fsr2l	equ	0xFD9
 23254                           status	equ	0xFD8
 23255                           
 23256 ;; *************** function _motor_increase_manual_speed *****************
 23257 ;; Defined at:
 23258 ;;		line 533 in file "motor.c"
 23259 ;; Parameters:    Size  Location     Type
 23260 ;;		None
 23261 ;; Auto vars:     Size  Location     Type
 23262 ;;		None
 23263 ;; Return value:  Size  Location     Type
 23264 ;;                  1    wreg      void 
 23265 ;; Registers used:
 23266 ;;		wreg, status,2, status,0, cstack
 23267 ;; Tracked objects:
 23268 ;;		On entry : 0/0
 23269 ;;		On exit  : 0/0
 23270 ;;		Unchanged: 0/0
 23271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23276 ;;Total ram usage:        0 bytes
 23277 ;; Hardware stack levels used:    1
 23278 ;; Hardware stack levels required when called:   12
 23279 ;; This function calls:
 23280 ;;		_motor_set_manual_speed
 23281 ;; This function is called by:
 23282 ;;		_encoder_statemachine
 23283 ;; This function uses a non-reentrant model
 23284 ;;
 23285                           
 23286                           	psect	text92
 23287  0157FE                     __ptext92:
 23288                           	opt stack 0
 23289  0157FE                     _motor_increase_manual_speed:
 23290                           	opt stack 17
 23291                           
 23292                           ;motor.c: 536: {;motor.c: 537: motor_set_manual_speed(os.manual_speed+1);
 23293                           
 23294                           ; BSR set to: 0
 23295                           ;incstack = 0
 23296  0157FE  0E01               	movlw	1
 23297  015800  0101               	movlb	1	; () banked
 23298  015802  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23299  015804  0100               	movlb	0	; () banked
 23300  015806  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23301  015808  0E00               	movlw	0
 23302  01580A  0101               	movlb	1	; () banked
 23303  01580C  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23304  01580E  0100               	movlb	0	; () banked
 23305  015810  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23306  015812  EC4A  F0A6         	call	_motor_set_manual_speed	;wreg free
 23307  015816  0012               	return	
 23308  015818                     __end_of_motor_increase_manual_speed:
 23309                           	opt stack 0
 23310                           tblptru	equ	0xFF8
 23311                           tblptrh	equ	0xFF7
 23312                           tblptrl	equ	0xFF6
 23313                           tablat	equ	0xFF5
 23314                           prodh	equ	0xFF4
 23315                           prodl	equ	0xFF3
 23316                           intcon	equ	0xFF2
 23317                           postinc0	equ	0xFEE
 23318                           wreg	equ	0xFE8
 23319                           indf1	equ	0xFE7
 23320                           postinc1	equ	0xFE6
 23321                           postdec1	equ	0xFE5
 23322                           plusw1	equ	0xFE3
 23323                           fsr1h	equ	0xFE2
 23324                           fsr1l	equ	0xFE1
 23325                           indf2	equ	0xFDF
 23326                           postinc2	equ	0xFDE
 23327                           postdec2	equ	0xFDD
 23328                           plusw2	equ	0xFDB
 23329                           fsr2h	equ	0xFDA
 23330                           fsr2l	equ	0xFD9
 23331                           status	equ	0xFD8
 23332                           
 23333 ;; *************** function _motor_divide_jump_to_nearest *****************
 23334 ;; Defined at:
 23335 ;;		line 693 in file "motor.c"
 23336 ;; Parameters:    Size  Location     Type
 23337 ;;		None
 23338 ;; Auto vars:     Size  Location     Type
 23339 ;;  divide_posit    4  105[BANK0 ] float 
 23340 ;;  nearest_posi    4   99[BANK0 ] unsigned long 
 23341 ;;  nearest_divi    2  103[BANK0 ] int 
 23342 ;; Return value:  Size  Location     Type
 23343 ;;                  1    wreg      void 
 23344 ;; Registers used:
 23345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23346 ;; Tracked objects:
 23347 ;;		On entry : 0/0
 23348 ;;		On exit  : 0/0
 23349 ;;		Unchanged: 0/0
 23350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23352 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23354 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23355 ;;Total ram usage:       10 bytes
 23356 ;; Hardware stack levels used:    1
 23357 ;; Hardware stack levels required when called:   15
 23358 ;; This function calls:
 23359 ;;		___fladd
 23360 ;;		___fldiv
 23361 ;;		___flmul
 23362 ;;		___fltol
 23363 ;;		___xxtofl
 23364 ;;		__step_position_from_divide_position
 23365 ;;		_motor_go_to_steps_position
 23366 ;; This function is called by:
 23367 ;;		_encoder_statemachine
 23368 ;; This function uses a non-reentrant model
 23369 ;;
 23370                           
 23371                           	psect	text93
 23372  00FBBA                     __ptext93:
 23373                           	opt stack 0
 23374  00FBBA                     _motor_divide_jump_to_nearest:
 23375                           	opt stack 14
 23376                           
 23377                           ;motor.c: 695: float divide_position_float;;motor.c: 696: int16_t nearest_divide_positio
      +                          n;;motor.c: 697: uint32_t nearest_position_in_steps;;motor.c: 699: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23378                           
 23379                           ;incstack = 0
 23380  00FBBA  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 23381  00FBBE  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 23382  00FBC2  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 23383  00FBC6  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 23384  00FBCA  0E00               	movlw	0
 23385  00FBCC  EC17  F081         	call	___xxtofl
 23386  00FBD0  C060  F0C9         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23387  00FBD4  C061  F0CA         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23388  00FBD8  C062  F0CB         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23389  00FBDC  C063  F0CC         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23390                           
 23391                           ;motor.c: 700: divide_position_float *= (float) os.division;
 23392  00FBE0  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23393  00FBE4  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23394  00FBE8  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23395  00FBEC  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23396  00FBF0  EE21  F084         	lfsr	2,_os+19	;volatile
 23397  00FBF4  CFDE F060          	movff	postinc2,___xxtofl@val
 23398  00FBF8  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23399  00FBFC  0100               	movlb	0	; () banked
 23400  00FBFE  0E00               	movlw	0
 23401  00FC00  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23402  00FC02  0EFF               	movlw	-1
 23403  00FC04  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23404  00FC06  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23405  00FC08  0E01               	movlw	1
 23406  00FC0A  EC17  F081         	call	___xxtofl
 23407  00FC0E  C060  F072         	movff	?___xxtofl,___flmul@a
 23408  00FC12  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23409  00FC16  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23410  00FC1A  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23411  00FC1E  EC1E  F066         	call	___flmul	;wreg free
 23412  00FC22  C06E  F0C9         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23413  00FC26  C06F  F0CA         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23414  00FC2A  C070  F0CB         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23415  00FC2E  C071  F0CC         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23416                           
 23417                           ;motor.c: 701: divide_position_float /= (float) config.full_circle_in_steps;
 23418  00FC32  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23419  00FC36  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23420  00FC3A  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23421  00FC3E  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23422  00FC42  C1A1  F060         	movff	_config,___xxtofl@val
 23423  00FC46  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23424  00FC4A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23425  00FC4E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23426  00FC52  0E00               	movlw	0
 23427  00FC54  EC17  F081         	call	___xxtofl
 23428  00FC58  C060  F072         	movff	?___xxtofl,___fldiv@a
 23429  00FC5C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23430  00FC60  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23431  00FC64  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23432  00FC68  ECD6  F06D         	call	___fldiv	;wreg free
 23433  00FC6C  C06E  F0C9         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23434  00FC70  C06F  F0CA         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23435  00FC74  C070  F0CB         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23436  00FC78  C071  F0CC         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23437                           
 23438                           ;motor.c: 702: divide_position_float += 0.5;
 23439  00FC7C  C0C9  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23440  00FC80  C0CA  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23441  00FC84  C0CB  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23442  00FC88  C0CC  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23443  00FC8C  0E00               	movlw	0
 23444  00FC8E  0100               	movlb	0	; () banked
 23445  00FC90  6F76               	movwf	___fladd@a& (0+255),b
 23446  00FC92  0E00               	movlw	0
 23447  00FC94  6F77               	movwf	(___fladd@a+1)& (0+255),b
 23448  00FC96  0E00               	movlw	0
 23449  00FC98  6F78               	movwf	(___fladd@a+2)& (0+255),b
 23450  00FC9A  0E3F               	movlw	63
 23451  00FC9C  6F79               	movwf	(___fladd@a+3)& (0+255),b
 23452  00FC9E  ECC7  F067         	call	___fladd	;wreg free
 23453  00FCA2  C072  F0C9         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23454  00FCA6  C073  F0CA         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23455  00FCAA  C074  F0CB         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23456  00FCAE  C075  F0CC         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23457                           
 23458                           ;motor.c: 703: nearest_divide_position = (int16_t) divide_position_float;
 23459  00FCB2  C0C9  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23460  00FCB6  C0CA  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23461  00FCBA  C0CB  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23462  00FCBE  C0CC  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23463  00FCC2  EC62  F090         	call	___fltol	;wreg free
 23464  00FCC6  C060  F0C7         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23465  00FCCA  C061  F0C8         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23466                           
 23467                           ;motor.c: 706: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23468  00FCCE  C0C7  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23469  00FCD2  C0C8  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23470  00FCD6  ECD2  F08C         	call	__step_position_from_divide_position	;wreg free
 23471  00FCDA  C087  F0C3         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23472  00FCDE  C088  F0C4         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23473  00FCE2  C089  F0C5         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23474  00FCE6  C08A  F0C6         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23475                           
 23476                           ;motor.c: 709: os.divide_position = nearest_divide_position;
 23477  00FCEA  C0C7  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 23478  00FCEE  C0C8  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 23479                           
 23480                           ;motor.c: 710: motor_go_to_steps_position(nearest_position_in_steps);
 23481  00FCF2  C0C3  F0A7         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 23482  00FCF6  C0C4  F0A8         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 23483  00FCFA  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 23484  00FCFE  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 23485  00FD02  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 23486  00FD06  0012               	return		;funcret
 23487  00FD08                     __end_of_motor_divide_jump_to_nearest:
 23488                           	opt stack 0
 23489                           tblptru	equ	0xFF8
 23490                           tblptrh	equ	0xFF7
 23491                           tblptrl	equ	0xFF6
 23492                           tablat	equ	0xFF5
 23493                           prodh	equ	0xFF4
 23494                           prodl	equ	0xFF3
 23495                           intcon	equ	0xFF2
 23496                           postinc0	equ	0xFEE
 23497                           wreg	equ	0xFE8
 23498                           indf1	equ	0xFE7
 23499                           postinc1	equ	0xFE6
 23500                           postdec1	equ	0xFE5
 23501                           plusw1	equ	0xFE3
 23502                           fsr1h	equ	0xFE2
 23503                           fsr1l	equ	0xFE1
 23504                           indf2	equ	0xFDF
 23505                           postinc2	equ	0xFDE
 23506                           postdec2	equ	0xFDD
 23507                           plusw2	equ	0xFDB
 23508                           fsr2h	equ	0xFDA
 23509                           fsr2l	equ	0xFD9
 23510                           status	equ	0xFD8
 23511                           
 23512 ;; *************** function _motor_divide_jump *****************
 23513 ;; Defined at:
 23514 ;;		line 662 in file "motor.c"
 23515 ;; Parameters:    Size  Location     Type
 23516 ;;		None
 23517 ;; Auto vars:     Size  Location     Type
 23518 ;;  target_posit    4  100[BANK0 ] unsigned long 
 23519 ;;  target_divid    2  104[BANK0 ] int 
 23520 ;; Return value:  Size  Location     Type
 23521 ;;                  1    wreg      void 
 23522 ;; Registers used:
 23523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23524 ;; Tracked objects:
 23525 ;;		On entry : 0/0
 23526 ;;		On exit  : 0/0
 23527 ;;		Unchanged: 0/0
 23528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23530 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23532 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23533 ;;Total ram usage:        7 bytes
 23534 ;; Hardware stack levels used:    1
 23535 ;; Hardware stack levels required when called:   15
 23536 ;; This function calls:
 23537 ;;		__step_position_from_divide_position
 23538 ;;		_motor_go_to_steps_position
 23539 ;; This function is called by:
 23540 ;;		_encoder_statemachine
 23541 ;; This function uses a non-reentrant model
 23542 ;;
 23543                           
 23544                           	psect	text94
 23545  012F6E                     __ptext94:
 23546                           	opt stack 0
 23547  012F6E                     _motor_divide_jump:
 23548                           	opt stack 14
 23549                           
 23550                           ;motor.c: 664: int16_t target_divide_position;;motor.c: 665: uint32_t target_position_in
      +                          _steps;;motor.c: 668: if(os.divide_jump_size>0)
 23551                           
 23552                           ;incstack = 0
 23553  012F6E  0101               	movlb	1	; () banked
 23554  012F70  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 23555  012F72  D023               	goto	l2543
 23556  012F74  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23557  012F76  E103               	bnz	u16590
 23558  012F78  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 23559  012F7A  A0D8               	btfss	status,0,c
 23560  012F7C  D01E               	goto	l2543
 23561  012F7E                     u16590:
 23562                           
 23563                           ; BSR set to: 1
 23564                           ;motor.c: 669: {;motor.c: 670: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 23565  012F7E  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23566  012F80  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23567  012F82  0100               	movlb	0	; () banked
 23568  012F84  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23569  012F86  0101               	movlb	1	; () banked
 23570  012F88  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23571  012F8A  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23572  012F8C  0100               	movlb	0	; () banked
 23573  012F8E  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23574                           
 23575                           ;motor.c: 671: if(target_divide_position>=os.division)
 23576  012F90  0101               	movlb	1	; () banked
 23577  012F92  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23578  012F94  0100               	movlb	0	; () banked
 23579  012F96  5DC8               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 23580  012F98  51C9               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 23581  012F9A  0A80               	xorlw	128
 23582  012F9C  6FC3               	movwf	??_motor_divide_jump& (0+255),b
 23583  012F9E  0101               	movlb	1	; () banked
 23584  012FA0  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23585  012FA2  0A80               	xorlw	128
 23586  012FA4  0100               	movlb	0	; () banked
 23587  012FA6  59C3               	subwfb	??_motor_divide_jump& (0+255),w,b
 23588  012FA8  A0D8               	btfss	status,0,c
 23589  012FAA  D019               	goto	l2546
 23590                           
 23591                           ; BSR set to: 0
 23592                           ;motor.c: 672: {;motor.c: 673: target_divide_position -= os.division;
 23593  012FAC  EE21  F084         	lfsr	2,_os+19	;volatile
 23594  012FB0  50DE               	movf	postinc2,w,c
 23595  012FB2  5FC8               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23596  012FB4  50DD               	movf	postdec2,w,c
 23597  012FB6  5BC9               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;motor.c: 674: };motor.c: 675: }
 23601  012FB8  D012               	goto	l2546
 23602  012FBA                     l2543:
 23603                           
 23604                           ;motor.c: 676: else;motor.c: 677: {;motor.c: 678: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 23605                           
 23606                           ; BSR set to: 0
 23607  012FBA  0101               	movlb	1	; () banked
 23608  012FBC  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23609  012FBE  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23610  012FC0  0100               	movlb	0	; () banked
 23611  012FC2  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23612  012FC4  0101               	movlb	1	; () banked
 23613  012FC6  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23614  012FC8  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23615  012FCA  0100               	movlb	0	; () banked
 23616  012FCC  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23617                           
 23618                           ;motor.c: 679: if(target_divide_position<0)
 23619  012FCE  AFC9               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 23620  012FD0  D006               	goto	l2546
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;motor.c: 680: {;motor.c: 681: target_divide_position += os.division;
 23624  012FD2  EE21  F084         	lfsr	2,_os+19	;volatile
 23625  012FD6  50DE               	movf	postinc2,w,c
 23626  012FD8  27C8               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23627  012FDA  50DD               	movf	postdec2,w,c
 23628  012FDC  23C9               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23629  012FDE                     l2546:
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;motor.c: 682: };motor.c: 683: };motor.c: 686: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 23633                           
 23634                           ; BSR set to: 0
 23635                           
 23636                           ; BSR set to: 0
 23637  012FDE  C0C8  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 23638  012FE2  C0C9  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 23639  012FE6  ECD2  F08C         	call	__step_position_from_divide_position	;wreg free
 23640  012FEA  C087  F0C4         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 23641  012FEE  C088  F0C5         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 23642  012FF2  C089  F0C6         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 23643  012FF6  C08A  F0C7         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 23644                           
 23645                           ;motor.c: 689: os.divide_position = target_divide_position;
 23646  012FFA  C0C8  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 23647  012FFE  C0C9  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 23648                           
 23649                           ;motor.c: 690: motor_go_to_steps_position(target_position_in_steps);
 23650  013002  C0C4  F0A7         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 23651  013006  C0C5  F0A8         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 23652  01300A  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 23653  01300E  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 23654  013012  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 23655  013016  0012               	return		;funcret
 23656  013018                     __end_of_motor_divide_jump:
 23657                           	opt stack 0
 23658                           tblptru	equ	0xFF8
 23659                           tblptrh	equ	0xFF7
 23660                           tblptrl	equ	0xFF6
 23661                           tablat	equ	0xFF5
 23662                           prodh	equ	0xFF4
 23663                           prodl	equ	0xFF3
 23664                           intcon	equ	0xFF2
 23665                           postinc0	equ	0xFEE
 23666                           wreg	equ	0xFE8
 23667                           indf1	equ	0xFE7
 23668                           postinc1	equ	0xFE6
 23669                           postdec1	equ	0xFE5
 23670                           plusw1	equ	0xFE3
 23671                           fsr1h	equ	0xFE2
 23672                           fsr1l	equ	0xFE1
 23673                           indf2	equ	0xFDF
 23674                           postinc2	equ	0xFDE
 23675                           postdec2	equ	0xFDD
 23676                           plusw2	equ	0xFDB
 23677                           fsr2h	equ	0xFDA
 23678                           fsr2l	equ	0xFD9
 23679                           status	equ	0xFD8
 23680                           
 23681 ;; *************** function __step_position_from_divide_position *****************
 23682 ;; Defined at:
 23683 ;;		line 92 in file "motor.c"
 23684 ;; Parameters:    Size  Location     Type
 23685 ;;  divide_posit    2   39[BANK0 ] int 
 23686 ;; Auto vars:     Size  Location     Type
 23687 ;;  target_posit    4   43[BANK0 ] float 
 23688 ;; Return value:  Size  Location     Type
 23689 ;;                  4   39[BANK0 ] unsigned long 
 23690 ;; Registers used:
 23691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23692 ;; Tracked objects:
 23693 ;;		On entry : 0/0
 23694 ;;		On exit  : 0/0
 23695 ;;		Unchanged: 0/0
 23696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23698 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23700 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23701 ;;Total ram usage:        8 bytes
 23702 ;; Hardware stack levels used:    1
 23703 ;; Hardware stack levels required when called:   11
 23704 ;; This function calls:
 23705 ;;		___fldiv
 23706 ;;		___flmul
 23707 ;;		___fltol
 23708 ;;		___xxtofl
 23709 ;; This function is called by:
 23710 ;;		_motor_divide_jump
 23711 ;;		_motor_divide_jump_to_nearest
 23712 ;; This function uses a non-reentrant model
 23713 ;;
 23714                           
 23715                           	psect	text95
 23716  0119A4                     __ptext95:
 23717                           	opt stack 0
 23718  0119A4                     __step_position_from_divide_position:
 23719                           	opt stack 17
 23720                           
 23721                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 23722                           
 23723                           ;incstack = 0
 23724  0119A4  C1A1  F060         	movff	_config,___xxtofl@val
 23725  0119A8  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23726  0119AC  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23727  0119B0  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23728  0119B4  0E00               	movlw	0
 23729  0119B6  EC17  F081         	call	___xxtofl
 23730  0119BA  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 23731  0119BE  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 23732  0119C2  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 23733  0119C6  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 23734                           
 23735                           ;motor.c: 98: target_position *= (float) divide_position;
 23736  0119CA  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 23737  0119CE  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 23738  0119D2  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 23739  0119D6  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 23740  0119DA  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 23741  0119DE  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 23742  0119E2  0100               	movlb	0	; () banked
 23743  0119E4  0E00               	movlw	0
 23744  0119E6  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23745  0119E8  0EFF               	movlw	-1
 23746  0119EA  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23747  0119EC  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23748  0119EE  0E01               	movlw	1
 23749  0119F0  EC17  F081         	call	___xxtofl
 23750  0119F4  C060  F072         	movff	?___xxtofl,___flmul@a
 23751  0119F8  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23752  0119FC  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23753  011A00  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23754  011A04  EC1E  F066         	call	___flmul	;wreg free
 23755  011A08  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 23756  011A0C  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 23757  011A10  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 23758  011A14  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 23759                           
 23760                           ;motor.c: 99: target_position /= (float) os.division;
 23761  011A18  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 23762  011A1C  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 23763  011A20  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 23764  011A24  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 23765  011A28  EE21  F084         	lfsr	2,_os+19	;volatile
 23766  011A2C  CFDE F060          	movff	postinc2,___xxtofl@val
 23767  011A30  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23768  011A34  0100               	movlb	0	; () banked
 23769  011A36  0E00               	movlw	0
 23770  011A38  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23771  011A3A  0EFF               	movlw	-1
 23772  011A3C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23773  011A3E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23774  011A40  0E01               	movlw	1
 23775  011A42  EC17  F081         	call	___xxtofl
 23776  011A46  C060  F072         	movff	?___xxtofl,___fldiv@a
 23777  011A4A  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23778  011A4E  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23779  011A52  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23780  011A56  ECD6  F06D         	call	___fldiv	;wreg free
 23781  011A5A  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 23782  011A5E  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 23783  011A62  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 23784  011A66  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 23785                           
 23786                           ;motor.c: 101: return (uint32_t) target_position;
 23787  011A6A  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 23788  011A6E  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 23789  011A72  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 23790  011A76  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 23791  011A7A  EC62  F090         	call	___fltol	;wreg free
 23792  011A7E  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 23793  011A82  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 23794  011A86  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 23795  011A8A  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 23796  011A8E  0012               	return	
 23797  011A90                     __end_of__step_position_from_divide_position:
 23798                           	opt stack 0
 23799                           tblptru	equ	0xFF8
 23800                           tblptrh	equ	0xFF7
 23801                           tblptrl	equ	0xFF6
 23802                           tablat	equ	0xFF5
 23803                           prodh	equ	0xFF4
 23804                           prodl	equ	0xFF3
 23805                           intcon	equ	0xFF2
 23806                           postinc0	equ	0xFEE
 23807                           wreg	equ	0xFE8
 23808                           indf1	equ	0xFE7
 23809                           postinc1	equ	0xFE6
 23810                           postdec1	equ	0xFE5
 23811                           plusw1	equ	0xFE3
 23812                           fsr1h	equ	0xFE2
 23813                           fsr1l	equ	0xFE1
 23814                           indf2	equ	0xFDF
 23815                           postinc2	equ	0xFDE
 23816                           postdec2	equ	0xFDD
 23817                           plusw2	equ	0xFDB
 23818                           fsr2h	equ	0xFDA
 23819                           fsr2l	equ	0xFD9
 23820                           status	equ	0xFD8
 23821                           
 23822 ;; *************** function _motor_decrease_manual_speed *****************
 23823 ;; Defined at:
 23824 ;;		line 541 in file "motor.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;		None
 23827 ;; Auto vars:     Size  Location     Type
 23828 ;;		None
 23829 ;; Return value:  Size  Location     Type
 23830 ;;                  1    wreg      void 
 23831 ;; Registers used:
 23832 ;;		wreg, status,2, status,0, cstack
 23833 ;; Tracked objects:
 23834 ;;		On entry : 0/0
 23835 ;;		On exit  : 0/0
 23836 ;;		Unchanged: 0/0
 23837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23842 ;;Total ram usage:        0 bytes
 23843 ;; Hardware stack levels used:    1
 23844 ;; Hardware stack levels required when called:   12
 23845 ;; This function calls:
 23846 ;;		_motor_set_manual_speed
 23847 ;; This function is called by:
 23848 ;;		_encoder_statemachine
 23849 ;; This function uses a non-reentrant model
 23850 ;;
 23851                           
 23852                           	psect	text96
 23853  01572C                     __ptext96:
 23854                           	opt stack 0
 23855  01572C                     _motor_decrease_manual_speed:
 23856                           	opt stack 17
 23857                           
 23858                           ;motor.c: 543: if(os.manual_speed>0)
 23859                           
 23860                           ;incstack = 0
 23861  01572C  0101               	movlb	1	; () banked
 23862  01572E  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 23863  015730  1195               	iorwf	(_os+36)& (0+255),w,b	;volatile
 23864  015732  B4D8               	btfsc	status,2,c
 23865  015734  0012               	return	
 23866                           
 23867                           ; BSR set to: 1
 23868                           ;motor.c: 544: {;motor.c: 545: motor_set_manual_speed(os.manual_speed-1);
 23869  015736  0EFF               	movlw	255
 23870  015738  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23871  01573A  0100               	movlb	0	; () banked
 23872  01573C  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23873  01573E  0EFF               	movlw	255
 23874  015740  0101               	movlb	1	; () banked
 23875  015742  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23876  015744  0100               	movlb	0	; () banked
 23877  015746  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23878  015748  EC4A  F0A6         	call	_motor_set_manual_speed	;wreg free
 23879  01574C  0012               	return	
 23880  01574E                     __end_of_motor_decrease_manual_speed:
 23881                           	opt stack 0
 23882                           tblptru	equ	0xFF8
 23883                           tblptrh	equ	0xFF7
 23884                           tblptrl	equ	0xFF6
 23885                           tablat	equ	0xFF5
 23886                           prodh	equ	0xFF4
 23887                           prodl	equ	0xFF3
 23888                           intcon	equ	0xFF2
 23889                           postinc0	equ	0xFEE
 23890                           wreg	equ	0xFE8
 23891                           indf1	equ	0xFE7
 23892                           postinc1	equ	0xFE6
 23893                           postdec1	equ	0xFE5
 23894                           plusw1	equ	0xFE3
 23895                           fsr1h	equ	0xFE2
 23896                           fsr1l	equ	0xFE1
 23897                           indf2	equ	0xFDF
 23898                           postinc2	equ	0xFDE
 23899                           postdec2	equ	0xFDD
 23900                           plusw2	equ	0xFDB
 23901                           fsr2h	equ	0xFDA
 23902                           fsr2l	equ	0xFD9
 23903                           status	equ	0xFD8
 23904                           
 23905 ;; *************** function _motor_arc_move *****************
 23906 ;; Defined at:
 23907 ;;		line 713 in file "motor.c"
 23908 ;; Parameters:    Size  Location     Type
 23909 ;;  direction       1    wreg     enum E6622
 23910 ;; Auto vars:     Size  Location     Type
 23911 ;;  direction       1   75[BANK0 ] enum E6622
 23912 ;;  arc_in_steps    4   76[BANK0 ] float 
 23913 ;; Return value:  Size  Location     Type
 23914 ;;                  1    wreg      void 
 23915 ;; Registers used:
 23916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23917 ;; Tracked objects:
 23918 ;;		On entry : 0/0
 23919 ;;		On exit  : 0/0
 23920 ;;		Unchanged: 0/0
 23921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23923 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23925 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23926 ;;Total ram usage:        9 bytes
 23927 ;; Hardware stack levels used:    1
 23928 ;; Hardware stack levels required when called:   14
 23929 ;; This function calls:
 23930 ;;		___fldiv
 23931 ;;		___flmul
 23932 ;;		___fltol
 23933 ;;		___xxtofl
 23934 ;;		_motor_schedule_command
 23935 ;; This function is called by:
 23936 ;;		_encoder_statemachine
 23937 ;; This function uses a non-reentrant model
 23938 ;;
 23939                           
 23940                           	psect	text97
 23941  0117C8                     __ptext97:
 23942                           	opt stack 0
 23943  0117C8                     _motor_arc_move:
 23944                           	opt stack 15
 23945                           
 23946                           ;incstack = 0
 23947                           ;motor_arc_move@direction stored from wreg
 23948  0117C8  0100               	movlb	0	; () banked
 23949  0117CA  6FAB               	movwf	motor_arc_move@direction& (0+255),b
 23950                           
 23951                           ;motor.c: 715: float arc_in_steps;;motor.c: 717: arc_in_steps = (float) os.arc_size;
 23952  0117CC  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 23953  0117D0  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 23954  0117D4  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 23955  0117D8  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 23956  0117DC  0E01               	movlw	1
 23957  0117DE  EC17  F081         	call	___xxtofl
 23958  0117E2  C060  F0AC         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 23959  0117E6  C061  F0AD         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 23960  0117EA  C062  F0AE         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 23961  0117EE  C063  F0AF         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 23962                           
 23963                           ;motor.c: 718: arc_in_steps *= (float) config.full_circle_in_steps;
 23964  0117F2  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 23965  0117F6  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 23966  0117FA  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 23967  0117FE  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 23968  011802  C1A1  F060         	movff	_config,___xxtofl@val
 23969  011806  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23970  01180A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23971  01180E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23972  011812  0E00               	movlw	0
 23973  011814  EC17  F081         	call	___xxtofl
 23974  011818  C060  F072         	movff	?___xxtofl,___flmul@a
 23975  01181C  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23976  011820  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23977  011824  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23978  011828  EC1E  F066         	call	___flmul	;wreg free
 23979  01182C  C06E  F0AC         	movff	?___flmul,motor_arc_move@arc_in_steps
 23980  011830  C06F  F0AD         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 23981  011834  C070  F0AE         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 23982  011838  C071  F0AF         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 23983                           
 23984                           ;motor.c: 719: arc_in_steps /= (float) 36000;
 23985  01183C  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 23986  011840  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 23987  011844  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 23988  011848  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 23989  01184C  0E00               	movlw	0
 23990  01184E  0100               	movlb	0	; () banked
 23991  011850  6F72               	movwf	___fldiv@a& (0+255),b
 23992  011852  0EA0               	movlw	160
 23993  011854  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 23994  011856  0E0C               	movlw	12
 23995  011858  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 23996  01185A  0E47               	movlw	71
 23997  01185C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 23998  01185E  ECD6  F06D         	call	___fldiv	;wreg free
 23999  011862  C06E  F0AC         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24000  011866  C06F  F0AD         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24001  01186A  C070  F0AE         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24002  01186E  C071  F0AF         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24003                           
 24004                           ;motor.c: 720: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24005  011872  C0AC  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24006  011876  C0AD  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24007  01187A  C0AE  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24008  01187E  C0AF  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24009  011882  EC62  F090         	call	___fltol	;wreg free
 24010  011886  C060  F0A7         	movff	?___fltol,_motor_arc_move$8784
 24011  01188A  C061  F0A8         	movff	?___fltol+1,_motor_arc_move$8784+1
 24012  01188E  C062  F0A9         	movff	?___fltol+2,_motor_arc_move$8784+2
 24013  011892  C063  F0AA         	movff	?___fltol+3,_motor_arc_move$8784+3
 24014                           
 24015                           ;motor.c: 720: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24016  011896  C0A7  F0A0         	movff	_motor_arc_move$8784,motor_schedule_command@distance_in_steps
 24017  01189A  C0A8  F0A1         	movff	_motor_arc_move$8784+1,motor_schedule_command@distance_in_steps+1
 24018  01189E  C0A9  F0A2         	movff	_motor_arc_move$8784+2,motor_schedule_command@distance_in_steps+2
 24019  0118A2  C0AA  F0A3         	movff	_motor_arc_move$8784+3,motor_schedule_command@distance_in_steps+3
 24020  0118A6  C191  F0A4         	movff	_os+32,motor_schedule_command@speed	;volatile
 24021  0118AA  C192  F0A5         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 24022  0118AE  0100               	movlb	0	; () banked
 24023  0118B0  51AB               	movf	motor_arc_move@direction& (0+255),w,b
 24024  0118B2  EC61  F097         	call	_motor_schedule_command
 24025  0118B6  0012               	return		;funcret
 24026  0118B8                     __end_of_motor_arc_move:
 24027                           	opt stack 0
 24028                           tblptru	equ	0xFF8
 24029                           tblptrh	equ	0xFF7
 24030                           tblptrl	equ	0xFF6
 24031                           tablat	equ	0xFF5
 24032                           prodh	equ	0xFF4
 24033                           prodl	equ	0xFF3
 24034                           intcon	equ	0xFF2
 24035                           postinc0	equ	0xFEE
 24036                           wreg	equ	0xFE8
 24037                           indf1	equ	0xFE7
 24038                           postinc1	equ	0xFE6
 24039                           postdec1	equ	0xFE5
 24040                           plusw1	equ	0xFE3
 24041                           fsr1h	equ	0xFE2
 24042                           fsr1l	equ	0xFE1
 24043                           indf2	equ	0xFDF
 24044                           postinc2	equ	0xFDE
 24045                           postdec2	equ	0xFDD
 24046                           plusw2	equ	0xFDB
 24047                           fsr2h	equ	0xFDA
 24048                           fsr2l	equ	0xFD9
 24049                           status	equ	0xFD8
 24050                           
 24051 ;; *************** function __encoder_next_setup_stepsize *****************
 24052 ;; Defined at:
 24053 ;;		line 24 in file "encoder.c"
 24054 ;; Parameters:    Size  Location     Type
 24055 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24056 ;; Auto vars:     Size  Location     Type
 24057 ;;		None
 24058 ;; Return value:  Size  Location     Type
 24059 ;;                  2    0[BANK0 ] unsigned int 
 24060 ;; Registers used:
 24061 ;;		wreg, status,2, status,0
 24062 ;; Tracked objects:
 24063 ;;		On entry : 0/0
 24064 ;;		On exit  : 0/0
 24065 ;;		Unchanged: 0/0
 24066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24070 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24071 ;;Total ram usage:        4 bytes
 24072 ;; Hardware stack levels used:    1
 24073 ;; Hardware stack levels required when called:   10
 24074 ;; This function calls:
 24075 ;;		Nothing
 24076 ;; This function is called by:
 24077 ;;		_encoder_statemachine
 24078 ;; This function uses a non-reentrant model
 24079 ;;
 24080                           
 24081                           	psect	text98
 24082  013E04                     __ptext98:
 24083                           	opt stack 0
 24084  013E04                     __encoder_next_setup_stepsize:
 24085                           	opt stack 19
 24086                           
 24087                           ;encoder.c: 26: switch(old_stepsize)
 24088                           
 24089                           ;incstack = 0
 24090  013E04  D01A               	goto	l2602
 24091  013E06                     
 24092                           ;encoder.c: 29: return 100;
 24093  013E06  0E00               	movlw	0
 24094  013E08  0100               	movlb	0	; () banked
 24095  013E0A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24096  013E0C  0E64               	movlw	100
 24097  013E0E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24098                           
 24099                           ; BSR set to: 0
 24100  013E10  0012               	return	
 24101  013E12                     
 24102                           ; BSR set to: 0
 24103                           ;encoder.c: 31: return 10;
 24104                           
 24105                           ; BSR set to: 0
 24106  013E12  0E00               	movlw	0
 24107  013E14  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24108  013E16  0E0A               	movlw	10
 24109  013E18  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24110                           
 24111                           ; BSR set to: 0
 24112  013E1A  0012               	return	
 24113  013E1C                     
 24114                           ; BSR set to: 0
 24115                           ;encoder.c: 33: return 1;
 24116                           
 24117                           ; BSR set to: 0
 24118  013E1C  0E00               	movlw	0
 24119  013E1E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24120  013E20  0E01               	movlw	1
 24121  013E22  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24122                           
 24123                           ; BSR set to: 0
 24124  013E24  0012               	return	
 24125  013E26                     
 24126                           ; BSR set to: 0
 24127                           ;encoder.c: 35: return 1000;
 24128                           
 24129                           ; BSR set to: 0
 24130  013E26  0E03               	movlw	3
 24131  013E28  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24132  013E2A  0EE8               	movlw	232
 24133  013E2C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24134                           
 24135                           ; BSR set to: 0
 24136  013E2E  0012               	return	
 24137  013E30                     
 24138                           ; BSR set to: 0
 24139                           ;encoder.c: 37: return 100;
 24140                           
 24141                           ; BSR set to: 0
 24142  013E30  0E00               	movlw	0
 24143  013E32  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24144  013E34  0E64               	movlw	100
 24145  013E36  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24146                           
 24147                           ; BSR set to: 0
 24148                           ;encoder.c: 38: }
 24149                           
 24150                           ; BSR set to: 0
 24151  013E38  0012               	return	
 24152  013E3A                     l2602:
 24153                           
 24154                           ; BSR set to: 0
 24155  013E3A  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24156  013E3E  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24157                           
 24158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24159                           ; Switch size 1, requested type "space"
 24160                           ; Number of cases is 2, Range of values is 0 to 3
 24161                           ; switch strategies available:
 24162                           ; Name         Instructions Cycles
 24163                           ; simple_byte            7     4 (average)
 24164                           ;	Chosen strategy is simple_byte
 24165  013E42  0100               	movlb	0	; () banked
 24166  013E44  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24167  013E46  0A00               	xorlw	0	; case 0
 24168  013E48  B4D8               	btfsc	status,2,c
 24169  013E4A  D004               	goto	l19360
 24170  013E4C  0A03               	xorlw	3	; case 3
 24171  013E4E  B4D8               	btfsc	status,2,c
 24172  013E50  D00C               	goto	l19362
 24173  013E52  D7EE               	goto	l2608
 24174  013E54                     l19360:
 24175                           
 24176                           ; BSR set to: 0
 24177                           ; Switch size 1, requested type "space"
 24178                           ; Number of cases is 3, Range of values is 1 to 100
 24179                           ; switch strategies available:
 24180                           ; Name         Instructions Cycles
 24181                           ; simple_byte           10     6 (average)
 24182                           ;	Chosen strategy is simple_byte
 24183  013E54  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24184  013E56  0A01               	xorlw	1	; case 1
 24185  013E58  B4D8               	btfsc	status,2,c
 24186  013E5A  D7E5               	goto	l2607
 24187  013E5C  0A0B               	xorlw	11	; case 10
 24188  013E5E  B4D8               	btfsc	status,2,c
 24189  013E60  D7DD               	goto	l2606
 24190  013E62  0A6E               	xorlw	110	; case 100
 24191  013E64  B4D8               	btfsc	status,2,c
 24192  013E66  D7D5               	goto	l2605
 24193  013E68  D7E3               	goto	l2608
 24194  013E6A                     l19362:
 24195                           
 24196                           ; BSR set to: 0
 24197                           ; Switch size 1, requested type "space"
 24198                           ; Number of cases is 1, Range of values is 232 to 232
 24199                           ; switch strategies available:
 24200                           ; Name         Instructions Cycles
 24201                           ; simple_byte            4     3 (average)
 24202                           ;	Chosen strategy is simple_byte
 24203  013E6A  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24204  013E6C  0AE8               	xorlw	232	; case 232
 24205  013E6E  B4D8               	btfsc	status,2,c
 24206  013E70  D7CA               	goto	l2603
 24207  013E72  D7DE               	goto	l2608
 24208  013E74                     __end_of__encoder_next_setup_stepsize:
 24209                           	opt stack 0
 24210                           tblptru	equ	0xFF8
 24211                           tblptrh	equ	0xFF7
 24212                           tblptrl	equ	0xFF6
 24213                           tablat	equ	0xFF5
 24214                           prodh	equ	0xFF4
 24215                           prodl	equ	0xFF3
 24216                           intcon	equ	0xFF2
 24217                           postinc0	equ	0xFEE
 24218                           wreg	equ	0xFE8
 24219                           indf1	equ	0xFE7
 24220                           postinc1	equ	0xFE6
 24221                           postdec1	equ	0xFE5
 24222                           plusw1	equ	0xFE3
 24223                           fsr1h	equ	0xFE2
 24224                           fsr1l	equ	0xFE1
 24225                           indf2	equ	0xFDF
 24226                           postinc2	equ	0xFDE
 24227                           postdec2	equ	0xFDD
 24228                           plusw2	equ	0xFDB
 24229                           fsr2h	equ	0xFDA
 24230                           fsr2l	equ	0xFD9
 24231                           status	equ	0xFD8
 24232                           
 24233 ;; *************** function __encoder_next_divide_step_size *****************
 24234 ;; Defined at:
 24235 ;;		line 41 in file "encoder.c"
 24236 ;; Parameters:    Size  Location     Type
 24237 ;;  old_stepsize    1    wreg     unsigned char 
 24238 ;; Auto vars:     Size  Location     Type
 24239 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24240 ;; Return value:  Size  Location     Type
 24241 ;;                  1    wreg      unsigned char 
 24242 ;; Registers used:
 24243 ;;		wreg, status,2, status,0
 24244 ;; Tracked objects:
 24245 ;;		On entry : 0/0
 24246 ;;		On exit  : 0/0
 24247 ;;		Unchanged: 0/0
 24248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24252 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24253 ;;Total ram usage:        1 bytes
 24254 ;; Hardware stack levels used:    1
 24255 ;; Hardware stack levels required when called:   10
 24256 ;; This function calls:
 24257 ;;		Nothing
 24258 ;; This function is called by:
 24259 ;;		_encoder_statemachine
 24260 ;; This function uses a non-reentrant model
 24261 ;;
 24262                           
 24263                           	psect	text99
 24264  015408                     __ptext99:
 24265                           	opt stack 0
 24266  015408                     __encoder_next_divide_step_size:
 24267                           	opt stack 19
 24268                           
 24269                           ; BSR set to: 0
 24270                           ;incstack = 0
 24271                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24272  015408  0100               	movlb	0	; () banked
 24273  01540A  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24274                           
 24275                           ;encoder.c: 43: switch(old_stepsize)
 24276  01540C  D008               	goto	l2612
 24277  01540E                     
 24278                           ;encoder.c: 46: return 10;
 24279  01540E  0E0A               	movlw	10
 24280  015410  0012               	return	
 24281  015412                     
 24282                           ;encoder.c: 48: return 1;
 24283  015412  0E01               	movlw	1
 24284  015414  0012               	return	
 24285  015416                     
 24286                           ;encoder.c: 50: return 100;
 24287  015416  0E64               	movlw	100
 24288  015418  0012               	return	
 24289  01541A                     
 24290                           ;encoder.c: 52: return 1;
 24291  01541A  0E01               	movlw	1
 24292                           
 24293                           ;encoder.c: 53: }
 24294  01541C  0012               	return	
 24295  01541E                     l2612:
 24296  01541E  0100               	movlb	0	; () banked
 24297  015420  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24298                           
 24299                           ; Switch size 1, requested type "space"
 24300                           ; Number of cases is 3, Range of values is 1 to 100
 24301                           ; switch strategies available:
 24302                           ; Name         Instructions Cycles
 24303                           ; simple_byte           10     6 (average)
 24304                           ;	Chosen strategy is simple_byte
 24305  015422  0A01               	xorlw	1	; case 1
 24306  015424  B4D8               	btfsc	status,2,c
 24307  015426  D7F7               	goto	l2616
 24308  015428  0A0B               	xorlw	11	; case 10
 24309  01542A  B4D8               	btfsc	status,2,c
 24310  01542C  D7F2               	goto	l2615
 24311  01542E  0A6E               	xorlw	110	; case 100
 24312  015430  B4D8               	btfsc	status,2,c
 24313  015432  D7ED               	goto	l2613
 24314  015434  D7F2               	goto	l2617
 24315  015436                     __end_of__encoder_next_divide_step_size:
 24316                           	opt stack 0
 24317                           tblptru	equ	0xFF8
 24318                           tblptrh	equ	0xFF7
 24319                           tblptrl	equ	0xFF6
 24320                           tablat	equ	0xFF5
 24321                           prodh	equ	0xFF4
 24322                           prodl	equ	0xFF3
 24323                           intcon	equ	0xFF2
 24324                           postinc0	equ	0xFEE
 24325                           wreg	equ	0xFE8
 24326                           indf1	equ	0xFE7
 24327                           postinc1	equ	0xFE6
 24328                           postdec1	equ	0xFE5
 24329                           plusw1	equ	0xFE3
 24330                           fsr1h	equ	0xFE2
 24331                           fsr1l	equ	0xFE1
 24332                           indf2	equ	0xFDF
 24333                           postinc2	equ	0xFDE
 24334                           postdec2	equ	0xFDD
 24335                           plusw2	equ	0xFDB
 24336                           fsr2h	equ	0xFDA
 24337                           fsr2l	equ	0xFD9
 24338                           status	equ	0xFD8
 24339                           
 24340 ;; *************** function __encoder_next_arc_step_size *****************
 24341 ;; Defined at:
 24342 ;;		line 56 in file "encoder.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;		None
 24347 ;; Return value:  Size  Location     Type
 24348 ;;                  2    0[BANK0 ] unsigned int 
 24349 ;; Registers used:
 24350 ;;		wreg, status,2, status,0
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/0
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24358 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24360 ;;Total ram usage:        4 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:   10
 24363 ;; This function calls:
 24364 ;;		Nothing
 24365 ;; This function is called by:
 24366 ;;		_encoder_statemachine
 24367 ;; This function uses a non-reentrant model
 24368 ;;
 24369                           
 24370                           	psect	text100
 24371  013E74                     __ptext100:
 24372                           	opt stack 0
 24373  013E74                     __encoder_next_arc_step_size:
 24374                           	opt stack 19
 24375                           
 24376                           ;encoder.c: 58: switch(old_stepsize)
 24377                           
 24378                           ;incstack = 0
 24379  013E74  D01A               	goto	l2621
 24380  013E76                     
 24381                           ;encoder.c: 61: return 100;
 24382  013E76  0E00               	movlw	0
 24383  013E78  0100               	movlb	0	; () banked
 24384  013E7A  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24385  013E7C  0E64               	movlw	100
 24386  013E7E  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24387                           
 24388                           ; BSR set to: 0
 24389  013E80  0012               	return	
 24390  013E82                     
 24391                           ; BSR set to: 0
 24392                           ;encoder.c: 63: return 10;
 24393                           
 24394                           ; BSR set to: 0
 24395  013E82  0E00               	movlw	0
 24396  013E84  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24397  013E86  0E0A               	movlw	10
 24398  013E88  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24399                           
 24400                           ; BSR set to: 0
 24401  013E8A  0012               	return	
 24402  013E8C                     
 24403                           ; BSR set to: 0
 24404                           ;encoder.c: 65: return 1;
 24405                           
 24406                           ; BSR set to: 0
 24407  013E8C  0E00               	movlw	0
 24408  013E8E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24409  013E90  0E01               	movlw	1
 24410  013E92  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24411                           
 24412                           ; BSR set to: 0
 24413  013E94  0012               	return	
 24414  013E96                     
 24415                           ; BSR set to: 0
 24416                           ;encoder.c: 67: return 1000;
 24417                           
 24418                           ; BSR set to: 0
 24419  013E96  0E03               	movlw	3
 24420  013E98  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24421  013E9A  0EE8               	movlw	232
 24422  013E9C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24423                           
 24424                           ; BSR set to: 0
 24425  013E9E  0012               	return	
 24426  013EA0                     
 24427                           ; BSR set to: 0
 24428                           ;encoder.c: 69: return 100;
 24429                           
 24430                           ; BSR set to: 0
 24431  013EA0  0E00               	movlw	0
 24432  013EA2  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24433  013EA4  0E64               	movlw	100
 24434  013EA6  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24435                           
 24436                           ; BSR set to: 0
 24437                           ;encoder.c: 70: }
 24438                           
 24439                           ; BSR set to: 0
 24440  013EA8  0012               	return	
 24441  013EAA                     l2621:
 24442                           
 24443                           ; BSR set to: 0
 24444  013EAA  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24445  013EAE  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24446                           
 24447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24448                           ; Switch size 1, requested type "space"
 24449                           ; Number of cases is 2, Range of values is 0 to 3
 24450                           ; switch strategies available:
 24451                           ; Name         Instructions Cycles
 24452                           ; simple_byte            7     4 (average)
 24453                           ;	Chosen strategy is simple_byte
 24454  013EB2  0100               	movlb	0	; () banked
 24455  013EB4  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24456  013EB6  0A00               	xorlw	0	; case 0
 24457  013EB8  B4D8               	btfsc	status,2,c
 24458  013EBA  D004               	goto	l19364
 24459  013EBC  0A03               	xorlw	3	; case 3
 24460  013EBE  B4D8               	btfsc	status,2,c
 24461  013EC0  D00C               	goto	l19366
 24462  013EC2  D7EE               	goto	l2627
 24463  013EC4                     l19364:
 24464                           
 24465                           ; BSR set to: 0
 24466                           ; Switch size 1, requested type "space"
 24467                           ; Number of cases is 3, Range of values is 1 to 100
 24468                           ; switch strategies available:
 24469                           ; Name         Instructions Cycles
 24470                           ; simple_byte           10     6 (average)
 24471                           ;	Chosen strategy is simple_byte
 24472  013EC4  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24473  013EC6  0A01               	xorlw	1	; case 1
 24474  013EC8  B4D8               	btfsc	status,2,c
 24475  013ECA  D7E5               	goto	l2626
 24476  013ECC  0A0B               	xorlw	11	; case 10
 24477  013ECE  B4D8               	btfsc	status,2,c
 24478  013ED0  D7DD               	goto	l2625
 24479  013ED2  0A6E               	xorlw	110	; case 100
 24480  013ED4  B4D8               	btfsc	status,2,c
 24481  013ED6  D7D5               	goto	l2624
 24482  013ED8  D7E3               	goto	l2627
 24483  013EDA                     l19366:
 24484                           
 24485                           ; BSR set to: 0
 24486                           ; Switch size 1, requested type "space"
 24487                           ; Number of cases is 1, Range of values is 232 to 232
 24488                           ; switch strategies available:
 24489                           ; Name         Instructions Cycles
 24490                           ; simple_byte            4     3 (average)
 24491                           ;	Chosen strategy is simple_byte
 24492  013EDA  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24493  013EDC  0AE8               	xorlw	232	; case 232
 24494  013EDE  B4D8               	btfsc	status,2,c
 24495  013EE0  D7CA               	goto	l2622
 24496  013EE2  D7DE               	goto	l2627
 24497  013EE4                     __end_of__encoder_next_arc_step_size:
 24498                           	opt stack 0
 24499                           tblptru	equ	0xFF8
 24500                           tblptrh	equ	0xFF7
 24501                           tblptrl	equ	0xFF6
 24502                           tablat	equ	0xFF5
 24503                           prodh	equ	0xFF4
 24504                           prodl	equ	0xFF3
 24505                           intcon	equ	0xFF2
 24506                           postinc0	equ	0xFEE
 24507                           wreg	equ	0xFE8
 24508                           indf1	equ	0xFE7
 24509                           postinc1	equ	0xFE6
 24510                           postdec1	equ	0xFE5
 24511                           plusw1	equ	0xFE3
 24512                           fsr1h	equ	0xFE2
 24513                           fsr1l	equ	0xFE1
 24514                           indf2	equ	0xFDF
 24515                           postinc2	equ	0xFDE
 24516                           postdec2	equ	0xFDD
 24517                           plusw2	equ	0xFDB
 24518                           fsr2h	equ	0xFDA
 24519                           fsr2l	equ	0xFD9
 24520                           status	equ	0xFD8
 24521                           
 24522 ;; *************** function __divide_jump_size_increment *****************
 24523 ;; Defined at:
 24524 ;;		line 73 in file "encoder.c"
 24525 ;; Parameters:    Size  Location     Type
 24526 ;;		None
 24527 ;; Auto vars:     Size  Location     Type
 24528 ;;		None
 24529 ;; Return value:  Size  Location     Type
 24530 ;;                  1    wreg      void 
 24531 ;; Registers used:
 24532 ;;		wreg, status,2, status,0
 24533 ;; Tracked objects:
 24534 ;;		On entry : 0/0
 24535 ;;		On exit  : 0/0
 24536 ;;		Unchanged: 0/0
 24537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24542 ;;Total ram usage:        1 bytes
 24543 ;; Hardware stack levels used:    1
 24544 ;; Hardware stack levels required when called:   10
 24545 ;; This function calls:
 24546 ;;		Nothing
 24547 ;; This function is called by:
 24548 ;;		_encoder_statemachine
 24549 ;; This function uses a non-reentrant model
 24550 ;;
 24551                           
 24552                           	psect	text101
 24553  01503A                     __ptext101:
 24554                           	opt stack 0
 24555  01503A                     __divide_jump_size_increment:
 24556                           	opt stack 19
 24557                           
 24558                           ;encoder.c: 75: ++os.divide_jump_size;
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;incstack = 0
 24562  01503A  0101               	movlb	1	; () banked
 24563  01503C  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 24564  01503E  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 24565                           
 24566                           ; BSR set to: 1
 24567                           ;encoder.c: 76: if(os.divide_jump_size==0)
 24568  015040  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24569  015042  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24570  015044  A4D8               	btfss	status,2,c
 24571  015046  D004               	goto	l2631
 24572                           
 24573                           ; BSR set to: 1
 24574                           ;encoder.c: 77: os.divide_jump_size = 1;
 24575  015048  0E00               	movlw	0
 24576  01504A  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24577  01504C  0E01               	movlw	1
 24578  01504E  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24579  015050                     l2631:
 24580                           
 24581                           ; BSR set to: 1
 24582                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 24583                           
 24584                           ; BSR set to: 1
 24585  015050  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 24586  015052  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 24587  015054  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24588  015056  0A80               	xorlw	128
 24589  015058  0100               	movlb	0	; () banked
 24590  01505A  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24591  01505C  0101               	movlb	1	; () banked
 24592  01505E  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 24593  015060  0A80               	xorlw	128
 24594  015062  0100               	movlb	0	; () banked
 24595  015064  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24596  015066  A0D8               	btfss	status,0,c
 24597  015068  0012               	return	
 24598                           
 24599                           ; BSR set to: 0
 24600                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 24601  01506A  0EFF               	movlw	255
 24602  01506C  0101               	movlb	1	; () banked
 24603  01506E  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 24604  015070  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24605  015072  0EFF               	movlw	255
 24606  015074  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 24607  015076  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24608  015078  0012               	return	
 24609  01507A                     __end_of__divide_jump_size_increment:
 24610                           	opt stack 0
 24611                           tblptru	equ	0xFF8
 24612                           tblptrh	equ	0xFF7
 24613                           tblptrl	equ	0xFF6
 24614                           tablat	equ	0xFF5
 24615                           prodh	equ	0xFF4
 24616                           prodl	equ	0xFF3
 24617                           intcon	equ	0xFF2
 24618                           postinc0	equ	0xFEE
 24619                           wreg	equ	0xFE8
 24620                           indf1	equ	0xFE7
 24621                           postinc1	equ	0xFE6
 24622                           postdec1	equ	0xFE5
 24623                           plusw1	equ	0xFE3
 24624                           fsr1h	equ	0xFE2
 24625                           fsr1l	equ	0xFE1
 24626                           indf2	equ	0xFDF
 24627                           postinc2	equ	0xFDE
 24628                           postdec2	equ	0xFDD
 24629                           plusw2	equ	0xFDB
 24630                           fsr2h	equ	0xFDA
 24631                           fsr2l	equ	0xFD9
 24632                           status	equ	0xFD8
 24633                           
 24634 ;; *************** function __divide_jump_size_decrement *****************
 24635 ;; Defined at:
 24636 ;;		line 82 in file "encoder.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;		None
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;		None
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  1    wreg      void 
 24643 ;; Registers used:
 24644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/0
 24647 ;;		On exit  : 0/0
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24652 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24653 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24654 ;;Total ram usage:        3 bytes
 24655 ;; Hardware stack levels used:    1
 24656 ;; Hardware stack levels required when called:   10
 24657 ;; This function calls:
 24658 ;;		Nothing
 24659 ;; This function is called by:
 24660 ;;		_encoder_statemachine
 24661 ;; This function uses a non-reentrant model
 24662 ;;
 24663                           
 24664                           	psect	text102
 24665  013F52                     __ptext102:
 24666                           	opt stack 0
 24667  013F52                     __divide_jump_size_decrement:
 24668                           	opt stack 19
 24669                           
 24670                           ;encoder.c: 84: --os.divide_jump_size;
 24671                           
 24672                           ;incstack = 0
 24673  013F52  0101               	movlb	1	; () banked
 24674  013F54  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 24675  013F56  A0D8               	btfss	status,0,c
 24676  013F58  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 24677                           
 24678                           ; BSR set to: 1
 24679                           ;encoder.c: 85: if(os.divide_jump_size==0)
 24680  013F5A  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24681  013F5C  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24682  013F5E  A4D8               	btfss	status,2,c
 24683  013F60  D002               	goto	l2636
 24684                           
 24685                           ; BSR set to: 1
 24686                           ;encoder.c: 86: os.divide_jump_size = -1;
 24687  013F62  6989               	setf	(_os+24)& (0+255),b	;volatile
 24688  013F64  698A               	setf	(_os+25)& (0+255),b	;volatile
 24689  013F66                     l2636:
 24690                           
 24691                           ; BSR set to: 1
 24692                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 24693                           
 24694                           ; BSR set to: 1
 24695  013F66  EE21  F084         	lfsr	2,_os+19	;volatile
 24696  013F6A  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24697  013F6E  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24698  013F72  0100               	movlb	0	; () banked
 24699  013F74  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24700  013F76  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24701  013F78  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24702  013F7A  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24703  013F7C  0101               	movlb	1	; () banked
 24704  013F7E  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24705  013F80  0100               	movlb	0	; () banked
 24706  013F82  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 24707  013F84  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24708  013F86  0A80               	xorlw	128
 24709  013F88  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 24710  013F8A  0101               	movlb	1	; () banked
 24711  013F8C  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24712  013F8E  0A80               	xorlw	128
 24713  013F90  0100               	movlb	0	; () banked
 24714  013F92  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 24715  013F94  A0D8               	btfss	status,0,c
 24716  013F96  0012               	return	
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 24720  013F98  EE21  F084         	lfsr	2,_os+19	;volatile
 24721  013F9C  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24722  013FA0  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24723  013FA4  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24724  013FA6  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24725  013FA8  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24726  013FAA  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24727  013FAC  0E01               	movlw	1
 24728  013FAE  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 24729  013FB0  0101               	movlb	1	; () banked
 24730  013FB2  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24731  013FB4  0E00               	movlw	0
 24732  013FB6  0100               	movlb	0	; () banked
 24733  013FB8  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24734  013FBA  0101               	movlb	1	; () banked
 24735  013FBC  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24736  013FBE  0012               	return	
 24737  013FC0                     __end_of__divide_jump_size_decrement:
 24738                           	opt stack 0
 24739                           tblptru	equ	0xFF8
 24740                           tblptrh	equ	0xFF7
 24741                           tblptrl	equ	0xFF6
 24742                           tablat	equ	0xFF5
 24743                           prodh	equ	0xFF4
 24744                           prodl	equ	0xFF3
 24745                           intcon	equ	0xFF2
 24746                           postinc0	equ	0xFEE
 24747                           wreg	equ	0xFE8
 24748                           indf1	equ	0xFE7
 24749                           postinc1	equ	0xFE6
 24750                           postdec1	equ	0xFE5
 24751                           plusw1	equ	0xFE3
 24752                           fsr1h	equ	0xFE2
 24753                           fsr1l	equ	0xFE1
 24754                           indf2	equ	0xFDF
 24755                           postinc2	equ	0xFDE
 24756                           postdec2	equ	0xFDD
 24757                           plusw2	equ	0xFDB
 24758                           fsr2h	equ	0xFDA
 24759                           fsr2l	equ	0xFD9
 24760                           status	equ	0xFD8
 24761                           
 24762 ;; *************** function _display_prepare *****************
 24763 ;; Defined at:
 24764 ;;		line 278 in file "display.c"
 24765 ;; Parameters:    Size  Location     Type
 24766 ;;		None
 24767 ;; Auto vars:     Size  Location     Type
 24768 ;;  temp           10   94[BANK0 ] unsigned char [10]
 24769 ;;  cntr            1  105[BANK0 ] unsigned char 
 24770 ;;  space           1  104[BANK0 ] unsigned char 
 24771 ;; Return value:  Size  Location     Type
 24772 ;;                  1    wreg      void 
 24773 ;; Registers used:
 24774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24775 ;; Tracked objects:
 24776 ;;		On entry : 0/0
 24777 ;;		On exit  : 0/0
 24778 ;;		Unchanged: 0/0
 24779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24781 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24782 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24783 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24784 ;;Total ram usage:       14 bytes
 24785 ;; Hardware stack levels used:    1
 24786 ;; Hardware stack levels required when called:   15
 24787 ;; This function calls:
 24788 ;;		__display_clear
 24789 ;;		__display_itoa
 24790 ;;		__display_itoa_long
 24791 ;;		__display_padded_itoa
 24792 ;;		__display_signed_itoa
 24793 ;;		_memcpy
 24794 ;;		_motor_speed_from_index
 24795 ;;		_strlen
 24796 ;; This function is called by:
 24797 ;;		_main
 24798 ;; This function uses a non-reentrant model
 24799 ;;
 24800                           
 24801                           	psect	text103
 24802  00A330                     __ptext103:
 24803                           	opt stack 0
 24804  00A330                     _display_prepare:
 24805                           	opt stack 15
 24806                           
 24807                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 24808                           
 24809                           ;incstack = 0
 24810  00A330  EF8E  F057         	goto	l1376
 24811  00A334                     
 24812                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 24813  00A334  0E34               	movlw	low _display_content
 24814  00A336  0100               	movlb	0	; () banked
 24815  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 24816  00A33A  0E02               	movlw	high _display_content
 24817  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24818  00A33E  0E6E               	movlw	low _dc_main
 24819  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 24820  00A342  0EA0               	movlw	high _dc_main
 24821  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24822  00A346  0E00               	movlw	0
 24823  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24824  00A34A  0E50               	movlw	80
 24825  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 24826  00A34E  ECDD  F0A1         	call	_memcpy	;wreg free
 24827                           
 24828                           ;display.c: 289: switch(os.displayState)
 24829  00A352  D00F               	goto	l1378
 24830  00A354                     
 24831                           ;display.c: 292: display_content[1][0] = '>';
 24832  00A354  0E3E               	movlw	62
 24833  00A356  0102               	movlb	2	; () banked
 24834  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 24835                           
 24836                           ;display.c: 293: break;
 24837  00A35A  EFBC  F057         	goto	l1385
 24838  00A35E                     
 24839                           ;display.c: 295: display_content[1][9] = '>';
 24840                           
 24841                           ; BSR set to: 2
 24842  00A35E  0E3E               	movlw	62
 24843  00A360  0102               	movlb	2	; () banked
 24844  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 24845                           
 24846                           ;display.c: 296: break;
 24847  00A364  EFBC  F057         	goto	l1385
 24848  00A368                     
 24849                           ;display.c: 301: display_content[2][9] = '>';
 24850                           
 24851                           ; BSR set to: 2
 24852  00A368  0E3E               	movlw	62
 24853  00A36A  0102               	movlb	2	; () banked
 24854  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 24855                           
 24856                           ;display.c: 302: break;
 24857  00A36E  EFBC  F057         	goto	l1385
 24858  00A372                     l1378:
 24859                           
 24860                           ; BSR set to: 2
 24861  00A372  0101               	movlb	1	; () banked
 24862  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24863                           
 24864                           ; Switch size 1, requested type "space"
 24865                           ; Number of cases is 5, Range of values is 1 to 5
 24866                           ; switch strategies available:
 24867                           ; Name         Instructions Cycles
 24868                           ; simple_byte           16     9 (average)
 24869                           ;	Chosen strategy is simple_byte
 24870  00A376  0A01               	xorlw	1	; case 1
 24871  00A378  B4D8               	btfsc	status,2,c
 24872  00A37A  D7EC               	goto	l1379
 24873  00A37C  0A03               	xorlw	3	; case 2
 24874  00A37E  B4D8               	btfsc	status,2,c
 24875  00A380  D7EE               	goto	l1381
 24876  00A382  0A01               	xorlw	1	; case 3
 24877  00A384  B4D8               	btfsc	status,2,c
 24878  00A386  D067               	goto	l1398
 24879  00A388  0A07               	xorlw	7	; case 4
 24880  00A38A  B4D8               	btfsc	status,2,c
 24881  00A38C  D7ED               	goto	l1383
 24882  00A38E  0A01               	xorlw	1	; case 5
 24883  00A390  D072               	goto	L92
 24884  00A392                     
 24885                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 24886                           
 24887                           ; BSR set to: 1
 24888  00A392  0E34               	movlw	low _display_content
 24889  00A394  0100               	movlb	0	; () banked
 24890  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 24891  00A398  0E02               	movlw	high _display_content
 24892  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24893  00A39C  0E1E               	movlw	low _dc_setup1
 24894  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 24895  00A3A0  0EA0               	movlw	high _dc_setup1
 24896  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24897  00A3A4  0E00               	movlw	0
 24898  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24899  00A3A8  0E50               	movlw	80
 24900  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 24901  00A3AC  ECDD  F0A1         	call	_memcpy	;wreg free
 24902                           
 24903                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 24904  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 24905  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 24906  00A3B8  0E02               	movlw	2
 24907  00A3BA  0100               	movlb	0	; () banked
 24908  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24909  00A3BE  0EBE               	movlw	low display_prepare@temp
 24910  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 24911  00A3C2  0E00               	movlw	high display_prepare@temp
 24912  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24913  00A3C6  EC0D  F075         	call	__display_itoa	;wreg free
 24914                           
 24915                           ;display.c: 312: if(os.setup_step_size>999)
 24916  00A3CA  0EE8               	movlw	232
 24917  00A3CC  0101               	movlb	1	; () banked
 24918  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 24919  00A3D0  0E03               	movlw	3
 24920  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 24921  00A3D4  A0D8               	btfss	status,0,c
 24922  00A3D6  D002               	goto	l1387
 24923                           
 24924                           ; BSR set to: 1
 24925                           ;display.c: 313: space = 0;
 24926  00A3D8  0E00               	movlw	0
 24927  00A3DA  D001               	goto	L23
 24928  00A3DC                     l1387:
 24929                           
 24930                           ;display.c: 314: else;display.c: 315: space = 1;
 24931                           
 24932                           ; BSR set to: 0
 24933  00A3DC  0E01               	movlw	1
 24934  00A3DE                     L23:
 24935  00A3DE  0100               	movlb	0	; () banked
 24936  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 24937                           
 24938                           ; BSR set to: 0
 24939                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 24940  00A3E2  0E00               	movlw	0
 24941  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24942  00A3E6  D018               	goto	l1389
 24943  00A3E8                     
 24944                           ; BSR set to: 0
 24945                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 24946                           
 24947                           ; BSR set to: 0
 24948  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24949  00A3EA  0D01               	mullw	1
 24950  00A3EC  0EBE               	movlw	low display_prepare@temp
 24951  00A3EE  24F3               	addwf	prodl,w,c
 24952  00A3F0  6ED9               	movwf	fsr2l,c
 24953  00A3F2  0E00               	movlw	high display_prepare@temp
 24954  00A3F4  20F4               	addwfc	prodh,w,c
 24955  00A3F6  6EDA               	movwf	fsr2h,c
 24956  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24957  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24958  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24959  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 24960  00A402  0E00               	movlw	0
 24961  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24962  00A406  0E70               	movlw	low (_display_content+60)
 24963  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 24964  00A40A  6EE1               	movwf	fsr1l,c
 24965  00A40C  0E02               	movlw	high (_display_content+60)
 24966  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24967  00A410  6EE2               	movwf	fsr1h,c
 24968  00A412  CFDF FFE7          	movff	indf2,indf1
 24969                           
 24970                           ; BSR set to: 0
 24971  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24972  00A418                     l1389:
 24973                           
 24974                           ; BSR set to: 0
 24975                           
 24976                           ; BSR set to: 0
 24977  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24978  00A41A  0D01               	mullw	1
 24979  00A41C  0EBE               	movlw	low display_prepare@temp
 24980  00A41E  24F3               	addwf	prodl,w,c
 24981  00A420  6ED9               	movwf	fsr2l,c
 24982  00A422  0E00               	movlw	high display_prepare@temp
 24983  00A424  20F4               	addwfc	prodh,w,c
 24984  00A426  6EDA               	movwf	fsr2h,c
 24985  00A428  50DF               	movf	indf2,w,c
 24986  00A42A  A4D8               	btfss	status,2,c
 24987  00A42C  D7DD               	goto	l1390
 24988                           
 24989                           ; BSR set to: 2
 24990                           
 24991                           ; BSR set to: 2
 24992                           ;display.c: 328: }
 24993                           
 24994                           ;display.c: 327: break;
 24995                           
 24996                           ;display.c: 326: display_content[3][12] = '>';
 24997                           
 24998                           ; BSR set to: 2
 24999                           
 25000                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 25001                           
 25002                           ;display.c: 324: break;
 25003                           
 25004                           ;display.c: 323: display_content[2][12] = '>';
 25005                           
 25006                           ; BSR set to: 0
 25007                           
 25008                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25009                           
 25010                           ; BSR set to: 0
 25011                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25012  00A42E  0101               	movlb	1	; () banked
 25013  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25014                           
 25015                           ; Switch size 1, requested type "space"
 25016                           ; Number of cases is 2, Range of values is 17 to 18
 25017                           ; switch strategies available:
 25018                           ; Name         Instructions Cycles
 25019                           ; simple_byte            7     4 (average)
 25020                           ;	Chosen strategy is simple_byte
 25021  00A432  0A11               	xorlw	17	; case 17
 25022  00A434  D08E               	goto	L29
 25023  00A436                     
 25024                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25025                           
 25026                           ; BSR set to: 1
 25027  00A436  0E34               	movlw	low _display_content
 25028  00A438  0100               	movlb	0	; () banked
 25029  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25030  00A43C  0E02               	movlw	high _display_content
 25031  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25032  00A440  0ECE               	movlw	low _dc_setup2
 25033  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25034  00A444  0E9F               	movlw	high _dc_setup2
 25035  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25036  00A448  0E00               	movlw	0
 25037  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25038  00A44C  0E50               	movlw	80
 25039  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25040  00A450  ECDD  F0A1         	call	_memcpy	;wreg free
 25041                           
 25042                           ;display.c: 333: switch(os.displayState)
 25043  00A454  D00A               	goto	l1397
 25044  00A456                     l1398:
 25045                           
 25046                           ;display.c: 336: display_content[2][0] = '>';
 25047  00A456  0E3E               	movlw	62
 25048  00A458  0102               	movlb	2	; () banked
 25049  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 25050                           
 25051                           ;display.c: 337: break;
 25052  00A45C  EFBC  F057         	goto	l1385
 25053  00A460                     l1400:
 25054                           
 25055                           ;display.c: 339: display_content[3][0] = '>';
 25056                           
 25057                           ; BSR set to: 2
 25058  00A460  0E3E               	movlw	62
 25059  00A462  0102               	movlb	2	; () banked
 25060  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 25061                           
 25062                           ; BSR set to: 2
 25063                           ;display.c: 341: }
 25064                           
 25065                           ;display.c: 340: break;
 25066  00A466  EFBC  F057         	goto	l1385
 25067  00A46A                     l1397:
 25068                           
 25069                           ; BSR set to: 2
 25070  00A46A  0101               	movlb	1	; () banked
 25071  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25072                           
 25073                           ; Switch size 1, requested type "space"
 25074                           ; Number of cases is 2, Range of values is 33 to 34
 25075                           ; switch strategies available:
 25076                           ; Name         Instructions Cycles
 25077                           ; simple_byte            7     4 (average)
 25078                           ;	Chosen strategy is simple_byte
 25079  00A46E  0A21               	xorlw	33	; case 33
 25080  00A470  B4D8               	btfsc	status,2,c
 25081  00A472  D7F1               	goto	l1398
 25082  00A474  0A03               	xorlw	3	; case 34
 25083  00A476                     L92:
 25084  00A476  B4D8               	btfsc	status,2,c
 25085  00A478  D7F3               	goto	l1400
 25086                           
 25087                           ; BSR set to: 1
 25088                           ;display.c: 342: break;
 25089  00A47A  EFBC  F057         	goto	l1385
 25090  00A47E                     
 25091                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25092                           
 25093                           ; BSR set to: 1
 25094  00A47E  0E34               	movlw	low _display_content
 25095  00A480  0100               	movlb	0	; () banked
 25096  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25097  00A484  0E02               	movlw	high _display_content
 25098  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25099  00A488  0E7E               	movlw	low _dc_divide1
 25100  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25101  00A48C  0E9F               	movlw	high _dc_divide1
 25102  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25103  00A490  0E00               	movlw	0
 25104  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25105  00A494  0E50               	movlw	80
 25106  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25107  00A498  ECDD  F0A1         	call	_memcpy	;wreg free
 25108                           
 25109                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25110  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25111  00A4A0  0100               	movlb	0	; () banked
 25112  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25113  00A4A4  0E03               	movlw	3
 25114  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25115  00A4A8  0EBE               	movlw	low display_prepare@temp
 25116  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25117  00A4AC  0E00               	movlw	high display_prepare@temp
 25118  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25119  00A4B0  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25120                           
 25121                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25122  00A4B4  0E00               	movlw	0
 25123  00A4B6  0100               	movlb	0	; () banked
 25124  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25125  00A4BA                     l18226:
 25126                           
 25127                           ; BSR set to: 0
 25128  00A4BA  0E02               	movlw	2
 25129  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25130  00A4BE  D001               	goto	l1402
 25131  00A4C0  D014               	goto	u18200
 25132  00A4C2                     l1402:
 25133                           
 25134                           ; BSR set to: 0
 25135                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25136                           
 25137                           ; BSR set to: 0
 25138  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25139  00A4C4  0D01               	mullw	1
 25140  00A4C6  0EBE               	movlw	low display_prepare@temp
 25141  00A4C8  24F3               	addwf	prodl,w,c
 25142  00A4CA  6ED9               	movwf	fsr2l,c
 25143  00A4CC  0E00               	movlw	high display_prepare@temp
 25144  00A4CE  20F4               	addwfc	prodh,w,c
 25145  00A4D0  6EDA               	movwf	fsr2h,c
 25146  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25147  00A4D4  0D01               	mullw	1
 25148  00A4D6  0E5C               	movlw	low (_display_content+40)
 25149  00A4D8  24F3               	addwf	prodl,w,c
 25150  00A4DA  6EE1               	movwf	fsr1l,c
 25151  00A4DC  0E02               	movlw	high (_display_content+40)
 25152  00A4DE  20F4               	addwfc	prodh,w,c
 25153  00A4E0  6EE2               	movwf	fsr1h,c
 25154  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25155                           
 25156                           ; BSR set to: 0
 25157  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25158  00A4E8  D7E8               	goto	l18226
 25159  00A4EA                     u18200:
 25160                           
 25161                           ; BSR set to: 0
 25162                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25163                           
 25164                           ; BSR set to: 0
 25165  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25166  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25167  00A4F2  0E04               	movlw	4
 25168  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25169  00A4F6  0EBE               	movlw	low display_prepare@temp
 25170  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25171  00A4FA  0E00               	movlw	high display_prepare@temp
 25172  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25173  00A4FE  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25174                           
 25175                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25176  00A502  0E00               	movlw	0
 25177  00A504  0100               	movlb	0	; () banked
 25178  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25179  00A508                     l18240:
 25180                           
 25181                           ; BSR set to: 0
 25182  00A508  0E03               	movlw	3
 25183  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25184  00A50C  D001               	goto	l1404
 25185  00A50E  D01E               	goto	l1406
 25186  00A510                     l1404:
 25187                           
 25188                           ; BSR set to: 0
 25189                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25190                           
 25191                           ; BSR set to: 0
 25192  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25193  00A512  0D01               	mullw	1
 25194  00A514  0EBE               	movlw	low display_prepare@temp
 25195  00A516  24F3               	addwf	prodl,w,c
 25196  00A518  6ED9               	movwf	fsr2l,c
 25197  00A51A  0E00               	movlw	high display_prepare@temp
 25198  00A51C  20F4               	addwfc	prodh,w,c
 25199  00A51E  6EDA               	movwf	fsr2h,c
 25200  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25201  00A522  0D01               	mullw	1
 25202  00A524  0E70               	movlw	low (_display_content+60)
 25203  00A526  24F3               	addwf	prodl,w,c
 25204  00A528  6EE1               	movwf	fsr1l,c
 25205  00A52A  0E02               	movlw	high (_display_content+60)
 25206  00A52C  20F4               	addwfc	prodh,w,c
 25207  00A52E  6EE2               	movwf	fsr1h,c
 25208  00A530  CFDF FFE7          	movff	indf2,indf1
 25209                           
 25210                           ; BSR set to: 0
 25211  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25212  00A536  D7E8               	goto	l18240
 25213  00A538                     
 25214                           ;display.c: 361: display_content[2][12] = '>';
 25215                           
 25216                           ; BSR set to: 0
 25217  00A538  0E3E               	movlw	62
 25218  00A53A  0102               	movlb	2	; () banked
 25219  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 25220                           
 25221                           ;display.c: 362: break;
 25222  00A53E  EFBC  F057         	goto	l1385
 25223  00A542                     
 25224                           ;display.c: 364: display_content[3][12] = '>';
 25225                           
 25226                           ; BSR set to: 2
 25227  00A542  0E3E               	movlw	62
 25228  00A544  0102               	movlb	2	; () banked
 25229  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 25230                           
 25231                           ; BSR set to: 2
 25232                           ;display.c: 366: }
 25233                           
 25234                           ;display.c: 365: break;
 25235  00A548  EFBC  F057         	goto	l1385
 25236  00A54C                     l1406:
 25237                           
 25238                           ; BSR set to: 2
 25239  00A54C  0101               	movlb	1	; () banked
 25240  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25241                           
 25242                           ; Switch size 1, requested type "space"
 25243                           ; Number of cases is 2, Range of values is 49 to 50
 25244                           ; switch strategies available:
 25245                           ; Name         Instructions Cycles
 25246                           ; simple_byte            7     4 (average)
 25247                           ;	Chosen strategy is simple_byte
 25248  00A550  0A31               	xorlw	49	; case 49
 25249  00A552                     L29:
 25250  00A552  B4D8               	btfsc	status,2,c
 25251  00A554  D7F1               	goto	l1407
 25252  00A556  0A03               	xorlw	3	; case 50
 25253  00A558  B4D8               	btfsc	status,2,c
 25254  00A55A  D7F3               	goto	l1409
 25255                           
 25256                           ; BSR set to: 1
 25257                           ;display.c: 367: break;
 25258  00A55C  EFBC  F057         	goto	l1385
 25259  00A560                     
 25260                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25261                           
 25262                           ; BSR set to: 1
 25263  00A560  0E34               	movlw	low _display_content
 25264  00A562  0100               	movlb	0	; () banked
 25265  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25266  00A566  0E02               	movlw	high _display_content
 25267  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25268  00A56A  0E2E               	movlw	low _dc_divide2
 25269  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25270  00A56E  0E9F               	movlw	high _dc_divide2
 25271  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25272  00A572  0E00               	movlw	0
 25273  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25274  00A576  0E50               	movlw	80
 25275  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25276  00A57A  ECDD  F0A1         	call	_memcpy	;wreg free
 25277                           
 25278                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25279  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25280  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25281  00A586  0E00               	movlw	0
 25282  00A588  0100               	movlb	0	; () banked
 25283  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25284  00A58C  0EBE               	movlw	low display_prepare@temp
 25285  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25286  00A590  0E00               	movlw	high display_prepare@temp
 25287  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25288  00A594  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25289                           
 25290                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25291  00A598  0E00               	movlw	0
 25292  00A59A  0100               	movlb	0	; () banked
 25293  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25294  00A59E  D018               	goto	l1411
 25295  00A5A0                     
 25296                           ; BSR set to: 0
 25297                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25298                           
 25299                           ; BSR set to: 0
 25300  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25301  00A5A2  0D01               	mullw	1
 25302  00A5A4  0EBE               	movlw	low display_prepare@temp
 25303  00A5A6  24F3               	addwf	prodl,w,c
 25304  00A5A8  6ED9               	movwf	fsr2l,c
 25305  00A5AA  0E00               	movlw	high display_prepare@temp
 25306  00A5AC  20F4               	addwfc	prodh,w,c
 25307  00A5AE  6EDA               	movwf	fsr2h,c
 25308  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25309  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 25310  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25311  00A5B6  0E08               	movlw	8
 25312  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 25313  00A5BA  0E00               	movlw	0
 25314  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25315  00A5BE  0E34               	movlw	low _display_content
 25316  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 25317  00A5C2  6EE1               	movwf	fsr1l,c
 25318  00A5C4  0E02               	movlw	high _display_content
 25319  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25320  00A5C8  6EE2               	movwf	fsr1h,c
 25321  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25322                           
 25323                           ; BSR set to: 0
 25324  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25325  00A5D0                     l1411:
 25326                           
 25327                           ; BSR set to: 0
 25328                           
 25329                           ; BSR set to: 0
 25330  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25331  00A5D2  0D01               	mullw	1
 25332  00A5D4  0EBE               	movlw	low display_prepare@temp
 25333  00A5D6  24F3               	addwf	prodl,w,c
 25334  00A5D8  6ED9               	movwf	fsr2l,c
 25335  00A5DA  0E00               	movlw	high display_prepare@temp
 25336  00A5DC  20F4               	addwfc	prodh,w,c
 25337  00A5DE  6EDA               	movwf	fsr2h,c
 25338  00A5E0  50DF               	movf	indf2,w,c
 25339  00A5E2  A4D8               	btfss	status,2,c
 25340  00A5E4  D7DD               	goto	l1412
 25341                           
 25342                           ; BSR set to: 0
 25343                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25344                           
 25345                           ; BSR set to: 0
 25346  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25347  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 25348  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25349  00A5EC  0E08               	movlw	8
 25350  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25351  00A5F0  0E00               	movlw	0
 25352  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25353  00A5F4  0E34               	movlw	low _display_content
 25354  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25355  00A5F8  6ED9               	movwf	fsr2l,c
 25356  00A5FA  0E02               	movlw	high _display_content
 25357  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25358  00A5FE  6EDA               	movwf	fsr2h,c
 25359  00A600  0E2C               	movlw	44
 25360  00A602  6EDF               	movwf	indf2,c
 25361                           
 25362                           ; BSR set to: 0
 25363                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25364  00A604  0101               	movlb	1	; () banked
 25365  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 25366  00A608  A4D8               	btfss	status,2,c
 25367  00A60A  D024               	goto	l1414
 25368                           
 25369                           ; BSR set to: 1
 25370                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25371  00A60C  0100               	movlb	0	; () banked
 25372  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25373  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 25374  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25375  00A614  0E0A               	movlw	10
 25376  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 25377  00A618  0E00               	movlw	0
 25378  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25379  00A61C  0E34               	movlw	low _display_content
 25380  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25381  00A620  6ED9               	movwf	fsr2l,c
 25382  00A622  0E02               	movlw	high _display_content
 25383  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25384  00A626  6EDA               	movwf	fsr2h,c
 25385  00A628  0E43               	movlw	67
 25386  00A62A  6EDF               	movwf	indf2,c
 25387                           
 25388                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25389  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25390  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 25391  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25392  00A632  0E0B               	movlw	11
 25393  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 25394  00A636  0E00               	movlw	0
 25395  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25396  00A63A  0E34               	movlw	low _display_content
 25397  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25398  00A63E  6ED9               	movwf	fsr2l,c
 25399  00A640  0E02               	movlw	high _display_content
 25400  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25401  00A644  6EDA               	movwf	fsr2h,c
 25402  00A646  0E43               	movlw	67
 25403  00A648  6EDF               	movwf	indf2,c
 25404                           
 25405                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25406  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25407  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 25408  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25409  00A650  0E0C               	movlw	12
 25410  00A652  D014               	goto	L30
 25411  00A654                     l1414:
 25412                           
 25413                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25414                           
 25415                           ; BSR set to: 0
 25416  00A654  0100               	movlb	0	; () banked
 25417  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25418  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 25419  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25420  00A65C  0E0A               	movlw	10
 25421  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25422  00A660  0E00               	movlw	0
 25423  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25424  00A664  0E34               	movlw	low _display_content
 25425  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 25426  00A668  6ED9               	movwf	fsr2l,c
 25427  00A66A  0E02               	movlw	high _display_content
 25428  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25429  00A66E  6EDA               	movwf	fsr2h,c
 25430  00A670  0E43               	movlw	67
 25431  00A672  6EDF               	movwf	indf2,c
 25432                           
 25433                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25434  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25435  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 25436  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25437  00A67A  0E0B               	movlw	11
 25438  00A67C                     L30:
 25439  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 25440  00A67E  0E00               	movlw	0
 25441  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25442  00A682  0E34               	movlw	low _display_content
 25443  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 25444  00A686  6ED9               	movwf	fsr2l,c
 25445  00A688  0E02               	movlw	high _display_content
 25446  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25447  00A68C  6EDA               	movwf	fsr2h,c
 25448  00A68E  0E57               	movlw	87
 25449  00A690  6EDF               	movwf	indf2,c
 25450                           
 25451                           ; BSR set to: 0
 25452                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25453                           
 25454                           ; BSR set to: 0
 25455  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25456  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 25457  00A69A  0E00               	movlw	0
 25458  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25459  00A69E  0EBE               	movlw	low display_prepare@temp
 25460  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25461  00A6A2  0E00               	movlw	high display_prepare@temp
 25462  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25463  00A6A6  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25464                           
 25465                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25466  00A6AA  0E00               	movlw	0
 25467  00A6AC  0100               	movlb	0	; () banked
 25468  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25469  00A6B0  D018               	goto	l1416
 25470  00A6B2                     
 25471                           ; BSR set to: 0
 25472                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25473                           
 25474                           ; BSR set to: 0
 25475  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25476  00A6B4  0D01               	mullw	1
 25477  00A6B6  0EBE               	movlw	low display_prepare@temp
 25478  00A6B8  24F3               	addwf	prodl,w,c
 25479  00A6BA  6ED9               	movwf	fsr2l,c
 25480  00A6BC  0E00               	movlw	high display_prepare@temp
 25481  00A6BE  20F4               	addwfc	prodh,w,c
 25482  00A6C0  6EDA               	movwf	fsr2h,c
 25483  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25484  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 25485  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25486  00A6C8  0E05               	movlw	5
 25487  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25488  00A6CC  0E00               	movlw	0
 25489  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25490  00A6D0  0E48               	movlw	low (_display_content+20)
 25491  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 25492  00A6D4  6EE1               	movwf	fsr1l,c
 25493  00A6D6  0E02               	movlw	high (_display_content+20)
 25494  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25495  00A6DA  6EE2               	movwf	fsr1h,c
 25496  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25497                           
 25498                           ; BSR set to: 0
 25499  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25500  00A6E2                     l1416:
 25501                           
 25502                           ; BSR set to: 0
 25503                           
 25504                           ; BSR set to: 0
 25505  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25506  00A6E4  0D01               	mullw	1
 25507  00A6E6  0EBE               	movlw	low display_prepare@temp
 25508  00A6E8  24F3               	addwf	prodl,w,c
 25509  00A6EA  6ED9               	movwf	fsr2l,c
 25510  00A6EC  0E00               	movlw	high display_prepare@temp
 25511  00A6EE  20F4               	addwfc	prodh,w,c
 25512  00A6F0  6EDA               	movwf	fsr2h,c
 25513  00A6F2  50DF               	movf	indf2,w,c
 25514  00A6F4  A4D8               	btfss	status,2,c
 25515  00A6F6  D7DD               	goto	l1417
 25516                           
 25517                           ; BSR set to: 0
 25518                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25519                           
 25520                           ; BSR set to: 0
 25521  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25522  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 25523  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25524  00A6FE  0E06               	movlw	6
 25525  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 25526  00A702  0E00               	movlw	0
 25527  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25528  00A706  0E48               	movlw	low (_display_content+20)
 25529  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 25530  00A70A  6ED9               	movwf	fsr2l,c
 25531  00A70C  0E02               	movlw	high (_display_content+20)
 25532  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25533  00A710  6EDA               	movwf	fsr2h,c
 25534  00A712  0E28               	movlw	40
 25535  00A714  6EDF               	movwf	indf2,c
 25536                           
 25537                           ; BSR set to: 0
 25538                           ;display.c: 398: space = cntr + 7;
 25539  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25540  00A718  0F07               	addlw	7
 25541  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 25542                           
 25543                           ; BSR set to: 0
 25544                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25545  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25546  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25547  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25548  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25549  00A728  0E02               	movlw	2
 25550  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25551  00A72C  0EBE               	movlw	low display_prepare@temp
 25552  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25553  00A730  0E00               	movlw	high display_prepare@temp
 25554  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25555  00A734  ECD0  F085         	call	__display_itoa_long	;wreg free
 25556                           
 25557                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 25558  00A738  0E00               	movlw	0
 25559  00A73A  0100               	movlb	0	; () banked
 25560  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25561  00A73E  D018               	goto	l1419
 25562  00A740                     
 25563                           ; BSR set to: 0
 25564                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 25565                           
 25566                           ; BSR set to: 0
 25567  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25568  00A742  0D01               	mullw	1
 25569  00A744  0EBE               	movlw	low display_prepare@temp
 25570  00A746  24F3               	addwf	prodl,w,c
 25571  00A748  6ED9               	movwf	fsr2l,c
 25572  00A74A  0E00               	movlw	high display_prepare@temp
 25573  00A74C  20F4               	addwfc	prodh,w,c
 25574  00A74E  6EDA               	movwf	fsr2h,c
 25575  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 25576  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25577  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25578  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 25579  00A75A  0E00               	movlw	0
 25580  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25581  00A75E  0E48               	movlw	low (_display_content+20)
 25582  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 25583  00A762  6EE1               	movwf	fsr1l,c
 25584  00A764  0E02               	movlw	high (_display_content+20)
 25585  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25586  00A768  6EE2               	movwf	fsr1h,c
 25587  00A76A  CFDF FFE7          	movff	indf2,indf1
 25588                           
 25589                           ; BSR set to: 0
 25590  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25591  00A770                     l1419:
 25592                           
 25593                           ; BSR set to: 0
 25594                           
 25595                           ; BSR set to: 0
 25596  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25597  00A772  0D01               	mullw	1
 25598  00A774  0EBE               	movlw	low display_prepare@temp
 25599  00A776  24F3               	addwf	prodl,w,c
 25600  00A778  6ED9               	movwf	fsr2l,c
 25601  00A77A  0E00               	movlw	high display_prepare@temp
 25602  00A77C  20F4               	addwfc	prodh,w,c
 25603  00A77E  6EDA               	movwf	fsr2h,c
 25604  00A780  50DF               	movf	indf2,w,c
 25605  00A782  A4D8               	btfss	status,2,c
 25606  00A784  D7DD               	goto	l1420
 25607                           
 25608                           ; BSR set to: 0
 25609                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 25610                           
 25611                           ; BSR set to: 0
 25612  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 25613  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25614  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25615  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25616  00A790  0E00               	movlw	0
 25617  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25618  00A794  0E48               	movlw	low (_display_content+20)
 25619  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 25620  00A798  6ED9               	movwf	fsr2l,c
 25621  00A79A  0E02               	movlw	high (_display_content+20)
 25622  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25623  00A79E  6EDA               	movwf	fsr2h,c
 25624  00A7A0  0E01               	movlw	1
 25625  00A7A2  6EDF               	movwf	indf2,c
 25626                           
 25627                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 25628  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 25629  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25630  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25631  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25632  00A7AE  0E00               	movlw	0
 25633  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25634  00A7B2  0E01               	movlw	1
 25635  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25636  00A7B6  0E00               	movlw	0
 25637  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25638  00A7BA  0E48               	movlw	low (_display_content+20)
 25639  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25640  00A7BE  6ED9               	movwf	fsr2l,c
 25641  00A7C0  0E02               	movlw	high (_display_content+20)
 25642  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25643  00A7C4  6EDA               	movwf	fsr2h,c
 25644  00A7C6  0E29               	movlw	41
 25645  00A7C8  6EDF               	movwf	indf2,c
 25646                           
 25647                           ; BSR set to: 0
 25648                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 25649  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 25650  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 25651  00A7D2  0EBE               	movlw	low display_prepare@temp
 25652  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 25653  00A7D6  0E00               	movlw	high display_prepare@temp
 25654  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 25655  00A7DA  EC75  F0A7         	call	__display_signed_itoa	;wreg free
 25656                           
 25657                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 25658  00A7DE  0E00               	movlw	0
 25659  00A7E0  0100               	movlb	0	; () banked
 25660  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25661  00A7E4  D018               	goto	l1422
 25662  00A7E6                     
 25663                           ; BSR set to: 0
 25664                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 25665                           
 25666                           ; BSR set to: 0
 25667  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25668  00A7E8  0D01               	mullw	1
 25669  00A7EA  0EBE               	movlw	low display_prepare@temp
 25670  00A7EC  24F3               	addwf	prodl,w,c
 25671  00A7EE  6ED9               	movwf	fsr2l,c
 25672  00A7F0  0E00               	movlw	high display_prepare@temp
 25673  00A7F2  20F4               	addwfc	prodh,w,c
 25674  00A7F4  6EDA               	movwf	fsr2h,c
 25675  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25676  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 25677  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25678  00A7FC  0E0B               	movlw	11
 25679  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25680  00A800  0E00               	movlw	0
 25681  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25682  00A804  0E5C               	movlw	low (_display_content+40)
 25683  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 25684  00A808  6EE1               	movwf	fsr1l,c
 25685  00A80A  0E02               	movlw	high (_display_content+40)
 25686  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25687  00A80E  6EE2               	movwf	fsr1h,c
 25688  00A810  CFDF FFE7          	movff	indf2,indf1
 25689                           
 25690                           ; BSR set to: 0
 25691  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25692  00A816                     l1422:
 25693                           
 25694                           ; BSR set to: 0
 25695                           
 25696                           ; BSR set to: 0
 25697  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25698  00A818  0D01               	mullw	1
 25699  00A81A  0EBE               	movlw	low display_prepare@temp
 25700  00A81C  24F3               	addwf	prodl,w,c
 25701  00A81E  6ED9               	movwf	fsr2l,c
 25702  00A820  0E00               	movlw	high display_prepare@temp
 25703  00A822  20F4               	addwfc	prodh,w,c
 25704  00A824  6EDA               	movwf	fsr2h,c
 25705  00A826  50DF               	movf	indf2,w,c
 25706  00A828  B4D8               	btfsc	status,2,c
 25707  00A82A  D3A6               	goto	l1385
 25708  00A82C  D7DC               	goto	l1423
 25709  00A82E                     
 25710                           ; BSR set to: 0
 25711                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 25712                           
 25713                           ; BSR set to: 0
 25714  00A82E  0E34               	movlw	low _display_content
 25715  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 25716  00A832  0E02               	movlw	high _display_content
 25717  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25718  00A836  0EDE               	movlw	low _dc_arc1
 25719  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 25720  00A83A  0E9E               	movlw	high _dc_arc1
 25721  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25722  00A83E  0E00               	movlw	0
 25723  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25724  00A842  0E50               	movlw	80
 25725  00A844  6F64               	movwf	memcpy@n& (0+255),b
 25726  00A846  ECDD  F0A1         	call	_memcpy	;wreg free
 25727                           
 25728                           ;display.c: 416: switch(os.displayState)
 25729  00A84A  D008               	goto	l1426
 25730  00A84C                     
 25731                           ;display.c: 419: display_content[2][12] = '>';
 25732  00A84C  0E3E               	movlw	62
 25733  00A84E  0102               	movlb	2	; () banked
 25734  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 25735                           
 25736                           ;display.c: 420: break;
 25737  00A852  D00C               	goto	l1428
 25738  00A854                     
 25739                           ;display.c: 422: display_content[3][12] = '>';
 25740                           
 25741                           ; BSR set to: 2
 25742  00A854  0E3E               	movlw	62
 25743  00A856  0102               	movlb	2	; () banked
 25744  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 25745                           
 25746                           ; BSR set to: 2
 25747                           ;display.c: 424: }
 25748                           
 25749                           ;display.c: 423: break;
 25750  00A85A  D008               	goto	l1428
 25751  00A85C                     l1426:
 25752                           
 25753                           ; BSR set to: 2
 25754  00A85C  0101               	movlb	1	; () banked
 25755  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25756                           
 25757                           ; Switch size 1, requested type "space"
 25758                           ; Number of cases is 2, Range of values is 81 to 82
 25759                           ; switch strategies available:
 25760                           ; Name         Instructions Cycles
 25761                           ; simple_byte            7     4 (average)
 25762                           ;	Chosen strategy is simple_byte
 25763  00A860  0A51               	xorlw	81	; case 81
 25764  00A862  B4D8               	btfsc	status,2,c
 25765  00A864  D7F3               	goto	l1427
 25766  00A866  0A03               	xorlw	3	; case 82
 25767  00A868  B4D8               	btfsc	status,2,c
 25768  00A86A  D7F4               	goto	l1429
 25769  00A86C                     l1428:
 25770                           
 25771                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 25772                           
 25773                           ; BSR set to: 1
 25774  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25775  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25776  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25777  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25778  00A87C  0E02               	movlw	2
 25779  00A87E  0100               	movlb	0	; () banked
 25780  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25781  00A882  0EBE               	movlw	low display_prepare@temp
 25782  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25783  00A886  0E00               	movlw	high display_prepare@temp
 25784  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25785  00A88A  ECD0  F085         	call	__display_itoa_long	;wreg free
 25786                           
 25787                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 25788  00A88E  0E00               	movlw	0
 25789  00A890  0100               	movlb	0	; () banked
 25790  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25791  00A894  D018               	goto	l1430
 25792  00A896                     
 25793                           ; BSR set to: 0
 25794                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 25795                           
 25796                           ; BSR set to: 0
 25797  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25798  00A898  0D01               	mullw	1
 25799  00A89A  0EBE               	movlw	low display_prepare@temp
 25800  00A89C  24F3               	addwf	prodl,w,c
 25801  00A89E  6ED9               	movwf	fsr2l,c
 25802  00A8A0  0E00               	movlw	high display_prepare@temp
 25803  00A8A2  20F4               	addwfc	prodh,w,c
 25804  00A8A4  6EDA               	movwf	fsr2h,c
 25805  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25806  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 25807  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25808  00A8AC  0E0A               	movlw	10
 25809  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25810  00A8B0  0E00               	movlw	0
 25811  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25812  00A8B4  0E48               	movlw	low (_display_content+20)
 25813  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25814  00A8B8  6EE1               	movwf	fsr1l,c
 25815  00A8BA  0E02               	movlw	high (_display_content+20)
 25816  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25817  00A8BE  6EE2               	movwf	fsr1h,c
 25818  00A8C0  CFDF FFE7          	movff	indf2,indf1
 25819                           
 25820                           ; BSR set to: 0
 25821  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25822  00A8C6                     l1430:
 25823                           
 25824                           ; BSR set to: 0
 25825                           
 25826                           ; BSR set to: 0
 25827  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25828  00A8C8  0D01               	mullw	1
 25829  00A8CA  0EBE               	movlw	low display_prepare@temp
 25830  00A8CC  24F3               	addwf	prodl,w,c
 25831  00A8CE  6ED9               	movwf	fsr2l,c
 25832  00A8D0  0E00               	movlw	high display_prepare@temp
 25833  00A8D2  20F4               	addwfc	prodh,w,c
 25834  00A8D4  6EDA               	movwf	fsr2h,c
 25835  00A8D6  50DF               	movf	indf2,w,c
 25836  00A8D8  A4D8               	btfss	status,2,c
 25837  00A8DA  D7DD               	goto	l1431
 25838                           
 25839                           ; BSR set to: 0
 25840                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 25841                           
 25842                           ; BSR set to: 0
 25843  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25844  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 25845  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25846  00A8E2  0E0A               	movlw	10
 25847  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25848  00A8E6  0E00               	movlw	0
 25849  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25850  00A8EA  0E48               	movlw	low (_display_content+20)
 25851  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25852  00A8EE  6ED9               	movwf	fsr2l,c
 25853  00A8F0  0E02               	movlw	high (_display_content+20)
 25854  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25855  00A8F4  6EDA               	movwf	fsr2h,c
 25856  00A8F6  0E01               	movlw	1
 25857  00A8F8  6EDF               	movwf	indf2,c
 25858                           
 25859                           ; BSR set to: 0
 25860                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 25861  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 25862  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 25863  00A902  0E02               	movlw	2
 25864  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25865  00A906  0EBE               	movlw	low display_prepare@temp
 25866  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 25867  00A90A  0E00               	movlw	high display_prepare@temp
 25868  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25869  00A90E  EC0D  F075         	call	__display_itoa	;wreg free
 25870                           
 25871                           ;display.c: 436: if(os.arc_step_size>999)
 25872  00A912  0EE8               	movlw	232
 25873  00A914  0101               	movlb	1	; () banked
 25874  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 25875  00A918  0E03               	movlw	3
 25876  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 25877  00A91C  A0D8               	btfss	status,0,c
 25878  00A91E  D002               	goto	l1433
 25879                           
 25880                           ; BSR set to: 1
 25881                           ;display.c: 437: space = 0;
 25882  00A920  0E00               	movlw	0
 25883  00A922  D001               	goto	L24
 25884  00A924                     l1433:
 25885                           
 25886                           ;display.c: 438: else;display.c: 439: space = 1;
 25887                           
 25888                           ; BSR set to: 0
 25889  00A924  0E01               	movlw	1
 25890  00A926                     L24:
 25891  00A926  0100               	movlb	0	; () banked
 25892  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 25893                           
 25894                           ; BSR set to: 0
 25895                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 25896  00A92A  0E00               	movlw	0
 25897  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25898  00A92E  D018               	goto	l1435
 25899  00A930                     
 25900                           ; BSR set to: 0
 25901                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 25902                           
 25903                           ; BSR set to: 0
 25904  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25905  00A932  0D01               	mullw	1
 25906  00A934  0EBE               	movlw	low display_prepare@temp
 25907  00A936  24F3               	addwf	prodl,w,c
 25908  00A938  6ED9               	movwf	fsr2l,c
 25909  00A93A  0E00               	movlw	high display_prepare@temp
 25910  00A93C  20F4               	addwfc	prodh,w,c
 25911  00A93E  6EDA               	movwf	fsr2h,c
 25912  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25913  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25914  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25915  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 25916  00A94A  0E00               	movlw	0
 25917  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25918  00A94E  0E70               	movlw	low (_display_content+60)
 25919  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 25920  00A952  6EE1               	movwf	fsr1l,c
 25921  00A954  0E02               	movlw	high (_display_content+60)
 25922  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25923  00A958  6EE2               	movwf	fsr1h,c
 25924  00A95A  CFDF FFE7          	movff	indf2,indf1
 25925                           
 25926                           ; BSR set to: 0
 25927  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25928  00A960                     l1435:
 25929                           
 25930                           ; BSR set to: 0
 25931                           
 25932                           ; BSR set to: 0
 25933  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25934  00A962  0D01               	mullw	1
 25935  00A964  0EBE               	movlw	low display_prepare@temp
 25936  00A966  24F3               	addwf	prodl,w,c
 25937  00A968  6ED9               	movwf	fsr2l,c
 25938  00A96A  0E00               	movlw	high display_prepare@temp
 25939  00A96C  20F4               	addwfc	prodh,w,c
 25940  00A96E  6EDA               	movwf	fsr2h,c
 25941  00A970  50DF               	movf	indf2,w,c
 25942  00A972  A4D8               	btfss	status,2,c
 25943  00A974  D7DD               	goto	l1436
 25944                           
 25945                           ; BSR set to: 0
 25946                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 25947                           
 25948                           ; BSR set to: 0
 25949  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25950  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25951  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25952  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25953  00A980  0E00               	movlw	0
 25954  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25955  00A984  0E70               	movlw	low (_display_content+60)
 25956  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 25957  00A988  6ED9               	movwf	fsr2l,c
 25958  00A98A  0E02               	movlw	high (_display_content+60)
 25959  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25960  00A98E  6EDA               	movwf	fsr2h,c
 25961  00A990  0E01               	movlw	1
 25962  00A992  D25B               	goto	L27
 25963  00A994                     
 25964                           ; BSR set to: 0
 25965                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 25966                           
 25967                           ; BSR set to: 0
 25968  00A994  0E34               	movlw	low _display_content
 25969  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 25970  00A998  0E02               	movlw	high _display_content
 25971  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25972  00A99C  0E8E               	movlw	low _dc_arc2
 25973  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 25974  00A9A0  0E9E               	movlw	high _dc_arc2
 25975  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25976  00A9A4  0E00               	movlw	0
 25977  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25978  00A9A8  0E50               	movlw	80
 25979  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 25980  00A9AC  ECDD  F0A1         	call	_memcpy	;wreg free
 25981                           
 25982                           ;display.c: 450: switch(os.displayState)
 25983  00A9B0  D025               	goto	l1439
 25984  00A9B2                     
 25985                           ;display.c: 453: display_content[2][6] = 'W';
 25986  00A9B2  0E57               	movlw	87
 25987  00A9B4  0102               	movlb	2	; () banked
 25988  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 25989                           
 25990                           ;display.c: 454: display_content[2][7] = ' ';
 25991  00A9B8  0E20               	movlw	32
 25992  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 25993                           
 25994                           ;display.c: 455: break;
 25995  00A9BC  D027               	goto	l1441
 25996  00A9BE                     
 25997                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 25998                           
 25999                           ; BSR set to: 2
 26000  00A9BE  0E5C               	movlw	low (_display_content+40)
 26001  00A9C0  0100               	movlb	0	; () banked
 26002  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 26003  00A9C4  0E02               	movlw	high (_display_content+40)
 26004  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26005  00A9C8  0E14               	movlw	low STR_1
 26006  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26007  00A9CC  0EA3               	movlw	high STR_1
 26008  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26009  00A9D0  0E00               	movlw	0
 26010  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26011  00A9D4  0E08               	movlw	8
 26012  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26013  00A9D8  ECDD  F0A1         	call	_memcpy	;wreg free
 26014                           
 26015                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26016  00A9DC  0E70               	movlw	low (_display_content+60)
 26017  00A9DE  0100               	movlb	0	; () banked
 26018  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26019  00A9E2  0E02               	movlw	high (_display_content+60)
 26020  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26021  00A9E6  0E1D               	movlw	low STR_2
 26022  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26023  00A9EA  0EA3               	movlw	high STR_2
 26024  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26025  00A9EE  0E00               	movlw	0
 26026  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26027  00A9F2  0E06               	movlw	6
 26028  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26029  00A9F6  ECDD  F0A1         	call	_memcpy	;wreg free
 26030                           
 26031                           ;display.c: 460: }
 26032                           
 26033                           ;display.c: 459: break;
 26034  00A9FA  D008               	goto	l1441
 26035  00A9FC                     l1439:
 26036  00A9FC  0101               	movlb	1	; () banked
 26037  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26038                           
 26039                           ; Switch size 1, requested type "space"
 26040                           ; Number of cases is 2, Range of values is 98 to 99
 26041                           ; switch strategies available:
 26042                           ; Name         Instructions Cycles
 26043                           ; simple_byte            7     4 (average)
 26044                           ;	Chosen strategy is simple_byte
 26045  00AA00  0A62               	xorlw	98	; case 98
 26046  00AA02  B4D8               	btfsc	status,2,c
 26047  00AA04  D7DC               	goto	l1442
 26048  00AA06  0A01               	xorlw	1	; case 99
 26049  00AA08  B4D8               	btfsc	status,2,c
 26050  00AA0A  D7D3               	goto	l1440
 26051  00AA0C                     l1441:
 26052                           
 26053                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26054                           
 26055                           ; BSR set to: 1
 26056  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 26057  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 26058  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 26059  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 26060  00AA1C  0E02               	movlw	2
 26061  00AA1E  0100               	movlb	0	; () banked
 26062  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26063  00AA22  0EBE               	movlw	low display_prepare@temp
 26064  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26065  00AA26  0E00               	movlw	high display_prepare@temp
 26066  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26067  00AA2A  ECD0  F085         	call	__display_itoa_long	;wreg free
 26068                           
 26069                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26070  00AA2E  0E00               	movlw	0
 26071  00AA30  0100               	movlb	0	; () banked
 26072  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26073  00AA34  D018               	goto	l1443
 26074  00AA36                     
 26075                           ; BSR set to: 0
 26076                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26077                           
 26078                           ; BSR set to: 0
 26079  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26080  00AA38  0D01               	mullw	1
 26081  00AA3A  0EBE               	movlw	low display_prepare@temp
 26082  00AA3C  24F3               	addwf	prodl,w,c
 26083  00AA3E  6ED9               	movwf	fsr2l,c
 26084  00AA40  0E00               	movlw	high display_prepare@temp
 26085  00AA42  20F4               	addwfc	prodh,w,c
 26086  00AA44  6EDA               	movwf	fsr2h,c
 26087  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26088  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 26089  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26090  00AA4C  0E0A               	movlw	10
 26091  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26092  00AA50  0E00               	movlw	0
 26093  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26094  00AA54  0E34               	movlw	low _display_content
 26095  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 26096  00AA58  6EE1               	movwf	fsr1l,c
 26097  00AA5A  0E02               	movlw	high _display_content
 26098  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26099  00AA5E  6EE2               	movwf	fsr1h,c
 26100  00AA60  CFDF FFE7          	movff	indf2,indf1
 26101                           
 26102                           ; BSR set to: 0
 26103  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26104  00AA66                     l1443:
 26105                           
 26106                           ; BSR set to: 0
 26107                           
 26108                           ; BSR set to: 0
 26109  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26110  00AA68  0D01               	mullw	1
 26111  00AA6A  0EBE               	movlw	low display_prepare@temp
 26112  00AA6C  24F3               	addwf	prodl,w,c
 26113  00AA6E  6ED9               	movwf	fsr2l,c
 26114  00AA70  0E00               	movlw	high display_prepare@temp
 26115  00AA72  20F4               	addwfc	prodh,w,c
 26116  00AA74  6EDA               	movwf	fsr2h,c
 26117  00AA76  50DF               	movf	indf2,w,c
 26118  00AA78  A4D8               	btfss	status,2,c
 26119  00AA7A  D7DD               	goto	l1444
 26120                           
 26121                           ; BSR set to: 0
 26122                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26123                           
 26124                           ; BSR set to: 0
 26125  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26126  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 26127  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26128  00AA82  0E0A               	movlw	10
 26129  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 26130  00AA86  0E00               	movlw	0
 26131  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26132  00AA8A  0E34               	movlw	low _display_content
 26133  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 26134  00AA8E  6ED9               	movwf	fsr2l,c
 26135  00AA90  0E02               	movlw	high _display_content
 26136  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26137  00AA94  6EDA               	movwf	fsr2h,c
 26138  00AA96  0E01               	movlw	1
 26139  00AA98  6EDF               	movwf	indf2,c
 26140                           
 26141                           ; BSR set to: 0
 26142                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26143  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26144  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26145  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26146  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26147  00AAA6  0E02               	movlw	2
 26148  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26149  00AAAA  0EBE               	movlw	low display_prepare@temp
 26150  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26151  00AAAE  0E00               	movlw	high display_prepare@temp
 26152  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26153  00AAB2  ECD0  F085         	call	__display_itoa_long	;wreg free
 26154                           
 26155                           ;display.c: 472: space = 6-strlen(temp);
 26156  00AAB6  0EBE               	movlw	low display_prepare@temp
 26157  00AAB8  0100               	movlb	0	; () banked
 26158  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26159  00AABC  0E00               	movlw	high display_prepare@temp
 26160  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26161  00AAC0  EC3D  F0A8         	call	_strlen	;wreg free
 26162  00AAC4  0100               	movlb	0	; () banked
 26163  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26164  00AAC8  0800               	sublw	0
 26165  00AACA  0F06               	addlw	6
 26166  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26170  00AACE  0E00               	movlw	0
 26171  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26172  00AAD2  D01C               	goto	l1446
 26173  00AAD4                     
 26174                           ; BSR set to: 0
 26175                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26176                           
 26177                           ; BSR set to: 0
 26178  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26179  00AAD6  0D01               	mullw	1
 26180  00AAD8  0EBE               	movlw	low display_prepare@temp
 26181  00AADA  24F3               	addwf	prodl,w,c
 26182  00AADC  6ED9               	movwf	fsr2l,c
 26183  00AADE  0E00               	movlw	high display_prepare@temp
 26184  00AAE0  20F4               	addwfc	prodh,w,c
 26185  00AAE2  6EDA               	movwf	fsr2h,c
 26186  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26187  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26188  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26189  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 26190  00AAEE  0E00               	movlw	0
 26191  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26192  00AAF2  0E0D               	movlw	13
 26193  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26194  00AAF6  0E00               	movlw	0
 26195  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26196  00AAFA  0E48               	movlw	low (_display_content+20)
 26197  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26198  00AAFE  6EE1               	movwf	fsr1l,c
 26199  00AB00  0E02               	movlw	high (_display_content+20)
 26200  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26201  00AB04  6EE2               	movwf	fsr1h,c
 26202  00AB06  CFDF FFE7          	movff	indf2,indf1
 26203                           
 26204                           ; BSR set to: 0
 26205  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26206  00AB0C                     l1446:
 26207                           
 26208                           ; BSR set to: 0
 26209                           
 26210                           ; BSR set to: 0
 26211  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26212  00AB0E  0D01               	mullw	1
 26213  00AB10  0EBE               	movlw	low display_prepare@temp
 26214  00AB12  24F3               	addwf	prodl,w,c
 26215  00AB14  6ED9               	movwf	fsr2l,c
 26216  00AB16  0E00               	movlw	high display_prepare@temp
 26217  00AB18  20F4               	addwfc	prodh,w,c
 26218  00AB1A  6EDA               	movwf	fsr2h,c
 26219  00AB1C  50DF               	movf	indf2,w,c
 26220  00AB1E  A4D8               	btfss	status,2,c
 26221  00AB20  D7D9               	goto	l1447
 26222                           
 26223                           ; BSR set to: 0
 26224                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26225                           
 26226                           ; BSR set to: 0
 26227  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 26228  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 26229  00AB2A  EC32  F0AC         	call	_motor_speed_from_index	;wreg free
 26230  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26231  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26232  00AB36  0E02               	movlw	2
 26233  00AB38  0100               	movlb	0	; () banked
 26234  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26235  00AB3C  0EBE               	movlw	low display_prepare@temp
 26236  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 26237  00AB40  0E00               	movlw	high display_prepare@temp
 26238  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26239  00AB44  EC0D  F075         	call	__display_itoa	;wreg free
 26240                           
 26241                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26242  00AB48  0E00               	movlw	0
 26243  00AB4A  0100               	movlb	0	; () banked
 26244  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26245  00AB4E  D018               	goto	l1449
 26246  00AB50                     
 26247                           ; BSR set to: 0
 26248                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26249                           
 26250                           ; BSR set to: 0
 26251  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26252  00AB52  0D01               	mullw	1
 26253  00AB54  0EBE               	movlw	low display_prepare@temp
 26254  00AB56  24F3               	addwf	prodl,w,c
 26255  00AB58  6ED9               	movwf	fsr2l,c
 26256  00AB5A  0E00               	movlw	high display_prepare@temp
 26257  00AB5C  20F4               	addwfc	prodh,w,c
 26258  00AB5E  6EDA               	movwf	fsr2h,c
 26259  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26260  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 26261  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26262  00AB66  0E0B               	movlw	11
 26263  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 26264  00AB6A  0E00               	movlw	0
 26265  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26266  00AB6E  0E70               	movlw	low (_display_content+60)
 26267  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 26268  00AB72  6EE1               	movwf	fsr1l,c
 26269  00AB74  0E02               	movlw	high (_display_content+60)
 26270  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26271  00AB78  6EE2               	movwf	fsr1h,c
 26272  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26273                           
 26274                           ; BSR set to: 0
 26275  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26276  00AB80                     l1449:
 26277                           
 26278                           ; BSR set to: 0
 26279                           
 26280                           ; BSR set to: 0
 26281  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26282  00AB82  0D01               	mullw	1
 26283  00AB84  0EBE               	movlw	low display_prepare@temp
 26284  00AB86  24F3               	addwf	prodl,w,c
 26285  00AB88  6ED9               	movwf	fsr2l,c
 26286  00AB8A  0E00               	movlw	high display_prepare@temp
 26287  00AB8C  20F4               	addwfc	prodh,w,c
 26288  00AB8E  6EDA               	movwf	fsr2h,c
 26289  00AB90  50DF               	movf	indf2,w,c
 26290  00AB92  A4D8               	btfss	status,2,c
 26291  00AB94  D7DD               	goto	l1450
 26292  00AB96  D12D               	goto	L93
 26293  00AB98                     
 26294                           ; BSR set to: 0
 26295                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26296                           
 26297                           ; BSR set to: 0
 26298  00AB98  0E34               	movlw	low _display_content
 26299  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26300  00AB9C  0E02               	movlw	high _display_content
 26301  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26302  00ABA0  0E3E               	movlw	low _dc_zero
 26303  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26304  00ABA4  0E9E               	movlw	high _dc_zero
 26305  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26306  00ABA8  0E00               	movlw	0
 26307  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26308  00ABAC  0E50               	movlw	80
 26309  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26310  00ABB0  ECDD  F0A1         	call	_memcpy	;wreg free
 26311                           
 26312                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26313  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26314  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26315  00ABBC  0100               	movlb	0	; () banked
 26316  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26317  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26318  00ABC2  0E02               	movlw	2
 26319  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26320  00ABC6  0EBE               	movlw	low display_prepare@temp
 26321  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26322  00ABCA  0E00               	movlw	high display_prepare@temp
 26323  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26324  00ABCE  ECD0  F085         	call	__display_itoa_long	;wreg free
 26325                           
 26326                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26327  00ABD2  0E00               	movlw	0
 26328  00ABD4  0100               	movlb	0	; () banked
 26329  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26330  00ABD8  D018               	goto	l1453
 26331  00ABDA                     
 26332                           ; BSR set to: 0
 26333                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26334                           
 26335                           ; BSR set to: 0
 26336  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26337  00ABDC  0D01               	mullw	1
 26338  00ABDE  0EBE               	movlw	low display_prepare@temp
 26339  00ABE0  24F3               	addwf	prodl,w,c
 26340  00ABE2  6ED9               	movwf	fsr2l,c
 26341  00ABE4  0E00               	movlw	high display_prepare@temp
 26342  00ABE6  20F4               	addwfc	prodh,w,c
 26343  00ABE8  6EDA               	movwf	fsr2h,c
 26344  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26345  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 26346  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26347  00ABF0  0E0D               	movlw	13
 26348  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 26349  00ABF4  0E00               	movlw	0
 26350  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26351  00ABF8  0E48               	movlw	low (_display_content+20)
 26352  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 26353  00ABFC  6EE1               	movwf	fsr1l,c
 26354  00ABFE  0E02               	movlw	high (_display_content+20)
 26355  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26356  00AC02  6EE2               	movwf	fsr1h,c
 26357  00AC04  CFDF FFE7          	movff	indf2,indf1
 26358                           
 26359                           ; BSR set to: 0
 26360  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26361  00AC0A                     l1453:
 26362                           
 26363                           ; BSR set to: 0
 26364                           
 26365                           ; BSR set to: 0
 26366  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26367  00AC0C  0D01               	mullw	1
 26368  00AC0E  0EBE               	movlw	low display_prepare@temp
 26369  00AC10  24F3               	addwf	prodl,w,c
 26370  00AC12  6ED9               	movwf	fsr2l,c
 26371  00AC14  0E00               	movlw	high display_prepare@temp
 26372  00AC16  20F4               	addwfc	prodh,w,c
 26373  00AC18  6EDA               	movwf	fsr2h,c
 26374  00AC1A  50DF               	movf	indf2,w,c
 26375  00AC1C  A4D8               	btfss	status,2,c
 26376  00AC1E  D7DD               	goto	l1454
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26380                           
 26381                           ; BSR set to: 0
 26382  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26383  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 26384  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26385  00AC26  0E0D               	movlw	13
 26386  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 26387  00AC2A  0E00               	movlw	0
 26388  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26389  00AC2E  0E48               	movlw	low (_display_content+20)
 26390  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 26391  00AC32  6ED9               	movwf	fsr2l,c
 26392  00AC34  0E02               	movlw	high (_display_content+20)
 26393  00AC36  D6AA               	goto	L36
 26394  00AC38                     
 26395                           ; BSR set to: 0
 26396                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26397                           
 26398                           ; BSR set to: 0
 26399  00AC38  0E34               	movlw	low _display_content
 26400  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26401  00AC3C  0E02               	movlw	high _display_content
 26402  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26403  00AC40  0EEE               	movlw	low _dc_manual
 26404  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26405  00AC44  0E9D               	movlw	high _dc_manual
 26406  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26407  00AC48  0E00               	movlw	0
 26408  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26409  00AC4C  0E50               	movlw	80
 26410  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26411  00AC50  ECDD  F0A1         	call	_memcpy	;wreg free
 26412                           
 26413                           ;display.c: 509: switch(os.displayState)
 26414  00AC54  D044               	goto	l1457
 26415  00AC56                     
 26416                           ;display.c: 512: display_content[2][6] = 'W';
 26417  00AC56  0E57               	movlw	87
 26418  00AC58  0102               	movlb	2	; () banked
 26419  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 26420                           
 26421                           ;display.c: 513: display_content[2][7] = ' ';
 26422  00AC5C  0E20               	movlw	32
 26423  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 26424                           
 26425                           ;display.c: 514: break;
 26426  00AC60  D049               	goto	l1459
 26427  00AC62                     
 26428                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26429                           
 26430                           ; BSR set to: 2
 26431  00AC62  0E5C               	movlw	low (_display_content+40)
 26432  00AC64  0100               	movlb	0	; () banked
 26433  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26434  00AC68  0E02               	movlw	high (_display_content+40)
 26435  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26436  00AC6C  0E14               	movlw	low STR_1
 26437  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26438  00AC70  0EA3               	movlw	high STR_1
 26439  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26440  00AC74  0E00               	movlw	0
 26441  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26442  00AC78  0E08               	movlw	8
 26443  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26444  00AC7C  ECDD  F0A1         	call	_memcpy	;wreg free
 26445                           
 26446                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26447  00AC80  0E70               	movlw	low (_display_content+60)
 26448  00AC82  0100               	movlb	0	; () banked
 26449  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26450  00AC86  0E02               	movlw	high (_display_content+60)
 26451  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26452  00AC8A  0E1D               	movlw	low STR_2
 26453  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26454  00AC8E  0EA3               	movlw	high STR_2
 26455  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26456  00AC92  0E00               	movlw	0
 26457  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26458  00AC96  0E06               	movlw	6
 26459  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26460  00AC9A  ECDD  F0A1         	call	_memcpy	;wreg free
 26461                           
 26462                           ;display.c: 518: break;
 26463  00AC9E  D02A               	goto	l1459
 26464  00ACA0                     
 26465                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26466  00ACA0  0E5C               	movlw	low (_display_content+40)
 26467  00ACA2  0100               	movlb	0	; () banked
 26468  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26469  00ACA6  0E02               	movlw	high (_display_content+40)
 26470  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26471  00ACAA  0E14               	movlw	low STR_1
 26472  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26473  00ACAE  0EA3               	movlw	high STR_1
 26474  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26475  00ACB2  0E00               	movlw	0
 26476  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26477  00ACB6  0E08               	movlw	8
 26478  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26479  00ACBA  ECDD  F0A1         	call	_memcpy	;wreg free
 26480                           
 26481                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26482  00ACBE  0E70               	movlw	low (_display_content+60)
 26483  00ACC0  0100               	movlb	0	; () banked
 26484  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26485  00ACC4  0E02               	movlw	high (_display_content+60)
 26486  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26487  00ACC8  0E24               	movlw	low STR_6
 26488  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26489  00ACCC  0EA3               	movlw	high STR_6
 26490  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26491  00ACD0  0E00               	movlw	0
 26492  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26493  00ACD4  0E05               	movlw	5
 26494  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26495  00ACD8  ECDD  F0A1         	call	_memcpy	;wreg free
 26496                           
 26497                           ;display.c: 523: }
 26498                           
 26499                           ;display.c: 522: break;
 26500  00ACDC  D00B               	goto	l1459
 26501  00ACDE                     l1457:
 26502  00ACDE  0101               	movlb	1	; () banked
 26503  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26504                           
 26505                           ; Switch size 1, requested type "space"
 26506                           ; Number of cases is 3, Range of values is 130 to 132
 26507                           ; switch strategies available:
 26508                           ; Name         Instructions Cycles
 26509                           ; simple_byte           10     6 (average)
 26510                           ;	Chosen strategy is simple_byte
 26511  00ACE2  0A82               	xorlw	130	; case 130
 26512  00ACE4  B4D8               	btfsc	status,2,c
 26513  00ACE6  D7BD               	goto	l1460
 26514  00ACE8  0A01               	xorlw	1	; case 131
 26515  00ACEA  B4D8               	btfsc	status,2,c
 26516  00ACEC  D7B4               	goto	l1458
 26517  00ACEE  0A07               	xorlw	7	; case 132
 26518  00ACF0  B4D8               	btfsc	status,2,c
 26519  00ACF2  D7D6               	goto	l1461
 26520  00ACF4                     l1459:
 26521                           
 26522                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26523                           
 26524                           ; BSR set to: 1
 26525  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26526  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26527  00ACFC  0100               	movlb	0	; () banked
 26528  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26529  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26530  00AD02  0E02               	movlw	2
 26531  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26532  00AD06  0EBE               	movlw	low display_prepare@temp
 26533  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26534  00AD0A  0E00               	movlw	high display_prepare@temp
 26535  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26536  00AD0E  ECD0  F085         	call	__display_itoa_long	;wreg free
 26537                           
 26538                           ;display.c: 527: space = 7-strlen(temp);
 26539  00AD12  0EBE               	movlw	low display_prepare@temp
 26540  00AD14  0100               	movlb	0	; () banked
 26541  00AD16  6F60               	movwf	strlen@s& (0+255),b
 26542  00AD18  0E00               	movlw	high display_prepare@temp
 26543  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 26544  00AD1C  EC3D  F0A8         	call	_strlen	;wreg free
 26545  00AD20  0100               	movlb	0	; () banked
 26546  00AD22  5160               	movf	?_strlen& (0+255),w,b
 26547  00AD24  0800               	sublw	0
 26548  00AD26  0F07               	addlw	7
 26549  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 26550                           
 26551                           ; BSR set to: 0
 26552                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 26553  00AD2A  0E00               	movlw	0
 26554  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26555  00AD2E  D01C               	goto	l1462
 26556  00AD30                     
 26557                           ; BSR set to: 0
 26558                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 26559                           
 26560                           ; BSR set to: 0
 26561  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26562  00AD32  0D01               	mullw	1
 26563  00AD34  0EBE               	movlw	low display_prepare@temp
 26564  00AD36  24F3               	addwf	prodl,w,c
 26565  00AD38  6ED9               	movwf	fsr2l,c
 26566  00AD3A  0E00               	movlw	high display_prepare@temp
 26567  00AD3C  20F4               	addwfc	prodh,w,c
 26568  00AD3E  6EDA               	movwf	fsr2h,c
 26569  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26570  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26571  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26572  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 26573  00AD4A  0E00               	movlw	0
 26574  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26575  00AD4E  0E0C               	movlw	12
 26576  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 26577  00AD52  0E00               	movlw	0
 26578  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26579  00AD56  0E48               	movlw	low (_display_content+20)
 26580  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 26581  00AD5A  6EE1               	movwf	fsr1l,c
 26582  00AD5C  0E02               	movlw	high (_display_content+20)
 26583  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26584  00AD60  6EE2               	movwf	fsr1h,c
 26585  00AD62  CFDF FFE7          	movff	indf2,indf1
 26586                           
 26587                           ; BSR set to: 0
 26588  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26589  00AD68                     l1462:
 26590                           
 26591                           ; BSR set to: 0
 26592                           
 26593                           ; BSR set to: 0
 26594  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26595  00AD6A  0D01               	mullw	1
 26596  00AD6C  0EBE               	movlw	low display_prepare@temp
 26597  00AD6E  24F3               	addwf	prodl,w,c
 26598  00AD70  6ED9               	movwf	fsr2l,c
 26599  00AD72  0E00               	movlw	high display_prepare@temp
 26600  00AD74  20F4               	addwfc	prodh,w,c
 26601  00AD76  6EDA               	movwf	fsr2h,c
 26602  00AD78  50DF               	movf	indf2,w,c
 26603  00AD7A  A4D8               	btfss	status,2,c
 26604  00AD7C  D7D9               	goto	l1463
 26605                           
 26606                           ; BSR set to: 0
 26607                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 26608                           
 26609                           ; BSR set to: 0
 26610  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 26611  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 26612  00AD86  EC32  F0AC         	call	_motor_speed_from_index	;wreg free
 26613  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26614  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26615  00AD92  0E02               	movlw	2
 26616  00AD94  0100               	movlb	0	; () banked
 26617  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26618  00AD98  0EBE               	movlw	low display_prepare@temp
 26619  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 26620  00AD9C  0E00               	movlw	high display_prepare@temp
 26621  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26622  00ADA0  EC0D  F075         	call	__display_itoa	;wreg free
 26623                           
 26624                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 26625  00ADA4  0E00               	movlw	0
 26626  00ADA6  0100               	movlb	0	; () banked
 26627  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26628  00ADAA  D018               	goto	l1465
 26629  00ADAC                     
 26630                           ; BSR set to: 0
 26631                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 26632                           
 26633                           ; BSR set to: 0
 26634  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26635  00ADAE  0D01               	mullw	1
 26636  00ADB0  0EBE               	movlw	low display_prepare@temp
 26637  00ADB2  24F3               	addwf	prodl,w,c
 26638  00ADB4  6ED9               	movwf	fsr2l,c
 26639  00ADB6  0E00               	movlw	high display_prepare@temp
 26640  00ADB8  20F4               	addwfc	prodh,w,c
 26641  00ADBA  6EDA               	movwf	fsr2h,c
 26642  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26643  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 26644  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26645  00ADC2  0E0B               	movlw	11
 26646  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26647  00ADC6  0E00               	movlw	0
 26648  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26649  00ADCA  0E70               	movlw	low (_display_content+60)
 26650  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26651  00ADCE  6EE1               	movwf	fsr1l,c
 26652  00ADD0  0E02               	movlw	high (_display_content+60)
 26653  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26654  00ADD4  6EE2               	movwf	fsr1h,c
 26655  00ADD6  CFDF FFE7          	movff	indf2,indf1
 26656                           
 26657                           ; BSR set to: 0
 26658  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26659  00ADDC                     l1465:
 26660                           
 26661                           ; BSR set to: 0
 26662                           
 26663                           ; BSR set to: 0
 26664  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26665  00ADDE  0D01               	mullw	1
 26666  00ADE0  0EBE               	movlw	low display_prepare@temp
 26667  00ADE2  24F3               	addwf	prodl,w,c
 26668  00ADE4  6ED9               	movwf	fsr2l,c
 26669  00ADE6  0E00               	movlw	high display_prepare@temp
 26670  00ADE8  20F4               	addwfc	prodh,w,c
 26671  00ADEA  6EDA               	movwf	fsr2h,c
 26672  00ADEC  50DF               	movf	indf2,w,c
 26673  00ADEE  A4D8               	btfss	status,2,c
 26674  00ADF0  D7DD               	goto	l1466
 26675  00ADF2                     L93:
 26676                           
 26677                           ; BSR set to: 0
 26678                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 26679                           
 26680                           ; BSR set to: 0
 26681  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26682  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 26683  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26684  00ADF8  0E0B               	movlw	11
 26685  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 26686  00ADFC  0E00               	movlw	0
 26687  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26688  00AE00  0E70               	movlw	low (_display_content+60)
 26689  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 26690  00AE04  6ED9               	movwf	fsr2l,c
 26691  00AE06  0E02               	movlw	high (_display_content+60)
 26692  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26693  00AE0A  6EDA               	movwf	fsr2h,c
 26694  00AE0C  0E01               	movlw	1
 26695  00AE0E  6EDF               	movwf	indf2,c
 26696                           
 26697                           ;display.c: 540: display_content[3][12+cntr] = '/';
 26698  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26699  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 26700  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26701  00AE16  0E0C               	movlw	12
 26702  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 26703  00AE1A  0E00               	movlw	0
 26704  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26705  00AE1E  0E70               	movlw	low (_display_content+60)
 26706  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 26707  00AE22  6ED9               	movwf	fsr2l,c
 26708  00AE24  0E02               	movlw	high (_display_content+60)
 26709  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26710  00AE28  6EDA               	movwf	fsr2h,c
 26711  00AE2A  0E2F               	movlw	47
 26712  00AE2C  6EDF               	movwf	indf2,c
 26713                           
 26714                           ;display.c: 541: display_content[3][13+cntr] = 's';
 26715  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26716  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 26717  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26718  00AE34  0E0D               	movlw	13
 26719  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 26720  00AE38  0E00               	movlw	0
 26721  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26722  00AE3C  0E70               	movlw	low (_display_content+60)
 26723  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 26724  00AE40  6ED9               	movwf	fsr2l,c
 26725  00AE42  0E02               	movlw	high (_display_content+60)
 26726  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26727  00AE46  6EDA               	movwf	fsr2h,c
 26728  00AE48  0E73               	movlw	115
 26729  00AE4A                     L27:
 26730  00AE4A  6EDF               	movwf	indf2,c
 26731                           
 26732                           ;display.c: 542: break;
 26733  00AE4C  D095               	goto	l1385
 26734  00AE4E                     
 26735                           ; BSR set to: 0
 26736                           ;display.c: 545: _display_clear();
 26737                           
 26738                           ; BSR set to: 0
 26739  00AE4E  ECE5  F0A6         	call	__display_clear	;wreg free
 26740                           
 26741                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 26742  00AE52  0101               	movlb	1	; () banked
 26743  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 26744  00AE56  0100               	movlb	0	; () banked
 26745  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 26746  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26747  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26748  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26749  00AE60  0E00               	movlw	0
 26750  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26751  00AE64  0E34               	movlw	low _display_content
 26752  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 26753  00AE68  0E02               	movlw	high _display_content
 26754  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26755  00AE6C  EC0D  F075         	call	__display_itoa	;wreg free
 26756                           
 26757                           ;display.c: 547: if(PORTEbits.RE2)
 26758  00AE70  A484               	btfss	3972,2,c	;volatile
 26759  00AE72  D002               	goto	l1469
 26760                           
 26761                           ;display.c: 548: display_content[0][8] = 'H';
 26762  00AE74  0E48               	movlw	72
 26763  00AE76  D001               	goto	L31
 26764  00AE78                     l1469:
 26765                           
 26766                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 26767                           
 26768                           ; BSR set to: 2
 26769  00AE78  0E4C               	movlw	76
 26770  00AE7A                     L31:
 26771  00AE7A  0102               	movlb	2	; () banked
 26772  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 26773                           
 26774                           ; BSR set to: 2
 26775                           ;display.c: 551: if(PORTEbits.RE0)
 26776                           
 26777                           ; BSR set to: 2
 26778  00AE7E  A084               	btfss	3972,0,c	;volatile
 26779  00AE80  D002               	goto	l1471
 26780                           
 26781                           ; BSR set to: 2
 26782                           ;display.c: 552: display_content[0][9] = 'H';
 26783  00AE82  0E48               	movlw	72
 26784  00AE84  D001               	goto	L32
 26785  00AE86                     l1471:
 26786                           
 26787                           ; BSR set to: 2
 26788                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 26789                           
 26790                           ; BSR set to: 2
 26791  00AE86  0E4C               	movlw	76
 26792  00AE88                     L32:
 26793  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 26794                           
 26795                           ; BSR set to: 2
 26796                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 26797                           
 26798                           ; BSR set to: 2
 26799  00AE8A  0101               	movlb	1	; () banked
 26800  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 26801  00AE8E  0100               	movlb	0	; () banked
 26802  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 26803  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26804  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26805  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26806  00AE98  0E00               	movlw	0
 26807  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26808  00AE9C  0E48               	movlw	low (_display_content+20)
 26809  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 26810  00AEA0  0E02               	movlw	high (_display_content+20)
 26811  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26812  00AEA4  EC0D  F075         	call	__display_itoa	;wreg free
 26813                           
 26814                           ;display.c: 556: if(PORTEbits.RE1)
 26815  00AEA8  A284               	btfss	3972,1,c	;volatile
 26816  00AEAA  D002               	goto	l1473
 26817                           
 26818                           ;display.c: 557: display_content[1][8] = 'H';
 26819  00AEAC  0E48               	movlw	72
 26820  00AEAE  D001               	goto	L33
 26821  00AEB0                     l1473:
 26822                           
 26823                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 26824                           
 26825                           ; BSR set to: 2
 26826  00AEB0  0E4C               	movlw	76
 26827  00AEB2                     L33:
 26828  00AEB2  0102               	movlb	2	; () banked
 26829  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 26830                           
 26831                           ; BSR set to: 2
 26832                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 26833                           
 26834                           ; BSR set to: 2
 26835  00AEB6  0101               	movlb	1	; () banked
 26836  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 26837  00AEBA  0100               	movlb	0	; () banked
 26838  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 26839  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26840  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26841  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26842  00AEC4  0E00               	movlw	0
 26843  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26844  00AEC8  0E5C               	movlw	low (_display_content+40)
 26845  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 26846  00AECC  0E02               	movlw	high (_display_content+40)
 26847  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26848  00AED0  EC0D  F075         	call	__display_itoa	;wreg free
 26849                           
 26850                           ;display.c: 561: if(PORTAbits.RA0)
 26851  00AED4  A080               	btfss	3968,0,c	;volatile
 26852  00AED6  D002               	goto	l1475
 26853                           
 26854                           ;display.c: 562: display_content[2][8] = 'H';
 26855  00AED8  0E48               	movlw	72
 26856  00AEDA  D001               	goto	L34
 26857  00AEDC                     l1475:
 26858                           
 26859                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 26860                           
 26861                           ; BSR set to: 2
 26862  00AEDC  0E4C               	movlw	76
 26863  00AEDE                     L34:
 26864  00AEDE  0102               	movlb	2	; () banked
 26865  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 26866                           
 26867                           ; BSR set to: 2
 26868                           ;display.c: 565: if(PORTAbits.RA2)
 26869                           
 26870                           ; BSR set to: 2
 26871  00AEE2  A480               	btfss	3968,2,c	;volatile
 26872  00AEE4  D002               	goto	l1477
 26873                           
 26874                           ; BSR set to: 2
 26875                           ;display.c: 566: display_content[2][9] = 'H';
 26876  00AEE6  0E48               	movlw	72
 26877  00AEE8  D001               	goto	L35
 26878  00AEEA                     l1477:
 26879                           
 26880                           ; BSR set to: 2
 26881                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 26882                           
 26883                           ; BSR set to: 2
 26884  00AEEA  0E4C               	movlw	76
 26885  00AEEC                     L35:
 26886  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 26887                           
 26888                           ; BSR set to: 2
 26889                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 26890                           
 26891                           ; BSR set to: 2
 26892  00AEEE  0101               	movlb	1	; () banked
 26893  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 26894  00AEF2  0100               	movlb	0	; () banked
 26895  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 26896  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26897  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26898  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26899  00AEFC  0E00               	movlw	0
 26900  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26901  00AF00  0E70               	movlw	low (_display_content+60)
 26902  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 26903  00AF04  0E02               	movlw	high (_display_content+60)
 26904  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26905  00AF08  EC0D  F075         	call	__display_itoa	;wreg free
 26906                           
 26907                           ;display.c: 570: if(PORTAbits.RA1)
 26908  00AF0C  A280               	btfss	3968,1,c	;volatile
 26909  00AF0E  D002               	goto	l1479
 26910                           
 26911                           ;display.c: 571: display_content[3][8] = 'H';
 26912  00AF10  0E48               	movlw	72
 26913  00AF12  D001               	goto	L28
 26914  00AF14                     l1479:
 26915                           
 26916                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 26917                           
 26918                           ; BSR set to: 2
 26919  00AF14  0E4C               	movlw	76
 26920  00AF16                     L28:
 26921  00AF16  0102               	movlb	2	; () banked
 26922  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 26923                           
 26924                           ; BSR set to: 2
 26925                           ;display.c: 575: }
 26926                           
 26927                           ; BSR set to: 2
 26928                           ;display.c: 574: break;
 26929  00AF1A  D02E               	goto	l1385
 26930  00AF1C                     l1376:
 26931                           
 26932                           ; BSR set to: 2
 26933  00AF1C  0101               	movlb	1	; () banked
 26934  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26935  00AF20  0BF0               	andlw	240
 26936  00AF22  0100               	movlb	0	; () banked
 26937  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 26938  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26939                           
 26940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26941                           ; Switch size 1, requested type "space"
 26942                           ; Number of cases is 1, Range of values is 0 to 0
 26943                           ; switch strategies available:
 26944                           ; Name         Instructions Cycles
 26945                           ; simple_byte            4     3 (average)
 26946                           ;	Chosen strategy is simple_byte
 26947  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 26948  00AF2A  0A00               	xorlw	0	; case 0
 26949  00AF2C  A4D8               	btfss	status,2,c
 26950  00AF2E  D024               	goto	l1385
 26951                           
 26952                           ; BSR set to: 0
 26953                           ; Switch size 1, requested type "space"
 26954                           ; Number of cases is 10, Range of values is 0 to 240
 26955                           ; switch strategies available:
 26956                           ; Name         Instructions Cycles
 26957                           ; simple_byte           31    16 (average)
 26958                           ;	Chosen strategy is simple_byte
 26959  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 26960  00AF32  0A00               	xorlw	0	; case 0
 26961  00AF34  B4D8               	btfsc	status,2,c
 26962  00AF36  EF9A  F051         	goto	l1377
 26963  00AF3A  0A10               	xorlw	16	; case 16
 26964  00AF3C  B4D8               	btfsc	status,2,c
 26965  00AF3E  EFC9  F051         	goto	l1386
 26966  00AF42  0A30               	xorlw	48	; case 32
 26967  00AF44  B4D8               	btfsc	status,2,c
 26968  00AF46  EF1B  F052         	goto	l1396
 26969  00AF4A  0A10               	xorlw	16	; case 48
 26970  00AF4C  B4D8               	btfsc	status,2,c
 26971  00AF4E  EF3F  F052         	goto	l1401
 26972  00AF52  0A70               	xorlw	112	; case 64
 26973  00AF54  B4D8               	btfsc	status,2,c
 26974  00AF56  EFB0  F052         	goto	l1410
 26975  00AF5A  0A10               	xorlw	16	; case 80
 26976  00AF5C  B4D8               	btfsc	status,2,c
 26977  00AF5E  D467               	goto	l1425
 26978  00AF60  0A30               	xorlw	48	; case 96
 26979  00AF62  B4D8               	btfsc	status,2,c
 26980  00AF64  D517               	goto	l1438
 26981  00AF66  0A10               	xorlw	16	; case 112
 26982  00AF68  B4D8               	btfsc	status,2,c
 26983  00AF6A  D616               	goto	l1452
 26984  00AF6C  0AF0               	xorlw	240	; case 128
 26985  00AF6E  B4D8               	btfsc	status,2,c
 26986  00AF70  D663               	goto	l1456
 26987  00AF72  0A70               	xorlw	112	; case 240
 26988  00AF74  B4D8               	btfsc	status,2,c
 26989  00AF76  D76B               	goto	l1468
 26990  00AF78                     l1385:
 26991                           
 26992                           ;display.c: 577: if(!PORTDbits.RD2)
 26993  00AF78  B483               	btfsc	3971,2,c	;volatile
 26994  00AF7A  0012               	return	
 26995                           
 26996                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 26997  00AF7C  0E45               	movlw	69
 26998  00AF7E  0102               	movlb	2	; () banked
 26999  00AF80  6F34               	movwf	_display_content& (0+255),b
 27000                           
 27001                           ;display.c: 580: display_content[0][1] = 'R';
 27002  00AF82  0E52               	movlw	82
 27003  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 27004                           
 27005                           ;display.c: 581: display_content[0][2] = 'R';
 27006  00AF86  0E52               	movlw	82
 27007  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 27008                           
 27009                           ;display.c: 582: display_content[0][3] = 'O';
 27010  00AF8A  0E4F               	movlw	79
 27011  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 27012                           
 27013                           ;display.c: 583: display_content[0][4] = 'R';
 27014  00AF8E  0E52               	movlw	82
 27015  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 27016  00AF92  0012               	return	
 27017  00AF94                     __end_of_display_prepare:
 27018                           	opt stack 0
 27019                           tblptru	equ	0xFF8
 27020                           tblptrh	equ	0xFF7
 27021                           tblptrl	equ	0xFF6
 27022                           tablat	equ	0xFF5
 27023                           prodh	equ	0xFF4
 27024                           prodl	equ	0xFF3
 27025                           intcon	equ	0xFF2
 27026                           postinc0	equ	0xFEE
 27027                           wreg	equ	0xFE8
 27028                           indf1	equ	0xFE7
 27029                           postinc1	equ	0xFE6
 27030                           postdec1	equ	0xFE5
 27031                           plusw1	equ	0xFE3
 27032                           fsr1h	equ	0xFE2
 27033                           fsr1l	equ	0xFE1
 27034                           indf2	equ	0xFDF
 27035                           postinc2	equ	0xFDE
 27036                           postdec2	equ	0xFDD
 27037                           plusw2	equ	0xFDB
 27038                           fsr2h	equ	0xFDA
 27039                           fsr2l	equ	0xFD9
 27040                           status	equ	0xFD8
 27041                           
 27042 ;; *************** function _motor_speed_from_index *****************
 27043 ;; Defined at:
 27044 ;;		line 114 in file "motor.c"
 27045 ;; Parameters:    Size  Location     Type
 27046 ;;  speed_index     2   51[BANK0 ] unsigned int 
 27047 ;; Auto vars:     Size  Location     Type
 27048 ;;		None
 27049 ;; Return value:  Size  Location     Type
 27050 ;;                  2   51[BANK0 ] unsigned int 
 27051 ;; Registers used:
 27052 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27053 ;; Tracked objects:
 27054 ;;		On entry : 0/0
 27055 ;;		On exit  : 0/0
 27056 ;;		Unchanged: 0/0
 27057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27062 ;;Total ram usage:        2 bytes
 27063 ;; Hardware stack levels used:    1
 27064 ;; Hardware stack levels required when called:   12
 27065 ;; This function calls:
 27066 ;;		__motor_get_speed_in_degrees
 27067 ;; This function is called by:
 27068 ;;		_display_prepare
 27069 ;; This function uses a non-reentrant model
 27070 ;;
 27071                           
 27072                           	psect	text104
 27073  015864                     __ptext104:
 27074                           	opt stack 0
 27075  015864                     _motor_speed_from_index:
 27076                           	opt stack 17
 27077                           
 27078                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 27079                           
 27080                           ;incstack = 0
 27081  015864  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27082  015868  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27083  01586C  EC57  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27084  015870  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27085  015874  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27086  015878  0012               	return	
 27087  01587A                     __end_of_motor_speed_from_index:
 27088                           	opt stack 0
 27089                           tblptru	equ	0xFF8
 27090                           tblptrh	equ	0xFF7
 27091                           tblptrl	equ	0xFF6
 27092                           tablat	equ	0xFF5
 27093                           prodh	equ	0xFF4
 27094                           prodl	equ	0xFF3
 27095                           intcon	equ	0xFF2
 27096                           postinc0	equ	0xFEE
 27097                           wreg	equ	0xFE8
 27098                           indf1	equ	0xFE7
 27099                           postinc1	equ	0xFE6
 27100                           postdec1	equ	0xFE5
 27101                           plusw1	equ	0xFE3
 27102                           fsr1h	equ	0xFE2
 27103                           fsr1l	equ	0xFE1
 27104                           indf2	equ	0xFDF
 27105                           postinc2	equ	0xFDE
 27106                           postdec2	equ	0xFDD
 27107                           plusw2	equ	0xFDB
 27108                           fsr2h	equ	0xFDA
 27109                           fsr2l	equ	0xFD9
 27110                           status	equ	0xFD8
 27111                           
 27112 ;; *************** function __motor_get_speed_in_degrees *****************
 27113 ;; Defined at:
 27114 ;;		line 75 in file "motor.c"
 27115 ;; Parameters:    Size  Location     Type
 27116 ;;  speed_index     2   39[BANK0 ] unsigned int 
 27117 ;; Auto vars:     Size  Location     Type
 27118 ;;  lookup          4   47[BANK0 ] unsigned long 
 27119 ;;  speed           4   43[BANK0 ] float 
 27120 ;; Return value:  Size  Location     Type
 27121 ;;                  2   39[BANK0 ] unsigned int 
 27122 ;; Registers used:
 27123 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27124 ;; Tracked objects:
 27125 ;;		On entry : 0/0
 27126 ;;		On exit  : 0/0
 27127 ;;		Unchanged: 0/0
 27128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27130 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27132 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27133 ;;Total ram usage:       12 bytes
 27134 ;; Hardware stack levels used:    1
 27135 ;; Hardware stack levels required when called:   11
 27136 ;; This function calls:
 27137 ;;		___fldiv
 27138 ;;		___fltol
 27139 ;;		___lmul
 27140 ;;		___xxtofl
 27141 ;; This function is called by:
 27142 ;;		_motor_speed_from_index
 27143 ;;		_motor_get_maximum_speed
 27144 ;;		_motor_get_current_speed
 27145 ;; This function uses a non-reentrant model
 27146 ;;
 27147                           
 27148                           	psect	text105
 27149  0104AE                     __ptext105:
 27150                           	opt stack 0
 27151  0104AE                     __motor_get_speed_in_degrees:
 27152                           	opt stack 17
 27153                           
 27154                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 27155                           
 27156                           ;incstack = 0
 27157  0104AE  90D8               	bcf	status,0,c
 27158  0104B0  0100               	movlb	0	; () banked
 27159  0104B2  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27160  0104B4  6EF6               	movwf	tblptrl,c
 27161  0104B6  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27162  0104B8  6EF7               	movwf	tblptrh,c
 27163  0104BA  0E93               	movlw	low _motor_speed_lookup
 27164  0104BC  26F6               	addwf	tblptrl,f,c
 27165  0104BE  0E90               	movlw	high _motor_speed_lookup
 27166  0104C0  22F7               	addwfc	tblptrh,f,c
 27167  0104C2                     	if	1	;There are 3 active tblptr bytes
 27168  0104C2  6AF8               	clrf	tblptru,c
 27169  0104C4  0E00               	movlw	low (__mediumconst shr (0+16))
 27170  0104C6  22F8               	addwfc	tblptru,f,c
 27171  0104C8                     	endif
 27172  0104C8  0009               	tblrd		*+
 27173  0104CA  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 27174  0104CE  0009               	tblrd		*+
 27175  0104D0  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 27176  0104D4  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27177  0104D8  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27178  0104DC  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27179  0104DE  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27180                           
 27181                           ; BSR set to: 0
 27182                           ;motor.c: 81: lookup *= 16;
 27183  0104E0  0E04               	movlw	4
 27184  0104E2                     u14875:
 27185  0104E2  90D8               	bcf	status,0,c
 27186  0104E4  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27187  0104E6  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27188  0104E8  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27189  0104EA  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27190  0104EC  2EE8               	decfsz	wreg,f,c
 27191  0104EE  D7F9               	goto	u14875
 27192                           
 27193                           ; BSR set to: 0
 27194                           ;motor.c: 82: lookup *= 360;
 27195  0104F0  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27196  0104F4  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27197  0104F8  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27198  0104FC  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27199  010500  0E68               	movlw	104
 27200  010502  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27201  010504  0E01               	movlw	1
 27202  010506  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27203  010508  0E00               	movlw	0
 27204  01050A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27205  01050C  0E00               	movlw	0
 27206  01050E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27207  010510  ECFF  F0A3         	call	___lmul	;wreg free
 27208  010514  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27209  010518  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27210  01051C  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27211  010520  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27212                           
 27213                           ;motor.c: 83: lookup *= 100;
 27214  010524  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27215  010528  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27216  01052C  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27217  010530  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27218  010534  0E64               	movlw	100
 27219  010536  0100               	movlb	0	; () banked
 27220  010538  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27221  01053A  0E00               	movlw	0
 27222  01053C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27223  01053E  0E00               	movlw	0
 27224  010540  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27225  010542  0E00               	movlw	0
 27226  010544  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27227  010546  ECFF  F0A3         	call	___lmul	;wreg free
 27228  01054A  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27229  01054E  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27230  010552  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27231  010556  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27232                           
 27233                           ;motor.c: 85: speed = (float) lookup;
 27234  01055A  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27235  01055E  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27236  010562  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27237  010566  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27238  01056A  0E00               	movlw	0
 27239  01056C  EC17  F081         	call	___xxtofl
 27240  010570  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27241  010574  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27242  010578  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27243  01057C  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27244                           
 27245                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 27246  010580  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27247  010584  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27248  010588  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27249  01058C  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27250  010590  C1A1  F060         	movff	_config,___xxtofl@val
 27251  010594  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 27252  010598  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 27253  01059C  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 27254  0105A0  0E00               	movlw	0
 27255  0105A2  EC17  F081         	call	___xxtofl
 27256  0105A6  C060  F072         	movff	?___xxtofl,___fldiv@a
 27257  0105AA  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 27258  0105AE  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 27259  0105B2  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 27260  0105B6  ECD6  F06D         	call	___fldiv	;wreg free
 27261  0105BA  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27262  0105BE  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27263  0105C2  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27264  0105C6  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27265                           
 27266                           ;motor.c: 89: return (uint16_t) speed;
 27267  0105CA  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27268  0105CE  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27269  0105D2  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27270  0105D6  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27271  0105DA  EC62  F090         	call	___fltol	;wreg free
 27272  0105DE  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 27273  0105E2  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27274  0105E6  0012               	return	
 27275  0105E8                     __end_of__motor_get_speed_in_degrees:
 27276                           	opt stack 0
 27277                           tblptru	equ	0xFF8
 27278                           tblptrh	equ	0xFF7
 27279                           tblptrl	equ	0xFF6
 27280                           tablat	equ	0xFF5
 27281                           prodh	equ	0xFF4
 27282                           prodl	equ	0xFF3
 27283                           intcon	equ	0xFF2
 27284                           postinc0	equ	0xFEE
 27285                           wreg	equ	0xFE8
 27286                           indf1	equ	0xFE7
 27287                           postinc1	equ	0xFE6
 27288                           postdec1	equ	0xFE5
 27289                           plusw1	equ	0xFE3
 27290                           fsr1h	equ	0xFE2
 27291                           fsr1l	equ	0xFE1
 27292                           indf2	equ	0xFDF
 27293                           postinc2	equ	0xFDE
 27294                           postdec2	equ	0xFDD
 27295                           plusw2	equ	0xFDB
 27296                           fsr2h	equ	0xFDA
 27297                           fsr2l	equ	0xFD9
 27298                           status	equ	0xFD8
 27299                           
 27300 ;; *************** function ___lmul *****************
 27301 ;; Defined at:
 27302 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 27303 ;; Parameters:    Size  Location     Type
 27304 ;;  multiplier      4    0[BANK0 ] unsigned long 
 27305 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 27306 ;; Auto vars:     Size  Location     Type
 27307 ;;  product         4    8[BANK0 ] unsigned long 
 27308 ;; Return value:  Size  Location     Type
 27309 ;;                  4    0[BANK0 ] unsigned long 
 27310 ;; Registers used:
 27311 ;;		wreg, status,2, status,0
 27312 ;; Tracked objects:
 27313 ;;		On entry : 0/0
 27314 ;;		On exit  : 0/0
 27315 ;;		Unchanged: 0/0
 27316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27317 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27318 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27320 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27321 ;;Total ram usage:       12 bytes
 27322 ;; Hardware stack levels used:    1
 27323 ;; Hardware stack levels required when called:   10
 27324 ;; This function calls:
 27325 ;;		Nothing
 27326 ;; This function is called by:
 27327 ;;		__motor_get_speed_in_degrees
 27328 ;;		_atol
 27329 ;; This function uses a non-reentrant model
 27330 ;;
 27331                           
 27332                           	psect	text106
 27333  0147FE                     __ptext106:
 27334                           	opt stack 0
 27335  0147FE                     ___lmul:
 27336                           	opt stack 16
 27337                           
 27338                           ;incstack = 0
 27339  0147FE  0E00               	movlw	0
 27340  014800  0100               	movlb	0	; () banked
 27341  014802  6F68               	movwf	___lmul@product& (0+255),b
 27342  014804  0E00               	movlw	0
 27343  014806  6F69               	movwf	(___lmul@product+1)& (0+255),b
 27344  014808  0E00               	movlw	0
 27345  01480A  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 27346  01480C  0E00               	movlw	0
 27347  01480E  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 27348  014810                     
 27349                           ; BSR set to: 0
 27350                           
 27351                           ; BSR set to: 0
 27352  014810  A160               	btfss	___lmul@multiplier& (0+255),0,b
 27353  014812  D008               	goto	l2982
 27354                           
 27355                           ; BSR set to: 0
 27356  014814  5164               	movf	___lmul@multiplicand& (0+255),w,b
 27357  014816  2768               	addwf	___lmul@product& (0+255),f,b
 27358  014818  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27359  01481A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 27360  01481C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27361  01481E  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 27362  014820  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27363  014822  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 27364  014824                     l2982:
 27365                           
 27366                           ; BSR set to: 0
 27367                           
 27368                           ; BSR set to: 0
 27369  014824  90D8               	bcf	status,0,c
 27370  014826  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 27371  014828  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27372  01482A  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27373  01482C  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27374                           
 27375                           ; BSR set to: 0
 27376  01482E  90D8               	bcf	status,0,c
 27377  014830  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27378  014832  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27379  014834  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27380  014836  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 27381  014838  5160               	movf	___lmul@multiplier& (0+255),w,b
 27382  01483A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27383  01483C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27384  01483E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27385  014840  A4D8               	btfss	status,2,c
 27386  014842  D7E6               	goto	l2981
 27387                           
 27388                           ; BSR set to: 0
 27389  014844  C068  F060         	movff	___lmul@product,?___lmul
 27390  014848  C069  F061         	movff	___lmul@product+1,?___lmul+1
 27391  01484C  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 27392  014850  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 27393                           
 27394                           ; BSR set to: 0
 27395  014854  0012               	return		;funcret
 27396  014856                     __end_of___lmul:
 27397                           	opt stack 0
 27398                           tblptru	equ	0xFF8
 27399                           tblptrh	equ	0xFF7
 27400                           tblptrl	equ	0xFF6
 27401                           tablat	equ	0xFF5
 27402                           prodh	equ	0xFF4
 27403                           prodl	equ	0xFF3
 27404                           intcon	equ	0xFF2
 27405                           postinc0	equ	0xFEE
 27406                           wreg	equ	0xFE8
 27407                           indf1	equ	0xFE7
 27408                           postinc1	equ	0xFE6
 27409                           postdec1	equ	0xFE5
 27410                           plusw1	equ	0xFE3
 27411                           fsr1h	equ	0xFE2
 27412                           fsr1l	equ	0xFE1
 27413                           indf2	equ	0xFDF
 27414                           postinc2	equ	0xFDE
 27415                           postdec2	equ	0xFDD
 27416                           plusw2	equ	0xFDB
 27417                           fsr2h	equ	0xFDA
 27418                           fsr2l	equ	0xFD9
 27419                           status	equ	0xFD8
 27420                           
 27421 ;; *************** function __display_signed_itoa *****************
 27422 ;; Defined at:
 27423 ;;		line 120 in file "display.c"
 27424 ;; Parameters:    Size  Location     Type
 27425 ;;  value           2   47[BANK0 ] int 
 27426 ;;  text            2   49[BANK0 ] PTR unsigned char 
 27427 ;;		 -> display_prepare@temp(10), 
 27428 ;; Auto vars:     Size  Location     Type
 27429 ;;		None
 27430 ;; Return value:  Size  Location     Type
 27431 ;;                  1    wreg      void 
 27432 ;; Registers used:
 27433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27434 ;; Tracked objects:
 27435 ;;		On entry : 0/0
 27436 ;;		On exit  : 0/0
 27437 ;;		Unchanged: 0/0
 27438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27443 ;;Total ram usage:        4 bytes
 27444 ;; Hardware stack levels used:    1
 27445 ;; Hardware stack levels required when called:   14
 27446 ;; This function calls:
 27447 ;;		__display_padded_itoa
 27448 ;; This function is called by:
 27449 ;;		_display_prepare
 27450 ;; This function uses a non-reentrant model
 27451 ;;
 27452                           
 27453                           	psect	text107
 27454  014EEA                     __ptext107:
 27455                           	opt stack 0
 27456  014EEA                     __display_signed_itoa:
 27457                           	opt stack 15
 27458                           
 27459                           ;display.c: 122: if(value<0)
 27460                           
 27461                           ; BSR set to: 0
 27462                           ;incstack = 0
 27463  014EEA  0100               	movlb	0	; () banked
 27464  014EEC  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 27465  014EEE  D00A               	goto	l1326
 27466                           
 27467                           ; BSR set to: 0
 27468                           ;display.c: 123: {;display.c: 124: value = -value;
 27469  014EF0  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 27470  014EF2  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 27471  014EF4  B0D8               	btfsc	status,0,c
 27472  014EF6  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 27473                           
 27474                           ; BSR set to: 0
 27475                           ;display.c: 125: text[0] = '-';
 27476  014EF8  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27477  014EFC  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27478  014F00  0E2D               	movlw	45
 27479  014F02  D005               	goto	L37
 27480  014F04                     l1326:
 27481                           
 27482                           ; BSR set to: 0
 27483                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 27484                           
 27485                           ; BSR set to: 0
 27486  014F04  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27487  014F08  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27488  014F0C  0E2B               	movlw	43
 27489  014F0E                     L37:
 27490  014F0E  6EDF               	movwf	indf2,c
 27491                           
 27492                           ; BSR set to: 0
 27493                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 27494                           
 27495                           ; BSR set to: 0
 27496  014F10  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 27497  014F14  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 27498  014F18  0E00               	movlw	0
 27499  014F1A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 27500  014F1C  0E01               	movlw	1
 27501  014F1E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 27502  014F20  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 27503  014F22  0E00               	movlw	0
 27504  014F24  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 27505  014F26  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 27506  014F28  EC13  F08F         	call	__display_padded_itoa	;wreg free
 27507  014F2C  0012               	return		;funcret
 27508  014F2E                     __end_of__display_signed_itoa:
 27509                           	opt stack 0
 27510                           tblptru	equ	0xFF8
 27511                           tblptrh	equ	0xFF7
 27512                           tblptrl	equ	0xFF6
 27513                           tablat	equ	0xFF5
 27514                           prodh	equ	0xFF4
 27515                           prodl	equ	0xFF3
 27516                           intcon	equ	0xFF2
 27517                           postinc0	equ	0xFEE
 27518                           wreg	equ	0xFE8
 27519                           indf1	equ	0xFE7
 27520                           postinc1	equ	0xFE6
 27521                           postdec1	equ	0xFE5
 27522                           plusw1	equ	0xFE3
 27523                           fsr1h	equ	0xFE2
 27524                           fsr1l	equ	0xFE1
 27525                           indf2	equ	0xFDF
 27526                           postinc2	equ	0xFDE
 27527                           postdec2	equ	0xFDD
 27528                           plusw2	equ	0xFDB
 27529                           fsr2h	equ	0xFDA
 27530                           fsr2l	equ	0xFD9
 27531                           status	equ	0xFD8
 27532                           
 27533 ;; *************** function __display_padded_itoa *****************
 27534 ;; Defined at:
 27535 ;;		line 98 in file "display.c"
 27536 ;; Parameters:    Size  Location     Type
 27537 ;;  value           2   24[BANK0 ] int 
 27538 ;;  length          1   26[BANK0 ] unsigned char 
 27539 ;;  text            2   27[BANK0 ] PTR unsigned char 
 27540 ;;		 -> display_prepare@temp(10), 
 27541 ;; Auto vars:     Size  Location     Type
 27542 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 27543 ;;  padding         1   46[BANK0 ] unsigned char 
 27544 ;;  pos             1   45[BANK0 ] unsigned char 
 27545 ;;  len             1   44[BANK0 ] unsigned char 
 27546 ;; Return value:  Size  Location     Type
 27547 ;;                  1    wreg      void 
 27548 ;; Registers used:
 27549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27550 ;; Tracked objects:
 27551 ;;		On entry : 0/0
 27552 ;;		On exit  : 0/0
 27553 ;;		Unchanged: 0/0
 27554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27555 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27556 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27557 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27558 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27559 ;;Total ram usage:       23 bytes
 27560 ;; Hardware stack levels used:    1
 27561 ;; Hardware stack levels required when called:   13
 27562 ;; This function calls:
 27563 ;;		_itoa
 27564 ;;		_strlen
 27565 ;; This function is called by:
 27566 ;;		__display_signed_itoa
 27567 ;;		_display_prepare
 27568 ;; This function uses a non-reentrant model
 27569 ;;
 27570                           
 27571                           	psect	text108
 27572  011E26                     __ptext108:
 27573                           	opt stack 0
 27574  011E26                     __display_padded_itoa:
 27575                           	opt stack 15
 27576                           
 27577                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 27578                           
 27579                           ;incstack = 0
 27580  011E26  0E82               	movlw	low __display_padded_itoa@tmp
 27581  011E28  0100               	movlb	0	; () banked
 27582  011E2A  6F70               	movwf	itoa@buf& (0+255),b
 27583  011E2C  0E00               	movlw	high __display_padded_itoa@tmp
 27584  011E2E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27585  011E30  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 27586  011E34  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 27587  011E38  0E00               	movlw	0
 27588  011E3A  6F75               	movwf	(itoa@base+1)& (0+255),b
 27589  011E3C  0E0A               	movlw	10
 27590  011E3E  6F74               	movwf	itoa@base& (0+255),b
 27591  011E40  EC97  F0A7         	call	_itoa	;wreg free
 27592                           
 27593                           ;display.c: 106: len = strlen(tmp);
 27594  011E44  0E82               	movlw	low __display_padded_itoa@tmp
 27595  011E46  0100               	movlb	0	; () banked
 27596  011E48  6F60               	movwf	strlen@s& (0+255),b
 27597  011E4A  0E00               	movlw	high __display_padded_itoa@tmp
 27598  011E4C  6F61               	movwf	(strlen@s+1)& (0+255),b
 27599  011E4E  EC3D  F0A8         	call	_strlen	;wreg free
 27600  011E52  0100               	movlb	0	; () banked
 27601  011E54  5160               	movf	?_strlen& (0+255),w,b
 27602  011E56  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 27603                           
 27604                           ; BSR set to: 0
 27605                           ;display.c: 107: padding = 0;
 27606  011E58  0E00               	movlw	0
 27607  011E5A  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 27608                           
 27609                           ;display.c: 108: while((padding+len)<length)
 27610  011E5C  D00B               	goto	l1317
 27611  011E5E                     
 27612                           ; BSR set to: 0
 27613                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 27614                           
 27615                           ; BSR set to: 0
 27616  011E5E  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27617  011E60  0D01               	mullw	1
 27618  011E62  50F3               	movf	prodl,w,c
 27619  011E64  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27620  011E66  6ED9               	movwf	fsr2l,c
 27621  011E68  50F4               	movf	prodh,w,c
 27622  011E6A  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27623  011E6C  6EDA               	movwf	fsr2h,c
 27624  011E6E  0E20               	movlw	32
 27625  011E70  6EDF               	movwf	indf2,c
 27626                           
 27627                           ; BSR set to: 0
 27628                           ;display.c: 111: ++padding;
 27629  011E72  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 27630  011E74                     l1317:
 27631                           
 27632                           ; BSR set to: 0
 27633                           
 27634                           ; BSR set to: 0
 27635  011E74  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 27636  011E76  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 27637  011E78  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27638  011E7A  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 27639  011E7C  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 27640  011E80  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 27641  011E82  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 27642  011E84  0E00               	movlw	0
 27643  011E86  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 27644  011E88  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27645  011E8A  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 27646  011E8C  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 27647  011E8E  0A80               	xorlw	128
 27648  011E90  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 27649  011E92  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27650  011E94  0A80               	xorlw	128
 27651  011E96  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 27652  011E98  A0D8               	btfss	status,0,c
 27653  011E9A  D7E1               	goto	l1318
 27654                           
 27655                           ; BSR set to: 0
 27656                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 27657                           
 27658                           ; BSR set to: 0
 27659  011E9C  0E00               	movlw	0
 27660  011E9E  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 27661  011EA0  D018               	goto	l1320
 27662  011EA2                     
 27663                           ; BSR set to: 0
 27664                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 27665                           
 27666                           ; BSR set to: 0
 27667  011EA2  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27668  011EA4  0D01               	mullw	1
 27669  011EA6  0E82               	movlw	low __display_padded_itoa@tmp
 27670  011EA8  24F3               	addwf	prodl,w,c
 27671  011EAA  6ED9               	movwf	fsr2l,c
 27672  011EAC  0E00               	movlw	high __display_padded_itoa@tmp
 27673  011EAE  20F4               	addwfc	prodh,w,c
 27674  011EB0  6EDA               	movwf	fsr2h,c
 27675  011EB2  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27676  011EB4  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27677  011EB8  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27678  011EBA  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27679  011EBC  0E00               	movlw	0
 27680  011EBE  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27681  011EC0  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27682  011EC2  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27683  011EC4  6EE1               	movwf	fsr1l,c
 27684  011EC6  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27685  011EC8  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27686  011ECA  6EE2               	movwf	fsr1h,c
 27687  011ECC  CFDF FFE7          	movff	indf2,indf1
 27688                           
 27689                           ; BSR set to: 0
 27690  011ED0  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 27691  011ED2                     l1320:
 27692                           
 27693                           ; BSR set to: 0
 27694                           
 27695                           ; BSR set to: 0
 27696  011ED2  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27697  011ED4  0D01               	mullw	1
 27698  011ED6  0E82               	movlw	low __display_padded_itoa@tmp
 27699  011ED8  24F3               	addwf	prodl,w,c
 27700  011EDA  6ED9               	movwf	fsr2l,c
 27701  011EDC  0E00               	movlw	high __display_padded_itoa@tmp
 27702  011EDE  20F4               	addwfc	prodh,w,c
 27703  011EE0  6EDA               	movwf	fsr2h,c
 27704  011EE2  50DF               	movf	indf2,w,c
 27705  011EE4  A4D8               	btfss	status,2,c
 27706  011EE6  D7DD               	goto	l1321
 27707                           
 27708                           ; BSR set to: 0
 27709                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 27710                           
 27711                           ; BSR set to: 0
 27712  011EE8  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27713  011EEA  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27714  011EEE  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27715  011EF0  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27716  011EF2  0E00               	movlw	0
 27717  011EF4  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27718  011EF6  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27719  011EF8  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27720  011EFA  6ED9               	movwf	fsr2l,c
 27721  011EFC  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27722  011EFE  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27723  011F00  6EDA               	movwf	fsr2h,c
 27724  011F02  0E00               	movlw	0
 27725  011F04  6EDF               	movwf	indf2,c
 27726                           
 27727                           ; BSR set to: 0
 27728  011F06  0012               	return		;funcret
 27729  011F08                     __end_of__display_padded_itoa:
 27730                           	opt stack 0
 27731                           tblptru	equ	0xFF8
 27732                           tblptrh	equ	0xFF7
 27733                           tblptrl	equ	0xFF6
 27734                           tablat	equ	0xFF5
 27735                           prodh	equ	0xFF4
 27736                           prodl	equ	0xFF3
 27737                           intcon	equ	0xFF2
 27738                           postinc0	equ	0xFEE
 27739                           wreg	equ	0xFE8
 27740                           indf1	equ	0xFE7
 27741                           postinc1	equ	0xFE6
 27742                           postdec1	equ	0xFE5
 27743                           plusw1	equ	0xFE3
 27744                           fsr1h	equ	0xFE2
 27745                           fsr1l	equ	0xFE1
 27746                           indf2	equ	0xFDF
 27747                           postinc2	equ	0xFDE
 27748                           postdec2	equ	0xFDD
 27749                           plusw2	equ	0xFDB
 27750                           fsr2h	equ	0xFDA
 27751                           fsr2l	equ	0xFD9
 27752                           status	equ	0xFD8
 27753                           
 27754 ;; *************** function __display_itoa_long *****************
 27755 ;; Defined at:
 27756 ;;		line 202 in file "display.c"
 27757 ;; Parameters:    Size  Location     Type
 27758 ;;  value           4   77[BANK0 ] long 
 27759 ;;  decimals        1   81[BANK0 ] unsigned char 
 27760 ;;  text            2   82[BANK0 ] PTR unsigned char 
 27761 ;;		 -> display_prepare@temp(10), 
 27762 ;; Auto vars:     Size  Location     Type
 27763 ;;  short_value     2   89[BANK0 ] int 
 27764 ;;  last_digit      1   91[BANK0 ] char 
 27765 ;;  length          1   88[BANK0 ] unsigned char 
 27766 ;; Return value:  Size  Location     Type
 27767 ;;                  1    wreg      void 
 27768 ;; Registers used:
 27769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27770 ;; Tracked objects:
 27771 ;;		On entry : 0/0
 27772 ;;		On exit  : 0/0
 27773 ;;		Unchanged: 0/0
 27774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27775 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27776 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27778 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27779 ;;Total ram usage:       15 bytes
 27780 ;; Hardware stack levels used:    1
 27781 ;; Hardware stack levels required when called:   14
 27782 ;; This function calls:
 27783 ;;		___aldiv
 27784 ;;		___almod
 27785 ;;		__display_itoa
 27786 ;;		_strlen
 27787 ;; This function is called by:
 27788 ;;		_display_prepare
 27789 ;; This function uses a non-reentrant model
 27790 ;;
 27791                           
 27792                           	psect	text109
 27793  010BA0                     __ptext109:
 27794                           	opt stack 0
 27795  010BA0                     __display_itoa_long:
 27796                           	opt stack 15
 27797                           
 27798                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 27799                           
 27800                           ; BSR set to: 0
 27801                           ;incstack = 0
 27802  010BA0  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 27803  010BA4  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 27804                           
 27805                           ;display.c: 209: if(short_value==value)
 27806  010BA8  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 27807  010BAC  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 27808  010BB0  0E00               	movlw	0
 27809  010BB2  0100               	movlb	0	; () banked
 27810  010BB4  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 27811  010BB6  0EFF               	movlw	255
 27812  010BB8  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 27813  010BBA  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 27814  010BBC  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 27815  010BBE  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 27816  010BC0  E117               	bnz	l17128
 27817  010BC2  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 27818  010BC4  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 27819  010BC6  E114               	bnz	l17128
 27820  010BC8  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 27821  010BCA  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 27822  010BCC  E111               	bnz	l17128
 27823  010BCE  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 27824  010BD0  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 27825  010BD2  A4D8               	btfss	status,2,c
 27826  010BD4  D00D               	goto	l1353
 27827                           
 27828                           ; BSR set to: 0
 27829                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 27830  010BD6  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27831  010BDA  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27832  010BDE  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 27833  010BE2  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27834  010BE6  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27835  010BEA  EC0D  F075         	call	__display_itoa	;wreg free
 27836                           
 27837                           ;display.c: 212: }
 27838  010BEE  0012               	return	
 27839  010BF0                     l1353:
 27840  010BF0                     l17128:
 27841                           
 27842                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 27843  010BF0  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 27844  010BF4  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 27845  010BF8  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 27846  010BFC  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 27847  010C00  0E0A               	movlw	10
 27848  010C02  0100               	movlb	0	; () banked
 27849  010C04  6F64               	movwf	___aldiv@divisor& (0+255),b
 27850  010C06  0E00               	movlw	0
 27851  010C08  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 27852  010C0A  0E00               	movlw	0
 27853  010C0C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 27854  010C0E  0E00               	movlw	0
 27855  010C10  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 27856  010C12  ECBB  F093         	call	___aldiv	;wreg free
 27857  010C16  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 27858  010C1A  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 27859                           
 27860                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 27861  010C1E  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27862  010C22  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27863  010C26  0100               	movlb	0	; () banked
 27864  010C28  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 27865  010C2A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27866  010C2C  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27867  010C30  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27868  010C34  EC0D  F075         	call	__display_itoa	;wreg free
 27869                           
 27870                           ;display.c: 217: length = strlen(text);
 27871  010C38  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 27872  010C3C  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 27873  010C40  EC3D  F0A8         	call	_strlen	;wreg free
 27874  010C44  0100               	movlb	0	; () banked
 27875  010C46  5160               	movf	?_strlen& (0+255),w,b
 27876  010C48  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 27877                           
 27878                           ; BSR set to: 0
 27879                           ;display.c: 218: last_digit = value % 10;
 27880  010C4A  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 27881  010C4E  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 27882  010C52  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 27883  010C56  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 27884  010C5A  0E0A               	movlw	10
 27885  010C5C  6F64               	movwf	___almod@divisor& (0+255),b
 27886  010C5E  0E00               	movlw	0
 27887  010C60  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 27888  010C62  0E00               	movlw	0
 27889  010C64  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 27890  010C66  0E00               	movlw	0
 27891  010C68  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 27892  010C6A  EC0A  F097         	call	___almod	;wreg free
 27893  010C6E  0100               	movlb	0	; () banked
 27894  010C70  5160               	movf	?___almod& (0+255),w,b
 27895  010C72  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 27896                           
 27897                           ; BSR set to: 0
 27898                           ;display.c: 219: if(last_digit<0)
 27899  010C74  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 27900                           
 27901                           ; BSR set to: 0
 27902                           ;display.c: 220: last_digit = -last_digit;
 27903  010C76  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 27904                           
 27905                           ; BSR set to: 0
 27906                           ;display.c: 221: text[length] = last_digit + 0x30;
 27907                           
 27908                           ; BSR set to: 0
 27909  010C78  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27910  010C7A  0D01               	mullw	1
 27911  010C7C  50F3               	movf	prodl,w,c
 27912  010C7E  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27913  010C80  6ED9               	movwf	fsr2l,c
 27914  010C82  50F4               	movf	prodh,w,c
 27915  010C84  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27916  010C86  6EDA               	movwf	fsr2h,c
 27917  010C88  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 27918  010C8A  0F30               	addlw	48
 27919  010C8C  6EDF               	movwf	indf2,c
 27920                           
 27921                           ; BSR set to: 0
 27922                           ;display.c: 222: text[length+1] = 0x00;
 27923  010C8E  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27924  010C90  6FB4               	movwf	??__display_itoa_long& (0+255),b
 27925  010C92  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 27926  010C94  0E01               	movlw	1
 27927  010C96  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 27928  010C98  0E00               	movlw	0
 27929  010C9A  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 27930  010C9C  51B4               	movf	??__display_itoa_long& (0+255),w,b
 27931  010C9E  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27932  010CA0  6ED9               	movwf	fsr2l,c
 27933  010CA2  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 27934  010CA4  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27935  010CA6  6EDA               	movwf	fsr2h,c
 27936  010CA8  0E00               	movlw	0
 27937  010CAA  6EDF               	movwf	indf2,c
 27938  010CAC  0012               	return	
 27939  010CAE                     __end_of__display_itoa_long:
 27940                           	opt stack 0
 27941                           tblptru	equ	0xFF8
 27942                           tblptrh	equ	0xFF7
 27943                           tblptrl	equ	0xFF6
 27944                           tablat	equ	0xFF5
 27945                           prodh	equ	0xFF4
 27946                           prodl	equ	0xFF3
 27947                           intcon	equ	0xFF2
 27948                           postinc0	equ	0xFEE
 27949                           wreg	equ	0xFE8
 27950                           indf1	equ	0xFE7
 27951                           postinc1	equ	0xFE6
 27952                           postdec1	equ	0xFE5
 27953                           plusw1	equ	0xFE3
 27954                           fsr1h	equ	0xFE2
 27955                           fsr1l	equ	0xFE1
 27956                           indf2	equ	0xFDF
 27957                           postinc2	equ	0xFDE
 27958                           postdec2	equ	0xFDD
 27959                           plusw2	equ	0xFDB
 27960                           fsr2h	equ	0xFDA
 27961                           fsr2l	equ	0xFD9
 27962                           status	equ	0xFD8
 27963                           
 27964 ;; *************** function __display_itoa *****************
 27965 ;; Defined at:
 27966 ;;		line 134 in file "display.c"
 27967 ;; Parameters:    Size  Location     Type
 27968 ;;  value           2   53[BANK0 ] int 
 27969 ;;  decimals        1   55[BANK0 ] unsigned char 
 27970 ;;  text            2   56[BANK0 ] PTR unsigned char 
 27971 ;;		 -> display_prepare@temp(10), display_content(80), 
 27972 ;; Auto vars:     Size  Location     Type
 27973 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 27974 ;;  pos             1   76[BANK0 ] unsigned char 
 27975 ;;  missing         1   75[BANK0 ] char 
 27976 ;;  len             1   74[BANK0 ] unsigned char 
 27977 ;; Return value:  Size  Location     Type
 27978 ;;                  1    wreg      void 
 27979 ;; Registers used:
 27980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27981 ;; Tracked objects:
 27982 ;;		On entry : 0/0
 27983 ;;		On exit  : 0/0
 27984 ;;		Unchanged: 0/0
 27985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27986 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27987 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27988 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27989 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27990 ;;Total ram usage:       24 bytes
 27991 ;; Hardware stack levels used:    1
 27992 ;; Hardware stack levels required when called:   13
 27993 ;; This function calls:
 27994 ;;		_itoa
 27995 ;;		_strlen
 27996 ;; This function is called by:
 27997 ;;		__display_itoa_long
 27998 ;;		_display_prepare
 27999 ;; This function uses a non-reentrant model
 28000 ;;
 28001                           
 28002                           	psect	text110
 28003  00EA1A                     __ptext110:
 28004                           	opt stack 0
 28005  00EA1A                     __display_itoa:
 28006                           	opt stack 15
 28007                           
 28008                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28009                           
 28010                           ;incstack = 0
 28011  00EA1A  0EA0               	movlw	low __display_itoa@tmp
 28012  00EA1C  0100               	movlb	0	; () banked
 28013  00EA1E  6F70               	movwf	itoa@buf& (0+255),b
 28014  00EA20  0E00               	movlw	high __display_itoa@tmp
 28015  00EA22  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28016  00EA24  C095  F072         	movff	__display_itoa@value,itoa@val
 28017  00EA28  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 28018  00EA2C  0E00               	movlw	0
 28019  00EA2E  6F75               	movwf	(itoa@base+1)& (0+255),b
 28020  00EA30  0E0A               	movlw	10
 28021  00EA32  6F74               	movwf	itoa@base& (0+255),b
 28022  00EA34  EC97  F0A7         	call	_itoa	;wreg free
 28023                           
 28024                           ;display.c: 141: len = strlen(tmp);
 28025  00EA38  0EA0               	movlw	low __display_itoa@tmp
 28026  00EA3A  0100               	movlb	0	; () banked
 28027  00EA3C  6F60               	movwf	strlen@s& (0+255),b
 28028  00EA3E  0E00               	movlw	high __display_itoa@tmp
 28029  00EA40  6F61               	movwf	(strlen@s+1)& (0+255),b
 28030  00EA42  EC3D  F0A8         	call	_strlen	;wreg free
 28031  00EA46  0100               	movlb	0	; () banked
 28032  00EA48  5160               	movf	?_strlen& (0+255),w,b
 28033  00EA4A  6FAA               	movwf	__display_itoa@len& (0+255),b
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;display.c: 143: if(value<0)
 28037  00EA4C  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28038  00EA4E  D054               	goto	l1331
 28039                           
 28040                           ; BSR set to: 0
 28041                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 28042  00EA50  51AA               	movf	__display_itoa@len& (0+255),w,b
 28043  00EA52  0800               	sublw	0
 28044  00EA54  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28045  00EA56  0F02               	addlw	2
 28046  00EA58  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28047                           
 28048                           ;display.c: 146: if(missing>0)
 28049  00EA5A  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28050  00EA5C  0A80               	xorlw	128
 28051  00EA5E  0F7F               	addlw	-129
 28052  00EA60  A0D8               	btfss	status,0,c
 28053  00EA62  D090               	goto	l1338
 28054                           
 28055                           ; BSR set to: 0
 28056                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 28057  00EA64  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28058  00EA68                     l15444:
 28059                           
 28060                           ; BSR set to: 0
 28061  00EA68  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28062  00EA6A  B4D8               	btfsc	status,2,c
 28063  00EA6C  D042               	goto	u14230
 28064                           
 28065                           ; BSR set to: 0
 28066                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 28067                           
 28068                           ; BSR set to: 0
 28069                           
 28070                           ; BSR set to: 0
 28071  00EA6E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28072  00EA70  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28073  00EA72  D004               	goto	u14220
 28074  00EA74  0AFF               	xorlw	255
 28075  00EA76  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28076  00EA78  B0D8               	btfsc	status,0,c
 28077  00EA7A  D02A               	goto	l1335
 28078  00EA7C                     u14220:
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 28082  00EA7C  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28083  00EA80  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28084  00EA82  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28085  00EA84  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28086  00EA86  1F9A               	comf	??__display_itoa& (0+255),f,b
 28087  00EA88  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28088  00EA8A  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28089  00EA8C  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28090  00EA8E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28091  00EA90  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28092  00EA92  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28093  00EA94  519A               	movf	??__display_itoa& (0+255),w,b
 28094  00EA96  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28095  00EA98  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28096  00EA9A  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28097  00EA9C  0E01               	movlw	1
 28098  00EA9E  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28099  00EAA0  0E00               	movlw	0
 28100  00EAA2  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28101  00EAA4  0EA0               	movlw	low __display_itoa@tmp
 28102  00EAA6  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28103  00EAA8  6ED9               	movwf	fsr2l,c
 28104  00EAAA  0E00               	movlw	high __display_itoa@tmp
 28105  00EAAC  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28106  00EAAE  6EDA               	movwf	fsr2h,c
 28107  00EAB0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28108  00EAB2  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 28109  00EAB4  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 28110  00EAB6  0E01               	movlw	1
 28111  00EAB8  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 28112  00EABA  0E00               	movlw	0
 28113  00EABC  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 28114  00EABE  0EA0               	movlw	low __display_itoa@tmp
 28115  00EAC0  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 28116  00EAC2  6EE1               	movwf	fsr1l,c
 28117  00EAC4  0E00               	movlw	high __display_itoa@tmp
 28118  00EAC6  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 28119  00EAC8  6EE2               	movwf	fsr1h,c
 28120  00EACA  CFDF FFE7          	movff	indf2,indf1
 28121                           
 28122                           ;display.c: 153: }
 28123  00EACE  D00F               	goto	l1336
 28124  00EAD0                     l1335:
 28125                           
 28126                           ; BSR set to: 0
 28127                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 28128                           
 28129                           ; BSR set to: 0
 28130  00EAD0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28131  00EAD2  6F9A               	movwf	??__display_itoa& (0+255),b
 28132  00EAD4  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28133  00EAD6  0E01               	movlw	1
 28134  00EAD8  279A               	addwf	??__display_itoa& (0+255),f,b
 28135  00EADA  0E00               	movlw	0
 28136  00EADC  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28137  00EADE  0EA0               	movlw	low __display_itoa@tmp
 28138  00EAE0  259A               	addwf	??__display_itoa& (0+255),w,b
 28139  00EAE2  6ED9               	movwf	fsr2l,c
 28140  00EAE4  0E00               	movlw	high __display_itoa@tmp
 28141  00EAE6  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 28142  00EAE8  6EDA               	movwf	fsr2h,c
 28143  00EAEA  0E30               	movlw	48
 28144  00EAEC  6EDF               	movwf	indf2,c
 28145  00EAEE                     l1336:
 28146                           
 28147                           ; BSR set to: 0
 28148                           
 28149                           ; BSR set to: 0
 28150  00EAEE  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28151  00EAF0  D7BB               	goto	l15444
 28152  00EAF2                     u14230:
 28153                           
 28154                           ; BSR set to: 0
 28155                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 28156                           
 28157                           ; BSR set to: 0
 28158  00EAF2  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28159  00EAF4  0F02               	addlw	2
 28160  00EAF6  D045               	goto	L38
 28161  00EAF8                     l1331:
 28162                           
 28163                           ; BSR set to: 0
 28164                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 28165                           
 28166                           ; BSR set to: 0
 28167  00EAF8  51AA               	movf	__display_itoa@len& (0+255),w,b
 28168  00EAFA  0800               	sublw	0
 28169  00EAFC  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28170  00EAFE  6F9A               	movwf	??__display_itoa& (0+255),b
 28171  00EB00  299A               	incf	??__display_itoa& (0+255),w,b
 28172  00EB02  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28173                           
 28174                           ;display.c: 165: if(missing>0)
 28175  00EB04  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28176  00EB06  0A80               	xorlw	128
 28177  00EB08  0F7F               	addlw	-129
 28178  00EB0A  A0D8               	btfss	status,0,c
 28179  00EB0C  D03B               	goto	l1338
 28180                           
 28181                           ; BSR set to: 0
 28182                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 28183  00EB0E  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28184  00EB12                     l15464:
 28185                           
 28186                           ; BSR set to: 0
 28187  00EB12  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28188  00EB14  B4D8               	btfsc	status,2,c
 28189  00EB16  D034               	goto	u14270
 28190                           
 28191                           ; BSR set to: 0
 28192                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 28193                           
 28194                           ; BSR set to: 0
 28195                           
 28196                           ; BSR set to: 0
 28197  00EB18  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28198  00EB1A  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28199  00EB1C  D004               	goto	u14260
 28200  00EB1E  0AFF               	xorlw	255
 28201  00EB20  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28202  00EB22  B0D8               	btfsc	status,0,c
 28203  00EB24  D021               	goto	l1341
 28204  00EB26                     u14260:
 28205                           
 28206                           ; BSR set to: 0
 28207                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 28208  00EB26  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28209  00EB2A  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28210  00EB2C  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28211  00EB2E  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28212  00EB30  1F9A               	comf	??__display_itoa& (0+255),f,b
 28213  00EB32  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28214  00EB34  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28215  00EB36  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28216  00EB38  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28217  00EB3A  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28218  00EB3C  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28219  00EB3E  519A               	movf	??__display_itoa& (0+255),w,b
 28220  00EB40  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28221  00EB42  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28222  00EB44  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28223  00EB46  0EA0               	movlw	low __display_itoa@tmp
 28224  00EB48  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28225  00EB4A  6ED9               	movwf	fsr2l,c
 28226  00EB4C  0E00               	movlw	high __display_itoa@tmp
 28227  00EB4E  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28228  00EB50  6EDA               	movwf	fsr2h,c
 28229  00EB52  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28230  00EB54  0D01               	mullw	1
 28231  00EB56  0EA0               	movlw	low __display_itoa@tmp
 28232  00EB58  24F3               	addwf	prodl,w,c
 28233  00EB5A  6EE1               	movwf	fsr1l,c
 28234  00EB5C  0E00               	movlw	high __display_itoa@tmp
 28235  00EB5E  20F4               	addwfc	prodh,w,c
 28236  00EB60  6EE2               	movwf	fsr1h,c
 28237  00EB62  CFDF FFE7          	movff	indf2,indf1
 28238                           
 28239                           ;display.c: 172: }
 28240  00EB66  D00A               	goto	l1342
 28241  00EB68                     l1341:
 28242                           
 28243                           ; BSR set to: 0
 28244                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 28245                           
 28246                           ; BSR set to: 0
 28247  00EB68  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28248  00EB6A  0D01               	mullw	1
 28249  00EB6C  0EA0               	movlw	low __display_itoa@tmp
 28250  00EB6E  24F3               	addwf	prodl,w,c
 28251  00EB70  6ED9               	movwf	fsr2l,c
 28252  00EB72  0E00               	movlw	high __display_itoa@tmp
 28253  00EB74  20F4               	addwfc	prodh,w,c
 28254  00EB76  6EDA               	movwf	fsr2h,c
 28255  00EB78  0E30               	movlw	48
 28256  00EB7A  6EDF               	movwf	indf2,c
 28257  00EB7C                     l1342:
 28258                           
 28259                           ; BSR set to: 0
 28260                           
 28261                           ; BSR set to: 0
 28262  00EB7C  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28263  00EB7E  D7C9               	goto	l15464
 28264  00EB80                     u14270:
 28265                           
 28266                           ; BSR set to: 0
 28267                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 28268                           
 28269                           ; BSR set to: 0
 28270  00EB80  2997               	incf	__display_itoa@decimals& (0+255),w,b
 28271  00EB82                     L38:
 28272  00EB82  6FAA               	movwf	__display_itoa@len& (0+255),b
 28273  00EB84                     l1338:
 28274                           
 28275                           ; BSR set to: 0
 28276                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 28277                           
 28278                           ; BSR set to: 0
 28279  00EB84  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28280  00EB86  0800               	sublw	0
 28281  00EB88  25AA               	addwf	__display_itoa@len& (0+255),w,b
 28282  00EB8A  6F9A               	movwf	??__display_itoa& (0+255),b
 28283  00EB8C  059A               	decf	??__display_itoa& (0+255),w,b
 28284  00EB8E  6F97               	movwf	__display_itoa@decimals& (0+255),b
 28285                           
 28286                           ; BSR set to: 0
 28287                           ;display.c: 184: for(pos=0;pos<len;++pos)
 28288  00EB90  0E00               	movlw	0
 28289  00EB92  6FAC               	movwf	__display_itoa@pos& (0+255),b
 28290  00EB94  D023               	goto	l1343
 28291  00EB96                     
 28292                           ; BSR set to: 0
 28293                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 28294                           
 28295                           ; BSR set to: 0
 28296  00EB96  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28297  00EB98  0D01               	mullw	1
 28298  00EB9A  0EA0               	movlw	low __display_itoa@tmp
 28299  00EB9C  24F3               	addwf	prodl,w,c
 28300  00EB9E  6ED9               	movwf	fsr2l,c
 28301  00EBA0  0E00               	movlw	high __display_itoa@tmp
 28302  00EBA2  20F4               	addwfc	prodh,w,c
 28303  00EBA4  6EDA               	movwf	fsr2h,c
 28304  00EBA6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28305  00EBA8  0D01               	mullw	1
 28306  00EBAA  50F3               	movf	prodl,w,c
 28307  00EBAC  2598               	addwf	__display_itoa@text& (0+255),w,b
 28308  00EBAE  6EE1               	movwf	fsr1l,c
 28309  00EBB0  50F4               	movf	prodh,w,c
 28310  00EBB2  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28311  00EBB4  6EE2               	movwf	fsr1h,c
 28312  00EBB6  CFDF FFE7          	movff	indf2,indf1
 28313                           
 28314                           ; BSR set to: 0
 28315                           ;display.c: 187: if(pos==decimals)
 28316  00EBBA  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28317  00EBBC  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 28318  00EBBE  A4D8               	btfss	status,2,c
 28319  00EBC0  D00C               	goto	l1345
 28320                           
 28321                           ; BSR set to: 0
 28322                           ;display.c: 188: {;display.c: 190: ++pos;
 28323  00EBC2  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;display.c: 191: text[pos] = '.';
 28327  00EBC4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28328  00EBC6  0D01               	mullw	1
 28329  00EBC8  50F3               	movf	prodl,w,c
 28330  00EBCA  2598               	addwf	__display_itoa@text& (0+255),w,b
 28331  00EBCC  6ED9               	movwf	fsr2l,c
 28332  00EBCE  50F4               	movf	prodh,w,c
 28333  00EBD0  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28334  00EBD2  6EDA               	movwf	fsr2h,c
 28335  00EBD4  0E2E               	movlw	46
 28336  00EBD6  6EDF               	movwf	indf2,c
 28337                           
 28338                           ;display.c: 192: break;
 28339  00EBD8  D01E               	goto	l1347
 28340  00EBDA                     l1345:
 28341                           
 28342                           ; BSR set to: 0
 28343                           
 28344                           ; BSR set to: 0
 28345  00EBDA  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28346  00EBDC                     l1343:
 28347                           
 28348                           ; BSR set to: 0
 28349                           
 28350                           ; BSR set to: 0
 28351  00EBDC  51AA               	movf	__display_itoa@len& (0+255),w,b
 28352  00EBDE  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28353  00EBE0  B0D8               	btfsc	status,0,c
 28354  00EBE2  D019               	goto	l1347
 28355  00EBE4  D7D8               	goto	l1344
 28356  00EBE6                     
 28357                           ; BSR set to: 0
 28358                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 28359                           
 28360                           ; BSR set to: 0
 28361  00EBE6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28362  00EBE8  0D01               	mullw	1
 28363  00EBEA  0EA0               	movlw	low __display_itoa@tmp
 28364  00EBEC  24F3               	addwf	prodl,w,c
 28365  00EBEE  6ED9               	movwf	fsr2l,c
 28366  00EBF0  0E00               	movlw	high __display_itoa@tmp
 28367  00EBF2  20F4               	addwfc	prodh,w,c
 28368  00EBF4  6EDA               	movwf	fsr2h,c
 28369  00EBF6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28370  00EBF8  6F9A               	movwf	??__display_itoa& (0+255),b
 28371  00EBFA  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28372  00EBFC  0E01               	movlw	1
 28373  00EBFE  279A               	addwf	??__display_itoa& (0+255),f,b
 28374  00EC00  0E00               	movlw	0
 28375  00EC02  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28376  00EC04  519A               	movf	??__display_itoa& (0+255),w,b
 28377  00EC06  2598               	addwf	__display_itoa@text& (0+255),w,b
 28378  00EC08  6EE1               	movwf	fsr1l,c
 28379  00EC0A  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28380  00EC0C  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28381  00EC0E  6EE2               	movwf	fsr1h,c
 28382  00EC10  CFDF FFE7          	movff	indf2,indf1
 28383                           
 28384                           ; BSR set to: 0
 28385  00EC14  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28386  00EC16                     l1347:
 28387                           
 28388                           ; BSR set to: 0
 28389                           
 28390                           ; BSR set to: 0
 28391  00EC16  51AA               	movf	__display_itoa@len& (0+255),w,b
 28392  00EC18  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28393  00EC1A  A0D8               	btfss	status,0,c
 28394  00EC1C  D7E4               	goto	l1348
 28395                           
 28396                           ; BSR set to: 0
 28397                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 28398                           
 28399                           ; BSR set to: 0
 28400  00EC1E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28401  00EC20  6F9A               	movwf	??__display_itoa& (0+255),b
 28402  00EC22  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28403  00EC24  0E01               	movlw	1
 28404  00EC26  279A               	addwf	??__display_itoa& (0+255),f,b
 28405  00EC28  0E00               	movlw	0
 28406  00EC2A  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28407  00EC2C  519A               	movf	??__display_itoa& (0+255),w,b
 28408  00EC2E  2598               	addwf	__display_itoa@text& (0+255),w,b
 28409  00EC30  6ED9               	movwf	fsr2l,c
 28410  00EC32  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28411  00EC34  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28412  00EC36  6EDA               	movwf	fsr2h,c
 28413  00EC38  0E00               	movlw	0
 28414  00EC3A  6EDF               	movwf	indf2,c
 28415                           
 28416                           ; BSR set to: 0
 28417  00EC3C  0012               	return		;funcret
 28418  00EC3E                     __end_of__display_itoa:
 28419                           	opt stack 0
 28420                           tblptru	equ	0xFF8
 28421                           tblptrh	equ	0xFF7
 28422                           tblptrl	equ	0xFF6
 28423                           tablat	equ	0xFF5
 28424                           prodh	equ	0xFF4
 28425                           prodl	equ	0xFF3
 28426                           intcon	equ	0xFF2
 28427                           postinc0	equ	0xFEE
 28428                           wreg	equ	0xFE8
 28429                           indf1	equ	0xFE7
 28430                           postinc1	equ	0xFE6
 28431                           postdec1	equ	0xFE5
 28432                           plusw1	equ	0xFE3
 28433                           fsr1h	equ	0xFE2
 28434                           fsr1l	equ	0xFE1
 28435                           indf2	equ	0xFDF
 28436                           postinc2	equ	0xFDE
 28437                           postdec2	equ	0xFDD
 28438                           plusw2	equ	0xFDB
 28439                           fsr2h	equ	0xFDA
 28440                           fsr2l	equ	0xFD9
 28441                           status	equ	0xFD8
 28442                           
 28443 ;; *************** function _strlen *****************
 28444 ;; Defined at:
 28445 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 28446 ;; Parameters:    Size  Location     Type
 28447 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 28448 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28449 ;; Auto vars:     Size  Location     Type
 28450 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 28451 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28452 ;; Return value:  Size  Location     Type
 28453 ;;                  2    0[BANK0 ] unsigned int 
 28454 ;; Registers used:
 28455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28456 ;; Tracked objects:
 28457 ;;		On entry : 0/0
 28458 ;;		On exit  : 0/0
 28459 ;;		Unchanged: 0/0
 28460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28462 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28464 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28465 ;;Total ram usage:        6 bytes
 28466 ;; Hardware stack levels used:    1
 28467 ;; Hardware stack levels required when called:   10
 28468 ;; This function calls:
 28469 ;;		Nothing
 28470 ;; This function is called by:
 28471 ;;		__display_padded_itoa
 28472 ;;		__display_itoa
 28473 ;;		__display_itoa_long
 28474 ;;		_display_prepare
 28475 ;; This function uses a non-reentrant model
 28476 ;;
 28477                           
 28478                           	psect	text111
 28479  01507A                     __ptext111:
 28480                           	opt stack 0
 28481  01507A                     _strlen:
 28482                           	opt stack 19
 28483                           
 28484                           ; BSR set to: 0
 28485                           ;incstack = 0
 28486  01507A  C060  F064         	movff	strlen@s,strlen@cp
 28487  01507E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 28488  015082  D003               	goto	l3718
 28489  015084  0100               	movlb	0	; () banked
 28490  015086  4B64               	infsnz	strlen@cp& (0+255),f,b
 28491  015088  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 28492  01508A                     l3718:
 28493                           
 28494                           ; BSR set to: 0
 28495  01508A  C064  FFD9         	movff	strlen@cp,fsr2l
 28496  01508E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 28497  015092  50DF               	movf	indf2,w,c
 28498  015094  A4D8               	btfss	status,2,c
 28499  015096  D7F6               	goto	l3719
 28500  015098  C060  F062         	movff	strlen@s,??_strlen
 28501  01509C  C061  F063         	movff	strlen@s+1,??_strlen+1
 28502  0150A0  0100               	movlb	0	; () banked
 28503  0150A2  1F62               	comf	??_strlen& (0+255),f,b
 28504  0150A4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 28505  0150A6  4B62               	infsnz	??_strlen& (0+255),f,b
 28506  0150A8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 28507  0150AA  5164               	movf	strlen@cp& (0+255),w,b
 28508  0150AC  2562               	addwf	??_strlen& (0+255),w,b
 28509  0150AE  6F60               	movwf	?_strlen& (0+255),b
 28510  0150B0  5165               	movf	(strlen@cp+1)& (0+255),w,b
 28511  0150B2  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 28512  0150B4  6F61               	movwf	(?_strlen+1)& (0+255),b
 28513  0150B6  0012               	return	
 28514  0150B8                     __end_of_strlen:
 28515                           	opt stack 0
 28516                           tblptru	equ	0xFF8
 28517                           tblptrh	equ	0xFF7
 28518                           tblptrl	equ	0xFF6
 28519                           tablat	equ	0xFF5
 28520                           prodh	equ	0xFF4
 28521                           prodl	equ	0xFF3
 28522                           intcon	equ	0xFF2
 28523                           postinc0	equ	0xFEE
 28524                           wreg	equ	0xFE8
 28525                           indf1	equ	0xFE7
 28526                           postinc1	equ	0xFE6
 28527                           postdec1	equ	0xFE5
 28528                           plusw1	equ	0xFE3
 28529                           fsr1h	equ	0xFE2
 28530                           fsr1l	equ	0xFE1
 28531                           indf2	equ	0xFDF
 28532                           postinc2	equ	0xFDE
 28533                           postdec2	equ	0xFDD
 28534                           plusw2	equ	0xFDB
 28535                           fsr2h	equ	0xFDA
 28536                           fsr2l	equ	0xFD9
 28537                           status	equ	0xFD8
 28538                           
 28539 ;; *************** function _itoa *****************
 28540 ;; Defined at:
 28541 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28542 ;; Parameters:    Size  Location     Type
 28543 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 28544 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28545 ;;  val             2   18[BANK0 ] int 
 28546 ;;  base            2   20[BANK0 ] int 
 28547 ;; Auto vars:     Size  Location     Type
 28548 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 28549 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28550 ;; Return value:  Size  Location     Type
 28551 ;;                  2   16[BANK0 ] PTR unsigned char 
 28552 ;; Registers used:
 28553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28554 ;; Tracked objects:
 28555 ;;		On entry : 0/0
 28556 ;;		On exit  : 0/0
 28557 ;;		Unchanged: 0/0
 28558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28560 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28562 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28563 ;;Total ram usage:        8 bytes
 28564 ;; Hardware stack levels used:    1
 28565 ;; Hardware stack levels required when called:   12
 28566 ;; This function calls:
 28567 ;;		_utoa
 28568 ;; This function is called by:
 28569 ;;		__display_padded_itoa
 28570 ;;		__display_itoa
 28571 ;;		__display_itoa_u16
 28572 ;; This function uses a non-reentrant model
 28573 ;;
 28574                           
 28575                           	psect	text112
 28576  014F2E                     __ptext112:
 28577                           	opt stack 0
 28578  014F2E                     _itoa:
 28579                           	opt stack 14
 28580                           
 28581                           ; BSR set to: 0
 28582                           ;incstack = 0
 28583  014F2E  C070  F076         	movff	itoa@buf,itoa@cp
 28584  014F32  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 28585  014F36  0100               	movlb	0	; () banked
 28586  014F38  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 28587  014F3A  D00C               	goto	l3670
 28588                           
 28589                           ; BSR set to: 0
 28590  014F3C  C070  FFD9         	movff	itoa@buf,fsr2l
 28591  014F40  C071  FFDA         	movff	itoa@buf+1,fsr2h
 28592  014F44  0E2D               	movlw	45
 28593  014F46  6EDF               	movwf	indf2,c
 28594                           
 28595                           ; BSR set to: 0
 28596  014F48  4B70               	infsnz	itoa@buf& (0+255),f,b
 28597  014F4A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 28598                           
 28599                           ; BSR set to: 0
 28600  014F4C  6D72               	negf	itoa@val& (0+255),b
 28601  014F4E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 28602  014F50  B0D8               	btfsc	status,0,c
 28603  014F52  2B73               	incf	(itoa@val+1)& (0+255),f,b
 28604  014F54                     l3670:
 28605                           
 28606                           ; BSR set to: 0
 28607                           
 28608                           ; BSR set to: 0
 28609  014F54  C070  F067         	movff	itoa@buf,utoa@buf
 28610  014F58  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 28611  014F5C  C072  F069         	movff	itoa@val,utoa@val
 28612  014F60  C073  F06A         	movff	itoa@val+1,utoa@val+1
 28613  014F64  C074  F06B         	movff	itoa@base,utoa@base
 28614  014F68  C075  F06C         	movff	itoa@base+1,utoa@base+1
 28615  014F6C  EC0C  F098         	call	_utoa	;wreg free
 28616  014F70  0012               	return	
 28617  014F72                     __end_of_itoa:
 28618                           	opt stack 0
 28619                           tblptru	equ	0xFF8
 28620                           tblptrh	equ	0xFF7
 28621                           tblptrl	equ	0xFF6
 28622                           tablat	equ	0xFF5
 28623                           prodh	equ	0xFF4
 28624                           prodl	equ	0xFF3
 28625                           intcon	equ	0xFF2
 28626                           postinc0	equ	0xFEE
 28627                           wreg	equ	0xFE8
 28628                           indf1	equ	0xFE7
 28629                           postinc1	equ	0xFE6
 28630                           postdec1	equ	0xFE5
 28631                           plusw1	equ	0xFE3
 28632                           fsr1h	equ	0xFE2
 28633                           fsr1l	equ	0xFE1
 28634                           indf2	equ	0xFDF
 28635                           postinc2	equ	0xFDE
 28636                           postdec2	equ	0xFDD
 28637                           plusw2	equ	0xFDB
 28638                           fsr2h	equ	0xFDA
 28639                           fsr2l	equ	0xFD9
 28640                           status	equ	0xFD8
 28641                           
 28642 ;; *************** function _utoa *****************
 28643 ;; Defined at:
 28644 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28645 ;; Parameters:    Size  Location     Type
 28646 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 28647 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28648 ;;  val             2    9[BANK0 ] unsigned int 
 28649 ;;  base            2   11[BANK0 ] int 
 28650 ;; Auto vars:     Size  Location     Type
 28651 ;;  v               2   13[BANK0 ] unsigned int 
 28652 ;;  c               1   15[BANK0 ] unsigned char 
 28653 ;; Return value:  Size  Location     Type
 28654 ;;                  2    7[BANK0 ] PTR unsigned char 
 28655 ;; Registers used:
 28656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28657 ;; Tracked objects:
 28658 ;;		On entry : 0/0
 28659 ;;		On exit  : 0/0
 28660 ;;		Unchanged: 0/0
 28661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28662 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28663 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28665 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28666 ;;Total ram usage:        9 bytes
 28667 ;; Hardware stack levels used:    1
 28668 ;; Hardware stack levels required when called:   11
 28669 ;; This function calls:
 28670 ;;		___lwdiv
 28671 ;;		___lwmod
 28672 ;; This function is called by:
 28673 ;;		_itoa
 28674 ;; This function uses a non-reentrant model
 28675 ;;
 28676                           
 28677                           	psect	text113
 28678  013018                     __ptext113:
 28679                           	opt stack 0
 28680  013018                     _utoa:
 28681                           	opt stack 14
 28682                           
 28683                           ;incstack = 0
 28684  013018  C069  F06D         	movff	utoa@val,utoa@v
 28685  01301C  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 28686  013020  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 28687  013024  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 28688  013028  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28689  01302C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28690  013030  EC2D  F0A5         	call	___lwdiv	;wreg free
 28691  013034  C060  F06D         	movff	?___lwdiv,utoa@v
 28692  013038  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 28693  01303C  0100               	movlb	0	; () banked
 28694  01303E  4B67               	infsnz	utoa@buf& (0+255),f,b
 28695  013040  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28696                           
 28697                           ; BSR set to: 0
 28698  013042  516D               	movf	utoa@v& (0+255),w,b
 28699  013044  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 28700  013046  A4D8               	btfss	status,2,c
 28701  013048  D7EB               	goto	l3674
 28702                           
 28703                           ; BSR set to: 0
 28704                           
 28705                           ; BSR set to: 0
 28706  01304A  C067  FFD9         	movff	utoa@buf,fsr2l
 28707  01304E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28708  013052  0E00               	movlw	0
 28709  013054  6EDF               	movwf	indf2,c
 28710                           
 28711                           ; BSR set to: 0
 28712  013056  0767               	decf	utoa@buf& (0+255),f,b
 28713  013058  A0D8               	btfss	status,0,c
 28714  01305A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28715  01305C                     
 28716                           ; BSR set to: 0
 28717                           
 28718                           ; BSR set to: 0
 28719  01305C  C069  F060         	movff	utoa@val,___lwmod@dividend
 28720  013060  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 28721  013064  C06B  F062         	movff	utoa@base,___lwmod@divisor
 28722  013068  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 28723  01306C  ECB9  F0A7         	call	___lwmod	;wreg free
 28724  013070  0100               	movlb	0	; () banked
 28725  013072  5160               	movf	?___lwmod& (0+255),w,b
 28726  013074  6F6F               	movwf	utoa@c& (0+255),b
 28727                           
 28728                           ; BSR set to: 0
 28729  013076  C069  F060         	movff	utoa@val,___lwdiv@dividend
 28730  01307A  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 28731  01307E  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28732  013082  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28733  013086  EC2D  F0A5         	call	___lwdiv	;wreg free
 28734  01308A  C060  F069         	movff	?___lwdiv,utoa@val
 28735  01308E  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 28736  013092  0E09               	movlw	9
 28737  013094  0100               	movlb	0	; () banked
 28738  013096  656F               	cpfsgt	utoa@c& (0+255),b
 28739  013098  D002               	goto	l3677
 28740                           
 28741                           ; BSR set to: 0
 28742  01309A  0E07               	movlw	7
 28743  01309C  276F               	addwf	utoa@c& (0+255),f,b
 28744  01309E                     l3677:
 28745                           
 28746                           ; BSR set to: 0
 28747  01309E  0E30               	movlw	48
 28748  0130A0  276F               	addwf	utoa@c& (0+255),f,b
 28749                           
 28750                           ; BSR set to: 0
 28751  0130A2  C067  FFD9         	movff	utoa@buf,fsr2l
 28752  0130A6  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28753  0130AA  C06F  FFDF         	movff	utoa@c,indf2
 28754                           
 28755                           ; BSR set to: 0
 28756  0130AE  0767               	decf	utoa@buf& (0+255),f,b
 28757  0130B0  A0D8               	btfss	status,0,c
 28758  0130B2  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28759                           
 28760                           ; BSR set to: 0
 28761  0130B4  5169               	movf	utoa@val& (0+255),w,b
 28762  0130B6  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 28763  0130B8  A4D8               	btfss	status,2,c
 28764  0130BA  D7D0               	goto	l3676
 28765                           
 28766                           ; BSR set to: 0
 28767                           ;	Return value of _utoa is never used
 28768                           
 28769                           ; BSR set to: 0
 28770  0130BC  4B67               	infsnz	utoa@buf& (0+255),f,b
 28771  0130BE  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28772  0130C0  0012               	return	
 28773  0130C2                     __end_of_utoa:
 28774                           	opt stack 0
 28775                           tblptru	equ	0xFF8
 28776                           tblptrh	equ	0xFF7
 28777                           tblptrl	equ	0xFF6
 28778                           tablat	equ	0xFF5
 28779                           prodh	equ	0xFF4
 28780                           prodl	equ	0xFF3
 28781                           intcon	equ	0xFF2
 28782                           postinc0	equ	0xFEE
 28783                           wreg	equ	0xFE8
 28784                           indf1	equ	0xFE7
 28785                           postinc1	equ	0xFE6
 28786                           postdec1	equ	0xFE5
 28787                           plusw1	equ	0xFE3
 28788                           fsr1h	equ	0xFE2
 28789                           fsr1l	equ	0xFE1
 28790                           indf2	equ	0xFDF
 28791                           postinc2	equ	0xFDE
 28792                           postdec2	equ	0xFDD
 28793                           plusw2	equ	0xFDB
 28794                           fsr2h	equ	0xFDA
 28795                           fsr2l	equ	0xFD9
 28796                           status	equ	0xFD8
 28797                           
 28798 ;; *************** function ___lwmod *****************
 28799 ;; Defined at:
 28800 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 28801 ;; Parameters:    Size  Location     Type
 28802 ;;  dividend        2    0[BANK0 ] unsigned int 
 28803 ;;  divisor         2    2[BANK0 ] unsigned int 
 28804 ;; Auto vars:     Size  Location     Type
 28805 ;;  counter         1    4[BANK0 ] unsigned char 
 28806 ;; Return value:  Size  Location     Type
 28807 ;;                  2    0[BANK0 ] unsigned int 
 28808 ;; Registers used:
 28809 ;;		wreg, status,2, status,0
 28810 ;; Tracked objects:
 28811 ;;		On entry : 0/0
 28812 ;;		On exit  : 0/0
 28813 ;;		Unchanged: 0/0
 28814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28815 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28818 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28819 ;;Total ram usage:        5 bytes
 28820 ;; Hardware stack levels used:    1
 28821 ;; Hardware stack levels required when called:   10
 28822 ;; This function calls:
 28823 ;;		Nothing
 28824 ;; This function is called by:
 28825 ;;		_utoa
 28826 ;; This function uses a non-reentrant model
 28827 ;;
 28828                           
 28829                           	psect	text114
 28830  014F72                     __ptext114:
 28831                           	opt stack 0
 28832  014F72                     ___lwmod:
 28833                           	opt stack 14
 28834                           
 28835                           ; BSR set to: 0
 28836                           ;incstack = 0
 28837  014F72  0100               	movlb	0	; () banked
 28838  014F74  5162               	movf	___lwmod@divisor& (0+255),w,b
 28839  014F76  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28840  014F78  B4D8               	btfsc	status,2,c
 28841  014F7A  D018               	goto	l3467
 28842                           
 28843                           ; BSR set to: 0
 28844  014F7C  0E01               	movlw	1
 28845  014F7E  6F64               	movwf	___lwmod@counter& (0+255),b
 28846  014F80  D004               	goto	l3462
 28847  014F82                     
 28848                           ; BSR set to: 0
 28849                           
 28850                           ; BSR set to: 0
 28851  014F82  90D8               	bcf	status,0,c
 28852  014F84  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 28853  014F86  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28854  014F88  2B64               	incf	___lwmod@counter& (0+255),f,b
 28855  014F8A                     l3462:
 28856                           
 28857                           ; BSR set to: 0
 28858                           
 28859                           ; BSR set to: 0
 28860  014F8A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28861  014F8C  D7FA               	goto	l3463
 28862  014F8E                     u11010:
 28863                           
 28864                           ; BSR set to: 0
 28865                           
 28866                           ; BSR set to: 0
 28867                           
 28868                           ; BSR set to: 0
 28869  014F8E  5162               	movf	___lwmod@divisor& (0+255),w,b
 28870  014F90  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 28871  014F92  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28872  014F94  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28873  014F96  A0D8               	btfss	status,0,c
 28874  014F98  D004               	goto	l3466
 28875                           
 28876                           ; BSR set to: 0
 28877  014F9A  5162               	movf	___lwmod@divisor& (0+255),w,b
 28878  014F9C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 28879  014F9E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28880  014FA0  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28881  014FA2                     l3466:
 28882                           
 28883                           ; BSR set to: 0
 28884                           
 28885                           ; BSR set to: 0
 28886  014FA2  90D8               	bcf	status,0,c
 28887  014FA4  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28888  014FA6  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 28889                           
 28890                           ; BSR set to: 0
 28891  014FA8  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 28892  014FAA  D7F1               	goto	u11010
 28893  014FAC                     l3467:
 28894                           
 28895                           ; BSR set to: 0
 28896                           
 28897                           ; BSR set to: 0
 28898  014FAC  C060  F060         	movff	___lwmod@dividend,?___lwmod
 28899  014FB0  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 28900                           
 28901                           ; BSR set to: 0
 28902  014FB4  0012               	return		;funcret
 28903  014FB6                     __end_of___lwmod:
 28904                           	opt stack 0
 28905                           tblptru	equ	0xFF8
 28906                           tblptrh	equ	0xFF7
 28907                           tblptrl	equ	0xFF6
 28908                           tablat	equ	0xFF5
 28909                           prodh	equ	0xFF4
 28910                           prodl	equ	0xFF3
 28911                           intcon	equ	0xFF2
 28912                           postinc0	equ	0xFEE
 28913                           wreg	equ	0xFE8
 28914                           indf1	equ	0xFE7
 28915                           postinc1	equ	0xFE6
 28916                           postdec1	equ	0xFE5
 28917                           plusw1	equ	0xFE3
 28918                           fsr1h	equ	0xFE2
 28919                           fsr1l	equ	0xFE1
 28920                           indf2	equ	0xFDF
 28921                           postinc2	equ	0xFDE
 28922                           postdec2	equ	0xFDD
 28923                           plusw2	equ	0xFDB
 28924                           fsr2h	equ	0xFDA
 28925                           fsr2l	equ	0xFD9
 28926                           status	equ	0xFD8
 28927                           
 28928 ;; *************** function ___lwdiv *****************
 28929 ;; Defined at:
 28930 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 28931 ;; Parameters:    Size  Location     Type
 28932 ;;  dividend        2    0[BANK0 ] unsigned int 
 28933 ;;  divisor         2    2[BANK0 ] unsigned int 
 28934 ;; Auto vars:     Size  Location     Type
 28935 ;;  quotient        2    4[BANK0 ] unsigned int 
 28936 ;;  counter         1    6[BANK0 ] unsigned char 
 28937 ;; Return value:  Size  Location     Type
 28938 ;;                  2    0[BANK0 ] unsigned int 
 28939 ;; Registers used:
 28940 ;;		wreg, status,2, status,0
 28941 ;; Tracked objects:
 28942 ;;		On entry : 0/0
 28943 ;;		On exit  : 0/0
 28944 ;;		Unchanged: 0/0
 28945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28946 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28947 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28949 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28950 ;;Total ram usage:        7 bytes
 28951 ;; Hardware stack levels used:    1
 28952 ;; Hardware stack levels required when called:   10
 28953 ;; This function calls:
 28954 ;;		Nothing
 28955 ;; This function is called by:
 28956 ;;		_utoa
 28957 ;; This function uses a non-reentrant model
 28958 ;;
 28959                           
 28960                           	psect	text115
 28961  014A5A                     __ptext115:
 28962                           	opt stack 0
 28963  014A5A                     ___lwdiv:
 28964                           	opt stack 14
 28965                           
 28966                           ; BSR set to: 0
 28967                           ;incstack = 0
 28968  014A5A  0E00               	movlw	0
 28969  014A5C  0100               	movlb	0	; () banked
 28970  014A5E  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28971  014A60  0E00               	movlw	0
 28972  014A62  6F64               	movwf	___lwdiv@quotient& (0+255),b
 28973                           
 28974                           ; BSR set to: 0
 28975  014A64  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28976  014A66  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28977  014A68  B4D8               	btfsc	status,2,c
 28978  014A6A  D01C               	goto	l3457
 28979                           
 28980                           ; BSR set to: 0
 28981  014A6C  0E01               	movlw	1
 28982  014A6E  6F66               	movwf	___lwdiv@counter& (0+255),b
 28983  014A70  D004               	goto	l3452
 28984  014A72                     
 28985                           ; BSR set to: 0
 28986                           
 28987                           ; BSR set to: 0
 28988  014A72  90D8               	bcf	status,0,c
 28989  014A74  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 28990  014A76  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28991  014A78  2B66               	incf	___lwdiv@counter& (0+255),f,b
 28992  014A7A                     l3452:
 28993                           
 28994                           ; BSR set to: 0
 28995                           
 28996                           ; BSR set to: 0
 28997  014A7A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28998  014A7C  D7FA               	goto	l3453
 28999  014A7E                     u10980:
 29000                           
 29001                           ; BSR set to: 0
 29002                           
 29003                           ; BSR set to: 0
 29004                           
 29005                           ; BSR set to: 0
 29006  014A7E  90D8               	bcf	status,0,c
 29007  014A80  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29008  014A82  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29009                           
 29010                           ; BSR set to: 0
 29011  014A84  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29012  014A86  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29013  014A88  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29014  014A8A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29015  014A8C  A0D8               	btfss	status,0,c
 29016  014A8E  D005               	goto	l3456
 29017                           
 29018                           ; BSR set to: 0
 29019  014A90  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29020  014A92  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29021  014A94  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29022  014A96  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29023                           
 29024                           ; BSR set to: 0
 29025  014A98  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29026  014A9A                     l3456:
 29027                           
 29028                           ; BSR set to: 0
 29029                           
 29030                           ; BSR set to: 0
 29031  014A9A  90D8               	bcf	status,0,c
 29032  014A9C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29033  014A9E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29034                           
 29035                           ; BSR set to: 0
 29036  014AA0  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29037  014AA2  D7ED               	goto	u10980
 29038  014AA4                     l3457:
 29039                           
 29040                           ; BSR set to: 0
 29041                           
 29042                           ; BSR set to: 0
 29043  014AA4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29044  014AA8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29045                           
 29046                           ; BSR set to: 0
 29047  014AAC  0012               	return		;funcret
 29048  014AAE                     __end_of___lwdiv:
 29049                           	opt stack 0
 29050                           tblptru	equ	0xFF8
 29051                           tblptrh	equ	0xFF7
 29052                           tblptrl	equ	0xFF6
 29053                           tablat	equ	0xFF5
 29054                           prodh	equ	0xFF4
 29055                           prodl	equ	0xFF3
 29056                           intcon	equ	0xFF2
 29057                           postinc0	equ	0xFEE
 29058                           wreg	equ	0xFE8
 29059                           indf1	equ	0xFE7
 29060                           postinc1	equ	0xFE6
 29061                           postdec1	equ	0xFE5
 29062                           plusw1	equ	0xFE3
 29063                           fsr1h	equ	0xFE2
 29064                           fsr1l	equ	0xFE1
 29065                           indf2	equ	0xFDF
 29066                           postinc2	equ	0xFDE
 29067                           postdec2	equ	0xFDD
 29068                           plusw2	equ	0xFDB
 29069                           fsr2h	equ	0xFDA
 29070                           fsr2l	equ	0xFD9
 29071                           status	equ	0xFD8
 29072                           
 29073 ;; *************** function ___almod *****************
 29074 ;; Defined at:
 29075 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 29076 ;; Parameters:    Size  Location     Type
 29077 ;;  dividend        4    0[BANK0 ] long 
 29078 ;;  divisor         4    4[BANK0 ] long 
 29079 ;; Auto vars:     Size  Location     Type
 29080 ;;  sign            1    9[BANK0 ] unsigned char 
 29081 ;;  counter         1    8[BANK0 ] unsigned char 
 29082 ;; Return value:  Size  Location     Type
 29083 ;;                  4    0[BANK0 ] long 
 29084 ;; Registers used:
 29085 ;;		wreg, status,2, status,0
 29086 ;; Tracked objects:
 29087 ;;		On entry : 0/0
 29088 ;;		On exit  : 0/0
 29089 ;;		Unchanged: 0/0
 29090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29091 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29094 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29095 ;;Total ram usage:       10 bytes
 29096 ;; Hardware stack levels used:    1
 29097 ;; Hardware stack levels required when called:   10
 29098 ;; This function calls:
 29099 ;;		Nothing
 29100 ;; This function is called by:
 29101 ;;		__display_itoa_long
 29102 ;; This function uses a non-reentrant model
 29103 ;;
 29104                           
 29105                           	psect	text116
 29106  012E14                     __ptext116:
 29107                           	opt stack 0
 29108  012E14                     ___almod:
 29109                           	opt stack 18
 29110                           
 29111                           ; BSR set to: 0
 29112                           ;incstack = 0
 29113  012E14  0E00               	movlw	0
 29114  012E16  0100               	movlb	0	; () banked
 29115  012E18  6F69               	movwf	___almod@sign& (0+255),b
 29116                           
 29117                           ; BSR set to: 0
 29118  012E1A  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 29119  012E1C  D00A               	goto	l3054
 29120                           
 29121                           ; BSR set to: 0
 29122  012E1E  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29123  012E20  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29124  012E22  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29125  012E24  6D60               	negf	___almod@dividend& (0+255),b
 29126  012E26  0E00               	movlw	0
 29127  012E28  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29128  012E2A  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29129  012E2C  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29130                           
 29131                           ; BSR set to: 0
 29132  012E2E  0E01               	movlw	1
 29133  012E30  6F69               	movwf	___almod@sign& (0+255),b
 29134  012E32                     l3054:
 29135                           
 29136                           ; BSR set to: 0
 29137                           
 29138                           ; BSR set to: 0
 29139  012E32  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29140  012E34  D008               	goto	l3055
 29141                           
 29142                           ; BSR set to: 0
 29143  012E36  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 29144  012E38  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 29145  012E3A  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 29146  012E3C  6D64               	negf	___almod@divisor& (0+255),b
 29147  012E3E  0E00               	movlw	0
 29148  012E40  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 29149  012E42  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 29150  012E44  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 29151  012E46                     l3055:
 29152                           
 29153                           ; BSR set to: 0
 29154                           
 29155                           ; BSR set to: 0
 29156  012E46  5164               	movf	___almod@divisor& (0+255),w,b
 29157  012E48  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 29158  012E4A  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 29159  012E4C  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 29160  012E4E  B4D8               	btfsc	status,2,c
 29161  012E50  D024               	goto	l3062
 29162                           
 29163                           ; BSR set to: 0
 29164  012E52  0E01               	movlw	1
 29165  012E54  6F68               	movwf	___almod@counter& (0+255),b
 29166  012E56  D006               	goto	l3057
 29167  012E58                     
 29168                           ; BSR set to: 0
 29169                           
 29170                           ; BSR set to: 0
 29171  012E58  90D8               	bcf	status,0,c
 29172  012E5A  3764               	rlcf	___almod@divisor& (0+255),f,b
 29173  012E5C  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 29174  012E5E  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 29175  012E60  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 29176  012E62  2B68               	incf	___almod@counter& (0+255),f,b
 29177  012E64                     l3057:
 29178                           
 29179                           ; BSR set to: 0
 29180                           
 29181                           ; BSR set to: 0
 29182  012E64  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29183  012E66  D7F8               	goto	l3058
 29184  012E68                     u15240:
 29185                           
 29186                           ; BSR set to: 0
 29187                           
 29188                           ; BSR set to: 0
 29189                           
 29190                           ; BSR set to: 0
 29191  012E68  5164               	movf	___almod@divisor& (0+255),w,b
 29192  012E6A  5D60               	subwf	___almod@dividend& (0+255),w,b
 29193  012E6C  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29194  012E6E  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 29195  012E70  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29196  012E72  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 29197  012E74  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29198  012E76  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 29199  012E78  A0D8               	btfss	status,0,c
 29200  012E7A  D008               	goto	l3061
 29201                           
 29202                           ; BSR set to: 0
 29203  012E7C  5164               	movf	___almod@divisor& (0+255),w,b
 29204  012E7E  5F60               	subwf	___almod@dividend& (0+255),f,b
 29205  012E80  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29206  012E82  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 29207  012E84  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29208  012E86  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 29209  012E88  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29210  012E8A  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 29211  012E8C                     l3061:
 29212                           
 29213                           ; BSR set to: 0
 29214                           
 29215                           ; BSR set to: 0
 29216  012E8C  90D8               	bcf	status,0,c
 29217  012E8E  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 29218  012E90  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 29219  012E92  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 29220  012E94  3364               	rrcf	___almod@divisor& (0+255),f,b
 29221                           
 29222                           ; BSR set to: 0
 29223  012E96  2F68               	decfsz	___almod@counter& (0+255),f,b
 29224  012E98  D7E7               	goto	u15240
 29225  012E9A                     l3062:
 29226                           
 29227                           ; BSR set to: 0
 29228                           
 29229                           ; BSR set to: 0
 29230                           
 29231                           ; BSR set to: 0
 29232  012E9A  5169               	movf	___almod@sign& (0+255),w,b
 29233  012E9C  B4D8               	btfsc	status,2,c
 29234  012E9E  D008               	goto	l3063
 29235                           
 29236                           ; BSR set to: 0
 29237  012EA0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29238  012EA2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29239  012EA4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29240  012EA6  6D60               	negf	___almod@dividend& (0+255),b
 29241  012EA8  0E00               	movlw	0
 29242  012EAA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29243  012EAC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29244  012EAE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29245  012EB0                     l3063:
 29246                           
 29247                           ; BSR set to: 0
 29248                           
 29249                           ; BSR set to: 0
 29250  012EB0  C060  F060         	movff	___almod@dividend,?___almod
 29251  012EB4  C061  F061         	movff	___almod@dividend+1,?___almod+1
 29252  012EB8  C062  F062         	movff	___almod@dividend+2,?___almod+2
 29253  012EBC  C063  F063         	movff	___almod@dividend+3,?___almod+3
 29254  012EC0  0012               	return	
 29255  012EC2                     __end_of___almod:
 29256                           	opt stack 0
 29257                           tblptru	equ	0xFF8
 29258                           tblptrh	equ	0xFF7
 29259                           tblptrl	equ	0xFF6
 29260                           tablat	equ	0xFF5
 29261                           prodh	equ	0xFF4
 29262                           prodl	equ	0xFF3
 29263                           intcon	equ	0xFF2
 29264                           postinc0	equ	0xFEE
 29265                           wreg	equ	0xFE8
 29266                           indf1	equ	0xFE7
 29267                           postinc1	equ	0xFE6
 29268                           postdec1	equ	0xFE5
 29269                           plusw1	equ	0xFE3
 29270                           fsr1h	equ	0xFE2
 29271                           fsr1l	equ	0xFE1
 29272                           indf2	equ	0xFDF
 29273                           postinc2	equ	0xFDE
 29274                           postdec2	equ	0xFDD
 29275                           plusw2	equ	0xFDB
 29276                           fsr2h	equ	0xFDA
 29277                           fsr2l	equ	0xFD9
 29278                           status	equ	0xFD8
 29279                           
 29280 ;; *************** function ___aldiv *****************
 29281 ;; Defined at:
 29282 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 29283 ;; Parameters:    Size  Location     Type
 29284 ;;  dividend        4    0[BANK0 ] long 
 29285 ;;  divisor         4    4[BANK0 ] long 
 29286 ;; Auto vars:     Size  Location     Type
 29287 ;;  quotient        4   10[BANK0 ] long 
 29288 ;;  sign            1    9[BANK0 ] unsigned char 
 29289 ;;  counter         1    8[BANK0 ] unsigned char 
 29290 ;; Return value:  Size  Location     Type
 29291 ;;                  4    0[BANK0 ] long 
 29292 ;; Registers used:
 29293 ;;		wreg, status,2, status,0
 29294 ;; Tracked objects:
 29295 ;;		On entry : 0/0
 29296 ;;		On exit  : 0/0
 29297 ;;		Unchanged: 0/0
 29298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29300 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29302 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29303 ;;Total ram usage:       14 bytes
 29304 ;; Hardware stack levels used:    1
 29305 ;; Hardware stack levels required when called:   10
 29306 ;; This function calls:
 29307 ;;		Nothing
 29308 ;; This function is called by:
 29309 ;;		__display_itoa_long
 29310 ;; This function uses a non-reentrant model
 29311 ;;
 29312                           
 29313                           	psect	text117
 29314  012776                     __ptext117:
 29315                           	opt stack 0
 29316  012776                     ___aldiv:
 29317                           	opt stack 18
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;incstack = 0
 29321  012776  0E00               	movlw	0
 29322  012778  0100               	movlb	0	; () banked
 29323  01277A  6F69               	movwf	___aldiv@sign& (0+255),b
 29324                           
 29325                           ; BSR set to: 0
 29326  01277C  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29327  01277E  D00A               	goto	l3041
 29328                           
 29329                           ; BSR set to: 0
 29330  012780  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 29331  012782  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 29332  012784  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 29333  012786  6D64               	negf	___aldiv@divisor& (0+255),b
 29334  012788  0E00               	movlw	0
 29335  01278A  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 29336  01278C  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 29337  01278E  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 29338                           
 29339                           ; BSR set to: 0
 29340  012790  0E01               	movlw	1
 29341  012792  6F69               	movwf	___aldiv@sign& (0+255),b
 29342  012794                     l3041:
 29343                           
 29344                           ; BSR set to: 0
 29345                           
 29346                           ; BSR set to: 0
 29347  012794  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 29348  012796  D00A               	goto	l3042
 29349                           
 29350                           ; BSR set to: 0
 29351  012798  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 29352  01279A  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 29353  01279C  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 29354  01279E  6D60               	negf	___aldiv@dividend& (0+255),b
 29355  0127A0  0E00               	movlw	0
 29356  0127A2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 29357  0127A4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 29358  0127A6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 29359                           
 29360                           ; BSR set to: 0
 29361  0127A8  0E01               	movlw	1
 29362  0127AA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 29363  0127AC                     l3042:
 29364                           
 29365                           ; BSR set to: 0
 29366                           
 29367                           ; BSR set to: 0
 29368  0127AC  0E00               	movlw	0
 29369  0127AE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 29370  0127B0  0E00               	movlw	0
 29371  0127B2  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 29372  0127B4  0E00               	movlw	0
 29373  0127B6  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 29374  0127B8  0E00               	movlw	0
 29375  0127BA  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 29376                           
 29377                           ; BSR set to: 0
 29378  0127BC  5164               	movf	___aldiv@divisor& (0+255),w,b
 29379  0127BE  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 29380  0127C0  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 29381  0127C2  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 29382  0127C4  B4D8               	btfsc	status,2,c
 29383  0127C6  D02A               	goto	l3049
 29384                           
 29385                           ; BSR set to: 0
 29386  0127C8  0E01               	movlw	1
 29387  0127CA  6F68               	movwf	___aldiv@counter& (0+255),b
 29388  0127CC  D006               	goto	l3044
 29389  0127CE                     
 29390                           ; BSR set to: 0
 29391                           
 29392                           ; BSR set to: 0
 29393  0127CE  90D8               	bcf	status,0,c
 29394  0127D0  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 29395  0127D2  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 29396  0127D4  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 29397  0127D6  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 29398  0127D8  2B68               	incf	___aldiv@counter& (0+255),f,b
 29399  0127DA                     l3044:
 29400                           
 29401                           ; BSR set to: 0
 29402                           
 29403                           ; BSR set to: 0
 29404  0127DA  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29405  0127DC  D7F8               	goto	l3045
 29406  0127DE                     u15180:
 29407                           
 29408                           ; BSR set to: 0
 29409                           
 29410                           ; BSR set to: 0
 29411                           
 29412                           ; BSR set to: 0
 29413  0127DE  90D8               	bcf	status,0,c
 29414  0127E0  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 29415  0127E2  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 29416  0127E4  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 29417  0127E6  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 29418                           
 29419                           ; BSR set to: 0
 29420  0127E8  5164               	movf	___aldiv@divisor& (0+255),w,b
 29421  0127EA  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 29422  0127EC  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29423  0127EE  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 29424  0127F0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29425  0127F2  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 29426  0127F4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29427  0127F6  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 29428  0127F8  A0D8               	btfss	status,0,c
 29429  0127FA  D009               	goto	l3048
 29430                           
 29431                           ; BSR set to: 0
 29432  0127FC  5164               	movf	___aldiv@divisor& (0+255),w,b
 29433  0127FE  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 29434  012800  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29435  012802  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 29436  012804  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29437  012806  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 29438  012808  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29439  01280A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 29440                           
 29441                           ; BSR set to: 0
 29442  01280C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 29443  01280E                     l3048:
 29444                           
 29445                           ; BSR set to: 0
 29446                           
 29447                           ; BSR set to: 0
 29448  01280E  90D8               	bcf	status,0,c
 29449  012810  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 29450  012812  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 29451  012814  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 29452  012816  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 29453                           
 29454                           ; BSR set to: 0
 29455  012818  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 29456  01281A  D7E1               	goto	u15180
 29457  01281C                     l3049:
 29458                           
 29459                           ; BSR set to: 0
 29460                           
 29461                           ; BSR set to: 0
 29462                           
 29463                           ; BSR set to: 0
 29464  01281C  5169               	movf	___aldiv@sign& (0+255),w,b
 29465  01281E  B4D8               	btfsc	status,2,c
 29466  012820  D008               	goto	l3050
 29467                           
 29468                           ; BSR set to: 0
 29469  012822  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 29470  012824  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 29471  012826  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 29472  012828  6D6A               	negf	___aldiv@quotient& (0+255),b
 29473  01282A  0E00               	movlw	0
 29474  01282C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 29475  01282E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 29476  012830  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 29477  012832                     l3050:
 29478                           
 29479                           ; BSR set to: 0
 29480                           
 29481                           ; BSR set to: 0
 29482  012832  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 29483  012836  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 29484  01283A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 29485  01283E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 29486  012842  0012               	return	
 29487  012844                     __end_of___aldiv:
 29488                           	opt stack 0
 29489                           tblptru	equ	0xFF8
 29490                           tblptrh	equ	0xFF7
 29491                           tblptrl	equ	0xFF6
 29492                           tablat	equ	0xFF5
 29493                           prodh	equ	0xFF4
 29494                           prodl	equ	0xFF3
 29495                           intcon	equ	0xFF2
 29496                           postinc0	equ	0xFEE
 29497                           wreg	equ	0xFE8
 29498                           indf1	equ	0xFE7
 29499                           postinc1	equ	0xFE6
 29500                           postdec1	equ	0xFE5
 29501                           plusw1	equ	0xFE3
 29502                           fsr1h	equ	0xFE2
 29503                           fsr1l	equ	0xFE1
 29504                           indf2	equ	0xFDF
 29505                           postinc2	equ	0xFDE
 29506                           postdec2	equ	0xFDD
 29507                           plusw2	equ	0xFDB
 29508                           fsr2h	equ	0xFDA
 29509                           fsr2l	equ	0xFD9
 29510                           status	equ	0xFD8
 29511                           
 29512 ;; *************** function __display_clear *****************
 29513 ;; Defined at:
 29514 ;;		line 85 in file "display.c"
 29515 ;; Parameters:    Size  Location     Type
 29516 ;;		None
 29517 ;; Auto vars:     Size  Location     Type
 29518 ;;  col             1    3[BANK0 ] unsigned char 
 29519 ;;  row             1    2[BANK0 ] unsigned char 
 29520 ;; Return value:  Size  Location     Type
 29521 ;;                  1    wreg      void 
 29522 ;; Registers used:
 29523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29524 ;; Tracked objects:
 29525 ;;		On entry : 0/0
 29526 ;;		On exit  : 0/0
 29527 ;;		Unchanged: 0/0
 29528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29531 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29533 ;;Total ram usage:        4 bytes
 29534 ;; Hardware stack levels used:    1
 29535 ;; Hardware stack levels required when called:   10
 29536 ;; This function calls:
 29537 ;;		Nothing
 29538 ;; This function is called by:
 29539 ;;		_display_prepare
 29540 ;; This function uses a non-reentrant model
 29541 ;;
 29542                           
 29543                           	psect	text118
 29544  014DCA                     __ptext118:
 29545                           	opt stack 0
 29546  014DCA                     __display_clear:
 29547                           	opt stack 19
 29548                           
 29549                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 29550                           
 29551                           ; BSR set to: 0
 29552                           ;incstack = 0
 29553  014DCA  0E00               	movlw	0
 29554  014DCC  0100               	movlb	0	; () banked
 29555  014DCE  6F62               	movwf	__display_clear@row& (0+255),b
 29556  014DD0                     l17092:
 29557                           
 29558                           ; BSR set to: 0
 29559  014DD0  0E03               	movlw	3
 29560  014DD2  6562               	cpfsgt	__display_clear@row& (0+255),b
 29561  014DD4  D001               	goto	l1310
 29562  014DD6  0012               	return	
 29563  014DD8                     l1310:
 29564                           
 29565                           ; BSR set to: 0
 29566                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 29567                           
 29568                           ; BSR set to: 0
 29569  014DD8  0E00               	movlw	0
 29570  014DDA  6F63               	movwf	__display_clear@col& (0+255),b
 29571  014DDC                     l17098:
 29572                           
 29573                           ; BSR set to: 0
 29574  014DDC  0E13               	movlw	19
 29575  014DDE  6563               	cpfsgt	__display_clear@col& (0+255),b
 29576  014DE0  D001               	goto	l1312
 29577  014DE2  D016               	goto	u16490
 29578  014DE4                     l1312:
 29579                           
 29580                           ; BSR set to: 0
 29581                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 29582                           
 29583                           ; BSR set to: 0
 29584  014DE4  5162               	movf	__display_clear@row& (0+255),w,b
 29585  014DE6  0D14               	mullw	20
 29586  014DE8  0E34               	movlw	low _display_content
 29587  014DEA  6F60               	movwf	??__display_clear& (0+255),b
 29588  014DEC  0E02               	movlw	high _display_content
 29589  014DEE  6F61               	movwf	(??__display_clear+1)& (0+255),b
 29590  014DF0  50F3               	movf	prodl,w,c
 29591  014DF2  2760               	addwf	??__display_clear& (0+255),f,b
 29592  014DF4  50F4               	movf	prodh,w,c
 29593  014DF6  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 29594  014DF8  5163               	movf	__display_clear@col& (0+255),w,b
 29595  014DFA  0D01               	mullw	1
 29596  014DFC  50F3               	movf	prodl,w,c
 29597  014DFE  2560               	addwf	??__display_clear& (0+255),w,b
 29598  014E00  6ED9               	movwf	fsr2l,c
 29599  014E02  50F4               	movf	prodh,w,c
 29600  014E04  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 29601  014E06  6EDA               	movwf	fsr2h,c
 29602  014E08  0E20               	movlw	32
 29603  014E0A  6EDF               	movwf	indf2,c
 29604                           
 29605                           ; BSR set to: 0
 29606  014E0C  2B63               	incf	__display_clear@col& (0+255),f,b
 29607  014E0E  D7E6               	goto	l17098
 29608  014E10                     u16490:
 29609                           
 29610                           ; BSR set to: 0
 29611                           
 29612                           ; BSR set to: 0
 29613  014E10  2B62               	incf	__display_clear@row& (0+255),f,b
 29614  014E12  D7DE               	goto	l17092
 29615  014E14                     __end_of__display_clear:
 29616                           	opt stack 0
 29617                           tblptru	equ	0xFF8
 29618                           tblptrh	equ	0xFF7
 29619                           tblptrl	equ	0xFF6
 29620                           tablat	equ	0xFF5
 29621                           prodh	equ	0xFF4
 29622                           prodl	equ	0xFF3
 29623                           intcon	equ	0xFF2
 29624                           postinc0	equ	0xFEE
 29625                           wreg	equ	0xFE8
 29626                           indf1	equ	0xFE7
 29627                           postinc1	equ	0xFE6
 29628                           postdec1	equ	0xFE5
 29629                           plusw1	equ	0xFE3
 29630                           fsr1h	equ	0xFE2
 29631                           fsr1l	equ	0xFE1
 29632                           indf2	equ	0xFDF
 29633                           postinc2	equ	0xFDE
 29634                           postdec2	equ	0xFDD
 29635                           plusw2	equ	0xFDB
 29636                           fsr2h	equ	0xFDA
 29637                           fsr2l	equ	0xFD9
 29638                           status	equ	0xFD8
 29639                           
 29640 ;; *************** function _adc_read_temperature *****************
 29641 ;; Defined at:
 29642 ;;		line 44 in file "adc.c"
 29643 ;; Parameters:    Size  Location     Type
 29644 ;;		None
 29645 ;; Auto vars:     Size  Location     Type
 29646 ;;  temperature     4   43[BANK0 ] float 
 29647 ;;  adc_result      2   41[BANK0 ] unsigned int 
 29648 ;; Return value:  Size  Location     Type
 29649 ;;                  1    wreg      void 
 29650 ;; Registers used:
 29651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29652 ;; Tracked objects:
 29653 ;;		On entry : 0/0
 29654 ;;		On exit  : 0/0
 29655 ;;		Unchanged: 0/0
 29656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29658 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29660 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29661 ;;Total ram usage:        8 bytes
 29662 ;; Hardware stack levels used:    1
 29663 ;; Hardware stack levels required when called:   11
 29664 ;; This function calls:
 29665 ;;		___fladd
 29666 ;;		___flmul
 29667 ;;		___flneg
 29668 ;;		___fltol
 29669 ;;		___xxtofl
 29670 ;; This function is called by:
 29671 ;;		_main
 29672 ;; This function uses a non-reentrant model
 29673 ;;
 29674                           
 29675                           	psect	text119
 29676  00F22E                     __ptext119:
 29677                           	opt stack 0
 29678  00F22E                     _adc_read_temperature:
 29679                           	opt stack 19
 29680                           
 29681                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 29682                           
 29683                           ; BSR set to: 0
 29684                           ;incstack = 0
 29685  00F22E  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 29686  00F232  0100               	movlb	0	; () banked
 29687  00F234  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 29688                           
 29689                           ; BSR set to: 0
 29690                           ;adc.c: 51: adc_result <<= 8;
 29691  00F236  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29692  00F238  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 29693  00F23A  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 29694                           
 29695                           ; BSR set to: 0
 29696                           ;adc.c: 52: adc_result |= ADRESL;
 29697  00F23C  50C3               	movf	4035,w,c	;volatile
 29698  00F23E  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 29699                           
 29700                           ; BSR set to: 0
 29701                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 29702  00F240  0102               	movlb	2	; () banked
 29703  00F242  511F               	movf	_params& (0+255),w,b
 29704  00F244  0D02               	mullw	2
 29705  00F246  0E20               	movlw	low (_params+1)
 29706  00F248  24F3               	addwf	prodl,w,c
 29707  00F24A  6ED9               	movwf	fsr2l,c
 29708  00F24C  0E02               	movlw	high (_params+1)
 29709  00F24E  20F4               	addwfc	prodh,w,c
 29710  00F250  6EDA               	movwf	fsr2h,c
 29711  00F252  0100               	movlb	0	; () banked
 29712  00F254  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29713  00F256  26DE               	addwf	postinc2,f,c
 29714  00F258  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 29715  00F25A  22DD               	addwfc	postdec2,f,c
 29716                           
 29717                           ; BSR set to: 0
 29718                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 29719  00F25C  0102               	movlb	2	; () banked
 29720  00F25E  511F               	movf	_params& (0+255),w,b
 29721  00F260  0D01               	mullw	1
 29722  00F262  0E24               	movlw	low (_params+5)
 29723  00F264  24F3               	addwf	prodl,w,c
 29724  00F266  6ED9               	movwf	fsr2l,c
 29725  00F268  0E02               	movlw	high (_params+5)
 29726  00F26A  20F4               	addwfc	prodh,w,c
 29727  00F26C  6EDA               	movwf	fsr2h,c
 29728  00F26E  2ADF               	incf	indf2,f,c
 29729                           
 29730                           ; BSR set to: 2
 29731                           ;adc.c: 59: ADCON0bits.GO = 1;
 29732  00F270  82C2               	bsf	4034,1,c	;volatile
 29733                           
 29734                           ; BSR set to: 2
 29735                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 29736  00F272  511F               	movf	_params& (0+255),w,b
 29737  00F274  0D01               	mullw	1
 29738  00F276  0E24               	movlw	low (_params+5)
 29739  00F278  24F3               	addwf	prodl,w,c
 29740  00F27A  6ED9               	movwf	fsr2l,c
 29741  00F27C  0E02               	movlw	high (_params+5)
 29742  00F27E  20F4               	addwfc	prodh,w,c
 29743  00F280  6EDA               	movwf	fsr2h,c
 29744  00F282  0E08               	movlw	8
 29745  00F284  18DE               	xorwf	postinc2,w,c
 29746  00F286  A4D8               	btfss	status,2,c
 29747  00F288  D0AF               	goto	l2840
 29748                           
 29749                           ; BSR set to: 2
 29750                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 29751  00F28A  511F               	movf	_params& (0+255),w,b
 29752  00F28C  0D02               	mullw	2
 29753  00F28E  0E20               	movlw	low (_params+1)
 29754  00F290  24F3               	addwf	prodl,w,c
 29755  00F292  6ED9               	movwf	fsr2l,c
 29756  00F294  0E02               	movlw	high (_params+1)
 29757  00F296  20F4               	addwfc	prodh,w,c
 29758  00F298  6EDA               	movwf	fsr2h,c
 29759  00F29A  CFDE F087          	movff	postinc2,??_adc_read_temperature
 29760  00F29E  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 29761  00F2A2  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 29762  00F2A6  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 29763  00F2AA  0100               	movlb	0	; () banked
 29764  00F2AC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 29765  00F2AE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 29766  00F2B0  0E00               	movlw	0
 29767  00F2B2  EC17  F081         	call	___xxtofl
 29768  00F2B6  C060  F06E         	movff	?___xxtofl,___flneg@f1
 29769  00F2BA  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 29770  00F2BE  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 29771  00F2C2  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 29772  00F2C6  ECBC  F0A9         	call	___flneg	;wreg free
 29773  00F2CA  C06E  F072         	movff	?___flneg,___fladd@b
 29774  00F2CE  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 29775  00F2D2  C070  F074         	movff	?___flneg+2,___fladd@b+2
 29776  00F2D6  C071  F075         	movff	?___flneg+3,___fladd@b+3
 29777  00F2DA  0E00               	movlw	0
 29778  00F2DC  0100               	movlb	0	; () banked
 29779  00F2DE  6F76               	movwf	___fladd@a& (0+255),b
 29780  00F2E0  0E90               	movlw	144
 29781  00F2E2  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29782  00F2E4  0EA4               	movlw	164
 29783  00F2E6  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29784  00F2E8  0E46               	movlw	70
 29785  00F2EA  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29786  00F2EC  ECC7  F067         	call	___fladd	;wreg free
 29787  00F2F0  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 29788  00F2F4  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 29789  00F2F8  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 29790  00F2FC  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 29791                           
 29792                           ;adc.c: 68: temperature *= 0.7405;
 29793  00F300  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 29794  00F304  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 29795  00F308  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 29796  00F30C  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 29797  00F310  0E68               	movlw	104
 29798  00F312  0100               	movlb	0	; () banked
 29799  00F314  6F72               	movwf	___flmul@a& (0+255),b
 29800  00F316  0E91               	movlw	145
 29801  00F318  6F73               	movwf	(___flmul@a+1)& (0+255),b
 29802  00F31A  0E3D               	movlw	61
 29803  00F31C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 29804  00F31E  0E3F               	movlw	63
 29805  00F320  6F75               	movwf	(___flmul@a+3)& (0+255),b
 29806  00F322  EC1E  F066         	call	___flmul	;wreg free
 29807  00F326  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 29808  00F32A  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 29809  00F32E  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 29810  00F332  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 29811                           
 29812                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 29813  00F336  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 29814  00F33A  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 29815  00F33E  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 29816  00F342  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 29817  00F346  EC62  F090         	call	___fltol	;wreg free
 29818  00F34A  0102               	movlb	2	; () banked
 29819  00F34C  511F               	movf	_params& (0+255),w,b
 29820  00F34E  0D02               	mullw	2
 29821  00F350  0E98               	movlw	low (_os+39)
 29822  00F352  24F3               	addwf	prodl,w,c
 29823  00F354  6ED9               	movwf	fsr2l,c
 29824  00F356  0E01               	movlw	high (_os+39)
 29825  00F358  20F4               	addwfc	prodh,w,c
 29826  00F35A  6EDA               	movwf	fsr2h,c
 29827  00F35C  0100               	movlb	0	; () banked
 29828  00F35E  C060  FFDE         	movff	?___fltol,postinc2
 29829  00F362  C061  FFDD         	movff	?___fltol+1,postdec2
 29830                           
 29831                           ; BSR set to: 0
 29832                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 29833  00F366  0102               	movlb	2	; () banked
 29834  00F368  511F               	movf	_params& (0+255),w,b
 29835  00F36A  0D02               	mullw	2
 29836  00F36C  0E20               	movlw	low (_params+1)
 29837  00F36E  24F3               	addwf	prodl,w,c
 29838  00F370  6ED9               	movwf	fsr2l,c
 29839  00F372  0E02               	movlw	high (_params+1)
 29840  00F374  20F4               	addwfc	prodh,w,c
 29841  00F376  6EDA               	movwf	fsr2h,c
 29842  00F378  0E00               	movlw	0
 29843  00F37A  6EDE               	movwf	postinc2,c
 29844  00F37C  0E00               	movlw	0
 29845  00F37E  6EDD               	movwf	postdec2,c
 29846                           
 29847                           ; BSR set to: 2
 29848                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 29849  00F380  511F               	movf	_params& (0+255),w,b
 29850  00F382  0D01               	mullw	1
 29851  00F384  0E24               	movlw	low (_params+5)
 29852  00F386  24F3               	addwf	prodl,w,c
 29853  00F388  6ED9               	movwf	fsr2l,c
 29854  00F38A  0E02               	movlw	high (_params+5)
 29855  00F38C  20F4               	addwfc	prodh,w,c
 29856  00F38E  6EDA               	movwf	fsr2h,c
 29857  00F390  0E00               	movlw	0
 29858  00F392  6EDF               	movwf	indf2,c
 29859                           
 29860                           ; BSR set to: 2
 29861                           ;adc.c: 78: if(os.fan_on)
 29862  00F394  0101               	movlb	1	; () banked
 29863  00F396  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 29864  00F398  B4D8               	btfsc	status,2,c
 29865  00F39A  D013               	goto	l2837
 29866                           
 29867                           ; BSR set to: 1
 29868                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 29869  00F39C  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29870  00F39E  D006               	goto	u18120
 29871  00F3A0  0E60               	movlw	96
 29872  00F3A2  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29873  00F3A4  0E09               	movlw	9
 29874  00F3A6  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29875  00F3A8  B0D8               	btfsc	status,0,c
 29876  00F3AA  D01E               	goto	l2840
 29877  00F3AC                     u18120:
 29878                           
 29879                           ; BSR set to: 1
 29880  00F3AC  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29881  00F3AE  D006               	goto	u18130
 29882  00F3B0  0E60               	movlw	96
 29883  00F3B2  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29884  00F3B4  0E09               	movlw	9
 29885  00F3B6  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29886  00F3B8  B0D8               	btfsc	status,0,c
 29887  00F3BA  D016               	goto	l2840
 29888  00F3BC                     u18130:
 29889                           
 29890                           ; BSR set to: 1
 29891                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 29892  00F3BC  9C8B               	bcf	3979,6,c	;volatile
 29893                           
 29894                           ; BSR set to: 1
 29895                           ;adc.c: 83: os.fan_on = 0;
 29896  00F3BE  0E00               	movlw	0
 29897  00F3C0  D012               	goto	L39
 29898  00F3C2                     l2837:
 29899                           
 29900                           ; BSR set to: 1
 29901                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 29902                           
 29903                           ; BSR set to: 1
 29904  00F3C2  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29905  00F3C4  D006               	goto	u18140
 29906  00F3C6  0EC5               	movlw	197
 29907  00F3C8  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29908  00F3CA  0E09               	movlw	9
 29909  00F3CC  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29910  00F3CE  B0D8               	btfsc	status,0,c
 29911  00F3D0  D008               	goto	u18150
 29912  00F3D2                     u18140:
 29913                           
 29914                           ; BSR set to: 1
 29915  00F3D2  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29916  00F3D4  D009               	goto	l2840
 29917  00F3D6  0EC5               	movlw	197
 29918  00F3D8  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29919  00F3DA  0E09               	movlw	9
 29920  00F3DC  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29921  00F3DE  A0D8               	btfss	status,0,c
 29922  00F3E0  D003               	goto	l2840
 29923  00F3E2                     u18150:
 29924                           
 29925                           ; BSR set to: 1
 29926                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 29927  00F3E2  8C8B               	bsf	3979,6,c	;volatile
 29928                           
 29929                           ; BSR set to: 1
 29930                           ;adc.c: 91: os.fan_on = 1;
 29931  00F3E4  0E01               	movlw	1
 29932  00F3E6                     L39:
 29933  00F3E6  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 29934  00F3E8                     l2840:
 29935                           
 29936                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 29937                           
 29938                           ; BSR set to: 1
 29939                           
 29940                           ; BSR set to: 1
 29941  00F3E8  0102               	movlb	2	; () banked
 29942  00F3EA  511F               	movf	_params& (0+255),w,b
 29943  00F3EC  A4D8               	btfss	status,2,c
 29944  00F3EE  D007               	goto	l2843
 29945                           
 29946                           ; BSR set to: 2
 29947                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 29948  00F3F0  50C2               	movf	4034,w,c	;volatile
 29949  00F3F2  0BC3               	andlw	-61
 29950  00F3F4  092C               	iorlw	44
 29951  00F3F6  6EC2               	movwf	4034,c	;volatile
 29952                           
 29953                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 29954  00F3F8  0E01               	movlw	1
 29955  00F3FA  6F1F               	movwf	_params& (0+255),b
 29956                           
 29957                           ;adc.c: 101: }
 29958  00F3FC  0012               	return	
 29959  00F3FE                     l2843:
 29960                           
 29961                           ; BSR set to: 2
 29962                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 29963                           
 29964                           ; BSR set to: 2
 29965  00F3FE  50C2               	movf	4034,w,c	;volatile
 29966  00F400  0BC3               	andlw	-61
 29967  00F402  0924               	iorlw	36
 29968  00F404  6EC2               	movwf	4034,c	;volatile
 29969                           
 29970                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 29971  00F406  0E00               	movlw	0
 29972  00F408  6F1F               	movwf	_params& (0+255),b
 29973  00F40A  0012               	return	
 29974  00F40C                     __end_of_adc_read_temperature:
 29975                           	opt stack 0
 29976                           tblptru	equ	0xFF8
 29977                           tblptrh	equ	0xFF7
 29978                           tblptrl	equ	0xFF6
 29979                           tablat	equ	0xFF5
 29980                           prodh	equ	0xFF4
 29981                           prodl	equ	0xFF3
 29982                           intcon	equ	0xFF2
 29983                           postinc0	equ	0xFEE
 29984                           wreg	equ	0xFE8
 29985                           indf1	equ	0xFE7
 29986                           postinc1	equ	0xFE6
 29987                           postdec1	equ	0xFE5
 29988                           plusw1	equ	0xFE3
 29989                           fsr1h	equ	0xFE2
 29990                           fsr1l	equ	0xFE1
 29991                           indf2	equ	0xFDF
 29992                           postinc2	equ	0xFDE
 29993                           postdec2	equ	0xFDD
 29994                           plusw2	equ	0xFDB
 29995                           fsr2h	equ	0xFDA
 29996                           fsr2l	equ	0xFD9
 29997                           status	equ	0xFD8
 29998                           
 29999 ;; *************** function ___flneg *****************
 30000 ;; Defined at:
 30001 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 30002 ;; Parameters:    Size  Location     Type
 30003 ;;  f1              4   14[BANK0 ] void 
 30004 ;; Auto vars:     Size  Location     Type
 30005 ;;		None
 30006 ;; Return value:  Size  Location     Type
 30007 ;;                  4   14[BANK0 ] void 
 30008 ;; Registers used:
 30009 ;;		wreg, status,2, status,0
 30010 ;; Tracked objects:
 30011 ;;		On entry : 0/0
 30012 ;;		On exit  : 0/0
 30013 ;;		Unchanged: 0/0
 30014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30018 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30019 ;;Total ram usage:        4 bytes
 30020 ;; Hardware stack levels used:    1
 30021 ;; Hardware stack levels required when called:   10
 30022 ;; This function calls:
 30023 ;;		Nothing
 30024 ;; This function is called by:
 30025 ;;		_adc_read_temperature
 30026 ;; This function uses a non-reentrant model
 30027 ;;
 30028                           
 30029                           	psect	text120
 30030  015378                     __ptext120:
 30031                           	opt stack 0
 30032  015378                     ___flneg:
 30033                           	opt stack 19
 30034                           
 30035                           ; BSR set to: 2
 30036                           ;incstack = 0
 30037  015378  0100               	movlb	0	; () banked
 30038  01537A  516E               	movf	___flneg@f1& (0+255),w,b
 30039  01537C  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 30040  01537E  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 30041  015380  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 30042  015382  B4D8               	btfsc	status,2,c
 30043  015384  D008               	goto	l3237
 30044                           
 30045                           ; BSR set to: 0
 30046  015386  0E00               	movlw	0
 30047  015388  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 30048  01538A  0E00               	movlw	0
 30049  01538C  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 30050  01538E  0E00               	movlw	0
 30051  015390  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 30052  015392  0E80               	movlw	128
 30053  015394  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 30054  015396                     l3237:
 30055                           
 30056                           ; BSR set to: 0
 30057                           
 30058                           ; BSR set to: 0
 30059  015396  C06E  F06E         	movff	___flneg@f1,?___flneg
 30060  01539A  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 30061  01539E  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 30062  0153A2  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 30063  0153A6  0012               	return	
 30064  0153A8                     __end_of___flneg:
 30065                           	opt stack 0
 30066                           tblptru	equ	0xFF8
 30067                           tblptrh	equ	0xFF7
 30068                           tblptrl	equ	0xFF6
 30069                           tablat	equ	0xFF5
 30070                           prodh	equ	0xFF4
 30071                           prodl	equ	0xFF3
 30072                           intcon	equ	0xFF2
 30073                           postinc0	equ	0xFEE
 30074                           wreg	equ	0xFE8
 30075                           indf1	equ	0xFE7
 30076                           postinc1	equ	0xFE6
 30077                           postdec1	equ	0xFE5
 30078                           plusw1	equ	0xFE3
 30079                           fsr1h	equ	0xFE2
 30080                           fsr1l	equ	0xFE1
 30081                           indf2	equ	0xFDF
 30082                           postinc2	equ	0xFDE
 30083                           postdec2	equ	0xFDD
 30084                           plusw2	equ	0xFDB
 30085                           fsr2h	equ	0xFDA
 30086                           fsr2l	equ	0xFD9
 30087                           status	equ	0xFD8
 30088                           
 30089 ;; *************** function ___fladd *****************
 30090 ;; Defined at:
 30091 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 30092 ;; Parameters:    Size  Location     Type
 30093 ;;  b               4   18[BANK0 ] void 
 30094 ;;  a               4   22[BANK0 ] void 
 30095 ;; Auto vars:     Size  Location     Type
 30096 ;;  grs             1   37[BANK0 ] unsigned char 
 30097 ;;  bexp            1   36[BANK0 ] unsigned char 
 30098 ;;  aexp            1   35[BANK0 ] unsigned char 
 30099 ;;  signs           1   34[BANK0 ] unsigned char 
 30100 ;; Return value:  Size  Location     Type
 30101 ;;                  4   18[BANK0 ] unsigned char 
 30102 ;; Registers used:
 30103 ;;		wreg, status,2, status,0
 30104 ;; Tracked objects:
 30105 ;;		On entry : 0/0
 30106 ;;		On exit  : 0/0
 30107 ;;		Unchanged: 0/0
 30108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30110 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30111 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30112 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30113 ;;Total ram usage:       20 bytes
 30114 ;; Hardware stack levels used:    1
 30115 ;; Hardware stack levels required when called:   10
 30116 ;; This function calls:
 30117 ;;		Nothing
 30118 ;; This function is called by:
 30119 ;;		_motor_divide_jump_to_nearest
 30120 ;;		_adc_read_temperature
 30121 ;; This function uses a non-reentrant model
 30122 ;;
 30123                           
 30124                           	psect	text121
 30125  00CF8E                     __ptext121:
 30126                           	opt stack 0
 30127  00CF8E                     ___fladd:
 30128                           	opt stack 18
 30129                           
 30130                           ; BSR set to: 0
 30131                           ;incstack = 0
 30132  00CF8E  0100               	movlb	0	; () banked
 30133  00CF90  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30134  00CF92  0B80               	andlw	128
 30135  00CF94  6F82               	movwf	___fladd@signs& (0+255),b
 30136  00CF96  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30137  00CF98  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 30138  00CF9A  6F84               	movwf	___fladd@bexp& (0+255),b
 30139                           
 30140                           ; BSR set to: 0
 30141  00CF9C  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 30142                           
 30143                           ; BSR set to: 0
 30144  00CF9E  8184               	bsf	___fladd@bexp& (0+255),0,b
 30145                           
 30146                           ; BSR set to: 0
 30147                           
 30148                           ; BSR set to: 0
 30149  00CFA0  5184               	movf	___fladd@bexp& (0+255),w,b
 30150  00CFA2  B4D8               	btfsc	status,2,c
 30151  00CFA4  D00D               	goto	l3477
 30152                           
 30153                           ; BSR set to: 0
 30154  00CFA6  2984               	incf	___fladd@bexp& (0+255),w,b
 30155  00CFA8  A4D8               	btfss	status,2,c
 30156  00CFAA  D008               	goto	l3478
 30157                           
 30158                           ; BSR set to: 0
 30159  00CFAC  0E00               	movlw	0
 30160  00CFAE  6F72               	movwf	___fladd@b& (0+255),b
 30161  00CFB0  0E00               	movlw	0
 30162  00CFB2  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30163  00CFB4  0E00               	movlw	0
 30164  00CFB6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30165  00CFB8  0E00               	movlw	0
 30166  00CFBA  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30167  00CFBC                     l3478:
 30168                           
 30169                           ; BSR set to: 0
 30170                           
 30171                           ; BSR set to: 0
 30172  00CFBC  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30173  00CFBE  D006               	goto	L40
 30174  00CFC0                     l3477:
 30175                           
 30176                           ; BSR set to: 0
 30177                           
 30178                           ; BSR set to: 0
 30179  00CFC0  0E00               	movlw	0
 30180  00CFC2  6F72               	movwf	___fladd@b& (0+255),b
 30181  00CFC4  0E00               	movlw	0
 30182  00CFC6  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30183  00CFC8  0E00               	movlw	0
 30184  00CFCA  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30185  00CFCC                     L40:
 30186  00CFCC  0E00               	movlw	0
 30187  00CFCE  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30188                           
 30189                           ; BSR set to: 0
 30190                           
 30191                           ; BSR set to: 0
 30192  00CFD0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30193  00CFD2  0B80               	andlw	128
 30194  00CFD4  6F83               	movwf	___fladd@aexp& (0+255),b
 30195                           
 30196                           ; BSR set to: 0
 30197  00CFD6  5182               	movf	___fladd@signs& (0+255),w,b
 30198  00CFD8  1983               	xorwf	___fladd@aexp& (0+255),w,b
 30199  00CFDA  A4D8               	btfss	status,2,c
 30200                           
 30201                           ; BSR set to: 0
 30202  00CFDC  8D82               	bsf	___fladd@signs& (0+255),6,b
 30203                           
 30204                           ; BSR set to: 0
 30205                           
 30206                           ; BSR set to: 0
 30207  00CFDE  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30208  00CFE0  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 30209  00CFE2  6F83               	movwf	___fladd@aexp& (0+255),b
 30210                           
 30211                           ; BSR set to: 0
 30212  00CFE4  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 30213                           
 30214                           ; BSR set to: 0
 30215  00CFE6  8183               	bsf	___fladd@aexp& (0+255),0,b
 30216                           
 30217                           ; BSR set to: 0
 30218                           
 30219                           ; BSR set to: 0
 30220  00CFE8  5183               	movf	___fladd@aexp& (0+255),w,b
 30221  00CFEA  B4D8               	btfsc	status,2,c
 30222  00CFEC  D00D               	goto	l3482
 30223                           
 30224                           ; BSR set to: 0
 30225  00CFEE  2983               	incf	___fladd@aexp& (0+255),w,b
 30226  00CFF0  A4D8               	btfss	status,2,c
 30227  00CFF2  D008               	goto	l3483
 30228                           
 30229                           ; BSR set to: 0
 30230  00CFF4  0E00               	movlw	0
 30231  00CFF6  6F76               	movwf	___fladd@a& (0+255),b
 30232  00CFF8  0E00               	movlw	0
 30233  00CFFA  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30234  00CFFC  0E00               	movlw	0
 30235  00CFFE  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30236  00D000  0E00               	movlw	0
 30237  00D002  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30238  00D004                     l3483:
 30239                           
 30240                           ; BSR set to: 0
 30241                           
 30242                           ; BSR set to: 0
 30243  00D004  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 30244  00D006  D006               	goto	L41
 30245  00D008                     l3482:
 30246                           
 30247                           ; BSR set to: 0
 30248                           
 30249                           ; BSR set to: 0
 30250  00D008  0E00               	movlw	0
 30251  00D00A  6F76               	movwf	___fladd@a& (0+255),b
 30252  00D00C  0E00               	movlw	0
 30253  00D00E  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30254  00D010  0E00               	movlw	0
 30255  00D012  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30256  00D014                     L41:
 30257  00D014  0E00               	movlw	0
 30258  00D016  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30259                           
 30260                           ; BSR set to: 0
 30261                           
 30262                           ; BSR set to: 0
 30263  00D018  5184               	movf	___fladd@bexp& (0+255),w,b
 30264  00D01A  5D83               	subwf	___fladd@aexp& (0+255),w,b
 30265  00D01C  B0D8               	btfsc	status,0,c
 30266  00D01E  D022               	goto	l3485
 30267                           
 30268                           ; BSR set to: 0
 30269  00D020  AD82               	btfss	___fladd@signs& (0+255),6,b
 30270  00D022  D002               	goto	l3486
 30271                           
 30272                           ; BSR set to: 0
 30273  00D024  0E80               	movlw	128
 30274  00D026  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30275  00D028                     l3486:
 30276                           
 30277                           ; BSR set to: 0
 30278                           
 30279                           ; BSR set to: 0
 30280  00D028  C084  F085         	movff	___fladd@bexp,___fladd@grs
 30281                           
 30282                           ; BSR set to: 0
 30283  00D02C  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30284                           
 30285                           ; BSR set to: 0
 30286  00D030  C085  F083         	movff	___fladd@grs,___fladd@aexp
 30287                           
 30288                           ; BSR set to: 0
 30289  00D034  C072  F085         	movff	___fladd@b,___fladd@grs
 30290                           
 30291                           ; BSR set to: 0
 30292  00D038  C076  F072         	movff	___fladd@a,___fladd@b
 30293                           
 30294                           ; BSR set to: 0
 30295  00D03C  C085  F076         	movff	___fladd@grs,___fladd@a
 30296                           
 30297                           ; BSR set to: 0
 30298  00D040  C073  F085         	movff	___fladd@b+1,___fladd@grs
 30299                           
 30300                           ; BSR set to: 0
 30301  00D044  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 30302                           
 30303                           ; BSR set to: 0
 30304  00D048  C085  F077         	movff	___fladd@grs,___fladd@a+1
 30305                           
 30306                           ; BSR set to: 0
 30307  00D04C  C074  F085         	movff	___fladd@b+2,___fladd@grs
 30308                           
 30309                           ; BSR set to: 0
 30310  00D050  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 30311                           
 30312                           ; BSR set to: 0
 30313  00D054  C085  F078         	movff	___fladd@grs,___fladd@a+2
 30314                           
 30315                           ; BSR set to: 0
 30316  00D058  C075  F085         	movff	___fladd@b+3,___fladd@grs
 30317                           
 30318                           ; BSR set to: 0
 30319  00D05C  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 30320                           
 30321                           ; BSR set to: 0
 30322  00D060  C085  F079         	movff	___fladd@grs,___fladd@a+3
 30323  00D064                     l3485:
 30324                           
 30325                           ; BSR set to: 0
 30326                           
 30327                           ; BSR set to: 0
 30328  00D064  0E00               	movlw	0
 30329  00D066  6F85               	movwf	___fladd@grs& (0+255),b
 30330                           
 30331                           ; BSR set to: 0
 30332  00D068  5184               	movf	___fladd@bexp& (0+255),w,b
 30333  00D06A  6F7A               	movwf	??___fladd& (0+255),b
 30334  00D06C  6B7B               	clrf	(??___fladd+1)& (0+255),b
 30335  00D06E  1F7A               	comf	??___fladd& (0+255),f,b
 30336  00D070  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30337  00D072  4B7A               	infsnz	??___fladd& (0+255),f,b
 30338  00D074  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 30339  00D076  5183               	movf	___fladd@aexp& (0+255),w,b
 30340  00D078  6F7C               	movwf	(??___fladd+2)& (0+255),b
 30341  00D07A  6B7D               	clrf	(??___fladd+3)& (0+255),b
 30342  00D07C  517A               	movf	??___fladd& (0+255),w,b
 30343  00D07E  277C               	addwf	(??___fladd+2)& (0+255),f,b
 30344  00D080  517B               	movf	(??___fladd+1)& (0+255),w,b
 30345  00D082  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30346  00D084  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 30347  00D086  D02C               	goto	l3489
 30348  00D088  517D               	movf	(??___fladd+3)& (0+255),w,b
 30349  00D08A  E104               	bnz	u15360
 30350  00D08C  0E1A               	movlw	26
 30351  00D08E  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 30352  00D090  A0D8               	btfss	status,0,c
 30353  00D092  D026               	goto	l3489
 30354  00D094                     u15360:
 30355                           
 30356                           ; BSR set to: 0
 30357  00D094  5172               	movf	___fladd@b& (0+255),w,b
 30358  00D096  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30359  00D098  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30360  00D09A  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30361  00D09C  B4D8               	btfsc	status,2,c
 30362  00D09E  D002               	goto	u15370
 30363  00D0A0  0E01               	movlw	1
 30364  00D0A2  D001               	goto	u15380
 30365  00D0A4                     u15370:
 30366  00D0A4  0E00               	movlw	0
 30367  00D0A6                     u15380:
 30368  00D0A6  6F85               	movwf	___fladd@grs& (0+255),b
 30369                           
 30370                           ; BSR set to: 0
 30371  00D0A8  0E00               	movlw	0
 30372  00D0AA  6F72               	movwf	___fladd@b& (0+255),b
 30373  00D0AC  0E00               	movlw	0
 30374  00D0AE  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30375  00D0B0  0E00               	movlw	0
 30376  00D0B2  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30377  00D0B4  0E00               	movlw	0
 30378  00D0B6  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30379                           
 30380                           ; BSR set to: 0
 30381  00D0B8  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30382  00D0BC  D015               	goto	u15410
 30383  00D0BE                     l3490:
 30384                           
 30385                           ; BSR set to: 0
 30386  00D0BE  A185               	btfss	___fladd@grs& (0+255),0,b
 30387  00D0C0  D005               	goto	l3491
 30388                           
 30389                           ; BSR set to: 0
 30390  00D0C2  90D8               	bcf	status,0,c
 30391  00D0C4  3185               	rrcf	___fladd@grs& (0+255),w,b
 30392  00D0C6  0901               	iorlw	1
 30393  00D0C8  6F85               	movwf	___fladd@grs& (0+255),b
 30394  00D0CA  D002               	goto	l3492
 30395  00D0CC                     l3491:
 30396                           
 30397                           ; BSR set to: 0
 30398                           
 30399                           ; BSR set to: 0
 30400  00D0CC  90D8               	bcf	status,0,c
 30401  00D0CE  3385               	rrcf	___fladd@grs& (0+255),f,b
 30402  00D0D0                     l3492:
 30403                           
 30404                           ; BSR set to: 0
 30405                           
 30406                           ; BSR set to: 0
 30407  00D0D0  B172               	btfsc	___fladd@b& (0+255),0,b
 30408                           
 30409                           ; BSR set to: 0
 30410  00D0D2  8F85               	bsf	___fladd@grs& (0+255),7,b
 30411                           
 30412                           ; BSR set to: 0
 30413                           
 30414                           ; BSR set to: 0
 30415  00D0D4  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30416  00D0D6  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30417  00D0D8  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30418  00D0DA  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30419  00D0DC  3372               	rrcf	___fladd@b& (0+255),f,b
 30420                           
 30421                           ; BSR set to: 0
 30422  00D0DE  2B84               	incf	___fladd@bexp& (0+255),f,b
 30423  00D0E0                     l3489:
 30424                           
 30425                           ; BSR set to: 0
 30426  00D0E0  5183               	movf	___fladd@aexp& (0+255),w,b
 30427  00D0E2  5D84               	subwf	___fladd@bexp& (0+255),w,b
 30428  00D0E4  A0D8               	btfss	status,0,c
 30429  00D0E6  D7EB               	goto	l3490
 30430  00D0E8                     u15410:
 30431                           
 30432                           ; BSR set to: 0
 30433                           
 30434                           ; BSR set to: 0
 30435  00D0E8  BD82               	btfsc	___fladd@signs& (0+255),6,b
 30436  00D0EA  D028               	goto	l3495
 30437                           
 30438                           ; BSR set to: 0
 30439  00D0EC  5184               	movf	___fladd@bexp& (0+255),w,b
 30440  00D0EE  A4D8               	btfss	status,2,c
 30441  00D0F0  D009               	goto	l3496
 30442                           
 30443                           ; BSR set to: 0
 30444  00D0F2  0E00               	movlw	0
 30445  00D0F4  6F72               	movwf	?___fladd& (0+255),b
 30446  00D0F6  0E00               	movlw	0
 30447  00D0F8  6F73               	movwf	(?___fladd+1)& (0+255),b
 30448  00D0FA  0E00               	movlw	0
 30449  00D0FC  6F74               	movwf	(?___fladd+2)& (0+255),b
 30450  00D0FE  0E00               	movlw	0
 30451  00D100  6F75               	movwf	(?___fladd+3)& (0+255),b
 30452                           
 30453                           ; BSR set to: 0
 30454  00D102  0012               	return	
 30455  00D104                     l3496:
 30456                           
 30457                           ; BSR set to: 0
 30458                           
 30459                           ; BSR set to: 0
 30460  00D104  5176               	movf	___fladd@a& (0+255),w,b
 30461  00D106  2772               	addwf	___fladd@b& (0+255),f,b
 30462  00D108  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30463  00D10A  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30464  00D10C  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30465  00D10E  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30466  00D110  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30467  00D112  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30468                           
 30469                           ; BSR set to: 0
 30470  00D114  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30471  00D116  D082               	goto	u15540
 30472                           
 30473                           ; BSR set to: 0
 30474  00D118  A185               	btfss	___fladd@grs& (0+255),0,b
 30475  00D11A  D005               	goto	l3499
 30476                           
 30477                           ; BSR set to: 0
 30478  00D11C  90D8               	bcf	status,0,c
 30479  00D11E  3185               	rrcf	___fladd@grs& (0+255),w,b
 30480  00D120  0901               	iorlw	1
 30481  00D122  6F85               	movwf	___fladd@grs& (0+255),b
 30482  00D124  D002               	goto	l3500
 30483  00D126                     l3499:
 30484                           
 30485                           ; BSR set to: 0
 30486                           
 30487                           ; BSR set to: 0
 30488  00D126  90D8               	bcf	status,0,c
 30489  00D128  3385               	rrcf	___fladd@grs& (0+255),f,b
 30490  00D12A                     l3500:
 30491                           
 30492                           ; BSR set to: 0
 30493                           
 30494                           ; BSR set to: 0
 30495  00D12A  B172               	btfsc	___fladd@b& (0+255),0,b
 30496                           
 30497                           ; BSR set to: 0
 30498  00D12C  8F85               	bsf	___fladd@grs& (0+255),7,b
 30499                           
 30500                           ; BSR set to: 0
 30501                           
 30502                           ; BSR set to: 0
 30503  00D12E  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30504  00D130  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30505  00D132  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30506  00D134  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30507  00D136  3372               	rrcf	___fladd@b& (0+255),f,b
 30508                           
 30509                           ; BSR set to: 0
 30510  00D138  2B84               	incf	___fladd@bexp& (0+255),f,b
 30511                           
 30512                           ; BSR set to: 0
 30513  00D13A  D070               	goto	u15540
 30514  00D13C                     l3495:
 30515                           
 30516                           ; BSR set to: 0
 30517                           
 30518                           ; BSR set to: 0
 30519  00D13C  5176               	movf	___fladd@a& (0+255),w,b
 30520  00D13E  5D72               	subwf	___fladd@b& (0+255),w,b
 30521  00D140  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30522  00D142  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 30523  00D144  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30524  00D146  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 30525  00D148  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30526  00D14A  0A80               	xorlw	128
 30527  00D14C  6F7A               	movwf	??___fladd& (0+255),b
 30528  00D14E  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30529  00D150  0A80               	xorlw	128
 30530  00D152  597A               	subwfb	??___fladd& (0+255),w,b
 30531  00D154  B0D8               	btfsc	status,0,c
 30532  00D156  D036               	goto	l3503
 30533                           
 30534                           ; BSR set to: 0
 30535  00D158  C072  F07A         	movff	___fladd@b,??___fladd
 30536  00D15C  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30537  00D160  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30538  00D164  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30539  00D168  1F7A               	comf	??___fladd& (0+255),f,b
 30540  00D16A  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30541  00D16C  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 30542  00D16E  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 30543  00D170  2B7A               	incf	??___fladd& (0+255),f,b
 30544  00D172  0E00               	movlw	0
 30545  00D174  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 30546  00D176  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 30547  00D178  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30548  00D17A  5176               	movf	___fladd@a& (0+255),w,b
 30549  00D17C  257A               	addwf	??___fladd& (0+255),w,b
 30550  00D17E  6F7E               	movwf	(??___fladd+4)& (0+255),b
 30551  00D180  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30552  00D182  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 30553  00D184  6F7F               	movwf	(??___fladd+5)& (0+255),b
 30554  00D186  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30555  00D188  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 30556  00D18A  6F80               	movwf	(??___fladd+6)& (0+255),b
 30557  00D18C  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30558  00D18E  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 30559  00D190  6F81               	movwf	(??___fladd+7)& (0+255),b
 30560  00D192  0EFF               	movlw	255
 30561  00D194  257E               	addwf	(??___fladd+4)& (0+255),w,b
 30562  00D196  6F72               	movwf	___fladd@b& (0+255),b
 30563  00D198  0EFF               	movlw	255
 30564  00D19A  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 30565  00D19C  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30566  00D19E  0EFF               	movlw	255
 30567  00D1A0  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 30568  00D1A2  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30569  00D1A4  0EFF               	movlw	255
 30570  00D1A6  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 30571  00D1A8  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30572  00D1AA  0E80               	movlw	128
 30573  00D1AC  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30574                           
 30575                           ; BSR set to: 0
 30576  00D1AE  6D85               	negf	___fladd@grs& (0+255),b
 30577                           
 30578                           ; BSR set to: 0
 30579  00D1B0  5185               	movf	___fladd@grs& (0+255),w,b
 30580  00D1B2  A4D8               	btfss	status,2,c
 30581  00D1B4  D00F               	goto	l3505
 30582                           
 30583                           ; BSR set to: 0
 30584  00D1B6  0E01               	movlw	1
 30585  00D1B8  2772               	addwf	___fladd@b& (0+255),f,b
 30586  00D1BA  0E00               	movlw	0
 30587  00D1BC  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30588  00D1BE  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30589  00D1C0  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30590                           
 30591                           ; BSR set to: 0
 30592  00D1C2  D008               	goto	l3505
 30593  00D1C4                     l3503:
 30594                           
 30595                           ; BSR set to: 0
 30596                           
 30597                           ; BSR set to: 0
 30598  00D1C4  5176               	movf	___fladd@a& (0+255),w,b
 30599  00D1C6  5F72               	subwf	___fladd@b& (0+255),f,b
 30600  00D1C8  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30601  00D1CA  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 30602  00D1CC  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30603  00D1CE  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 30604  00D1D0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30605  00D1D2  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 30606  00D1D4                     l3505:
 30607                           
 30608                           ; BSR set to: 0
 30609  00D1D4  5172               	movf	___fladd@b& (0+255),w,b
 30610  00D1D6  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30611  00D1D8  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30612  00D1DA  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30613  00D1DC  A4D8               	btfss	status,2,c
 30614  00D1DE  D01C               	goto	l3512
 30615                           
 30616                           ; BSR set to: 0
 30617  00D1E0  5185               	movf	___fladd@grs& (0+255),w,b
 30618  00D1E2  A4D8               	btfss	status,2,c
 30619  00D1E4  D019               	goto	l3512
 30620                           
 30621                           ; BSR set to: 0
 30622  00D1E6  0E00               	movlw	0
 30623  00D1E8  6F72               	movwf	?___fladd& (0+255),b
 30624  00D1EA  0E00               	movlw	0
 30625  00D1EC  6F73               	movwf	(?___fladd+1)& (0+255),b
 30626  00D1EE  0E00               	movlw	0
 30627  00D1F0  6F74               	movwf	(?___fladd+2)& (0+255),b
 30628  00D1F2  0E00               	movlw	0
 30629  00D1F4  6F75               	movwf	(?___fladd+3)& (0+255),b
 30630                           
 30631                           ; BSR set to: 0
 30632  00D1F6  0012               	return	
 30633  00D1F8                     
 30634                           ; BSR set to: 0
 30635                           
 30636                           ; BSR set to: 0
 30637  00D1F8  90D8               	bcf	status,0,c
 30638  00D1FA  3772               	rlcf	___fladd@b& (0+255),f,b
 30639  00D1FC  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 30640  00D1FE  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 30641  00D200  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 30642                           
 30643                           ; BSR set to: 0
 30644  00D202  BF85               	btfsc	___fladd@grs& (0+255),7,b
 30645                           
 30646                           ; BSR set to: 0
 30647  00D204  8172               	bsf	___fladd@b& (0+255),0,b
 30648                           
 30649                           ; BSR set to: 0
 30650                           
 30651                           ; BSR set to: 0
 30652  00D206  A185               	btfss	___fladd@grs& (0+255),0,b
 30653  00D208  D002               	goto	l3510
 30654                           
 30655                           ; BSR set to: 0
 30656  00D20A  80D8               	bsf	status,0,c
 30657  00D20C  D001               	goto	L42
 30658  00D20E                     l3510:
 30659                           
 30660                           ; BSR set to: 0
 30661                           
 30662                           ; BSR set to: 0
 30663  00D20E  90D8               	bcf	status,0,c
 30664  00D210                     L42:
 30665  00D210  3785               	rlcf	___fladd@grs& (0+255),f,b
 30666                           
 30667                           ; BSR set to: 0
 30668                           
 30669                           ; BSR set to: 0
 30670  00D212  5184               	movf	___fladd@bexp& (0+255),w,b
 30671  00D214  A4D8               	btfss	status,2,c
 30672                           
 30673                           ; BSR set to: 0
 30674  00D216  0784               	decf	___fladd@bexp& (0+255),f,b
 30675  00D218                     l3512:
 30676                           
 30677                           ; BSR set to: 0
 30678                           
 30679                           ; BSR set to: 0
 30680                           
 30681                           ; BSR set to: 0
 30682  00D218  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 30683  00D21A  D7EE               	goto	l3508
 30684  00D21C                     u15540:
 30685                           
 30686                           ; BSR set to: 0
 30687                           
 30688                           ; BSR set to: 0
 30689                           
 30690                           ; BSR set to: 0
 30691  00D21C  0E00               	movlw	0
 30692  00D21E  6F83               	movwf	___fladd@aexp& (0+255),b
 30693                           
 30694                           ; BSR set to: 0
 30695  00D220  AF85               	btfss	___fladd@grs& (0+255),7,b
 30696  00D222  D00A               	goto	l3517
 30697                           
 30698                           ; BSR set to: 0
 30699  00D224  C085  F07A         	movff	___fladd@grs,??___fladd
 30700  00D228  0E7F               	movlw	127
 30701  00D22A  177A               	andwf	??___fladd& (0+255),f,b
 30702  00D22C  A4D8               	btfss	status,2,c
 30703  00D22E  D002               	goto	u15570
 30704                           
 30705                           ; BSR set to: 0
 30706                           
 30707                           ; BSR set to: 0
 30708  00D230  A172               	btfss	___fladd@b& (0+255),0,b
 30709  00D232  D002               	goto	l3517
 30710  00D234                     u15570:
 30711                           
 30712                           ; BSR set to: 0
 30713  00D234  0E01               	movlw	1
 30714  00D236  6F83               	movwf	___fladd@aexp& (0+255),b
 30715  00D238                     l3517:
 30716                           
 30717                           ; BSR set to: 0
 30718                           
 30719                           ; BSR set to: 0
 30720                           
 30721                           ; BSR set to: 0
 30722  00D238  5183               	movf	___fladd@aexp& (0+255),w,b
 30723  00D23A  B4D8               	btfsc	status,2,c
 30724  00D23C  D020               	goto	l3520
 30725                           
 30726                           ; BSR set to: 0
 30727  00D23E  0E01               	movlw	1
 30728  00D240  2772               	addwf	___fladd@b& (0+255),f,b
 30729  00D242  0E00               	movlw	0
 30730  00D244  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30731  00D246  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30732  00D248  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30733                           
 30734                           ; BSR set to: 0
 30735  00D24A  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30736  00D24C  D018               	goto	l3520
 30737                           
 30738                           ; BSR set to: 0
 30739  00D24E  C072  F07A         	movff	___fladd@b,??___fladd
 30740  00D252  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30741  00D256  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30742  00D25A  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30743  00D25E  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 30744  00D260  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 30745  00D262  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 30746  00D264  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 30747  00D266  337A               	rrcf	??___fladd& (0+255),f,b
 30748  00D268  C07A  F072         	movff	??___fladd,___fladd@b
 30749  00D26C  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 30750  00D270  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 30751  00D274  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 30752  00D278  2984               	incf	___fladd@bexp& (0+255),w,b
 30753  00D27A  A4D8               	btfss	status,2,c
 30754                           
 30755                           ; BSR set to: 0
 30756  00D27C  2B84               	incf	___fladd@bexp& (0+255),f,b
 30757  00D27E                     l3520:
 30758                           
 30759                           ; BSR set to: 0
 30760                           
 30761                           ; BSR set to: 0
 30762                           
 30763                           ; BSR set to: 0
 30764                           
 30765                           ; BSR set to: 0
 30766  00D27E  2984               	incf	___fladd@bexp& (0+255),w,b
 30767  00D280  B4D8               	btfsc	status,2,c
 30768  00D282  D003               	goto	u15620
 30769                           
 30770                           ; BSR set to: 0
 30771  00D284  5184               	movf	___fladd@bexp& (0+255),w,b
 30772  00D286  A4D8               	btfss	status,2,c
 30773  00D288  D00D               	goto	l3524
 30774  00D28A                     u15620:
 30775                           
 30776                           ; BSR set to: 0
 30777                           
 30778                           ; BSR set to: 0
 30779  00D28A  0E00               	movlw	0
 30780  00D28C  6F72               	movwf	___fladd@b& (0+255),b
 30781  00D28E  0E00               	movlw	0
 30782  00D290  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30783  00D292  0E00               	movlw	0
 30784  00D294  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30785  00D296  0E00               	movlw	0
 30786  00D298  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30787  00D29A  5184               	movf	___fladd@bexp& (0+255),w,b
 30788  00D29C  A4D8               	btfss	status,2,c
 30789  00D29E  D002               	goto	l3524
 30790                           
 30791                           ; BSR set to: 0
 30792  00D2A0  0E00               	movlw	0
 30793  00D2A2  6F82               	movwf	___fladd@signs& (0+255),b
 30794  00D2A4                     l3524:
 30795                           
 30796                           ; BSR set to: 0
 30797                           
 30798                           ; BSR set to: 0
 30799                           
 30800                           ; BSR set to: 0
 30801  00D2A4  A184               	btfss	___fladd@bexp& (0+255),0,b
 30802  00D2A6  D002               	goto	l3525
 30803                           
 30804                           ; BSR set to: 0
 30805  00D2A8  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30806  00D2AA  D001               	goto	l3526
 30807  00D2AC                     l3525:
 30808                           
 30809                           ; BSR set to: 0
 30810                           
 30811                           ; BSR set to: 0
 30812  00D2AC  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 30813  00D2AE                     l3526:
 30814                           
 30815                           ; BSR set to: 0
 30816                           
 30817                           ; BSR set to: 0
 30818  00D2AE  90D8               	bcf	status,0,c
 30819  00D2B0  3184               	rrcf	___fladd@bexp& (0+255),w,b
 30820  00D2B2  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30821                           
 30822                           ; BSR set to: 0
 30823  00D2B4  BF82               	btfsc	___fladd@signs& (0+255),7,b
 30824                           
 30825                           ; BSR set to: 0
 30826  00D2B6  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 30827                           
 30828                           ; BSR set to: 0
 30829                           
 30830                           ; BSR set to: 0
 30831  00D2B8  C072  F072         	movff	___fladd@b,?___fladd
 30832  00D2BC  C073  F073         	movff	___fladd@b+1,?___fladd+1
 30833  00D2C0  C074  F074         	movff	___fladd@b+2,?___fladd+2
 30834  00D2C4  C075  F075         	movff	___fladd@b+3,?___fladd+3
 30835  00D2C8  0012               	return	
 30836  00D2CA                     __end_of___fladd:
 30837                           	opt stack 0
 30838                           tblptru	equ	0xFF8
 30839                           tblptrh	equ	0xFF7
 30840                           tblptrl	equ	0xFF6
 30841                           tablat	equ	0xFF5
 30842                           prodh	equ	0xFF4
 30843                           prodl	equ	0xFF3
 30844                           intcon	equ	0xFF2
 30845                           postinc0	equ	0xFEE
 30846                           wreg	equ	0xFE8
 30847                           indf1	equ	0xFE7
 30848                           postinc1	equ	0xFE6
 30849                           postdec1	equ	0xFE5
 30850                           plusw1	equ	0xFE3
 30851                           fsr1h	equ	0xFE2
 30852                           fsr1l	equ	0xFE1
 30853                           indf2	equ	0xFDF
 30854                           postinc2	equ	0xFDE
 30855                           postdec2	equ	0xFDD
 30856                           plusw2	equ	0xFDB
 30857                           fsr2h	equ	0xFDA
 30858                           fsr2l	equ	0xFD9
 30859                           status	equ	0xFD8
 30860                           
 30861 ;; *************** function _USBDeviceInit *****************
 30862 ;; Defined at:
 30863 ;;		line 277 in file "usb_device.c"
 30864 ;; Parameters:    Size  Location     Type
 30865 ;;		None
 30866 ;; Auto vars:     Size  Location     Type
 30867 ;;  i               1    8[BANK0 ] unsigned char 
 30868 ;; Return value:  Size  Location     Type
 30869 ;;                  1    wreg      void 
 30870 ;; Registers used:
 30871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30872 ;; Tracked objects:
 30873 ;;		On entry : 0/0
 30874 ;;		On exit  : 0/0
 30875 ;;		Unchanged: 0/0
 30876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30881 ;;Total ram usage:        1 bytes
 30882 ;; Hardware stack levels used:    1
 30883 ;; Hardware stack levels required when called:   11
 30884 ;; This function calls:
 30885 ;;		_memset
 30886 ;; This function is called by:
 30887 ;;		_main
 30888 ;; This function uses a non-reentrant model
 30889 ;;
 30890                           
 30891                           	psect	text122
 30892  00FE56                     __ptext122:
 30893                           	opt stack 0
 30894  00FE56                     _USBDeviceInit:
 30895                           	opt stack 19
 30896                           
 30897                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30898                           
 30899                           ; BSR set to: 0
 30900                           ;incstack = 0
 30901  00FE56  98A0               	bcf	4000,4,c	;volatile
 30902                           
 30903                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 30904  00FE58  0E00               	movlw	0
 30905  00FE5A  6E63               	movwf	3939,c	;volatile
 30906                           
 30907                           ;usb_device.c: 291: {UIR = 0;};
 30908  00FE5C  0E00               	movlw	0
 30909  00FE5E  6E62               	movwf	3938,c	;volatile
 30910                           
 30911                           ;usb_device.c: 294: UEP0 = 0;
 30912  00FE60  0E00               	movlw	0
 30913  00FE62  010F               	movlb	15	; () banked
 30914  00FE64  6F26               	movwf	38,b	;volatile
 30915                           
 30916                           ; BSR set to: 15
 30917                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 30918  00FE66  0E27               	movlw	39
 30919  00FE68  0100               	movlb	0	; () banked
 30920  00FE6A  6F60               	movwf	memset@p1& (0+255),b
 30921  00FE6C  0E0F               	movlw	15
 30922  00FE6E  6F61               	movwf	(memset@p1+1)& (0+255),b
 30923  00FE70  0E00               	movlw	0
 30924  00FE72  6F63               	movwf	(memset@c+1)& (0+255),b
 30925  00FE74  0E00               	movlw	0
 30926  00FE76  6F62               	movwf	memset@c& (0+255),b
 30927  00FE78  0E00               	movlw	0
 30928  00FE7A  6F65               	movwf	(memset@n+1)& (0+255),b
 30929  00FE7C  0E02               	movlw	2
 30930  00FE7E  6F64               	movwf	memset@n& (0+255),b
 30931  00FE80  ECD4  F0A9         	call	_memset	;wreg free
 30932                           
 30933                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30934  00FE84  0E16               	movlw	22
 30935  00FE86  010F               	movlb	15	; () banked
 30936  00FE88  6F39               	movwf	57,b	;volatile
 30937                           
 30938                           ; BSR set to: 15
 30939  00FE8A  0E9F               	movlw	159
 30940  00FE8C  6F37               	movwf	55,b	;volatile
 30941                           
 30942                           ; BSR set to: 15
 30943  00FE8E  0E7B               	movlw	123
 30944  00FE90  6F36               	movwf	54,b	;volatile
 30945                           
 30946                           ; BSR set to: 15
 30947                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 30948  00FE92  0E00               	movlw	0
 30949  00FE94  0100               	movlb	0	; () banked
 30950  00FE96  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30951  00FE98                     l17424:
 30952                           
 30953                           ; BSR set to: 0
 30954  00FE98  0E0B               	movlw	11
 30955  00FE9A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30956  00FE9C  D001               	goto	l145
 30957  00FE9E  D00E               	goto	u16730
 30958  00FEA0                     l145:
 30959                           
 30960                           ; BSR set to: 0
 30961                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 30962                           
 30963                           ; BSR set to: 0
 30964  00FEA0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30965  00FEA2  0D04               	mullw	4
 30966  00FEA4  0E00               	movlw	0
 30967  00FEA6  24F3               	addwf	prodl,w,c
 30968  00FEA8  6ED9               	movwf	fsr2l,c
 30969  00FEAA  0E0D               	movlw	13
 30970  00FEAC  20F4               	addwfc	prodh,w,c
 30971  00FEAE  6EDA               	movwf	fsr2h,c
 30972  00FEB0  6ADE               	clrf	postinc2,c
 30973  00FEB2  6ADE               	clrf	postinc2,c
 30974  00FEB4  6ADE               	clrf	postinc2,c
 30975  00FEB6  6ADD               	clrf	postdec2,c
 30976                           
 30977                           ; BSR set to: 0
 30978  00FEB8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30979  00FEBA  D7EE               	goto	l17424
 30980  00FEBC                     u16730:
 30981                           
 30982                           ; BSR set to: 0
 30983                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 30984  00FEBC  8C65               	bsf	3941,6,c	;volatile
 30985                           
 30986                           ; BSR set to: 0
 30987                           ;usb_device.c: 316: UADDR = 0x00;
 30988  00FEBE  0E00               	movlw	0
 30989  00FEC0  010F               	movlb	15	; () banked
 30990  00FEC2  6F38               	movwf	56,b	;volatile
 30991                           
 30992                           ; BSR set to: 15
 30993                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 30994  00FEC4  9865               	bcf	3941,4,c	;volatile
 30995                           
 30996                           ; BSR set to: 15
 30997                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 30998  00FEC6  9C65               	bcf	3941,6,c	;volatile
 30999  00FEC8                     
 31000                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 31001                           
 31002                           ; BSR set to: 15
 31003  00FEC8  9662               	bcf	3938,3,c	;volatile
 31004                           
 31005                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 31006  00FECA  0E00               	movlw	0
 31007  00FECC  6E55               	movwf	_inPipes+3,c	;volatile
 31008                           
 31009                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 31010  00FECE  0E00               	movlw	0
 31011  00FED0  0101               	movlb	1	; () banked
 31012  00FED2  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31013                           
 31014                           ; BSR set to: 1
 31015                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 31016  00FED4  0E00               	movlw	0
 31017  00FED6  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31018  00FED8  0E00               	movlw	0
 31019  00FEDA  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31020                           
 31021                           ; BSR set to: 1
 31022                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 31023  00FEDC  B662               	btfsc	3938,3,c	;volatile
 31024  00FEDE  D7F4               	goto	l147
 31025                           
 31026                           ; BSR set to: 1
 31027                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 31028                           
 31029                           ; BSR set to: 1
 31030  00FEE0  0E01               	movlw	1
 31031  00FEE2  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31032                           
 31033                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 31034  00FEE4  0E01               	movlw	1
 31035  00FEE6  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31036                           
 31037                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 31038  00FEE8  0E00               	movlw	0
 31039  00FEEA  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31040                           
 31041                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 31042  00FEEC  0E00               	movlw	0
 31043  00FEEE  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31044                           
 31045                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 31046  00FEF0  0E00               	movlw	0
 31047  00FEF2  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 31048                           
 31049                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 31050  00FEF4  0E00               	movlw	0
 31051  00FEF6  0100               	movlb	0	; () banked
 31052  00FEF8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31053  00FEFA                     l17452:
 31054                           
 31055                           ; BSR set to: 0
 31056  00FEFA  0E02               	movlw	2
 31057  00FEFC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31058  00FEFE  D001               	goto	l149
 31059  00FF00  D02E               	goto	u16760
 31060  00FF02                     l149:
 31061                           
 31062                           ; BSR set to: 0
 31063                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 31064                           
 31065                           ; BSR set to: 0
 31066  00FF02  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31067  00FF04  0D02               	mullw	2
 31068  00FF06  0E1B               	movlw	low _pBDTEntryIn
 31069  00FF08  24F3               	addwf	prodl,w,c
 31070  00FF0A  6ED9               	movwf	fsr2l,c
 31071  00FF0C  0E01               	movlw	high _pBDTEntryIn
 31072  00FF0E  20F4               	addwfc	prodh,w,c
 31073  00FF10  6EDA               	movwf	fsr2h,c
 31074  00FF12  0E00               	movlw	0
 31075  00FF14  6EDE               	movwf	postinc2,c
 31076  00FF16  0E00               	movlw	0
 31077  00FF18  6EDD               	movwf	postdec2,c
 31078                           
 31079                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 31080  00FF1A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31081  00FF1C  0D02               	mullw	2
 31082  00FF1E  0E21               	movlw	low _pBDTEntryOut
 31083  00FF20  24F3               	addwf	prodl,w,c
 31084  00FF22  6ED9               	movwf	fsr2l,c
 31085  00FF24  0E01               	movlw	high _pBDTEntryOut
 31086  00FF26  20F4               	addwfc	prodh,w,c
 31087  00FF28  6EDA               	movwf	fsr2h,c
 31088  00FF2A  0E00               	movlw	0
 31089  00FF2C  6EDE               	movwf	postinc2,c
 31090  00FF2E  0E00               	movlw	0
 31091  00FF30  6EDD               	movwf	postdec2,c
 31092                           
 31093                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 31094  00FF32  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31095  00FF34  0D01               	mullw	1
 31096  00FF36  0E3C               	movlw	low _ep_data_in
 31097  00FF38  24F3               	addwf	prodl,w,c
 31098  00FF3A  6ED9               	movwf	fsr2l,c
 31099  00FF3C  0E01               	movlw	high _ep_data_in
 31100  00FF3E  20F4               	addwfc	prodh,w,c
 31101  00FF40  6EDA               	movwf	fsr2h,c
 31102  00FF42  0E00               	movlw	0
 31103  00FF44  6EDF               	movwf	indf2,c
 31104                           
 31105                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 31106  00FF46  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31107  00FF48  0D01               	mullw	1
 31108  00FF4A  0E39               	movlw	low _ep_data_out
 31109  00FF4C  24F3               	addwf	prodl,w,c
 31110  00FF4E  6ED9               	movwf	fsr2l,c
 31111  00FF50  0E01               	movlw	high _ep_data_out
 31112  00FF52  20F4               	addwfc	prodh,w,c
 31113  00FF54  6EDA               	movwf	fsr2h,c
 31114  00FF56  0E00               	movlw	0
 31115  00FF58  6EDF               	movwf	indf2,c
 31116                           
 31117                           ; BSR set to: 0
 31118  00FF5A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31119  00FF5C  D7CE               	goto	l17452
 31120  00FF5E                     u16760:
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31124                           
 31125                           ; BSR set to: 0
 31126  00FF5E  0E08               	movlw	8
 31127  00FF60  0101               	movlb	1	; () banked
 31128  00FF62  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 31129  00FF64  0E0D               	movlw	13
 31130  00FF66  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31131                           
 31132                           ; BSR set to: 1
 31133                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 31134  00FF68  0E16               	movlw	22
 31135  00FF6A  010F               	movlb	15	; () banked
 31136  00FF6C  6F26               	movwf	38,b	;volatile
 31137                           
 31138                           ; BSR set to: 15
 31139                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31140  00FF6E  0E0D               	movlw	13
 31141  00FF70  010D               	movlb	13	; () banked
 31142  00FF72  6F03               	movwf	3,b	;volatile
 31143  00FF74  0E30               	movlw	48
 31144  00FF76  6F02               	movwf	2,b	;volatile
 31145                           
 31146                           ; BSR set to: 13
 31147                           ;usb_device.c: 359: BDT[0].CNT = 8;
 31148  00FF78  0E08               	movlw	8
 31149  00FF7A  6F01               	movwf	1,b	;volatile
 31150                           
 31151                           ; BSR set to: 13
 31152                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 31153  00FF7C  0E04               	movlw	4
 31154  00FF7E  6F00               	movwf	0,b	;volatile
 31155                           
 31156                           ; BSR set to: 13
 31157                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 31158  00FF80  8F00               	bsf	0,7,b	;volatile
 31159                           
 31160                           ; BSR set to: 13
 31161                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 31162  00FF82  0E00               	movlw	0
 31163  00FF84  0101               	movlb	1	; () banked
 31164  00FF86  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 31165                           
 31166                           ; BSR set to: 1
 31167                           ;usb_device.c: 366: USB1msTickCount = 0;
 31168  00FF88  0E00               	movlw	0
 31169  00FF8A  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 31170  00FF8C  0E00               	movlw	0
 31171  00FF8E  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 31172  00FF90  0E00               	movlw	0
 31173  00FF92  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 31174  00FF94  0E00               	movlw	0
 31175  00FF96  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 31176                           
 31177                           ; BSR set to: 1
 31178                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 31179  00FF98  0E00               	movlw	0
 31180  00FF9A  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 31181                           
 31182                           ; BSR set to: 1
 31183                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 31184  00FF9C  0E00               	movlw	0
 31185  00FF9E  6E5E               	movwf	_USBDeviceState,c	;volatile
 31186                           
 31187                           ; BSR set to: 1
 31188  00FFA0  0012               	return		;funcret
 31189  00FFA2                     __end_of_USBDeviceInit:
 31190                           	opt stack 0
 31191                           tblptru	equ	0xFF8
 31192                           tblptrh	equ	0xFF7
 31193                           tblptrl	equ	0xFF6
 31194                           tablat	equ	0xFF5
 31195                           prodh	equ	0xFF4
 31196                           prodl	equ	0xFF3
 31197                           intcon	equ	0xFF2
 31198                           postinc0	equ	0xFEE
 31199                           wreg	equ	0xFE8
 31200                           indf1	equ	0xFE7
 31201                           postinc1	equ	0xFE6
 31202                           postdec1	equ	0xFE5
 31203                           plusw1	equ	0xFE3
 31204                           fsr1h	equ	0xFE2
 31205                           fsr1l	equ	0xFE1
 31206                           indf2	equ	0xFDF
 31207                           postinc2	equ	0xFDE
 31208                           postdec2	equ	0xFDD
 31209                           plusw2	equ	0xFDB
 31210                           fsr2h	equ	0xFDA
 31211                           fsr2l	equ	0xFD9
 31212                           status	equ	0xFD8
 31213                           
 31214 ;; *************** function _memset *****************
 31215 ;; Defined at:
 31216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 31217 ;; Parameters:    Size  Location     Type
 31218 ;;  p1              2    0[BANK0 ] PTR void 
 31219 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31220 ;;  c               2    2[BANK0 ] int 
 31221 ;;  n               2    4[BANK0 ] unsigned int 
 31222 ;; Auto vars:     Size  Location     Type
 31223 ;;  p               2    6[BANK0 ] PTR unsigned char 
 31224 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31225 ;; Return value:  Size  Location     Type
 31226 ;;                  2    0[BANK0 ] PTR void 
 31227 ;; Registers used:
 31228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31229 ;; Tracked objects:
 31230 ;;		On entry : 0/0
 31231 ;;		On exit  : 0/0
 31232 ;;		Unchanged: 0/0
 31233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31234 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31238 ;;Total ram usage:        8 bytes
 31239 ;; Hardware stack levels used:    1
 31240 ;; Hardware stack levels required when called:   10
 31241 ;; This function calls:
 31242 ;;		Nothing
 31243 ;; This function is called by:
 31244 ;;		_USBDeviceInit
 31245 ;; This function uses a non-reentrant model
 31246 ;;
 31247                           
 31248                           	psect	text123
 31249  0153A8                     __ptext123:
 31250                           	opt stack 0
 31251  0153A8                     _memset:
 31252                           	opt stack 19
 31253                           
 31254                           ; BSR set to: 1
 31255                           ;incstack = 0
 31256  0153A8  C060  F066         	movff	memset@p1,memset@p
 31257  0153AC  C061  F067         	movff	memset@p1+1,memset@p+1
 31258  0153B0  D009               	goto	l3702
 31259  0153B2                     l16556:
 31260  0153B2  C066  FFD9         	movff	memset@p,fsr2l
 31261  0153B6  C067  FFDA         	movff	memset@p+1,fsr2h
 31262  0153BA  C062  FFDF         	movff	memset@c,indf2
 31263  0153BE  0100               	movlb	0	; () banked
 31264  0153C0  4B66               	infsnz	memset@p& (0+255),f,b
 31265  0153C2  2B67               	incf	(memset@p+1)& (0+255),f,b
 31266  0153C4                     l3702:
 31267                           
 31268                           ; BSR set to: 0
 31269  0153C4  0100               	movlb	0	; () banked
 31270  0153C6  0764               	decf	memset@n& (0+255),f,b
 31271  0153C8  A0D8               	btfss	status,0,c
 31272  0153CA  0765               	decf	(memset@n+1)& (0+255),f,b
 31273  0153CC  2964               	incf	memset@n& (0+255),w,b
 31274  0153CE  E1F1               	bnz	l16556
 31275  0153D0  2965               	incf	(memset@n+1)& (0+255),w,b
 31276  0153D2  B4D8               	btfsc	status,2,c
 31277  0153D4  0012               	return	
 31278  0153D6  D7ED               	goto	l3703
 31279  0153D8                     __end_of_memset:
 31280                           	opt stack 0
 31281                           tblptru	equ	0xFF8
 31282                           tblptrh	equ	0xFF7
 31283                           tblptrl	equ	0xFF6
 31284                           tablat	equ	0xFF5
 31285                           prodh	equ	0xFF4
 31286                           prodl	equ	0xFF3
 31287                           intcon	equ	0xFF2
 31288                           postinc0	equ	0xFEE
 31289                           wreg	equ	0xFE8
 31290                           indf1	equ	0xFE7
 31291                           postinc1	equ	0xFE6
 31292                           postdec1	equ	0xFE5
 31293                           plusw1	equ	0xFE3
 31294                           fsr1h	equ	0xFE2
 31295                           fsr1l	equ	0xFE1
 31296                           indf2	equ	0xFDF
 31297                           postinc2	equ	0xFDE
 31298                           postdec2	equ	0xFDD
 31299                           plusw2	equ	0xFDB
 31300                           fsr2h	equ	0xFDA
 31301                           fsr2l	equ	0xFD9
 31302                           status	equ	0xFD8
 31303                           
 31304 ;; *************** function _USBDeviceAttach *****************
 31305 ;; Defined at:
 31306 ;;		line 1354 in file "usb_device.c"
 31307 ;; Parameters:    Size  Location     Type
 31308 ;;		None
 31309 ;; Auto vars:     Size  Location     Type
 31310 ;;		None
 31311 ;; Return value:  Size  Location     Type
 31312 ;;                  1    wreg      void 
 31313 ;; Registers used:
 31314 ;;		wreg, status,2
 31315 ;; Tracked objects:
 31316 ;;		On entry : 0/0
 31317 ;;		On exit  : 0/0
 31318 ;;		Unchanged: 0/0
 31319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31324 ;;Total ram usage:        0 bytes
 31325 ;; Hardware stack levels used:    1
 31326 ;; Hardware stack levels required when called:   10
 31327 ;; This function calls:
 31328 ;;		Nothing
 31329 ;; This function is called by:
 31330 ;;		_main
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text124
 31335  015316                     __ptext124:
 31336                           	opt stack 0
 31337  015316                     _USBDeviceAttach:
 31338                           	opt stack 20
 31339                           
 31340                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 31341                           
 31342                           ; BSR set to: 0
 31343                           ;incstack = 0
 31344  015316  505E               	movf	_USBDeviceState,w,c	;volatile
 31345  015318  A4D8               	btfss	status,2,c
 31346  01531A  0012               	return	
 31347                           
 31348                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 31349  01531C  0E00               	movlw	0
 31350  01531E  6E65               	movwf	3941,c	;volatile
 31351                           
 31352                           ;usb_device.c: 1365: UIE = 0;
 31353  015320  0E00               	movlw	0
 31354  015322  010F               	movlb	15	; () banked
 31355  015324  6F36               	movwf	54,b	;volatile
 31356                           
 31357                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 31358  015326  0E16               	movlw	22
 31359  015328  6F39               	movwf	57,b	;volatile
 31360  01532A  0E9F               	movlw	159
 31361  01532C  6F37               	movwf	55,b	;volatile
 31362  01532E  0E7B               	movlw	123
 31363  015330  6F36               	movwf	54,b	;volatile
 31364                           
 31365                           ; BSR set to: 15
 31366                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 31367  015332  8ED0               	bsf	4048,7,c	;volatile
 31368                           
 31369                           ; BSR set to: 15
 31370  015334  88A2               	bsf	4002,4,c	;volatile
 31371                           
 31372                           ; BSR set to: 15
 31373  015336  88A0               	bsf	4000,4,c	;volatile
 31374                           
 31375                           ; BSR set to: 15
 31376  015338  8EF2               	bsf	intcon,7,c	;volatile
 31377                           
 31378                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 31379  01533A  D001               	goto	l206
 31380  01533C                     l207:
 31381  01533C  8665               	bsf	3941,3,c	;volatile
 31382  01533E                     l206:
 31383  01533E  A665               	btfss	3941,3,c	;volatile
 31384  015340  D7FD               	goto	l207
 31385                           
 31386                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 31387  015342  0E01               	movlw	1
 31388  015344  6E5E               	movwf	_USBDeviceState,c	;volatile
 31389  015346  0012               	return	
 31390  015348                     __end_of_USBDeviceAttach:
 31391                           	opt stack 0
 31392                           tblptru	equ	0xFF8
 31393                           tblptrh	equ	0xFF7
 31394                           tblptrl	equ	0xFF6
 31395                           tablat	equ	0xFF5
 31396                           prodh	equ	0xFF4
 31397                           prodl	equ	0xFF3
 31398                           intcon	equ	0xFF2
 31399                           postinc0	equ	0xFEE
 31400                           wreg	equ	0xFE8
 31401                           indf1	equ	0xFE7
 31402                           postinc1	equ	0xFE6
 31403                           postdec1	equ	0xFE5
 31404                           plusw1	equ	0xFE3
 31405                           fsr1h	equ	0xFE2
 31406                           fsr1l	equ	0xFE1
 31407                           indf2	equ	0xFDF
 31408                           postinc2	equ	0xFDE
 31409                           postdec2	equ	0xFDD
 31410                           plusw2	equ	0xFDB
 31411                           fsr2h	equ	0xFDA
 31412                           fsr2l	equ	0xFD9
 31413                           status	equ	0xFD8
 31414                           
 31415 ;; *************** function _SYSTEM_Initialize *****************
 31416 ;; Defined at:
 31417 ;;		line 39 in file "system.c"
 31418 ;; Parameters:    Size  Location     Type
 31419 ;;  state           1    wreg     enum E6623
 31420 ;; Auto vars:     Size  Location     Type
 31421 ;;  state           1    4[BANK0 ] enum E6623
 31422 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 31423 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 31424 ;; Return value:  Size  Location     Type
 31425 ;;                  1    wreg      void 
 31426 ;; Registers used:
 31427 ;;		wreg, status,2, status,0
 31428 ;; Tracked objects:
 31429 ;;		On entry : 0/0
 31430 ;;		On exit  : 0/0
 31431 ;;		Unchanged: 0/0
 31432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31434 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31436 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31437 ;;Total ram usage:        5 bytes
 31438 ;; Hardware stack levels used:    1
 31439 ;; Hardware stack levels required when called:   10
 31440 ;; This function calls:
 31441 ;;		Nothing
 31442 ;; This function is called by:
 31443 ;;		_main
 31444 ;; This function uses a non-reentrant model
 31445 ;;
 31446                           
 31447                           	psect	text125
 31448  0145E8                     __ptext125:
 31449                           	opt stack 0
 31450  0145E8                     _SYSTEM_Initialize:
 31451                           	opt stack 20
 31452                           
 31453                           ;incstack = 0
 31454                           ;SYSTEM_Initialize@state stored from wreg
 31455  0145E8  0100               	movlb	0	; () banked
 31456  0145EA  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 31457                           
 31458                           ;system.c: 41: switch(state)
 31459  0145EC  D01E               	goto	l897
 31460  0145EE                     
 31461                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 31462  0145EE  0E02               	movlw	2
 31463  0145F0  0100               	movlb	0	; () banked
 31464  0145F2  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 31465  0145F4  0E58               	movlw	88
 31466  0145F6  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 31467                           
 31468                           ; BSR set to: 0
 31469                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 31470  0145F8  8C9B               	bsf	3995,6,c	;volatile
 31471  0145FA                     l17604:
 31472                           
 31473                           ; BSR set to: 0
 31474  0145FA  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 31475  0145FC  A0D8               	btfss	status,0,c
 31476  0145FE  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 31477  014600  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 31478  014602  E1FB               	bnz	l17604
 31479  014604  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 31480  014606  B4D8               	btfsc	status,2,c
 31481  014608  0012               	return	
 31482  01460A  D7F7               	goto	l900
 31483  01460C                     
 31484                           ; BSR set to: 0
 31485                           ;system.c: 78: OSCCON = 0x70;
 31486                           
 31487                           ; BSR set to: 0
 31488  01460C  0E70               	movlw	112
 31489  01460E  6ED3               	movwf	4051,c	;volatile
 31490                           
 31491                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 31492  014610  0E03               	movlw	3
 31493  014612  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 31494  014614  0E20               	movlw	32
 31495  014616  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 31496  014618                     l17608:
 31497                           
 31498                           ; BSR set to: 0
 31499  014618  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 31500  01461A  A0D8               	btfss	status,0,c
 31501  01461C  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 31502  01461E  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 31503  014620  E1FB               	bnz	l17608
 31504  014622  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 31505  014624  B4D8               	btfsc	status,2,c
 31506  014626  0012               	return	
 31507  014628  D7F7               	goto	l906
 31508  01462A                     l897:
 31509                           
 31510                           ; BSR set to: 0
 31511  01462A  0100               	movlb	0	; () banked
 31512  01462C  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 31513                           
 31514                           ; Switch size 1, requested type "space"
 31515                           ; Number of cases is 3, Range of values is 0 to 2
 31516                           ; switch strategies available:
 31517                           ; Name         Instructions Cycles
 31518                           ; simple_byte           10     6 (average)
 31519                           ;	Chosen strategy is simple_byte
 31520  01462E  0A00               	xorlw	0	; case 0
 31521  014630  B4D8               	btfsc	status,2,c
 31522  014632  D7DD               	goto	l898
 31523  014634  0A01               	xorlw	1	; case 1
 31524  014636  B4D8               	btfsc	status,2,c
 31525  014638  0012               	return	
 31526  01463A  0A03               	xorlw	3	; case 2
 31527  01463C  A4D8               	btfss	status,2,c
 31528  01463E  0012               	return	
 31529  014640  D7E5               	goto	l904
 31530  014642                     __end_of_SYSTEM_Initialize:
 31531                           	opt stack 0
 31532                           tblptru	equ	0xFF8
 31533                           tblptrh	equ	0xFF7
 31534                           tblptrl	equ	0xFF6
 31535                           tablat	equ	0xFF5
 31536                           prodh	equ	0xFF4
 31537                           prodl	equ	0xFF3
 31538                           intcon	equ	0xFF2
 31539                           postinc0	equ	0xFEE
 31540                           wreg	equ	0xFE8
 31541                           indf1	equ	0xFE7
 31542                           postinc1	equ	0xFE6
 31543                           postdec1	equ	0xFE5
 31544                           plusw1	equ	0xFE3
 31545                           fsr1h	equ	0xFE2
 31546                           fsr1l	equ	0xFE1
 31547                           indf2	equ	0xFDF
 31548                           postinc2	equ	0xFDE
 31549                           postdec2	equ	0xFDD
 31550                           plusw2	equ	0xFDB
 31551                           fsr2h	equ	0xFDA
 31552                           fsr2l	equ	0xFD9
 31553                           status	equ	0xFD8
 31554                           
 31555 ;; *************** function _APP_DeviceMSDTasks *****************
 31556 ;; Defined at:
 31557 ;;		line 110 in file "app_device_msd.c"
 31558 ;; Parameters:    Size  Location     Type
 31559 ;;		None
 31560 ;; Auto vars:     Size  Location     Type
 31561 ;;		None
 31562 ;; Return value:  Size  Location     Type
 31563 ;;                  1    wreg      void 
 31564 ;; Registers used:
 31565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31566 ;; Tracked objects:
 31567 ;;		On entry : 0/0
 31568 ;;		On exit  : 0/0
 31569 ;;		Unchanged: 0/0
 31570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31575 ;;Total ram usage:        0 bytes
 31576 ;; Hardware stack levels used:    1
 31577 ;; Hardware stack levels required when called:   21
 31578 ;; This function calls:
 31579 ;;		_MSDTasks
 31580 ;; This function is called by:
 31581 ;;		_main
 31582 ;; This function uses a non-reentrant model
 31583 ;;
 31584                           
 31585                           	psect	text126
 31586  01588E                     __ptext126:
 31587                           	opt stack 0
 31588  01588E                     _APP_DeviceMSDTasks:
 31589                           	opt stack 9
 31590                           
 31591                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 31592                           
 31593                           ; BSR set to: 0
 31594                           ;incstack = 0
 31595  01588E  0E20               	movlw	32
 31596  015890  605E               	cpfslt	_USBDeviceState,c	;volatile
 31597  015892  D001               	goto	l986
 31598  015894  0012               	return	
 31599  015896                     l986:
 31600                           
 31601                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31602  015896  B265               	btfsc	3941,1,c	;volatile
 31603  015898  0012               	return	
 31604                           
 31605                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 31606                           
 31607                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 31608  01589A  ECAB  F071         	call	_MSDTasks	;wreg free
 31609  01589E  0012               	return		;funcret
 31610  0158A0                     __end_of_APP_DeviceMSDTasks:
 31611                           	opt stack 0
 31612                           tblptru	equ	0xFF8
 31613                           tblptrh	equ	0xFF7
 31614                           tblptrl	equ	0xFF6
 31615                           tablat	equ	0xFF5
 31616                           prodh	equ	0xFF4
 31617                           prodl	equ	0xFF3
 31618                           intcon	equ	0xFF2
 31619                           postinc0	equ	0xFEE
 31620                           wreg	equ	0xFE8
 31621                           indf1	equ	0xFE7
 31622                           postinc1	equ	0xFE6
 31623                           postdec1	equ	0xFE5
 31624                           plusw1	equ	0xFE3
 31625                           fsr1h	equ	0xFE2
 31626                           fsr1l	equ	0xFE1
 31627                           indf2	equ	0xFDF
 31628                           postinc2	equ	0xFDE
 31629                           postdec2	equ	0xFDD
 31630                           plusw2	equ	0xFDB
 31631                           fsr2h	equ	0xFDA
 31632                           fsr2l	equ	0xFD9
 31633                           status	equ	0xFD8
 31634                           
 31635 ;; *************** function _MSDTasks *****************
 31636 ;; Defined at:
 31637 ;;		line 335 in file "usb_device_msd.c"
 31638 ;; Parameters:    Size  Location     Type
 31639 ;;		None
 31640 ;; Auto vars:     Size  Location     Type
 31641 ;;  i               1   81[BANK0 ] unsigned char 
 31642 ;; Return value:  Size  Location     Type
 31643 ;;                  1    wreg      unsigned char 
 31644 ;; Registers used:
 31645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31646 ;; Tracked objects:
 31647 ;;		On entry : 0/0
 31648 ;;		On exit  : 0/0
 31649 ;;		Unchanged: 0/0
 31650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31652 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31655 ;;Total ram usage:        6 bytes
 31656 ;; Hardware stack levels used:    1
 31657 ;; Hardware stack levels required when called:   20
 31658 ;; This function calls:
 31659 ;;		_MSDProcessCommand
 31660 ;;		_USBStallEndpoint
 31661 ;;		_USBTransferOnePacket
 31662 ;; This function is called by:
 31663 ;;		_APP_DeviceMSDTasks
 31664 ;; This function uses a non-reentrant model
 31665 ;;
 31666                           
 31667                           	psect	text127
 31668  00E356                     __ptext127:
 31669                           	opt stack 0
 31670  00E356                     _MSDTasks:
 31671                           	opt stack 9
 31672                           
 31673                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 31674                           
 31675                           ;incstack = 0
 31676  00E356  0E20               	movlw	32
 31677  00E358  185E               	xorwf	_USBDeviceState,w,c	;volatile
 31678  00E35A  A4D8               	btfss	status,2,c
 31679  00E35C  0012               	return	
 31680                           
 31681                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31682                           
 31683                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 31684  00E35E  98A0               	bcf	4000,4,c	;volatile
 31685                           
 31686                           ;usb_device_msd.c: 357: switch(MSD_State)
 31687  00E360  D11E               	goto	l570
 31688  00E362                     
 31689                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 31690  00E362  0101               	movlb	1	; () banked
 31691  00E364  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31692  00E366  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31693  00E368  B4D8               	btfsc	status,2,c
 31694  00E36A  D006               	goto	u15800
 31695                           
 31696                           ; BSR set to: 1
 31697  00E36C  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31698  00E370  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31699  00E374  BEDF               	btfsc	indf2,7,c
 31700  00E376  D122               	goto	l586
 31701  00E378                     u15800:
 31702                           
 31703                           ; BSR set to: 1
 31704                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31705                           
 31706                           ; BSR set to: 1
 31707  00E378  0E00               	movlw	0
 31708  00E37A  0100               	movlb	0	; () banked
 31709  00E37C  6FB1               	movwf	MSDTasks@i& (0+255),b
 31710  00E37E                     l16642:
 31711                           
 31712                           ; BSR set to: 0
 31713  00E37E  0E1E               	movlw	30
 31714  00E380  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31715  00E382  D001               	goto	l575
 31716  00E384  D014               	goto	u15820
 31717  00E386                     l575:
 31718                           
 31719                           ; BSR set to: 0
 31720                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 31721                           
 31722                           ; BSR set to: 0
 31723  00E386  51B1               	movf	MSDTasks@i& (0+255),w,b
 31724  00E388  0D01               	mullw	1
 31725  00E38A  0E40               	movlw	64
 31726  00E38C  24F3               	addwf	prodl,w,c
 31727  00E38E  6ED9               	movwf	fsr2l,c
 31728  00E390  0E0D               	movlw	13
 31729  00E392  20F4               	addwfc	prodh,w,c
 31730  00E394  6EDA               	movwf	fsr2h,c
 31731  00E396  51B1               	movf	MSDTasks@i& (0+255),w,b
 31732  00E398  0D01               	mullw	1
 31733  00E39A  0E00               	movlw	low _gblCBW
 31734  00E39C  24F3               	addwf	prodl,w,c
 31735  00E39E  6EE1               	movwf	fsr1l,c
 31736  00E3A0  0E02               	movlw	high _gblCBW
 31737  00E3A2  20F4               	addwfc	prodh,w,c
 31738  00E3A4  6EE2               	movwf	fsr1h,c
 31739  00E3A6  CFDF FFE7          	movff	indf2,indf1
 31740                           
 31741                           ; BSR set to: 0
 31742  00E3AA  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31743  00E3AC  D7E8               	goto	l16642
 31744  00E3AE                     u15820:
 31745                           
 31746                           ; BSR set to: 0
 31747                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 31748                           
 31749                           ; BSR set to: 0
 31750  00E3AE  0101               	movlb	1	; () banked
 31751  00E3B0  EE20 F001          	lfsr	2,1
 31752  00E3B4  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31753  00E3B6  26D9               	addwf	fsr2l,f,c
 31754  00E3B8  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31755  00E3BA  22DA               	addwfc	fsr2h,f,c
 31756  00E3BC  0E1F               	movlw	31
 31757  00E3BE  18DE               	xorwf	postinc2,w,c
 31758  00E3C0  A4D8               	btfss	status,2,c
 31759  00E3C2  D077               	goto	l577
 31760                           
 31761                           ; BSR set to: 1
 31762  00E3C4  0E55               	movlw	85
 31763  00E3C6  0102               	movlb	2	; () banked
 31764  00E3C8  1900               	xorwf	_gblCBW& (0+255),w,b
 31765  00E3CA  E173               	bnz	l577
 31766  00E3CC  0E53               	movlw	83
 31767  00E3CE  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 31768  00E3D0  E170               	bnz	l577
 31769  00E3D2  0E42               	movlw	66
 31770  00E3D4  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 31771  00E3D6  E16D               	bnz	l577
 31772  00E3D8  0E43               	movlw	67
 31773  00E3DA  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 31774  00E3DC  A4D8               	btfss	status,2,c
 31775  00E3DE  D069               	goto	l577
 31776                           
 31777                           ; BSR set to: 2
 31778                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 31779  00E3E0  0E01               	movlw	1
 31780  00E3E2  0101               	movlb	1	; () banked
 31781  00E3E4  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31782                           
 31783                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31784  00E3E6  0102               	movlb	2	; () banked
 31785  00E3E8  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31786  00E3EA  A4D8               	btfss	status,2,c
 31787  00E3EC  D055               	goto	l578
 31788                           
 31789                           ; BSR set to: 2
 31790  00E3EE  0E11               	movlw	17
 31791  00E3F0  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 31792  00E3F2  D052               	goto	l578
 31793                           
 31794                           ; BSR set to: 2
 31795  00E3F4  510E               	movf	(_gblCBW+14)& (0+255),w,b
 31796  00E3F6  B4D8               	btfsc	status,2,c
 31797  00E3F8  D04F               	goto	l578
 31798                           
 31799                           ; BSR set to: 2
 31800  00E3FA  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31801  00E3FE  0E3F               	movlw	63
 31802  00E400  0100               	movlb	0	; () banked
 31803  00E402  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31804  00E404  A4D8               	btfss	status,2,c
 31805  00E406  D048               	goto	l578
 31806                           
 31807                           ; BSR set to: 0
 31808                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 31809  00E408  0E55               	movlw	85
 31810  00E40A  010D               	movlb	13	; () banked
 31811  00E40C  6F80               	movwf	128,b	;volatile
 31812  00E40E  0E53               	movlw	83
 31813  00E410  6F81               	movwf	129,b	;volatile
 31814  00E412  0E42               	movlw	66
 31815  00E414  6F82               	movwf	130,b	;volatile
 31816  00E416  0E53               	movlw	83
 31817  00E418  6F83               	movwf	131,b	;volatile
 31818                           
 31819                           ; BSR set to: 13
 31820                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31821  00E41A  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 31822  00E41E  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 31823  00E422  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 31824  00E426  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 31825                           
 31826                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31827  00E42A  0E00               	movlw	0
 31828  00E42C  6F88               	movwf	136,b	;volatile
 31829  00E42E  0E00               	movlw	0
 31830  00E430  6F89               	movwf	137,b	;volatile
 31831  00E432  0E00               	movlw	0
 31832  00E434  6F8A               	movwf	138,b	;volatile
 31833  00E436  0E00               	movlw	0
 31834  00E438  6F8B               	movwf	139,b	;volatile
 31835                           
 31836                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31837  00E43A  0E00               	movlw	0
 31838  00E43C  6F8C               	movwf	140,b	;volatile
 31839                           
 31840                           ; BSR set to: 13
 31841                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31842  00E43E  0101               	movlb	1	; () banked
 31843  00E440  6962               	setf	_MSDCommandState& (0+255),b
 31844                           
 31845                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31846  00E442  0E00               	movlw	0
 31847  00E444  6F61               	movwf	_MSDReadState& (0+255),b
 31848                           
 31849                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31850  00E446  0E00               	movlw	0
 31851  00E448  6F60               	movwf	_MSDWriteState& (0+255),b
 31852                           
 31853                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31854  00E44A  0E00               	movlw	0
 31855  00E44C  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 31856                           
 31857                           ; BSR set to: 1
 31858                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31859  00E44E  0E03               	movlw	3
 31860  00E450  0102               	movlb	2	; () banked
 31861  00E452  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 31862  00E454  B4D8               	btfsc	status,2,c
 31863  00E456  D009               	goto	l579
 31864                           
 31865                           ; BSR set to: 2
 31866                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31867  00E458  0101               	movlb	1	; () banked
 31868  00E45A  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 31869  00E45C  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 31870  00E45E  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 31871  00E460  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 31872                           
 31873                           ; BSR set to: 1
 31874                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31875  00E462  0E00               	movlw	0
 31876  00E464  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31877                           
 31878                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31879  00E466  0E00               	movlw	0
 31880  00E468  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31881  00E46A                     l579:
 31882                           
 31883                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31884                           
 31885                           ; BSR set to: 1
 31886  00E46A  0102               	movlb	2	; () banked
 31887  00E46C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 31888  00E46E  D002               	goto	l580
 31889                           
 31890                           ; BSR set to: 2
 31891                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 31892  00E470  0E01               	movlw	1
 31893  00E472  D001               	goto	L44
 31894  00E474                     l580:
 31895                           
 31896                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 31897                           
 31898                           ; BSR set to: 1
 31899  00E474  0E02               	movlw	2
 31900  00E476                     L44:
 31901  00E476  0101               	movlb	1	; () banked
 31902  00E478  6F63               	movwf	_MSD_State& (0+255),b
 31903                           
 31904                           ; BSR set to: 1
 31905                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31906                           
 31907                           ; BSR set to: 1
 31908  00E47A  0102               	movlb	2	; () banked
 31909  00E47C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 31910  00E47E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 31911  00E480  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 31912  00E482  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 31913  00E484  B4D8               	btfsc	status,2,c
 31914  00E486  D002               	goto	l582
 31915                           
 31916                           ; BSR set to: 2
 31917                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 31918  00E488  0E00               	movlw	0
 31919  00E48A  D001               	goto	L45
 31920  00E48C                     l582:
 31921                           
 31922                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 31923                           
 31924                           ; BSR set to: 1
 31925  00E48C  0E01               	movlw	1
 31926  00E48E                     L45:
 31927  00E48E  0101               	movlb	1	; () banked
 31928  00E490  6F5C               	movwf	_MSDHostNoData& (0+255),b
 31929                           
 31930                           ; BSR set to: 1
 31931                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 31932                           
 31933                           ; BSR set to: 1
 31934  00E492  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 31935                           
 31936                           ;usb_device_msd.c: 454: }
 31937  00E496  D092               	goto	l586
 31938  00E498                     l578:
 31939                           
 31940                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 31941                           
 31942                           ; BSR set to: 1
 31943  00E498  0E01               	movlw	1
 31944  00E49A  0100               	movlb	0	; () banked
 31945  00E49C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31946  00E49E  0E02               	movlw	2
 31947  00E4A0  EC65  F087         	call	_USBStallEndpoint
 31948                           
 31949                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 31950  00E4A4  0E00               	movlw	0
 31951  00E4A6  0100               	movlb	0	; () banked
 31952  00E4A8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31953  00E4AA  0E02               	movlw	2
 31954  00E4AC  EC65  F087         	call	_USBStallEndpoint
 31955                           
 31956                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 31957  00E4B0  D085               	goto	l586
 31958  00E4B2                     l577:
 31959                           
 31960                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 31961  00E4B2  0E01               	movlw	1
 31962  00E4B4  0100               	movlb	0	; () banked
 31963  00E4B6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31964  00E4B8  0E02               	movlw	2
 31965  00E4BA  EC65  F087         	call	_USBStallEndpoint
 31966                           
 31967                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 31968  00E4BE  0E00               	movlw	0
 31969  00E4C0  0100               	movlb	0	; () banked
 31970  00E4C2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31971  00E4C4  0E02               	movlw	2
 31972  00E4C6  EC65  F087         	call	_USBStallEndpoint
 31973                           
 31974                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 31975  00E4CA  0E00               	movlw	0
 31976  00E4CC  0101               	movlb	1	; () banked
 31977  00E4CE  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31978                           
 31979                           ; BSR set to: 1
 31980                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 31981                           
 31982                           ; BSR set to: 1
 31983  00E4D0  D075               	goto	l586
 31984  00E4D2                     
 31985                           ; BSR set to: 1
 31986                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31987                           
 31988                           ; BSR set to: 1
 31989  00E4D2  ECF4  F082         	call	_MSDProcessCommand	;wreg free
 31990  00E4D6  0AFF               	xorlw	255
 31991  00E4D8  A4D8               	btfss	status,2,c
 31992  00E4DA  D070               	goto	l586
 31993  00E4DC  D011               	goto	l591
 31994  00E4DE                     
 31995                           ; BSR set to: 1
 31996                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31997                           
 31998                           ; BSR set to: 1
 31999  00E4DE  ECF4  F082         	call	_MSDProcessCommand	;wreg free
 32000  00E4E2  0AFF               	xorlw	255
 32001  00E4E4  A4D8               	btfss	status,2,c
 32002  00E4E6  D06A               	goto	l586
 32003                           
 32004                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 32005  00E4E8  010D               	movlb	13	; () banked
 32006  00E4EA  518C               	movf	140,w,b	;volatile
 32007  00E4EC  A4D8               	btfss	status,2,c
 32008  00E4EE  D008               	goto	l591
 32009                           
 32010                           ; BSR set to: 13
 32011  00E4F0  5188               	movf	136,w,b	;volatile
 32012  00E4F2  1189               	iorwf	137,w,b	;volatile
 32013  00E4F4  118A               	iorwf	138,w,b	;volatile
 32014  00E4F6  118B               	iorwf	139,w,b	;volatile
 32015  00E4F8  B4D8               	btfsc	status,2,c
 32016  00E4FA  D002               	goto	l591
 32017                           
 32018                           ; BSR set to: 13
 32019                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 32020  00E4FC  0E02               	movlw	2
 32021  00E4FE  6F8C               	movwf	140,b	;volatile
 32022  00E500                     l591:
 32023                           
 32024                           ; BSR set to: 13
 32025                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 32026  00E500  0E03               	movlw	3
 32027  00E502  D03E               	goto	L43
 32028  00E504                     
 32029                           ; BSR set to: 1
 32030                           
 32031                           ; BSR set to: 1
 32032  00E504  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 32033  00E508  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 32034                           
 32035                           ; BSR set to: 1
 32036                           
 32037                           ; BSR set to: 1
 32038                           
 32039                           ; BSR set to: 1
 32040  00E50C  0100               	movlb	0	; () banked
 32041  00E50E  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 32042  00E510  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 32043  00E512  B4D8               	btfsc	status,2,c
 32044  00E514  D00A               	goto	l593
 32045                           
 32046                           ; BSR set to: 0
 32047  00E516  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 32048  00E51A  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 32049                           
 32050                           ; BSR set to: 0
 32051                           
 32052                           ; BSR set to: 0
 32053                           
 32054                           ; BSR set to: 0
 32055                           
 32056                           ; BSR set to: 0
 32057  00E51E  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 32058  00E522  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 32059  00E526  BEDF               	btfsc	indf2,7,c
 32060  00E528  D049               	goto	l586
 32061  00E52A                     l593:
 32062                           
 32063                           ; BSR set to: 0
 32064                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 32065                           
 32066                           ; BSR set to: 0
 32067  00E52A  0E01               	movlw	1
 32068  00E52C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32069  00E52E  0E80               	movlw	128
 32070  00E530  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32071  00E532  0E0D               	movlw	13
 32072  00E534  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32073  00E536  0E0D               	movlw	13
 32074  00E538  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32075  00E53A  0E02               	movlw	2
 32076  00E53C  ECEA  F087         	call	_USBTransferOnePacket
 32077  00E540  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32078  00E544  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32079                           
 32080                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 32081  00E548  0101               	movlb	1	; () banked
 32082  00E54A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32083  00E54C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32084  00E54E  B4D8               	btfsc	status,2,c
 32085  00E550  D006               	goto	u15990
 32086                           
 32087                           ; BSR set to: 1
 32088  00E552  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32089  00E556  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32090  00E55A  BEDF               	btfsc	indf2,7,c
 32091  00E55C  D010               	goto	l602
 32092  00E55E                     u15990:
 32093                           
 32094                           ; BSR set to: 1
 32095                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 32096                           
 32097                           ; BSR set to: 1
 32098  00E55E  0E00               	movlw	0
 32099  00E560  0100               	movlb	0	; () banked
 32100  00E562  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32101  00E564  0E40               	movlw	64
 32102  00E566  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32103  00E568  0E0D               	movlw	13
 32104  00E56A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32105  00E56C  0E40               	movlw	64
 32106  00E56E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32107  00E570  0E02               	movlw	2
 32108  00E572  ECEA  F087         	call	_USBTransferOnePacket
 32109  00E576  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32110  00E57A  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32111  00E57E                     l602:
 32112                           
 32113                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 32114  00E57E  0E00               	movlw	0
 32115  00E580                     L43:
 32116  00E580  0101               	movlb	1	; () banked
 32117  00E582  6F63               	movwf	_MSD_State& (0+255),b
 32118                           
 32119                           ;usb_device_msd.c: 513: break;
 32120  00E584  D01B               	goto	l586
 32121  00E586                     
 32122                           ; BSR set to: 1
 32123                           ;usb_device_msd.c: 518: MSD_State=0x00;
 32124                           
 32125                           ; BSR set to: 1
 32126  00E586  0E00               	movlw	0
 32127  00E588  6F63               	movwf	_MSD_State& (0+255),b
 32128                           
 32129                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 32130  00E58A  0E02               	movlw	2
 32131  00E58C  010D               	movlb	13	; () banked
 32132  00E58E  6F8C               	movwf	140,b	;volatile
 32133                           
 32134                           ; BSR set to: 13
 32135                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 32136  00E590  0E00               	movlw	0
 32137  00E592  0100               	movlb	0	; () banked
 32138  00E594  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32139  00E596  0E02               	movlw	2
 32140  00E598  EC65  F087         	call	_USBStallEndpoint
 32141                           
 32142                           ;usb_device_msd.c: 521: }
 32143  00E59C  D00F               	goto	l586
 32144  00E59E                     l570:
 32145  00E59E  0101               	movlb	1	; () banked
 32146  00E5A0  5163               	movf	_MSD_State& (0+255),w,b
 32147                           
 32148                           ; Switch size 1, requested type "space"
 32149                           ; Number of cases is 4, Range of values is 0 to 3
 32150                           ; switch strategies available:
 32151                           ; Name         Instructions Cycles
 32152                           ; simple_byte           13     7 (average)
 32153                           ;	Chosen strategy is simple_byte
 32154  00E5A2  0A00               	xorlw	0	; case 0
 32155  00E5A4  B4D8               	btfsc	status,2,c
 32156  00E5A6  D6DD               	goto	l571
 32157  00E5A8  0A01               	xorlw	1	; case 1
 32158  00E5AA  B4D8               	btfsc	status,2,c
 32159  00E5AC  D792               	goto	l587
 32160  00E5AE  0A03               	xorlw	3	; case 2
 32161  00E5B0  B4D8               	btfsc	status,2,c
 32162  00E5B2  D795               	goto	l589
 32163  00E5B4  0A01               	xorlw	1	; case 3
 32164  00E5B6  B4D8               	btfsc	status,2,c
 32165  00E5B8  D7A5               	goto	l592
 32166  00E5BA  D7E5               	goto	l605
 32167  00E5BC                     l586:
 32168                           
 32169                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 32170  00E5BC  88A0               	bsf	4000,4,c	;volatile
 32171                           
 32172                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 32173  00E5BE  0012               	return		;funcret
 32174  00E5C0                     __end_of_MSDTasks:
 32175                           	opt stack 0
 32176                           tblptru	equ	0xFF8
 32177                           tblptrh	equ	0xFF7
 32178                           tblptrl	equ	0xFF6
 32179                           tablat	equ	0xFF5
 32180                           prodh	equ	0xFF4
 32181                           prodl	equ	0xFF3
 32182                           intcon	equ	0xFF2
 32183                           postinc0	equ	0xFEE
 32184                           wreg	equ	0xFE8
 32185                           indf1	equ	0xFE7
 32186                           postinc1	equ	0xFE6
 32187                           postdec1	equ	0xFE5
 32188                           plusw1	equ	0xFE3
 32189                           fsr1h	equ	0xFE2
 32190                           fsr1l	equ	0xFE1
 32191                           indf2	equ	0xFDF
 32192                           postinc2	equ	0xFDE
 32193                           postdec2	equ	0xFDD
 32194                           plusw2	equ	0xFDB
 32195                           fsr2h	equ	0xFDA
 32196                           fsr2l	equ	0xFD9
 32197                           status	equ	0xFD8
 32198                           
 32199 ;; *************** function _MSDProcessCommand *****************
 32200 ;; Defined at:
 32201 ;;		line 553 in file "usb_device_msd.c"
 32202 ;; Parameters:    Size  Location     Type
 32203 ;;		None
 32204 ;; Auto vars:     Size  Location     Type
 32205 ;;		None
 32206 ;; Return value:  Size  Location     Type
 32207 ;;                  1    wreg      unsigned char 
 32208 ;; Registers used:
 32209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32210 ;; Tracked objects:
 32211 ;;		On entry : 0/0
 32212 ;;		On exit  : 0/0
 32213 ;;		Unchanged: 0/0
 32214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32217 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32218 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32219 ;;Total ram usage:        5 bytes
 32220 ;; Hardware stack levels used:    1
 32221 ;; Hardware stack levels required when called:   19
 32222 ;; This function calls:
 32223 ;;		_ExternalFlash_MediaDetect
 32224 ;;		_ExternalFlash_MediaInitialize
 32225 ;;		_MSDProcessCommandMediaAbsent
 32226 ;;		_MSDProcessCommandMediaPresent
 32227 ;; This function is called by:
 32228 ;;		_MSDTasks
 32229 ;; This function uses a non-reentrant model
 32230 ;;
 32231                           
 32232                           	psect	text128
 32233  0105E8                     __ptext128:
 32234                           	opt stack 0
 32235  0105E8                     _MSDProcessCommand:
 32236                           	opt stack 9
 32237                           
 32238                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 32239                           
 32240                           ;incstack = 0
 32241  0105E8  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 32242  0105EC  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 32243  0105F0  EE22  F092         	lfsr	2,_LUN+9
 32244  0105F4  D801               	call	u13998
 32245  0105F6  D00A               	goto	u13999
 32246  0105F8                     u13998:
 32247  0105F8  0005               	push	
 32248  0105FA  6EFA               	movwf	pclath,c
 32249  0105FC  50DE               	movf	postinc2,w,c
 32250  0105FE  6EFD               	movwf	tosl,c
 32251  010600  50DE               	movf	postinc2,w,c
 32252  010602  6EFE               	movwf	tosh,c
 32253  010604  50DE               	movf	postinc2,w,c
 32254  010606  6EFF               	movwf	tosu,c
 32255  010608  50FA               	movf	pclath,w,c
 32256  01060A  0012               	return		;indir
 32257  01060C                     u13999:
 32258  01060C  0900               	iorlw	0
 32259  01060E  B4D8               	btfsc	status,2,c
 32260  010610  D00C               	goto	u14010
 32261  010612  0102               	movlb	2	; () banked
 32262  010614  510D               	movf	(_gblCBW+13)& (0+255),w,b
 32263  010616  0D01               	mullw	1
 32264  010618  0E5D               	movlw	low _SoftDetach
 32265  01061A  24F3               	addwf	prodl,w,c
 32266  01061C  6ED9               	movwf	fsr2l,c
 32267  01061E  0E01               	movlw	high _SoftDetach
 32268  010620  20F4               	addwfc	prodh,w,c
 32269  010622  6EDA               	movwf	fsr2h,c
 32270  010624  04DE               	decf	postinc2,w,c
 32271  010626  A4D8               	btfss	status,2,c
 32272  010628  D01D               	goto	l608
 32273  01062A                     u14010:
 32274                           
 32275                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 32276                           
 32277                           ; BSR set to: 2
 32278  01062A  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32279  01062E  0E01               	movlw	1
 32280  010630  0100               	movlb	0	; () banked
 32281  010632  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32282  010634  0E00               	movlw	0
 32283  010636  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32284  010638  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32285  01063A  D003               	goto	u14024
 32286  01063C                     u14025:
 32287  01063C  90D8               	bcf	status,0,c
 32288  01063E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32289  010640  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32290  010642                     u14024:
 32291  010642  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32292  010644  D7FB               	goto	u14025
 32293  010646  0100               	movlb	0	; () banked
 32294  010648  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 32295  01064A  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 32296  01064C  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 32297  01064E  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 32298  010650  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 32299  010652  0101               	movlb	1	; () banked
 32300  010654  1747               	andwf	_gblMediaPresent& (0+255),f,b
 32301  010656  0100               	movlb	0	; () banked
 32302  010658  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 32303  01065A  0101               	movlb	1	; () banked
 32304  01065C  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 32305                           
 32306                           ; BSR set to: 1
 32307                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 32308  01065E  EC19  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32309                           
 32310                           ;usb_device_msd.c: 563: }
 32311  010662  D058               	goto	l615
 32312  010664                     l608:
 32313                           
 32314                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 32315  010664  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32316  010668  0E01               	movlw	1
 32317  01066A  0100               	movlb	0	; () banked
 32318  01066C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32319  01066E  0E00               	movlw	0
 32320  010670  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32321  010672  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32322  010674  D003               	goto	u14034
 32323  010676                     u14035:
 32324  010676  90D8               	bcf	status,0,c
 32325  010678  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32326  01067A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32327  01067C                     u14034:
 32328  01067C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32329  01067E  D7FB               	goto	u14035
 32330  010680  0101               	movlb	1	; () banked
 32331  010682  5147               	movf	_gblMediaPresent& (0+255),w,b
 32332  010684  0100               	movlb	0	; () banked
 32333  010686  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 32334  010688  0101               	movlb	1	; () banked
 32335  01068A  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 32336  01068C  0100               	movlb	0	; () banked
 32337  01068E  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 32338  010690  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32339  010692  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 32340  010694  A4D8               	btfss	status,2,c
 32341  010696  D03C               	goto	l612
 32342                           
 32343                           ; BSR set to: 0
 32344                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 32345  010698  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 32346  01069C  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 32347  0106A0  D801               	call	u14058
 32348  0106A2  D00B               	goto	u14059
 32349  0106A4                     u14058:
 32350  0106A4  0005               	push	
 32351  0106A6  6EFA               	movwf	pclath,c
 32352  0106A8  0102               	movlb	2	; () banked
 32353  0106AA  5189               	movf	_LUN& (0+255),w,b
 32354  0106AC  6EFD               	movwf	tosl,c
 32355  0106AE  518A               	movf	(_LUN+1)& (0+255),w,b
 32356  0106B0  6EFE               	movwf	tosh,c
 32357  0106B2  518B               	movf	(_LUN+2)& (0+255),w,b
 32358  0106B4  6EFF               	movwf	tosu,c
 32359  0106B6  50FA               	movf	pclath,w,c
 32360  0106B8  0012               	return		;indir
 32361  0106BA                     u14059:
 32362  0106BA  0100               	movlb	0	; () banked
 32363  0106BC  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 32364  0106BE  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 32365  0106C0  B4D8               	btfsc	status,2,c
 32366  0106C2  D023               	goto	l613
 32367                           
 32368                           ; BSR set to: 0
 32369                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 32370  0106C4  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32371  0106C8  0E01               	movlw	1
 32372  0106CA  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32373  0106CC  0E00               	movlw	0
 32374  0106CE  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32375  0106D0  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32376  0106D2  D003               	goto	u14074
 32377  0106D4                     u14075:
 32378  0106D4  90D8               	bcf	status,0,c
 32379  0106D6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32380  0106D8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32381  0106DA                     u14074:
 32382  0106DA  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32383  0106DC  D7FB               	goto	u14075
 32384  0106DE  0100               	movlb	0	; () banked
 32385  0106E0  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32386  0106E2  0101               	movlb	1	; () banked
 32387  0106E4  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 32388  0106E6  0100               	movlb	0	; () banked
 32389  0106E8  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 32390  0106EA  0101               	movlb	1	; () banked
 32391  0106EC  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 32392                           
 32393                           ; BSR set to: 1
 32394                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 32395  0106EE  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32396  0106F0  0BF0               	andlw	-16
 32397  0106F2  0906               	iorlw	6
 32398  0106F4  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32399                           
 32400                           ; BSR set to: 1
 32401                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 32402  0106F6  0E28               	movlw	40
 32403  0106F8  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32404                           
 32405                           ; BSR set to: 1
 32406                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 32407  0106FA  0E00               	movlw	0
 32408  0106FC  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32409                           
 32410                           ; BSR set to: 1
 32411                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 32412  0106FE  0E01               	movlw	1
 32413  010700  010D               	movlb	13	; () banked
 32414  010702  6F8C               	movwf	140,b	;volatile
 32415                           
 32416                           ; BSR set to: 13
 32417                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 32418  010704  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32419                           
 32420                           ;usb_device_msd.c: 589: }
 32421  010708  D005               	goto	l615
 32422  01070A                     l613:
 32423                           
 32424                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 32425  01070A  EC19  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32426                           
 32427                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 32428  01070E  D002               	goto	l615
 32429  010710                     l612:
 32430                           
 32431                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 32432  010710  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32433  010714                     l615:
 32434                           
 32435                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 32436  010714  0101               	movlb	1	; () banked
 32437  010716  5162               	movf	_MSDCommandState& (0+255),w,b
 32438  010718  0012               	return	
 32439  01071A                     __end_of_MSDProcessCommand:
 32440                           	opt stack 0
 32441                           tosu	equ	0xFFF
 32442                           tosh	equ	0xFFE
 32443                           tosl	equ	0xFFD
 32444                           pclath	equ	0xFFA
 32445                           tblptru	equ	0xFF8
 32446                           tblptrh	equ	0xFF7
 32447                           tblptrl	equ	0xFF6
 32448                           tablat	equ	0xFF5
 32449                           prodh	equ	0xFF4
 32450                           prodl	equ	0xFF3
 32451                           intcon	equ	0xFF2
 32452                           postinc0	equ	0xFEE
 32453                           wreg	equ	0xFE8
 32454                           indf1	equ	0xFE7
 32455                           postinc1	equ	0xFE6
 32456                           postdec1	equ	0xFE5
 32457                           plusw1	equ	0xFE3
 32458                           fsr1h	equ	0xFE2
 32459                           fsr1l	equ	0xFE1
 32460                           indf2	equ	0xFDF
 32461                           postinc2	equ	0xFDE
 32462                           postdec2	equ	0xFDD
 32463                           plusw2	equ	0xFDB
 32464                           fsr2h	equ	0xFDA
 32465                           fsr2l	equ	0xFD9
 32466                           status	equ	0xFD8
 32467                           
 32468 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 32469 ;; Defined at:
 32470 ;;		line 635 in file "usb_device_msd.c"
 32471 ;; Parameters:    Size  Location     Type
 32472 ;;		None
 32473 ;; Auto vars:     Size  Location     Type
 32474 ;;		None
 32475 ;; Return value:  Size  Location     Type
 32476 ;;                  1    wreg      void 
 32477 ;; Registers used:
 32478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32479 ;; Tracked objects:
 32480 ;;		On entry : 0/0
 32481 ;;		On exit  : 0/0
 32482 ;;		Unchanged: 0/0
 32483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32488 ;;Total ram usage:        0 bytes
 32489 ;; Hardware stack levels used:    1
 32490 ;; Hardware stack levels required when called:   18
 32491 ;; This function calls:
 32492 ;;		_MSDErrorHandler
 32493 ;;		_MSDProcessCommandMediaPresent
 32494 ;;		_ResetSenseData
 32495 ;; This function is called by:
 32496 ;;		_MSDProcessCommand
 32497 ;; This function uses a non-reentrant model
 32498 ;;
 32499                           
 32500                           	psect	text129
 32501  014232                     __ptext129:
 32502                           	opt stack 0
 32503  014232                     _MSDProcessCommandMediaAbsent:
 32504                           	opt stack 9
 32505                           
 32506                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32507                           
 32508                           ; BSR set to: 1
 32509                           ;incstack = 0
 32510  014232  D01E               	goto	l619
 32511  014234                     
 32512                           ;usb_device_msd.c: 646: ResetSenseData();
 32513  014234  EC4A  F0A1         	call	_ResetSenseData	;wreg free
 32514                           
 32515                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32516  014238  0101               	movlb	1	; () banked
 32517  01423A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32518  01423C  0BF0               	andlw	-16
 32519  01423E  0902               	iorlw	2
 32520  014240  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32521                           
 32522                           ; BSR set to: 1
 32523                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32524  014242  0E3A               	movlw	58
 32525  014244  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32526                           
 32527                           ; BSR set to: 1
 32528                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32529  014246  0E00               	movlw	0
 32530  014248  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32531                           
 32532                           ; BSR set to: 1
 32533                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32534  01424A  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32535                           
 32536                           ;usb_device_msd.c: 655: break;
 32537  01424E  0012               	return	
 32538  014250                     
 32539                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32540  014250  0E01               	movlw	1
 32541  014252  010D               	movlb	13	; () banked
 32542  014254  6F8C               	movwf	140,b	;volatile
 32543                           
 32544                           ; BSR set to: 13
 32545                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32546  014256  0101               	movlb	1	; () banked
 32547  014258  6962               	setf	_MSDCommandState& (0+255),b
 32548                           
 32549                           ;usb_device_msd.c: 665: break;
 32550  01425A  0012               	return	
 32551  01425C                     
 32552                           ; BSR set to: 1
 32553                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32554                           
 32555                           ; BSR set to: 1
 32556  01425C  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32557                           
 32558                           ;usb_device_msd.c: 671: break;
 32559  014260  0012               	return	
 32560  014262                     
 32561                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32562  014262  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32563                           
 32564                           ;usb_device_msd.c: 677: break;
 32565  014266  0012               	return	
 32566  014268                     
 32567                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32568  014268  0E7F               	movlw	127
 32569  01426A  ECB8  F084         	call	_MSDErrorHandler
 32570                           
 32571                           ;usb_device_msd.c: 685: }
 32572                           
 32573                           ;usb_device_msd.c: 684: break;
 32574  01426E  0012               	return	
 32575  014270                     l619:
 32576  014270  0101               	movlb	1	; () banked
 32577  014272  5162               	movf	_MSDCommandState& (0+255),w,b
 32578                           
 32579                           ; Switch size 1, requested type "space"
 32580                           ; Number of cases is 5, Range of values is 0 to 253
 32581                           ; switch strategies available:
 32582                           ; Name         Instructions Cycles
 32583                           ; simple_byte           16     9 (average)
 32584                           ;	Chosen strategy is simple_byte
 32585  014274  0A00               	xorlw	0	; case 0
 32586  014276  B4D8               	btfsc	status,2,c
 32587  014278  D7EB               	goto	l622
 32588  01427A  0A03               	xorlw	3	; case 3
 32589  01427C  B4D8               	btfsc	status,2,c
 32590  01427E  D7DA               	goto	l620
 32591  014280  0A11               	xorlw	17	; case 18
 32592  014282  B4D8               	btfsc	status,2,c
 32593  014284  D7EB               	goto	l624
 32594  014286  0A0C               	xorlw	12	; case 30
 32595  014288  B4D8               	btfsc	status,2,c
 32596  01428A  D7E2               	goto	l622
 32597  01428C  0AE3               	xorlw	227	; case 253
 32598  01428E  B4D8               	btfsc	status,2,c
 32599  014290  D7E8               	goto	l625
 32600  014292  D7EA               	goto	l626
 32601  014294                     __end_of_MSDProcessCommandMediaAbsent:
 32602                           	opt stack 0
 32603                           tosu	equ	0xFFF
 32604                           tosh	equ	0xFFE
 32605                           tosl	equ	0xFFD
 32606                           pclath	equ	0xFFA
 32607                           tblptru	equ	0xFF8
 32608                           tblptrh	equ	0xFF7
 32609                           tblptrl	equ	0xFF6
 32610                           tablat	equ	0xFF5
 32611                           prodh	equ	0xFF4
 32612                           prodl	equ	0xFF3
 32613                           intcon	equ	0xFF2
 32614                           postinc0	equ	0xFEE
 32615                           wreg	equ	0xFE8
 32616                           indf1	equ	0xFE7
 32617                           postinc1	equ	0xFE6
 32618                           postdec1	equ	0xFE5
 32619                           plusw1	equ	0xFE3
 32620                           fsr1h	equ	0xFE2
 32621                           fsr1l	equ	0xFE1
 32622                           indf2	equ	0xFDF
 32623                           postinc2	equ	0xFDE
 32624                           postdec2	equ	0xFDD
 32625                           plusw2	equ	0xFDB
 32626                           fsr2h	equ	0xFDA
 32627                           fsr2l	equ	0xFD9
 32628                           status	equ	0xFD8
 32629                           
 32630 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32631 ;; Defined at:
 32632 ;;		line 712 in file "usb_device_msd.c"
 32633 ;; Parameters:    Size  Location     Type
 32634 ;;		None
 32635 ;; Auto vars:     Size  Location     Type
 32636 ;;  capacity        4   66[BANK0 ] struct .
 32637 ;;  sectorSize      4   62[BANK0 ] struct .
 32638 ;;  i               1   70[BANK0 ] unsigned char 
 32639 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32640 ;; Return value:  Size  Location     Type
 32641 ;;                  1    wreg      void 
 32642 ;; Registers used:
 32643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32644 ;; Tracked objects:
 32645 ;;		On entry : 0/0
 32646 ;;		On exit  : 0/0
 32647 ;;		Unchanged: 0/0
 32648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32650 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32652 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32653 ;;Total ram usage:       14 bytes
 32654 ;; Hardware stack levels used:    1
 32655 ;; Hardware stack levels required when called:   17
 32656 ;; This function calls:
 32657 ;;		_ExternalFlash_CapacityRead
 32658 ;;		_ExternalFlash_SectorSizeRead
 32659 ;;		_ExternalFlash_WriteProtectStateGet
 32660 ;;		_MSDCheckForErrorCases
 32661 ;;		_MSDComputeDeviceInAndResidue
 32662 ;;		_MSDErrorHandler
 32663 ;;		_MSDReadHandler
 32664 ;;		_MSDWriteHandler
 32665 ;;		_ResetSenseData
 32666 ;;		_USBTransferOnePacket
 32667 ;;		_memcpy
 32668 ;; This function is called by:
 32669 ;;		_MSDProcessCommand
 32670 ;;		_MSDProcessCommandMediaAbsent
 32671 ;; This function uses a non-reentrant model
 32672 ;;
 32673                           
 32674                           	psect	text130
 32675  00BDA8                     __ptext130:
 32676                           	opt stack 0
 32677  00BDA8                     _MSDProcessCommandMediaPresent:
 32678                           	opt stack 10
 32679                           
 32680                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 32681                           
 32682                           ;incstack = 0
 32683  00BDA8  D1D0               	goto	l630
 32684  00BDAA                     
 32685                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32686  00BDAA  EC22  F078         	call	_MSDReadHandler	;wreg free
 32687  00BDAE  0900               	iorlw	0
 32688  00BDB0  A4D8               	btfss	status,2,c
 32689  00BDB2  0012               	return	
 32690                           
 32691                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32692  00BDB4  0101               	movlb	1	; () banked
 32693  00BDB6  6962               	setf	_MSDCommandState& (0+255),b
 32694                           
 32695                           ; BSR set to: 1
 32696                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 32697  00BDB8  0012               	return	
 32698  00BDBA                     
 32699                           ; BSR set to: 1
 32700                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32701                           
 32702                           ; BSR set to: 1
 32703  00BDBA  ECF5  F06A         	call	_MSDWriteHandler	;wreg free
 32704  00BDBE  0900               	iorlw	0
 32705  00BDC0  A4D8               	btfss	status,2,c
 32706  00BDC2  0012               	return	
 32707                           
 32708                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32709  00BDC4  0101               	movlb	1	; () banked
 32710  00BDC6  6962               	setf	_MSDCommandState& (0+255),b
 32711                           
 32712                           ; BSR set to: 1
 32713                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 32714  00BDC8  0012               	return	
 32715  00BDCA                     
 32716                           ; BSR set to: 1
 32717                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32718                           
 32719                           ; BSR set to: 1
 32720  00BDCA  055C               	decf	_MSDHostNoData& (0+255),w,b
 32721  00BDCC  A4D8               	btfss	status,2,c
 32722  00BDCE  D002               	goto	l637
 32723                           
 32724                           ; BSR set to: 1
 32725                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32726  00BDD0  6962               	setf	_MSDCommandState& (0+255),b
 32727                           
 32728                           ;usb_device_msd.c: 751: break;
 32729  00BDD2  0012               	return	
 32730  00BDD4                     l637:
 32731                           
 32732                           ; BSR set to: 1
 32733                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 32734  00BDD4  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 32735                           
 32736                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32737  00BDD8  C213  F145         	movff	_gblCBW+19,_TransferLength
 32738                           
 32739                           ; BSR set to: 1
 32740                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32741  00BDDC  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32742  00BDE0  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32743  00BDE4  0100               	movlb	0	; () banked
 32744  00BDE6  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32745  00BDE8  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32746  00BDEA  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 32747  00BDEE  0900               	iorlw	0
 32748  00BDF0  A4D8               	btfss	status,2,c
 32749  00BDF2  0012               	return	
 32750                           
 32751                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 32752                           
 32753                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 32754  00BDF4  0E00               	movlw	0
 32755  00BDF6  0100               	movlb	0	; () banked
 32756  00BDF8  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32757  00BDFA  0E24               	movlw	36
 32758  00BDFC  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32759  00BDFE  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32760                           
 32761                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32762  00BE02  0E00               	movlw	0
 32763  00BE04  0100               	movlb	0	; () banked
 32764  00BE06  6F60               	movwf	memcpy@d1& (0+255),b
 32765  00BE08  0E06               	movlw	6
 32766  00BE0A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32767  00BE0C  0E60               	movlw	low _inq_resp
 32768  00BE0E  6F62               	movwf	memcpy@s1& (0+255),b
 32769  00BE10  0EA1               	movlw	high _inq_resp
 32770  00BE12  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32771  00BE14  0E00               	movlw	0
 32772  00BE16  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32773  00BE18  0E24               	movlw	36
 32774  00BE1A  6F64               	movwf	memcpy@n& (0+255),b
 32775  00BE1C  ECDD  F0A1         	call	_memcpy	;wreg free
 32776                           
 32777                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32778  00BE20  0EFD               	movlw	253
 32779  00BE22  0101               	movlb	1	; () banked
 32780  00BE24  6F62               	movwf	_MSDCommandState& (0+255),b
 32781                           
 32782                           ;usb_device_msd.c: 773: break;
 32783  00BE26  0012               	return	
 32784  00BE28                     
 32785                           ; BSR set to: 1
 32786                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 32787                           
 32788                           ; BSR set to: 1
 32789  00BE28  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32790  00BE2C  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32791  00BE30  EE22  F08C         	lfsr	2,_LUN+3
 32792  00BE34  D801               	call	u12328
 32793  00BE36  D00A               	goto	u12329
 32794  00BE38                     u12328:
 32795  00BE38  0005               	push	
 32796  00BE3A  6EFA               	movwf	pclath,c
 32797  00BE3C  50DE               	movf	postinc2,w,c
 32798  00BE3E  6EFD               	movwf	tosl,c
 32799  00BE40  50DE               	movf	postinc2,w,c
 32800  00BE42  6EFE               	movwf	tosh,c
 32801  00BE44  50DE               	movf	postinc2,w,c
 32802  00BE46  6EFF               	movwf	tosu,c
 32803  00BE48  50FA               	movf	pclath,w,c
 32804  00BE4A  0012               	return		;indir
 32805  00BE4C                     u12329:
 32806  00BE4C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32807  00BE50  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32808  00BE54  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32809  00BE58  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32810                           
 32811                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32812  00BE5C  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32813  00BE60  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32814  00BE64  EE22  F08F         	lfsr	2,_LUN+6
 32815  00BE68  D801               	call	u12338
 32816  00BE6A  D00A               	goto	u12339
 32817  00BE6C                     u12338:
 32818  00BE6C  0005               	push	
 32819  00BE6E  6EFA               	movwf	pclath,c
 32820  00BE70  50DE               	movf	postinc2,w,c
 32821  00BE72  6EFD               	movwf	tosl,c
 32822  00BE74  50DE               	movf	postinc2,w,c
 32823  00BE76  6EFE               	movwf	tosh,c
 32824  00BE78  50DE               	movf	postinc2,w,c
 32825  00BE7A  6EFF               	movwf	tosu,c
 32826  00BE7C  50FA               	movf	pclath,w,c
 32827  00BE7E  0012               	return		;indir
 32828  00BE80                     u12339:
 32829  00BE80  0100               	movlb	0	; () banked
 32830  00BE82  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32831  00BE86  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32832  00BE8A  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32833  00BE8C  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32834                           
 32835                           ; BSR set to: 0
 32836                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32837  00BE8E  EE26 F000          	lfsr	2,1536
 32838  00BE92  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32839                           
 32840                           ; BSR set to: 0
 32841                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32842  00BE96  EE26 F001          	lfsr	2,1537	;volatile
 32843  00BE9A  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32844                           
 32845                           ; BSR set to: 0
 32846                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32847  00BE9E  EE26 F002          	lfsr	2,1538	;volatile
 32848  00BEA2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32849                           
 32850                           ; BSR set to: 0
 32851                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32852  00BEA6  EE26 F003          	lfsr	2,1539	;volatile
 32853  00BEAA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32854                           
 32855                           ; BSR set to: 0
 32856                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32857  00BEAE  EE26 F004          	lfsr	2,1540	;volatile
 32858  00BEB2  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32859                           
 32860                           ; BSR set to: 0
 32861                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32862  00BEB6  EE26 F005          	lfsr	2,1541	;volatile
 32863  00BEBA  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32864                           
 32865                           ; BSR set to: 0
 32866                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32867  00BEBE  EE26 F006          	lfsr	2,1542	;volatile
 32868  00BEC2  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32869                           
 32870                           ; BSR set to: 0
 32871                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32872  00BEC6  EE26 F007          	lfsr	2,1543	;volatile
 32873  00BECA  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32874                           
 32875                           ; BSR set to: 0
 32876                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32877  00BECE  0E00               	movlw	0
 32878  00BED0  0101               	movlb	1	; () banked
 32879  00BED2  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32880  00BED4  0E08               	movlw	8
 32881  00BED6  6F45               	movwf	_TransferLength& (0+255),b
 32882                           
 32883                           ; BSR set to: 1
 32884                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32885  00BED8  0E00               	movlw	0
 32886  00BEDA  0100               	movlb	0	; () banked
 32887  00BEDC  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32888  00BEDE  0E08               	movlw	8
 32889  00BEE0  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32890  00BEE2  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32891                           
 32892                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32893  00BEE6  0EFD               	movlw	253
 32894  00BEE8  0101               	movlb	1	; () banked
 32895  00BEEA  6F62               	movwf	_MSDCommandState& (0+255),b
 32896                           
 32897                           ;usb_device_msd.c: 802: break;
 32898  00BEEC  0012               	return	
 32899  00BEEE                     
 32900                           ; BSR set to: 1
 32901                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32902                           
 32903                           ; BSR set to: 1
 32904  00BEEE  055C               	decf	_MSDHostNoData& (0+255),w,b
 32905  00BEF0  A4D8               	btfss	status,2,c
 32906  00BEF2  D002               	goto	l641
 32907                           
 32908                           ; BSR set to: 1
 32909                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32910  00BEF4  6962               	setf	_MSDCommandState& (0+255),b
 32911                           
 32912                           ;usb_device_msd.c: 814: break;
 32913  00BEF6  0012               	return	
 32914  00BEF8                     l641:
 32915                           
 32916                           ; BSR set to: 1
 32917                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 32918                           
 32919                           ; BSR set to: 1
 32920  00BEF8  0E00               	movlw	0
 32921  00BEFA  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32922  00BEFC  0E12               	movlw	18
 32923  00BEFE  6F45               	movwf	_TransferLength& (0+255),b
 32924                           
 32925                           ; BSR set to: 1
 32926                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32927  00BF00  0E00               	movlw	0
 32928  00BF02  0100               	movlb	0	; () banked
 32929  00BF04  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32930  00BF06  0E12               	movlw	18
 32931  00BF08  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32932  00BF0A  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32933                           
 32934                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32935  00BF0E  0E00               	movlw	0
 32936  00BF10  0100               	movlb	0	; () banked
 32937  00BF12  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32938  00BF14                     l13596:
 32939                           
 32940                           ; BSR set to: 0
 32941  00BF14  0E11               	movlw	17
 32942  00BF16  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 32943  00BF18  D001               	goto	l642
 32944  00BF1A  D014               	goto	u12360
 32945  00BF1C                     l642:
 32946                           
 32947                           ; BSR set to: 0
 32948                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32949                           
 32950                           ; BSR set to: 0
 32951  00BF1C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32952  00BF1E  0D01               	mullw	1
 32953  00BF20  0E00               	movlw	low _gblSenseData
 32954  00BF22  24F3               	addwf	prodl,w,c
 32955  00BF24  6ED9               	movwf	fsr2l,c
 32956  00BF26  0E01               	movlw	high _gblSenseData
 32957  00BF28  20F4               	addwfc	prodh,w,c
 32958  00BF2A  6EDA               	movwf	fsr2h,c
 32959  00BF2C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32960  00BF2E  0D01               	mullw	1
 32961  00BF30  0E00               	movlw	0
 32962  00BF32  24F3               	addwf	prodl,w,c
 32963  00BF34  6EE1               	movwf	fsr1l,c
 32964  00BF36  0E06               	movlw	6
 32965  00BF38  20F4               	addwfc	prodh,w,c
 32966  00BF3A  6EE2               	movwf	fsr1h,c
 32967  00BF3C  CFDF FFE7          	movff	indf2,indf1
 32968                           
 32969                           ; BSR set to: 0
 32970  00BF40  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32971  00BF42  D7E8               	goto	l13596
 32972  00BF44                     u12360:
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32976                           
 32977                           ; BSR set to: 0
 32978  00BF44  0EFD               	movlw	253
 32979  00BF46  0101               	movlb	1	; () banked
 32980  00BF48  6F62               	movwf	_MSDCommandState& (0+255),b
 32981                           
 32982                           ;usb_device_msd.c: 827: break;
 32983  00BF4A  0012               	return	
 32984  00BF4C                     l644:
 32985                           
 32986                           ; BSR set to: 1
 32987                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32988  00BF4C  0E03               	movlw	3
 32989  00BF4E  CFE8 F600          	movff	wreg,1536
 32990                           
 32991                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32992  00BF52  0E00               	movlw	0
 32993  00BF54  CFE8 F601          	movff	wreg,1537	;volatile
 32994                           
 32995                           ; BSR set to: 1
 32996                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32997  00BF58  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32998  00BF5C  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32999  00BF60  EE22  F098         	lfsr	2,_LUN+15
 33000  00BF64  D801               	call	u12378
 33001  00BF66  D00A               	goto	u12379
 33002  00BF68                     u12378:
 33003  00BF68  0005               	push	
 33004  00BF6A  6EFA               	movwf	pclath,c
 33005  00BF6C  50DE               	movf	postinc2,w,c
 33006  00BF6E  6EFD               	movwf	tosl,c
 33007  00BF70  50DE               	movf	postinc2,w,c
 33008  00BF72  6EFE               	movwf	tosh,c
 33009  00BF74  50DE               	movf	postinc2,w,c
 33010  00BF76  6EFF               	movwf	tosu,c
 33011  00BF78  50FA               	movf	pclath,w,c
 33012  00BF7A  0012               	return		;indir
 33013  00BF7C                     u12379:
 33014  00BF7C  0900               	iorlw	0
 33015  00BF7E  A4D8               	btfss	status,2,c
 33016  00BF80  D005               	goto	l646
 33017  00BF82  0E00               	movlw	0
 33018  00BF84  0100               	movlb	0	; () banked
 33019  00BF86  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33020  00BF88  0E00               	movlw	0
 33021  00BF8A  D004               	goto	L46
 33022  00BF8C                     l646:
 33023                           
 33024                           ; BSR set to: 0
 33025  00BF8C  0E00               	movlw	0
 33026  00BF8E  0100               	movlb	0	; () banked
 33027  00BF90  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33028  00BF92  0E80               	movlw	128
 33029  00BF94                     L46:
 33030  00BF94  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 33031                           
 33032                           ; BSR set to: 0
 33033                           
 33034                           ; BSR set to: 0
 33035  00BF96  EE26 F002          	lfsr	2,1538	;volatile
 33036  00BF9A  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 33037                           
 33038                           ; BSR set to: 0
 33039                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 33040  00BF9E  0E00               	movlw	0
 33041  00BFA0  CFE8 F603          	movff	wreg,1539	;volatile
 33042                           
 33043                           ; BSR set to: 0
 33044                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 33045  00BFA4  0E00               	movlw	0
 33046  00BFA6  0101               	movlb	1	; () banked
 33047  00BFA8  6F46               	movwf	(_TransferLength+1)& (0+255),b
 33048  00BFAA  0E04               	movlw	4
 33049  00BFAC  6F45               	movwf	_TransferLength& (0+255),b
 33050                           
 33051                           ; BSR set to: 1
 33052                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 33053  00BFAE  0E00               	movlw	0
 33054  00BFB0  0100               	movlb	0	; () banked
 33055  00BFB2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 33056  00BFB4  0E04               	movlw	4
 33057  00BFB6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 33058  00BFB8  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 33059                           
 33060                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 33061  00BFBC  0EFD               	movlw	253
 33062  00BFBE  0101               	movlb	1	; () banked
 33063  00BFC0  6F62               	movwf	_MSDCommandState& (0+255),b
 33064                           
 33065                           ;usb_device_msd.c: 839: break;
 33066  00BFC2  0012               	return	
 33067  00BFC4                     
 33068                           ; BSR set to: 1
 33069                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 33070                           
 33071                           ; BSR set to: 1
 33072  00BFC4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33073  00BFC6  0BF0               	andlw	-16
 33074  00BFC8  0905               	iorlw	5
 33075  00BFCA  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33076                           
 33077                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 33078  00BFCC  0E20               	movlw	32
 33079  00BFCE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33080                           
 33081                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 33082  00BFD0  0E00               	movlw	0
 33083  00BFD2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33084                           
 33085                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 33086  00BFD4  0E01               	movlw	1
 33087  00BFD6  010D               	movlb	13	; () banked
 33088  00BFD8  6F8C               	movwf	140,b	;volatile
 33089                           
 33090                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 33091  00BFDA  0E00               	movlw	0
 33092  00BFDC  6F88               	movwf	136,b	;volatile
 33093  00BFDE  0E00               	movlw	0
 33094  00BFE0  6F89               	movwf	137,b	;volatile
 33095  00BFE2  0E00               	movlw	0
 33096  00BFE4  6F8A               	movwf	138,b	;volatile
 33097  00BFE6  0E00               	movlw	0
 33098  00BFE8  6F8B               	movwf	139,b	;volatile
 33099                           
 33100                           ; BSR set to: 13
 33101                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 33102  00BFEA  0101               	movlb	1	; () banked
 33103  00BFEC  6962               	setf	_MSDCommandState& (0+255),b
 33104                           
 33105                           ;usb_device_msd.c: 848: break;
 33106  00BFEE  0012               	return	
 33107  00BFF0                     
 33108                           ; BSR set to: 1
 33109                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 33110                           
 33111                           ; BSR set to: 1
 33112  00BFF0  0E00               	movlw	0
 33113  00BFF2  0100               	movlb	0	; () banked
 33114  00BFF4  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 33115  00BFF6  0E00               	movlw	0
 33116  00BFF8  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 33117  00BFFA  0E00               	movlw	0
 33118  00BFFC  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 33119  00BFFE  0E00               	movlw	0
 33120  00C000  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 33121  00C002  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 33122  00C006  0900               	iorlw	0
 33123  00C008  A4D8               	btfss	status,2,c
 33124  00C00A  0012               	return	
 33125                           
 33126                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 33127                           
 33128                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 33129  00C00C  0101               	movlb	1	; () banked
 33130  00C00E  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33131  00C010  0B0F               	andlw	15
 33132  00C012  0A06               	xorlw	6
 33133  00C014  A4D8               	btfss	status,2,c
 33134  00C016  D007               	goto	l652
 33135                           
 33136                           ; BSR set to: 1
 33137  00C018  010D               	movlb	13	; () banked
 33138  00C01A  058C               	decf	140,w,b	;volatile
 33139  00C01C  A4D8               	btfss	status,2,c
 33140  00C01E  D003               	goto	l652
 33141                           
 33142                           ; BSR set to: 13
 33143                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 33144  00C020  0101               	movlb	1	; () banked
 33145  00C022  6962               	setf	_MSDCommandState& (0+255),b
 33146                           
 33147                           ;usb_device_msd.c: 870: }
 33148  00C024  0012               	return	
 33149  00C026                     l652:
 33150                           
 33151                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 33152                           
 33153                           ; BSR set to: 1
 33154  00C026  EC4A  F0A1         	call	_ResetSenseData	;wreg free
 33155                           
 33156                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 33157  00C02A  0E00               	movlw	0
 33158  00C02C  010D               	movlb	13	; () banked
 33159  00C02E  6F88               	movwf	136,b	;volatile
 33160  00C030  0E00               	movlw	0
 33161  00C032  6F89               	movwf	137,b	;volatile
 33162  00C034  0E00               	movlw	0
 33163  00C036  6F8A               	movwf	138,b	;volatile
 33164  00C038  0E00               	movlw	0
 33165  00C03A  6F8B               	movwf	139,b	;volatile
 33166                           
 33167                           ; BSR set to: 13
 33168                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 33169  00C03C  0101               	movlb	1	; () banked
 33170  00C03E  6962               	setf	_MSDCommandState& (0+255),b
 33171                           
 33172                           ; BSR set to: 1
 33173                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 33174  00C040  0012               	return	
 33175  00C042                     
 33176                           ; BSR set to: 1
 33177                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 33178                           
 33179                           ; BSR set to: 1
 33180                           
 33181                           ; BSR set to: 1
 33182  00C042  0E00               	movlw	0
 33183  00C044  010D               	movlb	13	; () banked
 33184  00C046  6F88               	movwf	136,b	;volatile
 33185  00C048  0E00               	movlw	0
 33186  00C04A  6F89               	movwf	137,b	;volatile
 33187  00C04C  0E00               	movlw	0
 33188  00C04E  6F8A               	movwf	138,b	;volatile
 33189  00C050  0E00               	movlw	0
 33190  00C052  6F8B               	movwf	139,b	;volatile
 33191                           
 33192                           ; BSR set to: 13
 33193                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 33194  00C054  0101               	movlb	1	; () banked
 33195  00C056  6962               	setf	_MSDCommandState& (0+255),b
 33196                           
 33197                           ;usb_device_msd.c: 885: break;
 33198  00C058  0012               	return	
 33199  00C05A                     
 33200                           ; BSR set to: 1
 33201                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 33202                           
 33203                           ; BSR set to: 1
 33204  00C05A  5149               	movf	_USBMSDInHandle& (0+255),w,b
 33205  00C05C  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33206  00C05E  B4D8               	btfsc	status,2,c
 33207  00C060  D006               	goto	u12430
 33208                           
 33209                           ; BSR set to: 1
 33210  00C062  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 33211  00C066  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33212  00C06A  BEDF               	btfsc	indf2,7,c
 33213  00C06C  0012               	return	
 33214  00C06E                     u12430:
 33215                           
 33216                           ; BSR set to: 1
 33217                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 33218                           
 33219                           ; BSR set to: 1
 33220  00C06E  0102               	movlb	2	; () banked
 33221  00C070  510B               	movf	(_gblCBW+11)& (0+255),w,b
 33222  00C072  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33223  00C074  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33224  00C076  E104               	bnz	u12440
 33225  00C078  0E40               	movlw	64
 33226  00C07A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 33227  00C07C  A0D8               	btfss	status,0,c
 33228  00C07E  D00B               	goto	l660
 33229  00C080                     u12440:
 33230                           
 33231                           ; BSR set to: 2
 33232                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 33233  00C080  0E40               	movlw	64
 33234  00C082  0100               	movlb	0	; () banked
 33235  00C084  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 33236                           
 33237                           ; BSR set to: 0
 33238                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 33239  00C086  0E40               	movlw	64
 33240  00C088  0102               	movlb	2	; () banked
 33241  00C08A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33242  00C08C  0E00               	movlw	0
 33243  00C08E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33244  00C090  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33245  00C092  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33246                           
 33247                           ;usb_device_msd.c: 900: }
 33248  00C094  D00A               	goto	l661
 33249  00C096                     l660:
 33250                           
 33251                           ; BSR set to: 2
 33252                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 33253  00C096  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 33254                           
 33255                           ; BSR set to: 2
 33256                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 33257  00C09A  0E00               	movlw	0
 33258  00C09C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 33259  00C09E  0E00               	movlw	0
 33260  00C0A0  6F09               	movwf	(_gblCBW+9)& (0+255),b
 33261  00C0A2  0E00               	movlw	0
 33262  00C0A4  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 33263  00C0A6  0E00               	movlw	0
 33264  00C0A8  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 33265  00C0AA                     l661:
 33266                           
 33267                           ; BSR set to: 2
 33268                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 33269                           
 33270                           ; BSR set to: 2
 33271  00C0AA  0100               	movlb	0	; () banked
 33272  00C0AC  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33273  00C0AE  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 33274  00C0B0  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 33275  00C0B2  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 33276  00C0B4  0101               	movlb	1	; () banked
 33277  00C0B6  5D45               	subwf	_TransferLength& (0+255),w,b
 33278  00C0B8  0100               	movlb	0	; () banked
 33279  00C0BA  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 33280  00C0BC  0101               	movlb	1	; () banked
 33281  00C0BE  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 33282  00C0C0  A0D8               	btfss	status,0,c
 33283  00C0C2  D007               	goto	l662
 33284                           
 33285                           ; BSR set to: 1
 33286                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 33287  00C0C4  0100               	movlb	0	; () banked
 33288  00C0C6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33289  00C0C8  0101               	movlb	1	; () banked
 33290  00C0CA  5F45               	subwf	_TransferLength& (0+255),f,b
 33291  00C0CC  0E00               	movlw	0
 33292  00C0CE  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 33293                           
 33294                           ;usb_device_msd.c: 918: }
 33295  00C0D0  D01E               	goto	u12470
 33296  00C0D2                     l662:
 33297                           
 33298                           ; BSR set to: 1
 33299                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 33300                           
 33301                           ; BSR set to: 1
 33302  00C0D2  0E00               	movlw	0
 33303  00C0D4  0100               	movlb	0	; () banked
 33304  00C0D6  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 33305  00C0D8  D016               	goto	l664
 33306  00C0DA                     
 33307                           ; BSR set to: 0
 33308                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 33309                           
 33310                           ; BSR set to: 0
 33311  00C0DA  0101               	movlb	1	; () banked
 33312  00C0DC  5145               	movf	_TransferLength& (0+255),w,b
 33313  00C0DE  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33314  00C0E0  B4D8               	btfsc	status,2,c
 33315  00C0E2  D004               	goto	l666
 33316                           
 33317                           ; BSR set to: 1
 33318                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 33319  00C0E4  0745               	decf	_TransferLength& (0+255),f,b
 33320  00C0E6  A0D8               	btfss	status,0,c
 33321  00C0E8  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33322                           
 33323                           ;usb_device_msd.c: 932: }
 33324  00C0EA  D00B               	goto	l667
 33325  00C0EC                     l666:
 33326                           
 33327                           ; BSR set to: 1
 33328                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 33329                           
 33330                           ; BSR set to: 1
 33331  00C0EC  0100               	movlb	0	; () banked
 33332  00C0EE  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33333  00C0F0  0D01               	mullw	1
 33334  00C0F2  0E00               	movlw	0
 33335  00C0F4  24F3               	addwf	prodl,w,c
 33336  00C0F6  6ED9               	movwf	fsr2l,c
 33337  00C0F8  0E06               	movlw	6
 33338  00C0FA  20F4               	addwfc	prodh,w,c
 33339  00C0FC  6EDA               	movwf	fsr2h,c
 33340  00C0FE  0E00               	movlw	0
 33341  00C100  6EDF               	movwf	indf2,c
 33342  00C102                     l667:
 33343                           
 33344                           ; BSR set to: 0
 33345  00C102  0100               	movlb	0	; () banked
 33346  00C104  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33347  00C106                     l664:
 33348                           
 33349                           ; BSR set to: 0
 33350                           
 33351                           ; BSR set to: 0
 33352  00C106  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33353  00C108  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33354  00C10A  A0D8               	btfss	status,0,c
 33355  00C10C  D7E6               	goto	l665
 33356  00C10E                     u12470:
 33357                           
 33358                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 33359                           
 33360                           ; BSR set to: 0
 33361                           
 33362                           ; BSR set to: 0
 33363  00C10E  0E01               	movlw	1
 33364  00C110  0100               	movlb	0	; () banked
 33365  00C112  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33366  00C114  0E00               	movlw	0
 33367  00C116  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 33368  00C118  0E06               	movlw	6
 33369  00C11A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 33370  00C11C  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 33371  00C120  0E02               	movlw	2
 33372  00C122  ECEA  F087         	call	_USBTransferOnePacket
 33373  00C126  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33374  00C12A  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33375                           
 33376                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 33377  00C12E  0102               	movlb	2	; () banked
 33378  00C130  5108               	movf	(_gblCBW+8)& (0+255),w,b
 33379  00C132  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33380  00C134  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33381  00C136  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 33382  00C138  A4D8               	btfss	status,2,c
 33383  00C13A  0012               	return	
 33384                           
 33385                           ; BSR set to: 2
 33386                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 33387  00C13C  0101               	movlb	1	; () banked
 33388  00C13E  6962               	setf	_MSDCommandState& (0+255),b
 33389                           
 33390                           ; BSR set to: 1
 33391                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 33392                           
 33393                           ; BSR set to: 1
 33394                           
 33395                           ;usb_device_msd.c: 949: break;
 33396  00C140  0012               	return	
 33397  00C142                     
 33398                           ; BSR set to: 1
 33399                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 33400                           
 33401                           ; BSR set to: 1
 33402                           
 33403                           ;usb_device_msd.c: 954: default:
 33404                           
 33405                           ; BSR set to: 1
 33406  00C142  0E7F               	movlw	127
 33407  00C144  ECB8  F084         	call	_MSDErrorHandler
 33408                           
 33409                           ;usb_device_msd.c: 960: }
 33410                           
 33411                           ;usb_device_msd.c: 959: break;
 33412  00C148  0012               	return	
 33413  00C14A                     l630:
 33414  00C14A  0101               	movlb	1	; () banked
 33415  00C14C  5162               	movf	_MSDCommandState& (0+255),w,b
 33416                           
 33417                           ; Switch size 1, requested type "space"
 33418                           ; Number of cases is 12, Range of values is 0 to 254
 33419                           ; switch strategies available:
 33420                           ; Name         Instructions Cycles
 33421                           ; simple_byte           37    19 (average)
 33422                           ;	Chosen strategy is simple_byte
 33423  00C14E  0A00               	xorlw	0	; case 0
 33424  00C150  B4D8               	btfsc	status,2,c
 33425  00C152  D74E               	goto	l650
 33426  00C154  0A03               	xorlw	3	; case 3
 33427  00C156  B4D8               	btfsc	status,2,c
 33428  00C158  D6CA               	goto	l640
 33429  00C15A  0A11               	xorlw	17	; case 18
 33430  00C15C  B4D8               	btfsc	status,2,c
 33431  00C15E  D635               	goto	l636
 33432  00C160  0A08               	xorlw	8	; case 26
 33433  00C162  B4D8               	btfsc	status,2,c
 33434  00C164  D6F3               	goto	l644
 33435  00C166  0A01               	xorlw	1	; case 27
 33436  00C168  B4D8               	btfsc	status,2,c
 33437  00C16A  D76B               	goto	l654
 33438  00C16C  0A05               	xorlw	5	; case 30
 33439  00C16E  B4D8               	btfsc	status,2,c
 33440  00C170  D729               	goto	l649
 33441  00C172  0A3B               	xorlw	59	; case 37
 33442  00C174  B4D8               	btfsc	status,2,c
 33443  00C176  D658               	goto	l639
 33444  00C178  0A0D               	xorlw	13	; case 40
 33445  00C17A  B4D8               	btfsc	status,2,c
 33446  00C17C  D616               	goto	l631
 33447  00C17E  0A02               	xorlw	2	; case 42
 33448  00C180  B4D8               	btfsc	status,2,c
 33449  00C182  D61B               	goto	l634
 33450  00C184  0A05               	xorlw	5	; case 47
 33451  00C186  B4D8               	btfsc	status,2,c
 33452  00C188  D75C               	goto	l654
 33453  00C18A  0AD2               	xorlw	210	; case 253
 33454  00C18C  B4D8               	btfsc	status,2,c
 33455  00C18E  D765               	goto	l656
 33456  00C190  0A03               	xorlw	3	; case 254
 33457  00C192  D7D7               	goto	l670
 33458  00C194                     __end_of_MSDProcessCommandMediaPresent:
 33459                           	opt stack 0
 33460                           tosu	equ	0xFFF
 33461                           tosh	equ	0xFFE
 33462                           tosl	equ	0xFFD
 33463                           pclath	equ	0xFFA
 33464                           tblptru	equ	0xFF8
 33465                           tblptrh	equ	0xFF7
 33466                           tblptrl	equ	0xFF6
 33467                           tablat	equ	0xFF5
 33468                           prodh	equ	0xFF4
 33469                           prodl	equ	0xFF3
 33470                           intcon	equ	0xFF2
 33471                           postinc0	equ	0xFEE
 33472                           wreg	equ	0xFE8
 33473                           indf1	equ	0xFE7
 33474                           postinc1	equ	0xFE6
 33475                           postdec1	equ	0xFE5
 33476                           plusw1	equ	0xFE3
 33477                           fsr1h	equ	0xFE2
 33478                           fsr1l	equ	0xFE1
 33479                           indf2	equ	0xFDF
 33480                           postinc2	equ	0xFDE
 33481                           postdec2	equ	0xFDD
 33482                           plusw2	equ	0xFDB
 33483                           fsr2h	equ	0xFDA
 33484                           fsr2l	equ	0xFD9
 33485                           status	equ	0xFD8
 33486                           
 33487 ;; *************** function _MSDWriteHandler *****************
 33488 ;; Defined at:
 33489 ;;		line 1188 in file "usb_device_msd.c"
 33490 ;; Parameters:    Size  Location     Type
 33491 ;;		None
 33492 ;; Auto vars:     Size  Location     Type
 33493 ;;		None
 33494 ;; Return value:  Size  Location     Type
 33495 ;;                  1    wreg      unsigned char 
 33496 ;; Registers used:
 33497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33498 ;; Tracked objects:
 33499 ;;		On entry : 0/0
 33500 ;;		On exit  : 0/0
 33501 ;;		Unchanged: 0/0
 33502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33505 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33506 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33507 ;;Total ram usage:        5 bytes
 33508 ;; Hardware stack levels used:    1
 33509 ;; Hardware stack levels required when called:   16
 33510 ;; This function calls:
 33511 ;;		_ExternalFlash_SectorWrite
 33512 ;;		_ExternalFlash_WriteProtectStateGet
 33513 ;;		_MSDCheckForErrorCases
 33514 ;;		_USBStallEndpoint
 33515 ;;		_USBTransferOnePacket
 33516 ;; This function is called by:
 33517 ;;		_MSDProcessCommandMediaPresent
 33518 ;; This function uses a non-reentrant model
 33519 ;;
 33520                           
 33521                           	psect	text131
 33522  00D5EA                     __ptext131:
 33523                           	opt stack 0
 33524  00D5EA                     _MSDWriteHandler:
 33525                           	opt stack 10
 33526                           
 33527                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33528                           
 33529                           ;incstack = 0
 33530  00D5EA  D160               	goto	l700
 33531  00D5EC                     l701:
 33532                           
 33533                           ; BSR set to: 1
 33534                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33535  00D5EC  C211  F12E         	movff	_gblCBW+17,_LBA+3
 33536                           
 33537                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33538  00D5F0  C212  F12D         	movff	_gblCBW+18,_LBA+2
 33539                           
 33540                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33541  00D5F4  C213  F12C         	movff	_gblCBW+19,_LBA+1
 33542                           
 33543                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33544  00D5F8  C214  F12B         	movff	_gblCBW+20,_LBA
 33545                           
 33546                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33547  00D5FC  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 33548                           
 33549                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33550  00D600  C217  F145         	movff	_gblCBW+23,_TransferLength
 33551                           
 33552                           ; BSR set to: 1
 33553                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33554  00D604  5145               	movf	_TransferLength& (0+255),w,b
 33555  00D606  0100               	movlb	0	; () banked
 33556  00D608  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33557  00D60A  0101               	movlb	1	; () banked
 33558  00D60C  5146               	movf	(_TransferLength+1)& (0+255),w,b
 33559  00D60E  0100               	movlb	0	; () banked
 33560  00D610  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33561  00D612  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33562  00D614  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33563  00D616  0E09               	movlw	9
 33564  00D618                     u11265:
 33565  00D618  90D8               	bcf	status,0,c
 33566  00D61A  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33567  00D61C  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33568  00D61E  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33569  00D620  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33570  00D622  2EE8               	decfsz	wreg,f,c
 33571  00D624  D7F9               	goto	u11265
 33572  00D626  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33573  00D62A  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33574  00D62E  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33575  00D632  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33576  00D636  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 33577  00D63A  0900               	iorlw	0
 33578  00D63C  A4D8               	btfss	status,2,c
 33579  00D63E  D148               	goto	l703
 33580                           
 33581                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 33582                           
 33583                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 33584  00D640  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33585  00D644  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33586  00D648  EE22  F098         	lfsr	2,_LUN+15
 33587  00D64C  D801               	call	u11288
 33588  00D64E  D00A               	goto	u11289
 33589  00D650                     u11288:
 33590  00D650  0005               	push	
 33591  00D652  6EFA               	movwf	pclath,c
 33592  00D654  50DE               	movf	postinc2,w,c
 33593  00D656  6EFD               	movwf	tosl,c
 33594  00D658  50DE               	movf	postinc2,w,c
 33595  00D65A  6EFE               	movwf	tosh,c
 33596  00D65C  50DE               	movf	postinc2,w,c
 33597  00D65E  6EFF               	movwf	tosu,c
 33598  00D660  50FA               	movf	pclath,w,c
 33599  00D662  0012               	return		;indir
 33600  00D664                     u11289:
 33601  00D664  0900               	iorlw	0
 33602  00D666  B4D8               	btfsc	status,2,c
 33603  00D668  D017               	goto	l704
 33604                           
 33605                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33606  00D66A  0E01               	movlw	1
 33607  00D66C  010D               	movlb	13	; () banked
 33608  00D66E  6F8C               	movwf	140,b	;volatile
 33609                           
 33610                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33611  00D670  0101               	movlb	1	; () banked
 33612  00D672  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33613  00D674  0BF0               	andlw	-16
 33614  00D676  0907               	iorlw	7
 33615  00D678  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33616                           
 33617                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33618  00D67A  0E27               	movlw	39
 33619  00D67C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33620                           
 33621                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33622  00D67E  0E00               	movlw	0
 33623  00D680  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33624                           
 33625                           ; BSR set to: 1
 33626                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33627  00D682  0E00               	movlw	0
 33628  00D684  0100               	movlb	0	; () banked
 33629  00D686  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33630  00D688  0E02               	movlw	2
 33631  00D68A  EC65  F087         	call	_USBStallEndpoint
 33632                           
 33633                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33634  00D68E  0E00               	movlw	0
 33635  00D690  0101               	movlb	1	; () banked
 33636  00D692  6F60               	movwf	_MSDWriteState& (0+255),b
 33637                           
 33638                           ; BSR set to: 1
 33639                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33640  00D694  5160               	movf	_MSDWriteState& (0+255),w,b
 33641                           
 33642                           ; BSR set to: 1
 33643  00D696  0012               	return	
 33644  00D698                     l704:
 33645                           
 33646                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 33647                           
 33648                           ; BSR set to: 1
 33649  00D698  0E01               	movlw	1
 33650  00D69A  0101               	movlb	1	; () banked
 33651  00D69C  6F63               	movwf	_MSD_State& (0+255),b
 33652  00D69E                     
 33653                           ; BSR set to: 1
 33654                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33655                           
 33656                           ; BSR set to: 1
 33657  00D69E  5145               	movf	_TransferLength& (0+255),w,b
 33658  00D6A0  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33659  00D6A2  A4D8               	btfss	status,2,c
 33660  00D6A4  D002               	goto	l707
 33661                           
 33662                           ; BSR set to: 1
 33663                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33664  00D6A6  0E00               	movlw	0
 33665  00D6A8  D0FF               	goto	L50
 33666  00D6AA                     l707:
 33667                           
 33668                           ; BSR set to: 1
 33669                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33670                           
 33671                           ; BSR set to: 1
 33672  00D6AA  0E03               	movlw	3
 33673  00D6AC  6F60               	movwf	_MSDWriteState& (0+255),b
 33674                           
 33675                           ; BSR set to: 1
 33676                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33677  00D6AE  0E00               	movlw	0
 33678  00D6B0  6F4D               	movwf	_ptrNextData& (0+255),b
 33679  00D6B2  0E06               	movlw	6
 33680  00D6B4  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 33681                           
 33682                           ; BSR set to: 1
 33683                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33684  00D6B6  0E00               	movlw	0
 33685  00D6B8  010D               	movlb	13	; () banked
 33686  00D6BA  6F88               	movwf	136,b	;volatile
 33687  00D6BC  0E02               	movlw	2
 33688  00D6BE  6F89               	movwf	137,b	;volatile
 33689  00D6C0  0E00               	movlw	0
 33690  00D6C2  6F8A               	movwf	138,b	;volatile
 33691  00D6C4  0E00               	movlw	0
 33692  00D6C6  6F8B               	movwf	139,b	;volatile
 33693  00D6C8                     l708:
 33694                           
 33695                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33696  00D6C8  010D               	movlb	13	; () banked
 33697  00D6CA  5188               	movf	136,w,b	;volatile
 33698  00D6CC  1189               	iorwf	137,w,b	;volatile
 33699  00D6CE  118A               	iorwf	138,w,b	;volatile
 33700  00D6D0  118B               	iorwf	139,w,b	;volatile
 33701  00D6D2  B4D8               	btfsc	status,2,c
 33702  00D6D4  D01F               	goto	l709
 33703                           
 33704                           ; BSR set to: 13
 33705                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 33706  00D6D6  0101               	movlb	1	; () banked
 33707  00D6D8  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33708  00D6DA  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33709  00D6DC  B4D8               	btfsc	status,2,c
 33710  00D6DE  D006               	goto	l710
 33711                           
 33712                           ; BSR set to: 1
 33713  00D6E0  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33714  00D6E4  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33715  00D6E8  BEDF               	btfsc	indf2,7,c
 33716  00D6EA  D0F2               	goto	l703
 33717  00D6EC                     l710:
 33718                           
 33719                           ; BSR set to: 1
 33720                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 33721                           
 33722                           ; BSR set to: 1
 33723  00D6EC  0E00               	movlw	0
 33724  00D6EE  0100               	movlb	0	; () banked
 33725  00D6F0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33726  00D6F2  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33727  00D6F6  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33728  00D6FA  0E40               	movlw	64
 33729  00D6FC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33730  00D6FE  0E02               	movlw	2
 33731  00D700  ECEA  F087         	call	_USBTransferOnePacket
 33732  00D704  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33733  00D708  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33734                           
 33735                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33736  00D70C  0E04               	movlw	4
 33737  00D70E  0101               	movlb	1	; () banked
 33738  00D710  6F60               	movwf	_MSDWriteState& (0+255),b
 33739                           
 33740                           ;usb_device_msd.c: 1260: }
 33741  00D712  D023               	goto	l711
 33742  00D714                     l709:
 33743                           
 33744                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 33745                           
 33746                           ; BSR set to: 1
 33747  00D714  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33748  00D718  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33749  00D71C  EE22  F098         	lfsr	2,_LUN+15
 33750  00D720  D801               	call	u11348
 33751  00D722  D00A               	goto	u11349
 33752  00D724                     u11348:
 33753  00D724  0005               	push	
 33754  00D726  6EFA               	movwf	pclath,c
 33755  00D728  50DE               	movf	postinc2,w,c
 33756  00D72A  6EFD               	movwf	tosl,c
 33757  00D72C  50DE               	movf	postinc2,w,c
 33758  00D72E  6EFE               	movwf	tosh,c
 33759  00D730  50DE               	movf	postinc2,w,c
 33760  00D732  6EFF               	movwf	tosu,c
 33761  00D734  50FA               	movf	pclath,w,c
 33762  00D736  0012               	return		;indir
 33763  00D738                     u11349:
 33764  00D738  0900               	iorlw	0
 33765  00D73A  B4D8               	btfsc	status,2,c
 33766  00D73C  D00C               	goto	l712
 33767                           
 33768                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33769  00D73E  0E01               	movlw	1
 33770  00D740  010D               	movlb	13	; () banked
 33771  00D742  6F8C               	movwf	140,b	;volatile
 33772                           
 33773                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33774  00D744  0101               	movlb	1	; () banked
 33775  00D746  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33776  00D748  0BF0               	andlw	-16
 33777  00D74A  0902               	iorlw	2
 33778  00D74C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33779                           
 33780                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33781  00D74E  0E27               	movlw	39
 33782  00D750  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33783                           
 33784                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33785  00D752  0E00               	movlw	0
 33786  00D754  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33787  00D756                     l712:
 33788                           
 33789                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33790  00D756  0E02               	movlw	2
 33791  00D758  D0A6               	goto	L94
 33792  00D75A                     l711:
 33793                           
 33794                           ; BSR set to: 1
 33795                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33796                           
 33797                           ; BSR set to: 1
 33798                           
 33799                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 33800                           
 33801                           ; BSR set to: 1
 33802  00D75A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33803  00D75C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33804  00D75E  B4D8               	btfsc	status,2,c
 33805  00D760  D006               	goto	l714
 33806                           
 33807                           ; BSR set to: 1
 33808  00D762  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33809  00D766  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33810  00D76A  BEDF               	btfsc	indf2,7,c
 33811  00D76C  D0B1               	goto	l703
 33812  00D76E                     l714:
 33813                           
 33814                           ; BSR set to: 1
 33815                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 33816                           
 33817                           ; BSR set to: 1
 33818  00D76E  EE20 F001          	lfsr	2,1
 33819  00D772  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33820  00D774  26D9               	addwf	fsr2l,f,c
 33821  00D776  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33822  00D778  22DA               	addwfc	fsr2h,f,c
 33823  00D77A  50DF               	movf	indf2,w,c
 33824  00D77C  0100               	movlb	0	; () banked
 33825  00D77E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33826  00D780  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33827  00D784  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33828  00D786  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33829  00D788  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33830  00D78A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33831  00D78C  0102               	movlb	2	; () banked
 33832  00D78E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33833  00D790  0100               	movlb	0	; () banked
 33834  00D792  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33835  00D794  0102               	movlb	2	; () banked
 33836  00D796  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33837  00D798  0100               	movlb	0	; () banked
 33838  00D79A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33839  00D79C  0102               	movlb	2	; () banked
 33840  00D79E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33841  00D7A0  0100               	movlb	0	; () banked
 33842  00D7A2  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33843  00D7A4  0102               	movlb	2	; () banked
 33844  00D7A6  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33845                           
 33846                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33847  00D7A8  0101               	movlb	1	; () banked
 33848  00D7AA  EE20 F001          	lfsr	2,1
 33849  00D7AE  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33850  00D7B0  26D9               	addwf	fsr2l,f,c
 33851  00D7B2  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33852  00D7B4  22DA               	addwfc	fsr2h,f,c
 33853  00D7B6  50DF               	movf	indf2,w,c
 33854  00D7B8  0100               	movlb	0	; () banked
 33855  00D7BA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33856  00D7BC  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33857  00D7C0  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33858  00D7C2  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33859  00D7C4  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33860  00D7C6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33861  00D7C8  010D               	movlb	13	; () banked
 33862  00D7CA  5F88               	subwf	136,f,b	;volatile
 33863  00D7CC  0100               	movlb	0	; () banked
 33864  00D7CE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33865  00D7D0  010D               	movlb	13	; () banked
 33866  00D7D2  5B89               	subwfb	137,f,b	;volatile
 33867  00D7D4  0100               	movlb	0	; () banked
 33868  00D7D6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33869  00D7D8  010D               	movlb	13	; () banked
 33870  00D7DA  5B8A               	subwfb	138,f,b	;volatile
 33871  00D7DC  0100               	movlb	0	; () banked
 33872  00D7DE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33873  00D7E0  010D               	movlb	13	; () banked
 33874  00D7E2  5B8B               	subwfb	139,f,b	;volatile
 33875                           
 33876                           ; BSR set to: 13
 33877                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33878  00D7E4  0E40               	movlw	64
 33879  00D7E6  0101               	movlb	1	; () banked
 33880  00D7E8  274D               	addwf	_ptrNextData& (0+255),f,b
 33881  00D7EA  0E00               	movlw	0
 33882  00D7EC  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33883                           
 33884                           ; BSR set to: 1
 33885                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33886  00D7EE  0E03               	movlw	3
 33887  00D7F0  D05B               	goto	L50
 33888  00D7F2                     
 33889                           ; BSR set to: 1
 33890                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33891                           
 33892                           ; BSR set to: 1
 33893  00D7F2  010D               	movlb	13	; () banked
 33894  00D7F4  518C               	movf	140,w,b	;volatile
 33895  00D7F6  A4D8               	btfss	status,2,c
 33896  00D7F8  D040               	goto	l719
 33897                           
 33898                           ; BSR set to: 13
 33899                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33900  00D7FA  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33901  00D7FE  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33902  00D802  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33903  00D806  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33904  00D80A  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33905  00D80E  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33906  00D812  0E00               	movlw	0
 33907  00D814  0100               	movlb	0	; () banked
 33908  00D816  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33909  00D818  0E06               	movlw	6
 33910  00D81A  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33911  00D81C  0101               	movlb	1	; () banked
 33912  00D81E  512B               	movf	_LBA& (0+255),w,b
 33913  00D820  112C               	iorwf	(_LBA+1)& (0+255),w,b
 33914  00D822  112D               	iorwf	(_LBA+2)& (0+255),w,b
 33915  00D824  112E               	iorwf	(_LBA+3)& (0+255),w,b
 33916  00D826  A4D8               	btfss	status,2,c
 33917  00D828  D002               	goto	u11390
 33918  00D82A  0E01               	movlw	1
 33919  00D82C  D001               	goto	u11400
 33920  00D82E                     u11390:
 33921  00D82E  0E00               	movlw	0
 33922  00D830                     u11400:
 33923  00D830  0100               	movlb	0	; () banked
 33924  00D832  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33925  00D834  EE22  F09B         	lfsr	2,_LUN+18
 33926  00D838  D801               	call	u11418
 33927  00D83A  D00A               	goto	u11419
 33928  00D83C                     u11418:
 33929  00D83C  0005               	push	
 33930  00D83E  6EFA               	movwf	pclath,c
 33931  00D840  50DE               	movf	postinc2,w,c
 33932  00D842  6EFD               	movwf	tosl,c
 33933  00D844  50DE               	movf	postinc2,w,c
 33934  00D846  6EFE               	movwf	tosh,c
 33935  00D848  50DE               	movf	postinc2,w,c
 33936  00D84A  6EFF               	movwf	tosu,c
 33937  00D84C  50FA               	movf	pclath,w,c
 33938  00D84E  0012               	return		;indir
 33939  00D850                     u11419:
 33940  00D850  06E8               	decf	wreg,f,c
 33941  00D852  B4D8               	btfsc	status,2,c
 33942  00D854  D012               	goto	l719
 33943                           
 33944                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 33945  00D856  0E64               	movlw	100
 33946  00D858  0101               	movlb	1	; () banked
 33947  00D85A  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 33948  00D85C  D002               	goto	l718
 33949                           
 33950                           ; BSR set to: 1
 33951                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33952  00D85E  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 33953                           
 33954                           ;usb_device_msd.c: 1314: break;
 33955  00D860  D037               	goto	l703
 33956  00D862                     l718:
 33957                           
 33958                           ; BSR set to: 1
 33959                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 33960                           
 33961                           ; BSR set to: 1
 33962  00D862  0E01               	movlw	1
 33963  00D864  010D               	movlb	13	; () banked
 33964  00D866  6F8C               	movwf	140,b	;volatile
 33965                           
 33966                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33967  00D868  0101               	movlb	1	; () banked
 33968  00D86A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33969  00D86C  0BF0               	andlw	-16
 33970  00D86E  0903               	iorlw	3
 33971  00D870  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33972                           
 33973                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33974  00D872  0E00               	movlw	0
 33975  00D874  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33976                           
 33977                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33978  00D876  0E00               	movlw	0
 33979  00D878  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33980  00D87A                     l719:
 33981                           
 33982                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 33983                           
 33984                           ; BSR set to: 1
 33985                           
 33986                           ; BSR set to: 1
 33987                           
 33988                           ; BSR set to: 1
 33989  00D87A  0E01               	movlw	1
 33990  00D87C  0101               	movlb	1	; () banked
 33991  00D87E  272B               	addwf	_LBA& (0+255),f,b
 33992  00D880  0E00               	movlw	0
 33993  00D882  232C               	addwfc	(_LBA+1)& (0+255),f,b
 33994  00D884  232D               	addwfc	(_LBA+2)& (0+255),f,b
 33995  00D886  232E               	addwfc	(_LBA+3)& (0+255),f,b
 33996                           
 33997                           ; BSR set to: 1
 33998                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33999  00D888  0745               	decf	_TransferLength& (0+255),f,b
 34000  00D88A  A0D8               	btfss	status,0,c
 34001  00D88C  0746               	decf	(_TransferLength+1)& (0+255),f,b
 34002                           
 34003                           ; BSR set to: 1
 34004                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 34005  00D88E  0E01               	movlw	1
 34006  00D890  D00B               	goto	L50
 34007  00D892                     
 34008                           ; BSR set to: 1
 34009                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 34010                           
 34011                           ; BSR set to: 1
 34012  00D892  0E02               	movlw	2
 34013  00D894  010D               	movlb	13	; () banked
 34014  00D896  6F8C               	movwf	140,b	;volatile
 34015                           
 34016                           ; BSR set to: 13
 34017                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 34018  00D898  0E00               	movlw	0
 34019  00D89A  0100               	movlb	0	; () banked
 34020  00D89C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34021  00D89E  0E02               	movlw	2
 34022  00D8A0  EC65  F087         	call	_USBStallEndpoint
 34023                           
 34024                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 34025  00D8A4  0E00               	movlw	0
 34026  00D8A6                     L94:
 34027  00D8A6  0101               	movlb	1	; () banked
 34028  00D8A8                     L50:
 34029  00D8A8  6F60               	movwf	_MSDWriteState& (0+255),b
 34030                           
 34031                           ; BSR set to: 1
 34032                           ;usb_device_msd.c: 1345: }
 34033                           
 34034                           ;usb_device_msd.c: 1344: break;
 34035  00D8AA  D012               	goto	l703
 34036  00D8AC                     l700:
 34037                           
 34038                           ; BSR set to: 1
 34039  00D8AC  0101               	movlb	1	; () banked
 34040  00D8AE  5160               	movf	_MSDWriteState& (0+255),w,b
 34041                           
 34042                           ; Switch size 1, requested type "space"
 34043                           ; Number of cases is 5, Range of values is 0 to 4
 34044                           ; switch strategies available:
 34045                           ; Name         Instructions Cycles
 34046                           ; simple_byte           16     9 (average)
 34047                           ;	Chosen strategy is simple_byte
 34048  00D8B0  0A00               	xorlw	0	; case 0
 34049  00D8B2  B4D8               	btfsc	status,2,c
 34050  00D8B4  D69B               	goto	l701
 34051  00D8B6  0A01               	xorlw	1	; case 1
 34052  00D8B8  B4D8               	btfsc	status,2,c
 34053  00D8BA  D6F1               	goto	l706
 34054  00D8BC  0A03               	xorlw	3	; case 2
 34055  00D8BE  B4D8               	btfsc	status,2,c
 34056  00D8C0  D798               	goto	l715
 34057  00D8C2  0A01               	xorlw	1	; case 3
 34058  00D8C4  B4D8               	btfsc	status,2,c
 34059  00D8C6  D700               	goto	l708
 34060  00D8C8  0A07               	xorlw	7	; case 4
 34061  00D8CA  B4D8               	btfsc	status,2,c
 34062  00D8CC  D746               	goto	l711
 34063  00D8CE  D7E1               	goto	l720
 34064  00D8D0                     l703:
 34065                           
 34066                           ;usb_device_msd.c: 1347: return MSDWriteState;
 34067                           
 34068                           ; BSR set to: 1
 34069  00D8D0  0101               	movlb	1	; () banked
 34070  00D8D2  5160               	movf	_MSDWriteState& (0+255),w,b
 34071  00D8D4  0012               	return	
 34072  00D8D6                     __end_of_MSDWriteHandler:
 34073                           	opt stack 0
 34074                           tosu	equ	0xFFF
 34075                           tosh	equ	0xFFE
 34076                           tosl	equ	0xFFD
 34077                           pclath	equ	0xFFA
 34078                           tblptru	equ	0xFF8
 34079                           tblptrh	equ	0xFF7
 34080                           tblptrl	equ	0xFF6
 34081                           tablat	equ	0xFF5
 34082                           prodh	equ	0xFF4
 34083                           prodl	equ	0xFF3
 34084                           intcon	equ	0xFF2
 34085                           postinc0	equ	0xFEE
 34086                           wreg	equ	0xFE8
 34087                           indf1	equ	0xFE7
 34088                           postinc1	equ	0xFE6
 34089                           postdec1	equ	0xFE5
 34090                           plusw1	equ	0xFE3
 34091                           fsr1h	equ	0xFE2
 34092                           fsr1l	equ	0xFE1
 34093                           indf2	equ	0xFDF
 34094                           postinc2	equ	0xFDE
 34095                           postdec2	equ	0xFDD
 34096                           plusw2	equ	0xFDB
 34097                           fsr2h	equ	0xFDA
 34098                           fsr2l	equ	0xFD9
 34099                           status	equ	0xFD8
 34100                           
 34101 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 34102 ;; Defined at:
 34103 ;;		line 34 in file "external_flash.c"
 34104 ;; Parameters:    Size  Location     Type
 34105 ;;  config          2    0[BANK0 ] PTR void 
 34106 ;;		 -> NULL(0), 
 34107 ;; Auto vars:     Size  Location     Type
 34108 ;;		None
 34109 ;; Return value:  Size  Location     Type
 34110 ;;                  1    wreg      unsigned char 
 34111 ;; Registers used:
 34112 ;;		wreg
 34113 ;; Tracked objects:
 34114 ;;		On entry : 0/0
 34115 ;;		On exit  : 0/0
 34116 ;;		Unchanged: 0/0
 34117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34122 ;;Total ram usage:        2 bytes
 34123 ;; Hardware stack levels used:    1
 34124 ;; Hardware stack levels required when called:   10
 34125 ;; This function calls:
 34126 ;;		Nothing
 34127 ;; This function is called by:
 34128 ;;		_MSDWriteHandler
 34129 ;;		_MSDProcessCommandMediaPresent
 34130 ;; This function uses a non-reentrant model
 34131 ;;
 34132                           
 34133                           	psect	text132
 34134  01597C                     __ptext132:
 34135                           	opt stack 0
 34136  01597C                     _ExternalFlash_WriteProtectStateGet:
 34137                           	opt stack 15
 34138                           
 34139                           ;external_flash.c: 37: return 0;
 34140                           
 34141                           ; BSR set to: 1
 34142                           ;incstack = 0
 34143  01597C  0E00               	movlw	0
 34144  01597E  0012               	return	
 34145  015980                     __end_of_ExternalFlash_WriteProtectStateGet:
 34146                           	opt stack 0
 34147                           tosu	equ	0xFFF
 34148                           tosh	equ	0xFFE
 34149                           tosl	equ	0xFFD
 34150                           pclath	equ	0xFFA
 34151                           tblptru	equ	0xFF8
 34152                           tblptrh	equ	0xFF7
 34153                           tblptrl	equ	0xFF6
 34154                           tablat	equ	0xFF5
 34155                           prodh	equ	0xFF4
 34156                           prodl	equ	0xFF3
 34157                           intcon	equ	0xFF2
 34158                           postinc0	equ	0xFEE
 34159                           wreg	equ	0xFE8
 34160                           indf1	equ	0xFE7
 34161                           postinc1	equ	0xFE6
 34162                           postdec1	equ	0xFE5
 34163                           plusw1	equ	0xFE3
 34164                           fsr1h	equ	0xFE2
 34165                           fsr1l	equ	0xFE1
 34166                           indf2	equ	0xFDF
 34167                           postinc2	equ	0xFDE
 34168                           postdec2	equ	0xFDD
 34169                           plusw2	equ	0xFDB
 34170                           fsr2h	equ	0xFDA
 34171                           fsr2l	equ	0xFD9
 34172                           status	equ	0xFD8
 34173                           
 34174 ;; *************** function _ExternalFlash_SectorWrite *****************
 34175 ;; Defined at:
 34176 ;;		line 56 in file "external_flash.c"
 34177 ;; Parameters:    Size  Location     Type
 34178 ;;  config          2   36[BANK0 ] PTR void 
 34179 ;;		 -> NULL(0), 
 34180 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 34181 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 34182 ;;		 -> msd_buffer(512), 
 34183 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 34184 ;; Auto vars:     Size  Location     Type
 34185 ;;  page            2   45[BANK0 ] unsigned int 
 34186 ;; Return value:  Size  Location     Type
 34187 ;;                  1    wreg      unsigned char 
 34188 ;; Registers used:
 34189 ;;		wreg, status,2, status,0, cstack
 34190 ;; Tracked objects:
 34191 ;;		On entry : 0/0
 34192 ;;		On exit  : 0/0
 34193 ;;		Unchanged: 0/0
 34194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34195 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34196 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34198 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34199 ;;Total ram usage:       11 bytes
 34200 ;; Hardware stack levels used:    1
 34201 ;; Hardware stack levels required when called:   15
 34202 ;; This function calls:
 34203 ;;		_flash_sector_write
 34204 ;; This function is called by:
 34205 ;;		_MSDWriteHandler
 34206 ;; This function uses a non-reentrant model
 34207 ;;
 34208                           
 34209                           	psect	text133
 34210  015246                     __ptext133:
 34211                           	opt stack 0
 34212  015246                     _ExternalFlash_SectorWrite:
 34213                           	opt stack 10
 34214                           
 34215                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 34216                           
 34217                           ;incstack = 0
 34218  015246  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 34219  01524A  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 34220                           
 34221                           ;external_flash.c: 61: if(sector_addr >= 8192)
 34222  01524E  0100               	movlb	0	; () banked
 34223  015250  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 34224  015252  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 34225  015254  E104               	bnz	u10950
 34226  015256  0E20               	movlw	32
 34227  015258  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 34228  01525A  A0D8               	btfss	status,0,c
 34229  01525C  D002               	goto	l1681
 34230  01525E                     u10950:
 34231                           
 34232                           ; BSR set to: 0
 34233                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 34234  01525E  0E00               	movlw	0
 34235                           
 34236                           ; BSR set to: 0
 34237  015260  0012               	return	
 34238  015262                     l1681:
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 34242                           
 34243                           ; BSR set to: 0
 34244  015262  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 34245  015266  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 34246  01526A  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 34247  01526E  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 34248  015272  EC22  F0A6         	call	_flash_sector_write	;wreg free
 34249                           
 34250                           ;external_flash.c: 69: return 1;
 34251  015276  0E01               	movlw	1
 34252  015278  0012               	return	
 34253  01527A                     __end_of_ExternalFlash_SectorWrite:
 34254                           	opt stack 0
 34255                           tosu	equ	0xFFF
 34256                           tosh	equ	0xFFE
 34257                           tosl	equ	0xFFD
 34258                           pclath	equ	0xFFA
 34259                           tblptru	equ	0xFF8
 34260                           tblptrh	equ	0xFF7
 34261                           tblptrl	equ	0xFF6
 34262                           tablat	equ	0xFF5
 34263                           prodh	equ	0xFF4
 34264                           prodl	equ	0xFF3
 34265                           intcon	equ	0xFF2
 34266                           postinc0	equ	0xFEE
 34267                           wreg	equ	0xFE8
 34268                           indf1	equ	0xFE7
 34269                           postinc1	equ	0xFE6
 34270                           postdec1	equ	0xFE5
 34271                           plusw1	equ	0xFE3
 34272                           fsr1h	equ	0xFE2
 34273                           fsr1l	equ	0xFE1
 34274                           indf2	equ	0xFDF
 34275                           postinc2	equ	0xFDE
 34276                           postdec2	equ	0xFDD
 34277                           plusw2	equ	0xFDB
 34278                           fsr2h	equ	0xFDA
 34279                           fsr2l	equ	0xFD9
 34280                           status	equ	0xFD8
 34281                           
 34282 ;; *************** function _flash_sector_write *****************
 34283 ;; Defined at:
 34284 ;;		line 434 in file "flash.c"
 34285 ;; Parameters:    Size  Location     Type
 34286 ;;  page            2   31[BANK0 ] unsigned int 
 34287 ;;  data            2   33[BANK0 ] PTR unsigned char 
 34288 ;;		 -> buffer(512), msd_buffer(512), 
 34289 ;; Auto vars:     Size  Location     Type
 34290 ;;  match           1   35[BANK0 ] enum E7004
 34291 ;; Return value:  Size  Location     Type
 34292 ;;                  1    wreg      void 
 34293 ;; Registers used:
 34294 ;;		wreg, status,2, status,0, cstack
 34295 ;; Tracked objects:
 34296 ;;		On entry : 0/0
 34297 ;;		On exit  : 0/0
 34298 ;;		Unchanged: 0/0
 34299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34303 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34304 ;;Total ram usage:        5 bytes
 34305 ;; Hardware stack levels used:    1
 34306 ;; Hardware stack levels required when called:   14
 34307 ;; This function calls:
 34308 ;;		__flash_compare_page_to_buffer
 34309 ;;		__flash_write_page_from_buffer
 34310 ;;		__flash_write_to_buffer
 34311 ;; This function is called by:
 34312 ;;		_ExternalFlash_SectorWrite
 34313 ;;		__make_cluster_chain
 34314 ;;		_fat_format
 34315 ;; This function uses a non-reentrant model
 34316 ;;
 34317                           
 34318                           	psect	text134
 34319  014C44                     __ptext134:
 34320                           	opt stack 0
 34321  014C44                     _flash_sector_write:
 34322                           	opt stack 13
 34323                           
 34324                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 34325                           
 34326                           ;incstack = 0
 34327  014C44  0E00               	movlw	0
 34328  014C46  0100               	movlb	0	; () banked
 34329  014C48  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 34330  014C4A  0E00               	movlw	0
 34331  014C4C  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 34332  014C4E  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 34333  014C52  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 34334  014C56  0E02               	movlw	2
 34335  014C58  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 34336  014C5A  0E00               	movlw	0
 34337  014C5C  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 34338  014C5E  0E00               	movlw	0
 34339  014C60  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 34340  014C62  EC81  F0A5         	call	__flash_write_to_buffer	;wreg free
 34341                           
 34342                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 34343  014C66  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 34344  014C6A  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 34345  014C6E  0E00               	movlw	0
 34346  014C70  0100               	movlb	0	; () banked
 34347  014C72  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 34348  014C74  ECD2  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 34349  014C78  0100               	movlb	0	; () banked
 34350  014C7A  6F83               	movwf	flash_sector_write@match& (0+255),b
 34351                           
 34352                           ; BSR set to: 0
 34353                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 34354  014C7C  0583               	decf	flash_sector_write@match& (0+255),w,b
 34355  014C7E  A4D8               	btfss	status,2,c
 34356  014C80  0012               	return	
 34357                           
 34358                           ; BSR set to: 0
 34359                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 34360  014C82  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 34361  014C86  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 34362  014C8A  0E00               	movlw	0
 34363  014C8C  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 34364  014C8E  EC21  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 34365  014C92  0012               	return	
 34366  014C94                     __end_of_flash_sector_write:
 34367                           	opt stack 0
 34368                           tosu	equ	0xFFF
 34369                           tosh	equ	0xFFE
 34370                           tosl	equ	0xFFD
 34371                           pclath	equ	0xFFA
 34372                           tblptru	equ	0xFF8
 34373                           tblptrh	equ	0xFF7
 34374                           tblptrl	equ	0xFF6
 34375                           tablat	equ	0xFF5
 34376                           prodh	equ	0xFF4
 34377                           prodl	equ	0xFF3
 34378                           intcon	equ	0xFF2
 34379                           postinc0	equ	0xFEE
 34380                           wreg	equ	0xFE8
 34381                           indf1	equ	0xFE7
 34382                           postinc1	equ	0xFE6
 34383                           postdec1	equ	0xFE5
 34384                           plusw1	equ	0xFE3
 34385                           fsr1h	equ	0xFE2
 34386                           fsr1l	equ	0xFE1
 34387                           indf2	equ	0xFDF
 34388                           postinc2	equ	0xFDE
 34389                           postdec2	equ	0xFDD
 34390                           plusw2	equ	0xFDB
 34391                           fsr2h	equ	0xFDA
 34392                           fsr2l	equ	0xFD9
 34393                           status	equ	0xFD8
 34394                           
 34395 ;; *************** function __flash_write_to_buffer *****************
 34396 ;; Defined at:
 34397 ;;		line 236 in file "flash.c"
 34398 ;; Parameters:    Size  Location     Type
 34399 ;;  start           2   19[BANK0 ] unsigned int 
 34400 ;;  data            2   21[BANK0 ] PTR unsigned char 
 34401 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34402 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34403 ;;  data_length     2   23[BANK0 ] unsigned int 
 34404 ;;  buffer          1   25[BANK0 ] enum E7000
 34405 ;; Auto vars:     Size  Location     Type
 34406 ;;  command         4   26[BANK0 ] unsigned char [4]
 34407 ;; Return value:  Size  Location     Type
 34408 ;;                  1    wreg      void 
 34409 ;; Registers used:
 34410 ;;		wreg, status,2, status,0, cstack
 34411 ;; Tracked objects:
 34412 ;;		On entry : 0/0
 34413 ;;		On exit  : 0/0
 34414 ;;		Unchanged: 0/0
 34415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34416 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34417 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34419 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34420 ;;Total ram usage:       11 bytes
 34421 ;; Hardware stack levels used:    1
 34422 ;; Hardware stack levels required when called:   13
 34423 ;; This function calls:
 34424 ;;		__flash_is_busy
 34425 ;;		_spi_tx_tx
 34426 ;; This function is called by:
 34427 ;;		_flash_sector_write
 34428 ;;		_flash_partial_write
 34429 ;;		_flash_write_to_buffer
 34430 ;; This function uses a non-reentrant model
 34431 ;;
 34432                           
 34433                           	psect	text135
 34434  014B02                     __ptext135:
 34435                           	opt stack 0
 34436  014B02                     __flash_write_to_buffer:
 34437                           	opt stack 13
 34438                           
 34439                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 34440                           
 34441                           ;incstack = 0
 34442  014B02  EC62  F0AB         	call	__flash_is_busy	;wreg free
 34443  014B06  0900               	iorlw	0
 34444  014B08  A4D8               	btfss	status,2,c
 34445  014B0A  D7FB               	goto	__flash_write_to_buffer
 34446                           
 34447                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 34448  014B0C  0100               	movlb	0	; () banked
 34449  014B0E  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34450  014B10  A4D8               	btfss	status,2,c
 34451  014B12  D002               	goto	l1567
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;flash.c: 245: command[0] = 0x84;
 34455  014B14  0E84               	movlw	132
 34456  014B16  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34457  014B18                     l1567:
 34458                           
 34459                           ; BSR set to: 0
 34460                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 34461                           
 34462                           ; BSR set to: 0
 34463  014B18  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34464  014B1A  A4D8               	btfss	status,2,c
 34465  014B1C  D002               	goto	l1568
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;flash.c: 247: command[0] = 0x87;
 34469  014B1E  0E87               	movlw	135
 34470  014B20  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34471  014B22                     l1568:
 34472                           
 34473                           ; BSR set to: 0
 34474                           ;flash.c: 249: command[1] = 0x00;
 34475  014B22  0E00               	movlw	0
 34476  014B24  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34477                           
 34478                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34479  014B26  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34480  014B28  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34481                           
 34482                           ; BSR set to: 0
 34483                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 34484  014B2A  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34485                           
 34486                           ; BSR set to: 0
 34487                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 34488  014B2E  0E7A               	movlw	low __flash_write_to_buffer@command
 34489  014B30  6F60               	movwf	spi_tx_tx@command& (0+255),b
 34490  014B32  0E00               	movlw	high __flash_write_to_buffer@command
 34491  014B34  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 34492  014B36  0E00               	movlw	0
 34493  014B38  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 34494  014B3A  0E04               	movlw	4
 34495  014B3C  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 34496  014B3E  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 34497  014B42  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 34498  014B46  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 34499  014B4A  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 34500  014B4E  ECBC  F09B         	call	_spi_tx_tx	;wreg free
 34501  014B52  0012               	return		;funcret
 34502  014B54                     __end_of__flash_write_to_buffer:
 34503                           	opt stack 0
 34504                           tosu	equ	0xFFF
 34505                           tosh	equ	0xFFE
 34506                           tosl	equ	0xFFD
 34507                           pclath	equ	0xFFA
 34508                           tblptru	equ	0xFF8
 34509                           tblptrh	equ	0xFF7
 34510                           tblptrl	equ	0xFF6
 34511                           tablat	equ	0xFF5
 34512                           prodh	equ	0xFF4
 34513                           prodl	equ	0xFF3
 34514                           intcon	equ	0xFF2
 34515                           postinc0	equ	0xFEE
 34516                           wreg	equ	0xFE8
 34517                           indf1	equ	0xFE7
 34518                           postinc1	equ	0xFE6
 34519                           postdec1	equ	0xFE5
 34520                           plusw1	equ	0xFE3
 34521                           fsr1h	equ	0xFE2
 34522                           fsr1l	equ	0xFE1
 34523                           indf2	equ	0xFDF
 34524                           postinc2	equ	0xFDE
 34525                           postdec2	equ	0xFDD
 34526                           plusw2	equ	0xFDB
 34527                           fsr2h	equ	0xFDA
 34528                           fsr2l	equ	0xFD9
 34529                           status	equ	0xFD8
 34530                           
 34531 ;; *************** function _spi_tx_tx *****************
 34532 ;; Defined at:
 34533 ;;		line 146 in file "spi.c"
 34534 ;; Parameters:    Size  Location     Type
 34535 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34536 ;;		 -> _flash_write_to_buffer@command(4), 
 34537 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34538 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34539 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34540 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34541 ;;  data_length     2    6[BANK0 ] unsigned int 
 34542 ;; Auto vars:     Size  Location     Type
 34543 ;;		None
 34544 ;; Return value:  Size  Location     Type
 34545 ;;                  1    wreg      void 
 34546 ;; Registers used:
 34547 ;;		wreg, status,2, status,0
 34548 ;; Tracked objects:
 34549 ;;		On entry : 0/0
 34550 ;;		On exit  : 0/0
 34551 ;;		Unchanged: 0/0
 34552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34553 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34555 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34556 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34557 ;;Total ram usage:       12 bytes
 34558 ;; Hardware stack levels used:    1
 34559 ;; Hardware stack levels required when called:   10
 34560 ;; This function calls:
 34561 ;;		Nothing
 34562 ;; This function is called by:
 34563 ;;		__flash_write_to_buffer
 34564 ;; This function uses a non-reentrant model
 34565 ;;
 34566                           
 34567                           	psect	text136
 34568  013778                     __ptext136:
 34569                           	opt stack 0
 34570  013778                     _spi_tx_tx:
 34571                           	opt stack 15
 34572                           
 34573                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 34574                           
 34575                           ;incstack = 0
 34576  013778  9E88               	bcf	3976,7,c	;volatile
 34577                           
 34578                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 34579  01377A  9C88               	bcf	3976,6,c	;volatile
 34580                           
 34581                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 34582  01377C  8A88               	bsf	3976,5,c	;volatile
 34583                           
 34584                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 34585  01377E  9888               	bcf	3976,4,c	;volatile
 34586                           
 34587                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 34588  013780  9688               	bcf	3976,3,c	;volatile
 34589                           
 34590                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 34591  013782  8488               	bsf	3976,2,c	;volatile
 34592                           
 34593                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 34594  013784  9288               	bcf	3976,1,c	;volatile
 34595                           
 34596                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 34597  013786  9886               	bcf	3974,4,c	;volatile
 34598  013788  9A86               	bcf	3974,5,c	;volatile
 34599  01378A  9C86               	bcf	3974,6,c	;volatile
 34600  01378C  9E86               	bcf	3974,7,c	;volatile
 34601                           
 34602                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 34603  01378E  9086               	bcf	3974,0,c	;volatile
 34604  013790  9286               	bcf	3974,1,c	;volatile
 34605  013792  9486               	bcf	3974,2,c	;volatile
 34606  013794  9686               	bcf	3974,3,c	;volatile
 34607                           
 34608                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34609  013796  0100               	movlb	0	; () banked
 34610  013798  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 34611  01379A  6E6A               	movwf	3946,c	;volatile
 34612                           
 34613                           ; BSR set to: 0
 34614                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34615  01379C  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 34616                           
 34617                           ; BSR set to: 0
 34618                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34619  0137A0  0EFF               	movlw	255
 34620  0137A2  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34621  0137A4  0EFF               	movlw	255
 34622  0137A6  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34623  0137A8  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 34624  0137AC  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 34625  0137B0  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34626  0137B2  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34627  0137B4  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34628  0137B6  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34629  0137B8  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34630  0137BC  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34631  0137BE  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34632  0137C0  6E66               	movwf	3942,c	;volatile
 34633                           
 34634                           ; BSR set to: 0
 34635                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34636  0137C2  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 34637  0137C4  6E67               	movwf	3943,c	;volatile
 34638                           
 34639                           ; BSR set to: 0
 34640                           ;spi.c: 174: LATDbits.LD7 = 0;
 34641  0137C6  9E8C               	bcf	3980,7,c	;volatile
 34642                           
 34643                           ; BSR set to: 0
 34644                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 34645  0137C8  8088               	bsf	3976,0,c	;volatile
 34646  0137CA                     
 34647                           ; BSR set to: 0
 34648  0137CA  B088               	btfsc	3976,0,c	;volatile
 34649  0137CC  D7FE               	goto	l2178
 34650                           
 34651                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34652  0137CE  0100               	movlb	0	; () banked
 34653  0137D0  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 34654  0137D2  6E6A               	movwf	3946,c	;volatile
 34655                           
 34656                           ; BSR set to: 0
 34657                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34658  0137D4  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 34659                           
 34660                           ; BSR set to: 0
 34661                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34662  0137D8  0EFF               	movlw	255
 34663  0137DA  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34664  0137DC  0EFF               	movlw	255
 34665  0137DE  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34666  0137E0  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 34667  0137E4  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 34668  0137E8  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34669  0137EA  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34670  0137EC  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34671  0137EE  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34672  0137F0  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34673  0137F4  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34674  0137F6  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34675  0137F8  6E66               	movwf	3942,c	;volatile
 34676                           
 34677                           ; BSR set to: 0
 34678                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34679  0137FA  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 34680  0137FC  6E67               	movwf	3943,c	;volatile
 34681                           
 34682                           ; BSR set to: 0
 34683                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 34684  0137FE  8088               	bsf	3976,0,c	;volatile
 34685  013800                     
 34686                           ; BSR set to: 0
 34687  013800  B088               	btfsc	3976,0,c	;volatile
 34688  013802  D7FE               	goto	l2181
 34689                           
 34690                           ;spi.c: 193: LATDbits.LD7 = 1;
 34691  013804  8E8C               	bsf	3980,7,c	;volatile
 34692  013806  0012               	return		;funcret
 34693  013808                     __end_of_spi_tx_tx:
 34694                           	opt stack 0
 34695                           tosu	equ	0xFFF
 34696                           tosh	equ	0xFFE
 34697                           tosl	equ	0xFFD
 34698                           pclath	equ	0xFFA
 34699                           tblptru	equ	0xFF8
 34700                           tblptrh	equ	0xFF7
 34701                           tblptrl	equ	0xFF6
 34702                           tablat	equ	0xFF5
 34703                           prodh	equ	0xFF4
 34704                           prodl	equ	0xFF3
 34705                           intcon	equ	0xFF2
 34706                           postinc0	equ	0xFEE
 34707                           wreg	equ	0xFE8
 34708                           indf1	equ	0xFE7
 34709                           postinc1	equ	0xFE6
 34710                           postdec1	equ	0xFE5
 34711                           plusw1	equ	0xFE3
 34712                           fsr1h	equ	0xFE2
 34713                           fsr1l	equ	0xFE1
 34714                           indf2	equ	0xFDF
 34715                           postinc2	equ	0xFDE
 34716                           postdec2	equ	0xFDD
 34717                           plusw2	equ	0xFDB
 34718                           fsr2h	equ	0xFDA
 34719                           fsr2l	equ	0xFD9
 34720                           status	equ	0xFD8
 34721                           
 34722 ;; *************** function __flash_write_page_from_buffer *****************
 34723 ;; Defined at:
 34724 ;;		line 258 in file "flash.c"
 34725 ;; Parameters:    Size  Location     Type
 34726 ;;  page            2   19[BANK0 ] unsigned int 
 34727 ;;  buffer          1   21[BANK0 ] enum E7000
 34728 ;; Auto vars:     Size  Location     Type
 34729 ;;  command         4   25[BANK0 ] unsigned char [4]
 34730 ;; Return value:  Size  Location     Type
 34731 ;;                  1    wreg      void 
 34732 ;; Registers used:
 34733 ;;		wreg, status,2, status,0, cstack
 34734 ;; Tracked objects:
 34735 ;;		On entry : 0/0
 34736 ;;		On exit  : 0/0
 34737 ;;		Unchanged: 0/0
 34738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34739 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34740 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34741 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34742 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34743 ;;Total ram usage:       10 bytes
 34744 ;; Hardware stack levels used:    1
 34745 ;; Hardware stack levels required when called:   13
 34746 ;; This function calls:
 34747 ;;		__flash_is_busy
 34748 ;;		_spi_tx
 34749 ;; This function is called by:
 34750 ;;		_flash_sector_write
 34751 ;;		_flash_partial_write
 34752 ;;		_flash_write_page_from_buffer
 34753 ;; This function uses a non-reentrant model
 34754 ;;
 34755                           
 34756                           	psect	text137
 34757  014642                     __ptext137:
 34758                           	opt stack 0
 34759  014642                     __flash_write_page_from_buffer:
 34760                           	opt stack 13
 34761                           
 34762                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 34763                           
 34764                           ;incstack = 0
 34765  014642  EC62  F0AB         	call	__flash_is_busy	;wreg free
 34766  014646  0900               	iorlw	0
 34767  014648  A4D8               	btfss	status,2,c
 34768  01464A  D7FB               	goto	__flash_write_page_from_buffer
 34769                           
 34770                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 34771  01464C  0100               	movlb	0	; () banked
 34772  01464E  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34773  014650  A4D8               	btfss	status,2,c
 34774  014652  D002               	goto	l1575
 34775                           
 34776                           ; BSR set to: 0
 34777                           ;flash.c: 267: command[0] = 0x83;
 34778  014654  0E83               	movlw	131
 34779  014656  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34780  014658                     l1575:
 34781                           
 34782                           ; BSR set to: 0
 34783                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 34784                           
 34785                           ; BSR set to: 0
 34786  014658  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34787  01465A  A4D8               	btfss	status,2,c
 34788  01465C  D002               	goto	l1576
 34789                           
 34790                           ; BSR set to: 0
 34791                           ;flash.c: 269: command[0] = 0x86;
 34792  01465E  0E86               	movlw	134
 34793  014660  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34794  014662                     l1576:
 34795                           
 34796                           ; BSR set to: 0
 34797                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34798                           
 34799                           ; BSR set to: 0
 34800  014662  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34801  014666  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34802  01466A  0E07               	movlw	7
 34803  01466C  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34804  01466E                     u9765:
 34805  01466E  90D8               	bcf	status,0,c
 34806  014670  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34807  014672  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34808  014674  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34809  014676  D7FB               	goto	u9765
 34810  014678  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34811  01467A  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34812                           
 34813                           ; BSR set to: 0
 34814                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 34815  01467C  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34816  01467E  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34817  014680  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34818                           
 34819                           ;flash.c: 273: command[3] = 0x00;
 34820  014682  0E00               	movlw	0
 34821  014684  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34822                           
 34823                           ; BSR set to: 0
 34824                           ;flash.c: 276: spi_tx(command, 4);
 34825  014686  0E79               	movlw	low __flash_write_page_from_buffer@command
 34826  014688  6F60               	movwf	spi_tx@data& (0+255),b
 34827  01468A  0E00               	movlw	high __flash_write_page_from_buffer@command
 34828  01468C  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34829  01468E  0E00               	movlw	0
 34830  014690  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34831  014692  0E04               	movlw	4
 34832  014694  6F62               	movwf	spi_tx@length& (0+255),b
 34833  014696  EC4E  F0A3         	call	_spi_tx	;wreg free
 34834  01469A  0012               	return		;funcret
 34835  01469C                     __end_of__flash_write_page_from_buffer:
 34836                           	opt stack 0
 34837                           tosu	equ	0xFFF
 34838                           tosh	equ	0xFFE
 34839                           tosl	equ	0xFFD
 34840                           pclath	equ	0xFFA
 34841                           tblptru	equ	0xFF8
 34842                           tblptrh	equ	0xFF7
 34843                           tblptrl	equ	0xFF6
 34844                           tablat	equ	0xFF5
 34845                           prodh	equ	0xFF4
 34846                           prodl	equ	0xFF3
 34847                           intcon	equ	0xFF2
 34848                           postinc0	equ	0xFEE
 34849                           wreg	equ	0xFE8
 34850                           indf1	equ	0xFE7
 34851                           postinc1	equ	0xFE6
 34852                           postdec1	equ	0xFE5
 34853                           plusw1	equ	0xFE3
 34854                           fsr1h	equ	0xFE2
 34855                           fsr1l	equ	0xFE1
 34856                           indf2	equ	0xFDF
 34857                           postinc2	equ	0xFDE
 34858                           postdec2	equ	0xFDD
 34859                           plusw2	equ	0xFDB
 34860                           fsr2h	equ	0xFDA
 34861                           fsr2l	equ	0xFD9
 34862                           status	equ	0xFD8
 34863                           
 34864 ;; *************** function __flash_compare_page_to_buffer *****************
 34865 ;; Defined at:
 34866 ;;		line 176 in file "flash.c"
 34867 ;; Parameters:    Size  Location     Type
 34868 ;;  page            2   19[BANK0 ] unsigned int 
 34869 ;;  buffer          1   21[BANK0 ] enum E7000
 34870 ;; Auto vars:     Size  Location     Type
 34871 ;;  command         4   27[BANK0 ] unsigned char [4]
 34872 ;;  status          2   25[BANK0 ] unsigned int 
 34873 ;; Return value:  Size  Location     Type
 34874 ;;                  1    wreg      enum E7004
 34875 ;; Registers used:
 34876 ;;		wreg, status,2, status,0, cstack
 34877 ;; Tracked objects:
 34878 ;;		On entry : 0/0
 34879 ;;		On exit  : 0/0
 34880 ;;		Unchanged: 0/0
 34881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34882 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34883 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34884 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34885 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34886 ;;Total ram usage:       12 bytes
 34887 ;; Hardware stack levels used:    1
 34888 ;; Hardware stack levels required when called:   13
 34889 ;; This function calls:
 34890 ;;		__flash_get_status
 34891 ;;		__flash_is_busy
 34892 ;;		_spi_tx
 34893 ;; This function is called by:
 34894 ;;		_flash_sector_write
 34895 ;;		_flash_partial_write
 34896 ;; This function uses a non-reentrant model
 34897 ;;
 34898                           
 34899                           	psect	text138
 34900  013BA4                     __ptext138:
 34901                           	opt stack 0
 34902  013BA4                     __flash_compare_page_to_buffer:
 34903                           	opt stack 13
 34904                           
 34905                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34906                           
 34907                           ;incstack = 0
 34908  013BA4  EC62  F0AB         	call	__flash_is_busy	;wreg free
 34909  013BA8  0900               	iorlw	0
 34910  013BAA  A4D8               	btfss	status,2,c
 34911  013BAC  D7FB               	goto	__flash_compare_page_to_buffer
 34912                           
 34913                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 34914  013BAE  0100               	movlb	0	; () banked
 34915  013BB0  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34916  013BB2  A4D8               	btfss	status,2,c
 34917  013BB4  D002               	goto	l1548
 34918                           
 34919                           ; BSR set to: 0
 34920                           ;flash.c: 186: command[0] = 0x60;
 34921  013BB6  0E60               	movlw	96
 34922  013BB8  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34923  013BBA                     l1548:
 34924                           
 34925                           ; BSR set to: 0
 34926                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 34927                           
 34928                           ; BSR set to: 0
 34929  013BBA  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34930  013BBC  A4D8               	btfss	status,2,c
 34931  013BBE  D002               	goto	l1549
 34932                           
 34933                           ; BSR set to: 0
 34934                           ;flash.c: 188: command[0] = 0x60;
 34935  013BC0  0E60               	movlw	96
 34936  013BC2  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34937  013BC4                     l1549:
 34938                           
 34939                           ; BSR set to: 0
 34940                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34941                           
 34942                           ; BSR set to: 0
 34943  013BC4  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34944  013BC8  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34945  013BCC  0E07               	movlw	7
 34946  013BCE  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34947  013BD0                     u9675:
 34948  013BD0  90D8               	bcf	status,0,c
 34949  013BD2  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34950  013BD4  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34951  013BD6  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34952  013BD8  D7FB               	goto	u9675
 34953  013BDA  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34954  013BDC  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34955                           
 34956                           ; BSR set to: 0
 34957                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 34958  013BDE  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34959  013BE0  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34960  013BE2  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34961                           
 34962                           ;flash.c: 192: command[3] = 0x00;
 34963  013BE4  0E00               	movlw	0
 34964  013BE6  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34965                           
 34966                           ; BSR set to: 0
 34967                           ;flash.c: 195: spi_tx(command, 4);
 34968  013BE8  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34969  013BEA  6F60               	movwf	spi_tx@data& (0+255),b
 34970  013BEC  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34971  013BEE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34972  013BF0  0E00               	movlw	0
 34973  013BF2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34974  013BF4  0E04               	movlw	4
 34975  013BF6  6F62               	movwf	spi_tx@length& (0+255),b
 34976  013BF8  EC4E  F0A3         	call	_spi_tx	;wreg free
 34977  013BFC  EC62  F0AB         	call	__flash_is_busy	;wreg free
 34978  013C00  0900               	iorlw	0
 34979  013C02  A4D8               	btfss	status,2,c
 34980  013C04  D7FB               	goto	l1551
 34981                           
 34982                           ;flash.c: 201: status = _flash_get_status();
 34983  013C06  EC57  F0A9         	call	__flash_get_status	;wreg free
 34984  013C0A  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34985  013C0E  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34986                           
 34987                           ;flash.c: 204: if(status & 0b0000000001000000)
 34988  013C12  0100               	movlb	0	; () banked
 34989  013C14  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34990  013C16  D002               	goto	l1553
 34991                           
 34992                           ; BSR set to: 0
 34993                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 34994  013C18  0E01               	movlw	1
 34995                           
 34996                           ; BSR set to: 0
 34997                           ;flash.c: 208: }
 34998                           
 34999                           ; BSR set to: 0
 35000  013C1A  0012               	return	
 35001  013C1C                     l1553:
 35002                           
 35003                           ; BSR set to: 0
 35004                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 35005                           
 35006                           ; BSR set to: 0
 35007  013C1C  0E00               	movlw	0
 35008                           
 35009                           ; BSR set to: 0
 35010  013C1E  0012               	return	
 35011  013C20                     __end_of__flash_compare_page_to_buffer:
 35012                           	opt stack 0
 35013                           tosu	equ	0xFFF
 35014                           tosh	equ	0xFFE
 35015                           tosl	equ	0xFFD
 35016                           pclath	equ	0xFFA
 35017                           tblptru	equ	0xFF8
 35018                           tblptrh	equ	0xFF7
 35019                           tblptrl	equ	0xFF6
 35020                           tablat	equ	0xFF5
 35021                           prodh	equ	0xFF4
 35022                           prodl	equ	0xFF3
 35023                           intcon	equ	0xFF2
 35024                           postinc0	equ	0xFEE
 35025                           wreg	equ	0xFE8
 35026                           indf1	equ	0xFE7
 35027                           postinc1	equ	0xFE6
 35028                           postdec1	equ	0xFE5
 35029                           plusw1	equ	0xFE3
 35030                           fsr1h	equ	0xFE2
 35031                           fsr1l	equ	0xFE1
 35032                           indf2	equ	0xFDF
 35033                           postinc2	equ	0xFDE
 35034                           postdec2	equ	0xFDD
 35035                           plusw2	equ	0xFDB
 35036                           fsr2h	equ	0xFDA
 35037                           fsr2l	equ	0xFD9
 35038                           status	equ	0xFD8
 35039                           
 35040 ;; *************** function _MSDReadHandler *****************
 35041 ;; Defined at:
 35042 ;;		line 1038 in file "usb_device_msd.c"
 35043 ;; Parameters:    Size  Location     Type
 35044 ;;		None
 35045 ;; Auto vars:     Size  Location     Type
 35046 ;;		None
 35047 ;; Return value:  Size  Location     Type
 35048 ;;                  1    wreg      unsigned char 
 35049 ;; Registers used:
 35050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35051 ;; Tracked objects:
 35052 ;;		On entry : 0/0
 35053 ;;		On exit  : 0/0
 35054 ;;		Unchanged: 0/0
 35055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35058 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35060 ;;Total ram usage:        4 bytes
 35061 ;; Hardware stack levels used:    1
 35062 ;; Hardware stack levels required when called:   16
 35063 ;; This function calls:
 35064 ;;		_ExternalFlash_SectorRead
 35065 ;;		_MSDCheckForErrorCases
 35066 ;;		_USBStallEndpoint
 35067 ;;		_USBTransferOnePacket
 35068 ;; This function is called by:
 35069 ;;		_MSDProcessCommandMediaPresent
 35070 ;; This function uses a non-reentrant model
 35071 ;;
 35072                           
 35073                           	psect	text139
 35074  00F044                     __ptext139:
 35075                           	opt stack 0
 35076  00F044                     _MSDReadHandler:
 35077                           	opt stack 10
 35078                           
 35079                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 35080                           
 35081                           ; BSR set to: 0
 35082                           ;incstack = 0
 35083  00F044  D0DF               	goto	l681
 35084  00F046                     l682:
 35085                           
 35086                           ; BSR set to: 1
 35087                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 35088  00F046  C211  F12E         	movff	_gblCBW+17,_LBA+3
 35089                           
 35090                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 35091  00F04A  C212  F12D         	movff	_gblCBW+18,_LBA+2
 35092                           
 35093                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 35094  00F04E  C213  F12C         	movff	_gblCBW+19,_LBA+1
 35095                           
 35096                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 35097  00F052  C214  F12B         	movff	_gblCBW+20,_LBA
 35098                           
 35099                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 35100  00F056  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 35101                           
 35102                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 35103  00F05A  C217  F145         	movff	_gblCBW+23,_TransferLength
 35104                           
 35105                           ; BSR set to: 1
 35106                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35107  00F05E  5145               	movf	_TransferLength& (0+255),w,b
 35108  00F060  0100               	movlb	0	; () banked
 35109  00F062  6F95               	movwf	??_MSDReadHandler& (0+255),b
 35110  00F064  0101               	movlb	1	; () banked
 35111  00F066  5146               	movf	(_TransferLength+1)& (0+255),w,b
 35112  00F068  0100               	movlb	0	; () banked
 35113  00F06A  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 35114  00F06C  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 35115  00F06E  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 35116  00F070  0E09               	movlw	9
 35117  00F072                     u11155:
 35118  00F072  90D8               	bcf	status,0,c
 35119  00F074  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 35120  00F076  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 35121  00F078  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 35122  00F07A  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 35123  00F07C  2EE8               	decfsz	wreg,f,c
 35124  00F07E  D7F9               	goto	u11155
 35125  00F080  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 35126  00F084  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35127  00F088  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35128  00F08C  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35129  00F090  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 35130  00F094  0900               	iorlw	0
 35131  00F096  A4D8               	btfss	status,2,c
 35132  00F098  D0C7               	goto	l684
 35133                           
 35134                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 35135                           
 35136                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 35137  00F09A  0E01               	movlw	1
 35138  00F09C  0101               	movlb	1	; () banked
 35139  00F09E  6F61               	movwf	_MSDReadState& (0+255),b
 35140  00F0A0                     
 35141                           ; BSR set to: 1
 35142                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 35143                           
 35144                           ; BSR set to: 1
 35145  00F0A0  5145               	movf	_TransferLength& (0+255),w,b
 35146  00F0A2  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 35147  00F0A4  A4D8               	btfss	status,2,c
 35148  00F0A6  D002               	goto	l686
 35149                           
 35150                           ; BSR set to: 1
 35151                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 35152  00F0A8  0E00               	movlw	0
 35153  00F0AA  D04A               	goto	L51
 35154  00F0AC                     l686:
 35155                           
 35156                           ; BSR set to: 1
 35157                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 35158                           
 35159                           ; BSR set to: 1
 35160  00F0AC  0745               	decf	_TransferLength& (0+255),f,b
 35161  00F0AE  A0D8               	btfss	status,0,c
 35162  00F0B0  0746               	decf	(_TransferLength+1)& (0+255),f,b
 35163                           
 35164                           ; BSR set to: 1
 35165                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 35166  00F0B2  0E02               	movlw	2
 35167  00F0B4  6F61               	movwf	_MSDReadState& (0+255),b
 35168  00F0B6                     
 35169                           ; BSR set to: 1
 35170                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 35171                           
 35172                           ; BSR set to: 1
 35173  00F0B6  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35174  00F0B8  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35175  00F0BA  B4D8               	btfsc	status,2,c
 35176  00F0BC  D006               	goto	l688
 35177                           
 35178                           ; BSR set to: 1
 35179  00F0BE  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35180  00F0C2  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35181  00F0C6  BEDF               	btfsc	indf2,7,c
 35182  00F0C8  D0AF               	goto	l684
 35183  00F0CA                     l688:
 35184                           
 35185                           ; BSR set to: 1
 35186                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 35187                           
 35188                           ; BSR set to: 1
 35189  00F0CA  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 35190  00F0CE  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 35191  00F0D2  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 35192  00F0D6  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 35193  00F0DA  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 35194  00F0DE  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 35195  00F0E2  0E00               	movlw	0
 35196  00F0E4  0100               	movlb	0	; () banked
 35197  00F0E6  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 35198  00F0E8  0E06               	movlw	6
 35199  00F0EA  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 35200  00F0EC  EE22  F095         	lfsr	2,_LUN+12
 35201  00F0F0  D801               	call	u11208
 35202  00F0F2  D00A               	goto	u11209
 35203  00F0F4                     u11208:
 35204  00F0F4  0005               	push	
 35205  00F0F6  6EFA               	movwf	pclath,c
 35206  00F0F8  50DE               	movf	postinc2,w,c
 35207  00F0FA  6EFD               	movwf	tosl,c
 35208  00F0FC  50DE               	movf	postinc2,w,c
 35209  00F0FE  6EFE               	movwf	tosh,c
 35210  00F100  50DE               	movf	postinc2,w,c
 35211  00F102  6EFF               	movwf	tosu,c
 35212  00F104  50FA               	movf	pclath,w,c
 35213  00F106  0012               	return		;indir
 35214  00F108                     u11209:
 35215  00F108  06E8               	decf	wreg,f,c
 35216  00F10A  B4D8               	btfsc	status,2,c
 35217  00F10C  D01B               	goto	l691
 35218                           
 35219                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 35220  00F10E  0E64               	movlw	100
 35221  00F110  0101               	movlb	1	; () banked
 35222  00F112  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 35223  00F114  D002               	goto	l690
 35224                           
 35225                           ; BSR set to: 1
 35226                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 35227  00F116  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 35228                           
 35229                           ;usb_device_msd.c: 1088: break;
 35230  00F118  D087               	goto	l684
 35231  00F11A                     l690:
 35232                           
 35233                           ; BSR set to: 1
 35234                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 35235                           
 35236                           ; BSR set to: 1
 35237  00F11A  0E02               	movlw	2
 35238  00F11C  010D               	movlb	13	; () banked
 35239  00F11E  6F8C               	movwf	140,b	;volatile
 35240                           
 35241                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 35242  00F120  0101               	movlb	1	; () banked
 35243  00F122  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35244  00F124  0BF0               	andlw	-16
 35245  00F126  0903               	iorlw	3
 35246  00F128  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35247                           
 35248                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 35249  00F12A  0E00               	movlw	0
 35250  00F12C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35251                           
 35252                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 35253  00F12E  0E00               	movlw	0
 35254  00F130  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35255                           
 35256                           ; BSR set to: 1
 35257                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 35258  00F132  0E01               	movlw	1
 35259  00F134  0100               	movlb	0	; () banked
 35260  00F136  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35261  00F138  0E02               	movlw	2
 35262  00F13A  EC65  F087         	call	_USBStallEndpoint
 35263  00F13E  D05F               	goto	l12900
 35264  00F140                     L51:
 35265  00F140  6F61               	movwf	_MSDReadState& (0+255),b
 35266                           
 35267                           ;usb_device_msd.c: 1109: break;
 35268  00F142  D072               	goto	l684
 35269  00F144                     l691:
 35270                           
 35271                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 35272                           
 35273                           ; BSR set to: 1
 35274                           
 35275                           ; BSR set to: 1
 35276  00F144  0E01               	movlw	1
 35277  00F146  0101               	movlb	1	; () banked
 35278  00F148  272B               	addwf	_LBA& (0+255),f,b
 35279  00F14A  0E00               	movlw	0
 35280  00F14C  232C               	addwfc	(_LBA+1)& (0+255),f,b
 35281  00F14E  232D               	addwfc	(_LBA+2)& (0+255),f,b
 35282  00F150  232E               	addwfc	(_LBA+3)& (0+255),f,b
 35283                           
 35284                           ; BSR set to: 1
 35285                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 35286  00F152  0E00               	movlw	0
 35287  00F154  010D               	movlb	13	; () banked
 35288  00F156  6F88               	movwf	136,b	;volatile
 35289  00F158  0E02               	movlw	2
 35290  00F15A  6F89               	movwf	137,b	;volatile
 35291  00F15C  0E00               	movlw	0
 35292  00F15E  6F8A               	movwf	138,b	;volatile
 35293  00F160  0E00               	movlw	0
 35294  00F162  6F8B               	movwf	139,b	;volatile
 35295                           
 35296                           ; BSR set to: 13
 35297                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 35298  00F164  0E00               	movlw	0
 35299  00F166  0101               	movlb	1	; () banked
 35300  00F168  6F4D               	movwf	_ptrNextData& (0+255),b
 35301  00F16A  0E06               	movlw	6
 35302  00F16C  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 35303                           
 35304                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 35305  00F16E  0E03               	movlw	3
 35306  00F170  6F61               	movwf	_MSDReadState& (0+255),b
 35307  00F172                     
 35308                           ; BSR set to: 1
 35309                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 35310                           
 35311                           ; BSR set to: 1
 35312  00F172  010D               	movlb	13	; () banked
 35313  00F174  5188               	movf	136,w,b	;volatile
 35314  00F176  1189               	iorwf	137,w,b	;volatile
 35315  00F178  118A               	iorwf	138,w,b	;volatile
 35316  00F17A  118B               	iorwf	139,w,b	;volatile
 35317  00F17C  A4D8               	btfss	status,2,c
 35318  00F17E  D002               	goto	l693
 35319                           
 35320                           ; BSR set to: 13
 35321                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 35322  00F180  0E01               	movlw	1
 35323  00F182  D03E               	goto	L53
 35324  00F184                     l693:
 35325                           
 35326                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 35327                           
 35328                           ; BSR set to: 1
 35329  00F184  0E04               	movlw	4
 35330  00F186  0101               	movlb	1	; () banked
 35331  00F188  6F61               	movwf	_MSDReadState& (0+255),b
 35332  00F18A                     
 35333                           ; BSR set to: 1
 35334                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 35335                           
 35336                           ; BSR set to: 1
 35337  00F18A  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35338  00F18C  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35339  00F18E  B4D8               	btfsc	status,2,c
 35340  00F190  D006               	goto	l695
 35341                           
 35342                           ; BSR set to: 1
 35343  00F192  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35344  00F196  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35345  00F19A  BEDF               	btfsc	indf2,7,c
 35346  00F19C  D045               	goto	l684
 35347  00F19E                     l695:
 35348                           
 35349                           ; BSR set to: 1
 35350                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 35351                           
 35352                           ; BSR set to: 1
 35353  00F19E  0E01               	movlw	1
 35354  00F1A0  0100               	movlb	0	; () banked
 35355  00F1A2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35356  00F1A4  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35357  00F1A8  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35358  00F1AC  0E40               	movlw	64
 35359  00F1AE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35360  00F1B0  0E02               	movlw	2
 35361  00F1B2  ECEA  F087         	call	_USBTransferOnePacket
 35362  00F1B6  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35363  00F1BA  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35364                           
 35365                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35366  00F1BE  0E03               	movlw	3
 35367  00F1C0  0101               	movlb	1	; () banked
 35368  00F1C2  6F61               	movwf	_MSDReadState& (0+255),b
 35369                           
 35370                           ; BSR set to: 1
 35371                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35372  00F1C4  0E40               	movlw	64
 35373  00F1C6  0102               	movlb	2	; () banked
 35374  00F1C8  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35375  00F1CA  0E00               	movlw	0
 35376  00F1CC  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35377  00F1CE  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35378  00F1D0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35379                           
 35380                           ; BSR set to: 2
 35381                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35382  00F1D2  0E40               	movlw	64
 35383  00F1D4  010D               	movlb	13	; () banked
 35384  00F1D6  5F88               	subwf	136,f,b	;volatile
 35385  00F1D8  0E00               	movlw	0
 35386  00F1DA  5B89               	subwfb	137,f,b	;volatile
 35387  00F1DC  5B8A               	subwfb	138,f,b	;volatile
 35388  00F1DE  5B8B               	subwfb	139,f,b	;volatile
 35389                           
 35390                           ; BSR set to: 13
 35391                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35392  00F1E0  0E40               	movlw	64
 35393  00F1E2  0101               	movlb	1	; () banked
 35394  00F1E4  274D               	addwf	_ptrNextData& (0+255),f,b
 35395  00F1E6  0E00               	movlw	0
 35396  00F1E8  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35397                           
 35398                           ;usb_device_msd.c: 1149: break;
 35399  00F1EA  D01E               	goto	l684
 35400  00F1EC                     
 35401                           ; BSR set to: 1
 35402                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35403                           
 35404                           ; BSR set to: 1
 35405  00F1EC  0E02               	movlw	2
 35406  00F1EE  010D               	movlb	13	; () banked
 35407  00F1F0  6F8C               	movwf	140,b	;volatile
 35408                           
 35409                           ; BSR set to: 13
 35410                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35411  00F1F2  0E01               	movlw	1
 35412  00F1F4  0100               	movlb	0	; () banked
 35413  00F1F6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35414  00F1F8  0E02               	movlw	2
 35415  00F1FA  EC65  F087         	call	_USBStallEndpoint
 35416  00F1FE                     l12900:
 35417                           
 35418                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35419  00F1FE  0E00               	movlw	0
 35420  00F200                     L53:
 35421  00F200  0101               	movlb	1	; () banked
 35422  00F202  D79E               	goto	L51
 35423  00F204                     l681:
 35424                           
 35425                           ; BSR set to: 1
 35426  00F204  0101               	movlb	1	; () banked
 35427  00F206  5161               	movf	_MSDReadState& (0+255),w,b
 35428                           
 35429                           ; Switch size 1, requested type "space"
 35430                           ; Number of cases is 5, Range of values is 0 to 4
 35431                           ; switch strategies available:
 35432                           ; Name         Instructions Cycles
 35433                           ; simple_byte           16     9 (average)
 35434                           ;	Chosen strategy is simple_byte
 35435  00F208  0A00               	xorlw	0	; case 0
 35436  00F20A  B4D8               	btfsc	status,2,c
 35437  00F20C  D71C               	goto	l682
 35438  00F20E  0A01               	xorlw	1	; case 1
 35439  00F210  B4D8               	btfsc	status,2,c
 35440  00F212  D746               	goto	l685
 35441  00F214  0A03               	xorlw	3	; case 2
 35442  00F216  B4D8               	btfsc	status,2,c
 35443  00F218  D74E               	goto	l687
 35444  00F21A  0A01               	xorlw	1	; case 3
 35445  00F21C  B4D8               	btfsc	status,2,c
 35446  00F21E  D7A9               	goto	l692
 35447  00F220  0A07               	xorlw	7	; case 4
 35448  00F222  B4D8               	btfsc	status,2,c
 35449  00F224  D7B2               	goto	l694
 35450  00F226  D7E2               	goto	l696
 35451  00F228                     l684:
 35452                           
 35453                           ;usb_device_msd.c: 1161: return MSDReadState;
 35454                           
 35455                           ; BSR set to: 1
 35456  00F228  0101               	movlb	1	; () banked
 35457  00F22A  5161               	movf	_MSDReadState& (0+255),w,b
 35458  00F22C  0012               	return	
 35459  00F22E                     __end_of_MSDReadHandler:
 35460                           	opt stack 0
 35461                           tosu	equ	0xFFF
 35462                           tosh	equ	0xFFE
 35463                           tosl	equ	0xFFD
 35464                           pclath	equ	0xFFA
 35465                           tblptru	equ	0xFF8
 35466                           tblptrh	equ	0xFF7
 35467                           tblptrl	equ	0xFF6
 35468                           tablat	equ	0xFF5
 35469                           prodh	equ	0xFF4
 35470                           prodl	equ	0xFF3
 35471                           intcon	equ	0xFF2
 35472                           postinc0	equ	0xFEE
 35473                           wreg	equ	0xFE8
 35474                           indf1	equ	0xFE7
 35475                           postinc1	equ	0xFE6
 35476                           postdec1	equ	0xFE5
 35477                           plusw1	equ	0xFE3
 35478                           fsr1h	equ	0xFE2
 35479                           fsr1l	equ	0xFE1
 35480                           indf2	equ	0xFDF
 35481                           postinc2	equ	0xFDE
 35482                           postdec2	equ	0xFDD
 35483                           plusw2	equ	0xFDB
 35484                           fsr2h	equ	0xFDA
 35485                           fsr2l	equ	0xFD9
 35486                           status	equ	0xFD8
 35487                           
 35488 ;; *************** function _MSDCheckForErrorCases *****************
 35489 ;; Defined at:
 35490 ;;		line 1434 in file "usb_device_msd.c"
 35491 ;; Parameters:    Size  Location     Type
 35492 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35493 ;; Auto vars:     Size  Location     Type
 35494 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 35495 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 35496 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35497 ;; Return value:  Size  Location     Type
 35498 ;;                  1    wreg      unsigned char 
 35499 ;; Registers used:
 35500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35501 ;; Tracked objects:
 35502 ;;		On entry : 0/0
 35503 ;;		On exit  : 0/0
 35504 ;;		Unchanged: 0/0
 35505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35507 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35509 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35510 ;;Total ram usage:        7 bytes
 35511 ;; Hardware stack levels used:    1
 35512 ;; Hardware stack levels required when called:   12
 35513 ;; This function calls:
 35514 ;;		_MSDErrorHandler
 35515 ;; This function is called by:
 35516 ;;		_MSDProcessCommandMediaPresent
 35517 ;;		_MSDReadHandler
 35518 ;;		_MSDWriteHandler
 35519 ;; This function uses a non-reentrant model
 35520 ;;
 35521                           
 35522                           	psect	text140
 35523  010A8A                     __ptext140:
 35524                           	opt stack 0
 35525  010A8A                     _MSDCheckForErrorCases:
 35526                           	opt stack 13
 35527                           
 35528                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 35529                           
 35530                           ; BSR set to: 1
 35531                           ;incstack = 0
 35532  010A8A  0100               	movlb	0	; () banked
 35533  010A8C  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35534  010A8E  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35535  010A90  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35536  010A92  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35537  010A94  A4D8               	btfss	status,2,c
 35538  010A96  D002               	goto	l726
 35539                           
 35540                           ; BSR set to: 0
 35541                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 35542  010A98  0E01               	movlw	1
 35543  010A9A  D001               	goto	L54
 35544  010A9C                     l726:
 35545                           
 35546                           ; BSR set to: 0
 35547                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 35548                           
 35549                           ; BSR set to: 0
 35550  010A9C  0E00               	movlw	0
 35551  010A9E                     L54:
 35552  010A9E  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35553                           
 35554                           ; BSR set to: 0
 35555                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 35556                           
 35557                           ; BSR set to: 0
 35558  010AA0  0101               	movlb	1	; () banked
 35559  010AA2  055C               	decf	_MSDHostNoData& (0+255),w,b
 35560  010AA4  A4D8               	btfss	status,2,c
 35561  010AA6  D006               	goto	l728
 35562                           
 35563                           ; BSR set to: 1
 35564  010AA8  0100               	movlb	0	; () banked
 35565  010AAA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35566  010AAC  A4D8               	btfss	status,2,c
 35567  010AAE  D002               	goto	l728
 35568                           
 35569                           ; BSR set to: 0
 35570                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 35571  010AB0  0E00               	movlw	0
 35572                           
 35573                           ; BSR set to: 0
 35574  010AB2  0012               	return	
 35575  010AB4                     l728:
 35576                           
 35577                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 35578                           
 35579                           ; BSR set to: 0
 35580  010AB4  0100               	movlb	0	; () banked
 35581  010AB6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35582  010AB8  0102               	movlb	2	; () banked
 35583  010ABA  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 35584  010ABC  E120               	bnz	l12544
 35585  010ABE  0100               	movlb	0	; () banked
 35586  010AC0  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35587  010AC2  0102               	movlb	2	; () banked
 35588  010AC4  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 35589  010AC6  E11B               	bnz	l12544
 35590  010AC8  0100               	movlb	0	; () banked
 35591  010ACA  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35592  010ACC  0102               	movlb	2	; () banked
 35593  010ACE  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 35594  010AD0  E116               	bnz	l12544
 35595  010AD2  0100               	movlb	0	; () banked
 35596  010AD4  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35597  010AD6  0102               	movlb	2	; () banked
 35598  010AD8  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 35599  010ADA  A4D8               	btfss	status,2,c
 35600  010ADC  D010               	goto	l734
 35601                           
 35602                           ; BSR set to: 2
 35603                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35604  010ADE  0101               	movlb	1	; () banked
 35605  010AE0  0563               	decf	_MSD_State& (0+255),w,b
 35606  010AE2  A4D8               	btfss	status,2,c
 35607  010AE4  D006               	goto	l731
 35608                           
 35609                           ; BSR set to: 1
 35610                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35611  010AE6  0E2A               	movlw	42
 35612  010AE8  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35613  010AEA  B4D8               	btfsc	status,2,c
 35614  010AEC  D008               	goto	l734
 35615                           
 35616                           ; BSR set to: 1
 35617                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 35618  010AEE  0E00               	movlw	0
 35619                           
 35620                           ; BSR set to: 1
 35621  010AF0  0012               	return	
 35622  010AF2                     l731:
 35623                           
 35624                           ; BSR set to: 1
 35625                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 35626                           
 35627                           ; BSR set to: 1
 35628  010AF2  0E2A               	movlw	42
 35629  010AF4  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35630  010AF6  A4D8               	btfss	status,2,c
 35631  010AF8  D002               	goto	l734
 35632                           
 35633                           ; BSR set to: 1
 35634                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 35635  010AFA  0E00               	movlw	0
 35636                           
 35637                           ; BSR set to: 1
 35638  010AFC  0012               	return	
 35639  010AFE                     l734:
 35640  010AFE                     l12544:
 35641                           
 35642                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35643  010AFE  0102               	movlb	2	; () banked
 35644  010B00  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35645  010B02  0100               	movlb	0	; () banked
 35646  010B04  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35647  010B06  0102               	movlb	2	; () banked
 35648  010B08  5109               	movf	(_gblCBW+9)& (0+255),w,b
 35649  010B0A  0100               	movlb	0	; () banked
 35650  010B0C  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35651  010B0E  0102               	movlb	2	; () banked
 35652  010B10  510A               	movf	(_gblCBW+10)& (0+255),w,b
 35653  010B12  0100               	movlb	0	; () banked
 35654  010B14  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35655  010B16  0102               	movlb	2	; () banked
 35656  010B18  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35657  010B1A  0100               	movlb	0	; () banked
 35658  010B1C  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35659  010B1E  B0D8               	btfsc	status,0,c
 35660  010B20  D002               	goto	l735
 35661                           
 35662                           ; BSR set to: 0
 35663                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35664  010B22  0E01               	movlw	1
 35665  010B24  D001               	goto	L55
 35666  010B26                     l735:
 35667                           
 35668                           ; BSR set to: 0
 35669                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 35670                           
 35671                           ; BSR set to: 0
 35672  010B26  0E00               	movlw	0
 35673  010B28                     L55:
 35674  010B28  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35675                           
 35676                           ; BSR set to: 0
 35677                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35678                           
 35679                           ; BSR set to: 0
 35680  010B2A  0E02               	movlw	2
 35681  010B2C  0101               	movlb	1	; () banked
 35682  010B2E  1963               	xorwf	_MSD_State& (0+255),w,b
 35683  010B30  A4D8               	btfss	status,2,c
 35684  010B32  D017               	goto	l737
 35685                           
 35686                           ; BSR set to: 1
 35687                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 35688  010B34  0E2A               	movlw	42
 35689  010B36  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35690  010B38  B4D8               	btfsc	status,2,c
 35691  010B3A  D006               	goto	l738
 35692                           
 35693                           ; BSR set to: 1
 35694  010B3C  0100               	movlb	0	; () banked
 35695  010B3E  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35696  010B40  A4D8               	btfss	status,2,c
 35697  010B42  D002               	goto	l738
 35698  010B44                     u10830:
 35699                           
 35700                           ; BSR set to: 0
 35701                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35702  010B44  0E05               	movlw	5
 35703  010B46  D025               	goto	L60
 35704  010B48                     l738:
 35705                           
 35706                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35707                           
 35708                           ; BSR set to: 0
 35709  010B48  0101               	movlb	1	; () banked
 35710  010B4A  055C               	decf	_MSDHostNoData& (0+255),w,b
 35711  010B4C  B4D8               	btfsc	status,2,c
 35712  010B4E  D014               	goto	u10880
 35713                           
 35714                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35715                           
 35716                           ; BSR set to: 0
 35717                           
 35718                           ; BSR set to: 1
 35719                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35720  010B50  0100               	movlb	0	; () banked
 35721  010B52  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35722  010B54  B4D8               	btfsc	status,2,c
 35723  010B56  D003               	goto	u10860
 35724                           
 35725                           ; BSR set to: 0
 35726                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35727                           
 35728                           ; BSR set to: 0
 35729                           
 35730                           ; BSR set to: 0
 35731                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 35732  010B58  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35733  010B5A  A4D8               	btfss	status,2,c
 35734  010B5C  D7F3               	goto	u10830
 35735  010B5E                     u10860:
 35736                           
 35737                           ; BSR set to: 0
 35738                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35739  010B5E  0E04               	movlw	4
 35740  010B60  D018               	goto	L60
 35741  010B62                     l737:
 35742                           
 35743                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 35744                           
 35745                           ; BSR set to: 0
 35746  010B62  0E2A               	movlw	42
 35747  010B64  0101               	movlb	1	; () banked
 35748  010B66  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35749  010B68  A4D8               	btfss	status,2,c
 35750  010B6A  D002               	goto	l747
 35751                           
 35752                           ; BSR set to: 1
 35753                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35754  010B6C  0E03               	movlw	3
 35755  010B6E  D005               	goto	L59
 35756  010B70                     l747:
 35757                           
 35758                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35759                           
 35760                           ; BSR set to: 0
 35761  010B70  0101               	movlb	1	; () banked
 35762  010B72  055C               	decf	_MSDHostNoData& (0+255),w,b
 35763  010B74  A4D8               	btfss	status,2,c
 35764  010B76  D003               	goto	l749
 35765  010B78                     u10880:
 35766                           
 35767                           ; BSR set to: 1
 35768                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35769  010B78  0E01               	movlw	1
 35770  010B7A                     L59:
 35771  010B7A  0100               	movlb	0	; () banked
 35772  010B7C  D00A               	goto	L60
 35773  010B7E                     l749:
 35774                           
 35775                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35776                           
 35777                           ; BSR set to: 0
 35778  010B7E  0100               	movlb	0	; () banked
 35779  010B80  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35780  010B82  B4D8               	btfsc	status,2,c
 35781  010B84  D003               	goto	u10900
 35782                           
 35783                           ; BSR set to: 0
 35784                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35785                           
 35786                           ; BSR set to: 0
 35787                           
 35788                           ; BSR set to: 0
 35789                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35790  010B86  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35791  010B88  A4D8               	btfss	status,2,c
 35792  010B8A  D002               	goto	l753
 35793  010B8C                     u10900:
 35794                           
 35795                           ; BSR set to: 0
 35796                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35797  010B8C  0E02               	movlw	2
 35798  010B8E  D001               	goto	L60
 35799  010B90                     l753:
 35800                           
 35801                           ; BSR set to: 0
 35802                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35803                           
 35804                           ; BSR set to: 0
 35805  010B90  0E03               	movlw	3
 35806  010B92                     L60:
 35807  010B92  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35808                           
 35809                           ; BSR set to: 0
 35810                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35811                           
 35812                           ; BSR set to: 0
 35813                           
 35814                           ; BSR set to: 0
 35815                           
 35816                           ; BSR set to: 0
 35817                           
 35818                           ; BSR set to: 0
 35819                           
 35820                           ; BSR set to: 0
 35821  010B94  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35822  010B96  ECB8  F084         	call	_MSDErrorHandler
 35823                           
 35824                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35825  010B9A  0100               	movlb	0	; () banked
 35826  010B9C  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35827  010B9E  0012               	return	
 35828  010BA0                     __end_of_MSDCheckForErrorCases:
 35829                           	opt stack 0
 35830                           tosu	equ	0xFFF
 35831                           tosh	equ	0xFFE
 35832                           tosl	equ	0xFFD
 35833                           pclath	equ	0xFFA
 35834                           tblptru	equ	0xFF8
 35835                           tblptrh	equ	0xFF7
 35836                           tblptrl	equ	0xFF6
 35837                           tablat	equ	0xFF5
 35838                           prodh	equ	0xFF4
 35839                           prodl	equ	0xFF3
 35840                           intcon	equ	0xFF2
 35841                           postinc0	equ	0xFEE
 35842                           wreg	equ	0xFE8
 35843                           indf1	equ	0xFE7
 35844                           postinc1	equ	0xFE6
 35845                           postdec1	equ	0xFE5
 35846                           plusw1	equ	0xFE3
 35847                           fsr1h	equ	0xFE2
 35848                           fsr1l	equ	0xFE1
 35849                           indf2	equ	0xFDF
 35850                           postinc2	equ	0xFDE
 35851                           postdec2	equ	0xFDD
 35852                           plusw2	equ	0xFDB
 35853                           fsr2h	equ	0xFDA
 35854                           fsr2l	equ	0xFD9
 35855                           status	equ	0xFD8
 35856                           
 35857 ;; *************** function _MSDErrorHandler *****************
 35858 ;; Defined at:
 35859 ;;		line 1577 in file "usb_device_msd.c"
 35860 ;; Parameters:    Size  Location     Type
 35861 ;;  ErrorCase       1    wreg     unsigned char 
 35862 ;; Auto vars:     Size  Location     Type
 35863 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35864 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35865 ;; Return value:  Size  Location     Type
 35866 ;;                  1    wreg      void 
 35867 ;; Registers used:
 35868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35869 ;; Tracked objects:
 35870 ;;		On entry : 0/0
 35871 ;;		On exit  : 0/0
 35872 ;;		Unchanged: 0/0
 35873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35878 ;;Total ram usage:        2 bytes
 35879 ;; Hardware stack levels used:    1
 35880 ;; Hardware stack levels required when called:   11
 35881 ;; This function calls:
 35882 ;;		_ResetSenseData
 35883 ;;		_USBStallEndpoint
 35884 ;; This function is called by:
 35885 ;;		_MSDProcessCommandMediaAbsent
 35886 ;;		_MSDProcessCommandMediaPresent
 35887 ;;		_MSDCheckForErrorCases
 35888 ;; This function uses a non-reentrant model
 35889 ;;
 35890                           
 35891                           	psect	text141
 35892  010970                     __ptext141:
 35893                           	opt stack 0
 35894  010970                     _MSDErrorHandler:
 35895                           	opt stack 13
 35896                           
 35897                           ;incstack = 0
 35898                           ;MSDErrorHandler@ErrorCase stored from wreg
 35899  010970  0100               	movlb	0	; () banked
 35900  010972  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35901                           
 35902                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 35903  010974  0101               	movlb	1	; () banked
 35904  010976  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35905  010978  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35906  01097A  B4D8               	btfsc	status,2,c
 35907  01097C  D006               	goto	u9910
 35908                           
 35909                           ; BSR set to: 1
 35910  01097E  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35911  010982  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35912  010986  BEDF               	btfsc	indf2,7,c
 35913  010988  0012               	return	
 35914  01098A                     u9910:
 35915                           
 35916                           ; BSR set to: 1
 35917                           
 35918                           ; BSR set to: 1
 35919  01098A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 35920  01098C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35921  01098E  B4D8               	btfsc	status,2,c
 35922  010990  D006               	goto	l757
 35923                           
 35924                           ; BSR set to: 1
 35925  010992  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35926  010996  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35927  01099A  BEDF               	btfsc	indf2,7,c
 35928  01099C  0012               	return	
 35929  01099E                     l757:
 35930                           
 35931                           ; BSR set to: 1
 35932                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35933  01099E  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35934                           
 35935                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35936  0109A2  6962               	setf	_MSDCommandState& (0+255),b
 35937                           
 35938                           ; BSR set to: 1
 35939                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 35940  0109A4  0E00               	movlw	0
 35941  0109A6  6F61               	movwf	_MSDReadState& (0+255),b
 35942                           
 35943                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 35944  0109A8  0E00               	movlw	0
 35945  0109AA  6F60               	movwf	_MSDWriteState& (0+255),b
 35946                           
 35947                           ; BSR set to: 1
 35948                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35949  0109AC  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 35950  0109B0  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 35951  0109B4  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 35952  0109B8  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 35953                           
 35954                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35955  0109BC  0E01               	movlw	1
 35956  0109BE  010D               	movlb	13	; () banked
 35957  0109C0  6F8C               	movwf	140,b	;volatile
 35958                           
 35959                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35960  0109C2  0E03               	movlw	3
 35961  0109C4  0101               	movlb	1	; () banked
 35962  0109C6  6F63               	movwf	_MSD_State& (0+255),b
 35963                           
 35964                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35965  0109C8  D04B               	goto	l763
 35966  0109CA                     
 35967                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35968                           
 35969                           ; BSR set to: 1
 35970  0109CA  0E02               	movlw	2
 35971  0109CC  010D               	movlb	13	; () banked
 35972  0109CE  6F8C               	movwf	140,b	;volatile
 35973                           
 35974                           ;usb_device_msd.c: 1607: break;
 35975  0109D0  0012               	return	
 35976  0109D2                     
 35977                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35978                           
 35979                           ; BSR set to: 13
 35980  0109D2  0E01               	movlw	1
 35981  0109D4  0100               	movlb	0	; () banked
 35982  0109D6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35983  0109D8  0E02               	movlw	2
 35984  0109DA  EC65  F087         	call	_USBStallEndpoint
 35985                           
 35986                           ;usb_device_msd.c: 1611: break;
 35987  0109DE  0012               	return	
 35988  0109E0                     
 35989                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35990  0109E0  0E02               	movlw	2
 35991  0109E2  010D               	movlb	13	; () banked
 35992  0109E4  6F8C               	movwf	140,b	;volatile
 35993                           
 35994                           ; BSR set to: 13
 35995                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35996  0109E6  0E01               	movlw	1
 35997  0109E8  0100               	movlb	0	; () banked
 35998  0109EA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35999  0109EC  0E02               	movlw	2
 36000  0109EE  EC65  F087         	call	_USBStallEndpoint
 36001                           
 36002                           ;usb_device_msd.c: 1616: break;
 36003  0109F2  0012               	return	
 36004  0109F4                     
 36005                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 36006  0109F4  0E00               	movlw	0
 36007  0109F6  0100               	movlb	0	; () banked
 36008  0109F8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36009  0109FA  0E02               	movlw	2
 36010  0109FC  EC65  F087         	call	_USBStallEndpoint
 36011                           
 36012                           ;usb_device_msd.c: 1620: break;
 36013  010A00  0012               	return	
 36014  010A02                     
 36015                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 36016  010A02  0E02               	movlw	2
 36017  010A04  010D               	movlb	13	; () banked
 36018  010A06  6F8C               	movwf	140,b	;volatile
 36019                           
 36020                           ; BSR set to: 13
 36021                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 36022  010A08  0E00               	movlw	0
 36023  010A0A  0100               	movlb	0	; () banked
 36024  010A0C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36025  010A0E  0E02               	movlw	2
 36026  010A10  EC65  F087         	call	_USBStallEndpoint
 36027                           
 36028                           ;usb_device_msd.c: 1625: break;
 36029  010A14  0012               	return	
 36030  010A16                     
 36031                           ;usb_device_msd.c: 1628: ResetSenseData();
 36032  010A16  EC4A  F0A1         	call	_ResetSenseData	;wreg free
 36033                           
 36034                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 36035  010A1A  0101               	movlb	1	; () banked
 36036  010A1C  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 36037  010A1E  0BF0               	andlw	-16
 36038  010A20  0905               	iorlw	5
 36039  010A22  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 36040                           
 36041                           ; BSR set to: 1
 36042                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 36043  010A24  0E20               	movlw	32
 36044  010A26  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36045                           
 36046                           ; BSR set to: 1
 36047                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 36048  010A28  0E00               	movlw	0
 36049  010A2A  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36050                           
 36051                           ; BSR set to: 1
 36052                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 36053  010A2C  0E02               	movlw	2
 36054  010A2E  0100               	movlb	0	; () banked
 36055  010A30  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 36056  010A32  A4D8               	btfss	status,2,c
 36057  010A34  D00E               	goto	l771
 36058                           
 36059                           ; BSR set to: 0
 36060  010A36  0102               	movlb	2	; () banked
 36061  010A38  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36062  010A3A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36063  010A3C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36064  010A3E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36065  010A40  B4D8               	btfsc	status,2,c
 36066  010A42  D007               	goto	l771
 36067                           
 36068                           ; BSR set to: 2
 36069                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 36070  010A44  0E00               	movlw	0
 36071  010A46  0100               	movlb	0	; () banked
 36072  010A48  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36073  010A4A  0E02               	movlw	2
 36074  010A4C  EC65  F087         	call	_USBStallEndpoint
 36075                           
 36076                           ;usb_device_msd.c: 1636: }
 36077  010A50  0012               	return	
 36078  010A52                     l771:
 36079                           
 36080                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 36081  010A52  0E01               	movlw	1
 36082  010A54  0100               	movlb	0	; () banked
 36083  010A56  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36084  010A58  0E02               	movlw	2
 36085  010A5A  EC65  F087         	call	_USBStallEndpoint
 36086                           
 36087                           ;usb_device_msd.c: 1644: }
 36088                           
 36089                           ;usb_device_msd.c: 1643: break;
 36090                           
 36091                           ;usb_device_msd.c: 1642: default:
 36092                           
 36093                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 36094  010A5E  0012               	return	
 36095  010A60                     l763:
 36096  010A60  0100               	movlb	0	; () banked
 36097  010A62  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 36098                           
 36099                           ; Switch size 1, requested type "space"
 36100                           ; Number of cases is 6, Range of values is 1 to 127
 36101                           ; switch strategies available:
 36102                           ; Name         Instructions Cycles
 36103                           ; simple_byte           19    10 (average)
 36104                           ;	Chosen strategy is simple_byte
 36105  010A64  0A01               	xorlw	1	; case 1
 36106  010A66  B4D8               	btfsc	status,2,c
 36107  010A68  D7B0               	goto	l764
 36108  010A6A  0A03               	xorlw	3	; case 2
 36109  010A6C  B4D8               	btfsc	status,2,c
 36110  010A6E  D7B1               	goto	l766
 36111  010A70  0A01               	xorlw	1	; case 3
 36112  010A72  B4D8               	btfsc	status,2,c
 36113  010A74  D7B5               	goto	l767
 36114  010A76  0A07               	xorlw	7	; case 4
 36115  010A78  B4D8               	btfsc	status,2,c
 36116  010A7A  D7BC               	goto	l768
 36117  010A7C  0A01               	xorlw	1	; case 5
 36118  010A7E  B4D8               	btfsc	status,2,c
 36119  010A80  D7C0               	goto	l769
 36120  010A82  0A7A               	xorlw	122	; case 127
 36121  010A84  A4D8               	btfss	status,2,c
 36122  010A86  0012               	return	
 36123  010A88  D7C6               	goto	l770
 36124  010A8A                     __end_of_MSDErrorHandler:
 36125                           	opt stack 0
 36126                           tosu	equ	0xFFF
 36127                           tosh	equ	0xFFE
 36128                           tosl	equ	0xFFD
 36129                           pclath	equ	0xFFA
 36130                           tblptru	equ	0xFF8
 36131                           tblptrh	equ	0xFF7
 36132                           tblptrl	equ	0xFF6
 36133                           tablat	equ	0xFF5
 36134                           prodh	equ	0xFF4
 36135                           prodl	equ	0xFF3
 36136                           intcon	equ	0xFF2
 36137                           postinc0	equ	0xFEE
 36138                           wreg	equ	0xFE8
 36139                           indf1	equ	0xFE7
 36140                           postinc1	equ	0xFE6
 36141                           postdec1	equ	0xFE5
 36142                           plusw1	equ	0xFE3
 36143                           fsr1h	equ	0xFE2
 36144                           fsr1l	equ	0xFE1
 36145                           indf2	equ	0xFDF
 36146                           postinc2	equ	0xFDE
 36147                           postdec2	equ	0xFDD
 36148                           plusw2	equ	0xFDB
 36149                           fsr2h	equ	0xFDA
 36150                           fsr2l	equ	0xFD9
 36151                           status	equ	0xFD8
 36152                           
 36153 ;; *************** function _USBStallEndpoint *****************
 36154 ;; Defined at:
 36155 ;;		line 1073 in file "usb_device.c"
 36156 ;; Parameters:    Size  Location     Type
 36157 ;;  ep              1    wreg     unsigned char 
 36158 ;;  dir             1    0[BANK0 ] unsigned char 
 36159 ;; Auto vars:     Size  Location     Type
 36160 ;;  ep              1    5[BANK0 ] unsigned char 
 36161 ;;  p               2    6[BANK0 ] PTR struct __BDT
 36162 ;;		 -> BDT(48), 
 36163 ;; Return value:  Size  Location     Type
 36164 ;;                  1    wreg      void 
 36165 ;; Registers used:
 36166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36167 ;; Tracked objects:
 36168 ;;		On entry : 0/0
 36169 ;;		On exit  : 0/0
 36170 ;;		Unchanged: 0/0
 36171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36172 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36173 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36174 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36175 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36176 ;;Total ram usage:        8 bytes
 36177 ;; Hardware stack levels used:    1
 36178 ;; Hardware stack levels required when called:   10
 36179 ;; This function calls:
 36180 ;;		Nothing
 36181 ;; This function is called by:
 36182 ;;		_MSDTasks
 36183 ;;		_MSDReadHandler
 36184 ;;		_MSDWriteHandler
 36185 ;;		_MSDErrorHandler
 36186 ;; This function uses a non-reentrant model
 36187 ;;
 36188                           
 36189                           	psect	text142
 36190  010ECA                     __ptext142:
 36191                           	opt stack 0
 36192  010ECA                     _USBStallEndpoint:
 36193                           	opt stack 18
 36194                           
 36195                           ;incstack = 0
 36196                           ;USBStallEndpoint@ep stored from wreg
 36197  010ECA  0100               	movlb	0	; () banked
 36198  010ECC  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 36199                           
 36200                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 36201  010ECE  0100               	movlb	0	; () banked
 36202  010ED0  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36203  010ED2  A4D8               	btfss	status,2,c
 36204  010ED4  D02B               	goto	l192
 36205                           
 36206                           ; BSR set to: 0
 36207                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 36208  010ED6  EE20 F001          	lfsr	2,1
 36209  010EDA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36210  010EDC  26D9               	addwf	fsr2l,f,c
 36211  010EDE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36212  010EE0  22DA               	addwfc	fsr2h,f,c
 36213  010EE2  0E08               	movlw	8
 36214  010EE4  6EDF               	movwf	indf2,c
 36215                           
 36216                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36217  010EE6  EE20 F002          	lfsr	2,2
 36218  010EEA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36219  010EEC  26D9               	addwf	fsr2l,f,c
 36220  010EEE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36221  010EF0  22DA               	addwfc	fsr2h,f,c
 36222  010EF2  0E30               	movlw	48
 36223  010EF4  6EDE               	movwf	postinc2,c
 36224  010EF6  0E0D               	movlw	13
 36225  010EF8  6EDD               	movwf	postdec2,c
 36226                           
 36227                           ; BSR set to: 0
 36228                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36229  010EFA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36230  010EFE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36231  010F02  0E0C               	movlw	12
 36232  010F04  6EDF               	movwf	indf2,c
 36233                           
 36234                           ; BSR set to: 0
 36235                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36236  010F06  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36237  010F0A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36238  010F0E  0E00               	movlw	0
 36239  010F10  8EDB               	bsf	plusw2,7,c
 36240                           
 36241                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 36242  010F12  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36243  010F16  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36244  010F1A  0E04               	movlw	4
 36245  010F1C  6EDF               	movwf	indf2,c
 36246                           
 36247                           ; BSR set to: 0
 36248                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36249  010F1E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36250  010F22  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36251  010F26  0E00               	movlw	0
 36252  010F28  8EDB               	bsf	plusw2,7,c
 36253                           
 36254                           ;usb_device.c: 1089: }
 36255  010F2A  0012               	return	
 36256  010F2C                     l192:
 36257                           
 36258                           ; BSR set to: 0
 36259                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 36260                           
 36261                           ; BSR set to: 0
 36262  010F2C  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36263  010F2E  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 36264  010F30  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 36265  010F32  90D8               	bcf	status,0,c
 36266  010F34  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36267  010F36  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36268  010F38  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36269  010F3A  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 36270  010F3C  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 36271  010F3E  90D8               	bcf	status,0,c
 36272  010F40  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36273  010F42  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36274  010F44  90D8               	bcf	status,0,c
 36275  010F46  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36276  010F48  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36277  010F4A  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 36278  010F4C  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 36279  010F4E  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 36280  010F50  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 36281  010F52  90D8               	bcf	status,0,c
 36282  010F54  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36283  010F56  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36284  010F58  90D8               	bcf	status,0,c
 36285  010F5A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36286  010F5C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36287  010F5E  0E00               	movlw	0
 36288  010F60  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 36289  010F62  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36290  010F64  0E0D               	movlw	13
 36291  010F66  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 36292  010F68  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36293                           
 36294                           ; BSR set to: 0
 36295                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 36296  010F6A  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36297  010F6E  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36298  010F72  0E00               	movlw	0
 36299  010F74  84DB               	bsf	plusw2,2,c
 36300                           
 36301                           ; BSR set to: 0
 36302                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 36303  010F76  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36304  010F7A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36305  010F7E  0E00               	movlw	0
 36306  010F80  8EDB               	bsf	plusw2,7,c
 36307                           
 36308                           ; BSR set to: 0
 36309                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36310  010F82  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36311  010F84  0D04               	mullw	4
 36312  010F86  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36313  010F8A  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36314  010F8E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36315  010F90  0D02               	mullw	2
 36316  010F92  50F3               	movf	prodl,w,c
 36317  010F94  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36318  010F96  50F4               	movf	prodh,w,c
 36319  010F98  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36320  010F9A  90D8               	bcf	status,0,c
 36321  010F9C  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36322  010F9E  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36323  010FA0  90D8               	bcf	status,0,c
 36324  010FA2  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36325  010FA4  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36326  010FA6  0E04               	movlw	4
 36327  010FA8  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36328  010FAA  0E00               	movlw	0
 36329  010FAC  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36330  010FAE  0E00               	movlw	0
 36331  010FB0  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36332  010FB2  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36333  010FB4  0E0D               	movlw	13
 36334  010FB6  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36335  010FB8  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36336                           
 36337                           ; BSR set to: 0
 36338                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36339  010FBA  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36340  010FBE  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36341  010FC2  0E00               	movlw	0
 36342  010FC4  84DB               	bsf	plusw2,2,c
 36343                           
 36344                           ; BSR set to: 0
 36345                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36346  010FC6  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36347  010FCA  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36348  010FCE  0E00               	movlw	0
 36349  010FD0  8EDB               	bsf	plusw2,7,c
 36350  010FD2  0012               	return	
 36351  010FD4                     __end_of_USBStallEndpoint:
 36352                           	opt stack 0
 36353                           tosu	equ	0xFFF
 36354                           tosh	equ	0xFFE
 36355                           tosl	equ	0xFFD
 36356                           pclath	equ	0xFFA
 36357                           tblptru	equ	0xFF8
 36358                           tblptrh	equ	0xFF7
 36359                           tblptrl	equ	0xFF6
 36360                           tablat	equ	0xFF5
 36361                           prodh	equ	0xFF4
 36362                           prodl	equ	0xFF3
 36363                           intcon	equ	0xFF2
 36364                           postinc0	equ	0xFEE
 36365                           wreg	equ	0xFE8
 36366                           indf1	equ	0xFE7
 36367                           postinc1	equ	0xFE6
 36368                           postdec1	equ	0xFE5
 36369                           plusw1	equ	0xFE3
 36370                           fsr1h	equ	0xFE2
 36371                           fsr1l	equ	0xFE1
 36372                           indf2	equ	0xFDF
 36373                           postinc2	equ	0xFDE
 36374                           postdec2	equ	0xFDD
 36375                           plusw2	equ	0xFDB
 36376                           fsr2h	equ	0xFDA
 36377                           fsr2l	equ	0xFD9
 36378                           status	equ	0xFD8
 36379                           
 36380 ;; *************** function _ResetSenseData *****************
 36381 ;; Defined at:
 36382 ;;		line 1373 in file "usb_device_msd.c"
 36383 ;; Parameters:    Size  Location     Type
 36384 ;;		None
 36385 ;; Auto vars:     Size  Location     Type
 36386 ;;		None
 36387 ;; Return value:  Size  Location     Type
 36388 ;;                  1    wreg      void 
 36389 ;; Registers used:
 36390 ;;		wreg, status,2
 36391 ;; Tracked objects:
 36392 ;;		On entry : 0/0
 36393 ;;		On exit  : 0/0
 36394 ;;		Unchanged: 0/0
 36395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36400 ;;Total ram usage:        0 bytes
 36401 ;; Hardware stack levels used:    1
 36402 ;; Hardware stack levels required when called:   10
 36403 ;; This function calls:
 36404 ;;		Nothing
 36405 ;; This function is called by:
 36406 ;;		_MSDProcessCommandMediaAbsent
 36407 ;;		_MSDProcessCommandMediaPresent
 36408 ;;		_MSDErrorHandler
 36409 ;; This function uses a non-reentrant model
 36410 ;;
 36411                           
 36412                           	psect	text143
 36413  014294                     __ptext143:
 36414                           	opt stack 0
 36415  014294                     _ResetSenseData:
 36416                           	opt stack 16
 36417                           
 36418                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36419                           
 36420                           ; BSR set to: 0
 36421                           ;incstack = 0
 36422  014294  0101               	movlb	1	; () banked
 36423  014296  9100               	bcf	_gblSenseData& (0+255),0,b
 36424  014298  9300               	bcf	_gblSenseData& (0+255),1,b
 36425  01429A  9500               	bcf	_gblSenseData& (0+255),2,b
 36426  01429C  9700               	bcf	_gblSenseData& (0+255),3,b
 36427  01429E  8900               	bsf	_gblSenseData& (0+255),4,b
 36428  0142A0  8B00               	bsf	_gblSenseData& (0+255),5,b
 36429  0142A2  8D00               	bsf	_gblSenseData& (0+255),6,b
 36430                           
 36431                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36432  0142A4  9F00               	bcf	_gblSenseData& (0+255),7,b
 36433                           
 36434                           ; BSR set to: 1
 36435                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36436  0142A6  0E00               	movlw	0
 36437  0142A8  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 36438                           
 36439                           ; BSR set to: 1
 36440                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36441  0142AA  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 36442  0142AC  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 36443  0142AE  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 36444  0142B0  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 36445                           
 36446                           ; BSR set to: 1
 36447                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36448  0142B2  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 36449                           
 36450                           ; BSR set to: 1
 36451                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36452  0142B4  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 36453                           
 36454                           ; BSR set to: 1
 36455                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36456  0142B6  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 36457                           
 36458                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36459  0142B8  0E00               	movlw	0
 36460  0142BA  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 36461                           
 36462                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36463  0142BC  0E00               	movlw	0
 36464  0142BE  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 36465                           
 36466                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36467  0142C0  0E00               	movlw	0
 36468  0142C2  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 36469                           
 36470                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36471  0142C4  0E00               	movlw	0
 36472  0142C6  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 36473                           
 36474                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36475  0142C8  0E0A               	movlw	10
 36476  0142CA  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 36477                           
 36478                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36479  0142CC  0E00               	movlw	0
 36480  0142CE  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 36481  0142D0  0E00               	movlw	0
 36482  0142D2  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 36483  0142D4  0E00               	movlw	0
 36484  0142D6  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 36485  0142D8  0E00               	movlw	0
 36486  0142DA  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 36487                           
 36488                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36489  0142DC  0E00               	movlw	0
 36490  0142DE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36491                           
 36492                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36493  0142E0  0E00               	movlw	0
 36494  0142E2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36495                           
 36496                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36497  0142E4  0E00               	movlw	0
 36498  0142E6  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 36499                           
 36500                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36501  0142E8  0E00               	movlw	0
 36502  0142EA  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 36503                           
 36504                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36505  0142EC  0E00               	movlw	0
 36506  0142EE  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 36507                           
 36508                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36509  0142F0  0E00               	movlw	0
 36510  0142F2  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 36511                           
 36512                           ; BSR set to: 1
 36513  0142F4  0012               	return		;funcret
 36514  0142F6                     __end_of_ResetSenseData:
 36515                           	opt stack 0
 36516                           tosu	equ	0xFFF
 36517                           tosh	equ	0xFFE
 36518                           tosl	equ	0xFFD
 36519                           pclath	equ	0xFFA
 36520                           tblptru	equ	0xFF8
 36521                           tblptrh	equ	0xFF7
 36522                           tblptrl	equ	0xFF6
 36523                           tablat	equ	0xFF5
 36524                           prodh	equ	0xFF4
 36525                           prodl	equ	0xFF3
 36526                           intcon	equ	0xFF2
 36527                           postinc0	equ	0xFEE
 36528                           wreg	equ	0xFE8
 36529                           indf1	equ	0xFE7
 36530                           postinc1	equ	0xFE6
 36531                           postdec1	equ	0xFE5
 36532                           plusw1	equ	0xFE3
 36533                           fsr1h	equ	0xFE2
 36534                           fsr1l	equ	0xFE1
 36535                           indf2	equ	0xFDF
 36536                           postinc2	equ	0xFDE
 36537                           postdec2	equ	0xFDD
 36538                           plusw2	equ	0xFDB
 36539                           fsr2h	equ	0xFDA
 36540                           fsr2l	equ	0xFD9
 36541                           status	equ	0xFD8
 36542                           
 36543 ;; *************** function _ExternalFlash_SectorRead *****************
 36544 ;; Defined at:
 36545 ;;		line 40 in file "external_flash.c"
 36546 ;; Parameters:    Size  Location     Type
 36547 ;;  config          2   43[BANK0 ] PTR void 
 36548 ;;		 -> NULL(0), 
 36549 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36550 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36551 ;;		 -> msd_buffer(512), 
 36552 ;; Auto vars:     Size  Location     Type
 36553 ;;  page            2   51[BANK0 ] unsigned int 
 36554 ;; Return value:  Size  Location     Type
 36555 ;;                  1    wreg      unsigned char 
 36556 ;; Registers used:
 36557 ;;		wreg, status,2, status,0, cstack
 36558 ;; Tracked objects:
 36559 ;;		On entry : 0/0
 36560 ;;		On exit  : 0/0
 36561 ;;		Unchanged: 0/0
 36562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36563 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36564 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36566 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36567 ;;Total ram usage:       10 bytes
 36568 ;; Hardware stack levels used:    1
 36569 ;; Hardware stack levels required when called:   15
 36570 ;; This function calls:
 36571 ;;		_flash_sector_read
 36572 ;; This function is called by:
 36573 ;;		_MSDReadHandler
 36574 ;; This function uses a non-reentrant model
 36575 ;;
 36576                           
 36577                           	psect	text144
 36578  01527A                     __ptext144:
 36579                           	opt stack 0
 36580  01527A                     _ExternalFlash_SectorRead:
 36581                           	opt stack 10
 36582                           
 36583                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 36584                           
 36585                           ; BSR set to: 1
 36586                           ;incstack = 0
 36587  01527A  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36588  01527E  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36589                           
 36590                           ;external_flash.c: 45: if(sector_addr >= 8192)
 36591  015282  0100               	movlb	0	; () banked
 36592  015284  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36593  015286  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36594  015288  E104               	bnz	u10940
 36595  01528A  0E20               	movlw	32
 36596  01528C  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36597  01528E  A0D8               	btfss	status,0,c
 36598  015290  D002               	goto	l1677
 36599  015292                     u10940:
 36600                           
 36601                           ; BSR set to: 0
 36602                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 36603  015292  0E00               	movlw	0
 36604                           
 36605                           ; BSR set to: 0
 36606  015294  0012               	return	
 36607  015296                     l1677:
 36608                           
 36609                           ; BSR set to: 0
 36610                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 36611                           
 36612                           ; BSR set to: 0
 36613  015296  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 36614  01529A  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 36615  01529E  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 36616  0152A2  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 36617  0152A6  EC04  F0AB         	call	_flash_sector_read	;wreg free
 36618                           
 36619                           ;external_flash.c: 53: return 1;
 36620  0152AA  0E01               	movlw	1
 36621  0152AC  0012               	return	
 36622  0152AE                     __end_of_ExternalFlash_SectorRead:
 36623                           	opt stack 0
 36624                           tosu	equ	0xFFF
 36625                           tosh	equ	0xFFE
 36626                           tosl	equ	0xFFD
 36627                           pclath	equ	0xFFA
 36628                           tblptru	equ	0xFF8
 36629                           tblptrh	equ	0xFF7
 36630                           tblptrl	equ	0xFF6
 36631                           tablat	equ	0xFF5
 36632                           prodh	equ	0xFF4
 36633                           prodl	equ	0xFF3
 36634                           intcon	equ	0xFF2
 36635                           postinc0	equ	0xFEE
 36636                           wreg	equ	0xFE8
 36637                           indf1	equ	0xFE7
 36638                           postinc1	equ	0xFE6
 36639                           postdec1	equ	0xFE5
 36640                           plusw1	equ	0xFE3
 36641                           fsr1h	equ	0xFE2
 36642                           fsr1l	equ	0xFE1
 36643                           indf2	equ	0xFDF
 36644                           postinc2	equ	0xFDE
 36645                           postdec2	equ	0xFDD
 36646                           plusw2	equ	0xFDB
 36647                           fsr2h	equ	0xFDA
 36648                           fsr2l	equ	0xFD9
 36649                           status	equ	0xFD8
 36650                           
 36651 ;; *************** function _flash_sector_read *****************
 36652 ;; Defined at:
 36653 ;;		line 426 in file "flash.c"
 36654 ;; Parameters:    Size  Location     Type
 36655 ;;  page            2   39[BANK0 ] unsigned int 
 36656 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36657 ;;		 -> buffer(512), msd_buffer(512), 
 36658 ;; Auto vars:     Size  Location     Type
 36659 ;;		None
 36660 ;; Return value:  Size  Location     Type
 36661 ;;                  1    wreg      void 
 36662 ;; Registers used:
 36663 ;;		wreg, status,2, status,0, cstack
 36664 ;; Tracked objects:
 36665 ;;		On entry : 0/0
 36666 ;;		On exit  : 0/0
 36667 ;;		Unchanged: 0/0
 36668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36673 ;;Total ram usage:        4 bytes
 36674 ;; Hardware stack levels used:    1
 36675 ;; Hardware stack levels required when called:   14
 36676 ;; This function calls:
 36677 ;;		__flash_partial_read
 36678 ;; This function is called by:
 36679 ;;		_ExternalFlash_SectorRead
 36680 ;;		__get_available_cluster
 36681 ;;		__find_nth_cluster
 36682 ;;		__make_cluster_chain
 36683 ;;		_fat_find_file
 36684 ;;		_fat_get_format_status
 36685 ;; This function uses a non-reentrant model
 36686 ;;
 36687                           
 36688                           	psect	text145
 36689  015608                     __ptext145:
 36690                           	opt stack 0
 36691  015608                     _flash_sector_read:
 36692                           	opt stack 13
 36693                           
 36694                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 36695                           
 36696                           ;incstack = 0
 36697  015608  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 36698  01560C  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 36699  015610  0E00               	movlw	0
 36700  015612  0100               	movlb	0	; () banked
 36701  015614  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 36702  015616  0E00               	movlw	0
 36703  015618  6F75               	movwf	__flash_partial_read@start& (0+255),b
 36704  01561A  0E02               	movlw	2
 36705  01561C  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 36706  01561E  0E00               	movlw	0
 36707  015620  6F77               	movwf	__flash_partial_read@length& (0+255),b
 36708  015622  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 36709  015626  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 36710  01562A  EC8A  F09E         	call	__flash_partial_read	;wreg free
 36711  01562E  0012               	return		;funcret
 36712  015630                     __end_of_flash_sector_read:
 36713                           	opt stack 0
 36714                           tosu	equ	0xFFF
 36715                           tosh	equ	0xFFE
 36716                           tosl	equ	0xFFD
 36717                           pclath	equ	0xFFA
 36718                           tblptru	equ	0xFF8
 36719                           tblptrh	equ	0xFF7
 36720                           tblptrl	equ	0xFF6
 36721                           tablat	equ	0xFF5
 36722                           prodh	equ	0xFF4
 36723                           prodl	equ	0xFF3
 36724                           intcon	equ	0xFF2
 36725                           postinc0	equ	0xFEE
 36726                           wreg	equ	0xFE8
 36727                           indf1	equ	0xFE7
 36728                           postinc1	equ	0xFE6
 36729                           postdec1	equ	0xFE5
 36730                           plusw1	equ	0xFE3
 36731                           fsr1h	equ	0xFE2
 36732                           fsr1l	equ	0xFE1
 36733                           indf2	equ	0xFDF
 36734                           postinc2	equ	0xFDE
 36735                           postdec2	equ	0xFDD
 36736                           plusw2	equ	0xFDB
 36737                           fsr2h	equ	0xFDA
 36738                           fsr2l	equ	0xFD9
 36739                           status	equ	0xFD8
 36740                           
 36741 ;; *************** function __flash_partial_read *****************
 36742 ;; Defined at:
 36743 ;;		line 309 in file "flash.c"
 36744 ;; Parameters:    Size  Location     Type
 36745 ;;  page            2   19[BANK0 ] unsigned int 
 36746 ;;  start           2   21[BANK0 ] unsigned int 
 36747 ;;  length          2   23[BANK0 ] unsigned int 
 36748 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36749 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36750 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36751 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 36752 ;; Auto vars:     Size  Location     Type
 36753 ;;  command         4   31[BANK0 ] unsigned char [4]
 36754 ;;  address         4   35[BANK0 ] unsigned long 
 36755 ;; Return value:  Size  Location     Type
 36756 ;;                  1    wreg      void 
 36757 ;; Registers used:
 36758 ;;		wreg, status,2, status,0, cstack
 36759 ;; Tracked objects:
 36760 ;;		On entry : 0/0
 36761 ;;		On exit  : 0/0
 36762 ;;		Unchanged: 0/0
 36763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36764 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36765 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36767 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36768 ;;Total ram usage:       20 bytes
 36769 ;; Hardware stack levels used:    1
 36770 ;; Hardware stack levels required when called:   13
 36771 ;; This function calls:
 36772 ;;		__flash_is_busy
 36773 ;;		_spi_tx_rx
 36774 ;; This function is called by:
 36775 ;;		_flash_sector_read
 36776 ;;		_flash_partial_read
 36777 ;; This function uses a non-reentrant model
 36778 ;;
 36779                           
 36780                           	psect	text146
 36781  013D14                     __ptext146:
 36782                           	opt stack 0
 36783  013D14                     __flash_partial_read:
 36784                           	opt stack 13
 36785                           
 36786                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 36787                           
 36788                           ;incstack = 0
 36789  013D14  EC62  F0AB         	call	__flash_is_busy	;wreg free
 36790  013D18  0900               	iorlw	0
 36791  013D1A  A4D8               	btfss	status,2,c
 36792  013D1C  D7FB               	goto	__flash_partial_read
 36793                           
 36794                           ;flash.c: 318: address = page;
 36795  013D1E  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 36796  013D22  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36797  013D26  0100               	movlb	0	; () banked
 36798  013D28  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 36799  013D2A  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 36800                           
 36801                           ; BSR set to: 0
 36802                           ;flash.c: 319: address <<= 9;
 36803  013D2C  0E09               	movlw	9
 36804  013D2E                     u9785:
 36805  013D2E  90D8               	bcf	status,0,c
 36806  013D30  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 36807  013D32  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 36808  013D34  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 36809  013D36  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 36810  013D38  2EE8               	decfsz	wreg,f,c
 36811  013D3A  D7F9               	goto	u9785
 36812                           
 36813                           ; BSR set to: 0
 36814                           ;flash.c: 320: address |= start;
 36815  013D3C  5175               	movf	__flash_partial_read@start& (0+255),w,b
 36816  013D3E  6F7B               	movwf	??__flash_partial_read& (0+255),b
 36817  013D40  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 36818  013D42  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 36819  013D44  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 36820  013D46  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 36821  013D48  517B               	movf	??__flash_partial_read& (0+255),w,b
 36822  013D4A  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 36823  013D4C  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 36824  013D4E  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 36825  013D50  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 36826  013D52  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 36827  013D54  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 36828  013D56  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 36829                           
 36830                           ; BSR set to: 0
 36831                           ;flash.c: 323: command[0] = 0x03;
 36832  013D58  0E03               	movlw	3
 36833  013D5A  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 36834                           
 36835                           ; BSR set to: 0
 36836                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36837  013D5C  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36838                           
 36839                           ; BSR set to: 0
 36840                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36841  013D60  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 36842  013D62  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 36843                           
 36844                           ; BSR set to: 0
 36845                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36846  013D64  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36847                           
 36848                           ; BSR set to: 0
 36849                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 36850  013D68  0E7F               	movlw	low __flash_partial_read@command
 36851  013D6A  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36852  013D6C  0E00               	movlw	high __flash_partial_read@command
 36853  013D6E  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36854  013D70  0E00               	movlw	0
 36855  013D72  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36856  013D74  0E04               	movlw	4
 36857  013D76  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36858  013D78  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 36859  013D7C  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36860  013D80  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36861  013D84  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36862  013D88  EC47  F09A         	call	_spi_tx_rx	;wreg free
 36863  013D8C  0012               	return		;funcret
 36864  013D8E                     __end_of__flash_partial_read:
 36865                           	opt stack 0
 36866                           tosu	equ	0xFFF
 36867                           tosh	equ	0xFFE
 36868                           tosl	equ	0xFFD
 36869                           pclath	equ	0xFFA
 36870                           tblptru	equ	0xFF8
 36871                           tblptrh	equ	0xFF7
 36872                           tblptrl	equ	0xFF6
 36873                           tablat	equ	0xFF5
 36874                           prodh	equ	0xFF4
 36875                           prodl	equ	0xFF3
 36876                           intcon	equ	0xFF2
 36877                           postinc0	equ	0xFEE
 36878                           wreg	equ	0xFE8
 36879                           indf1	equ	0xFE7
 36880                           postinc1	equ	0xFE6
 36881                           postdec1	equ	0xFE5
 36882                           plusw1	equ	0xFE3
 36883                           fsr1h	equ	0xFE2
 36884                           fsr1l	equ	0xFE1
 36885                           indf2	equ	0xFDF
 36886                           postinc2	equ	0xFDE
 36887                           postdec2	equ	0xFDD
 36888                           plusw2	equ	0xFDB
 36889                           fsr2h	equ	0xFDA
 36890                           fsr2l	equ	0xFD9
 36891                           status	equ	0xFD8
 36892                           
 36893 ;; *************** function __flash_is_busy *****************
 36894 ;; Defined at:
 36895 ;;		line 281 in file "flash.c"
 36896 ;; Parameters:    Size  Location     Type
 36897 ;;		None
 36898 ;; Auto vars:     Size  Location     Type
 36899 ;;  status          2   17[BANK0 ] unsigned int 
 36900 ;; Return value:  Size  Location     Type
 36901 ;;                  1    wreg      unsigned char 
 36902 ;; Registers used:
 36903 ;;		wreg, status,2, status,0, cstack
 36904 ;; Tracked objects:
 36905 ;;		On entry : 0/0
 36906 ;;		On exit  : 0/0
 36907 ;;		Unchanged: 0/0
 36908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36910 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36913 ;;Total ram usage:        2 bytes
 36914 ;; Hardware stack levels used:    1
 36915 ;; Hardware stack levels required when called:   12
 36916 ;; This function calls:
 36917 ;;		__flash_get_status
 36918 ;;		__flash_wakeup
 36919 ;; This function is called by:
 36920 ;;		__flash_set_page_size
 36921 ;;		__flash_copy_page_to_buffer
 36922 ;;		__flash_compare_page_to_buffer
 36923 ;;		__flash_write_to_buffer
 36924 ;;		__flash_write_page_from_buffer
 36925 ;;		__flash_partial_read
 36926 ;;		_flash_partial_write
 36927 ;;		__flash_erase_page
 36928 ;;		__flash_buffer_read
 36929 ;;		_flash_is_busy
 36930 ;;		_flash_set_power_state
 36931 ;; This function uses a non-reentrant model
 36932 ;;
 36933                           
 36934                           	psect	text147
 36935  0156C4                     __ptext147:
 36936                           	opt stack 0
 36937  0156C4                     __flash_is_busy:
 36938                           	opt stack 15
 36939                           
 36940                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36941                           
 36942                           ;incstack = 0
 36943  0156C4  0101               	movlb	1	; () banked
 36944  0156C6  515A               	movf	_power_state& (0+255),w,b
 36945  0156C8  A4D8               	btfss	status,2,c
 36946                           
 36947                           ; BSR set to: 1
 36948                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 36949  0156CA  EC2B  F0A4         	call	__flash_wakeup	;wreg free
 36950                           
 36951                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 36952  0156CE  EC57  F0A9         	call	__flash_get_status	;wreg free
 36953  0156D2  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 36954  0156D6  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 36955                           
 36956                           ;flash.c: 295: if(status & 0b0000000010000000)
 36957  0156DA  0100               	movlb	0	; () banked
 36958  0156DC  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 36959  0156DE  D002               	goto	l1581
 36960                           
 36961                           ; BSR set to: 0
 36962                           ;flash.c: 296: {;flash.c: 298: return 0;
 36963  0156E0  0E00               	movlw	0
 36964                           
 36965                           ; BSR set to: 0
 36966                           ;flash.c: 299: }
 36967                           
 36968                           ; BSR set to: 0
 36969  0156E2  0012               	return	
 36970  0156E4                     l1581:
 36971                           
 36972                           ; BSR set to: 0
 36973                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 36974                           
 36975                           ; BSR set to: 0
 36976  0156E4  0E01               	movlw	1
 36977                           
 36978                           ; BSR set to: 0
 36979  0156E6  0012               	return	
 36980  0156E8                     __end_of__flash_is_busy:
 36981                           	opt stack 0
 36982                           tosu	equ	0xFFF
 36983                           tosh	equ	0xFFE
 36984                           tosl	equ	0xFFD
 36985                           pclath	equ	0xFFA
 36986                           tblptru	equ	0xFF8
 36987                           tblptrh	equ	0xFF7
 36988                           tblptrl	equ	0xFF6
 36989                           tablat	equ	0xFF5
 36990                           prodh	equ	0xFF4
 36991                           prodl	equ	0xFF3
 36992                           intcon	equ	0xFF2
 36993                           postinc0	equ	0xFEE
 36994                           wreg	equ	0xFE8
 36995                           indf1	equ	0xFE7
 36996                           postinc1	equ	0xFE6
 36997                           postdec1	equ	0xFE5
 36998                           plusw1	equ	0xFE3
 36999                           fsr1h	equ	0xFE2
 37000                           fsr1l	equ	0xFE1
 37001                           indf2	equ	0xFDF
 37002                           postinc2	equ	0xFDE
 37003                           postdec2	equ	0xFDD
 37004                           plusw2	equ	0xFDB
 37005                           fsr2h	equ	0xFDA
 37006                           fsr2l	equ	0xFD9
 37007                           status	equ	0xFD8
 37008                           
 37009 ;; *************** function __flash_wakeup *****************
 37010 ;; Defined at:
 37011 ;;		line 128 in file "flash.c"
 37012 ;; Parameters:    Size  Location     Type
 37013 ;;		None
 37014 ;; Auto vars:     Size  Location     Type
 37015 ;;  command         1    8[BANK0 ] unsigned char 
 37016 ;; Return value:  Size  Location     Type
 37017 ;;                  1    wreg      void 
 37018 ;; Registers used:
 37019 ;;		wreg, status,2, status,0, cstack
 37020 ;; Tracked objects:
 37021 ;;		On entry : 0/0
 37022 ;;		On exit  : 0/0
 37023 ;;		Unchanged: 0/0
 37024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37028 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37029 ;;Total ram usage:        1 bytes
 37030 ;; Hardware stack levels used:    1
 37031 ;; Hardware stack levels required when called:   11
 37032 ;; This function calls:
 37033 ;;		_spi_tx
 37034 ;; This function is called by:
 37035 ;;		__flash_is_busy
 37036 ;;		_flash_set_power_state
 37037 ;; This function uses a non-reentrant model
 37038 ;;
 37039                           
 37040                           	psect	text148
 37041  014856                     __ptext148:
 37042                           	opt stack 0
 37043  014856                     __flash_wakeup:
 37044                           	opt stack 15
 37045                           
 37046                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 37047                           
 37048                           ; BSR set to: 0
 37049                           ;incstack = 0
 37050  014856  D022               	goto	l1530
 37051  014858                     
 37052                           ;flash.c: 135: command = 0xAB;
 37053  014858  0EAB               	movlw	171
 37054  01485A  0100               	movlb	0	; () banked
 37055  01485C  6F68               	movwf	__flash_wakeup@command& (0+255),b
 37056                           
 37057                           ; BSR set to: 0
 37058                           ;flash.c: 136: spi_tx(&command, 1);
 37059  01485E  0E68               	movlw	low __flash_wakeup@command
 37060  014860  6F60               	movwf	spi_tx@data& (0+255),b
 37061  014862  0E00               	movlw	high __flash_wakeup@command
 37062  014864  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37063  014866  0E00               	movlw	0
 37064  014868  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37065  01486A  0E01               	movlw	1
 37066  01486C  6F62               	movwf	spi_tx@length& (0+255),b
 37067  01486E  EC4E  F0A3         	call	_spi_tx	;wreg free
 37068                           
 37069                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37070  014872  0E17               	movlw	23
 37071  014874                     u19117:
 37072  014874  2EE8               	decfsz	wreg,f,c
 37073  014876  D7FE               	bra	u19117
 37074  014878  F000               	nop	
 37075                           
 37076                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 37077  01487A  0E00               	movlw	0
 37078  01487C  0101               	movlb	1	; () banked
 37079  01487E  6F5A               	movwf	_power_state& (0+255),b
 37080                           
 37081                           ;flash.c: 139: break;
 37082  014880  0012               	return	
 37083  014882                     l1533:
 37084                           
 37085                           ; BSR set to: 1
 37086                           ;flash.c: 144: LATDbits.LD7 = 0;
 37087  014882  9E8C               	bcf	3980,7,c	;volatile
 37088                           
 37089                           ; BSR set to: 1
 37090                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37091  014884  0E0D               	movlw	13
 37092  014886                     u19127:
 37093  014886  2EE8               	decfsz	wreg,f,c
 37094  014888  D7FE               	bra	u19127
 37095  01488A  F000               	nop	
 37096                           
 37097                           ;flash.c: 146: LATDbits.LD7 = 1;
 37098  01488C  8E8C               	bsf	3980,7,c	;volatile
 37099                           
 37100                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37101  01488E  0E50               	movlw	80
 37102  014890                     u19137:
 37103  014890  2EE8               	decfsz	wreg,f,c
 37104  014892  D7FE               	bra	u19137
 37105                           
 37106                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 37107  014894  0E00               	movlw	0
 37108  014896  0101               	movlb	1	; () banked
 37109  014898  6F5A               	movwf	_power_state& (0+255),b
 37110                           
 37111                           ; BSR set to: 1
 37112                           ;flash.c: 150: }
 37113                           
 37114                           ;flash.c: 149: break;
 37115  01489A  0012               	return	
 37116  01489C                     l1530:
 37117                           
 37118                           ; BSR set to: 1
 37119  01489C  0101               	movlb	1	; () banked
 37120  01489E  515A               	movf	_power_state& (0+255),w,b
 37121                           
 37122                           ; Switch size 1, requested type "space"
 37123                           ; Number of cases is 2, Range of values is 1 to 2
 37124                           ; switch strategies available:
 37125                           ; Name         Instructions Cycles
 37126                           ; simple_byte            7     4 (average)
 37127                           ;	Chosen strategy is simple_byte
 37128  0148A0  0A01               	xorlw	1	; case 1
 37129  0148A2  B4D8               	btfsc	status,2,c
 37130  0148A4  D7D9               	goto	l1531
 37131  0148A6  0A03               	xorlw	3	; case 2
 37132  0148A8  A4D8               	btfss	status,2,c
 37133  0148AA  0012               	return	
 37134  0148AC  D7EA               	goto	l1533
 37135  0148AE                     __end_of__flash_wakeup:
 37136                           	opt stack 0
 37137                           tosu	equ	0xFFF
 37138                           tosh	equ	0xFFE
 37139                           tosl	equ	0xFFD
 37140                           pclath	equ	0xFFA
 37141                           tblptru	equ	0xFF8
 37142                           tblptrh	equ	0xFF7
 37143                           tblptrl	equ	0xFF6
 37144                           tablat	equ	0xFF5
 37145                           prodh	equ	0xFF4
 37146                           prodl	equ	0xFF3
 37147                           intcon	equ	0xFF2
 37148                           postinc0	equ	0xFEE
 37149                           wreg	equ	0xFE8
 37150                           indf1	equ	0xFE7
 37151                           postinc1	equ	0xFE6
 37152                           postdec1	equ	0xFE5
 37153                           plusw1	equ	0xFE3
 37154                           fsr1h	equ	0xFE2
 37155                           fsr1l	equ	0xFE1
 37156                           indf2	equ	0xFDF
 37157                           postinc2	equ	0xFDE
 37158                           postdec2	equ	0xFDD
 37159                           plusw2	equ	0xFDB
 37160                           fsr2h	equ	0xFDA
 37161                           fsr2l	equ	0xFD9
 37162                           status	equ	0xFD8
 37163                           
 37164 ;; *************** function _spi_tx *****************
 37165 ;; Defined at:
 37166 ;;		line 108 in file "spi.c"
 37167 ;; Parameters:    Size  Location     Type
 37168 ;;  data            2    0[BANK0 ] PTR unsigned char 
 37169 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37170 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37171 ;;  length          2    2[BANK0 ] unsigned int 
 37172 ;; Auto vars:     Size  Location     Type
 37173 ;;		None
 37174 ;; Return value:  Size  Location     Type
 37175 ;;                  1    wreg      void 
 37176 ;; Registers used:
 37177 ;;		wreg, status,2, status,0
 37178 ;; Tracked objects:
 37179 ;;		On entry : 0/0
 37180 ;;		On exit  : 0/0
 37181 ;;		Unchanged: 0/0
 37182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37186 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37187 ;;Total ram usage:        8 bytes
 37188 ;; Hardware stack levels used:    1
 37189 ;; Hardware stack levels required when called:   10
 37190 ;; This function calls:
 37191 ;;		Nothing
 37192 ;; This function is called by:
 37193 ;;		__flash_set_page_size
 37194 ;;		__flash_wakeup
 37195 ;;		__flash_copy_page_to_buffer
 37196 ;;		__flash_compare_page_to_buffer
 37197 ;;		__flash_write_page_from_buffer
 37198 ;;		__flash_erase_page
 37199 ;;		_flash_set_power_state
 37200 ;; This function uses a non-reentrant model
 37201 ;;
 37202                           
 37203                           	psect	text149
 37204  01469C                     __ptext149:
 37205                           	opt stack 0
 37206  01469C                     _spi_tx:
 37207                           	opt stack 17
 37208                           
 37209                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 37210                           
 37211                           ; BSR set to: 1
 37212                           ;incstack = 0
 37213  01469C  9E88               	bcf	3976,7,c	;volatile
 37214                           
 37215                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 37216  01469E  9C88               	bcf	3976,6,c	;volatile
 37217                           
 37218                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 37219  0146A0  8A88               	bsf	3976,5,c	;volatile
 37220                           
 37221                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 37222  0146A2  9888               	bcf	3976,4,c	;volatile
 37223                           
 37224                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 37225  0146A4  9688               	bcf	3976,3,c	;volatile
 37226                           
 37227                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 37228  0146A6  8488               	bsf	3976,2,c	;volatile
 37229                           
 37230                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 37231  0146A8  9288               	bcf	3976,1,c	;volatile
 37232                           
 37233                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 37234  0146AA  9886               	bcf	3974,4,c	;volatile
 37235  0146AC  9A86               	bcf	3974,5,c	;volatile
 37236  0146AE  9C86               	bcf	3974,6,c	;volatile
 37237  0146B0  9E86               	bcf	3974,7,c	;volatile
 37238                           
 37239                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 37240  0146B2  9086               	bcf	3974,0,c	;volatile
 37241  0146B4  9286               	bcf	3974,1,c	;volatile
 37242  0146B6  9486               	bcf	3974,2,c	;volatile
 37243  0146B8  9686               	bcf	3974,3,c	;volatile
 37244                           
 37245                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37246  0146BA  0100               	movlb	0	; () banked
 37247  0146BC  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 37248  0146BE  6E6A               	movwf	3946,c	;volatile
 37249                           
 37250                           ; BSR set to: 0
 37251                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37252  0146C0  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 37253                           
 37254                           ; BSR set to: 0
 37255                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37256  0146C4  0EFF               	movlw	255
 37257  0146C6  6F64               	movwf	??_spi_tx& (0+255),b
 37258  0146C8  0EFF               	movlw	255
 37259  0146CA  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 37260  0146CC  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 37261  0146D0  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 37262  0146D4  5164               	movf	??_spi_tx& (0+255),w,b
 37263  0146D6  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 37264  0146D8  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 37265  0146DA  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 37266  0146DC  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 37267  0146E0  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 37268  0146E2  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 37269  0146E4  6E66               	movwf	3942,c	;volatile
 37270                           
 37271                           ; BSR set to: 0
 37272                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37273  0146E6  0562               	decf	spi_tx@length& (0+255),w,b
 37274  0146E8  6E67               	movwf	3943,c	;volatile
 37275                           
 37276                           ; BSR set to: 0
 37277                           ;spi.c: 136: LATDbits.LD7 = 0;
 37278  0146EA  9E8C               	bcf	3980,7,c	;volatile
 37279                           
 37280                           ; BSR set to: 0
 37281                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 37282  0146EC  8088               	bsf	3976,0,c	;volatile
 37283  0146EE                     
 37284                           ; BSR set to: 0
 37285  0146EE  B088               	btfsc	3976,0,c	;volatile
 37286  0146F0  D7FE               	goto	l2172
 37287                           
 37288                           ;spi.c: 139: LATDbits.LD7 = 1;
 37289  0146F2  8E8C               	bsf	3980,7,c	;volatile
 37290  0146F4  0012               	return		;funcret
 37291  0146F6                     __end_of_spi_tx:
 37292                           	opt stack 0
 37293                           tosu	equ	0xFFF
 37294                           tosh	equ	0xFFE
 37295                           tosl	equ	0xFFD
 37296                           pclath	equ	0xFFA
 37297                           tblptru	equ	0xFF8
 37298                           tblptrh	equ	0xFF7
 37299                           tblptrl	equ	0xFF6
 37300                           tablat	equ	0xFF5
 37301                           prodh	equ	0xFF4
 37302                           prodl	equ	0xFF3
 37303                           intcon	equ	0xFF2
 37304                           postinc0	equ	0xFEE
 37305                           wreg	equ	0xFE8
 37306                           indf1	equ	0xFE7
 37307                           postinc1	equ	0xFE6
 37308                           postdec1	equ	0xFE5
 37309                           plusw1	equ	0xFE3
 37310                           fsr1h	equ	0xFE2
 37311                           fsr1l	equ	0xFE1
 37312                           indf2	equ	0xFDF
 37313                           postinc2	equ	0xFDE
 37314                           postdec2	equ	0xFDD
 37315                           plusw2	equ	0xFDB
 37316                           fsr2h	equ	0xFDA
 37317                           fsr2l	equ	0xFD9
 37318                           status	equ	0xFD8
 37319                           
 37320 ;; *************** function __flash_get_status *****************
 37321 ;; Defined at:
 37322 ;;		line 117 in file "flash.c"
 37323 ;; Parameters:    Size  Location     Type
 37324 ;;		None
 37325 ;; Auto vars:     Size  Location     Type
 37326 ;;  status          2   15[BANK0 ] unsigned int 
 37327 ;;  command         1   14[BANK0 ] unsigned char 
 37328 ;; Return value:  Size  Location     Type
 37329 ;;                  2   12[BANK0 ] unsigned int 
 37330 ;; Registers used:
 37331 ;;		wreg, status,2, status,0, cstack
 37332 ;; Tracked objects:
 37333 ;;		On entry : 0/0
 37334 ;;		On exit  : 0/0
 37335 ;;		Unchanged: 0/0
 37336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37338 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37340 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37341 ;;Total ram usage:        5 bytes
 37342 ;; Hardware stack levels used:    1
 37343 ;; Hardware stack levels required when called:   11
 37344 ;; This function calls:
 37345 ;;		_spi_tx_rx
 37346 ;; This function is called by:
 37347 ;;		__flash_compare_page_to_buffer
 37348 ;;		__flash_is_busy
 37349 ;; This function uses a non-reentrant model
 37350 ;;
 37351                           
 37352                           	psect	text150
 37353  0152AE                     __ptext150:
 37354                           	opt stack 0
 37355  0152AE                     __flash_get_status:
 37356                           	opt stack 15
 37357                           
 37358                           ;flash.c: 121: uint8_t command = 0xD7;
 37359                           
 37360                           ;incstack = 0
 37361  0152AE  0ED7               	movlw	215
 37362  0152B0  0100               	movlb	0	; () banked
 37363  0152B2  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37364                           
 37365                           ; BSR set to: 0
 37366                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37367  0152B4  0E6E               	movlw	low __flash_get_status@command
 37368  0152B6  6F60               	movwf	spi_tx_rx@command& (0+255),b
 37369  0152B8  0E00               	movlw	high __flash_get_status@command
 37370  0152BA  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 37371  0152BC  0E00               	movlw	0
 37372  0152BE  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 37373  0152C0  0E01               	movlw	1
 37374  0152C2  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 37375  0152C4  0E6F               	movlw	low __flash_get_status@status
 37376  0152C6  6F64               	movwf	spi_tx_rx@data& (0+255),b
 37377  0152C8  0E00               	movlw	high __flash_get_status@status
 37378  0152CA  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 37379  0152CC  0E00               	movlw	0
 37380  0152CE  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 37381  0152D0  0E02               	movlw	2
 37382  0152D2  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 37383  0152D4  EC47  F09A         	call	_spi_tx_rx	;wreg free
 37384                           
 37385                           ;flash.c: 124: return status;
 37386  0152D8  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37387  0152DC  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37388  0152E0  0012               	return	
 37389  0152E2                     __end_of__flash_get_status:
 37390                           	opt stack 0
 37391                           tosu	equ	0xFFF
 37392                           tosh	equ	0xFFE
 37393                           tosl	equ	0xFFD
 37394                           pclath	equ	0xFFA
 37395                           tblptru	equ	0xFF8
 37396                           tblptrh	equ	0xFF7
 37397                           tblptrl	equ	0xFF6
 37398                           tablat	equ	0xFF5
 37399                           prodh	equ	0xFF4
 37400                           prodl	equ	0xFF3
 37401                           intcon	equ	0xFF2
 37402                           postinc0	equ	0xFEE
 37403                           wreg	equ	0xFE8
 37404                           indf1	equ	0xFE7
 37405                           postinc1	equ	0xFE6
 37406                           postdec1	equ	0xFE5
 37407                           plusw1	equ	0xFE3
 37408                           fsr1h	equ	0xFE2
 37409                           fsr1l	equ	0xFE1
 37410                           indf2	equ	0xFDF
 37411                           postinc2	equ	0xFDE
 37412                           postdec2	equ	0xFDD
 37413                           plusw2	equ	0xFDB
 37414                           fsr2h	equ	0xFDA
 37415                           fsr2l	equ	0xFD9
 37416                           status	equ	0xFD8
 37417                           
 37418 ;; *************** function _spi_tx_rx *****************
 37419 ;; Defined at:
 37420 ;;		line 199 in file "spi.c"
 37421 ;; Parameters:    Size  Location     Type
 37422 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37423 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 37424 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37425 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37426 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 37427 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 37428 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 37429 ;;  data_length     2    6[BANK0 ] unsigned int 
 37430 ;; Auto vars:     Size  Location     Type
 37431 ;;		None
 37432 ;; Return value:  Size  Location     Type
 37433 ;;                  1    wreg      void 
 37434 ;; Registers used:
 37435 ;;		wreg, status,2, status,0
 37436 ;; Tracked objects:
 37437 ;;		On entry : 0/0
 37438 ;;		On exit  : 0/0
 37439 ;;		Unchanged: 0/0
 37440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37444 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37445 ;;Total ram usage:       12 bytes
 37446 ;; Hardware stack levels used:    1
 37447 ;; Hardware stack levels required when called:   10
 37448 ;; This function calls:
 37449 ;;		Nothing
 37450 ;; This function is called by:
 37451 ;;		__flash_get_status
 37452 ;;		__flash_partial_read
 37453 ;;		__flash_buffer_read
 37454 ;; This function uses a non-reentrant model
 37455 ;;
 37456                           
 37457                           	psect	text151
 37458  01348E                     __ptext151:
 37459                           	opt stack 0
 37460  01348E                     _spi_tx_rx:
 37461                           	opt stack 15
 37462                           
 37463                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 37464                           
 37465                           ;incstack = 0
 37466  01348E  9E88               	bcf	3976,7,c	;volatile
 37467                           
 37468                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 37469  013490  9C88               	bcf	3976,6,c	;volatile
 37470                           
 37471                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 37472  013492  8A88               	bsf	3976,5,c	;volatile
 37473                           
 37474                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 37475  013494  9888               	bcf	3976,4,c	;volatile
 37476                           
 37477                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 37478  013496  9688               	bcf	3976,3,c	;volatile
 37479                           
 37480                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 37481  013498  8488               	bsf	3976,2,c	;volatile
 37482                           
 37483                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 37484  01349A  9288               	bcf	3976,1,c	;volatile
 37485                           
 37486                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 37487  01349C  9886               	bcf	3974,4,c	;volatile
 37488  01349E  9A86               	bcf	3974,5,c	;volatile
 37489  0134A0  9C86               	bcf	3974,6,c	;volatile
 37490  0134A2  9E86               	bcf	3974,7,c	;volatile
 37491                           
 37492                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 37493  0134A4  9086               	bcf	3974,0,c	;volatile
 37494  0134A6  9286               	bcf	3974,1,c	;volatile
 37495  0134A8  9486               	bcf	3974,2,c	;volatile
 37496  0134AA  9686               	bcf	3974,3,c	;volatile
 37497                           
 37498                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37499  0134AC  0100               	movlb	0	; () banked
 37500  0134AE  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 37501  0134B0  6E6A               	movwf	3946,c	;volatile
 37502                           
 37503                           ; BSR set to: 0
 37504                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37505  0134B2  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37506                           
 37507                           ; BSR set to: 0
 37508                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37509  0134B6  0EFF               	movlw	255
 37510  0134B8  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37511  0134BA  0EFF               	movlw	255
 37512  0134BC  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37513  0134BE  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37514  0134C2  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37515  0134C6  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37516  0134C8  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37517  0134CA  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37518  0134CC  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37519  0134CE  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37520  0134D2  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37521  0134D4  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37522  0134D6  6E66               	movwf	3942,c	;volatile
 37523                           
 37524                           ; BSR set to: 0
 37525                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37526  0134D8  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 37527  0134DA  6E67               	movwf	3943,c	;volatile
 37528                           
 37529                           ; BSR set to: 0
 37530                           ;spi.c: 227: LATDbits.LD7 = 0;
 37531  0134DC  9E8C               	bcf	3980,7,c	;volatile
 37532                           
 37533                           ; BSR set to: 0
 37534                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 37535  0134DE  8088               	bsf	3976,0,c	;volatile
 37536  0134E0                     
 37537                           ; BSR set to: 0
 37538  0134E0  B088               	btfsc	3976,0,c	;volatile
 37539  0134E2  D7FE               	goto	l2187
 37540                           
 37541                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 37542  0134E4  9A88               	bcf	3976,5,c	;volatile
 37543                           
 37544                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 37545  0134E6  8888               	bsf	3976,4,c	;volatile
 37546                           
 37547                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 37548  0134E8  9688               	bcf	3976,3,c	;volatile
 37549                           
 37550                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 37551  0134EA  9488               	bcf	3976,2,c	;volatile
 37552                           
 37553                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37554  0134EC  0100               	movlb	0	; () banked
 37555  0134EE  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 37556  0134F0  6E68               	movwf	3944,c	;volatile
 37557                           
 37558                           ; BSR set to: 0
 37559                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37560  0134F2  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37561                           
 37562                           ; BSR set to: 0
 37563                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37564  0134F6  0EFF               	movlw	255
 37565  0134F8  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37566  0134FA  0EFF               	movlw	255
 37567  0134FC  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37568  0134FE  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37569  013502  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37570  013506  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37571  013508  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37572  01350A  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37573  01350C  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37574  01350E  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37575  013512  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37576  013514  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37577  013516  6E66               	movwf	3942,c	;volatile
 37578                           
 37579                           ; BSR set to: 0
 37580                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37581  013518  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 37582  01351A  6E67               	movwf	3943,c	;volatile
 37583                           
 37584                           ; BSR set to: 0
 37585                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 37586  01351C  8088               	bsf	3976,0,c	;volatile
 37587  01351E                     
 37588                           ; BSR set to: 0
 37589  01351E  B088               	btfsc	3976,0,c	;volatile
 37590  013520  D7FE               	goto	l2190
 37591                           
 37592                           ;spi.c: 254: LATDbits.LD7 = 1;
 37593  013522  8E8C               	bsf	3980,7,c	;volatile
 37594  013524  0012               	return		;funcret
 37595  013526                     __end_of_spi_tx_rx:
 37596                           	opt stack 0
 37597                           tosu	equ	0xFFF
 37598                           tosh	equ	0xFFE
 37599                           tosl	equ	0xFFD
 37600                           pclath	equ	0xFFA
 37601                           tblptru	equ	0xFF8
 37602                           tblptrh	equ	0xFF7
 37603                           tblptrl	equ	0xFF6
 37604                           tablat	equ	0xFF5
 37605                           prodh	equ	0xFF4
 37606                           prodl	equ	0xFF3
 37607                           intcon	equ	0xFF2
 37608                           postinc0	equ	0xFEE
 37609                           wreg	equ	0xFE8
 37610                           indf1	equ	0xFE7
 37611                           postinc1	equ	0xFE6
 37612                           postdec1	equ	0xFE5
 37613                           plusw1	equ	0xFE3
 37614                           fsr1h	equ	0xFE2
 37615                           fsr1l	equ	0xFE1
 37616                           indf2	equ	0xFDF
 37617                           postinc2	equ	0xFDE
 37618                           postdec2	equ	0xFDD
 37619                           plusw2	equ	0xFDB
 37620                           fsr2h	equ	0xFDA
 37621                           fsr2l	equ	0xFD9
 37622                           status	equ	0xFD8
 37623                           
 37624 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37625 ;; Defined at:
 37626 ;;		line 993 in file "usb_device_msd.c"
 37627 ;; Parameters:    Size  Location     Type
 37628 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37629 ;; Auto vars:     Size  Location     Type
 37630 ;;		None
 37631 ;; Return value:  Size  Location     Type
 37632 ;;                  1    wreg      void 
 37633 ;; Registers used:
 37634 ;;		wreg, status,2, status,0
 37635 ;; Tracked objects:
 37636 ;;		On entry : 0/0
 37637 ;;		On exit  : 0/0
 37638 ;;		Unchanged: 0/0
 37639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37643 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37644 ;;Total ram usage:        6 bytes
 37645 ;; Hardware stack levels used:    1
 37646 ;; Hardware stack levels required when called:   10
 37647 ;; This function calls:
 37648 ;;		Nothing
 37649 ;; This function is called by:
 37650 ;;		_MSDProcessCommandMediaPresent
 37651 ;; This function uses a non-reentrant model
 37652 ;;
 37653                           
 37654                           	psect	text152
 37655  0129CC                     __ptext152:
 37656                           	opt stack 0
 37657  0129CC                     _MSDComputeDeviceInAndResidue:
 37658                           	opt stack 16
 37659                           
 37660                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37661                           
 37662                           ;incstack = 0
 37663  0129CC  0100               	movlb	0	; () banked
 37664  0129CE  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37665  0129D0  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37666  0129D2  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37667  0129D4  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37668  0129D6  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37669  0129D8  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37670  0129DA  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37671  0129DC  0102               	movlb	2	; () banked
 37672  0129DE  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 37673  0129E0  0100               	movlb	0	; () banked
 37674  0129E2  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37675  0129E4  0102               	movlb	2	; () banked
 37676  0129E6  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 37677  0129E8  0100               	movlb	0	; () banked
 37678  0129EA  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37679  0129EC  0102               	movlb	2	; () banked
 37680  0129EE  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 37681  0129F0  0100               	movlb	0	; () banked
 37682  0129F2  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37683  0129F4  0102               	movlb	2	; () banked
 37684  0129F6  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 37685  0129F8  B0D8               	btfsc	status,0,c
 37686  0129FA  D00E               	goto	l675
 37687                           
 37688                           ; BSR set to: 2
 37689                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37690  0129FC  0E00               	movlw	0
 37691  0129FE  010D               	movlb	13	; () banked
 37692  012A00  6F88               	movwf	136,b	;volatile
 37693  012A02  0E00               	movlw	0
 37694  012A04  6F89               	movwf	137,b	;volatile
 37695  012A06  0E00               	movlw	0
 37696  012A08  6F8A               	movwf	138,b	;volatile
 37697  012A0A  0E00               	movlw	0
 37698  012A0C  6F8B               	movwf	139,b	;volatile
 37699                           
 37700                           ; BSR set to: 13
 37701                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37702  012A0E  C208  F145         	movff	_gblCBW+8,_TransferLength
 37703  012A12  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 37704                           
 37705                           ;usb_device_msd.c: 1002: }
 37706  012A16  0012               	return	
 37707  012A18                     l675:
 37708                           
 37709                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 37710                           
 37711                           ; BSR set to: 13
 37712  012A18  0101               	movlb	1	; () banked
 37713  012A1A  5145               	movf	_TransferLength& (0+255),w,b
 37714  012A1C  0100               	movlb	0	; () banked
 37715  012A1E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37716  012A20  0101               	movlb	1	; () banked
 37717  012A22  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37718  012A24  0100               	movlb	0	; () banked
 37719  012A26  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37720  012A28  B0D8               	btfsc	status,0,c
 37721  012A2A  D004               	goto	l677
 37722                           
 37723                           ; BSR set to: 0
 37724                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37725  012A2C  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37726  012A30  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37727  012A34                     l677:
 37728                           
 37729                           ; BSR set to: 0
 37730                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 37731                           
 37732                           ; BSR set to: 0
 37733  012A34  0101               	movlb	1	; () banked
 37734  012A36  5145               	movf	_TransferLength& (0+255),w,b
 37735  012A38  0100               	movlb	0	; () banked
 37736  012A3A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37737  012A3C  0101               	movlb	1	; () banked
 37738  012A3E  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37739  012A40  0100               	movlb	0	; () banked
 37740  012A42  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37741  012A44  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37742  012A46  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37743  012A48  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37744  012A4A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37745  012A4C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37746  012A4E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37747  012A50  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37748  012A52  0E00               	movlw	0
 37749  012A54  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37750  012A56  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37751  012A58  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37752  012A5A  0102               	movlb	2	; () banked
 37753  012A5C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37754  012A5E  0100               	movlb	0	; () banked
 37755  012A60  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37756  012A62  010D               	movlb	13	; () banked
 37757  012A64  6F88               	movwf	136,b	;volatile
 37758  012A66  0102               	movlb	2	; () banked
 37759  012A68  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37760  012A6A  0100               	movlb	0	; () banked
 37761  012A6C  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37762  012A6E  010D               	movlb	13	; () banked
 37763  012A70  6F89               	movwf	137,b	;volatile
 37764  012A72  0102               	movlb	2	; () banked
 37765  012A74  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37766  012A76  0100               	movlb	0	; () banked
 37767  012A78  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37768  012A7A  010D               	movlb	13	; () banked
 37769  012A7C  6F8A               	movwf	138,b	;volatile
 37770  012A7E  0102               	movlb	2	; () banked
 37771  012A80  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37772  012A82  0100               	movlb	0	; () banked
 37773  012A84  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37774  012A86  010D               	movlb	13	; () banked
 37775  012A88  6F8B               	movwf	139,b	;volatile
 37776  012A8A  0012               	return	
 37777  012A8C                     __end_of_MSDComputeDeviceInAndResidue:
 37778                           	opt stack 0
 37779                           tosu	equ	0xFFF
 37780                           tosh	equ	0xFFE
 37781                           tosl	equ	0xFFD
 37782                           pclath	equ	0xFFA
 37783                           tblptru	equ	0xFF8
 37784                           tblptrh	equ	0xFF7
 37785                           tblptrl	equ	0xFF6
 37786                           tablat	equ	0xFF5
 37787                           prodh	equ	0xFF4
 37788                           prodl	equ	0xFF3
 37789                           intcon	equ	0xFF2
 37790                           postinc0	equ	0xFEE
 37791                           wreg	equ	0xFE8
 37792                           indf1	equ	0xFE7
 37793                           postinc1	equ	0xFE6
 37794                           postdec1	equ	0xFE5
 37795                           plusw1	equ	0xFE3
 37796                           fsr1h	equ	0xFE2
 37797                           fsr1l	equ	0xFE1
 37798                           indf2	equ	0xFDF
 37799                           postinc2	equ	0xFDE
 37800                           postdec2	equ	0xFDD
 37801                           plusw2	equ	0xFDB
 37802                           fsr2h	equ	0xFDA
 37803                           fsr2l	equ	0xFD9
 37804                           status	equ	0xFD8
 37805                           
 37806 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37807 ;; Defined at:
 37808 ;;		line 18 in file "external_flash.c"
 37809 ;; Parameters:    Size  Location     Type
 37810 ;;  config          2    0[BANK0 ] PTR void 
 37811 ;;		 -> NULL(0), 
 37812 ;; Auto vars:     Size  Location     Type
 37813 ;;		None
 37814 ;; Return value:  Size  Location     Type
 37815 ;;                  2    0[BANK0 ] unsigned int 
 37816 ;; Registers used:
 37817 ;;		wreg, status,2
 37818 ;; Tracked objects:
 37819 ;;		On entry : 0/0
 37820 ;;		On exit  : 0/0
 37821 ;;		Unchanged: 0/0
 37822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37827 ;;Total ram usage:        2 bytes
 37828 ;; Hardware stack levels used:    1
 37829 ;; Hardware stack levels required when called:   10
 37830 ;; This function calls:
 37831 ;;		Nothing
 37832 ;; This function is called by:
 37833 ;;		_MSDProcessCommandMediaPresent
 37834 ;; This function uses a non-reentrant model
 37835 ;;
 37836                           
 37837                           	psect	text153
 37838  0158F6                     __ptext153:
 37839                           	opt stack 0
 37840  0158F6                     _ExternalFlash_SectorSizeRead:
 37841                           	opt stack 16
 37842                           
 37843                           ;external_flash.c: 20: return 512;
 37844                           
 37845                           ; BSR set to: 13
 37846                           ;incstack = 0
 37847  0158F6  0E02               	movlw	2
 37848  0158F8  0100               	movlb	0	; () banked
 37849  0158FA  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37850  0158FC  0E00               	movlw	0
 37851  0158FE  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37852  015900  0012               	return	
 37853  015902                     __end_of_ExternalFlash_SectorSizeRead:
 37854                           	opt stack 0
 37855                           tosu	equ	0xFFF
 37856                           tosh	equ	0xFFE
 37857                           tosl	equ	0xFFD
 37858                           pclath	equ	0xFFA
 37859                           tblptru	equ	0xFF8
 37860                           tblptrh	equ	0xFF7
 37861                           tblptrl	equ	0xFF6
 37862                           tablat	equ	0xFF5
 37863                           prodh	equ	0xFF4
 37864                           prodl	equ	0xFF3
 37865                           intcon	equ	0xFF2
 37866                           postinc0	equ	0xFEE
 37867                           wreg	equ	0xFE8
 37868                           indf1	equ	0xFE7
 37869                           postinc1	equ	0xFE6
 37870                           postdec1	equ	0xFE5
 37871                           plusw1	equ	0xFE3
 37872                           fsr1h	equ	0xFE2
 37873                           fsr1l	equ	0xFE1
 37874                           indf2	equ	0xFDF
 37875                           postinc2	equ	0xFDE
 37876                           postdec2	equ	0xFDD
 37877                           plusw2	equ	0xFDB
 37878                           fsr2h	equ	0xFDA
 37879                           fsr2l	equ	0xFD9
 37880                           status	equ	0xFD8
 37881                           
 37882 ;; *************** function _ExternalFlash_CapacityRead *****************
 37883 ;; Defined at:
 37884 ;;		line 23 in file "external_flash.c"
 37885 ;; Parameters:    Size  Location     Type
 37886 ;;  config          2    0[BANK0 ] PTR void 
 37887 ;;		 -> NULL(0), 
 37888 ;; Auto vars:     Size  Location     Type
 37889 ;;		None
 37890 ;; Return value:  Size  Location     Type
 37891 ;;                  4    0[BANK0 ] unsigned long 
 37892 ;; Registers used:
 37893 ;;		wreg, status,2
 37894 ;; Tracked objects:
 37895 ;;		On entry : 0/0
 37896 ;;		On exit  : 0/0
 37897 ;;		Unchanged: 0/0
 37898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37902 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37903 ;;Total ram usage:        4 bytes
 37904 ;; Hardware stack levels used:    1
 37905 ;; Hardware stack levels required when called:   10
 37906 ;; This function calls:
 37907 ;;		Nothing
 37908 ;; This function is called by:
 37909 ;;		_MSDProcessCommandMediaPresent
 37910 ;; This function uses a non-reentrant model
 37911 ;;
 37912                           
 37913                           	psect	text154
 37914  01587A                     __ptext154:
 37915                           	opt stack 0
 37916  01587A                     _ExternalFlash_CapacityRead:
 37917                           	opt stack 16
 37918                           
 37919                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 37920                           
 37921                           ; BSR set to: 0
 37922                           ;incstack = 0
 37923  01587A  0EFF               	movlw	255
 37924  01587C  0100               	movlb	0	; () banked
 37925  01587E  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37926  015880  0E1F               	movlw	31
 37927  015882  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37928  015884  0E00               	movlw	0
 37929  015886  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37930  015888  0E00               	movlw	0
 37931  01588A  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37932  01588C  0012               	return	
 37933  01588E                     __end_of_ExternalFlash_CapacityRead:
 37934                           	opt stack 0
 37935                           tosu	equ	0xFFF
 37936                           tosh	equ	0xFFE
 37937                           tosl	equ	0xFFD
 37938                           pclath	equ	0xFFA
 37939                           tblptru	equ	0xFF8
 37940                           tblptrh	equ	0xFF7
 37941                           tblptrl	equ	0xFF6
 37942                           tablat	equ	0xFF5
 37943                           prodh	equ	0xFF4
 37944                           prodl	equ	0xFF3
 37945                           intcon	equ	0xFF2
 37946                           postinc0	equ	0xFEE
 37947                           wreg	equ	0xFE8
 37948                           indf1	equ	0xFE7
 37949                           postinc1	equ	0xFE6
 37950                           postdec1	equ	0xFE5
 37951                           plusw1	equ	0xFE3
 37952                           fsr1h	equ	0xFE2
 37953                           fsr1l	equ	0xFE1
 37954                           indf2	equ	0xFDF
 37955                           postinc2	equ	0xFDE
 37956                           postdec2	equ	0xFDD
 37957                           plusw2	equ	0xFDB
 37958                           fsr2h	equ	0xFDA
 37959                           fsr2l	equ	0xFD9
 37960                           status	equ	0xFD8
 37961                           
 37962 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37963 ;; Defined at:
 37964 ;;		line 10 in file "external_flash.c"
 37965 ;; Parameters:    Size  Location     Type
 37966 ;;  config          2    0[BANK0 ] PTR void 
 37967 ;;		 -> NULL(0), 
 37968 ;; Auto vars:     Size  Location     Type
 37969 ;;		None
 37970 ;; Return value:  Size  Location     Type
 37971 ;;                  2    0[BANK0 ] PTR struct .
 37972 ;; Registers used:
 37973 ;;		wreg, status,2, status,0
 37974 ;; Tracked objects:
 37975 ;;		On entry : 0/0
 37976 ;;		On exit  : 0/0
 37977 ;;		Unchanged: 0/0
 37978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37982 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37983 ;;Total ram usage:        2 bytes
 37984 ;; Hardware stack levels used:    1
 37985 ;; Hardware stack levels required when called:   10
 37986 ;; This function calls:
 37987 ;;		Nothing
 37988 ;; This function is called by:
 37989 ;;		_USBMSDInit
 37990 ;;		_MSDProcessCommand
 37991 ;; This function uses a non-reentrant model
 37992 ;;
 37993                           
 37994                           	psect	text155
 37995  01574E                     __ptext155:
 37996                           	opt stack 0
 37997  01574E                     _ExternalFlash_MediaInitialize:
 37998                           	opt stack 0
 37999                           
 38000                           ; BSR set to: 0
 38001                           ;Skip over the trampoline to the duplicate function for level 2
 38002  01574E  B25F               	btfsc	btemp,1,c
 38003  015750  EF19  F0AC         	goto	i2_ExternalFlash_MediaInitialize
 38004  015754                     _ExternalFlash_MediaInitialize$intlevel0:
 38005                           	opt stack 17
 38006                           
 38007                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 38008                           
 38009                           ;incstack = 0
 38010  015754  0102               	movlb	2	; () banked
 38011  015756  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 38012                           
 38013                           ; BSR set to: 2
 38014                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 38015  015758  0E02               	movlw	2
 38016  01575A  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 38017  01575C  0E00               	movlw	0
 38018  01575E  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 38019                           
 38020                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 38021  015760  0E00               	movlw	0
 38022  015762  6F84               	movwf	_mediaInformation& (0+255),b
 38023                           
 38024                           ; BSR set to: 2
 38025                           ;external_flash.c: 15: return &mediaInformation;
 38026  015764  0E84               	movlw	low _mediaInformation
 38027  015766  0100               	movlb	0	; () banked
 38028  015768  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 38029  01576A  0E02               	movlw	high _mediaInformation
 38030  01576C  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 38031  01576E  0012               	return	
 38032  015770                     __end_of_ExternalFlash_MediaInitialize:
 38033                           	opt stack 0
 38034                           tosu	equ	0xFFF
 38035                           tosh	equ	0xFFE
 38036                           tosl	equ	0xFFD
 38037                           pclath	equ	0xFFA
 38038                           tblptru	equ	0xFF8
 38039                           tblptrh	equ	0xFF7
 38040                           tblptrl	equ	0xFF6
 38041                           tablat	equ	0xFF5
 38042                           prodh	equ	0xFF4
 38043                           prodl	equ	0xFF3
 38044                           intcon	equ	0xFF2
 38045                           postinc0	equ	0xFEE
 38046                           wreg	equ	0xFE8
 38047                           indf1	equ	0xFE7
 38048                           postinc1	equ	0xFE6
 38049                           postdec1	equ	0xFE5
 38050                           plusw1	equ	0xFE3
 38051                           fsr1h	equ	0xFE2
 38052                           fsr1l	equ	0xFE1
 38053                           indf2	equ	0xFDF
 38054                           postinc2	equ	0xFDE
 38055                           postdec2	equ	0xFDD
 38056                           plusw2	equ	0xFDB
 38057                           fsr2h	equ	0xFDA
 38058                           fsr2l	equ	0xFD9
 38059                           status	equ	0xFD8
 38060                           
 38061 ;; *************** function _ExternalFlash_MediaDetect *****************
 38062 ;; Defined at:
 38063 ;;		line 29 in file "external_flash.c"
 38064 ;; Parameters:    Size  Location     Type
 38065 ;;  config          2    0[BANK0 ] PTR void 
 38066 ;;		 -> NULL(0), 
 38067 ;; Auto vars:     Size  Location     Type
 38068 ;;		None
 38069 ;; Return value:  Size  Location     Type
 38070 ;;                  1    wreg      unsigned char 
 38071 ;; Registers used:
 38072 ;;		wreg
 38073 ;; Tracked objects:
 38074 ;;		On entry : 0/0
 38075 ;;		On exit  : 0/0
 38076 ;;		Unchanged: 0/0
 38077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38082 ;;Total ram usage:        2 bytes
 38083 ;; Hardware stack levels used:    1
 38084 ;; Hardware stack levels required when called:   10
 38085 ;; This function calls:
 38086 ;;		Nothing
 38087 ;; This function is called by:
 38088 ;;		_USBMSDInit
 38089 ;;		_MSDProcessCommand
 38090 ;; This function uses a non-reentrant model
 38091 ;;
 38092                           
 38093                           	psect	text156
 38094  015936                     __ptext156:
 38095                           	opt stack 0
 38096  015936                     _ExternalFlash_MediaDetect:
 38097                           	opt stack 0
 38098                           
 38099                           ; BSR set to: 0
 38100                           ;Skip over the trampoline to the duplicate function for level 2
 38101  015936  B25F               	btfsc	btemp,1,c
 38102  015938  EFC0  F0AC         	goto	i2_ExternalFlash_MediaDetect
 38103  01593C                     _ExternalFlash_MediaDetect$intlevel0:
 38104                           	opt stack 17
 38105                           
 38106                           ;external_flash.c: 31: return 1;
 38107                           
 38108                           ;incstack = 0
 38109  01593C  0E01               	movlw	1
 38110  01593E  0012               	return	
 38111  015940                     __end_of_ExternalFlash_MediaDetect:
 38112                           	opt stack 0
 38113                           tosu	equ	0xFFF
 38114                           tosh	equ	0xFFE
 38115                           tosl	equ	0xFFD
 38116                           pclath	equ	0xFFA
 38117                           tblptru	equ	0xFF8
 38118                           tblptrh	equ	0xFF7
 38119                           tblptrl	equ	0xFF6
 38120                           tablat	equ	0xFF5
 38121                           prodh	equ	0xFF4
 38122                           prodl	equ	0xFF3
 38123                           intcon	equ	0xFF2
 38124                           postinc0	equ	0xFEE
 38125                           wreg	equ	0xFE8
 38126                           indf1	equ	0xFE7
 38127                           postinc1	equ	0xFE6
 38128                           postdec1	equ	0xFE5
 38129                           plusw1	equ	0xFE3
 38130                           fsr1h	equ	0xFE2
 38131                           fsr1l	equ	0xFE1
 38132                           indf2	equ	0xFDF
 38133                           postinc2	equ	0xFDE
 38134                           postdec2	equ	0xFDD
 38135                           plusw2	equ	0xFDB
 38136                           fsr2h	equ	0xFDA
 38137                           fsr2l	equ	0xFD9
 38138                           status	equ	0xFD8
 38139                           
 38140 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 38141 ;; Defined at:
 38142 ;;		line 73 in file "app_device_custom_hid.c"
 38143 ;; Parameters:    Size  Location     Type
 38144 ;;		None
 38145 ;; Auto vars:     Size  Location     Type
 38146 ;;  idx             1    0        unsigned char 
 38147 ;; Return value:  Size  Location     Type
 38148 ;;                  1    wreg      void 
 38149 ;; Registers used:
 38150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38151 ;; Tracked objects:
 38152 ;;		On entry : 0/0
 38153 ;;		On exit  : 0/0
 38154 ;;		Unchanged: 0/0
 38155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38160 ;;Total ram usage:        0 bytes
 38161 ;; Hardware stack levels used:    1
 38162 ;; Hardware stack levels required when called:   17
 38163 ;; This function calls:
 38164 ;;		_USBTransferOnePacket
 38165 ;;		_api_parse
 38166 ;;		_api_prepare
 38167 ;; This function is called by:
 38168 ;;		_main
 38169 ;; This function uses a non-reentrant model
 38170 ;;
 38171                           
 38172                           	psect	text157
 38173  01316C                     __ptext157:
 38174                           	opt stack 0
 38175  01316C                     _APP_DeviceCustomHIDTasks:
 38176                           	opt stack 13
 38177                           
 38178                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 38179                           
 38180                           ;incstack = 0
 38181  01316C  0E20               	movlw	32
 38182  01316E  605E               	cpfslt	_USBDeviceState,c	;volatile
 38183  013170  D001               	goto	l944
 38184  013172  0012               	return	
 38185  013174                     l944:
 38186                           
 38187                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 38188  013174  B265               	btfsc	3941,1,c	;volatile
 38189  013176  0012               	return	
 38190                           
 38191                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 38192                           
 38193                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 38194  013178  0101               	movlb	1	; () banked
 38195  01317A  5143               	movf	_USBOutHandle& (0+255),w,b
 38196  01317C  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38197  01317E  B4D8               	btfsc	status,2,c
 38198  013180  D006               	goto	u17110
 38199                           
 38200                           ; BSR set to: 1
 38201  013182  C143  FFD9         	movff	_USBOutHandle,fsr2l
 38202  013186  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 38203  01318A  BEDF               	btfsc	indf2,7,c
 38204  01318C  0012               	return	
 38205  01318E                     u17110:
 38206                           
 38207                           ; BSR set to: 1
 38208                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 38209                           
 38210                           ; BSR set to: 1
 38211  01318E  5141               	movf	_USBInHandle& (0+255),w,b
 38212  013190  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38213  013192  B4D8               	btfsc	status,2,c
 38214  013194  D006               	goto	u17130
 38215                           
 38216                           ; BSR set to: 1
 38217  013196  C141  FFD9         	movff	_USBInHandle,fsr2l
 38218  01319A  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 38219  01319E  BEDF               	btfsc	indf2,7,c
 38220  0131A0  D01B               	goto	l950
 38221  0131A2                     u17130:
 38222                           
 38223                           ; BSR set to: 1
 38224                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 38225                           
 38226                           ; BSR set to: 1
 38227  0131A2  0E78               	movlw	low _ReceivedDataBuffer
 38228  0131A4  0100               	movlb	0	; () banked
 38229  0131A6  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 38230  0131A8  0E03               	movlw	high _ReceivedDataBuffer
 38231  0131AA  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 38232  0131AC  0E38               	movlw	low _ToSendDataBuffer
 38233  0131AE  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 38234  0131B0  0E03               	movlw	high _ToSendDataBuffer
 38235  0131B2  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 38236  0131B4  EC84  F08F         	call	_api_prepare	;wreg free
 38237                           
 38238                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38239  0131B8  0E01               	movlw	1
 38240  0131BA  0100               	movlb	0	; () banked
 38241  0131BC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38242  0131BE  0E38               	movlw	low _ToSendDataBuffer
 38243  0131C0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38244  0131C2  0E03               	movlw	high _ToSendDataBuffer
 38245  0131C4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38246  0131C6  0E40               	movlw	64
 38247  0131C8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38248  0131CA  0E01               	movlw	1
 38249  0131CC  ECEA  F087         	call	_USBTransferOnePacket
 38250  0131D0  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 38251  0131D4  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38252  0131D8                     l950:
 38253                           
 38254                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 38255  0131D8  0E78               	movlw	low _ReceivedDataBuffer
 38256  0131DA  0100               	movlb	0	; () banked
 38257  0131DC  6FC4               	movwf	api_parse@inBuffer& (0+255),b
 38258  0131DE  0E03               	movlw	high _ReceivedDataBuffer
 38259  0131E0  6FC5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 38260  0131E2  0E40               	movlw	64
 38261  0131E4  6FC6               	movwf	api_parse@receivedDataLength& (0+255),b
 38262  0131E6  0E38               	movlw	low _ToSendDataBuffer
 38263  0131E8  6FC7               	movwf	api_parse@outBuffer& (0+255),b
 38264  0131EA  0E03               	movlw	high _ToSendDataBuffer
 38265  0131EC  6FC8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 38266  0131EE  EC23  F084         	call	_api_parse	;wreg free
 38267                           
 38268                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38269  0131F2  0E00               	movlw	0
 38270  0131F4  0100               	movlb	0	; () banked
 38271  0131F6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38272  0131F8  0E78               	movlw	low _ReceivedDataBuffer
 38273  0131FA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38274  0131FC  0E03               	movlw	high _ReceivedDataBuffer
 38275  0131FE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38276  013200  0E40               	movlw	64
 38277  013202  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38278  013204  0E01               	movlw	1
 38279  013206  ECEA  F087         	call	_USBTransferOnePacket
 38280  01320A  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 38281  01320E  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38282  013212  0012               	return	
 38283  013214                     __end_of_APP_DeviceCustomHIDTasks:
 38284                           	opt stack 0
 38285                           tosu	equ	0xFFF
 38286                           tosh	equ	0xFFE
 38287                           tosl	equ	0xFFD
 38288                           pclath	equ	0xFFA
 38289                           tblptru	equ	0xFF8
 38290                           tblptrh	equ	0xFF7
 38291                           tblptrl	equ	0xFF6
 38292                           tablat	equ	0xFF5
 38293                           prodh	equ	0xFF4
 38294                           prodl	equ	0xFF3
 38295                           intcon	equ	0xFF2
 38296                           postinc0	equ	0xFEE
 38297                           wreg	equ	0xFE8
 38298                           indf1	equ	0xFE7
 38299                           postinc1	equ	0xFE6
 38300                           postdec1	equ	0xFE5
 38301                           plusw1	equ	0xFE3
 38302                           fsr1h	equ	0xFE2
 38303                           fsr1l	equ	0xFE1
 38304                           indf2	equ	0xFDF
 38305                           postinc2	equ	0xFDE
 38306                           postdec2	equ	0xFDD
 38307                           plusw2	equ	0xFDB
 38308                           fsr2h	equ	0xFDA
 38309                           fsr2l	equ	0xFD9
 38310                           status	equ	0xFD8
 38311                           
 38312 ;; *************** function _api_prepare *****************
 38313 ;; Defined at:
 38314 ;;		line 37 in file "api.c"
 38315 ;; Parameters:    Size  Location     Type
 38316 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 38317 ;;		 -> ReceivedDataBuffer(64), 
 38318 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 38319 ;;		 -> ToSendDataBuffer(64), 
 38320 ;; Auto vars:     Size  Location     Type
 38321 ;;  command         1   20[BANK0 ] enum E6715
 38322 ;; Return value:  Size  Location     Type
 38323 ;;                  1    wreg      void 
 38324 ;; Registers used:
 38325 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38326 ;; Tracked objects:
 38327 ;;		On entry : 0/0
 38328 ;;		On exit  : 0/0
 38329 ;;		Unchanged: 0/0
 38330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38334 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38335 ;;Total ram usage:        5 bytes
 38336 ;; Hardware stack levels used:    1
 38337 ;; Hardware stack levels required when called:   12
 38338 ;; This function calls:
 38339 ;;		__fill_buffer_get_display
 38340 ;;		__fill_buffer_get_mode_details
 38341 ;;		__fill_buffer_get_status
 38342 ;;		_memcpy
 38343 ;; This function is called by:
 38344 ;;		_APP_DeviceCustomHIDTasks
 38345 ;; This function uses a non-reentrant model
 38346 ;;
 38347                           
 38348                           	psect	text158
 38349  011F08                     __ptext158:
 38350                           	opt stack 0
 38351  011F08                     _api_prepare:
 38352                           	opt stack 17
 38353                           
 38354                           ;api.c: 39: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 38355                           
 38356                           ;incstack = 0
 38357  011F08  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 38358  011F0C  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 38359  011F10  50DF               	movf	indf2,w,c
 38360  011F12  0100               	movlb	0	; () banked
 38361  011F14  6F74               	movwf	api_prepare@command& (0+255),b
 38362                           
 38363                           ; BSR set to: 0
 38364                           ;api.c: 41: if(command>0x7F)
 38365  011F16  0E7F               	movlw	127
 38366  011F18  6574               	cpfsgt	api_prepare@command& (0+255),b
 38367  011F1A  D051               	goto	l2234
 38368                           
 38369                           ; BSR set to: 0
 38370                           ;api.c: 48: outBuffer[0] = 0x99;
 38371                           
 38372                           ; BSR set to: 0
 38373                           
 38374                           ;api.c: 44: {;api.c: 47: default:
 38375                           
 38376                           ; BSR set to: 0
 38377                           ;api.c: 42: {;api.c: 43: switch(command)
 38378  011F1C  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38379  011F20  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38380  011F24  0E99               	movlw	153
 38381  011F26  6EDF               	movwf	indf2,c
 38382                           
 38383                           ; BSR set to: 0
 38384                           ;api.c: 49: outBuffer[1] = 0x99;
 38385  011F28  EE20 F001          	lfsr	2,1
 38386  011F2C  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38387  011F2E  26D9               	addwf	fsr2l,f,c
 38388  011F30  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38389  011F32  22DA               	addwfc	fsr2h,f,c
 38390  011F34  0E99               	movlw	153
 38391  011F36  6EDF               	movwf	indf2,c
 38392                           
 38393                           ;api.c: 50: }
 38394  011F38  0012               	return	
 38395  011F3A                     
 38396                           ; BSR set to: 0
 38397                           ;api.c: 63: _fill_buffer_get_status(outBuffer);
 38398                           
 38399                           ; BSR set to: 0
 38400  011F3A  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 38401  011F3E  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 38402  011F42  EC2A  F077         	call	__fill_buffer_get_status	;wreg free
 38403                           
 38404                           ;api.c: 64: break;
 38405  011F46  0012               	return	
 38406  011F48                     
 38407                           ;api.c: 68: _fill_buffer_get_display(outBuffer, 0);
 38408  011F48  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38409  011F4C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38410  011F50  0E00               	movlw	0
 38411  011F52  0100               	movlb	0	; () banked
 38412  011F54  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38413  011F56  ECA4  F095         	call	__fill_buffer_get_display	;wreg free
 38414                           
 38415                           ;api.c: 69: break;
 38416  011F5A  0012               	return	
 38417  011F5C                     
 38418                           ;api.c: 73: _fill_buffer_get_display(outBuffer, 1);
 38419  011F5C  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38420  011F60  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38421  011F64  0E01               	movlw	1
 38422  011F66  0100               	movlb	0	; () banked
 38423  011F68  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38424  011F6A  ECA4  F095         	call	__fill_buffer_get_display	;wreg free
 38425                           
 38426                           ;api.c: 74: break;
 38427  011F6E  0012               	return	
 38428  011F70                     
 38429                           ;api.c: 78: _fill_buffer_get_mode_details(outBuffer);
 38430  011F70  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 38431  011F74  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 38432  011F78  EC06  F07A         	call	__fill_buffer_get_mode_details	;wreg free
 38433                           
 38434                           ;api.c: 79: break;
 38435  011F7C  0012               	return	
 38436  011F7E                     
 38437                           ;api.c: 83: memcpy(outBuffer, inBuffer, 64);
 38438  011F7E  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 38439  011F82  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 38440  011F86  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 38441  011F8A  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 38442  011F8E  0E00               	movlw	0
 38443  011F90  0100               	movlb	0	; () banked
 38444  011F92  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38445  011F94  0E40               	movlw	64
 38446  011F96  6F64               	movwf	memcpy@n& (0+255),b
 38447  011F98  ECDD  F0A1         	call	_memcpy	;wreg free
 38448                           
 38449                           ;api.c: 84: break;
 38450  011F9C  0012               	return	
 38451  011F9E                     
 38452                           ;api.c: 87: outBuffer[0] = 0x99;
 38453  011F9E  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38454  011FA2  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38455  011FA6  0E99               	movlw	153
 38456  011FA8  6EDF               	movwf	indf2,c
 38457                           
 38458                           ;api.c: 88: outBuffer[1] = 0x99;
 38459  011FAA  0100               	movlb	0	; () banked
 38460  011FAC  EE20 F001          	lfsr	2,1
 38461  011FB0  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38462  011FB2  26D9               	addwf	fsr2l,f,c
 38463  011FB4  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38464  011FB6  22DA               	addwfc	fsr2h,f,c
 38465  011FB8  0E99               	movlw	153
 38466  011FBA  6EDF               	movwf	indf2,c
 38467                           
 38468                           ;api.c: 89: }
 38469  011FBC  0012               	return	
 38470  011FBE                     l2234:
 38471                           
 38472                           ; BSR set to: 0
 38473                           
 38474                           ; BSR set to: 0
 38475  011FBE  5174               	movf	api_prepare@command& (0+255),w,b
 38476                           
 38477                           ; Switch size 1, requested type "space"
 38478                           ; Number of cases is 6, Range of values is 0 to 32
 38479                           ; switch strategies available:
 38480                           ; Name         Instructions Cycles
 38481                           ; simple_byte           19    10 (average)
 38482                           ;	Chosen strategy is simple_byte
 38483  011FC0  0A00               	xorlw	0	; case 0
 38484  011FC2  B4D8               	btfsc	status,2,c
 38485  011FC4  0012               	return	
 38486  011FC6  0A10               	xorlw	16	; case 16
 38487  011FC8  B4D8               	btfsc	status,2,c
 38488  011FCA  D7B7               	goto	l2237
 38489  011FCC  0A01               	xorlw	1	; case 17
 38490  011FCE  B4D8               	btfsc	status,2,c
 38491  011FD0  D7BB               	goto	l2238
 38492  011FD2  0A03               	xorlw	3	; case 18
 38493  011FD4  B4D8               	btfsc	status,2,c
 38494  011FD6  D7C2               	goto	l2239
 38495  011FD8  0A01               	xorlw	1	; case 19
 38496  011FDA  B4D8               	btfsc	status,2,c
 38497  011FDC  D7C9               	goto	l2240
 38498  011FDE  0A33               	xorlw	51	; case 32
 38499  011FE0  B4D8               	btfsc	status,2,c
 38500  011FE2  D7CD               	goto	l2241
 38501  011FE4  D7DC               	goto	l2242
 38502  011FE6                     __end_of_api_prepare:
 38503                           	opt stack 0
 38504                           tosu	equ	0xFFF
 38505                           tosh	equ	0xFFE
 38506                           tosl	equ	0xFFD
 38507                           pclath	equ	0xFFA
 38508                           tblptru	equ	0xFF8
 38509                           tblptrh	equ	0xFF7
 38510                           tblptrl	equ	0xFF6
 38511                           tablat	equ	0xFF5
 38512                           prodh	equ	0xFF4
 38513                           prodl	equ	0xFF3
 38514                           intcon	equ	0xFF2
 38515                           postinc0	equ	0xFEE
 38516                           wreg	equ	0xFE8
 38517                           indf1	equ	0xFE7
 38518                           postinc1	equ	0xFE6
 38519                           postdec1	equ	0xFE5
 38520                           plusw1	equ	0xFE3
 38521                           fsr1h	equ	0xFE2
 38522                           fsr1l	equ	0xFE1
 38523                           indf2	equ	0xFDF
 38524                           postinc2	equ	0xFDE
 38525                           postdec2	equ	0xFDD
 38526                           plusw2	equ	0xFDB
 38527                           fsr2h	equ	0xFDA
 38528                           fsr2l	equ	0xFD9
 38529                           status	equ	0xFD8
 38530                           
 38531 ;; *************** function __fill_buffer_get_status *****************
 38532 ;; Defined at:
 38533 ;;		line 170 in file "api.c"
 38534 ;; Parameters:    Size  Location     Type
 38535 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 38536 ;;		 -> ToSendDataBuffer(64), 
 38537 ;; Auto vars:     Size  Location     Type
 38538 ;;		None
 38539 ;; Return value:  Size  Location     Type
 38540 ;;                  1    wreg      void 
 38541 ;; Registers used:
 38542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38543 ;; Tracked objects:
 38544 ;;		On entry : 0/0
 38545 ;;		On exit  : 0/0
 38546 ;;		Unchanged: 0/0
 38547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38552 ;;Total ram usage:        2 bytes
 38553 ;; Hardware stack levels used:    1
 38554 ;; Hardware stack levels required when called:   11
 38555 ;; This function calls:
 38556 ;;		_memcpy
 38557 ;; This function is called by:
 38558 ;;		_api_prepare
 38559 ;; This function uses a non-reentrant model
 38560 ;;
 38561                           
 38562                           	psect	text159
 38563  00EE54                     __ptext159:
 38564                           	opt stack 0
 38565  00EE54                     __fill_buffer_get_status:
 38566                           	opt stack 17
 38567                           
 38568                           ;api.c: 173: outBuffer[0] = DATAREQUEST_GET_STATUS;
 38569                           
 38570                           ;incstack = 0
 38571  00EE54  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 38572  00EE58  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 38573  00EE5C  0E10               	movlw	16
 38574  00EE5E  6EDF               	movwf	indf2,c
 38575                           
 38576                           ;api.c: 176: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38577  00EE60  0100               	movlb	0	; () banked
 38578  00EE62  EE20 F001          	lfsr	2,1
 38579  00EE66  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38580  00EE68  26D9               	addwf	fsr2l,f,c
 38581  00EE6A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38582  00EE6C  22DA               	addwfc	fsr2h,f,c
 38583  00EE6E  0EBC               	movlw	188
 38584  00EE70  6EDF               	movwf	indf2,c
 38585                           
 38586                           ; BSR set to: 0
 38587                           ;api.c: 177: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38588  00EE72  EE20 F002          	lfsr	2,2
 38589  00EE76  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38590  00EE78  26D9               	addwf	fsr2l,f,c
 38591  00EE7A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38592  00EE7C  22DA               	addwfc	fsr2h,f,c
 38593  00EE7E  0E26               	movlw	38
 38594  00EE80  6EDF               	movwf	indf2,c
 38595                           
 38596                           ; BSR set to: 0
 38597                           ;api.c: 180: outBuffer[3] = 0x00;
 38598  00EE82  EE20 F003          	lfsr	2,3
 38599  00EE86  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38600  00EE88  26D9               	addwf	fsr2l,f,c
 38601  00EE8A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38602  00EE8C  22DA               	addwfc	fsr2h,f,c
 38603  00EE8E  0E00               	movlw	0
 38604  00EE90  6EDF               	movwf	indf2,c
 38605                           
 38606                           ; BSR set to: 0
 38607                           ;api.c: 181: outBuffer[4] = 0x05;
 38608  00EE92  EE20 F004          	lfsr	2,4
 38609  00EE96  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38610  00EE98  26D9               	addwf	fsr2l,f,c
 38611  00EE9A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38612  00EE9C  22DA               	addwfc	fsr2h,f,c
 38613  00EE9E  0E05               	movlw	5
 38614  00EEA0  6EDF               	movwf	indf2,c
 38615                           
 38616                           ; BSR set to: 0
 38617                           ;api.c: 182: outBuffer[5] = 0x03;
 38618  00EEA2  EE20 F005          	lfsr	2,5
 38619  00EEA6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38620  00EEA8  26D9               	addwf	fsr2l,f,c
 38621  00EEAA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38622  00EEAC  22DA               	addwfc	fsr2h,f,c
 38623  00EEAE  0E03               	movlw	3
 38624  00EEB0  6EDF               	movwf	indf2,c
 38625                           
 38626                           ; BSR set to: 0
 38627                           ;api.c: 185: outBuffer[6] = os.subTimeSlot;
 38628  00EEB2  EE20 F006          	lfsr	2,6
 38629  00EEB6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38630  00EEB8  26D9               	addwf	fsr2l,f,c
 38631  00EEBA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38632  00EEBC  22DA               	addwfc	fsr2h,f,c
 38633  00EEBE  C171  FFDF         	movff	_os,indf2	;volatile
 38634                           
 38635                           ; BSR set to: 0
 38636                           ;api.c: 186: outBuffer[7] = os.timeSlot;
 38637  00EEC2  EE20 F007          	lfsr	2,7
 38638  00EEC6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38639  00EEC8  26D9               	addwf	fsr2l,f,c
 38640  00EECA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38641  00EECC  22DA               	addwfc	fsr2h,f,c
 38642  00EECE  C172  FFDF         	movff	_os+1,indf2	;volatile
 38643                           
 38644                           ; BSR set to: 0
 38645                           ;api.c: 187: outBuffer[8] = os.done;
 38646  00EED2  EE20 F008          	lfsr	2,8
 38647  00EED6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38648  00EED8  26D9               	addwf	fsr2l,f,c
 38649  00EEDA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38650  00EEDC  22DA               	addwfc	fsr2h,f,c
 38651  00EEDE  C173  FFDF         	movff	_os+2,indf2	;volatile
 38652                           
 38653                           ; BSR set to: 0
 38654                           ;api.c: 188: outBuffer[9] = os.encoder1Count;
 38655  00EEE2  EE20 F009          	lfsr	2,9
 38656  00EEE6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38657  00EEE8  26D9               	addwf	fsr2l,f,c
 38658  00EEEA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38659  00EEEC  22DA               	addwfc	fsr2h,f,c
 38660  00EEEE  C174  FFDF         	movff	_os+3,indf2	;volatile
 38661                           
 38662                           ; BSR set to: 0
 38663                           ;api.c: 189: outBuffer[10] = os.button1;
 38664  00EEF2  EE20 F00A          	lfsr	2,10
 38665  00EEF6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38666  00EEF8  26D9               	addwf	fsr2l,f,c
 38667  00EEFA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38668  00EEFC  22DA               	addwfc	fsr2h,f,c
 38669  00EEFE  C175  FFDF         	movff	_os+4,indf2	;volatile
 38670                           
 38671                           ; BSR set to: 0
 38672                           ;api.c: 190: outBuffer[11] = os.encoder2Count;
 38673  00EF02  EE20 F00B          	lfsr	2,11
 38674  00EF06  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38675  00EF08  26D9               	addwf	fsr2l,f,c
 38676  00EF0A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38677  00EF0C  22DA               	addwfc	fsr2h,f,c
 38678  00EF0E  C176  FFDF         	movff	_os+5,indf2	;volatile
 38679                           
 38680                           ; BSR set to: 0
 38681                           ;api.c: 191: outBuffer[12] = os.button2;
 38682  00EF12  EE20 F00C          	lfsr	2,12
 38683  00EF16  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38684  00EF18  26D9               	addwf	fsr2l,f,c
 38685  00EF1A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38686  00EF1C  22DA               	addwfc	fsr2h,f,c
 38687  00EF1E  C177  FFDF         	movff	_os+6,indf2	;volatile
 38688                           
 38689                           ; BSR set to: 0
 38690                           ;api.c: 192: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 38691  00EF22  0E0D               	movlw	13
 38692  00EF24  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38693  00EF26  6F60               	movwf	memcpy@d1& (0+255),b
 38694  00EF28  0E00               	movlw	0
 38695  00EF2A  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38696  00EF2C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38697  00EF2E  0E78               	movlw	low (_os+7)
 38698  00EF30  6F62               	movwf	memcpy@s1& (0+255),b
 38699  00EF32  0E01               	movlw	high (_os+7)
 38700  00EF34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38701  00EF36  0E00               	movlw	0
 38702  00EF38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38703  00EF3A  0E04               	movlw	4
 38704  00EF3C  6F64               	movwf	memcpy@n& (0+255),b
 38705  00EF3E  ECDD  F0A1         	call	_memcpy	;wreg free
 38706                           
 38707                           ;api.c: 197: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 38708  00EF42  0E11               	movlw	17
 38709  00EF44  0100               	movlb	0	; () banked
 38710  00EF46  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38711  00EF48  6F60               	movwf	memcpy@d1& (0+255),b
 38712  00EF4A  0E00               	movlw	0
 38713  00EF4C  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38714  00EF4E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38715  00EF50  0E7C               	movlw	low (_os+11)
 38716  00EF52  6F62               	movwf	memcpy@s1& (0+255),b
 38717  00EF54  0E01               	movlw	high (_os+11)
 38718  00EF56  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38719  00EF58  0E00               	movlw	0
 38720  00EF5A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38721  00EF5C  0E04               	movlw	4
 38722  00EF5E  6F64               	movwf	memcpy@n& (0+255),b
 38723  00EF60  ECDD  F0A1         	call	_memcpy	;wreg free
 38724                           
 38725                           ;api.c: 202: outBuffer[21] = os.displayState;
 38726  00EF64  0100               	movlb	0	; () banked
 38727  00EF66  EE20 F015          	lfsr	2,21
 38728  00EF6A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38729  00EF6C  26D9               	addwf	fsr2l,f,c
 38730  00EF6E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38731  00EF70  22DA               	addwfc	fsr2h,f,c
 38732  00EF72  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38733                           
 38734                           ; BSR set to: 0
 38735                           ;api.c: 203: outBuffer[22] = os.beep_count;
 38736  00EF76  EE20 F016          	lfsr	2,22
 38737  00EF7A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38738  00EF7C  26D9               	addwf	fsr2l,f,c
 38739  00EF7E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38740  00EF80  22DA               	addwfc	fsr2h,f,c
 38741  00EF82  C197  FFDF         	movff	_os+38,indf2	;volatile
 38742                           
 38743                           ; BSR set to: 0
 38744                           ;api.c: 204: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 38745  00EF86  EE20 F017          	lfsr	2,23
 38746  00EF8A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38747  00EF8C  26D9               	addwf	fsr2l,f,c
 38748  00EF8E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38749  00EF90  22DA               	addwfc	fsr2h,f,c
 38750  00EF92  C198  FFDF         	movff	_os+39,indf2	;volatile
 38751                           
 38752                           ; BSR set to: 0
 38753                           ;api.c: 205: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 38754  00EF96  EE20 F018          	lfsr	2,24
 38755  00EF9A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38756  00EF9C  26D9               	addwf	fsr2l,f,c
 38757  00EF9E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38758  00EFA0  22DA               	addwfc	fsr2h,f,c
 38759  00EFA2  0101               	movlb	1	; () banked
 38760  00EFA4  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 38761  00EFA6  6EDF               	movwf	indf2,c
 38762                           
 38763                           ; BSR set to: 1
 38764                           ;api.c: 206: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 38765  00EFA8  0100               	movlb	0	; () banked
 38766  00EFAA  EE20 F019          	lfsr	2,25
 38767  00EFAE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38768  00EFB0  26D9               	addwf	fsr2l,f,c
 38769  00EFB2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38770  00EFB4  22DA               	addwfc	fsr2h,f,c
 38771  00EFB6  C19A  FFDF         	movff	_os+41,indf2	;volatile
 38772                           
 38773                           ; BSR set to: 0
 38774                           ;api.c: 207: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 38775  00EFBA  EE20 F01A          	lfsr	2,26
 38776  00EFBE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38777  00EFC0  26D9               	addwf	fsr2l,f,c
 38778  00EFC2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38779  00EFC4  22DA               	addwfc	fsr2h,f,c
 38780  00EFC6  0101               	movlb	1	; () banked
 38781  00EFC8  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 38782  00EFCA  6EDF               	movwf	indf2,c
 38783                           
 38784                           ; BSR set to: 1
 38785                           ;api.c: 208: outBuffer[27] = os.fan_on;
 38786  00EFCC  0100               	movlb	0	; () banked
 38787  00EFCE  EE20 F01B          	lfsr	2,27
 38788  00EFD2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38789  00EFD4  26D9               	addwf	fsr2l,f,c
 38790  00EFD6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38791  00EFD8  22DA               	addwfc	fsr2h,f,c
 38792  00EFDA  C19F  FFDF         	movff	_os+46,indf2	;volatile
 38793                           
 38794                           ; BSR set to: 0
 38795                           ;api.c: 209: outBuffer[28] = os.brake_on;
 38796  00EFDE  EE20 F01C          	lfsr	2,28
 38797  00EFE2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38798  00EFE4  26D9               	addwf	fsr2l,f,c
 38799  00EFE6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38800  00EFE8  22DA               	addwfc	fsr2h,f,c
 38801  00EFEA  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 38802                           
 38803                           ; BSR set to: 0
 38804                           ;api.c: 210: outBuffer[29] = os.busy;
 38805  00EFEE  EE20 F01D          	lfsr	2,29
 38806  00EFF2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38807  00EFF4  26D9               	addwf	fsr2l,f,c
 38808  00EFF6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38809  00EFF8  22DA               	addwfc	fsr2h,f,c
 38810  00EFFA  C17F  FFDF         	movff	_os+14,indf2	;volatile
 38811                           
 38812                           ; BSR set to: 0
 38813                           ;api.c: 212: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 38814  00EFFE  EE20 F01E          	lfsr	2,30
 38815  00F002  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38816  00F004  26D9               	addwf	fsr2l,f,c
 38817  00F006  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38818  00F008  22DA               	addwfc	fsr2h,f,c
 38819  00F00A  C194  FFDF         	movff	_os+35,indf2	;volatile
 38820                           
 38821                           ; BSR set to: 0
 38822                           ;api.c: 213: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 38823  00F00E  EE20 F01F          	lfsr	2,31
 38824  00F012  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38825  00F014  26D9               	addwf	fsr2l,f,c
 38826  00F016  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38827  00F018  22DA               	addwfc	fsr2h,f,c
 38828  00F01A  0101               	movlb	1	; () banked
 38829  00F01C  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 38830  00F01E  6EDF               	movwf	indf2,c
 38831                           
 38832                           ; BSR set to: 1
 38833                           ;api.c: 227: memcpy(&outBuffer[42], &config, 22);
 38834  00F020  0E2A               	movlw	42
 38835  00F022  0100               	movlb	0	; () banked
 38836  00F024  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38837  00F026  6F60               	movwf	memcpy@d1& (0+255),b
 38838  00F028  0E00               	movlw	0
 38839  00F02A  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38840  00F02C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38841  00F02E  0EA1               	movlw	low _config
 38842  00F030  6F62               	movwf	memcpy@s1& (0+255),b
 38843  00F032  0E01               	movlw	high _config
 38844  00F034  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38845  00F036  0E00               	movlw	0
 38846  00F038  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38847  00F03A  0E16               	movlw	22
 38848  00F03C  6F64               	movwf	memcpy@n& (0+255),b
 38849  00F03E  ECDD  F0A1         	call	_memcpy	;wreg free
 38850  00F042  0012               	return		;funcret
 38851  00F044                     __end_of__fill_buffer_get_status:
 38852                           	opt stack 0
 38853                           tosu	equ	0xFFF
 38854                           tosh	equ	0xFFE
 38855                           tosl	equ	0xFFD
 38856                           pclath	equ	0xFFA
 38857                           tblptru	equ	0xFF8
 38858                           tblptrh	equ	0xFF7
 38859                           tblptrl	equ	0xFF6
 38860                           tablat	equ	0xFF5
 38861                           prodh	equ	0xFF4
 38862                           prodl	equ	0xFF3
 38863                           intcon	equ	0xFF2
 38864                           postinc0	equ	0xFEE
 38865                           wreg	equ	0xFE8
 38866                           indf1	equ	0xFE7
 38867                           postinc1	equ	0xFE6
 38868                           postdec1	equ	0xFE5
 38869                           plusw1	equ	0xFE3
 38870                           fsr1h	equ	0xFE2
 38871                           fsr1l	equ	0xFE1
 38872                           indf2	equ	0xFDF
 38873                           postinc2	equ	0xFDE
 38874                           postdec2	equ	0xFDD
 38875                           plusw2	equ	0xFDB
 38876                           fsr2h	equ	0xFDA
 38877                           fsr2l	equ	0xFD9
 38878                           status	equ	0xFD8
 38879                           
 38880 ;; *************** function _memcpy *****************
 38881 ;; Defined at:
 38882 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 38883 ;; Parameters:    Size  Location     Type
 38884 ;;  d1              2    0[BANK0 ] PTR void 
 38885 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38886 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38887 ;;  s1              2    2[BANK0 ] PTR const void 
 38888 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38889 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38890 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38891 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38892 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38893 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38894 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38895 ;;  n               2    4[BANK0 ] unsigned int 
 38896 ;; Auto vars:     Size  Location     Type
 38897 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 38898 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38899 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38900 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38901 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38902 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38903 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38904 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38905 ;;  d               2    6[BANK0 ] PTR unsigned char 
 38906 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38907 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38908 ;;  tmp             1   10[BANK0 ] unsigned char 
 38909 ;; Return value:  Size  Location     Type
 38910 ;;                  2    0[BANK0 ] PTR void 
 38911 ;; Registers used:
 38912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38913 ;; Tracked objects:
 38914 ;;		On entry : 0/0
 38915 ;;		On exit  : 0/0
 38916 ;;		Unchanged: 0/0
 38917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38918 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38919 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38921 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38922 ;;Total ram usage:       11 bytes
 38923 ;; Hardware stack levels used:    1
 38924 ;; Hardware stack levels required when called:   10
 38925 ;; This function calls:
 38926 ;;		Nothing
 38927 ;; This function is called by:
 38928 ;;		_MSDProcessCommandMediaPresent
 38929 ;;		__display_start
 38930 ;;		_display_prepare
 38931 ;;		__flash_set_page_size
 38932 ;;		_fat_create_file
 38933 ;;		_api_prepare
 38934 ;;		__fill_buffer_get_status
 38935 ;; This function uses a non-reentrant model
 38936 ;;
 38937                           
 38938                           	psect	text160
 38939  0143BA                     __ptext160:
 38940                           	opt stack 0
 38941  0143BA                     _memcpy:
 38942                           	opt stack 17
 38943                           
 38944                           ;incstack = 0
 38945  0143BA  C062  F068         	movff	memcpy@s1,memcpy@s
 38946  0143BE  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 38947  0143C2  C060  F066         	movff	memcpy@d1,memcpy@d
 38948  0143C6  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 38949  0143CA  D01D               	goto	l3696
 38950  0143CC                     l12822:
 38951  0143CC  C068  FFF6         	movff	memcpy@s,tblptrl
 38952  0143D0  C069  FFF7         	movff	memcpy@s+1,tblptrh
 38953  0143D4  0E00               	movlw	low (__mediumconst shr (0+16))
 38954  0143D6  6EF8               	movwf	tblptru,c
 38955  0143D8  0E0E               	movlw	(high __ramtop+-1)
 38956  0143DA  64F7               	cpfsgt	tblptrh,c
 38957  0143DC  D003               	bra	u11137
 38958  0143DE  0008               	tblrd		*
 38959  0143E0  50F5               	movf	tablat,w,c
 38960  0143E2  D005               	bra	u11130
 38961  0143E4                     u11137:
 38962  0143E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 38963  0143E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 38964  0143EC  50EF               	movf	indf0,w,c
 38965  0143EE                     u11130:
 38966  0143EE  0100               	movlb	0	; () banked
 38967  0143F0  6F6A               	movwf	memcpy@tmp& (0+255),b
 38968                           
 38969                           ; BSR set to: 0
 38970  0143F2  4B68               	infsnz	memcpy@s& (0+255),f,b
 38971  0143F4  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 38972                           
 38973                           ; BSR set to: 0
 38974  0143F6  C066  FFD9         	movff	memcpy@d,fsr2l
 38975  0143FA  C067  FFDA         	movff	memcpy@d+1,fsr2h
 38976  0143FE  C06A  FFDF         	movff	memcpy@tmp,indf2
 38977                           
 38978                           ; BSR set to: 0
 38979  014402  4B66               	infsnz	memcpy@d& (0+255),f,b
 38980  014404  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 38981  014406                     l3696:
 38982                           
 38983                           ; BSR set to: 0
 38984  014406  0100               	movlb	0	; () banked
 38985  014408  0764               	decf	memcpy@n& (0+255),f,b
 38986  01440A  A0D8               	btfss	status,0,c
 38987  01440C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 38988  01440E  2964               	incf	memcpy@n& (0+255),w,b
 38989  014410  E1DD               	bnz	l12822
 38990  014412  2965               	incf	(memcpy@n+1)& (0+255),w,b
 38991  014414  B4D8               	btfsc	status,2,c
 38992  014416  0012               	return	
 38993  014418  D7D9               	goto	l3697
 38994  01441A                     __end_of_memcpy:
 38995                           	opt stack 0
 38996                           tosu	equ	0xFFF
 38997                           tosh	equ	0xFFE
 38998                           tosl	equ	0xFFD
 38999                           pclath	equ	0xFFA
 39000                           tblptru	equ	0xFF8
 39001                           tblptrh	equ	0xFF7
 39002                           tblptrl	equ	0xFF6
 39003                           tablat	equ	0xFF5
 39004                           prodh	equ	0xFF4
 39005                           prodl	equ	0xFF3
 39006                           intcon	equ	0xFF2
 39007                           indf0	equ	0xFEF
 39008                           postinc0	equ	0xFEE
 39009                           fsr0h	equ	0xFEA
 39010                           fsr0l	equ	0xFE9
 39011                           wreg	equ	0xFE8
 39012                           indf1	equ	0xFE7
 39013                           postinc1	equ	0xFE6
 39014                           postdec1	equ	0xFE5
 39015                           plusw1	equ	0xFE3
 39016                           fsr1h	equ	0xFE2
 39017                           fsr1l	equ	0xFE1
 39018                           indf2	equ	0xFDF
 39019                           postinc2	equ	0xFDE
 39020                           postdec2	equ	0xFDD
 39021                           plusw2	equ	0xFDB
 39022                           fsr2h	equ	0xFDA
 39023                           fsr2l	equ	0xFD9
 39024                           status	equ	0xFD8
 39025                           
 39026 ;; *************** function __fill_buffer_get_mode_details *****************
 39027 ;; Defined at:
 39028 ;;		line 272 in file "api.c"
 39029 ;; Parameters:    Size  Location     Type
 39030 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 39031 ;;		 -> ToSendDataBuffer(64), 
 39032 ;; Auto vars:     Size  Location     Type
 39033 ;;		None
 39034 ;; Return value:  Size  Location     Type
 39035 ;;                  1    wreg      void 
 39036 ;; Registers used:
 39037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39038 ;; Tracked objects:
 39039 ;;		On entry : 0/0
 39040 ;;		On exit  : 0/0
 39041 ;;		Unchanged: 0/0
 39042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39046 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39047 ;;Total ram usage:        4 bytes
 39048 ;; Hardware stack levels used:    1
 39049 ;; Hardware stack levels required when called:   10
 39050 ;; This function calls:
 39051 ;;		Nothing
 39052 ;; This function is called by:
 39053 ;;		_api_prepare
 39054 ;; This function uses a non-reentrant model
 39055 ;;
 39056                           
 39057                           	psect	text161
 39058  00F40C                     __ptext161:
 39059                           	opt stack 0
 39060  00F40C                     __fill_buffer_get_mode_details:
 39061                           	opt stack 18
 39062                           
 39063                           ;api.c: 275: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 39064                           
 39065                           ; BSR set to: 0
 39066                           ;incstack = 0
 39067  00F40C  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 39068  00F410  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 39069  00F414  0E13               	movlw	19
 39070  00F416  6EDF               	movwf	indf2,c
 39071                           
 39072                           ;api.c: 278: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39073  00F418  0100               	movlb	0	; () banked
 39074  00F41A  EE20 F001          	lfsr	2,1
 39075  00F41E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39076  00F420  26D9               	addwf	fsr2l,f,c
 39077  00F422  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39078  00F424  22DA               	addwfc	fsr2h,f,c
 39079  00F426  0EBC               	movlw	188
 39080  00F428  6EDF               	movwf	indf2,c
 39081                           
 39082                           ; BSR set to: 0
 39083                           ;api.c: 279: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39084  00F42A  EE20 F002          	lfsr	2,2
 39085  00F42E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39086  00F430  26D9               	addwf	fsr2l,f,c
 39087  00F432  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39088  00F434  22DA               	addwfc	fsr2h,f,c
 39089  00F436  0E26               	movlw	38
 39090  00F438  6EDF               	movwf	indf2,c
 39091                           
 39092                           ; BSR set to: 0
 39093                           ;api.c: 282: outBuffer[3] = os.displayState;
 39094  00F43A  EE20 F003          	lfsr	2,3
 39095  00F43E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39096  00F440  26D9               	addwf	fsr2l,f,c
 39097  00F442  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39098  00F444  22DA               	addwfc	fsr2h,f,c
 39099  00F446  C17E  FFDF         	movff	_os+13,indf2	;volatile
 39100                           
 39101                           ;api.c: 284: switch(os.displayState & 0x0F)
 39102  00F44A  D090               	goto	l2277
 39103  00F44C                     
 39104                           ; BSR set to: 0
 39105                           ;api.c: 290: case DISPLAY_STATE_SETUP2:;api.c: 291: outBuffer[4] = os.setup_step_size;
 39106                           
 39107                           ; BSR set to: 0
 39108                           
 39109                           ; BSR set to: 0
 39110  00F44C  EE20 F004          	lfsr	2,4
 39111  00F450  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39112  00F452  26D9               	addwf	fsr2l,f,c
 39113  00F454  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39114  00F456  22DA               	addwfc	fsr2h,f,c
 39115  00F458  C181  FFDF         	movff	_os+16,indf2	;volatile
 39116                           
 39117                           ;api.c: 292: break;
 39118  00F45C  0012               	return	
 39119  00F45E                     
 39120                           ; BSR set to: 0
 39121                           ;api.c: 295: case DISPLAY_STATE_DIVIDE2:;api.c: 297: outBuffer[4] = os.divide_step_size;
 39122                           
 39123                           ; BSR set to: 0
 39124                           
 39125                           ; BSR set to: 0
 39126  00F45E  EE20 F004          	lfsr	2,4
 39127  00F462  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39128  00F464  26D9               	addwf	fsr2l,f,c
 39129  00F466  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39130  00F468  22DA               	addwfc	fsr2h,f,c
 39131  00F46A  C186  FFDF         	movff	_os+21,indf2	;volatile
 39132                           
 39133                           ;api.c: 298: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 39134  00F46E  EE20 F005          	lfsr	2,5
 39135  00F472  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39136  00F474  26D9               	addwf	fsr2l,f,c
 39137  00F476  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39138  00F478  22DA               	addwfc	fsr2h,f,c
 39139  00F47A  0101               	movlb	1	; () banked
 39140  00F47C  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 39141  00F47E  6EDF               	movwf	indf2,c
 39142                           
 39143                           ;api.c: 299: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 39144  00F480  0100               	movlb	0	; () banked
 39145  00F482  EE20 F006          	lfsr	2,6
 39146  00F486  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39147  00F488  26D9               	addwf	fsr2l,f,c
 39148  00F48A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39149  00F48C  22DA               	addwfc	fsr2h,f,c
 39150  00F48E  C184  FFDF         	movff	_os+19,indf2	;volatile
 39151                           
 39152                           ;api.c: 300: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 39153  00F492  EE20 F007          	lfsr	2,7
 39154  00F496  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39155  00F498  26D9               	addwf	fsr2l,f,c
 39156  00F49A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39157  00F49C  22DA               	addwfc	fsr2h,f,c
 39158  00F49E  0101               	movlb	1	; () banked
 39159  00F4A0  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 39160  00F4A2  6EDF               	movwf	indf2,c
 39161                           
 39162                           ;api.c: 301: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 39163  00F4A4  0100               	movlb	0	; () banked
 39164  00F4A6  EE20 F008          	lfsr	2,8
 39165  00F4AA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39166  00F4AC  26D9               	addwf	fsr2l,f,c
 39167  00F4AE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39168  00F4B0  22DA               	addwfc	fsr2h,f,c
 39169  00F4B2  C189  FFDF         	movff	_os+24,indf2	;volatile
 39170                           
 39171                           ;api.c: 302: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 39172  00F4B6  EE20 F009          	lfsr	2,9
 39173  00F4BA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39174  00F4BC  26D9               	addwf	fsr2l,f,c
 39175  00F4BE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39176  00F4C0  22DA               	addwfc	fsr2h,f,c
 39177  00F4C2  0101               	movlb	1	; () banked
 39178  00F4C4  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 39179  00F4C6  6EDF               	movwf	indf2,c
 39180                           
 39181                           ;api.c: 303: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 39182  00F4C8  0100               	movlb	0	; () banked
 39183  00F4CA  EE20 F00A          	lfsr	2,10
 39184  00F4CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39185  00F4D0  26D9               	addwf	fsr2l,f,c
 39186  00F4D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39187  00F4D4  22DA               	addwfc	fsr2h,f,c
 39188  00F4D6  C187  FFDF         	movff	_os+22,indf2	;volatile
 39189                           
 39190                           ;api.c: 304: break;
 39191  00F4DA  0012               	return	
 39192  00F4DC                     
 39193                           ; BSR set to: 0
 39194                           ;api.c: 307: case DISPLAY_STATE_ARC2:;api.c: 308: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 39195                           
 39196                           ; BSR set to: 0
 39197                           
 39198                           ; BSR set to: 0
 39199  00F4DC  EE20 F004          	lfsr	2,4
 39200  00F4E0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39201  00F4E2  26D9               	addwf	fsr2l,f,c
 39202  00F4E4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39203  00F4E6  22DA               	addwfc	fsr2h,f,c
 39204  00F4E8  0101               	movlb	1	; () banked
 39205  00F4EA  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 39206  00F4EC  6EDF               	movwf	indf2,c
 39207                           
 39208                           ;api.c: 309: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 39209  00F4EE  0100               	movlb	0	; () banked
 39210  00F4F0  EE20 F005          	lfsr	2,5
 39211  00F4F4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39212  00F4F6  26D9               	addwf	fsr2l,f,c
 39213  00F4F8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39214  00F4FA  22DA               	addwfc	fsr2h,f,c
 39215  00F4FC  C18B  FFDF         	movff	_os+26,indf2	;volatile
 39216                           
 39217                           ;api.c: 310: outBuffer[6] = os.arc_direction;
 39218  00F500  EE20 F006          	lfsr	2,6
 39219  00F504  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39220  00F506  26D9               	addwf	fsr2l,f,c
 39221  00F508  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39222  00F50A  22DA               	addwfc	fsr2h,f,c
 39223  00F50C  C193  FFDF         	movff	_os+34,indf2	;volatile
 39224                           
 39225                           ;api.c: 311: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 39226  00F510  EE20 F007          	lfsr	2,7
 39227  00F514  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39228  00F516  26D9               	addwf	fsr2l,f,c
 39229  00F518  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39230  00F51A  22DA               	addwfc	fsr2h,f,c
 39231  00F51C  0101               	movlb	1	; () banked
 39232  00F51E  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 39233  00F520  6EDF               	movwf	indf2,c
 39234                           
 39235                           ;api.c: 312: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 39236  00F522  0100               	movlb	0	; () banked
 39237  00F524  EE20 F008          	lfsr	2,8
 39238  00F528  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39239  00F52A  26D9               	addwf	fsr2l,f,c
 39240  00F52C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39241  00F52E  22DA               	addwfc	fsr2h,f,c
 39242  00F530  C191  FFDF         	movff	_os+32,indf2	;volatile
 39243                           
 39244                           ; BSR set to: 0
 39245                           ;api.c: 316: break;
 39246                           
 39247                           ;api.c: 315: case DISPLAY_STATE_ZERO:
 39248                           
 39249                           ;api.c: 313: break;
 39250  00F534  0012               	return	
 39251  00F536                     
 39252                           ; BSR set to: 0
 39253                           ;api.c: 319: outBuffer[4] = os.manual_direction;
 39254                           
 39255                           ; BSR set to: 0
 39256  00F536  EE20 F004          	lfsr	2,4
 39257  00F53A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39258  00F53C  26D9               	addwf	fsr2l,f,c
 39259  00F53E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39260  00F540  22DA               	addwfc	fsr2h,f,c
 39261  00F542  C196  FFDF         	movff	_os+37,indf2	;volatile
 39262                           
 39263                           ;api.c: 320: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 39264  00F546  EE20 F005          	lfsr	2,5
 39265  00F54A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39266  00F54C  26D9               	addwf	fsr2l,f,c
 39267  00F54E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39268  00F550  22DA               	addwfc	fsr2h,f,c
 39269  00F552  0101               	movlb	1	; () banked
 39270  00F554  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 39271  00F556  6EDF               	movwf	indf2,c
 39272                           
 39273                           ;api.c: 321: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 39274  00F558  0100               	movlb	0	; () banked
 39275  00F55A  EE20 F006          	lfsr	2,6
 39276  00F55E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39277  00F560  26D9               	addwf	fsr2l,f,c
 39278  00F562  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39279  00F564  22DA               	addwfc	fsr2h,f,c
 39280  00F566  C194  FFDF         	movff	_os+35,indf2	;volatile
 39281                           
 39282                           ; BSR set to: 0
 39283                           ;api.c: 323: }
 39284                           
 39285                           ;api.c: 322: break;
 39286  00F56A  0012               	return	
 39287  00F56C                     l2277:
 39288                           
 39289                           ; BSR set to: 0
 39290                           
 39291                           ; BSR set to: 0
 39292  00F56C  0101               	movlb	1	; () banked
 39293  00F56E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 39294  00F570  0B0F               	andlw	15
 39295  00F572  0100               	movlb	0	; () banked
 39296  00F574  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 39297  00F576  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 39298                           
 39299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39300                           ; Switch size 1, requested type "space"
 39301                           ; Number of cases is 1, Range of values is 0 to 0
 39302                           ; switch strategies available:
 39303                           ; Name         Instructions Cycles
 39304                           ; simple_byte            4     3 (average)
 39305                           ;	Chosen strategy is simple_byte
 39306  00F578  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 39307  00F57A  0A00               	xorlw	0	; case 0
 39308  00F57C  A4D8               	btfss	status,2,c
 39309  00F57E  0012               	return	
 39310                           
 39311                           ; BSR set to: 0
 39312                           ; Switch size 1, requested type "space"
 39313                           ; Number of cases is 9, Range of values is 0 to 128
 39314                           ; switch strategies available:
 39315                           ; Name         Instructions Cycles
 39316                           ; simple_byte           28    15 (average)
 39317                           ;	Chosen strategy is simple_byte
 39318  00F580  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 39319  00F582  0A00               	xorlw	0	; case 0
 39320  00F584  B4D8               	btfsc	status,2,c
 39321  00F586  0012               	return	
 39322  00F588  0A10               	xorlw	16	; case 16
 39323  00F58A  B4D8               	btfsc	status,2,c
 39324  00F58C  D75F               	goto	l2280
 39325  00F58E  0A30               	xorlw	48	; case 32
 39326  00F590  B4D8               	btfsc	status,2,c
 39327  00F592  D75C               	goto	l2280
 39328  00F594  0A10               	xorlw	16	; case 48
 39329  00F596  B4D8               	btfsc	status,2,c
 39330  00F598  D762               	goto	l2282
 39331  00F59A  0A70               	xorlw	112	; case 64
 39332  00F59C  B4D8               	btfsc	status,2,c
 39333  00F59E  D75F               	goto	l2282
 39334  00F5A0  0A10               	xorlw	16	; case 80
 39335  00F5A2  B4D8               	btfsc	status,2,c
 39336  00F5A4  D79B               	goto	l2284
 39337  00F5A6  0A30               	xorlw	48	; case 96
 39338  00F5A8  B4D8               	btfsc	status,2,c
 39339  00F5AA  D798               	goto	l2284
 39340  00F5AC  0A10               	xorlw	16	; case 112
 39341  00F5AE  B4D8               	btfsc	status,2,c
 39342  00F5B0  0012               	return	
 39343  00F5B2  0AF0               	xorlw	240	; case 128
 39344  00F5B4  A4D8               	btfss	status,2,c
 39345  00F5B6  0012               	return	
 39346  00F5B8  D7BE               	goto	l2287
 39347  00F5BA                     __end_of__fill_buffer_get_mode_details:
 39348                           	opt stack 0
 39349                           tosu	equ	0xFFF
 39350                           tosh	equ	0xFFE
 39351                           tosl	equ	0xFFD
 39352                           pclath	equ	0xFFA
 39353                           tblptru	equ	0xFF8
 39354                           tblptrh	equ	0xFF7
 39355                           tblptrl	equ	0xFF6
 39356                           tablat	equ	0xFF5
 39357                           prodh	equ	0xFF4
 39358                           prodl	equ	0xFF3
 39359                           intcon	equ	0xFF2
 39360                           indf0	equ	0xFEF
 39361                           postinc0	equ	0xFEE
 39362                           fsr0h	equ	0xFEA
 39363                           fsr0l	equ	0xFE9
 39364                           wreg	equ	0xFE8
 39365                           indf1	equ	0xFE7
 39366                           postinc1	equ	0xFE6
 39367                           postdec1	equ	0xFE5
 39368                           plusw1	equ	0xFE3
 39369                           fsr1h	equ	0xFE2
 39370                           fsr1l	equ	0xFE1
 39371                           indf2	equ	0xFDF
 39372                           postinc2	equ	0xFDE
 39373                           postdec2	equ	0xFDD
 39374                           plusw2	equ	0xFDB
 39375                           fsr2h	equ	0xFDA
 39376                           fsr2l	equ	0xFD9
 39377                           status	equ	0xFD8
 39378                           
 39379 ;; *************** function __fill_buffer_get_display *****************
 39380 ;; Defined at:
 39381 ;;		line 231 in file "api.c"
 39382 ;; Parameters:    Size  Location     Type
 39383 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 39384 ;;		 -> ToSendDataBuffer(64), 
 39385 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 39386 ;; Auto vars:     Size  Location     Type
 39387 ;;  position        1   15[BANK0 ] unsigned char 
 39388 ;;  start_line      1   14[BANK0 ] unsigned char 
 39389 ;;  line            1   13[BANK0 ] unsigned char 
 39390 ;;  cntr            1   12[BANK0 ] unsigned char 
 39391 ;; Return value:  Size  Location     Type
 39392 ;;                  1    wreg      void 
 39393 ;; Registers used:
 39394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39395 ;; Tracked objects:
 39396 ;;		On entry : 0/0
 39397 ;;		On exit  : 0/0
 39398 ;;		Unchanged: 0/0
 39399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39400 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39401 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39402 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39403 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39404 ;;Total ram usage:       12 bytes
 39405 ;; Hardware stack levels used:    1
 39406 ;; Hardware stack levels required when called:   11
 39407 ;; This function calls:
 39408 ;;		_display_get_character
 39409 ;; This function is called by:
 39410 ;;		_api_prepare
 39411 ;; This function uses a non-reentrant model
 39412 ;;
 39413                           
 39414                           	psect	text162
 39415  012B48                     __ptext162:
 39416                           	opt stack 0
 39417  012B48                     __fill_buffer_get_display:
 39418                           	opt stack 17
 39419                           
 39420                           ;api.c: 233: uint8_t cntr;;api.c: 234: uint8_t line;;api.c: 235: uint8_t start_line;;api
      +                          .c: 236: uint8_t position;;api.c: 239: if(secondHalf)
 39421                           
 39422                           ; BSR set to: 0
 39423                           ;incstack = 0
 39424  012B48  0100               	movlb	0	; () banked
 39425  012B4A  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39426  012B4C  B4D8               	btfsc	status,2,c
 39427  012B4E  D006               	goto	l2265
 39428                           
 39429                           ; BSR set to: 0
 39430                           ;api.c: 240: {;api.c: 241: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 39431  012B50  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39432  012B54  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39433  012B58  0E12               	movlw	18
 39434  012B5A  D005               	goto	L61
 39435  012B5C                     l2265:
 39436                           
 39437                           ; BSR set to: 0
 39438                           ;api.c: 243: else;api.c: 244: {;api.c: 245: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 39439                           
 39440                           ; BSR set to: 0
 39441  012B5C  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39442  012B60  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39443  012B64  0E11               	movlw	17
 39444  012B66                     L61:
 39445  012B66  6EDF               	movwf	indf2,c
 39446                           
 39447                           ; BSR set to: 0
 39448                           ;api.c: 246: };api.c: 249: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39449                           
 39450                           ; BSR set to: 0
 39451  012B68  EE20 F001          	lfsr	2,1
 39452  012B6C  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39453  012B6E  26D9               	addwf	fsr2l,f,c
 39454  012B70  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39455  012B72  22DA               	addwfc	fsr2h,f,c
 39456  012B74  0EBC               	movlw	188
 39457  012B76  6EDF               	movwf	indf2,c
 39458                           
 39459                           ; BSR set to: 0
 39460                           ;api.c: 250: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39461  012B78  EE20 F002          	lfsr	2,2
 39462  012B7C  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39463  012B7E  26D9               	addwf	fsr2l,f,c
 39464  012B80  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39465  012B82  22DA               	addwfc	fsr2h,f,c
 39466  012B84  0E26               	movlw	38
 39467  012B86  6EDF               	movwf	indf2,c
 39468                           
 39469                           ; BSR set to: 0
 39470                           ;api.c: 253: cntr = 3;
 39471  012B88  0E03               	movlw	3
 39472  012B8A  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;api.c: 254: if(secondHalf)
 39476  012B8C  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39477  012B8E  B4D8               	btfsc	status,2,c
 39478  012B90  D002               	goto	l2267
 39479                           
 39480                           ; BSR set to: 0
 39481                           ;api.c: 255: {;api.c: 256: start_line = 2;
 39482  012B92  0E02               	movlw	2
 39483  012B94  D001               	goto	L62
 39484  012B96                     l2267:
 39485                           
 39486                           ; BSR set to: 0
 39487                           ;api.c: 258: else;api.c: 259: {;api.c: 260: start_line = 0;
 39488                           
 39489                           ; BSR set to: 0
 39490  012B96  0E00               	movlw	0
 39491  012B98                     L62:
 39492  012B98  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 39493                           
 39494                           ; BSR set to: 0
 39495                           ;api.c: 261: };api.c: 262: for(line=start_line; line<start_line+2; ++line)
 39496                           
 39497                           ; BSR set to: 0
 39498  012B9A  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 39499  012B9E  D01B               	goto	l2269
 39500  012BA0                     
 39501                           ; BSR set to: 0
 39502                           ;api.c: 263: {;api.c: 264: for(position=0; position<20; ++position)
 39503                           
 39504                           ; BSR set to: 0
 39505  012BA0  0E00               	movlw	0
 39506  012BA2  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 39507  012BA4                     l15944:
 39508                           
 39509                           ; BSR set to: 0
 39510  012BA4  0E13               	movlw	19
 39511  012BA6  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 39512  012BA8  D001               	goto	l2271
 39513  012BAA  D014               	goto	u14820
 39514  012BAC                     l2271:
 39515                           
 39516                           ; BSR set to: 0
 39517                           ;api.c: 265: {;api.c: 266: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 39518                           
 39519                           ; BSR set to: 0
 39520  012BAC  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 39521  012BB0  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39522  012BB2  EC1B  F0AA         	call	_display_get_character
 39523  012BB6  0100               	movlb	0	; () banked
 39524  012BB8  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39525  012BBA  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 39526  012BBC  0D01               	mullw	1
 39527  012BBE  50F3               	movf	prodl,w,c
 39528  012BC0  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39529  012BC2  6ED9               	movwf	fsr2l,c
 39530  012BC4  50F4               	movf	prodh,w,c
 39531  012BC6  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39532  012BC8  6EDA               	movwf	fsr2h,c
 39533  012BCA  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 39534                           
 39535                           ; BSR set to: 0
 39536                           ;api.c: 267: ++cntr;
 39537  012BCE  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 39538                           
 39539                           ; BSR set to: 0
 39540  012BD0  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 39541  012BD2  D7E8               	goto	l15944
 39542  012BD4                     u14820:
 39543                           
 39544                           ; BSR set to: 0
 39545                           
 39546                           ; BSR set to: 0
 39547  012BD4  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 39548  012BD6                     l2269:
 39549                           
 39550                           ; BSR set to: 0
 39551                           
 39552                           ; BSR set to: 0
 39553  012BD6  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 39554  012BD8  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39555  012BDA  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 39556  012BDC  0E02               	movlw	2
 39557  012BDE  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 39558  012BE0  0E00               	movlw	0
 39559  012BE2  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 39560  012BE4  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39561  012BE6  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 39562  012BE8  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 39563  012BEA  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 39564  012BEC  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 39565  012BEE  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 39566  012BF0  0A80               	xorlw	128
 39567  012BF2  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 39568  012BF4  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 39569  012BF6  0A80               	xorlw	128
 39570  012BF8  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 39571  012BFA  B0D8               	btfsc	status,0,c
 39572  012BFC  0012               	return	
 39573  012BFE  D7D0               	goto	l2270
 39574  012C00                     __end_of__fill_buffer_get_display:
 39575                           	opt stack 0
 39576                           tosu	equ	0xFFF
 39577                           tosh	equ	0xFFE
 39578                           tosl	equ	0xFFD
 39579                           pclath	equ	0xFFA
 39580                           tblptru	equ	0xFF8
 39581                           tblptrh	equ	0xFF7
 39582                           tblptrl	equ	0xFF6
 39583                           tablat	equ	0xFF5
 39584                           prodh	equ	0xFF4
 39585                           prodl	equ	0xFF3
 39586                           intcon	equ	0xFF2
 39587                           indf0	equ	0xFEF
 39588                           postinc0	equ	0xFEE
 39589                           fsr0h	equ	0xFEA
 39590                           fsr0l	equ	0xFE9
 39591                           wreg	equ	0xFE8
 39592                           indf1	equ	0xFE7
 39593                           postinc1	equ	0xFE6
 39594                           postdec1	equ	0xFE5
 39595                           plusw1	equ	0xFE3
 39596                           fsr1h	equ	0xFE2
 39597                           fsr1l	equ	0xFE1
 39598                           indf2	equ	0xFDF
 39599                           postinc2	equ	0xFDE
 39600                           postdec2	equ	0xFDD
 39601                           plusw2	equ	0xFDB
 39602                           fsr2h	equ	0xFDA
 39603                           fsr2l	equ	0xFD9
 39604                           status	equ	0xFD8
 39605                           
 39606 ;; *************** function _display_get_character *****************
 39607 ;; Defined at:
 39608 ;;		line 628 in file "display.c"
 39609 ;; Parameters:    Size  Location     Type
 39610 ;;  line            1    wreg     unsigned char 
 39611 ;;  position        1    0[BANK0 ] unsigned char 
 39612 ;; Auto vars:     Size  Location     Type
 39613 ;;  line            1    3[BANK0 ] unsigned char 
 39614 ;; Return value:  Size  Location     Type
 39615 ;;                  1    wreg      unsigned char 
 39616 ;; Registers used:
 39617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39618 ;; Tracked objects:
 39619 ;;		On entry : 0/0
 39620 ;;		On exit  : 0/0
 39621 ;;		Unchanged: 0/0
 39622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39623 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39626 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39627 ;;Total ram usage:        4 bytes
 39628 ;; Hardware stack levels used:    1
 39629 ;; Hardware stack levels required when called:   10
 39630 ;; This function calls:
 39631 ;;		Nothing
 39632 ;; This function is called by:
 39633 ;;		__fill_buffer_get_display
 39634 ;; This function uses a non-reentrant model
 39635 ;;
 39636                           
 39637                           	psect	text163
 39638  015436                     __ptext163:
 39639                           	opt stack 0
 39640  015436                     _display_get_character:
 39641                           	opt stack 17
 39642                           
 39643                           ; BSR set to: 0
 39644                           ;incstack = 0
 39645                           ;display_get_character@line stored from wreg
 39646  015436  0100               	movlb	0	; () banked
 39647  015438  6F63               	movwf	display_get_character@line& (0+255),b
 39648                           
 39649                           ;display.c: 630: return display_content[line][position];
 39650  01543A  0100               	movlb	0	; () banked
 39651  01543C  5163               	movf	display_get_character@line& (0+255),w,b
 39652  01543E  0D14               	mullw	20
 39653  015440  0E34               	movlw	low _display_content
 39654  015442  6F61               	movwf	??_display_get_character& (0+255),b
 39655  015444  0E02               	movlw	high _display_content
 39656  015446  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 39657  015448  50F3               	movf	prodl,w,c
 39658  01544A  2761               	addwf	??_display_get_character& (0+255),f,b
 39659  01544C  50F4               	movf	prodh,w,c
 39660  01544E  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 39661  015450  5160               	movf	display_get_character@position& (0+255),w,b
 39662  015452  0D01               	mullw	1
 39663  015454  50F3               	movf	prodl,w,c
 39664  015456  2561               	addwf	??_display_get_character& (0+255),w,b
 39665  015458  6ED9               	movwf	fsr2l,c
 39666  01545A  50F4               	movf	prodh,w,c
 39667  01545C  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 39668  01545E  6EDA               	movwf	fsr2h,c
 39669  015460  50DF               	movf	indf2,w,c
 39670  015462  0012               	return	
 39671  015464                     __end_of_display_get_character:
 39672                           	opt stack 0
 39673                           tosu	equ	0xFFF
 39674                           tosh	equ	0xFFE
 39675                           tosl	equ	0xFFD
 39676                           pclath	equ	0xFFA
 39677                           tblptru	equ	0xFF8
 39678                           tblptrh	equ	0xFF7
 39679                           tblptrl	equ	0xFF6
 39680                           tablat	equ	0xFF5
 39681                           prodh	equ	0xFF4
 39682                           prodl	equ	0xFF3
 39683                           intcon	equ	0xFF2
 39684                           indf0	equ	0xFEF
 39685                           postinc0	equ	0xFEE
 39686                           fsr0h	equ	0xFEA
 39687                           fsr0l	equ	0xFE9
 39688                           wreg	equ	0xFE8
 39689                           indf1	equ	0xFE7
 39690                           postinc1	equ	0xFE6
 39691                           postdec1	equ	0xFE5
 39692                           plusw1	equ	0xFE3
 39693                           fsr1h	equ	0xFE2
 39694                           fsr1l	equ	0xFE1
 39695                           indf2	equ	0xFDF
 39696                           postinc2	equ	0xFDE
 39697                           postdec2	equ	0xFDD
 39698                           plusw2	equ	0xFDB
 39699                           fsr2h	equ	0xFDA
 39700                           fsr2l	equ	0xFD9
 39701                           status	equ	0xFD8
 39702                           
 39703 ;; *************** function _api_parse *****************
 39704 ;; Defined at:
 39705 ;;		line 93 in file "api.c"
 39706 ;; Parameters:    Size  Location     Type
 39707 ;;  inBuffer        2  100[BANK0 ] PTR unsigned char 
 39708 ;;		 -> ReceivedDataBuffer(64), 
 39709 ;;  receivedData    1  102[BANK0 ] unsigned char 
 39710 ;;  outBuffer       2  103[BANK0 ] PTR unsigned char 
 39711 ;;		 -> ToSendDataBuffer(64), 
 39712 ;; Auto vars:     Size  Location     Type
 39713 ;;  out_idx_ptr     2  107[BANK0 ] PTR unsigned char 
 39714 ;;		 -> api_parse@out_idx(1), 
 39715 ;;  in_idx          1  110[BANK0 ] unsigned char 
 39716 ;;  out_idx         1  109[BANK0 ] unsigned char 
 39717 ;; Return value:  Size  Location     Type
 39718 ;;                  1    wreg      void 
 39719 ;; Registers used:
 39720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39721 ;; Tracked objects:
 39722 ;;		On entry : 0/0
 39723 ;;		On exit  : 0/0
 39724 ;;		Unchanged: 0/0
 39725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39726 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39727 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39729 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39730 ;;Total ram usage:       11 bytes
 39731 ;; Hardware stack levels used:    1
 39732 ;; Hardware stack levels required when called:   16
 39733 ;; This function calls:
 39734 ;;		__parse_command_long
 39735 ;;		__parse_command_short
 39736 ;; This function is called by:
 39737 ;;		_APP_DeviceCustomHIDTasks
 39738 ;; This function uses a non-reentrant model
 39739 ;;
 39740                           
 39741                           	psect	text164
 39742  010846                     __ptext164:
 39743                           	opt stack 0
 39744  010846                     _api_parse:
 39745                           	opt stack 13
 39746                           
 39747                           ;api.c: 97: uint8_t in_idx;;api.c: 98: uint8_t out_idx;;api.c: 99: uint8_t *out_idx_ptr;
      +                          ;api.c: 101: out_idx = 0;
 39748                           
 39749                           ; BSR set to: 0
 39750                           ;incstack = 0
 39751  010846  0E00               	movlw	0
 39752  010848  0100               	movlb	0	; () banked
 39753  01084A  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39754                           
 39755                           ; BSR set to: 0
 39756                           ;api.c: 102: out_idx_ptr = &out_idx;
 39757  01084C  0ECD               	movlw	low api_parse@out_idx
 39758  01084E  6FCB               	movwf	api_parse@out_idx_ptr& (0+255),b
 39759  010850  0E00               	movlw	high api_parse@out_idx
 39760  010852  6FCC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 39761                           
 39762                           ; BSR set to: 0
 39763                           ;api.c: 104: if(inBuffer[0]>0x7F)
 39764  010854  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39765  010858  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39766  01085C  0E7F               	movlw	127
 39767  01085E  64DF               	cpfsgt	indf2,c
 39768  010860  D001               	goto	l2246
 39769  010862  0012               	return	
 39770  010864                     l2246:
 39771                           
 39772                           ; BSR set to: 0
 39773                           ;api.c: 109: };api.c: 111: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 39774                           
 39775                           ; BSR set to: 0
 39776  010864  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39777  010868  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39778  01086C  0E20               	movlw	32
 39779  01086E  18DE               	xorwf	postinc2,w,c
 39780  010870  B4D8               	btfsc	status,2,c
 39781  010872  0012               	return	
 39782                           
 39783                           ; BSR set to: 0
 39784                           ;api.c: 116: };api.c: 118: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 39785                           
 39786                           ; BSR set to: 0
 39787                           
 39788                           ; BSR set to: 0
 39789                           ;api.c: 112: {;api.c: 115: return;
 39790  010874  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39791  010878  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39792  01087C  50DF               	movf	indf2,w,c
 39793  01087E  A4D8               	btfss	status,2,c
 39794  010880  D018               	goto	l2249
 39795                           
 39796                           ; BSR set to: 0
 39797                           ;api.c: 119: {;api.c: 121: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 39798  010882  C0C7  FFD9         	movff	api_parse@outBuffer,fsr2l
 39799  010886  C0C8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 39800  01088A  0E00               	movlw	0
 39801  01088C  6EDF               	movwf	indf2,c
 39802                           
 39803                           ; BSR set to: 0
 39804                           ;api.c: 124: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39805  01088E  EE20 F001          	lfsr	2,1
 39806  010892  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39807  010894  26D9               	addwf	fsr2l,f,c
 39808  010896  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39809  010898  22DA               	addwfc	fsr2h,f,c
 39810  01089A  0EBC               	movlw	188
 39811  01089C  6EDF               	movwf	indf2,c
 39812                           
 39813                           ; BSR set to: 0
 39814                           ;api.c: 125: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39815  01089E  EE20 F002          	lfsr	2,2
 39816  0108A2  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39817  0108A4  26D9               	addwf	fsr2l,f,c
 39818  0108A6  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39819  0108A8  22DA               	addwfc	fsr2h,f,c
 39820  0108AA  0E26               	movlw	38
 39821  0108AC  6EDF               	movwf	indf2,c
 39822                           
 39823                           ; BSR set to: 0
 39824                           ;api.c: 128: out_idx = 3;
 39825  0108AE  0E03               	movlw	3
 39826  0108B0  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39827  0108B2                     l2249:
 39828                           
 39829                           ; BSR set to: 0
 39830                           ;api.c: 129: };api.c: 131: in_idx = 1;
 39831                           
 39832                           ; BSR set to: 0
 39833  0108B2  0E01               	movlw	1
 39834  0108B4  6FCE               	movwf	api_parse@in_idx& (0+255),b
 39835                           
 39836                           ;api.c: 132: while(in_idx<receivedDataLength)
 39837  0108B6  D057               	goto	l2255
 39838  0108B8                     
 39839                           ; BSR set to: 0
 39840                           ;api.c: 133: {;api.c: 135: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 39841                           
 39842                           ; BSR set to: 0
 39843  0108B8  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39844  0108BA  0D01               	mullw	1
 39845  0108BC  50F3               	movf	prodl,w,c
 39846  0108BE  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39847  0108C0  6ED9               	movwf	fsr2l,c
 39848  0108C2  50F4               	movf	prodh,w,c
 39849  0108C4  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39850  0108C6  6EDA               	movwf	fsr2h,c
 39851  0108C8  0E99               	movlw	153
 39852  0108CA  18DE               	xorwf	postinc2,w,c
 39853  0108CC  B4D8               	btfsc	status,2,c
 39854  0108CE  0012               	return	
 39855  0108D0  D02F               	goto	l2253
 39856  0108D2                     
 39857                           ; BSR set to: 0
 39858                           ;api.c: 143: _parse_command_short(inBuffer[in_idx]);
 39859                           
 39860                           ; BSR set to: 0
 39861  0108D2  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39862  0108D4  0D01               	mullw	1
 39863  0108D6  50F3               	movf	prodl,w,c
 39864  0108D8  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39865  0108DA  6ED9               	movwf	fsr2l,c
 39866  0108DC  50F4               	movf	prodh,w,c
 39867  0108DE  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39868  0108E0  6EDA               	movwf	fsr2h,c
 39869  0108E2  50DF               	movf	indf2,w,c
 39870  0108E4  EC7B  F07C         	call	__parse_command_short
 39871  0108E8  D00B               	goto	l16808
 39872  0108EA                     
 39873                           ; BSR set to: 0
 39874                           ;api.c: 148: _parse_command_short(inBuffer[in_idx]);
 39875                           
 39876                           ; BSR set to: 0
 39877  0108EA  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39878  0108EC  0D01               	mullw	1
 39879  0108EE  50F3               	movf	prodl,w,c
 39880  0108F0  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39881  0108F2  6ED9               	movwf	fsr2l,c
 39882  0108F4  50F4               	movf	prodh,w,c
 39883  0108F6  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39884  0108F8  6EDA               	movwf	fsr2h,c
 39885  0108FA  50DF               	movf	indf2,w,c
 39886  0108FC  EC7B  F07C         	call	__parse_command_short
 39887  010900                     l16808:
 39888                           
 39889                           ;api.c: 149: ++in_idx;
 39890  010900  0100               	movlb	0	; () banked
 39891  010902  2BCE               	incf	api_parse@in_idx& (0+255),f,b
 39892                           
 39893                           ;api.c: 150: break;
 39894  010904  D030               	goto	l2255
 39895  010906                     
 39896                           ; BSR set to: 0
 39897                           ;api.c: 153: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 39898                           
 39899                           ; BSR set to: 0
 39900  010906  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39901  010908  0D01               	mullw	1
 39902  01090A  50F3               	movf	prodl,w,c
 39903  01090C  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39904  01090E  6FB3               	movwf	__parse_command_long@data& (0+255),b
 39905  010910  50F4               	movf	prodh,w,c
 39906  010912  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39907  010914  6FB4               	movwf	(__parse_command_long@data+1)& (0+255),b
 39908  010916  C0C7  F0B5         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 39909  01091A  C0C8  F0B6         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 39910  01091E  C0CB  F0B7         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 39911  010922  C0CC  F0B8         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 39912  010926  EC7B  F0A1         	call	__parse_command_long	;wreg free
 39913  01092A  0100               	movlb	0	; () banked
 39914  01092C  27CE               	addwf	api_parse@in_idx& (0+255),f,b
 39915                           
 39916                           ;api.c: 154: break;
 39917  01092E  D01B               	goto	l2255
 39918  010930                     l2253:
 39919                           
 39920                           ; BSR set to: 0
 39921                           
 39922                           ; BSR set to: 0
 39923  010930  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39924  010932  0D01               	mullw	1
 39925  010934  50F3               	movf	prodl,w,c
 39926  010936  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39927  010938  6ED9               	movwf	fsr2l,c
 39928  01093A  50F4               	movf	prodh,w,c
 39929  01093C  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39930  01093E  6EDA               	movwf	fsr2h,c
 39931  010940  50DF               	movf	indf2,w,c
 39932  010942  0BF0               	andlw	240
 39933  010944  6FC9               	movwf	??_api_parse& (0+255),b
 39934  010946  6BCA               	clrf	(??_api_parse+1)& (0+255),b
 39935                           
 39936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39937                           ; Switch size 1, requested type "space"
 39938                           ; Number of cases is 1, Range of values is 0 to 0
 39939                           ; switch strategies available:
 39940                           ; Name         Instructions Cycles
 39941                           ; simple_byte            4     3 (average)
 39942                           ;	Chosen strategy is simple_byte
 39943  010948  51CA               	movf	(??_api_parse+1)& (0+255),w,b
 39944  01094A  0A00               	xorlw	0	; case 0
 39945  01094C  A4D8               	btfss	status,2,c
 39946  01094E  0012               	return	
 39947                           
 39948                           ; BSR set to: 0
 39949                           ; Switch size 1, requested type "space"
 39950                           ; Number of cases is 3, Range of values is 32 to 144
 39951                           ; switch strategies available:
 39952                           ; Name         Instructions Cycles
 39953                           ; simple_byte           10     6 (average)
 39954                           ;	Chosen strategy is simple_byte
 39955  010950  51C9               	movf	??_api_parse& (0+255),w,b
 39956  010952  0A20               	xorlw	32	; case 32
 39957  010954  B4D8               	btfsc	status,2,c
 39958  010956  D7BD               	goto	l2254
 39959  010958  0A10               	xorlw	16	; case 48
 39960  01095A  B4D8               	btfsc	status,2,c
 39961  01095C  D7C6               	goto	l2256
 39962  01095E  0AA0               	xorlw	160	; case 144
 39963  010960  A4D8               	btfss	status,2,c
 39964  010962  0012               	return	
 39965  010964  D7D0               	goto	l2257
 39966  010966                     l2255:
 39967                           
 39968                           ; BSR set to: 0
 39969                           
 39970                           ; BSR set to: 0
 39971                           
 39972                           ; BSR set to: 0
 39973  010966  51C6               	movf	api_parse@receivedDataLength& (0+255),w,b
 39974  010968  5DCE               	subwf	api_parse@in_idx& (0+255),w,b
 39975  01096A  B0D8               	btfsc	status,0,c
 39976  01096C  0012               	return	
 39977  01096E  D7A4               	goto	l2251
 39978  010970                     __end_of_api_parse:
 39979                           	opt stack 0
 39980                           tosu	equ	0xFFF
 39981                           tosh	equ	0xFFE
 39982                           tosl	equ	0xFFD
 39983                           pclath	equ	0xFFA
 39984                           tblptru	equ	0xFF8
 39985                           tblptrh	equ	0xFF7
 39986                           tblptrl	equ	0xFF6
 39987                           tablat	equ	0xFF5
 39988                           prodh	equ	0xFF4
 39989                           prodl	equ	0xFF3
 39990                           intcon	equ	0xFF2
 39991                           indf0	equ	0xFEF
 39992                           postinc0	equ	0xFEE
 39993                           fsr0h	equ	0xFEA
 39994                           fsr0l	equ	0xFE9
 39995                           wreg	equ	0xFE8
 39996                           indf1	equ	0xFE7
 39997                           postinc1	equ	0xFE6
 39998                           postdec1	equ	0xFE5
 39999                           plusw1	equ	0xFE3
 40000                           fsr1h	equ	0xFE2
 40001                           fsr1l	equ	0xFE1
 40002                           indf2	equ	0xFDF
 40003                           postinc2	equ	0xFDE
 40004                           postdec2	equ	0xFDD
 40005                           plusw2	equ	0xFDB
 40006                           fsr2h	equ	0xFDA
 40007                           fsr2l	equ	0xFD9
 40008                           status	equ	0xFD8
 40009                           
 40010 ;; *************** function __parse_command_short *****************
 40011 ;; Defined at:
 40012 ;;		line 326 in file "api.c"
 40013 ;; Parameters:    Size  Location     Type
 40014 ;;  cmd             1    wreg     unsigned char 
 40015 ;; Auto vars:     Size  Location     Type
 40016 ;;  cmd             1   99[BANK0 ] unsigned char 
 40017 ;; Return value:  Size  Location     Type
 40018 ;;                  1    wreg      void 
 40019 ;; Registers used:
 40020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40021 ;; Tracked objects:
 40022 ;;		On entry : 0/0
 40023 ;;		On exit  : 0/0
 40024 ;;		Unchanged: 0/0
 40025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40029 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40030 ;;Total ram usage:        1 bytes
 40031 ;; Hardware stack levels used:    1
 40032 ;; Hardware stack levels required when called:   15
 40033 ;; This function calls:
 40034 ;;		_motor_clear_command_cue
 40035 ;;		_motor_go_to_steps_position
 40036 ;;		_motor_schedule_command
 40037 ;;		_motor_set_zero
 40038 ;;		_motor_stop
 40039 ;; This function is called by:
 40040 ;;		_api_parse
 40041 ;; This function uses a non-reentrant model
 40042 ;;
 40043                           
 40044                           	psect	text165
 40045  00F8F6                     __ptext165:
 40046                           	opt stack 0
 40047  00F8F6                     __parse_command_short:
 40048                           	opt stack 13
 40049                           
 40050                           ; BSR set to: 0
 40051                           ;incstack = 0
 40052                           ;__parse_command_short@cmd stored from wreg
 40053  00F8F6  0100               	movlb	0	; () banked
 40054  00F8F8  6FC3               	movwf	__parse_command_short@cmd& (0+255),b
 40055                           
 40056                           ;api.c: 328: switch(cmd)
 40057  00F8FA  D07E               	goto	l2291
 40058  00F8FC                     
 40059                           ;api.c: 346: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40060  00F8FC  0E01               	movlw	1
 40061  00F8FE  0101               	movlb	1	; () banked
 40062  00F900  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40063                           
 40064                           ;api.c: 347: break;
 40065  00F902  0012               	return	
 40066  00F904                     
 40067                           ;api.c: 350: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 40068                           
 40069                           ; BSR set to: 1
 40070  00F904  0E11               	movlw	17
 40071  00F906  0101               	movlb	1	; () banked
 40072  00F908  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40073                           
 40074                           ;api.c: 351: break;
 40075  00F90A  0012               	return	
 40076  00F90C                     
 40077                           ;api.c: 354: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 40078                           
 40079                           ; BSR set to: 1
 40080  00F90C  0E31               	movlw	49
 40081  00F90E  0101               	movlb	1	; () banked
 40082  00F910  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40083                           
 40084                           ;api.c: 355: break;
 40085  00F912  0012               	return	
 40086  00F914                     
 40087                           ;api.c: 358: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 40088                           
 40089                           ; BSR set to: 1
 40090  00F914  0E51               	movlw	81
 40091  00F916  0101               	movlb	1	; () banked
 40092  00F918  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40093                           
 40094                           ;api.c: 359: break;
 40095  00F91A  0012               	return	
 40096  00F91C                     
 40097                           ;api.c: 362: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40098                           
 40099                           ; BSR set to: 1
 40100  00F91C  0E82               	movlw	130
 40101  00F91E  0101               	movlb	1	; () banked
 40102  00F920  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40103                           
 40104                           ;api.c: 363: break;
 40105  00F922  0012               	return	
 40106  00F924                     
 40107                           ;api.c: 366: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 40108                           
 40109                           ; BSR set to: 1
 40110  00F924  0E71               	movlw	113
 40111  00F926  0101               	movlb	1	; () banked
 40112  00F928  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40113                           
 40114                           ;api.c: 367: break;
 40115  00F92A  0012               	return	
 40116  00F92C                     
 40117                           ;api.c: 370: motor_set_zero(MOTOR_DIRECTION_CCW);
 40118                           
 40119                           ; BSR set to: 1
 40120  00F92C  0EFF               	movlw	255
 40121  00F92E  EC61  F098         	call	_motor_set_zero
 40122                           
 40123                           ;api.c: 371: break;
 40124  00F932  0012               	return	
 40125  00F934                     
 40126                           ;api.c: 374: motor_set_zero(MOTOR_DIRECTION_CW);
 40127  00F934  0E01               	movlw	1
 40128  00F936  EC61  F098         	call	_motor_set_zero
 40129                           
 40130                           ;api.c: 375: break;
 40131  00F93A  0012               	return	
 40132  00F93C                     
 40133                           ;api.c: 378: motor_go_to_steps_position(0);
 40134  00F93C  0E00               	movlw	0
 40135  00F93E  0100               	movlb	0	; () banked
 40136  00F940  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 40137  00F942  0E00               	movlw	0
 40138  00F944  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 40139  00F946  0E00               	movlw	0
 40140  00F948  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 40141  00F94A  0E00               	movlw	0
 40142  00F94C  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 40143  00F94E  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 40144                           
 40145                           ;api.c: 380: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 40146  00F952  0E05               	movlw	5
 40147  00F954  0101               	movlb	1	; () banked
 40148  00F956  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40149                           
 40150                           ; BSR set to: 1
 40151                           ;api.c: 381: os.divide_position = 0;
 40152  00F958  0E00               	movlw	0
 40153  00F95A  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40154  00F95C  0E00               	movlw	0
 40155  00F95E  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40156  00F960                     
 40157                           ;api.c: 384: --os.encoder2Count;
 40158                           
 40159                           ; BSR set to: 1
 40160  00F960  0101               	movlb	1	; () banked
 40161  00F962  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 40162                           
 40163                           ;api.c: 385: break;
 40164  00F964  0012               	return	
 40165  00F966                     
 40166                           ;api.c: 388: ++os.encoder2Count;
 40167                           
 40168                           ; BSR set to: 1
 40169  00F966  0101               	movlb	1	; () banked
 40170  00F968  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 40171                           
 40172                           ;api.c: 389: break;
 40173  00F96A  0012               	return	
 40174  00F96C                     
 40175                           ;api.c: 392: ++os.button2;
 40176                           
 40177                           ; BSR set to: 1
 40178  00F96C  0101               	movlb	1	; () banked
 40179  00F96E  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 40180                           
 40181                           ;api.c: 393: break;
 40182  00F970  0012               	return	
 40183  00F972                     
 40184                           ;api.c: 396: --os.encoder1Count;
 40185                           
 40186                           ; BSR set to: 1
 40187  00F972  0101               	movlb	1	; () banked
 40188  00F974  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 40189                           
 40190                           ;api.c: 397: break;
 40191  00F976  0012               	return	
 40192  00F978                     
 40193                           ;api.c: 400: ++os.encoder1Count;
 40194                           
 40195                           ; BSR set to: 1
 40196  00F978  0101               	movlb	1	; () banked
 40197  00F97A  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 40198                           
 40199                           ;api.c: 401: break;
 40200  00F97C  0012               	return	
 40201  00F97E                     
 40202                           ;api.c: 404: ++os.button1;
 40203                           
 40204                           ; BSR set to: 1
 40205  00F97E  0101               	movlb	1	; () banked
 40206  00F980  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 40207                           
 40208                           ;api.c: 405: break;
 40209  00F982  0012               	return	
 40210  00F984                     
 40211                           ;api.c: 408: if(!os.busy)
 40212                           
 40213                           ; BSR set to: 1
 40214  00F984  0101               	movlb	1	; () banked
 40215  00F986  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40216  00F988  A4D8               	btfss	status,2,c
 40217  00F98A  0012               	return	
 40218                           
 40219                           ; BSR set to: 1
 40220                           ;api.c: 409: {;api.c: 410: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40221  00F98C  0E84               	movlw	132
 40222  00F98E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40223                           
 40224                           ; BSR set to: 1
 40225                           ;api.c: 411: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.manual_speed);
 40226  00F990  0E00               	movlw	0
 40227  00F992  0100               	movlb	0	; () banked
 40228  00F994  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40229  00F996  0E00               	movlw	0
 40230  00F998  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40231  00F99A  0E00               	movlw	0
 40232  00F99C  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40233  00F99E  0E00               	movlw	0
 40234  00F9A0  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40235  00F9A2  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 40236  00F9A6  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40237  00F9AA  0EFF               	movlw	255
 40238  00F9AC  EC61  F097         	call	_motor_schedule_command
 40239                           
 40240                           ;api.c: 412: };api.c: 413: break;
 40241  00F9B0  0012               	return	
 40242  00F9B2                     
 40243                           ;api.c: 416: if(!os.busy)
 40244  00F9B2  0101               	movlb	1	; () banked
 40245  00F9B4  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40246  00F9B6  A4D8               	btfss	status,2,c
 40247  00F9B8  0012               	return	
 40248                           
 40249                           ; BSR set to: 1
 40250                           ;api.c: 417: {;api.c: 418: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40251  00F9BA  0E84               	movlw	132
 40252  00F9BC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40253                           
 40254                           ; BSR set to: 1
 40255                           ;api.c: 419: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 40256  00F9BE  0E00               	movlw	0
 40257  00F9C0  0100               	movlb	0	; () banked
 40258  00F9C2  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40259  00F9C4  0E00               	movlw	0
 40260  00F9C6  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40261  00F9C8  0E00               	movlw	0
 40262  00F9CA  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40263  00F9CC  0E00               	movlw	0
 40264  00F9CE  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40265  00F9D0  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 40266  00F9D4  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40267  00F9D8  0E01               	movlw	1
 40268  00F9DA  EC61  F097         	call	_motor_schedule_command
 40269                           
 40270                           ;api.c: 420: };api.c: 421: break;
 40271  00F9DE  0012               	return	
 40272  00F9E0                     
 40273                           ;api.c: 424: if(os.busy)
 40274  00F9E0  0101               	movlb	1	; () banked
 40275  00F9E2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40276  00F9E4  B4D8               	btfsc	status,2,c
 40277  00F9E6  0012               	return	
 40278                           
 40279                           ; BSR set to: 1
 40280                           ;api.c: 425: {;api.c: 426: motor_stop();
 40281  00F9E8  EC52  F0A7         	call	_motor_stop	;wreg free
 40282                           
 40283                           ;api.c: 427: motor_clear_command_cue();
 40284  00F9EC  ECB9  F0AC         	call	_motor_clear_command_cue	;wreg free
 40285                           
 40286                           ;api.c: 428: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40287  00F9F0  0E82               	movlw	130
 40288  00F9F2  0101               	movlb	1	; () banked
 40289  00F9F4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40290                           
 40291                           ; BSR set to: 1
 40292                           ;api.c: 431: }
 40293                           
 40294                           ; BSR set to: 1
 40295                           ;api.c: 429: };api.c: 430: break;
 40296  00F9F6  0012               	return	
 40297  00F9F8                     l2291:
 40298                           
 40299                           ; BSR set to: 1
 40300  00F9F8  0100               	movlb	0	; () banked
 40301  00F9FA  51C3               	movf	__parse_command_short@cmd& (0+255),w,b
 40302                           
 40303                           ; Switch size 1, requested type "space"
 40304                           ; Number of cases is 18, Range of values is 32 to 56
 40305                           ; switch strategies available:
 40306                           ; Name         Instructions Cycles
 40307                           ; simple_byte           55    28 (average)
 40308                           ;	Chosen strategy is simple_byte
 40309  00F9FC  0A20               	xorlw	32	; case 32
 40310  00F9FE  B4D8               	btfsc	status,2,c
 40311  00FA00  D77D               	goto	l2292
 40312  00FA02  0A01               	xorlw	1	; case 33
 40313  00FA04  B4D8               	btfsc	status,2,c
 40314  00FA06  D77E               	goto	l2294
 40315  00FA08  0A03               	xorlw	3	; case 34
 40316  00FA0A  B4D8               	btfsc	status,2,c
 40317  00FA0C  D77F               	goto	l2295
 40318  00FA0E  0A01               	xorlw	1	; case 35
 40319  00FA10  B4D8               	btfsc	status,2,c
 40320  00FA12  D780               	goto	l2296
 40321  00FA14  0A07               	xorlw	7	; case 36
 40322  00FA16  B4D8               	btfsc	status,2,c
 40323  00FA18  D781               	goto	l2297
 40324  00FA1A  0A01               	xorlw	1	; case 37
 40325  00FA1C  B4D8               	btfsc	status,2,c
 40326  00FA1E  D782               	goto	l2298
 40327  00FA20  0A03               	xorlw	3	; case 38
 40328  00FA22  B4D8               	btfsc	status,2,c
 40329  00FA24  D783               	goto	l2299
 40330  00FA26  0A01               	xorlw	1	; case 39
 40331  00FA28  B4D8               	btfsc	status,2,c
 40332  00FA2A  D784               	goto	l2300
 40333  00FA2C  0A0F               	xorlw	15	; case 40
 40334  00FA2E  B4D8               	btfsc	status,2,c
 40335  00FA30  D785               	goto	l2301
 40336  00FA32  0A18               	xorlw	24	; case 48
 40337  00FA34  B4D8               	btfsc	status,2,c
 40338  00FA36  D794               	goto	l2302
 40339  00FA38  0A01               	xorlw	1	; case 49
 40340  00FA3A  B4D8               	btfsc	status,2,c
 40341  00FA3C  D794               	goto	l2303
 40342  00FA3E  0A03               	xorlw	3	; case 50
 40343  00FA40  B4D8               	btfsc	status,2,c
 40344  00FA42  D794               	goto	l2304
 40345  00FA44  0A01               	xorlw	1	; case 51
 40346  00FA46  B4D8               	btfsc	status,2,c
 40347  00FA48  D794               	goto	l2305
 40348  00FA4A  0A07               	xorlw	7	; case 52
 40349  00FA4C  B4D8               	btfsc	status,2,c
 40350  00FA4E  D794               	goto	l2306
 40351  00FA50  0A01               	xorlw	1	; case 53
 40352  00FA52  B4D8               	btfsc	status,2,c
 40353  00FA54  D794               	goto	l2307
 40354  00FA56  0A03               	xorlw	3	; case 54
 40355  00FA58  B4D8               	btfsc	status,2,c
 40356  00FA5A  D794               	goto	l2308
 40357  00FA5C  0A01               	xorlw	1	; case 55
 40358  00FA5E  B4D8               	btfsc	status,2,c
 40359  00FA60  D7A8               	goto	l2310
 40360  00FA62  0A0F               	xorlw	15	; case 56
 40361  00FA64  A4D8               	btfss	status,2,c
 40362  00FA66  0012               	return	
 40363  00FA68  D7BB               	goto	l2312
 40364  00FA6A                     __end_of__parse_command_short:
 40365                           	opt stack 0
 40366                           tosu	equ	0xFFF
 40367                           tosh	equ	0xFFE
 40368                           tosl	equ	0xFFD
 40369                           pclath	equ	0xFFA
 40370                           tblptru	equ	0xFF8
 40371                           tblptrh	equ	0xFF7
 40372                           tblptrl	equ	0xFF6
 40373                           tablat	equ	0xFF5
 40374                           prodh	equ	0xFF4
 40375                           prodl	equ	0xFF3
 40376                           intcon	equ	0xFF2
 40377                           indf0	equ	0xFEF
 40378                           postinc0	equ	0xFEE
 40379                           fsr0h	equ	0xFEA
 40380                           fsr0l	equ	0xFE9
 40381                           wreg	equ	0xFE8
 40382                           indf1	equ	0xFE7
 40383                           postinc1	equ	0xFE6
 40384                           postdec1	equ	0xFE5
 40385                           plusw1	equ	0xFE3
 40386                           fsr1h	equ	0xFE2
 40387                           fsr1l	equ	0xFE1
 40388                           indf2	equ	0xFDF
 40389                           postinc2	equ	0xFDE
 40390                           postdec2	equ	0xFDD
 40391                           plusw2	equ	0xFDB
 40392                           fsr2h	equ	0xFDA
 40393                           fsr2l	equ	0xFD9
 40394                           status	equ	0xFD8
 40395                           
 40396 ;; *************** function _motor_stop *****************
 40397 ;; Defined at:
 40398 ;;		line 528 in file "motor.c"
 40399 ;; Parameters:    Size  Location     Type
 40400 ;;		None
 40401 ;; Auto vars:     Size  Location     Type
 40402 ;;		None
 40403 ;; Return value:  Size  Location     Type
 40404 ;;                  1    wreg      void 
 40405 ;; Registers used:
 40406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 40407 ;; Tracked objects:
 40408 ;;		On entry : 0/0
 40409 ;;		On exit  : 0/0
 40410 ;;		Unchanged: 0/0
 40411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40416 ;;Total ram usage:        2 bytes
 40417 ;; Hardware stack levels used:    1
 40418 ;; Hardware stack levels required when called:   10
 40419 ;; This function calls:
 40420 ;;		Nothing
 40421 ;; This function is called by:
 40422 ;;		__parse_command_short
 40423 ;;		_encoder_statemachine
 40424 ;; This function uses a non-reentrant model
 40425 ;;
 40426                           
 40427                           	psect	text166
 40428  014EA4                     __ptext166:
 40429                           	opt stack 0
 40430  014EA4                     _motor_stop:
 40431                           	opt stack 19
 40432                           
 40433                           ;motor.c: 530: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 40434                           
 40435                           ;incstack = 0
 40436  014EA4  90D8               	bcf	status,0,c
 40437  014EA6  0100               	movlb	0	; () banked
 40438  014EA8  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 40439  014EAA  6EF6               	movwf	tblptrl,c
 40440  014EAC  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 40441  014EAE  6EF7               	movwf	tblptrh,c
 40442  014EB0  0E61               	movlw	low _motor_steps_lookup
 40443  014EB2  26F6               	addwf	tblptrl,f,c
 40444  014EB4  0E94               	movlw	high _motor_steps_lookup
 40445  014EB6  22F7               	addwfc	tblptrh,f,c
 40446  014EB8                     	if	1	;There are 3 active tblptr bytes
 40447  014EB8  6AF8               	clrf	tblptru,c
 40448  014EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 40449  014EBC  22F8               	addwfc	tblptru,f,c
 40450  014EBE                     	endif
 40451  014EBE  0009               	tblrd		*+
 40452  014EC0  CFF5 F060          	movff	tablat,??_motor_stop
 40453  014EC4  0009               	tblrd		*+
 40454  014EC6  CFF5 F061          	movff	tablat,??_motor_stop+1
 40455  014ECA  5160               	movf	??_motor_stop& (0+255),w,b
 40456  014ECC  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 40457  014ECE  0101               	movlb	1	; () banked
 40458  014ED0  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 40459  014ED2  0100               	movlb	0	; () banked
 40460  014ED4  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 40461  014ED6  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 40462  014ED8  0101               	movlb	1	; () banked
 40463  014EDA  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 40464  014EDC  0E00               	movlw	0
 40465  014EDE  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 40466  014EE0  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 40467  014EE2  0E00               	movlw	0
 40468  014EE4  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 40469  014EE6  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 40470                           
 40471                           ; BSR set to: 1
 40472  014EE8  0012               	return		;funcret
 40473  014EEA                     __end_of_motor_stop:
 40474                           	opt stack 0
 40475                           tosu	equ	0xFFF
 40476                           tosh	equ	0xFFE
 40477                           tosl	equ	0xFFD
 40478                           pclath	equ	0xFFA
 40479                           tblptru	equ	0xFF8
 40480                           tblptrh	equ	0xFF7
 40481                           tblptrl	equ	0xFF6
 40482                           tablat	equ	0xFF5
 40483                           prodh	equ	0xFF4
 40484                           prodl	equ	0xFF3
 40485                           intcon	equ	0xFF2
 40486                           indf0	equ	0xFEF
 40487                           postinc0	equ	0xFEE
 40488                           fsr0h	equ	0xFEA
 40489                           fsr0l	equ	0xFE9
 40490                           wreg	equ	0xFE8
 40491                           indf1	equ	0xFE7
 40492                           postinc1	equ	0xFE6
 40493                           postdec1	equ	0xFE5
 40494                           plusw1	equ	0xFE3
 40495                           fsr1h	equ	0xFE2
 40496                           fsr1l	equ	0xFE1
 40497                           indf2	equ	0xFDF
 40498                           postinc2	equ	0xFDE
 40499                           postdec2	equ	0xFDD
 40500                           plusw2	equ	0xFDB
 40501                           fsr2h	equ	0xFDA
 40502                           fsr2l	equ	0xFD9
 40503                           status	equ	0xFD8
 40504                           
 40505 ;; *************** function _motor_set_zero *****************
 40506 ;; Defined at:
 40507 ;;		line 723 in file "motor.c"
 40508 ;; Parameters:    Size  Location     Type
 40509 ;;  direction       1    wreg     enum E6622
 40510 ;; Auto vars:     Size  Location     Type
 40511 ;;  direction       1   71[BANK0 ] enum E6622
 40512 ;; Return value:  Size  Location     Type
 40513 ;;                  1    wreg      void 
 40514 ;; Registers used:
 40515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40516 ;; Tracked objects:
 40517 ;;		On entry : 0/0
 40518 ;;		On exit  : 0/0
 40519 ;;		Unchanged: 0/0
 40520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40525 ;;Total ram usage:        1 bytes
 40526 ;; Hardware stack levels used:    1
 40527 ;; Hardware stack levels required when called:   14
 40528 ;; This function calls:
 40529 ;;		_motor_schedule_command
 40530 ;; This function is called by:
 40531 ;;		__parse_command_short
 40532 ;;		_encoder_statemachine
 40533 ;; This function uses a non-reentrant model
 40534 ;;
 40535                           
 40536                           	psect	text167
 40537  0130C2                     __ptext167:
 40538                           	opt stack 0
 40539  0130C2                     _motor_set_zero:
 40540                           	opt stack 15
 40541                           
 40542                           ; BSR set to: 1
 40543                           ;incstack = 0
 40544                           ;motor_set_zero@direction stored from wreg
 40545  0130C2  0100               	movlb	0	; () banked
 40546  0130C4  6FA7               	movwf	motor_set_zero@direction& (0+255),b
 40547                           
 40548                           ;motor.c: 725: if(config.overshoot_in_steps!=0)
 40549  0130C6  0101               	movlb	1	; () banked
 40550  0130C8  51A6               	movf	(_config+5)& (0+255),w,b
 40551  0130CA  11A7               	iorwf	(_config+6)& (0+255),w,b
 40552  0130CC  B4D8               	btfsc	status,2,c
 40553  0130CE  D03C               	goto	l2558
 40554                           
 40555                           ; BSR set to: 1
 40556                           ;motor.c: 726: {;motor.c: 727: if(direction==MOTOR_DIRECTION_CW)
 40557  0130D0  0100               	movlb	0	; () banked
 40558  0130D2  05A7               	decf	motor_set_zero@direction& (0+255),w,b
 40559  0130D4  A4D8               	btfss	status,2,c
 40560  0130D6  D01C               	goto	l2557
 40561                           
 40562                           ; BSR set to: 0
 40563                           ;motor.c: 728: {;motor.c: 729: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0);
 40564  0130D8  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40565  0130DC  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40566  0130E0  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40567  0130E2  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40568  0130E4  0E00               	movlw	0
 40569  0130E6  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40570  0130E8  0E00               	movlw	0
 40571  0130EA  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40572  0130EC  0EFF               	movlw	255
 40573  0130EE  EC61  F097         	call	_motor_schedule_command
 40574                           
 40575                           ;motor.c: 730: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 40576  0130F2  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40577  0130F6  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40578  0130FA  0100               	movlb	0	; () banked
 40579  0130FC  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40580  0130FE  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40581  013100  0E00               	movlw	0
 40582  013102  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40583  013104  0E00               	movlw	0
 40584  013106  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40585  013108  0E01               	movlw	1
 40586  01310A  EC61  F097         	call	_motor_schedule_command
 40587                           
 40588                           ;motor.c: 731: }
 40589  01310E  D01C               	goto	l2558
 40590  013110                     l2557:
 40591                           
 40592                           ;motor.c: 732: else;motor.c: 733: {;motor.c: 734: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, config.overshoot_in_steps, 0);
 40593  013110  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40594  013114  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40595  013118  0100               	movlb	0	; () banked
 40596  01311A  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40597  01311C  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40598  01311E  0E00               	movlw	0
 40599  013120  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40600  013122  0E00               	movlw	0
 40601  013124  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40602  013126  0E01               	movlw	1
 40603  013128  EC61  F097         	call	_motor_schedule_command
 40604                           
 40605                           ;motor.c: 735: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 40606  01312C  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40607  013130  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40608  013134  0100               	movlb	0	; () banked
 40609  013136  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40610  013138  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40611  01313A  0E00               	movlw	0
 40612  01313C  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40613  01313E  0E00               	movlw	0
 40614  013140  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40615  013142  0EFF               	movlw	255
 40616  013144  EC61  F097         	call	_motor_schedule_command
 40617  013148                     l2558:
 40618                           
 40619                           ;motor.c: 736: };motor.c: 737: };motor.c: 738: os.approach_direction = direction;
 40620  013148  C0A7  F183         	movff	motor_set_zero@direction,_os+18	;volatile
 40621                           
 40622                           ;motor.c: 739: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40623  01314C  0E01               	movlw	1
 40624  01314E  0101               	movlb	1	; () banked
 40625  013150  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40626                           
 40627                           ; BSR set to: 1
 40628                           ;motor.c: 740: os.current_position_in_steps = 0;
 40629  013152  0E00               	movlw	0
 40630  013154  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 40631  013156  0E00               	movlw	0
 40632  013158  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 40633  01315A  0E00               	movlw	0
 40634  01315C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 40635  01315E  0E00               	movlw	0
 40636  013160  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 40637                           
 40638                           ; BSR set to: 1
 40639                           ;motor.c: 741: os.divide_position = 0;
 40640  013162  0E00               	movlw	0
 40641  013164  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40642  013166  0E00               	movlw	0
 40643  013168  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40644                           
 40645                           ; BSR set to: 1
 40646  01316A  0012               	return		;funcret
 40647  01316C                     __end_of_motor_set_zero:
 40648                           	opt stack 0
 40649                           tosu	equ	0xFFF
 40650                           tosh	equ	0xFFE
 40651                           tosl	equ	0xFFD
 40652                           pclath	equ	0xFFA
 40653                           tblptru	equ	0xFF8
 40654                           tblptrh	equ	0xFF7
 40655                           tblptrl	equ	0xFF6
 40656                           tablat	equ	0xFF5
 40657                           prodh	equ	0xFF4
 40658                           prodl	equ	0xFF3
 40659                           intcon	equ	0xFF2
 40660                           indf0	equ	0xFEF
 40661                           postinc0	equ	0xFEE
 40662                           fsr0h	equ	0xFEA
 40663                           fsr0l	equ	0xFE9
 40664                           wreg	equ	0xFE8
 40665                           indf1	equ	0xFE7
 40666                           postinc1	equ	0xFE6
 40667                           postdec1	equ	0xFE5
 40668                           plusw1	equ	0xFE3
 40669                           fsr1h	equ	0xFE2
 40670                           fsr1l	equ	0xFE1
 40671                           indf2	equ	0xFDF
 40672                           postinc2	equ	0xFDE
 40673                           postdec2	equ	0xFDD
 40674                           plusw2	equ	0xFDB
 40675                           fsr2h	equ	0xFDA
 40676                           fsr2l	equ	0xFD9
 40677                           status	equ	0xFD8
 40678                           
 40679 ;; *************** function _motor_go_to_steps_position *****************
 40680 ;; Defined at:
 40681 ;;		line 571 in file "motor.c"
 40682 ;; Parameters:    Size  Location     Type
 40683 ;;  target_posit    4   71[BANK0 ] unsigned long 
 40684 ;; Auto vars:     Size  Location     Type
 40685 ;;  distance_ccw    4   95[BANK0 ] unsigned long 
 40686 ;;  distance_cw     4   91[BANK0 ] unsigned long 
 40687 ;;  overhead_ccw    4   87[BANK0 ] unsigned long 
 40688 ;;  overhead_cw     4   83[BANK0 ] unsigned long 
 40689 ;; Return value:  Size  Location     Type
 40690 ;;                  1    wreg      void 
 40691 ;; Registers used:
 40692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40693 ;; Tracked objects:
 40694 ;;		On entry : 0/0
 40695 ;;		On exit  : 0/0
 40696 ;;		Unchanged: 0/0
 40697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40699 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40700 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40701 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40702 ;;Total ram usage:       28 bytes
 40703 ;; Hardware stack levels used:    1
 40704 ;; Hardware stack levels required when called:   14
 40705 ;; This function calls:
 40706 ;;		_motor_schedule_command
 40707 ;; This function is called by:
 40708 ;;		__parse_command_short
 40709 ;;		_motor_divide_jump
 40710 ;;		_motor_divide_jump_to_nearest
 40711 ;;		_encoder_statemachine
 40712 ;;		_motor_go_to_degrees_position
 40713 ;; This function uses a non-reentrant model
 40714 ;;
 40715                           
 40716                           	psect	text168
 40717  00D2CA                     __ptext168:
 40718                           	opt stack 0
 40719  00D2CA                     _motor_go_to_steps_position:
 40720                           	opt stack 15
 40721                           
 40722                           ;motor.c: 573: uint32_t distance_cw;;motor.c: 574: uint32_t overhead_cw;;motor.c: 575: u
      +                          int32_t distance_ccw;;motor.c: 576: uint32_t overhead_ccw;;motor.c: 579: if(os.busy)
 40723                           
 40724                           ; BSR set to: 1
 40725                           ;incstack = 0
 40726  00D2CA  0101               	movlb	1	; () banked
 40727  00D2CC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40728  00D2CE  A4D8               	btfss	status,2,c
 40729  00D2D0  0012               	return	
 40730                           
 40731                           ; BSR set to: 1
 40732                           ;motor.c: 582: };motor.c: 585: if(os.current_position_in_steps == target_position)
 40733                           
 40734                           ; BSR set to: 1
 40735                           
 40736                           ; BSR set to: 1
 40737                           ;motor.c: 580: {;motor.c: 581: return;
 40738  00D2D2  0100               	movlb	0	; () banked
 40739  00D2D4  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40740  00D2D6  0101               	movlb	1	; () banked
 40741  00D2D8  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 40742  00D2DA  E110               	bnz	l14998
 40743  00D2DC  0100               	movlb	0	; () banked
 40744  00D2DE  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40745  00D2E0  0101               	movlb	1	; () banked
 40746  00D2E2  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 40747  00D2E4  E10B               	bnz	l14998
 40748  00D2E6  0100               	movlb	0	; () banked
 40749  00D2E8  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40750  00D2EA  0101               	movlb	1	; () banked
 40751  00D2EC  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 40752  00D2EE  E106               	bnz	l14998
 40753  00D2F0  0100               	movlb	0	; () banked
 40754  00D2F2  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40755  00D2F4  0101               	movlb	1	; () banked
 40756  00D2F6  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 40757  00D2F8  B4D8               	btfsc	status,2,c
 40758  00D2FA  0012               	return	
 40759  00D2FC                     l14998:
 40760                           
 40761                           ; BSR set to: 1
 40762                           ;motor.c: 588: };motor.c: 591: overhead_cw = 0;
 40763  00D2FC  0E00               	movlw	0
 40764  00D2FE  0100               	movlb	0	; () banked
 40765  00D300  6FB3               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 40766  00D302  0E00               	movlw	0
 40767  00D304  6FB4               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 40768  00D306  0E00               	movlw	0
 40769  00D308  6FB5               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 40770  00D30A  0E00               	movlw	0
 40771  00D30C  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 40772                           
 40773                           ; BSR set to: 0
 40774                           ;motor.c: 592: distance_cw = target_position - os.current_position_in_steps;
 40775  00D30E  C178  F0AB         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 40776  00D312  C179  F0AC         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 40777  00D316  C17A  F0AD         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 40778  00D31A  C17B  F0AE         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 40779  00D31E  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40780  00D320  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40781  00D322  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40782  00D324  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40783  00D326  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40784  00D328  0E00               	movlw	0
 40785  00D32A  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40786  00D32C  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40787  00D32E  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40788  00D330  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40789  00D332  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40790  00D334  6FBB               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 40791  00D336  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40792  00D338  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40793  00D33A  6FBC               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 40794  00D33C  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40795  00D33E  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40796  00D340  6FBD               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 40797  00D342  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40798  00D344  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40799  00D346  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 40800                           
 40801                           ; BSR set to: 0
 40802                           ;motor.c: 593: if(distance_cw>config.full_circle_in_steps)
 40803  00D348  51BB               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40804  00D34A  0101               	movlb	1	; () banked
 40805  00D34C  5DA1               	subwf	_config& (0+255),w,b
 40806  00D34E  0100               	movlb	0	; () banked
 40807  00D350  51BC               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40808  00D352  0101               	movlb	1	; () banked
 40809  00D354  59A2               	subwfb	(_config+1)& (0+255),w,b
 40810  00D356  0100               	movlb	0	; () banked
 40811  00D358  51BD               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40812  00D35A  0101               	movlb	1	; () banked
 40813  00D35C  59A3               	subwfb	(_config+2)& (0+255),w,b
 40814  00D35E  0100               	movlb	0	; () banked
 40815  00D360  51BE               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40816  00D362  0101               	movlb	1	; () banked
 40817  00D364  59A4               	subwfb	(_config+3)& (0+255),w,b
 40818  00D366  B0D8               	btfsc	status,0,c
 40819  00D368  D00F               	goto	l2526
 40820                           
 40821                           ; BSR set to: 1
 40822                           ;motor.c: 594: {;motor.c: 595: distance_cw += config.full_circle_in_steps;
 40823  00D36A  51A1               	movf	_config& (0+255),w,b
 40824  00D36C  0100               	movlb	0	; () banked
 40825  00D36E  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40826  00D370  0101               	movlb	1	; () banked
 40827  00D372  51A2               	movf	(_config+1)& (0+255),w,b
 40828  00D374  0100               	movlb	0	; () banked
 40829  00D376  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40830  00D378  0101               	movlb	1	; () banked
 40831  00D37A  51A3               	movf	(_config+2)& (0+255),w,b
 40832  00D37C  0100               	movlb	0	; () banked
 40833  00D37E  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40834  00D380  0101               	movlb	1	; () banked
 40835  00D382  51A4               	movf	(_config+3)& (0+255),w,b
 40836  00D384  0100               	movlb	0	; () banked
 40837  00D386  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40838  00D388                     l2526:
 40839                           
 40840                           ;motor.c: 596: };motor.c: 597: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 40841  00D388  0101               	movlb	1	; () banked
 40842  00D38A  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40843  00D38C  A4D8               	btfss	status,2,c
 40844  00D38E  D023               	goto	l2527
 40845                           
 40846                           ; BSR set to: 1
 40847                           ;motor.c: 598: {;motor.c: 599: distance_cw += config.overshoot_in_steps;
 40848  00D390  51A6               	movf	(_config+5)& (0+255),w,b
 40849  00D392  0100               	movlb	0	; () banked
 40850  00D394  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40851  00D396  0101               	movlb	1	; () banked
 40852  00D398  51A7               	movf	(_config+6)& (0+255),w,b
 40853  00D39A  0100               	movlb	0	; () banked
 40854  00D39C  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40855  00D39E  0E00               	movlw	0
 40856  00D3A0  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40857  00D3A2  0E00               	movlw	0
 40858  00D3A4  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40859                           
 40860                           ;motor.c: 600: overhead_cw += config.overshoot_in_steps;
 40861  00D3A6  0101               	movlb	1	; () banked
 40862  00D3A8  51A6               	movf	(_config+5)& (0+255),w,b
 40863  00D3AA  0100               	movlb	0	; () banked
 40864  00D3AC  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40865  00D3AE  0101               	movlb	1	; () banked
 40866  00D3B0  51A7               	movf	(_config+6)& (0+255),w,b
 40867  00D3B2  0100               	movlb	0	; () banked
 40868  00D3B4  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40869  00D3B6  0E00               	movlw	0
 40870  00D3B8  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40871  00D3BA  0E00               	movlw	0
 40872  00D3BC  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40873                           
 40874                           ;motor.c: 601: overhead_cw += config.overshoot_cost_in_steps;
 40875  00D3BE  0101               	movlb	1	; () banked
 40876  00D3C0  51A8               	movf	(_config+7)& (0+255),w,b
 40877  00D3C2  0100               	movlb	0	; () banked
 40878  00D3C4  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40879  00D3C6  0101               	movlb	1	; () banked
 40880  00D3C8  51A9               	movf	(_config+8)& (0+255),w,b
 40881  00D3CA  0100               	movlb	0	; () banked
 40882  00D3CC  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40883  00D3CE  0E00               	movlw	0
 40884  00D3D0  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40885  00D3D2  0E00               	movlw	0
 40886  00D3D4  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40887  00D3D6                     l2527:
 40888                           
 40889                           ;motor.c: 602: };motor.c: 605: overhead_ccw = 0;
 40890                           
 40891                           ; BSR set to: 0
 40892  00D3D6  0E00               	movlw	0
 40893  00D3D8  0100               	movlb	0	; () banked
 40894  00D3DA  6FB7               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 40895  00D3DC  0E00               	movlw	0
 40896  00D3DE  6FB8               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 40897  00D3E0  0E00               	movlw	0
 40898  00D3E2  6FB9               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 40899  00D3E4  0E00               	movlw	0
 40900  00D3E6  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 40901                           
 40902                           ; BSR set to: 0
 40903                           ;motor.c: 606: distance_ccw = os.current_position_in_steps - target_position;
 40904  00D3E8  C0A7  F0AB         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 40905  00D3EC  C0A8  F0AC         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 40906  00D3F0  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 40907  00D3F4  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 40908  00D3F8  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40909  00D3FA  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40910  00D3FC  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40911  00D3FE  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40912  00D400  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40913  00D402  0E00               	movlw	0
 40914  00D404  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40915  00D406  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40916  00D408  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40917  00D40A  0101               	movlb	1	; () banked
 40918  00D40C  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 40919  00D40E  0100               	movlb	0	; () banked
 40920  00D410  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40921  00D412  6FBF               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 40922  00D414  0101               	movlb	1	; () banked
 40923  00D416  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 40924  00D418  0100               	movlb	0	; () banked
 40925  00D41A  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40926  00D41C  6FC0               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 40927  00D41E  0101               	movlb	1	; () banked
 40928  00D420  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 40929  00D422  0100               	movlb	0	; () banked
 40930  00D424  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40931  00D426  6FC1               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 40932  00D428  0101               	movlb	1	; () banked
 40933  00D42A  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 40934  00D42C  0100               	movlb	0	; () banked
 40935  00D42E  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40936  00D430  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 40937                           
 40938                           ; BSR set to: 0
 40939                           ;motor.c: 607: if(distance_ccw>config.full_circle_in_steps)
 40940  00D432  51BF               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40941  00D434  0101               	movlb	1	; () banked
 40942  00D436  5DA1               	subwf	_config& (0+255),w,b
 40943  00D438  0100               	movlb	0	; () banked
 40944  00D43A  51C0               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40945  00D43C  0101               	movlb	1	; () banked
 40946  00D43E  59A2               	subwfb	(_config+1)& (0+255),w,b
 40947  00D440  0100               	movlb	0	; () banked
 40948  00D442  51C1               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40949  00D444  0101               	movlb	1	; () banked
 40950  00D446  59A3               	subwfb	(_config+2)& (0+255),w,b
 40951  00D448  0100               	movlb	0	; () banked
 40952  00D44A  51C2               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40953  00D44C  0101               	movlb	1	; () banked
 40954  00D44E  59A4               	subwfb	(_config+3)& (0+255),w,b
 40955  00D450  B0D8               	btfsc	status,0,c
 40956  00D452  D00F               	goto	l2528
 40957                           
 40958                           ; BSR set to: 1
 40959                           ;motor.c: 608: {;motor.c: 609: distance_ccw += config.full_circle_in_steps;
 40960  00D454  51A1               	movf	_config& (0+255),w,b
 40961  00D456  0100               	movlb	0	; () banked
 40962  00D458  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40963  00D45A  0101               	movlb	1	; () banked
 40964  00D45C  51A2               	movf	(_config+1)& (0+255),w,b
 40965  00D45E  0100               	movlb	0	; () banked
 40966  00D460  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40967  00D462  0101               	movlb	1	; () banked
 40968  00D464  51A3               	movf	(_config+2)& (0+255),w,b
 40969  00D466  0100               	movlb	0	; () banked
 40970  00D468  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40971  00D46A  0101               	movlb	1	; () banked
 40972  00D46C  51A4               	movf	(_config+3)& (0+255),w,b
 40973  00D46E  0100               	movlb	0	; () banked
 40974  00D470  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40975  00D472                     l2528:
 40976                           
 40977                           ;motor.c: 610: };motor.c: 611: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40978  00D472  0101               	movlb	1	; () banked
 40979  00D474  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40980  00D476  A4D8               	btfss	status,2,c
 40981  00D478  D023               	goto	l2529
 40982                           
 40983                           ; BSR set to: 1
 40984                           ;motor.c: 612: {;motor.c: 613: distance_ccw += config.overshoot_in_steps;
 40985  00D47A  51A6               	movf	(_config+5)& (0+255),w,b
 40986  00D47C  0100               	movlb	0	; () banked
 40987  00D47E  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40988  00D480  0101               	movlb	1	; () banked
 40989  00D482  51A7               	movf	(_config+6)& (0+255),w,b
 40990  00D484  0100               	movlb	0	; () banked
 40991  00D486  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40992  00D488  0E00               	movlw	0
 40993  00D48A  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40994  00D48C  0E00               	movlw	0
 40995  00D48E  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40996                           
 40997                           ;motor.c: 614: overhead_ccw += config.overshoot_in_steps;
 40998  00D490  0101               	movlb	1	; () banked
 40999  00D492  51A6               	movf	(_config+5)& (0+255),w,b
 41000  00D494  0100               	movlb	0	; () banked
 41001  00D496  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41002  00D498  0101               	movlb	1	; () banked
 41003  00D49A  51A7               	movf	(_config+6)& (0+255),w,b
 41004  00D49C  0100               	movlb	0	; () banked
 41005  00D49E  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41006  00D4A0  0E00               	movlw	0
 41007  00D4A2  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41008  00D4A4  0E00               	movlw	0
 41009  00D4A6  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41010                           
 41011                           ;motor.c: 615: overhead_ccw += config.overshoot_cost_in_steps;
 41012  00D4A8  0101               	movlb	1	; () banked
 41013  00D4AA  51A8               	movf	(_config+7)& (0+255),w,b
 41014  00D4AC  0100               	movlb	0	; () banked
 41015  00D4AE  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41016  00D4B0  0101               	movlb	1	; () banked
 41017  00D4B2  51A9               	movf	(_config+8)& (0+255),w,b
 41018  00D4B4  0100               	movlb	0	; () banked
 41019  00D4B6  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41020  00D4B8  0E00               	movlw	0
 41021  00D4BA  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41022  00D4BC  0E00               	movlw	0
 41023  00D4BE  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41024  00D4C0                     l2529:
 41025                           
 41026                           ;motor.c: 616: };motor.c: 619: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 41027                           
 41028                           ; BSR set to: 0
 41029  00D4C0  0100               	movlb	0	; () banked
 41030  00D4C2  51B7               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 41031  00D4C4  25BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 41032  00D4C6  6FAB               	movwf	??_motor_go_to_steps_position& (0+255),b
 41033  00D4C8  51B8               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 41034  00D4CA  21C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 41035  00D4CC  6FAC               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 41036  00D4CE  51B9               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 41037  00D4D0  21C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 41038  00D4D2  6FAD               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 41039  00D4D4  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 41040  00D4D6  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 41041  00D4D8  6FAE               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 41042  00D4DA  51B3               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 41043  00D4DC  25BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 41044  00D4DE  6FAF               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 41045  00D4E0  51B4               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 41046  00D4E2  21BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 41047  00D4E4  6FB0               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 41048  00D4E6  51B5               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 41049  00D4E8  21BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 41050  00D4EA  6FB1               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 41051  00D4EC  51B6               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 41052  00D4EE  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 41053  00D4F0  6FB2               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 41054  00D4F2  51AB               	movf	??_motor_go_to_steps_position& (0+255),w,b
 41055  00D4F4  5DAF               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 41056  00D4F6  51AC               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 41057  00D4F8  59B0               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 41058  00D4FA  51AD               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 41059  00D4FC  59B1               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 41060  00D4FE  51AE               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 41061  00D500  59B2               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 41062  00D502  B0D8               	btfsc	status,0,c
 41063  00D504  D039               	goto	l2530
 41064                           
 41065                           ; BSR set to: 0
 41066                           ;motor.c: 620: {;motor.c: 621: if(os.approach_direction==MOTOR_DIRECTION_CW)
 41067  00D506  0101               	movlb	1	; () banked
 41068  00D508  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 41069  00D50A  A4D8               	btfss	status,2,c
 41070  00D50C  D011               	goto	l2531
 41071                           
 41072                           ; BSR set to: 1
 41073                           ;motor.c: 622: {;motor.c: 624: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 41074  00D50E  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41075  00D512  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41076  00D516  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41077  00D51A  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41078  00D51E  0E00               	movlw	0
 41079  00D520  0100               	movlb	0	; () banked
 41080  00D522  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41081  00D524  0E00               	movlw	0
 41082  00D526  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41083  00D528  0E01               	movlw	1
 41084  00D52A  EC61  F097         	call	_motor_schedule_command
 41085                           
 41086                           ;motor.c: 625: }
 41087  00D52E  0012               	return	
 41088  00D530                     l2531:
 41089                           
 41090                           ;motor.c: 626: else;motor.c: 627: {;motor.c: 629: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 41091  00D530  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41092  00D534  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41093  00D538  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41094  00D53C  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41095  00D540  0E00               	movlw	0
 41096  00D542  0100               	movlb	0	; () banked
 41097  00D544  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41098  00D546  0E00               	movlw	0
 41099  00D548  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41100  00D54A  0E01               	movlw	1
 41101  00D54C  EC61  F097         	call	_motor_schedule_command
 41102                           
 41103                           ;motor.c: 630: if(config.overshoot_in_steps!=0)
 41104  00D550  0101               	movlb	1	; () banked
 41105  00D552  51A6               	movf	(_config+5)& (0+255),w,b
 41106  00D554  11A7               	iorwf	(_config+6)& (0+255),w,b
 41107  00D556  B4D8               	btfsc	status,2,c
 41108  00D558  0012               	return	
 41109                           
 41110                           ; BSR set to: 1
 41111                           ;motor.c: 631: {;motor.c: 632: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0);
 41112  00D55A  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 41113  00D55E  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41114  00D562  0100               	movlb	0	; () banked
 41115  00D564  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41116  00D566  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41117  00D568  0E00               	movlw	0
 41118  00D56A  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41119  00D56C  0E00               	movlw	0
 41120  00D56E  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41121  00D570  0EFF               	movlw	255
 41122  00D572  EC61  F097         	call	_motor_schedule_command
 41123                           
 41124                           ;motor.c: 633: };motor.c: 634: };motor.c: 635: }
 41125  00D576  0012               	return	
 41126  00D578                     l2530:
 41127                           
 41128                           ;motor.c: 636: else;motor.c: 637: {;motor.c: 638: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 41129  00D578  0101               	movlb	1	; () banked
 41130  00D57A  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 41131  00D57C  A4D8               	btfss	status,2,c
 41132  00D57E  D011               	goto	l2535
 41133                           
 41134                           ; BSR set to: 1
 41135                           ;motor.c: 639: {;motor.c: 641: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 41136  00D580  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41137  00D584  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41138  00D588  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41139  00D58C  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41140  00D590  0E00               	movlw	0
 41141  00D592  0100               	movlb	0	; () banked
 41142  00D594  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41143  00D596  0E00               	movlw	0
 41144  00D598  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41145  00D59A  0EFF               	movlw	255
 41146  00D59C  EC61  F097         	call	_motor_schedule_command
 41147                           
 41148                           ;motor.c: 642: }
 41149  00D5A0  0012               	return	
 41150  00D5A2                     l2535:
 41151                           
 41152                           ;motor.c: 643: else;motor.c: 644: {;motor.c: 646: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 41153  00D5A2  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41154  00D5A6  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41155  00D5AA  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41156  00D5AE  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41157  00D5B2  0E00               	movlw	0
 41158  00D5B4  0100               	movlb	0	; () banked
 41159  00D5B6  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41160  00D5B8  0E00               	movlw	0
 41161  00D5BA  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41162  00D5BC  0EFF               	movlw	255
 41163  00D5BE  EC61  F097         	call	_motor_schedule_command
 41164                           
 41165                           ;motor.c: 647: if(config.overshoot_in_steps!=0)
 41166  00D5C2  0101               	movlb	1	; () banked
 41167  00D5C4  51A6               	movf	(_config+5)& (0+255),w,b
 41168  00D5C6  11A7               	iorwf	(_config+6)& (0+255),w,b
 41169  00D5C8  B4D8               	btfsc	status,2,c
 41170  00D5CA  0012               	return	
 41171                           
 41172                           ; BSR set to: 1
 41173                           ;motor.c: 648: {;motor.c: 649: motor_schedule_command(MOTOR_DIRECTION_CW, config.oversho
      +                          ot_in_steps, 0);
 41174  00D5CC  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 41175  00D5D0  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41176  00D5D4  0100               	movlb	0	; () banked
 41177  00D5D6  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41178  00D5D8  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41179  00D5DA  0E00               	movlw	0
 41180  00D5DC  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41181  00D5DE  0E00               	movlw	0
 41182  00D5E0  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41183  00D5E2  0E01               	movlw	1
 41184  00D5E4  EC61  F097         	call	_motor_schedule_command
 41185  00D5E8  0012               	return	
 41186  00D5EA                     __end_of_motor_go_to_steps_position:
 41187                           	opt stack 0
 41188                           tosu	equ	0xFFF
 41189                           tosh	equ	0xFFE
 41190                           tosl	equ	0xFFD
 41191                           pclath	equ	0xFFA
 41192                           tblptru	equ	0xFF8
 41193                           tblptrh	equ	0xFF7
 41194                           tblptrl	equ	0xFF6
 41195                           tablat	equ	0xFF5
 41196                           prodh	equ	0xFF4
 41197                           prodl	equ	0xFF3
 41198                           intcon	equ	0xFF2
 41199                           indf0	equ	0xFEF
 41200                           postinc0	equ	0xFEE
 41201                           fsr0h	equ	0xFEA
 41202                           fsr0l	equ	0xFE9
 41203                           wreg	equ	0xFE8
 41204                           indf1	equ	0xFE7
 41205                           postinc1	equ	0xFE6
 41206                           postdec1	equ	0xFE5
 41207                           plusw1	equ	0xFE3
 41208                           fsr1h	equ	0xFE2
 41209                           fsr1l	equ	0xFE1
 41210                           indf2	equ	0xFDF
 41211                           postinc2	equ	0xFDE
 41212                           postdec2	equ	0xFDD
 41213                           plusw2	equ	0xFDB
 41214                           fsr2h	equ	0xFDA
 41215                           fsr2l	equ	0xFD9
 41216                           status	equ	0xFD8
 41217                           
 41218 ;; *************** function _motor_clear_command_cue *****************
 41219 ;; Defined at:
 41220 ;;		line 153 in file "motor.c"
 41221 ;; Parameters:    Size  Location     Type
 41222 ;;		None
 41223 ;; Auto vars:     Size  Location     Type
 41224 ;;		None
 41225 ;; Return value:  Size  Location     Type
 41226 ;;                  1    wreg      void 
 41227 ;; Registers used:
 41228 ;;		None
 41229 ;; Tracked objects:
 41230 ;;		On entry : 0/0
 41231 ;;		On exit  : 0/0
 41232 ;;		Unchanged: 0/0
 41233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41238 ;;Total ram usage:        0 bytes
 41239 ;; Hardware stack levels used:    1
 41240 ;; Hardware stack levels required when called:   10
 41241 ;; This function calls:
 41242 ;;		Nothing
 41243 ;; This function is called by:
 41244 ;;		__parse_command_short
 41245 ;; This function uses a non-reentrant model
 41246 ;;
 41247                           
 41248                           	psect	text169
 41249  015972                     __ptext169:
 41250                           	opt stack 0
 41251  015972                     _motor_clear_command_cue:
 41252                           	opt stack 17
 41253                           
 41254                           ;motor.c: 156: motor_cue_write_index = motor_cue_read_index;
 41255                           
 41256                           ;incstack = 0
 41257  015972  C158  F157         	movff	_motor_cue_read_index,_motor_cue_write_index
 41258  015976  0012               	return		;funcret
 41259  015978                     __end_of_motor_clear_command_cue:
 41260                           	opt stack 0
 41261                           tosu	equ	0xFFF
 41262                           tosh	equ	0xFFE
 41263                           tosl	equ	0xFFD
 41264                           pclath	equ	0xFFA
 41265                           tblptru	equ	0xFF8
 41266                           tblptrh	equ	0xFF7
 41267                           tblptrl	equ	0xFF6
 41268                           tablat	equ	0xFF5
 41269                           prodh	equ	0xFF4
 41270                           prodl	equ	0xFF3
 41271                           intcon	equ	0xFF2
 41272                           indf0	equ	0xFEF
 41273                           postinc0	equ	0xFEE
 41274                           fsr0h	equ	0xFEA
 41275                           fsr0l	equ	0xFE9
 41276                           wreg	equ	0xFE8
 41277                           indf1	equ	0xFE7
 41278                           postinc1	equ	0xFE6
 41279                           postdec1	equ	0xFE5
 41280                           plusw1	equ	0xFE3
 41281                           fsr1h	equ	0xFE2
 41282                           fsr1l	equ	0xFE1
 41283                           indf2	equ	0xFDF
 41284                           postinc2	equ	0xFDE
 41285                           postdec2	equ	0xFDD
 41286                           plusw2	equ	0xFDB
 41287                           fsr2h	equ	0xFDA
 41288                           fsr2l	equ	0xFD9
 41289                           status	equ	0xFD8
 41290                           
 41291 ;; *************** function __parse_command_long *****************
 41292 ;; Defined at:
 41293 ;;		line 434 in file "api.c"
 41294 ;; Parameters:    Size  Location     Type
 41295 ;;  data            2   83[BANK0 ] PTR unsigned char 
 41296 ;;		 -> ReceivedDataBuffer(64), 
 41297 ;;  out_buffer      2   85[BANK0 ] PTR unsigned char 
 41298 ;;		 -> ToSendDataBuffer(64), 
 41299 ;;  out_idx_ptr     2   87[BANK0 ] PTR unsigned char 
 41300 ;;		 -> api_parse@out_idx(1), 
 41301 ;; Auto vars:     Size  Location     Type
 41302 ;;  length          1   89[BANK0 ] unsigned char 
 41303 ;; Return value:  Size  Location     Type
 41304 ;;                  1    wreg      unsigned char 
 41305 ;; Registers used:
 41306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41307 ;; Tracked objects:
 41308 ;;		On entry : 0/0
 41309 ;;		On exit  : 0/0
 41310 ;;		Unchanged: 0/0
 41311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41312 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41315 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41316 ;;Total ram usage:        7 bytes
 41317 ;; Hardware stack levels used:    1
 41318 ;; Hardware stack levels required when called:   15
 41319 ;; This function calls:
 41320 ;;		__parse_jump_steps
 41321 ;;		__parse_set_manual_speed
 41322 ;; This function is called by:
 41323 ;;		_api_parse
 41324 ;; This function uses a non-reentrant model
 41325 ;;
 41326                           
 41327                           	psect	text170
 41328  0142F6                     __ptext170:
 41329                           	opt stack 0
 41330  0142F6                     __parse_command_long:
 41331                           	opt stack 13
 41332                           
 41333                           ;api.c: 436: uint8_t length = 65;
 41334                           
 41335                           ;incstack = 0
 41336  0142F6  0E41               	movlw	65
 41337  0142F8  0100               	movlb	0	; () banked
 41338  0142FA  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41339                           
 41340                           ;api.c: 438: switch(data[0])
 41341  0142FC  D020               	goto	l2317
 41342  0142FE                     
 41343                           ; BSR set to: 0
 41344                           ;api.c: 445: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 41345                           
 41346                           ; BSR set to: 0
 41347  0142FE  C0B3  F0A7         	movff	__parse_command_long@data,__parse_jump_steps@data
 41348  014302  C0B4  F0A8         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 41349  014306  C0B5  F0A9         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 41350  01430A  C0B6  F0AA         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 41351  01430E  C0B7  F0AB         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 41352  014312  C0B8  F0AC         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 41353  014316  EC84  F07E         	call	__parse_jump_steps	;wreg free
 41354  01431A  D00E               	goto	L63
 41355  01431C                     
 41356                           ; BSR set to: 0
 41357                           ;api.c: 449: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 41358                           
 41359                           ; BSR set to: 0
 41360  01431C  C0B3  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 41361  014320  C0B4  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 41362  014324  C0B5  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 41363  014328  C0B6  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 41364  01432C  C0B7  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 41365  014330  C0B8  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 41366  014334  ECD1  F09C         	call	__parse_set_manual_speed	;wreg free
 41367  014338                     L63:
 41368  014338  0100               	movlb	0	; () banked
 41369  01433A  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41370                           
 41371                           ; BSR set to: 0
 41372                           ;api.c: 451: }
 41373                           
 41374                           ;api.c: 450: break;
 41375  01433C  D00B               	goto	l2319
 41376  01433E                     l2317:
 41377                           
 41378                           ; BSR set to: 0
 41379                           
 41380                           ; BSR set to: 0
 41381  01433E  C0B3  FFD9         	movff	__parse_command_long@data,fsr2l
 41382  014342  C0B4  FFDA         	movff	__parse_command_long@data+1,fsr2h
 41383  014346  50DF               	movf	indf2,w,c
 41384                           
 41385                           ; Switch size 1, requested type "space"
 41386                           ; Number of cases is 2, Range of values is 144 to 145
 41387                           ; switch strategies available:
 41388                           ; Name         Instructions Cycles
 41389                           ; simple_byte            7     4 (average)
 41390                           ;	Chosen strategy is simple_byte
 41391  014348  0A90               	xorlw	144	; case 144
 41392  01434A  B4D8               	btfsc	status,2,c
 41393  01434C  D7D8               	goto	l2318
 41394  01434E  0A01               	xorlw	1	; case 145
 41395  014350  B4D8               	btfsc	status,2,c
 41396  014352  D7E4               	goto	l2320
 41397  014354                     l2319:
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;api.c: 455: return length;
 41401                           
 41402                           ; BSR set to: 0
 41403  014354  51B9               	movf	__parse_command_long@length& (0+255),w,b
 41404  014356  0012               	return	
 41405  014358                     __end_of__parse_command_long:
 41406                           	opt stack 0
 41407                           tosu	equ	0xFFF
 41408                           tosh	equ	0xFFE
 41409                           tosl	equ	0xFFD
 41410                           pclath	equ	0xFFA
 41411                           tblptru	equ	0xFF8
 41412                           tblptrh	equ	0xFF7
 41413                           tblptrl	equ	0xFF6
 41414                           tablat	equ	0xFF5
 41415                           prodh	equ	0xFF4
 41416                           prodl	equ	0xFF3
 41417                           intcon	equ	0xFF2
 41418                           indf0	equ	0xFEF
 41419                           postinc0	equ	0xFEE
 41420                           fsr0h	equ	0xFEA
 41421                           fsr0l	equ	0xFE9
 41422                           wreg	equ	0xFE8
 41423                           indf1	equ	0xFE7
 41424                           postinc1	equ	0xFE6
 41425                           postdec1	equ	0xFE5
 41426                           plusw1	equ	0xFE3
 41427                           fsr1h	equ	0xFE2
 41428                           fsr1l	equ	0xFE1
 41429                           indf2	equ	0xFDF
 41430                           postinc2	equ	0xFDE
 41431                           postdec2	equ	0xFDD
 41432                           plusw2	equ	0xFDB
 41433                           fsr2h	equ	0xFDA
 41434                           fsr2l	equ	0xFD9
 41435                           status	equ	0xFD8
 41436                           
 41437 ;; *************** function __parse_set_manual_speed *****************
 41438 ;; Defined at:
 41439 ;;		line 516 in file "api.c"
 41440 ;; Parameters:    Size  Location     Type
 41441 ;;  data            2    4[BANK0 ] PTR unsigned char 
 41442 ;;		 -> ReceivedDataBuffer(64), 
 41443 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 41444 ;;		 -> ToSendDataBuffer(64), 
 41445 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 41446 ;;		 -> api_parse@out_idx(1), 
 41447 ;; Auto vars:     Size  Location     Type
 41448 ;;  new_speed       2   11[BANK0 ] unsigned int 
 41449 ;; Return value:  Size  Location     Type
 41450 ;;                  1    wreg      unsigned char 
 41451 ;; Registers used:
 41452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41453 ;; Tracked objects:
 41454 ;;		On entry : 0/0
 41455 ;;		On exit  : 0/0
 41456 ;;		Unchanged: 0/0
 41457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41458 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41461 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41462 ;;Total ram usage:        9 bytes
 41463 ;; Hardware stack levels used:    1
 41464 ;; Hardware stack levels required when called:   12
 41465 ;; This function calls:
 41466 ;;		_motor_set_manual_speed
 41467 ;; This function is called by:
 41468 ;;		__parse_command_long
 41469 ;; This function uses a non-reentrant model
 41470 ;;
 41471                           
 41472                           	psect	text171
 41473  0139A2                     __ptext171:
 41474                           	opt stack 0
 41475  0139A2                     __parse_set_manual_speed:
 41476                           	opt stack 15
 41477                           
 41478                           ;api.c: 520: uint16_t new_speed;;api.c: 522: new_speed = data[1];
 41479                           
 41480                           ; BSR set to: 0
 41481                           ;incstack = 0
 41482  0139A2  0100               	movlb	0	; () banked
 41483  0139A4  EE20 F001          	lfsr	2,1
 41484  0139A8  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41485  0139AA  26D9               	addwf	fsr2l,f,c
 41486  0139AC  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41487  0139AE  22DA               	addwfc	fsr2h,f,c
 41488  0139B0  50DF               	movf	indf2,w,c
 41489  0139B2  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41490  0139B4  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41491  0139B6  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 41492  0139B8  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41493                           
 41494                           ; BSR set to: 0
 41495                           ;api.c: 523: new_speed <<= 8;
 41496  0139BA  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 41497  0139BC  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41498  0139BE  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 41499                           
 41500                           ; BSR set to: 0
 41501                           ;api.c: 524: new_speed |= data[2];
 41502  0139C0  EE20 F002          	lfsr	2,2
 41503  0139C4  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41504  0139C6  26D9               	addwf	fsr2l,f,c
 41505  0139C8  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41506  0139CA  22DA               	addwfc	fsr2h,f,c
 41507  0139CC  50DF               	movf	indf2,w,c
 41508  0139CE  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41509  0139D0  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41510  0139D2  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 41511                           
 41512                           ; BSR set to: 0
 41513                           ;api.c: 526: motor_set_manual_speed(new_speed);
 41514  0139D4  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 41515  0139D8  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 41516  0139DC  EC4A  F0A6         	call	_motor_set_manual_speed	;wreg free
 41517                           
 41518                           ;api.c: 529: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 41519  0139E0  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41520  0139E4  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41521  0139E8  50DF               	movf	indf2,w,c
 41522  0139EA  B4D8               	btfsc	status,2,c
 41523  0139EC  D01A               	goto	l2330
 41524  0139EE  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41525  0139F2  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41526  0139F6  0E3F               	movlw	63
 41527  0139F8  60DF               	cpfslt	indf2,c
 41528  0139FA  D013               	goto	l2330
 41529                           
 41530                           ;api.c: 530: {;api.c: 531: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 41531  0139FC  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41532  013A00  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41533  013A04  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 41534  013A08  0E01               	movlw	1
 41535  013A0A  26DF               	addwf	indf2,f,c
 41536  013A0C  0100               	movlb	0	; () banked
 41537  013A0E  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41538  013A10  0D01               	mullw	1
 41539  013A12  50F3               	movf	prodl,w,c
 41540  013A14  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 41541  013A16  6ED9               	movwf	fsr2l,c
 41542  013A18  50F4               	movf	prodh,w,c
 41543  013A1A  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 41544  013A1C  6EDA               	movwf	fsr2h,c
 41545  013A1E  0E91               	movlw	145
 41546  013A20  6EDF               	movwf	indf2,c
 41547  013A22                     l2330:
 41548                           
 41549                           ;api.c: 532: };api.c: 534: return 3;
 41550                           
 41551                           ; BSR set to: 0
 41552  013A22  0E03               	movlw	3
 41553  013A24  0012               	return	
 41554  013A26                     __end_of__parse_set_manual_speed:
 41555                           	opt stack 0
 41556                           tosu	equ	0xFFF
 41557                           tosh	equ	0xFFE
 41558                           tosl	equ	0xFFD
 41559                           pclath	equ	0xFFA
 41560                           tblptru	equ	0xFF8
 41561                           tblptrh	equ	0xFF7
 41562                           tblptrl	equ	0xFF6
 41563                           tablat	equ	0xFF5
 41564                           prodh	equ	0xFF4
 41565                           prodl	equ	0xFF3
 41566                           intcon	equ	0xFF2
 41567                           indf0	equ	0xFEF
 41568                           postinc0	equ	0xFEE
 41569                           fsr0h	equ	0xFEA
 41570                           fsr0l	equ	0xFE9
 41571                           wreg	equ	0xFE8
 41572                           indf1	equ	0xFE7
 41573                           postinc1	equ	0xFE6
 41574                           postdec1	equ	0xFE5
 41575                           plusw1	equ	0xFE3
 41576                           fsr1h	equ	0xFE2
 41577                           fsr1l	equ	0xFE1
 41578                           indf2	equ	0xFDF
 41579                           postinc2	equ	0xFDE
 41580                           postdec2	equ	0xFDD
 41581                           plusw2	equ	0xFDB
 41582                           fsr2h	equ	0xFDA
 41583                           fsr2l	equ	0xFD9
 41584                           status	equ	0xFD8
 41585                           
 41586 ;; *************** function _motor_set_manual_speed *****************
 41587 ;; Defined at:
 41588 ;;		line 549 in file "motor.c"
 41589 ;; Parameters:    Size  Location     Type
 41590 ;;  new_speed       2    2[BANK0 ] unsigned int 
 41591 ;; Auto vars:     Size  Location     Type
 41592 ;;		None
 41593 ;; Return value:  Size  Location     Type
 41594 ;;                  1    wreg      void 
 41595 ;; Registers used:
 41596 ;;		wreg, status,2, status,0, cstack
 41597 ;; Tracked objects:
 41598 ;;		On entry : 0/0
 41599 ;;		On exit  : 0/0
 41600 ;;		Unchanged: 0/0
 41601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41606 ;;Total ram usage:        2 bytes
 41607 ;; Hardware stack levels used:    1
 41608 ;; Hardware stack levels required when called:   11
 41609 ;; This function calls:
 41610 ;;		_motor_change_speed
 41611 ;; This function is called by:
 41612 ;;		__parse_set_manual_speed
 41613 ;;		_motor_increase_manual_speed
 41614 ;;		_motor_decrease_manual_speed
 41615 ;; This function uses a non-reentrant model
 41616 ;;
 41617                           
 41618                           	psect	text172
 41619  014C94                     __ptext172:
 41620                           	opt stack 0
 41621  014C94                     _motor_set_manual_speed:
 41622                           	opt stack 17
 41623                           
 41624                           ;motor.c: 551: if(new_speed>config.maximum_speed_manual)
 41625                           
 41626                           ;incstack = 0
 41627  014C94  0100               	movlb	0	; () banked
 41628  014C96  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 41629  014C98  0101               	movlb	1	; () banked
 41630  014C9A  5DB4               	subwf	(_config+19)& (0+255),w,b
 41631  014C9C  0100               	movlb	0	; () banked
 41632  014C9E  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41633  014CA0  0101               	movlb	1	; () banked
 41634  014CA2  59B5               	subwfb	(_config+20)& (0+255),w,b
 41635  014CA4  B0D8               	btfsc	status,0,c
 41636  014CA6  D005               	goto	l2513
 41637                           
 41638                           ; BSR set to: 1
 41639                           ;motor.c: 552: {;motor.c: 553: os.manual_speed = config.maximum_speed_manual;
 41640  014CA8  C1B4  F194         	movff	_config+19,_os+35	;volatile
 41641  014CAC  C1B5  F195         	movff	_config+20,_os+36	;volatile
 41642                           
 41643                           ;motor.c: 554: }
 41644  014CB0  D012               	goto	l2516
 41645  014CB2                     l2513:
 41646                           
 41647                           ; BSR set to: 1
 41648                           ;motor.c: 555: else if(new_speed<config.minimum_speed)
 41649                           
 41650                           ; BSR set to: 1
 41651  014CB2  51AA               	movf	(_config+9)& (0+255),w,b
 41652  014CB4  0100               	movlb	0	; () banked
 41653  014CB6  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 41654  014CB8  0101               	movlb	1	; () banked
 41655  014CBA  51AB               	movf	(_config+10)& (0+255),w,b
 41656  014CBC  0100               	movlb	0	; () banked
 41657  014CBE  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41658  014CC0  B0D8               	btfsc	status,0,c
 41659  014CC2  D005               	goto	l2515
 41660                           
 41661                           ; BSR set to: 0
 41662                           ;motor.c: 556: {;motor.c: 557: os.manual_speed = config.minimum_speed;
 41663  014CC4  C1AA  F194         	movff	_config+9,_os+35	;volatile
 41664  014CC8  C1AB  F195         	movff	_config+10,_os+36	;volatile
 41665                           
 41666                           ;motor.c: 558: }
 41667  014CCC  D004               	goto	l2516
 41668  014CCE                     l2515:
 41669                           
 41670                           ; BSR set to: 0
 41671                           ;motor.c: 559: else;motor.c: 560: {;motor.c: 561: os.manual_speed = new_speed;
 41672  014CCE  C062  F194         	movff	motor_set_manual_speed@new_speed,_os+35	;volatile
 41673  014CD2  C063  F195         	movff	motor_set_manual_speed@new_speed+1,_os+36	;volatile
 41674  014CD6                     l2516:
 41675                           
 41676                           ;motor.c: 562: };motor.c: 563: motor_change_speed(new_speed);
 41677                           
 41678                           ; BSR set to: 0
 41679                           
 41680                           ; BSR set to: 0
 41681  014CD6  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 41682  014CDA  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 41683  014CDE  ECA0  F0AC         	call	_motor_change_speed	;wreg free
 41684  014CE2  0012               	return		;funcret
 41685  014CE4                     __end_of_motor_set_manual_speed:
 41686                           	opt stack 0
 41687                           tosu	equ	0xFFF
 41688                           tosh	equ	0xFFE
 41689                           tosl	equ	0xFFD
 41690                           pclath	equ	0xFFA
 41691                           tblptru	equ	0xFF8
 41692                           tblptrh	equ	0xFF7
 41693                           tblptrl	equ	0xFF6
 41694                           tablat	equ	0xFF5
 41695                           prodh	equ	0xFF4
 41696                           prodl	equ	0xFF3
 41697                           intcon	equ	0xFF2
 41698                           indf0	equ	0xFEF
 41699                           postinc0	equ	0xFEE
 41700                           fsr0h	equ	0xFEA
 41701                           fsr0l	equ	0xFE9
 41702                           wreg	equ	0xFE8
 41703                           indf1	equ	0xFE7
 41704                           postinc1	equ	0xFE6
 41705                           postdec1	equ	0xFE5
 41706                           plusw1	equ	0xFE3
 41707                           fsr1h	equ	0xFE2
 41708                           fsr1l	equ	0xFE1
 41709                           indf2	equ	0xFDF
 41710                           postinc2	equ	0xFDE
 41711                           postdec2	equ	0xFDD
 41712                           plusw2	equ	0xFDB
 41713                           fsr2h	equ	0xFDA
 41714                           fsr2l	equ	0xFD9
 41715                           status	equ	0xFD8
 41716                           
 41717 ;; *************** function _motor_change_speed *****************
 41718 ;; Defined at:
 41719 ;;		line 566 in file "motor.c"
 41720 ;; Parameters:    Size  Location     Type
 41721 ;;  new_speed       2    0[BANK0 ] unsigned int 
 41722 ;; Auto vars:     Size  Location     Type
 41723 ;;		None
 41724 ;; Return value:  Size  Location     Type
 41725 ;;                  1    wreg      void 
 41726 ;; Registers used:
 41727 ;;		None
 41728 ;; Tracked objects:
 41729 ;;		On entry : 0/0
 41730 ;;		On exit  : 0/0
 41731 ;;		Unchanged: 0/0
 41732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41736 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41737 ;;Total ram usage:        2 bytes
 41738 ;; Hardware stack levels used:    1
 41739 ;; Hardware stack levels required when called:   10
 41740 ;; This function calls:
 41741 ;;		Nothing
 41742 ;; This function is called by:
 41743 ;;		_motor_set_manual_speed
 41744 ;;		_encoder_statemachine
 41745 ;; This function uses a non-reentrant model
 41746 ;;
 41747                           
 41748                           	psect	text173
 41749  015940                     __ptext173:
 41750                           	opt stack 0
 41751  015940                     _motor_change_speed:
 41752                           	opt stack 17
 41753                           
 41754                           ;motor.c: 568: motor_maximum_speed = new_speed;
 41755                           
 41756                           ;incstack = 0
 41757  015940  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 41758  015944  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 41759  015948  0012               	return		;funcret
 41760  01594A                     __end_of_motor_change_speed:
 41761                           	opt stack 0
 41762                           tosu	equ	0xFFF
 41763                           tosh	equ	0xFFE
 41764                           tosl	equ	0xFFD
 41765                           pclath	equ	0xFFA
 41766                           tblptru	equ	0xFF8
 41767                           tblptrh	equ	0xFF7
 41768                           tblptrl	equ	0xFF6
 41769                           tablat	equ	0xFF5
 41770                           prodh	equ	0xFF4
 41771                           prodl	equ	0xFF3
 41772                           intcon	equ	0xFF2
 41773                           indf0	equ	0xFEF
 41774                           postinc0	equ	0xFEE
 41775                           fsr0h	equ	0xFEA
 41776                           fsr0l	equ	0xFE9
 41777                           wreg	equ	0xFE8
 41778                           indf1	equ	0xFE7
 41779                           postinc1	equ	0xFE6
 41780                           postdec1	equ	0xFE5
 41781                           plusw1	equ	0xFE3
 41782                           fsr1h	equ	0xFE2
 41783                           fsr1l	equ	0xFE1
 41784                           indf2	equ	0xFDF
 41785                           postinc2	equ	0xFDE
 41786                           postdec2	equ	0xFDD
 41787                           plusw2	equ	0xFDB
 41788                           fsr2h	equ	0xFDA
 41789                           fsr2l	equ	0xFD9
 41790                           status	equ	0xFD8
 41791                           
 41792 ;; *************** function __parse_jump_steps *****************
 41793 ;; Defined at:
 41794 ;;		line 481 in file "api.c"
 41795 ;; Parameters:    Size  Location     Type
 41796 ;;  data            2   71[BANK0 ] PTR unsigned char 
 41797 ;;		 -> ReceivedDataBuffer(64), 
 41798 ;;  out_buffer      2   73[BANK0 ] PTR unsigned char 
 41799 ;;		 -> ToSendDataBuffer(64), 
 41800 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 41801 ;;		 -> api_parse@out_idx(1), 
 41802 ;; Auto vars:     Size  Location     Type
 41803 ;;  number_of_st    4   79[BANK0 ] long 
 41804 ;;  return_value    1   78[BANK0 ] unsigned char 
 41805 ;; Return value:  Size  Location     Type
 41806 ;;                  1    wreg      unsigned char 
 41807 ;; Registers used:
 41808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41809 ;; Tracked objects:
 41810 ;;		On entry : 0/0
 41811 ;;		On exit  : 0/0
 41812 ;;		Unchanged: 0/0
 41813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41815 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41817 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41818 ;;Total ram usage:       12 bytes
 41819 ;; Hardware stack levels used:    1
 41820 ;; Hardware stack levels required when called:   14
 41821 ;; This function calls:
 41822 ;;		_motor_schedule_command
 41823 ;; This function is called by:
 41824 ;;		__parse_command_long
 41825 ;; This function uses a non-reentrant model
 41826 ;;
 41827                           
 41828                           	psect	text174
 41829  00FD08                     __ptext174:
 41830                           	opt stack 0
 41831  00FD08                     __parse_jump_steps:
 41832                           	opt stack 13
 41833                           
 41834                           ;api.c: 485: uint8_t return_value;;api.c: 486: int32_t number_of_steps;;api.c: 488: numb
      +                          er_of_steps = data[1];
 41835                           
 41836                           ;incstack = 0
 41837  00FD08  0100               	movlb	0	; () banked
 41838  00FD0A  EE20 F001          	lfsr	2,1
 41839  00FD0E  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41840  00FD10  26D9               	addwf	fsr2l,f,c
 41841  00FD12  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41842  00FD14  22DA               	addwfc	fsr2h,f,c
 41843  00FD16  50DF               	movf	indf2,w,c
 41844  00FD18  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41845  00FD1A  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41846  00FD1C  6FAF               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 41847  00FD1E  6BB0               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 41848  00FD20  6BB1               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 41849  00FD22  6BB2               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 41850                           
 41851                           ; BSR set to: 0
 41852                           ;api.c: 489: number_of_steps <<= 8;
 41853  00FD24  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41854  00FD28  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41855  00FD2C  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41856  00FD30  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41857                           
 41858                           ; BSR set to: 0
 41859                           ;api.c: 490: number_of_steps |= data[2];
 41860  00FD32  EE20 F002          	lfsr	2,2
 41861  00FD36  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41862  00FD38  26D9               	addwf	fsr2l,f,c
 41863  00FD3A  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41864  00FD3C  22DA               	addwfc	fsr2h,f,c
 41865  00FD3E  50DF               	movf	indf2,w,c
 41866  00FD40  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41867  00FD42  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41868  00FD44  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41869                           
 41870                           ;api.c: 491: number_of_steps <<= 8;
 41871  00FD46  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41872  00FD4A  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41873  00FD4E  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41874  00FD52  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41875                           
 41876                           ; BSR set to: 0
 41877                           ;api.c: 492: number_of_steps |= data[3];
 41878  00FD54  EE20 F003          	lfsr	2,3
 41879  00FD58  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41880  00FD5A  26D9               	addwf	fsr2l,f,c
 41881  00FD5C  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41882  00FD5E  22DA               	addwfc	fsr2h,f,c
 41883  00FD60  50DF               	movf	indf2,w,c
 41884  00FD62  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41885  00FD64  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41886  00FD66  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41887                           
 41888                           ; BSR set to: 0
 41889                           ;api.c: 493: number_of_steps <<= 8;
 41890  00FD68  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41891  00FD6C  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41892  00FD70  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41893  00FD74  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41894                           
 41895                           ;api.c: 494: number_of_steps |= data[4];
 41896  00FD76  EE20 F004          	lfsr	2,4
 41897  00FD7A  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41898  00FD7C  26D9               	addwf	fsr2l,f,c
 41899  00FD7E  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41900  00FD80  22DA               	addwfc	fsr2h,f,c
 41901  00FD82  50DF               	movf	indf2,w,c
 41902  00FD84  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41903  00FD86  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41904  00FD88  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41905                           
 41906                           ; BSR set to: 0
 41907                           ;api.c: 496: if(number_of_steps>0)
 41908  00FD8A  BFB2               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 41909  00FD8C  D017               	goto	l2324
 41910  00FD8E  51B2               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 41911  00FD90  11B1               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 41912  00FD92  11B0               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 41913  00FD94  E103               	bnz	u13700
 41914  00FD96  05AF               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 41915  00FD98  A0D8               	btfss	status,0,c
 41916  00FD9A  D010               	goto	l2324
 41917  00FD9C                     u13700:
 41918                           
 41919                           ; BSR set to: 0
 41920                           ;api.c: 497: {;api.c: 498: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 41921  00FD9C  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41922  00FDA0  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41923  00FDA4  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41924  00FDA8  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41925  00FDAC  0E00               	movlw	0
 41926  00FDAE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41927  00FDB0  0E00               	movlw	0
 41928  00FDB2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41929  00FDB4  0E01               	movlw	1
 41930  00FDB6  EC61  F097         	call	_motor_schedule_command
 41931  00FDBA  D017               	goto	L64
 41932  00FDBC                     l2324:
 41933                           
 41934                           ; BSR set to: 0
 41935                           ;api.c: 500: else;api.c: 501: {;api.c: 502: number_of_steps = -number_of_steps;
 41936                           
 41937                           ; BSR set to: 0
 41938  00FDBC  1FB2               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41939  00FDBE  1FB1               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41940  00FDC0  1FB0               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41941  00FDC2  6DAF               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 41942  00FDC4  0E00               	movlw	0
 41943  00FDC6  23B0               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41944  00FDC8  23B1               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41945  00FDCA  23B2               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41946                           
 41947                           ; BSR set to: 0
 41948                           ;api.c: 503: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 41949  00FDCC  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41950  00FDD0  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41951  00FDD4  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41952  00FDD8  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41953  00FDDC  0E00               	movlw	0
 41954  00FDDE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41955  00FDE0  0E00               	movlw	0
 41956  00FDE2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41957  00FDE4  0EFF               	movlw	255
 41958  00FDE6  EC61  F097         	call	_motor_schedule_command
 41959  00FDEA                     L64:
 41960  00FDEA  0100               	movlb	0	; () banked
 41961  00FDEC  6FAE               	movwf	__parse_jump_steps@return_value& (0+255),b
 41962                           
 41963                           ; BSR set to: 0
 41964                           ;api.c: 504: };api.c: 507: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 41965                           
 41966                           ; BSR set to: 0
 41967  00FDEE  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41968  00FDF2  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41969  00FDF6  50DF               	movf	indf2,w,c
 41970  00FDF8  B4D8               	btfsc	status,2,c
 41971  00FDFA  D02B               	goto	l2326
 41972                           
 41973                           ; BSR set to: 0
 41974  00FDFC  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41975  00FE00  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41976  00FE04  0E3E               	movlw	62
 41977  00FE06  60DF               	cpfslt	indf2,c
 41978  00FE08  D024               	goto	l2326
 41979                           
 41980                           ; BSR set to: 0
 41981                           ;api.c: 508: {;api.c: 509: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 41982  00FE0A  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41983  00FE0E  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41984  00FE12  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 41985  00FE16  0E01               	movlw	1
 41986  00FE18  26DF               	addwf	indf2,f,c
 41987  00FE1A  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41988  00FE1C  0D01               	mullw	1
 41989  00FE1E  50F3               	movf	prodl,w,c
 41990  00FE20  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41991  00FE22  6ED9               	movwf	fsr2l,c
 41992  00FE24  50F4               	movf	prodh,w,c
 41993  00FE26  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41994  00FE28  6EDA               	movwf	fsr2h,c
 41995  00FE2A  0E90               	movlw	144
 41996  00FE2C  6EDF               	movwf	indf2,c
 41997                           
 41998                           ;api.c: 510: out_buffer[(*out_idx_ptr)++] = return_value;
 41999  00FE2E  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42000  00FE32  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42001  00FE36  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 42002  00FE3A  0E01               	movlw	1
 42003  00FE3C  26DF               	addwf	indf2,f,c
 42004  00FE3E  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 42005  00FE40  0D01               	mullw	1
 42006  00FE42  50F3               	movf	prodl,w,c
 42007  00FE44  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 42008  00FE46  6ED9               	movwf	fsr2l,c
 42009  00FE48  50F4               	movf	prodh,w,c
 42010  00FE4A  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 42011  00FE4C  6EDA               	movwf	fsr2h,c
 42012  00FE4E  C0AE  FFDF         	movff	__parse_jump_steps@return_value,indf2
 42013  00FE52                     l2326:
 42014                           
 42015                           ; BSR set to: 0
 42016                           ;api.c: 511: };api.c: 513: return 5;
 42017                           
 42018                           ; BSR set to: 0
 42019  00FE52  0E05               	movlw	5
 42020  00FE54  0012               	return	
 42021  00FE56                     __end_of__parse_jump_steps:
 42022                           	opt stack 0
 42023                           tosu	equ	0xFFF
 42024                           tosh	equ	0xFFE
 42025                           tosl	equ	0xFFD
 42026                           pclath	equ	0xFFA
 42027                           tblptru	equ	0xFF8
 42028                           tblptrh	equ	0xFF7
 42029                           tblptrl	equ	0xFF6
 42030                           tablat	equ	0xFF5
 42031                           prodh	equ	0xFF4
 42032                           prodl	equ	0xFF3
 42033                           intcon	equ	0xFF2
 42034                           indf0	equ	0xFEF
 42035                           postinc0	equ	0xFEE
 42036                           fsr0h	equ	0xFEA
 42037                           fsr0l	equ	0xFE9
 42038                           wreg	equ	0xFE8
 42039                           indf1	equ	0xFE7
 42040                           postinc1	equ	0xFE6
 42041                           postdec1	equ	0xFE5
 42042                           plusw1	equ	0xFE3
 42043                           fsr1h	equ	0xFE2
 42044                           fsr1l	equ	0xFE1
 42045                           indf2	equ	0xFDF
 42046                           postinc2	equ	0xFDE
 42047                           postdec2	equ	0xFDD
 42048                           plusw2	equ	0xFDB
 42049                           fsr2h	equ	0xFDA
 42050                           fsr2l	equ	0xFD9
 42051                           status	equ	0xFD8
 42052                           
 42053 ;; *************** function _motor_schedule_command *****************
 42054 ;; Defined at:
 42055 ;;		line 124 in file "motor.c"
 42056 ;; Parameters:    Size  Location     Type
 42057 ;;  direction       1    wreg     enum E6622
 42058 ;;  distance_in_    4   64[BANK0 ] unsigned long 
 42059 ;;  speed           2   68[BANK0 ] unsigned int 
 42060 ;; Auto vars:     Size  Location     Type
 42061 ;;  direction       1   70[BANK0 ] enum E6622
 42062 ;; Return value:  Size  Location     Type
 42063 ;;                  1    wreg      unsigned char 
 42064 ;; Registers used:
 42065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42066 ;; Tracked objects:
 42067 ;;		On entry : 0/0
 42068 ;;		On exit  : 0/0
 42069 ;;		Unchanged: 0/0
 42070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42071 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42074 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42075 ;;Total ram usage:        7 bytes
 42076 ;; Hardware stack levels used:    1
 42077 ;; Hardware stack levels required when called:   13
 42078 ;; This function calls:
 42079 ;;		__motor_run
 42080 ;;		_motor_items_in_cue
 42081 ;; This function is called by:
 42082 ;;		__parse_command_short
 42083 ;;		__parse_jump_steps
 42084 ;;		_motor_go_to_steps_position
 42085 ;;		_motor_arc_move
 42086 ;;		_motor_set_zero
 42087 ;;		_encoder_statemachine
 42088 ;; This function uses a non-reentrant model
 42089 ;;
 42090                           
 42091                           	psect	text175
 42092  012EC2                     __ptext175:
 42093                           	opt stack 0
 42094  012EC2                     _motor_schedule_command:
 42095                           	opt stack 15
 42096                           
 42097                           ; BSR set to: 0
 42098                           ;incstack = 0
 42099                           ;motor_schedule_command@direction stored from wreg
 42100  012EC2  0100               	movlb	0	; () banked
 42101  012EC4  6FA6               	movwf	motor_schedule_command@direction& (0+255),b
 42102                           
 42103                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 42104  012EC6  EC81  F0AC         	call	_motor_items_in_cue	;wreg free
 42105  012ECA  0900               	iorlw	0
 42106  012ECC  A4D8               	btfss	status,2,c
 42107  012ECE  D016               	goto	l2433
 42108  012ED0  0101               	movlb	1	; () banked
 42109  012ED2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 42110  012ED4  A4D8               	btfss	status,2,c
 42111  012ED6  D012               	goto	l2433
 42112                           
 42113                           ; BSR set to: 1
 42114                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed);
 42115  012ED8  C0A0  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 42116  012EDC  C0A1  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 42117  012EE0  C0A2  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 42118  012EE4  C0A3  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 42119  012EE8  C0A4  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 42120  012EEC  C0A5  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 42121  012EF0  0100               	movlb	0	; () banked
 42122  012EF2  51A6               	movf	motor_schedule_command@direction& (0+255),w,b
 42123  012EF4  ECA3  F062         	call	__motor_run
 42124                           
 42125                           ;motor.c: 132: return 1;
 42126  012EF8  0E01               	movlw	1
 42127  012EFA  0012               	return	
 42128  012EFC                     l2433:
 42129                           
 42130                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 42131  012EFC  EC81  F0AC         	call	_motor_items_in_cue	;wreg free
 42132  012F00  0A07               	xorlw	7
 42133  012F02  A4D8               	btfss	status,2,c
 42134  012F04  D002               	goto	l2435
 42135                           
 42136                           ;motor.c: 135: {;motor.c: 138: return 0;
 42137  012F06  0E00               	movlw	0
 42138                           
 42139                           ;motor.c: 139: }
 42140  012F08  0012               	return	
 42141  012F0A                     l2435:
 42142                           
 42143                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 42144  012F0A  0101               	movlb	1	; () banked
 42145  012F0C  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42146  012F0E  0D07               	mullw	7
 42147  012F10  0E00               	movlw	low _motor_command_cue
 42148  012F12  24F3               	addwf	prodl,w,c
 42149  012F14  6ED9               	movwf	fsr2l,c
 42150  012F16  0E03               	movlw	high _motor_command_cue
 42151  012F18  20F4               	addwfc	prodh,w,c
 42152  012F1A  6EDA               	movwf	fsr2h,c
 42153  012F1C  C0A6  FFDF         	movff	motor_schedule_command@direction,indf2
 42154                           
 42155                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 42156  012F20  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42157  012F22  0D07               	mullw	7
 42158  012F24  0E01               	movlw	1
 42159  012F26  26F3               	addwf	prodl,f,c
 42160  012F28  0E00               	movlw	0
 42161  012F2A  22F4               	addwfc	prodh,f,c
 42162  012F2C  0E00               	movlw	low _motor_command_cue
 42163  012F2E  24F3               	addwf	prodl,w,c
 42164  012F30  6ED9               	movwf	fsr2l,c
 42165  012F32  0E03               	movlw	high _motor_command_cue
 42166  012F34  20F4               	addwfc	prodh,w,c
 42167  012F36  6EDA               	movwf	fsr2h,c
 42168  012F38  C0A0  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 42169  012F3C  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 42170  012F40  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 42171  012F44  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 42172                           
 42173                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 42174  012F48  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42175  012F4A  0D07               	mullw	7
 42176  012F4C  0E05               	movlw	5
 42177  012F4E  26F3               	addwf	prodl,f,c
 42178  012F50  0E00               	movlw	0
 42179  012F52  22F4               	addwfc	prodh,f,c
 42180  012F54  0E00               	movlw	low _motor_command_cue
 42181  012F56  24F3               	addwf	prodl,w,c
 42182  012F58  6ED9               	movwf	fsr2l,c
 42183  012F5A  0E03               	movlw	high _motor_command_cue
 42184  012F5C  20F4               	addwfc	prodh,w,c
 42185  012F5E  6EDA               	movwf	fsr2h,c
 42186  012F60  C0A4  FFDE         	movff	motor_schedule_command@speed,postinc2
 42187  012F64  C0A5  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 42188                           
 42189                           ; BSR set to: 1
 42190                           ;motor.c: 147: ++motor_cue_write_index;
 42191  012F68  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 42192                           
 42193                           ; BSR set to: 1
 42194                           ;motor.c: 149: return 1;
 42195  012F6A  0E01               	movlw	1
 42196                           
 42197                           ; BSR set to: 1
 42198  012F6C  0012               	return	
 42199  012F6E                     __end_of_motor_schedule_command:
 42200                           	opt stack 0
 42201                           tosu	equ	0xFFF
 42202                           tosh	equ	0xFFE
 42203                           tosl	equ	0xFFD
 42204                           pclath	equ	0xFFA
 42205                           tblptru	equ	0xFF8
 42206                           tblptrh	equ	0xFF7
 42207                           tblptrl	equ	0xFF6
 42208                           tablat	equ	0xFF5
 42209                           prodh	equ	0xFF4
 42210                           prodl	equ	0xFF3
 42211                           intcon	equ	0xFF2
 42212                           indf0	equ	0xFEF
 42213                           postinc0	equ	0xFEE
 42214                           fsr0h	equ	0xFEA
 42215                           fsr0l	equ	0xFE9
 42216                           wreg	equ	0xFE8
 42217                           indf1	equ	0xFE7
 42218                           postinc1	equ	0xFE6
 42219                           postdec1	equ	0xFE5
 42220                           plusw1	equ	0xFE3
 42221                           fsr1h	equ	0xFE2
 42222                           fsr1l	equ	0xFE1
 42223                           indf2	equ	0xFDF
 42224                           postinc2	equ	0xFDE
 42225                           postdec2	equ	0xFDD
 42226                           plusw2	equ	0xFDB
 42227                           fsr2h	equ	0xFDA
 42228                           fsr2l	equ	0xFD9
 42229                           status	equ	0xFD8
 42230                           
 42231 ;; *************** function _motor_items_in_cue *****************
 42232 ;; Defined at:
 42233 ;;		line 119 in file "motor.c"
 42234 ;; Parameters:    Size  Location     Type
 42235 ;;		None
 42236 ;; Auto vars:     Size  Location     Type
 42237 ;;		None
 42238 ;; Return value:  Size  Location     Type
 42239 ;;                  1    wreg      unsigned char 
 42240 ;; Registers used:
 42241 ;;		wreg, status,2, status,0
 42242 ;; Tracked objects:
 42243 ;;		On entry : 0/0
 42244 ;;		On exit  : 0/0
 42245 ;;		Unchanged: 0/0
 42246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42251 ;;Total ram usage:        0 bytes
 42252 ;; Hardware stack levels used:    1
 42253 ;; Hardware stack levels required when called:   10
 42254 ;; This function calls:
 42255 ;;		Nothing
 42256 ;; This function is called by:
 42257 ;;		_motor_schedule_command
 42258 ;;		_motor_process_cue
 42259 ;; This function uses a non-reentrant model
 42260 ;;
 42261                           
 42262                           	psect	text176
 42263  015902                     __ptext176:
 42264                           	opt stack 0
 42265  015902                     _motor_items_in_cue:
 42266                           	opt stack 19
 42267                           
 42268                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 42269                           
 42270                           ;incstack = 0
 42271  015902  0101               	movlb	1	; () banked
 42272  015904  5158               	movf	_motor_cue_read_index& (0+255),w,b
 42273  015906  0800               	sublw	0
 42274  015908  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 42275  01590A  0B07               	andlw	7
 42276  01590C  0012               	return	
 42277  01590E                     __end_of_motor_items_in_cue:
 42278                           	opt stack 0
 42279                           tosu	equ	0xFFF
 42280                           tosh	equ	0xFFE
 42281                           tosl	equ	0xFFD
 42282                           pclath	equ	0xFFA
 42283                           tblptru	equ	0xFF8
 42284                           tblptrh	equ	0xFF7
 42285                           tblptrl	equ	0xFF6
 42286                           tablat	equ	0xFF5
 42287                           prodh	equ	0xFF4
 42288                           prodl	equ	0xFF3
 42289                           intcon	equ	0xFF2
 42290                           indf0	equ	0xFEF
 42291                           postinc0	equ	0xFEE
 42292                           fsr0h	equ	0xFEA
 42293                           fsr0l	equ	0xFE9
 42294                           wreg	equ	0xFE8
 42295                           indf1	equ	0xFE7
 42296                           postinc1	equ	0xFE6
 42297                           postdec1	equ	0xFE5
 42298                           plusw1	equ	0xFE3
 42299                           fsr1h	equ	0xFE2
 42300                           fsr1l	equ	0xFE1
 42301                           indf2	equ	0xFDF
 42302                           postinc2	equ	0xFDE
 42303                           postdec2	equ	0xFDD
 42304                           plusw2	equ	0xFDB
 42305                           fsr2h	equ	0xFDA
 42306                           fsr2l	equ	0xFD9
 42307                           status	equ	0xFD8
 42308                           
 42309 ;; *************** function __motor_run *****************
 42310 ;; Defined at:
 42311 ;;		line 208 in file "motor.c"
 42312 ;; Parameters:    Size  Location     Type
 42313 ;;  direction       1    wreg     enum E6622
 42314 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 42315 ;;  speed           2   51[BANK0 ] unsigned int 
 42316 ;; Auto vars:     Size  Location     Type
 42317 ;;  direction       1   57[BANK0 ] enum E6622
 42318 ;;  maximum_dist    4   60[BANK0 ] unsigned long 
 42319 ;;  maximum_dist    2   58[BANK0 ] unsigned int 
 42320 ;; Return value:  Size  Location     Type
 42321 ;;                  1    wreg      void 
 42322 ;; Registers used:
 42323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42324 ;; Tracked objects:
 42325 ;;		On entry : 0/0
 42326 ;;		On exit  : 0/0
 42327 ;;		Unchanged: 0/0
 42328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42329 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42330 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42332 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42333 ;;Total ram usage:       17 bytes
 42334 ;; Hardware stack levels used:    1
 42335 ;; Hardware stack levels required when called:   12
 42336 ;; This function calls:
 42337 ;;		_motor_calculate_position_in_degrees
 42338 ;;		_motor_steps_from_degrees
 42339 ;; This function is called by:
 42340 ;;		_motor_schedule_command
 42341 ;;		_motor_process_cue
 42342 ;; This function uses a non-reentrant model
 42343 ;;
 42344                           
 42345                           	psect	text177
 42346  00C546                     __ptext177:
 42347                           	opt stack 0
 42348  00C546                     __motor_run:
 42349                           	opt stack 17
 42350                           
 42351                           ; BSR set to: 1
 42352                           ;incstack = 0
 42353                           ;__motor_run@direction stored from wreg
 42354  00C546  0100               	movlb	0	; () banked
 42355  00C548  6F99               	movwf	__motor_run@direction& (0+255),b
 42356                           
 42357                           ;motor.c: 210: uint16_t maximum_distance_in_degrees;;motor.c: 211: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 214: motor_direction = direction;
 42358  00C54A  C099  F155         	movff	__motor_run@direction,_motor_direction
 42359                           
 42360                           ;motor.c: 217: if(distance_in_steps==0)
 42361  00C54E  0100               	movlb	0	; () banked
 42362  00C550  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 42363  00C552  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 42364  00C554  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 42365  00C556  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 42366  00C558  A4D8               	btfss	status,2,c
 42367  00C55A  D00A               	goto	l2452
 42368                           
 42369                           ; BSR set to: 0
 42370                           ;motor.c: 218: {;motor.c: 220: motor_final_stepcount = 0xFF000000;
 42371  00C55C  0E00               	movlw	0
 42372  00C55E  0101               	movlb	1	; () banked
 42373  00C560  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42374  00C562  0E00               	movlw	0
 42375  00C564  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42376  00C566  0E00               	movlw	0
 42377  00C568  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42378  00C56A  0EFF               	movlw	255
 42379  00C56C  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42380                           
 42381                           ;motor.c: 221: }
 42382  00C56E  D008               	goto	l2453
 42383  00C570                     l2452:
 42384                           
 42385                           ; BSR set to: 0
 42386                           ;motor.c: 222: else;motor.c: 223: {;motor.c: 224: motor_final_stepcount = distance_in_st
      +                          eps;
 42387  00C570  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 42388  00C574  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42389  00C578  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42390  00C57C  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42391  00C580                     l2453:
 42392                           
 42393                           ;motor.c: 225: };motor.c: 228: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 42394                           
 42395                           ; BSR set to: 0
 42396  00C580  0101               	movlb	1	; () banked
 42397  00C582  2955               	incf	_motor_direction& (0+255),w,b
 42398  00C584  A4D8               	btfss	status,2,c
 42399  00C586  D061               	goto	l2457
 42400                           
 42401                           ; BSR set to: 1
 42402  00C588  51BA               	movf	(_config+25)& (0+255),w,b
 42403  00C58A  B4D8               	btfsc	status,2,c
 42404  00C58C  D05E               	goto	l2457
 42405                           
 42406                           ; BSR set to: 1
 42407                           ;motor.c: 230: {;motor.c: 232: motor_calculate_position_in_degrees();
 42408  00C58E  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
 42409                           
 42410                           ;motor.c: 235: if(os.current_position_in_degrees >= config.ccw_limit)
 42411  00C592  0101               	movlb	1	; () banked
 42412  00C594  51BB               	movf	(_config+26)& (0+255),w,b
 42413  00C596  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 42414  00C598  51BC               	movf	(_config+27)& (0+255),w,b
 42415  00C59A  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 42416  00C59C  A0D8               	btfss	status,0,c
 42417  00C59E  D014               	goto	l2455
 42418                           
 42419                           ; BSR set to: 1
 42420                           ;motor.c: 236: {;motor.c: 237: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 42421  00C5A0  EE21  F0BB         	lfsr	2,_config+26
 42422  00C5A4  CFDE F095          	movff	postinc2,??__motor_run
 42423  00C5A8  CFDD F096          	movff	postdec2,??__motor_run+1
 42424  00C5AC  0100               	movlb	0	; () banked
 42425  00C5AE  1F95               	comf	??__motor_run& (0+255),f,b
 42426  00C5B0  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42427  00C5B2  4B95               	infsnz	??__motor_run& (0+255),f,b
 42428  00C5B4  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42429  00C5B6  0101               	movlb	1	; () banked
 42430  00C5B8  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42431  00C5BA  0100               	movlb	0	; () banked
 42432  00C5BC  2595               	addwf	??__motor_run& (0+255),w,b
 42433  00C5BE  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42434  00C5C0  0101               	movlb	1	; () banked
 42435  00C5C2  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42436  00C5C4  0100               	movlb	0	; () banked
 42437  00C5C6  D017               	goto	L65
 42438  00C5C8                     l2455:
 42439                           
 42440                           ;motor.c: 239: else;motor.c: 240: {;motor.c: 242: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 42441                           
 42442                           ; BSR set to: 0
 42443  00C5C8  EE21  F0BB         	lfsr	2,_config+26
 42444  00C5CC  CFDE F095          	movff	postinc2,??__motor_run
 42445  00C5D0  CFDD F096          	movff	postdec2,??__motor_run+1
 42446  00C5D4  0100               	movlb	0	; () banked
 42447  00C5D6  1F95               	comf	??__motor_run& (0+255),f,b
 42448  00C5D8  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42449  00C5DA  4B95               	infsnz	??__motor_run& (0+255),f,b
 42450  00C5DC  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42451  00C5DE  0101               	movlb	1	; () banked
 42452  00C5E0  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42453  00C5E2  0100               	movlb	0	; () banked
 42454  00C5E4  2795               	addwf	??__motor_run& (0+255),f,b
 42455  00C5E6  0101               	movlb	1	; () banked
 42456  00C5E8  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42457  00C5EA  0100               	movlb	0	; () banked
 42458  00C5EC  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 42459  00C5EE  0EA0               	movlw	160
 42460  00C5F0  2595               	addwf	??__motor_run& (0+255),w,b
 42461  00C5F2  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42462  00C5F4  0E8C               	movlw	140
 42463  00C5F6                     L65:
 42464  00C5F6  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 42465  00C5F8  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42466                           
 42467                           ; BSR set to: 0
 42468                           ;motor.c: 243: };motor.c: 245: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42469                           
 42470                           ; BSR set to: 0
 42471  00C5FA  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42472  00C5FE  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42473  00C602  ECA1  F08E         	call	_motor_steps_from_degrees	;wreg free
 42474  00C606  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42475  00C60A  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42476  00C60E  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42477  00C612  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42478                           
 42479                           ;motor.c: 247: if(maximum_distance_in_steps<motor_final_stepcount)
 42480  00C616  0101               	movlb	1	; () banked
 42481  00C618  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42482  00C61A  0100               	movlb	0	; () banked
 42483  00C61C  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42484  00C61E  0101               	movlb	1	; () banked
 42485  00C620  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42486  00C622  0100               	movlb	0	; () banked
 42487  00C624  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42488  00C626  0101               	movlb	1	; () banked
 42489  00C628  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42490  00C62A  0100               	movlb	0	; () banked
 42491  00C62C  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42492  00C62E  0101               	movlb	1	; () banked
 42493  00C630  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42494  00C632  0100               	movlb	0	; () banked
 42495  00C634  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42496  00C636  B0D8               	btfsc	status,0,c
 42497  00C638  D008               	goto	l2457
 42498                           
 42499                           ; BSR set to: 0
 42500                           ;motor.c: 248: {;motor.c: 249: motor_final_stepcount = maximum_distance_in_steps;
 42501  00C63A  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42502  00C63E  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42503  00C642  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42504  00C646  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42505  00C64A                     l2457:
 42506                           
 42507                           ;motor.c: 250: };motor.c: 251: };motor.c: 254: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 42508                           
 42509                           ; BSR set to: 0
 42510                           
 42511                           ; BSR set to: 0
 42512  00C64A  0101               	movlb	1	; () banked
 42513  00C64C  0555               	decf	_motor_direction& (0+255),w,b
 42514  00C64E  A4D8               	btfss	status,2,c
 42515  00C650  D061               	goto	l2461
 42516                           
 42517                           ; BSR set to: 1
 42518  00C652  51B7               	movf	(_config+22)& (0+255),w,b
 42519  00C654  B4D8               	btfsc	status,2,c
 42520  00C656  D05E               	goto	l2461
 42521                           
 42522                           ; BSR set to: 1
 42523                           ;motor.c: 256: {;motor.c: 258: motor_calculate_position_in_degrees();
 42524  00C658  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
 42525                           
 42526                           ;motor.c: 261: if(config.cw_limit >= os.current_position_in_degrees)
 42527  00C65C  0101               	movlb	1	; () banked
 42528  00C65E  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42529  00C660  5DB8               	subwf	(_config+23)& (0+255),w,b
 42530  00C662  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42531  00C664  59B9               	subwfb	(_config+24)& (0+255),w,b
 42532  00C666  A0D8               	btfss	status,0,c
 42533  00C668  D014               	goto	l2459
 42534                           
 42535                           ; BSR set to: 1
 42536                           ;motor.c: 262: {;motor.c: 263: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 42537  00C66A  EE21  F07C         	lfsr	2,_os+11	;volatile
 42538  00C66E  CFDE F095          	movff	postinc2,??__motor_run
 42539  00C672  CFDD F096          	movff	postdec2,??__motor_run+1
 42540  00C676  0100               	movlb	0	; () banked
 42541  00C678  1F95               	comf	??__motor_run& (0+255),f,b
 42542  00C67A  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42543  00C67C  4B95               	infsnz	??__motor_run& (0+255),f,b
 42544  00C67E  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42545  00C680  0101               	movlb	1	; () banked
 42546  00C682  51B8               	movf	(_config+23)& (0+255),w,b
 42547  00C684  0100               	movlb	0	; () banked
 42548  00C686  2595               	addwf	??__motor_run& (0+255),w,b
 42549  00C688  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42550  00C68A  0101               	movlb	1	; () banked
 42551  00C68C  51B9               	movf	(_config+24)& (0+255),w,b
 42552  00C68E  0100               	movlb	0	; () banked
 42553  00C690  D017               	goto	L66
 42554  00C692                     l2459:
 42555                           
 42556                           ;motor.c: 265: else;motor.c: 266: {;motor.c: 268: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 42557                           
 42558                           ; BSR set to: 0
 42559  00C692  EE21  F07C         	lfsr	2,_os+11	;volatile
 42560  00C696  CFDE F095          	movff	postinc2,??__motor_run
 42561  00C69A  CFDD F096          	movff	postdec2,??__motor_run+1
 42562  00C69E  0100               	movlb	0	; () banked
 42563  00C6A0  1F95               	comf	??__motor_run& (0+255),f,b
 42564  00C6A2  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42565  00C6A4  4B95               	infsnz	??__motor_run& (0+255),f,b
 42566  00C6A6  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42567  00C6A8  0101               	movlb	1	; () banked
 42568  00C6AA  51B8               	movf	(_config+23)& (0+255),w,b
 42569  00C6AC  0100               	movlb	0	; () banked
 42570  00C6AE  2795               	addwf	??__motor_run& (0+255),f,b
 42571  00C6B0  0101               	movlb	1	; () banked
 42572  00C6B2  51B9               	movf	(_config+24)& (0+255),w,b
 42573  00C6B4  0100               	movlb	0	; () banked
 42574  00C6B6  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 42575  00C6B8  0EA0               	movlw	160
 42576  00C6BA  2595               	addwf	??__motor_run& (0+255),w,b
 42577  00C6BC  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42578  00C6BE  0E8C               	movlw	140
 42579  00C6C0                     L66:
 42580  00C6C0  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 42581  00C6C2  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42582                           
 42583                           ; BSR set to: 0
 42584                           ;motor.c: 269: };motor.c: 271: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42585                           
 42586                           ; BSR set to: 0
 42587  00C6C4  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42588  00C6C8  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42589  00C6CC  ECA1  F08E         	call	_motor_steps_from_degrees	;wreg free
 42590  00C6D0  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42591  00C6D4  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42592  00C6D8  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42593  00C6DC  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42594                           
 42595                           ;motor.c: 273: if(maximum_distance_in_steps<motor_final_stepcount)
 42596  00C6E0  0101               	movlb	1	; () banked
 42597  00C6E2  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42598  00C6E4  0100               	movlb	0	; () banked
 42599  00C6E6  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42600  00C6E8  0101               	movlb	1	; () banked
 42601  00C6EA  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42602  00C6EC  0100               	movlb	0	; () banked
 42603  00C6EE  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42604  00C6F0  0101               	movlb	1	; () banked
 42605  00C6F2  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42606  00C6F4  0100               	movlb	0	; () banked
 42607  00C6F6  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42608  00C6F8  0101               	movlb	1	; () banked
 42609  00C6FA  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42610  00C6FC  0100               	movlb	0	; () banked
 42611  00C6FE  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42612  00C700  B0D8               	btfsc	status,0,c
 42613  00C702  D008               	goto	l2461
 42614                           
 42615                           ; BSR set to: 0
 42616                           ;motor.c: 274: {;motor.c: 275: motor_final_stepcount = maximum_distance_in_steps;
 42617  00C704  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42618  00C708  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42619  00C70C  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42620  00C710  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42621  00C714                     l2461:
 42622                           
 42623                           ;motor.c: 276: };motor.c: 277: };motor.c: 281: if(motor_final_stepcount==0)
 42624                           
 42625                           ; BSR set to: 0
 42626                           
 42627                           ; BSR set to: 0
 42628  00C714  0101               	movlb	1	; () banked
 42629  00C716  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42630  00C718  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42631  00C71A  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42632  00C71C  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42633  00C71E  B4D8               	btfsc	status,2,c
 42634  00C720  0012               	return	
 42635                           
 42636                           ; BSR set to: 1
 42637                           ;motor.c: 284: };motor.c: 287: if(speed==0)
 42638                           
 42639                           ; BSR set to: 1
 42640                           
 42641                           ; BSR set to: 1
 42642                           ;motor.c: 282: {;motor.c: 283: return;
 42643  00C722  0100               	movlb	0	; () banked
 42644  00C724  5193               	movf	__motor_run@speed& (0+255),w,b
 42645  00C726  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 42646  00C728  A4D8               	btfss	status,2,c
 42647  00C72A  D005               	goto	l2464
 42648                           
 42649                           ; BSR set to: 0
 42650                           ;motor.c: 288: {;motor.c: 289: motor_maximum_speed = config.maximum_speed;
 42651  00C72C  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 42652  00C730  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 42653                           
 42654                           ;motor.c: 290: }
 42655  00C734  D004               	goto	l2465
 42656  00C736                     l2464:
 42657                           
 42658                           ; BSR set to: 0
 42659                           ;motor.c: 291: else;motor.c: 292: {;motor.c: 293: motor_maximum_speed = speed;
 42660  00C736  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 42661  00C73A  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 42662  00C73E                     l2465:
 42663                           
 42664                           ; BSR set to: 0
 42665                           ;motor.c: 294: };motor.c: 297: motor_current_speed = 0;
 42666                           
 42667                           ; BSR set to: 0
 42668  00C73E  0E00               	movlw	0
 42669  00C740  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 42670  00C742  0E00               	movlw	0
 42671  00C744  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 42672                           
 42673                           ;motor.c: 298: motor_current_stepcount = 0;
 42674  00C746  0E00               	movlw	0
 42675  00C748  6E58               	movwf	_motor_current_stepcount,c	;volatile
 42676  00C74A  0E00               	movlw	0
 42677  00C74C  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 42678  00C74E  0E00               	movlw	0
 42679  00C750  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 42680  00C752  0E00               	movlw	0
 42681  00C754  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 42682                           
 42683                           ; BSR set to: 0
 42684                           ;motor.c: 300: motor_next_speed_check = motor_steps_lookup[1];
 42685  00C756  0E63               	movlw	low (_motor_steps_lookup+2)
 42686  00C758  6EF6               	movwf	tblptrl,c
 42687  00C75A  0E94               	movlw	high (_motor_steps_lookup+2)
 42688  00C75C  6EF7               	movwf	tblptrh,c
 42689  00C75E                     	if	0	;tblptru may be non-zero
 42690  00C75E                     	endif
 42691  00C75E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42692  00C75E  0E00               	movlw	low (__mediumconst shr (0+16))
 42693  00C760  6EF8               	movwf	tblptru,c
 42694  00C762                     	endif
 42695  00C762  0009               	tblrd		*+
 42696  00C764  CFF5 F095          	movff	tablat,??__motor_run
 42697  00C768  0009               	tblrd		*+
 42698  00C76A  CFF5 F096          	movff	tablat,??__motor_run+1
 42699  00C76E  C095  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 42700  00C772  C096  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 42701  00C776  0102               	movlb	2	; () banked
 42702  00C778  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 42703  00C77A  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 42704                           
 42705                           ; BSR set to: 2
 42706                           ;motor.c: 303: CCP1CONbits.CCP1M = 0b0000;
 42707  00C77C  90BA               	bcf	4026,0,c	;volatile
 42708  00C77E  92BA               	bcf	4026,1,c	;volatile
 42709  00C780  94BA               	bcf	4026,2,c	;volatile
 42710  00C782  96BA               	bcf	4026,3,c	;volatile
 42711                           
 42712                           ; BSR set to: 2
 42713                           ;motor.c: 306: LATBbits.LB0 = 0;
 42714  00C784  908A               	bcf	3978,0,c	;volatile
 42715                           
 42716                           ; BSR set to: 2
 42717                           ;motor.c: 307: if(direction==MOTOR_DIRECTION_CCW)
 42718  00C786  0100               	movlb	0	; () banked
 42719  00C788  2999               	incf	__motor_run@direction& (0+255),w,b
 42720  00C78A  A4D8               	btfss	status,2,c
 42721  00C78C  D005               	goto	l2466
 42722                           
 42723                           ; BSR set to: 0
 42724                           ;motor.c: 308: {;motor.c: 309: if(config.inverse_direction)
 42725  00C78E  0101               	movlb	1	; () banked
 42726  00C790  51A5               	movf	(_config+4)& (0+255),w,b
 42727  00C792  B4D8               	btfsc	status,2,c
 42728  00C794  D005               	goto	u11770
 42729  00C796  D006               	goto	l2470
 42730  00C798                     l2466:
 42731                           
 42732                           ;motor.c: 314: else;motor.c: 315: {;motor.c: 316: if(config.inverse_direction)
 42733                           
 42734                           ; BSR set to: 1
 42735  00C798  0101               	movlb	1	; () banked
 42736  00C79A  51A5               	movf	(_config+4)& (0+255),w,b
 42737  00C79C  B4D8               	btfsc	status,2,c
 42738  00C79E  D002               	goto	l2470
 42739  00C7A0                     u11770:
 42740                           
 42741                           ; BSR set to: 1
 42742                           ;motor.c: 317: LATBbits.LB2 = 0;
 42743  00C7A0  948A               	bcf	3978,2,c	;volatile
 42744  00C7A2  D001               	goto	l2471
 42745  00C7A4                     l2470:
 42746                           
 42747                           ; BSR set to: 1
 42748                           ;motor.c: 318: else;motor.c: 319: LATBbits.LB2 = 1;
 42749  00C7A4  848A               	bsf	3978,2,c	;volatile
 42750  00C7A6                     l2471:
 42751                           
 42752                           ; BSR set to: 1
 42753                           ;motor.c: 320: };motor.c: 323: LATBbits.LB1 = 1;
 42754                           
 42755                           ; BSR set to: 1
 42756  00C7A6  828A               	bsf	3978,1,c	;volatile
 42757                           
 42758                           ; BSR set to: 1
 42759                           ;motor.c: 326: ++motor_current_stepcount;
 42760  00C7A8  0E01               	movlw	1
 42761  00C7AA  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 42762  00C7AC  0E00               	movlw	0
 42763  00C7AE  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 42764  00C7B0  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 42765  00C7B2  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 42766                           
 42767                           ;motor.c: 329: os.current_position_in_steps += motor_direction;
 42768  00C7B4  5155               	movf	_motor_direction& (0+255),w,b
 42769  00C7B6  0100               	movlb	0	; () banked
 42770  00C7B8  6F95               	movwf	??__motor_run& (0+255),b
 42771  00C7BA  0E00               	movlw	0
 42772  00C7BC  BF95               	btfsc	??__motor_run& (0+255),7,b
 42773  00C7BE  0EFF               	movlw	255
 42774  00C7C0  6F96               	movwf	(??__motor_run+1)& (0+255),b
 42775  00C7C2  6F97               	movwf	(??__motor_run+2)& (0+255),b
 42776  00C7C4  6F98               	movwf	(??__motor_run+3)& (0+255),b
 42777  00C7C6  5195               	movf	??__motor_run& (0+255),w,b
 42778  00C7C8  0101               	movlb	1	; () banked
 42779  00C7CA  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 42780  00C7CC  0100               	movlb	0	; () banked
 42781  00C7CE  5196               	movf	(??__motor_run+1)& (0+255),w,b
 42782  00C7D0  0101               	movlb	1	; () banked
 42783  00C7D2  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 42784  00C7D4  0100               	movlb	0	; () banked
 42785  00C7D6  5197               	movf	(??__motor_run+2)& (0+255),w,b
 42786  00C7D8  0101               	movlb	1	; () banked
 42787  00C7DA  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 42788  00C7DC  0100               	movlb	0	; () banked
 42789  00C7DE  5198               	movf	(??__motor_run+3)& (0+255),w,b
 42790  00C7E0  0101               	movlb	1	; () banked
 42791  00C7E2  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 42792                           
 42793                           ;motor.c: 330: if(os.current_position_in_steps==config.full_circle_in_steps)
 42794  00C7E4  51A1               	movf	_config& (0+255),w,b
 42795  00C7E6  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 42796  00C7E8  E112               	bnz	l13184
 42797  00C7EA  51A2               	movf	(_config+1)& (0+255),w,b
 42798  00C7EC  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 42799  00C7EE  E10F               	bnz	l13184
 42800  00C7F0  51A3               	movf	(_config+2)& (0+255),w,b
 42801  00C7F2  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 42802  00C7F4  E10C               	bnz	l13184
 42803  00C7F6  51A4               	movf	(_config+3)& (0+255),w,b
 42804  00C7F8  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 42805  00C7FA  A4D8               	btfss	status,2,c
 42806  00C7FC  D008               	goto	l2472
 42807                           
 42808                           ; BSR set to: 1
 42809                           ;motor.c: 331: os.current_position_in_steps = 0;
 42810  00C7FE  0E00               	movlw	0
 42811  00C800  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42812  00C802  0E00               	movlw	0
 42813  00C804  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42814  00C806  0E00               	movlw	0
 42815  00C808  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42816  00C80A  0E00               	movlw	0
 42817  00C80C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42818  00C80E                     l2472:
 42819  00C80E                     l13184:
 42820                           
 42821                           ; BSR set to: 1
 42822                           ;motor.c: 332: if(os.current_position_in_steps==0xFFFFFFFF)
 42823  00C80E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 42824  00C810  E113               	bnz	l13188
 42825  00C812  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 42826  00C814  E111               	bnz	l13188
 42827  00C816  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 42828  00C818  E10F               	bnz	l13188
 42829  00C81A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 42830  00C81C  A4D8               	btfss	status,2,c
 42831  00C81E  D00C               	goto	l2473
 42832                           
 42833                           ; BSR set to: 1
 42834                           ;motor.c: 333: os.current_position_in_steps = (config.full_circle_in_steps-1);
 42835  00C820  0EFF               	movlw	255
 42836  00C822  25A1               	addwf	_config& (0+255),w,b
 42837  00C824  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42838  00C826  0EFF               	movlw	255
 42839  00C828  21A2               	addwfc	(_config+1)& (0+255),w,b
 42840  00C82A  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42841  00C82C  0EFF               	movlw	255
 42842  00C82E  21A3               	addwfc	(_config+2)& (0+255),w,b
 42843  00C830  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42844  00C832  0EFF               	movlw	255
 42845  00C834  21A4               	addwfc	(_config+3)& (0+255),w,b
 42846  00C836  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42847  00C838                     l2473:
 42848  00C838                     l13188:
 42849                           
 42850                           ; BSR set to: 1
 42851                           ;motor.c: 336: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42852  00C838  0E55               	movlw	85
 42853  00C83A  6EA7               	movwf	4007,c	;volsfr
 42854                           
 42855                           ; BSR set to: 1
 42856  00C83C  0EAA               	movlw	170
 42857  00C83E  6EA7               	movwf	4007,c	;volsfr
 42858                           
 42859                           ; BSR set to: 1
 42860  00C840  010E               	movlb	14	; () banked
 42861  00C842  91BF               	bcf	191,0,b	;volatile
 42862                           
 42863                           ; BSR set to: 14
 42864                           ;motor.c: 337: RPOR4 = 0;
 42865  00C844  0E00               	movlw	0
 42866  00C846  6FC4               	movwf	196,b	;volatile
 42867                           
 42868                           ; BSR set to: 14
 42869                           ;motor.c: 338: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42870  00C848  0E55               	movlw	85
 42871  00C84A  6EA7               	movwf	4007,c	;volsfr
 42872                           
 42873                           ; BSR set to: 14
 42874  00C84C  0EAA               	movlw	170
 42875  00C84E  6EA7               	movwf	4007,c	;volsfr
 42876                           
 42877                           ; BSR set to: 14
 42878  00C850  81BF               	bsf	191,0,b	;volatile
 42879                           
 42880                           ; BSR set to: 14
 42881                           ;motor.c: 341: motor_mode = MOTOR_MODE_MANUAL;
 42882  00C852  0E00               	movlw	0
 42883  00C854  0101               	movlb	1	; () banked
 42884  00C856  6F56               	movwf	_motor_mode& (0+255),b
 42885                           
 42886                           ; BSR set to: 1
 42887                           ;motor.c: 345: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 42888  00C858  0EFD               	movlw	low _motor_prescaler_lookup
 42889  00C85A  0100               	movlb	0	; () banked
 42890  00C85C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42891  00C85E  6EF6               	movwf	tblptrl,c
 42892  00C860  0E9B               	movlw	high _motor_prescaler_lookup
 42893  00C862  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42894  00C864  6EF7               	movwf	tblptrh,c
 42895  00C866                     	if	1	;There are 3 active tblptr bytes
 42896  00C866  6AF8               	clrf	tblptru,c
 42897  00C868  0E00               	movlw	low (__mediumconst shr (0+16))
 42898  00C86A  22F8               	addwfc	tblptru,f,c
 42899  00C86C                     	endif
 42900  00C86C  0008               	tblrd		*
 42901  00C86E  CFF5 F095          	movff	tablat,??__motor_run
 42902  00C872  50CA               	movf	4042,w,c	;volatile
 42903  00C874  1995               	xorwf	??__motor_run& (0+255),w,b
 42904  00C876  0BFC               	andlw	-4
 42905  00C878  1995               	xorwf	??__motor_run& (0+255),w,b
 42906  00C87A  6ECA               	movwf	4042,c	;volatile
 42907                           
 42908                           ; BSR set to: 0
 42909                           ;motor.c: 347: PR2 = motor_period_lookup[motor_current_speed];
 42910  00C87C  0E16               	movlw	low _motor_period_lookup
 42911  00C87E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42912  00C880  6EF6               	movwf	tblptrl,c
 42913  00C882  0E9A               	movlw	high _motor_period_lookup
 42914  00C884  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42915  00C886  6EF7               	movwf	tblptrh,c
 42916  00C888                     	if	1	;There are 3 active tblptr bytes
 42917  00C888  6AF8               	clrf	tblptru,c
 42918  00C88A  0E00               	movlw	low (__mediumconst shr (0+16))
 42919  00C88C  22F8               	addwfc	tblptru,f,c
 42920  00C88E                     	endif
 42921  00C88E  0008               	tblrd		*
 42922  00C890  CFF5 FFCB          	movff	tablat,4043	;volatile
 42923                           
 42924                           ; BSR set to: 0
 42925                           ;motor.c: 349: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 42926  00C894  0E2F               	movlw	low _motor_postscaler_lookup
 42927  00C896  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42928  00C898  6EF6               	movwf	tblptrl,c
 42929  00C89A  0E98               	movlw	high _motor_postscaler_lookup
 42930  00C89C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42931  00C89E  6EF7               	movwf	tblptrh,c
 42932  00C8A0                     	if	1	;There are 3 active tblptr bytes
 42933  00C8A0  6AF8               	clrf	tblptru,c
 42934  00C8A2  0E00               	movlw	low (__mediumconst shr (0+16))
 42935  00C8A4  22F8               	addwfc	tblptru,f,c
 42936  00C8A6                     	endif
 42937  00C8A6  0008               	tblrd		*
 42938  00C8A8  CFF5 F095          	movff	tablat,??__motor_run
 42939  00C8AC  4795               	rlncf	??__motor_run& (0+255),f,b
 42940  00C8AE  4795               	rlncf	??__motor_run& (0+255),f,b
 42941  00C8B0  4795               	rlncf	??__motor_run& (0+255),f,b
 42942  00C8B2  50CA               	movf	4042,w,c	;volatile
 42943  00C8B4  1995               	xorwf	??__motor_run& (0+255),w,b
 42944  00C8B6  0B87               	andlw	-121
 42945  00C8B8  1995               	xorwf	??__motor_run& (0+255),w,b
 42946  00C8BA  6ECA               	movwf	4042,c	;volatile
 42947                           
 42948                           ; BSR set to: 0
 42949                           ;motor.c: 351: CCPR1L = PR2>>1;
 42950  00C8BC  90D8               	bcf	status,0,c
 42951  00C8BE  30CB               	rrcf	4043,w,c	;volatile
 42952  00C8C0  6EBB               	movwf	4027,c	;volatile
 42953                           
 42954                           ; BSR set to: 0
 42955                           ;motor.c: 354: PIR1bits.TMR2IF = 0;
 42956  00C8C2  929E               	bcf	3998,1,c	;volatile
 42957                           
 42958                           ; BSR set to: 0
 42959                           ;motor.c: 355: PIE1bits.TMR2IE = 1;
 42960  00C8C4  829D               	bsf	3997,1,c	;volatile
 42961                           
 42962                           ; BSR set to: 0
 42963                           ;motor.c: 358: TMR2 = 0;
 42964  00C8C6  0E00               	movlw	0
 42965  00C8C8  6ECC               	movwf	4044,c	;volatile
 42966                           
 42967                           ; BSR set to: 0
 42968                           ;motor.c: 359: T2CONbits.TMR2ON = 1;
 42969  00C8CA  84CA               	bsf	4042,2,c	;volatile
 42970                           
 42971                           ; BSR set to: 0
 42972                           ;motor.c: 362: os.busy = 1;
 42973  00C8CC  0E01               	movlw	1
 42974  00C8CE  0101               	movlb	1	; () banked
 42975  00C8D0  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 42976                           
 42977                           ; BSR set to: 1
 42978  00C8D2  0012               	return		;funcret
 42979  00C8D4                     __end_of__motor_run:
 42980                           	opt stack 0
 42981                           tosu	equ	0xFFF
 42982                           tosh	equ	0xFFE
 42983                           tosl	equ	0xFFD
 42984                           pclath	equ	0xFFA
 42985                           tblptru	equ	0xFF8
 42986                           tblptrh	equ	0xFF7
 42987                           tblptrl	equ	0xFF6
 42988                           tablat	equ	0xFF5
 42989                           prodh	equ	0xFF4
 42990                           prodl	equ	0xFF3
 42991                           intcon	equ	0xFF2
 42992                           indf0	equ	0xFEF
 42993                           postinc0	equ	0xFEE
 42994                           fsr0h	equ	0xFEA
 42995                           fsr0l	equ	0xFE9
 42996                           wreg	equ	0xFE8
 42997                           indf1	equ	0xFE7
 42998                           postinc1	equ	0xFE6
 42999                           postdec1	equ	0xFE5
 43000                           plusw1	equ	0xFE3
 43001                           fsr1h	equ	0xFE2
 43002                           fsr1l	equ	0xFE1
 43003                           indf2	equ	0xFDF
 43004                           postinc2	equ	0xFDE
 43005                           postdec2	equ	0xFDD
 43006                           plusw2	equ	0xFDB
 43007                           fsr2h	equ	0xFDA
 43008                           fsr2l	equ	0xFD9
 43009                           status	equ	0xFD8
 43010                           
 43011 ;; *************** function _motor_steps_from_degrees *****************
 43012 ;; Defined at:
 43013 ;;		line 32 in file "motor.c"
 43014 ;; Parameters:    Size  Location     Type
 43015 ;;  degrees         2   39[BANK0 ] unsigned int 
 43016 ;; Auto vars:     Size  Location     Type
 43017 ;;  steps           4   43[BANK0 ] float 
 43018 ;; Return value:  Size  Location     Type
 43019 ;;                  4   39[BANK0 ] unsigned long 
 43020 ;; Registers used:
 43021 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43022 ;; Tracked objects:
 43023 ;;		On entry : 0/0
 43024 ;;		On exit  : 0/0
 43025 ;;		Unchanged: 0/0
 43026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43028 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43030 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43031 ;;Total ram usage:        8 bytes
 43032 ;; Hardware stack levels used:    1
 43033 ;; Hardware stack levels required when called:   11
 43034 ;; This function calls:
 43035 ;;		___fldiv
 43036 ;;		___flmul
 43037 ;;		___fltol
 43038 ;;		___xxtofl
 43039 ;; This function is called by:
 43040 ;;		_motor_nonzero_steps_from_degrees
 43041 ;;		__motor_run
 43042 ;; This function uses a non-reentrant model
 43043 ;;
 43044                           
 43045                           	psect	text178
 43046  011D42                     __ptext178:
 43047                           	opt stack 0
 43048  011D42                     _motor_steps_from_degrees:
 43049                           	opt stack 17
 43050                           
 43051                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 43052                           
 43053                           ; BSR set to: 1
 43054                           ;incstack = 0
 43055  011D42  0100               	movlb	0	; () banked
 43056  011D44  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 43057  011D46  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 43058  011D48  A4D8               	btfss	status,2,c
 43059  011D4A  D009               	goto	l2403
 43060                           
 43061                           ; BSR set to: 0
 43062                           ;motor.c: 38: {;motor.c: 39: return 0;
 43063  011D4C  0E00               	movlw	0
 43064  011D4E  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 43065  011D50  0E00               	movlw	0
 43066  011D52  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 43067  011D54  0E00               	movlw	0
 43068  011D56  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 43069  011D58  0E00               	movlw	0
 43070  011D5A  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 43071                           
 43072                           ; BSR set to: 0
 43073  011D5C  0012               	return	
 43074  011D5E                     l2403:
 43075                           
 43076                           ; BSR set to: 0
 43077                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 43078                           
 43079                           ; BSR set to: 0
 43080  011D5E  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 43081  011D62  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 43082  011D66  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 43083  011D68  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 43084  011D6A  0E00               	movlw	0
 43085  011D6C  EC17  F081         	call	___xxtofl
 43086  011D70  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 43087  011D74  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 43088  011D78  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 43089  011D7C  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 43090                           
 43091                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 43092  011D80  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 43093  011D84  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 43094  011D88  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 43095  011D8C  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 43096  011D90  C1A1  F060         	movff	_config,___xxtofl@val
 43097  011D94  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43098  011D98  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43099  011D9C  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43100  011DA0  0E00               	movlw	0
 43101  011DA2  EC17  F081         	call	___xxtofl
 43102  011DA6  C060  F072         	movff	?___xxtofl,___flmul@a
 43103  011DAA  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 43104  011DAE  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 43105  011DB2  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 43106  011DB6  EC1E  F066         	call	___flmul	;wreg free
 43107  011DBA  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 43108  011DBE  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 43109  011DC2  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 43110  011DC6  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 43111                           
 43112                           ;motor.c: 44: steps /= 36000;
 43113  011DCA  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 43114  011DCE  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 43115  011DD2  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 43116  011DD6  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 43117  011DDA  0E00               	movlw	0
 43118  011DDC  0100               	movlb	0	; () banked
 43119  011DDE  6F72               	movwf	___fldiv@a& (0+255),b
 43120  011DE0  0EA0               	movlw	160
 43121  011DE2  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43122  011DE4  0E0C               	movlw	12
 43123  011DE6  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43124  011DE8  0E47               	movlw	71
 43125  011DEA  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43126  011DEC  ECD6  F06D         	call	___fldiv	;wreg free
 43127  011DF0  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 43128  011DF4  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 43129  011DF8  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 43130  011DFC  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 43131                           
 43132                           ;motor.c: 46: return (uint32_t) steps;
 43133  011E00  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 43134  011E04  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 43135  011E08  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 43136  011E0C  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 43137  011E10  EC62  F090         	call	___fltol	;wreg free
 43138  011E14  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 43139  011E18  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 43140  011E1C  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 43141  011E20  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 43142  011E24  0012               	return	
 43143  011E26                     __end_of_motor_steps_from_degrees:
 43144                           	opt stack 0
 43145                           tosu	equ	0xFFF
 43146                           tosh	equ	0xFFE
 43147                           tosl	equ	0xFFD
 43148                           pclath	equ	0xFFA
 43149                           tblptru	equ	0xFF8
 43150                           tblptrh	equ	0xFF7
 43151                           tblptrl	equ	0xFF6
 43152                           tablat	equ	0xFF5
 43153                           prodh	equ	0xFF4
 43154                           prodl	equ	0xFF3
 43155                           intcon	equ	0xFF2
 43156                           indf0	equ	0xFEF
 43157                           postinc0	equ	0xFEE
 43158                           fsr0h	equ	0xFEA
 43159                           fsr0l	equ	0xFE9
 43160                           wreg	equ	0xFE8
 43161                           indf1	equ	0xFE7
 43162                           postinc1	equ	0xFE6
 43163                           postdec1	equ	0xFE5
 43164                           plusw1	equ	0xFE3
 43165                           fsr1h	equ	0xFE2
 43166                           fsr1l	equ	0xFE1
 43167                           indf2	equ	0xFDF
 43168                           postinc2	equ	0xFDE
 43169                           postdec2	equ	0xFDD
 43170                           plusw2	equ	0xFDB
 43171                           fsr2h	equ	0xFDA
 43172                           fsr2l	equ	0xFD9
 43173                           status	equ	0xFD8
 43174                           
 43175 ;; *************** function _motor_calculate_position_in_degrees *****************
 43176 ;; Defined at:
 43177 ;;		line 59 in file "motor.c"
 43178 ;; Parameters:    Size  Location     Type
 43179 ;;		None
 43180 ;; Auto vars:     Size  Location     Type
 43181 ;;  tmp             4   39[BANK0 ] float 
 43182 ;; Return value:  Size  Location     Type
 43183 ;;                  1    wreg      void 
 43184 ;; Registers used:
 43185 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43186 ;; Tracked objects:
 43187 ;;		On entry : 0/0
 43188 ;;		On exit  : 0/0
 43189 ;;		Unchanged: 0/0
 43190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43192 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43195 ;;Total ram usage:        4 bytes
 43196 ;; Hardware stack levels used:    1
 43197 ;; Hardware stack levels required when called:   11
 43198 ;; This function calls:
 43199 ;;		___fldiv
 43200 ;;		___flmul
 43201 ;;		___fltol
 43202 ;;		___xxtofl
 43203 ;; This function is called by:
 43204 ;;		_main
 43205 ;;		_system_init
 43206 ;;		__motor_run
 43207 ;; This function uses a non-reentrant model
 43208 ;;
 43209                           
 43210                           	psect	text179
 43211  011FE6                     __ptext179:
 43212                           	opt stack 0
 43213  011FE6                     _motor_calculate_position_in_degrees:
 43214                           	opt stack 18
 43215                           
 43216                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 43217                           
 43218                           ;incstack = 0
 43219  011FE6  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 43220  011FEA  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 43221  011FEE  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 43222  011FF2  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 43223  011FF6  0E00               	movlw	0
 43224  011FF8  EC17  F081         	call	___xxtofl
 43225  011FFC  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 43226  012000  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 43227  012004  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 43228  012008  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 43229                           
 43230                           ;motor.c: 64: tmp *= 36000;
 43231  01200C  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 43232  012010  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 43233  012014  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 43234  012018  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 43235  01201C  0E00               	movlw	0
 43236  01201E  0100               	movlb	0	; () banked
 43237  012020  6F72               	movwf	___flmul@a& (0+255),b
 43238  012022  0EA0               	movlw	160
 43239  012024  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43240  012026  0E0C               	movlw	12
 43241  012028  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43242  01202A  0E47               	movlw	71
 43243  01202C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43244  01202E  EC1E  F066         	call	___flmul	;wreg free
 43245  012032  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 43246  012036  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 43247  01203A  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 43248  01203E  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 43249                           
 43250                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 43251  012042  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 43252  012046  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 43253  01204A  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 43254  01204E  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 43255  012052  C1A1  F060         	movff	_config,___xxtofl@val
 43256  012056  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43257  01205A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43258  01205E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43259  012062  0E00               	movlw	0
 43260  012064  EC17  F081         	call	___xxtofl
 43261  012068  C060  F072         	movff	?___xxtofl,___fldiv@a
 43262  01206C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 43263  012070  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 43264  012074  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 43265  012078  ECD6  F06D         	call	___fldiv	;wreg free
 43266  01207C  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 43267  012080  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 43268  012084  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 43269  012088  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 43270                           
 43271                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 43272  01208C  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 43273  012090  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 43274  012094  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 43275  012098  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 43276  01209C  EC62  F090         	call	___fltol	;wreg free
 43277  0120A0  C060  F17C         	movff	?___fltol,_os+11	;volatile
 43278  0120A4  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 43279                           
 43280                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 43281  0120A8  0EA0               	movlw	160
 43282  0120AA  0101               	movlb	1	; () banked
 43283  0120AC  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 43284  0120AE  E109               	bnz	l2412
 43285  0120B0  0E8C               	movlw	140
 43286  0120B2  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 43287  0120B4  A4D8               	btfss	status,2,c
 43288  0120B6  0012               	return	
 43289                           
 43290                           ; BSR set to: 1
 43291                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 43292  0120B8  0E00               	movlw	0
 43293  0120BA  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 43294  0120BC  0E00               	movlw	0
 43295  0120BE  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 43296  0120C0  0012               	return	
 43297  0120C2                     l2412:
 43298                           
 43299                           ; BSR set to: 1
 43300  0120C2  0012               	return		;funcret
 43301  0120C4                     __end_of_motor_calculate_position_in_degrees:
 43302                           	opt stack 0
 43303                           tosu	equ	0xFFF
 43304                           tosh	equ	0xFFE
 43305                           tosl	equ	0xFFD
 43306                           pclath	equ	0xFFA
 43307                           tblptru	equ	0xFF8
 43308                           tblptrh	equ	0xFF7
 43309                           tblptrl	equ	0xFF6
 43310                           tablat	equ	0xFF5
 43311                           prodh	equ	0xFF4
 43312                           prodl	equ	0xFF3
 43313                           intcon	equ	0xFF2
 43314                           indf0	equ	0xFEF
 43315                           postinc0	equ	0xFEE
 43316                           fsr0h	equ	0xFEA
 43317                           fsr0l	equ	0xFE9
 43318                           wreg	equ	0xFE8
 43319                           indf1	equ	0xFE7
 43320                           postinc1	equ	0xFE6
 43321                           postdec1	equ	0xFE5
 43322                           plusw1	equ	0xFE3
 43323                           fsr1h	equ	0xFE2
 43324                           fsr1l	equ	0xFE1
 43325                           indf2	equ	0xFDF
 43326                           postinc2	equ	0xFDE
 43327                           postdec2	equ	0xFDD
 43328                           plusw2	equ	0xFDB
 43329                           fsr2h	equ	0xFDA
 43330                           fsr2l	equ	0xFD9
 43331                           status	equ	0xFD8
 43332                           
 43333 ;; *************** function ___xxtofl *****************
 43334 ;; Defined at:
 43335 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 43336 ;; Parameters:    Size  Location     Type
 43337 ;;  sign            1    wreg     unsigned char 
 43338 ;;  val             4    0[BANK0 ] long 
 43339 ;; Auto vars:     Size  Location     Type
 43340 ;;  sign            1    8[BANK0 ] unsigned char 
 43341 ;;  arg             4   10[BANK0 ] unsigned long 
 43342 ;;  exp             1    9[BANK0 ] unsigned char 
 43343 ;; Return value:  Size  Location     Type
 43344 ;;                  4    0[BANK0 ] unsigned char 
 43345 ;; Registers used:
 43346 ;;		wreg, status,2, status,0
 43347 ;; Tracked objects:
 43348 ;;		On entry : 0/0
 43349 ;;		On exit  : 0/0
 43350 ;;		Unchanged: 0/0
 43351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43353 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43355 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43356 ;;Total ram usage:       14 bytes
 43357 ;; Hardware stack levels used:    1
 43358 ;; Hardware stack levels required when called:   10
 43359 ;; This function calls:
 43360 ;;		Nothing
 43361 ;; This function is called by:
 43362 ;;		_motor_steps_from_degrees
 43363 ;;		_motor_calculate_position_in_degrees
 43364 ;;		__motor_get_speed_in_degrees
 43365 ;;		__step_position_from_divide_position
 43366 ;;		_motor_divide_jump_to_nearest
 43367 ;;		_motor_arc_move
 43368 ;;		_adc_read_temperature
 43369 ;;		_motor_go_to_degrees_position
 43370 ;; This function uses a non-reentrant model
 43371 ;;
 43372                           
 43373                           	psect	text180
 43374  01022E                     __ptext180:
 43375                           	opt stack 0
 43376  01022E                     ___xxtofl:
 43377                           	opt stack 18
 43378                           
 43379                           ; BSR set to: 1
 43380                           ;incstack = 0
 43381                           ;___xxtofl@sign stored from wreg
 43382  01022E  0100               	movlb	0	; () banked
 43383  010230  6F68               	movwf	___xxtofl@sign& (0+255),b
 43384  010232  0100               	movlb	0	; () banked
 43385  010234  5168               	movf	___xxtofl@sign& (0+255),w,b
 43386  010236  A4D8               	btfss	status,2,c
 43387                           
 43388                           ; BSR set to: 0
 43389  010238  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43390  01023A  D01A               	goto	l3615
 43391                           
 43392                           ; BSR set to: 0
 43393  01023C  C060  F064         	movff	___xxtofl@val,??___xxtofl
 43394  010240  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 43395  010244  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 43396  010248  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 43397  01024C  1F64               	comf	??___xxtofl& (0+255),f,b
 43398  01024E  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 43399  010250  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 43400  010252  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 43401  010254  2B64               	incf	??___xxtofl& (0+255),f,b
 43402  010256  0E00               	movlw	0
 43403  010258  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 43404  01025A  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 43405  01025C  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 43406  01025E  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 43407  010262  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 43408  010266  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 43409  01026A  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 43410  01026E  D008               	goto	l3616
 43411  010270                     l3615:
 43412                           
 43413                           ; BSR set to: 0
 43414  010270  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 43415  010274  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 43416  010278  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 43417  01027C  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 43418  010280                     l3616:
 43419                           
 43420                           ; BSR set to: 0
 43421                           
 43422                           ; BSR set to: 0
 43423  010280  5160               	movf	___xxtofl@val& (0+255),w,b
 43424  010282  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 43425  010284  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 43426  010286  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 43427  010288  A4D8               	btfss	status,2,c
 43428  01028A  D009               	goto	l3617
 43429                           
 43430                           ; BSR set to: 0
 43431  01028C  0E00               	movlw	0
 43432  01028E  6F60               	movwf	?___xxtofl& (0+255),b
 43433  010290  0E00               	movlw	0
 43434  010292  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 43435  010294  0E00               	movlw	0
 43436  010296  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 43437  010298  0E00               	movlw	0
 43438  01029A  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 43439                           
 43440                           ; BSR set to: 0
 43441  01029C  0012               	return	
 43442  01029E                     l3617:
 43443                           
 43444                           ; BSR set to: 0
 43445                           
 43446                           ; BSR set to: 0
 43447  01029E  0E96               	movlw	150
 43448  0102A0  6F69               	movwf	___xxtofl@exp& (0+255),b
 43449  0102A2  D006               	goto	l3619
 43450  0102A4                     
 43451                           ; BSR set to: 0
 43452                           
 43453                           ; BSR set to: 0
 43454  0102A4  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43455  0102A6  90D8               	bcf	status,0,c
 43456  0102A8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43457  0102AA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43458  0102AC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43459  0102AE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43460  0102B0                     l3619:
 43461                           
 43462                           ; BSR set to: 0
 43463                           
 43464                           ; BSR set to: 0
 43465  0102B0  0E00               	movlw	0
 43466  0102B2  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43467  0102B4  6F64               	movwf	??___xxtofl& (0+255),b
 43468  0102B6  0E00               	movlw	0
 43469  0102B8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43470  0102BA  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43471  0102BC  0E00               	movlw	0
 43472  0102BE  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43473  0102C0  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43474  0102C2  0EFE               	movlw	254
 43475  0102C4  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43476  0102C6  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43477  0102C8  5164               	movf	??___xxtofl& (0+255),w,b
 43478  0102CA  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43479  0102CC  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43480  0102CE  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43481  0102D0  B4D8               	btfsc	status,2,c
 43482  0102D2  D00D               	goto	l3622
 43483  0102D4  D7E7               	goto	l3620
 43484  0102D6                     
 43485                           ; BSR set to: 0
 43486                           
 43487                           ; BSR set to: 0
 43488  0102D6  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43489                           
 43490                           ; BSR set to: 0
 43491  0102D8  0E01               	movlw	1
 43492  0102DA  276A               	addwf	___xxtofl@arg& (0+255),f,b
 43493  0102DC  0E00               	movlw	0
 43494  0102DE  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 43495  0102E0  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 43496  0102E2  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 43497                           
 43498                           ; BSR set to: 0
 43499  0102E4  90D8               	bcf	status,0,c
 43500  0102E6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43501  0102E8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43502  0102EA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43503  0102EC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43504  0102EE                     l3622:
 43505                           
 43506                           ; BSR set to: 0
 43507  0102EE  0E00               	movlw	0
 43508  0102F0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43509  0102F2  6F64               	movwf	??___xxtofl& (0+255),b
 43510  0102F4  0E00               	movlw	0
 43511  0102F6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43512  0102F8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43513  0102FA  0E00               	movlw	0
 43514  0102FC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43515  0102FE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43516  010300  0EFF               	movlw	255
 43517  010302  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43518  010304  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43519  010306  5164               	movf	??___xxtofl& (0+255),w,b
 43520  010308  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43521  01030A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43522  01030C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43523  01030E  B4D8               	btfsc	status,2,c
 43524  010310  D007               	goto	l3625
 43525  010312  D7E1               	goto	l3623
 43526  010314                     
 43527                           ; BSR set to: 0
 43528                           
 43529                           ; BSR set to: 0
 43530  010314  0769               	decf	___xxtofl@exp& (0+255),f,b
 43531  010316  90D8               	bcf	status,0,c
 43532  010318  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 43533  01031A  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 43534  01031C  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 43535  01031E  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 43536  010320                     l3625:
 43537                           
 43538                           ; BSR set to: 0
 43539                           
 43540                           ; BSR set to: 0
 43541  010320  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 43542  010322  D003               	goto	u10520
 43543                           
 43544                           ; BSR set to: 0
 43545  010324  0E02               	movlw	2
 43546  010326  6169               	cpfslt	___xxtofl@exp& (0+255),b
 43547  010328  D7F5               	goto	l3626
 43548  01032A                     u10520:
 43549                           
 43550                           ; BSR set to: 0
 43551                           
 43552                           ; BSR set to: 0
 43553  01032A  A169               	btfss	___xxtofl@exp& (0+255),0,b
 43554                           
 43555                           ; BSR set to: 0
 43556  01032C  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 43557                           
 43558                           ; BSR set to: 0
 43559                           
 43560                           ; BSR set to: 0
 43561  01032E  90D8               	bcf	status,0,c
 43562  010330  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 43563                           
 43564                           ; BSR set to: 0
 43565  010332  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 43566  010336  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43567  010338  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43568  01033A  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 43569  01033C  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 43570  010340  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43571  010342  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43572  010344  6B64               	clrf	??___xxtofl& (0+255),b
 43573  010346  5164               	movf	??___xxtofl& (0+255),w,b
 43574  010348  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 43575  01034A  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 43576  01034C  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 43577  01034E  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 43578  010350  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 43579  010352  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 43580  010354  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 43581                           
 43582                           ; BSR set to: 0
 43583  010356  5168               	movf	___xxtofl@sign& (0+255),w,b
 43584  010358  A4D8               	btfss	status,2,c
 43585                           
 43586                           ; BSR set to: 0
 43587  01035A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43588  01035C  D001               	goto	l3631
 43589                           
 43590                           ; BSR set to: 0
 43591  01035E  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 43592  010360                     l3631:
 43593                           
 43594                           ; BSR set to: 0
 43595                           
 43596                           ; BSR set to: 0
 43597  010360  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 43598  010364  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 43599  010368  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 43600  01036C  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 43601  010370  0012               	return	
 43602  010372                     __end_of___xxtofl:
 43603                           	opt stack 0
 43604                           tosu	equ	0xFFF
 43605                           tosh	equ	0xFFE
 43606                           tosl	equ	0xFFD
 43607                           pclath	equ	0xFFA
 43608                           tblptru	equ	0xFF8
 43609                           tblptrh	equ	0xFF7
 43610                           tblptrl	equ	0xFF6
 43611                           tablat	equ	0xFF5
 43612                           prodh	equ	0xFF4
 43613                           prodl	equ	0xFF3
 43614                           intcon	equ	0xFF2
 43615                           indf0	equ	0xFEF
 43616                           postinc0	equ	0xFEE
 43617                           fsr0h	equ	0xFEA
 43618                           fsr0l	equ	0xFE9
 43619                           wreg	equ	0xFE8
 43620                           indf1	equ	0xFE7
 43621                           postinc1	equ	0xFE6
 43622                           postdec1	equ	0xFE5
 43623                           plusw1	equ	0xFE3
 43624                           fsr1h	equ	0xFE2
 43625                           fsr1l	equ	0xFE1
 43626                           indf2	equ	0xFDF
 43627                           postinc2	equ	0xFDE
 43628                           postdec2	equ	0xFDD
 43629                           plusw2	equ	0xFDB
 43630                           fsr2h	equ	0xFDA
 43631                           fsr2l	equ	0xFD9
 43632                           status	equ	0xFD8
 43633                           
 43634 ;; *************** function ___fltol *****************
 43635 ;; Defined at:
 43636 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 43637 ;; Parameters:    Size  Location     Type
 43638 ;;  f1              4    0[BANK0 ] unsigned char 
 43639 ;; Auto vars:     Size  Location     Type
 43640 ;;  exp1            1    9[BANK0 ] unsigned char 
 43641 ;;  sign1           1    8[BANK0 ] unsigned char 
 43642 ;; Return value:  Size  Location     Type
 43643 ;;                  4    0[BANK0 ] long 
 43644 ;; Registers used:
 43645 ;;		wreg, status,2, status,0
 43646 ;; Tracked objects:
 43647 ;;		On entry : 0/0
 43648 ;;		On exit  : 0/0
 43649 ;;		Unchanged: 0/0
 43650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43651 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43653 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43654 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43655 ;;Total ram usage:       10 bytes
 43656 ;; Hardware stack levels used:    1
 43657 ;; Hardware stack levels required when called:   10
 43658 ;; This function calls:
 43659 ;;		Nothing
 43660 ;; This function is called by:
 43661 ;;		_motor_steps_from_degrees
 43662 ;;		_motor_calculate_position_in_degrees
 43663 ;;		__motor_get_speed_in_degrees
 43664 ;;		__step_position_from_divide_position
 43665 ;;		_motor_divide_jump_to_nearest
 43666 ;;		_motor_arc_move
 43667 ;;		_adc_read_temperature
 43668 ;;		_motor_go_to_degrees_position
 43669 ;; This function uses a non-reentrant model
 43670 ;;
 43671                           
 43672                           	psect	text181
 43673  0120C4                     __ptext181:
 43674                           	opt stack 0
 43675  0120C4                     ___fltol:
 43676                           	opt stack 18
 43677                           
 43678                           ; BSR set to: 0
 43679                           ;incstack = 0
 43680  0120C4  0100               	movlb	0	; () banked
 43681  0120C6  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 43682  0120C8  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 43683  0120CA  6F69               	movwf	___fltol@exp1& (0+255),b
 43684  0120CC  5169               	movf	___fltol@exp1& (0+255),w,b
 43685  0120CE  A4D8               	btfss	status,2,c
 43686  0120D0  D009               	goto	l3260
 43687                           
 43688                           ; BSR set to: 0
 43689  0120D2  0E00               	movlw	0
 43690  0120D4  6F60               	movwf	?___fltol& (0+255),b
 43691  0120D6  0E00               	movlw	0
 43692  0120D8  6F61               	movwf	(?___fltol+1)& (0+255),b
 43693  0120DA  0E00               	movlw	0
 43694  0120DC  6F62               	movwf	(?___fltol+2)& (0+255),b
 43695  0120DE  0E00               	movlw	0
 43696  0120E0  6F63               	movwf	(?___fltol+3)& (0+255),b
 43697                           
 43698                           ; BSR set to: 0
 43699  0120E2  0012               	return	
 43700  0120E4                     l3260:
 43701                           
 43702                           ; BSR set to: 0
 43703                           
 43704                           ; BSR set to: 0
 43705  0120E4  C060  F064         	movff	___fltol@f1,??___fltol
 43706  0120E8  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 43707  0120EC  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 43708  0120F0  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 43709  0120F4  0E20               	movlw	32
 43710  0120F6  D005               	goto	u10400
 43711  0120F8                     u10405:
 43712  0120F8  90D8               	bcf	status,0,c
 43713  0120FA  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 43714  0120FC  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 43715  0120FE  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 43716  012100  3364               	rrcf	??___fltol& (0+255),f,b
 43717  012102                     u10400:
 43718  012102  2EE8               	decfsz	wreg,f,c
 43719  012104  D7F9               	goto	u10405
 43720  012106  5164               	movf	??___fltol& (0+255),w,b
 43721  012108  6F68               	movwf	___fltol@sign1& (0+255),b
 43722                           
 43723                           ; BSR set to: 0
 43724  01210A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 43725                           
 43726                           ; BSR set to: 0
 43727  01210C  0EFF               	movlw	255
 43728  01210E  1760               	andwf	___fltol@f1& (0+255),f,b
 43729  012110  0EFF               	movlw	255
 43730  012112  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 43731  012114  0EFF               	movlw	255
 43732  012116  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 43733  012118  0E00               	movlw	0
 43734  01211A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 43735                           
 43736                           ; BSR set to: 0
 43737  01211C  0E96               	movlw	150
 43738  01211E  5F69               	subwf	___fltol@exp1& (0+255),f,b
 43739                           
 43740                           ; BSR set to: 0
 43741  012120  AF69               	btfss	___fltol@exp1& (0+255),7,b
 43742  012122  D016               	goto	l3262
 43743                           
 43744                           ; BSR set to: 0
 43745  012124  5169               	movf	___fltol@exp1& (0+255),w,b
 43746  012126  0A80               	xorlw	128
 43747  012128  0F97               	addlw	151
 43748  01212A  B0D8               	btfsc	status,0,c
 43749  01212C  D009               	goto	l3263
 43750                           
 43751                           ; BSR set to: 0
 43752  01212E  0E00               	movlw	0
 43753  012130  6F60               	movwf	?___fltol& (0+255),b
 43754  012132  0E00               	movlw	0
 43755  012134  6F61               	movwf	(?___fltol+1)& (0+255),b
 43756  012136  0E00               	movlw	0
 43757  012138  6F62               	movwf	(?___fltol+2)& (0+255),b
 43758  01213A  0E00               	movlw	0
 43759  01213C  6F63               	movwf	(?___fltol+3)& (0+255),b
 43760                           
 43761                           ; BSR set to: 0
 43762  01213E  0012               	return	
 43763  012140                     l3263:
 43764                           
 43765                           ; BSR set to: 0
 43766                           
 43767                           ; BSR set to: 0
 43768                           
 43769                           ; BSR set to: 0
 43770  012140  90D8               	bcf	status,0,c
 43771  012142  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 43772  012144  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 43773  012146  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 43774  012148  3360               	rrcf	___fltol@f1& (0+255),f,b
 43775                           
 43776                           ; BSR set to: 0
 43777  01214A  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 43778  01214C  D7F9               	goto	l3263
 43779                           
 43780                           ; BSR set to: 0
 43781  01214E  D015               	goto	u10440
 43782  012150                     l3262:
 43783                           
 43784                           ; BSR set to: 0
 43785                           
 43786                           ; BSR set to: 0
 43787  012150  0E1F               	movlw	31
 43788  012152  6569               	cpfsgt	___fltol@exp1& (0+255),b
 43789  012154  D00F               	goto	l3268
 43790                           
 43791                           ; BSR set to: 0
 43792  012156  0E00               	movlw	0
 43793  012158  6F60               	movwf	?___fltol& (0+255),b
 43794  01215A  0E00               	movlw	0
 43795  01215C  6F61               	movwf	(?___fltol+1)& (0+255),b
 43796  01215E  0E00               	movlw	0
 43797  012160  6F62               	movwf	(?___fltol+2)& (0+255),b
 43798  012162  0E00               	movlw	0
 43799  012164  6F63               	movwf	(?___fltol+3)& (0+255),b
 43800                           
 43801                           ; BSR set to: 0
 43802  012166  0012               	return	
 43803  012168                     
 43804                           ; BSR set to: 0
 43805                           
 43806                           ; BSR set to: 0
 43807  012168  90D8               	bcf	status,0,c
 43808  01216A  3760               	rlcf	___fltol@f1& (0+255),f,b
 43809  01216C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 43810  01216E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 43811  012170  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 43812  012172  0769               	decf	___fltol@exp1& (0+255),f,b
 43813  012174                     l3268:
 43814                           
 43815                           ; BSR set to: 0
 43816                           
 43817                           ; BSR set to: 0
 43818  012174  5169               	movf	___fltol@exp1& (0+255),w,b
 43819  012176  A4D8               	btfss	status,2,c
 43820  012178  D7F7               	goto	l3269
 43821  01217A                     u10440:
 43822                           
 43823                           ; BSR set to: 0
 43824                           
 43825                           ; BSR set to: 0
 43826                           
 43827                           ; BSR set to: 0
 43828  01217A  5168               	movf	___fltol@sign1& (0+255),w,b
 43829  01217C  B4D8               	btfsc	status,2,c
 43830  01217E  D008               	goto	l3271
 43831                           
 43832                           ; BSR set to: 0
 43833  012180  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 43834  012182  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 43835  012184  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 43836  012186  6D60               	negf	___fltol@f1& (0+255),b
 43837  012188  0E00               	movlw	0
 43838  01218A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 43839  01218C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 43840  01218E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 43841  012190                     l3271:
 43842                           
 43843                           ; BSR set to: 0
 43844                           
 43845                           ; BSR set to: 0
 43846  012190  C060  F060         	movff	___fltol@f1,?___fltol
 43847  012194  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 43848  012198  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 43849  01219C  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 43850  0121A0  0012               	return	
 43851  0121A2                     __end_of___fltol:
 43852                           	opt stack 0
 43853                           tosu	equ	0xFFF
 43854                           tosh	equ	0xFFE
 43855                           tosl	equ	0xFFD
 43856                           pclath	equ	0xFFA
 43857                           tblptru	equ	0xFF8
 43858                           tblptrh	equ	0xFF7
 43859                           tblptrl	equ	0xFF6
 43860                           tablat	equ	0xFF5
 43861                           prodh	equ	0xFF4
 43862                           prodl	equ	0xFF3
 43863                           intcon	equ	0xFF2
 43864                           indf0	equ	0xFEF
 43865                           postinc0	equ	0xFEE
 43866                           fsr0h	equ	0xFEA
 43867                           fsr0l	equ	0xFE9
 43868                           wreg	equ	0xFE8
 43869                           indf1	equ	0xFE7
 43870                           postinc1	equ	0xFE6
 43871                           postdec1	equ	0xFE5
 43872                           plusw1	equ	0xFE3
 43873                           fsr1h	equ	0xFE2
 43874                           fsr1l	equ	0xFE1
 43875                           indf2	equ	0xFDF
 43876                           postinc2	equ	0xFDE
 43877                           postdec2	equ	0xFDD
 43878                           plusw2	equ	0xFDB
 43879                           fsr2h	equ	0xFDA
 43880                           fsr2l	equ	0xFD9
 43881                           status	equ	0xFD8
 43882                           
 43883 ;; *************** function ___flmul *****************
 43884 ;; Defined at:
 43885 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 43886 ;; Parameters:    Size  Location     Type
 43887 ;;  b               4   14[BANK0 ] long 
 43888 ;;  a               4   18[BANK0 ] long 
 43889 ;; Auto vars:     Size  Location     Type
 43890 ;;  prod            4   33[BANK0 ] struct .
 43891 ;;  grs             4   27[BANK0 ] unsigned long 
 43892 ;;  temp            2   37[BANK0 ] struct .
 43893 ;;  bexp            1   32[BANK0 ] unsigned char 
 43894 ;;  aexp            1   31[BANK0 ] unsigned char 
 43895 ;;  sign            1   26[BANK0 ] unsigned char 
 43896 ;; Return value:  Size  Location     Type
 43897 ;;                  4   14[BANK0 ] unsigned char 
 43898 ;; Registers used:
 43899 ;;		wreg, status,2, status,0, prodl, prodh
 43900 ;; Tracked objects:
 43901 ;;		On entry : 0/0
 43902 ;;		On exit  : 0/0
 43903 ;;		Unchanged: 0/0
 43904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43905 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43906 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43907 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43908 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43909 ;;Total ram usage:       25 bytes
 43910 ;; Hardware stack levels used:    1
 43911 ;; Hardware stack levels required when called:   10
 43912 ;; This function calls:
 43913 ;;		Nothing
 43914 ;; This function is called by:
 43915 ;;		_motor_steps_from_degrees
 43916 ;;		_motor_calculate_position_in_degrees
 43917 ;;		__step_position_from_divide_position
 43918 ;;		_motor_divide_jump_to_nearest
 43919 ;;		_motor_arc_move
 43920 ;;		_adc_read_temperature
 43921 ;;		_motor_go_to_degrees_position
 43922 ;; This function uses a non-reentrant model
 43923 ;;
 43924                           
 43925                           	psect	text182
 43926  00CC3C                     __ptext182:
 43927                           	opt stack 0
 43928  00CC3C                     ___flmul:
 43929                           	opt stack 18
 43930                           
 43931                           ; BSR set to: 0
 43932                           ;incstack = 0
 43933  00CC3C  0100               	movlb	0	; () banked
 43934  00CC3E  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43935  00CC40  0B80               	andlw	128
 43936  00CC42  6F7A               	movwf	___flmul@sign& (0+255),b
 43937  00CC44  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43938  00CC46  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 43939  00CC48  6F80               	movwf	___flmul@bexp& (0+255),b
 43940                           
 43941                           ; BSR set to: 0
 43942  00CC4A  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 43943                           
 43944                           ; BSR set to: 0
 43945  00CC4C  8180               	bsf	___flmul@bexp& (0+255),0,b
 43946                           
 43947                           ; BSR set to: 0
 43948                           
 43949                           ; BSR set to: 0
 43950  00CC4E  5180               	movf	___flmul@bexp& (0+255),w,b
 43951  00CC50  B4D8               	btfsc	status,2,c
 43952  00CC52  D00D               	goto	l3568
 43953                           
 43954                           ; BSR set to: 0
 43955  00CC54  2980               	incf	___flmul@bexp& (0+255),w,b
 43956  00CC56  A4D8               	btfss	status,2,c
 43957  00CC58  D008               	goto	l3569
 43958                           
 43959                           ; BSR set to: 0
 43960  00CC5A  0E00               	movlw	0
 43961  00CC5C  6F6E               	movwf	___flmul@b& (0+255),b
 43962  00CC5E  0E00               	movlw	0
 43963  00CC60  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43964  00CC62  0E00               	movlw	0
 43965  00CC64  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43966  00CC66  0E00               	movlw	0
 43967  00CC68  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43968  00CC6A                     l3569:
 43969                           
 43970                           ; BSR set to: 0
 43971                           
 43972                           ; BSR set to: 0
 43973  00CC6A  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 43974  00CC6C  D008               	goto	l3570
 43975  00CC6E                     l3568:
 43976                           
 43977                           ; BSR set to: 0
 43978                           
 43979                           ; BSR set to: 0
 43980  00CC6E  0E00               	movlw	0
 43981  00CC70  6F6E               	movwf	___flmul@b& (0+255),b
 43982  00CC72  0E00               	movlw	0
 43983  00CC74  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43984  00CC76  0E00               	movlw	0
 43985  00CC78  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43986  00CC7A  0E00               	movlw	0
 43987  00CC7C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43988  00CC7E                     l3570:
 43989                           
 43990                           ; BSR set to: 0
 43991                           
 43992                           ; BSR set to: 0
 43993  00CC7E  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43994  00CC80  0B80               	andlw	128
 43995  00CC82  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 43996                           
 43997                           ; BSR set to: 0
 43998  00CC84  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43999  00CC86  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 44000  00CC88  6F7F               	movwf	___flmul@aexp& (0+255),b
 44001                           
 44002                           ; BSR set to: 0
 44003  00CC8A  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 44004                           
 44005                           ; BSR set to: 0
 44006  00CC8C  817F               	bsf	___flmul@aexp& (0+255),0,b
 44007                           
 44008                           ; BSR set to: 0
 44009                           
 44010                           ; BSR set to: 0
 44011  00CC8E  517F               	movf	___flmul@aexp& (0+255),w,b
 44012  00CC90  B4D8               	btfsc	status,2,c
 44013  00CC92  D00D               	goto	l3572
 44014                           
 44015                           ; BSR set to: 0
 44016  00CC94  297F               	incf	___flmul@aexp& (0+255),w,b
 44017  00CC96  A4D8               	btfss	status,2,c
 44018  00CC98  D008               	goto	l3573
 44019                           
 44020                           ; BSR set to: 0
 44021  00CC9A  0E00               	movlw	0
 44022  00CC9C  6F72               	movwf	___flmul@a& (0+255),b
 44023  00CC9E  0E00               	movlw	0
 44024  00CCA0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44025  00CCA2  0E00               	movlw	0
 44026  00CCA4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44027  00CCA6  0E00               	movlw	0
 44028  00CCA8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44029  00CCAA                     l3573:
 44030                           
 44031                           ; BSR set to: 0
 44032                           
 44033                           ; BSR set to: 0
 44034  00CCAA  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 44035  00CCAC  D008               	goto	l3574
 44036  00CCAE                     l3572:
 44037                           
 44038                           ; BSR set to: 0
 44039                           
 44040                           ; BSR set to: 0
 44041  00CCAE  0E00               	movlw	0
 44042  00CCB0  6F72               	movwf	___flmul@a& (0+255),b
 44043  00CCB2  0E00               	movlw	0
 44044  00CCB4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44045  00CCB6  0E00               	movlw	0
 44046  00CCB8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44047  00CCBA  0E00               	movlw	0
 44048  00CCBC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44049  00CCBE                     l3574:
 44050                           
 44051                           ; BSR set to: 0
 44052  00CCBE  517F               	movf	___flmul@aexp& (0+255),w,b
 44053  00CCC0  B4D8               	btfsc	status,2,c
 44054  00CCC2  D003               	goto	u10270
 44055                           
 44056                           ; BSR set to: 0
 44057  00CCC4  5180               	movf	___flmul@bexp& (0+255),w,b
 44058  00CCC6  A4D8               	btfss	status,2,c
 44059  00CCC8  D009               	goto	l3575
 44060  00CCCA                     u10270:
 44061                           
 44062                           ; BSR set to: 0
 44063                           
 44064                           ; BSR set to: 0
 44065  00CCCA  0E00               	movlw	0
 44066  00CCCC  6F6E               	movwf	?___flmul& (0+255),b
 44067  00CCCE  0E00               	movlw	0
 44068  00CCD0  6F6F               	movwf	(?___flmul+1)& (0+255),b
 44069  00CCD2  0E00               	movlw	0
 44070  00CCD4  6F70               	movwf	(?___flmul+2)& (0+255),b
 44071  00CCD6  0E00               	movlw	0
 44072  00CCD8  6F71               	movwf	(?___flmul+3)& (0+255),b
 44073                           
 44074                           ; BSR set to: 0
 44075  00CCDA  0012               	return	
 44076  00CCDC                     l3575:
 44077                           
 44078                           ; BSR set to: 0
 44079                           
 44080                           ; BSR set to: 0
 44081  00CCDC  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44082  00CCDE  036E               	mulwf	___flmul@b& (0+255),b
 44083  00CCE0  CFF3 F085          	movff	prodl,___flmul@temp
 44084  00CCE4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44085                           
 44086                           ; BSR set to: 0
 44087  00CCE8  5185               	movf	___flmul@temp& (0+255),w,b
 44088  00CCEA  6F7B               	movwf	___flmul@grs& (0+255),b
 44089  00CCEC  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 44090  00CCEE  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 44091  00CCF0  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 44092                           
 44093                           ; BSR set to: 0
 44094  00CCF2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44095  00CCF4  6F81               	movwf	___flmul@prod& (0+255),b
 44096  00CCF6  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 44097  00CCF8  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 44098  00CCFA  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 44099  00CCFC  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44100  00CCFE  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44101  00CD00  CFF3 F085          	movff	prodl,___flmul@temp
 44102  00CD04  CFF4 F086          	movff	prodh,___flmul@temp+1
 44103                           
 44104                           ; BSR set to: 0
 44105  00CD08  5185               	movf	___flmul@temp& (0+255),w,b
 44106  00CD0A  277B               	addwf	___flmul@grs& (0+255),f,b
 44107  00CD0C  0E00               	movlw	0
 44108  00CD0E  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44109  00CD10  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44110  00CD12  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44111                           
 44112                           ; BSR set to: 0
 44113  00CD14  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44114  00CD16  2781               	addwf	___flmul@prod& (0+255),f,b
 44115  00CD18  0E00               	movlw	0
 44116  00CD1A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44117  00CD1C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44118  00CD1E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44119  00CD20  5172               	movf	___flmul@a& (0+255),w,b
 44120  00CD22  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44121  00CD24  CFF3 F085          	movff	prodl,___flmul@temp
 44122  00CD28  CFF4 F086          	movff	prodh,___flmul@temp+1
 44123                           
 44124                           ; BSR set to: 0
 44125  00CD2C  5185               	movf	___flmul@temp& (0+255),w,b
 44126  00CD2E  277B               	addwf	___flmul@grs& (0+255),f,b
 44127  00CD30  0E00               	movlw	0
 44128  00CD32  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44129  00CD34  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44130  00CD36  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44131                           
 44132                           ; BSR set to: 0
 44133  00CD38  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44134  00CD3A  2781               	addwf	___flmul@prod& (0+255),f,b
 44135  00CD3C  0E00               	movlw	0
 44136  00CD3E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44137  00CD40  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44138  00CD42  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44139                           
 44140                           ; BSR set to: 0
 44141  00CD44  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44142  00CD48  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44143  00CD4C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44144  00CD50  6B7B               	clrf	___flmul@grs& (0+255),b
 44145                           
 44146                           ; BSR set to: 0
 44147  00CD52  5172               	movf	___flmul@a& (0+255),w,b
 44148  00CD54  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44149  00CD56  CFF3 F085          	movff	prodl,___flmul@temp
 44150  00CD5A  CFF4 F086          	movff	prodh,___flmul@temp+1
 44151                           
 44152                           ; BSR set to: 0
 44153  00CD5E  5185               	movf	___flmul@temp& (0+255),w,b
 44154  00CD60  277B               	addwf	___flmul@grs& (0+255),f,b
 44155  00CD62  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44156  00CD64  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44157  00CD66  0E00               	movlw	0
 44158  00CD68  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44159  00CD6A  0E00               	movlw	0
 44160  00CD6C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44161                           
 44162                           ; BSR set to: 0
 44163  00CD6E  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44164  00CD70  036E               	mulwf	___flmul@b& (0+255),b
 44165  00CD72  CFF3 F085          	movff	prodl,___flmul@temp
 44166  00CD76  CFF4 F086          	movff	prodh,___flmul@temp+1
 44167                           
 44168                           ; BSR set to: 0
 44169  00CD7A  5185               	movf	___flmul@temp& (0+255),w,b
 44170  00CD7C  277B               	addwf	___flmul@grs& (0+255),f,b
 44171  00CD7E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44172  00CD80  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44173  00CD82  0E00               	movlw	0
 44174  00CD84  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44175  00CD86  0E00               	movlw	0
 44176  00CD88  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44177                           
 44178                           ; BSR set to: 0
 44179  00CD8A  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44180  00CD8E  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44181  00CD92  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44182  00CD96  6B7B               	clrf	___flmul@grs& (0+255),b
 44183  00CD98  5172               	movf	___flmul@a& (0+255),w,b
 44184  00CD9A  036E               	mulwf	___flmul@b& (0+255),b
 44185  00CD9C  CFF3 F085          	movff	prodl,___flmul@temp
 44186  00CDA0  CFF4 F086          	movff	prodh,___flmul@temp+1
 44187                           
 44188                           ; BSR set to: 0
 44189  00CDA4  5185               	movf	___flmul@temp& (0+255),w,b
 44190  00CDA6  277B               	addwf	___flmul@grs& (0+255),f,b
 44191  00CDA8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44192  00CDAA  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44193  00CDAC  0E00               	movlw	0
 44194  00CDAE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44195  00CDB0  0E00               	movlw	0
 44196  00CDB2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44197                           
 44198                           ; BSR set to: 0
 44199  00CDB4  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44200  00CDB6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44201  00CDB8  CFF3 F085          	movff	prodl,___flmul@temp
 44202  00CDBC  CFF4 F086          	movff	prodh,___flmul@temp+1
 44203  00CDC0  5185               	movf	___flmul@temp& (0+255),w,b
 44204  00CDC2  2781               	addwf	___flmul@prod& (0+255),f,b
 44205  00CDC4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44206  00CDC6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44207  00CDC8  0E00               	movlw	0
 44208  00CDCA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44209  00CDCC  0E00               	movlw	0
 44210  00CDCE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44211                           
 44212                           ; BSR set to: 0
 44213  00CDD0  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44214  00CDD2  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44215  00CDD4  CFF3 F085          	movff	prodl,___flmul@temp
 44216  00CDD8  CFF4 F086          	movff	prodh,___flmul@temp+1
 44217                           
 44218                           ; BSR set to: 0
 44219  00CDDC  5185               	movf	___flmul@temp& (0+255),w,b
 44220  00CDDE  2781               	addwf	___flmul@prod& (0+255),f,b
 44221  00CDE0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44222  00CDE2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44223  00CDE4  0E00               	movlw	0
 44224  00CDE6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44225  00CDE8  0E00               	movlw	0
 44226  00CDEA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44227  00CDEC  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44228  00CDEE  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44229  00CDF0  CFF3 F085          	movff	prodl,___flmul@temp
 44230  00CDF4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44231                           
 44232                           ; BSR set to: 0
 44233  00CDF8  5185               	movf	___flmul@temp& (0+255),w,b
 44234  00CDFA  6F76               	movwf	??___flmul& (0+255),b
 44235  00CDFC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44236  00CDFE  6F77               	movwf	(??___flmul+1)& (0+255),b
 44237  00CE00  6B78               	clrf	(??___flmul+2)& (0+255),b
 44238  00CE02  6B79               	clrf	(??___flmul+3)& (0+255),b
 44239  00CE04  C078  F079         	movff	??___flmul+2,??___flmul+3
 44240  00CE08  C077  F078         	movff	??___flmul+1,??___flmul+2
 44241  00CE0C  C076  F077         	movff	??___flmul,??___flmul+1
 44242  00CE10  6B76               	clrf	??___flmul& (0+255),b
 44243  00CE12  5176               	movf	??___flmul& (0+255),w,b
 44244  00CE14  2781               	addwf	___flmul@prod& (0+255),f,b
 44245  00CE16  5177               	movf	(??___flmul+1)& (0+255),w,b
 44246  00CE18  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44247  00CE1A  5178               	movf	(??___flmul+2)& (0+255),w,b
 44248  00CE1C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44249  00CE1E  5179               	movf	(??___flmul+3)& (0+255),w,b
 44250  00CE20  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44251                           
 44252                           ; BSR set to: 0
 44253  00CE22  C07B  F076         	movff	___flmul@grs,??___flmul
 44254  00CE26  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 44255  00CE2A  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 44256  00CE2E  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 44257  00CE32  0E19               	movlw	25
 44258  00CE34  D005               	goto	u10280
 44259  00CE36                     u10285:
 44260  00CE36  90D8               	bcf	status,0,c
 44261  00CE38  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44262  00CE3A  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44263  00CE3C  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44264  00CE3E  3376               	rrcf	??___flmul& (0+255),f,b
 44265  00CE40                     u10280:
 44266  00CE40  2EE8               	decfsz	wreg,f,c
 44267  00CE42  D7F9               	goto	u10285
 44268  00CE44  5176               	movf	??___flmul& (0+255),w,b
 44269  00CE46  2781               	addwf	___flmul@prod& (0+255),f,b
 44270  00CE48  5177               	movf	(??___flmul+1)& (0+255),w,b
 44271  00CE4A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44272  00CE4C  5178               	movf	(??___flmul+2)& (0+255),w,b
 44273  00CE4E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44274  00CE50  5179               	movf	(??___flmul+3)& (0+255),w,b
 44275  00CE52  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44276                           
 44277                           ; BSR set to: 0
 44278  00CE54  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44279  00CE58  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44280  00CE5C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44281  00CE60  6B7B               	clrf	___flmul@grs& (0+255),b
 44282                           
 44283                           ; BSR set to: 0
 44284  00CE62  517F               	movf	___flmul@aexp& (0+255),w,b
 44285  00CE64  C080  F076         	movff	___flmul@bexp,??___flmul
 44286  00CE68  6B77               	clrf	(??___flmul+1)& (0+255),b
 44287  00CE6A  2776               	addwf	??___flmul& (0+255),f,b
 44288  00CE6C  0E00               	movlw	0
 44289  00CE6E  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 44290  00CE70  0E82               	movlw	130
 44291  00CE72  2576               	addwf	??___flmul& (0+255),w,b
 44292  00CE74  6F85               	movwf	___flmul@temp& (0+255),b
 44293  00CE76  0EFF               	movlw	255
 44294  00CE78  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 44295  00CE7A  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 44296  00CE7C  D00F               	goto	l3579
 44297  00CE7E                     
 44298                           ; BSR set to: 0
 44299                           
 44300                           ; BSR set to: 0
 44301  00CE7E  90D8               	bcf	status,0,c
 44302  00CE80  3781               	rlcf	___flmul@prod& (0+255),f,b
 44303  00CE82  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 44304  00CE84  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 44305  00CE86  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 44306                           
 44307                           ; BSR set to: 0
 44308  00CE88  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 44309                           
 44310                           ; BSR set to: 0
 44311  00CE8A  8181               	bsf	___flmul@prod& (0+255),0,b
 44312                           
 44313                           ; BSR set to: 0
 44314  00CE8C  90D8               	bcf	status,0,c
 44315  00CE8E  377B               	rlcf	___flmul@grs& (0+255),f,b
 44316  00CE90  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 44317  00CE92  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 44318  00CE94  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 44319  00CE96  0785               	decf	___flmul@temp& (0+255),f,b
 44320  00CE98  A0D8               	btfss	status,0,c
 44321  00CE9A  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 44322  00CE9C                     l3579:
 44323                           
 44324                           ; BSR set to: 0
 44325                           
 44326                           ; BSR set to: 0
 44327  00CE9C  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 44328  00CE9E  D7EF               	goto	l3580
 44329                           
 44330                           ; BSR set to: 0
 44331                           
 44332                           ; BSR set to: 0
 44333  00CEA0  0E00               	movlw	0
 44334  00CEA2  6F7F               	movwf	___flmul@aexp& (0+255),b
 44335                           
 44336                           ; BSR set to: 0
 44337  00CEA4  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 44338  00CEA6  D016               	goto	l3586
 44339                           
 44340                           ; BSR set to: 0
 44341  00CEA8  0EFF               	movlw	255
 44342  00CEAA  157B               	andwf	___flmul@grs& (0+255),w,b
 44343  00CEAC  6F76               	movwf	??___flmul& (0+255),b
 44344  00CEAE  0EFF               	movlw	255
 44345  00CEB0  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 44346  00CEB2  6F77               	movwf	(??___flmul+1)& (0+255),b
 44347  00CEB4  0EFF               	movlw	255
 44348  00CEB6  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 44349  00CEB8  6F78               	movwf	(??___flmul+2)& (0+255),b
 44350  00CEBA  0E7F               	movlw	127
 44351  00CEBC  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 44352  00CEBE  6F79               	movwf	(??___flmul+3)& (0+255),b
 44353  00CEC0  5176               	movf	??___flmul& (0+255),w,b
 44354  00CEC2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 44355  00CEC4  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 44356  00CEC6  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 44357  00CEC8  A4D8               	btfss	status,2,c
 44358  00CECA  D002               	goto	u10330
 44359                           
 44360                           ; BSR set to: 0
 44361                           
 44362                           ; BSR set to: 0
 44363  00CECC  A181               	btfss	___flmul@prod& (0+255),0,b
 44364  00CECE  D002               	goto	l3586
 44365  00CED0                     u10330:
 44366                           
 44367                           ; BSR set to: 0
 44368  00CED0  0E01               	movlw	1
 44369  00CED2  6F7F               	movwf	___flmul@aexp& (0+255),b
 44370  00CED4                     l3586:
 44371                           
 44372                           ; BSR set to: 0
 44373                           
 44374                           ; BSR set to: 0
 44375                           
 44376                           ; BSR set to: 0
 44377  00CED4  517F               	movf	___flmul@aexp& (0+255),w,b
 44378  00CED6  B4D8               	btfsc	status,2,c
 44379  00CED8  D01F               	goto	l3588
 44380                           
 44381                           ; BSR set to: 0
 44382  00CEDA  0E01               	movlw	1
 44383  00CEDC  2781               	addwf	___flmul@prod& (0+255),f,b
 44384  00CEDE  0E00               	movlw	0
 44385  00CEE0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44386  00CEE2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44387  00CEE4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44388                           
 44389                           ; BSR set to: 0
 44390  00CEE6  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 44391  00CEE8  D017               	goto	l3588
 44392                           
 44393                           ; BSR set to: 0
 44394  00CEEA  C081  F076         	movff	___flmul@prod,??___flmul
 44395  00CEEE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 44396  00CEF2  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 44397  00CEF6  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 44398  00CEFA  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 44399  00CEFC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44400  00CEFE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44401  00CF00  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44402  00CF02  3376               	rrcf	??___flmul& (0+255),f,b
 44403  00CF04  C076  F081         	movff	??___flmul,___flmul@prod
 44404  00CF08  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 44405  00CF0C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 44406  00CF10  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 44407                           
 44408                           ; BSR set to: 0
 44409  00CF14  4B85               	infsnz	___flmul@temp& (0+255),f,b
 44410  00CF16  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 44411  00CF18                     l3588:
 44412                           
 44413                           ; BSR set to: 0
 44414                           
 44415                           ; BSR set to: 0
 44416                           
 44417                           ; BSR set to: 0
 44418  00CF18  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44419  00CF1A  D00D               	goto	l3589
 44420  00CF1C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44421  00CF1E  E103               	bnz	u10360
 44422  00CF20  2985               	incf	___flmul@temp& (0+255),w,b
 44423  00CF22  A0D8               	btfss	status,0,c
 44424  00CF24  D008               	goto	l3589
 44425  00CF26                     u10360:
 44426                           
 44427                           ; BSR set to: 0
 44428  00CF26  0E00               	movlw	0
 44429  00CF28  6F81               	movwf	___flmul@prod& (0+255),b
 44430  00CF2A  0E00               	movlw	0
 44431  00CF2C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44432  00CF2E  0E80               	movlw	128
 44433  00CF30  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44434  00CF32  0E7F               	movlw	127
 44435  00CF34  D020               	goto	L67
 44436  00CF36                     l3589:
 44437                           
 44438                           ; BSR set to: 0
 44439                           
 44440                           ; BSR set to: 0
 44441  00CF36  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44442  00CF38  D005               	goto	u10370
 44443  00CF3A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44444  00CF3C  E10E               	bnz	l3591
 44445  00CF3E  0585               	decf	___flmul@temp& (0+255),w,b
 44446  00CF40  B0D8               	btfsc	status,0,c
 44447  00CF42  D00B               	goto	l3591
 44448  00CF44                     u10370:
 44449                           
 44450                           ; BSR set to: 0
 44451  00CF44  0E00               	movlw	0
 44452  00CF46  6F81               	movwf	___flmul@prod& (0+255),b
 44453  00CF48  0E00               	movlw	0
 44454  00CF4A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44455  00CF4C  0E00               	movlw	0
 44456  00CF4E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44457  00CF50  0E00               	movlw	0
 44458  00CF52  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44459  00CF54  0E00               	movlw	0
 44460  00CF56  6F7A               	movwf	___flmul@sign& (0+255),b
 44461  00CF58  D00F               	goto	l3592
 44462  00CF5A                     l3591:
 44463                           
 44464                           ; BSR set to: 0
 44465  00CF5A  C085  F080         	movff	___flmul@temp,___flmul@bexp
 44466                           
 44467                           ; BSR set to: 0
 44468  00CF5E  0EFF               	movlw	255
 44469  00CF60  1781               	andwf	___flmul@prod& (0+255),f,b
 44470  00CF62  0EFF               	movlw	255
 44471  00CF64  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 44472  00CF66  0E7F               	movlw	127
 44473  00CF68  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 44474  00CF6A  0E00               	movlw	0
 44475  00CF6C  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 44476                           
 44477                           ; BSR set to: 0
 44478  00CF6E  B180               	btfsc	___flmul@bexp& (0+255),0,b
 44479                           
 44480                           ; BSR set to: 0
 44481  00CF70  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 44482                           
 44483                           ; BSR set to: 0
 44484                           
 44485                           ; BSR set to: 0
 44486  00CF72  90D8               	bcf	status,0,c
 44487  00CF74  3180               	rrcf	___flmul@bexp& (0+255),w,b
 44488  00CF76                     L67:
 44489  00CF76  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44490  00CF78                     l3592:
 44491                           
 44492                           ; BSR set to: 0
 44493                           
 44494                           ; BSR set to: 0
 44495                           
 44496                           ; BSR set to: 0
 44497  00CF78  517A               	movf	___flmul@sign& (0+255),w,b
 44498  00CF7A  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 44499                           
 44500                           ; BSR set to: 0
 44501  00CF7C  C081  F06E         	movff	___flmul@prod,?___flmul
 44502  00CF80  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 44503  00CF84  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 44504  00CF88  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 44505  00CF8C  0012               	return	
 44506  00CF8E                     __end_of___flmul:
 44507                           	opt stack 0
 44508                           tosu	equ	0xFFF
 44509                           tosh	equ	0xFFE
 44510                           tosl	equ	0xFFD
 44511                           pclath	equ	0xFFA
 44512                           tblptru	equ	0xFF8
 44513                           tblptrh	equ	0xFF7
 44514                           tblptrl	equ	0xFF6
 44515                           tablat	equ	0xFF5
 44516                           prodh	equ	0xFF4
 44517                           prodl	equ	0xFF3
 44518                           intcon	equ	0xFF2
 44519                           indf0	equ	0xFEF
 44520                           postinc0	equ	0xFEE
 44521                           fsr0h	equ	0xFEA
 44522                           fsr0l	equ	0xFE9
 44523                           wreg	equ	0xFE8
 44524                           indf1	equ	0xFE7
 44525                           postinc1	equ	0xFE6
 44526                           postdec1	equ	0xFE5
 44527                           plusw1	equ	0xFE3
 44528                           fsr1h	equ	0xFE2
 44529                           fsr1l	equ	0xFE1
 44530                           indf2	equ	0xFDF
 44531                           postinc2	equ	0xFDE
 44532                           postdec2	equ	0xFDD
 44533                           plusw2	equ	0xFDB
 44534                           fsr2h	equ	0xFDA
 44535                           fsr2l	equ	0xFD9
 44536                           status	equ	0xFD8
 44537                           
 44538 ;; *************** function ___fldiv *****************
 44539 ;; Defined at:
 44540 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 44541 ;; Parameters:    Size  Location     Type
 44542 ;;  b               4   14[BANK0 ] unsigned char 
 44543 ;;  a               4   18[BANK0 ] unsigned char 
 44544 ;; Auto vars:     Size  Location     Type
 44545 ;;  grs             4   33[BANK0 ] unsigned long 
 44546 ;;  rem             4   26[BANK0 ] unsigned long 
 44547 ;;  new_exp         2   31[BANK0 ] int 
 44548 ;;  aexp            1   38[BANK0 ] unsigned char 
 44549 ;;  bexp            1   37[BANK0 ] unsigned char 
 44550 ;;  sign            1   30[BANK0 ] unsigned char 
 44551 ;; Return value:  Size  Location     Type
 44552 ;;                  4   14[BANK0 ] unsigned char 
 44553 ;; Registers used:
 44554 ;;		wreg, status,2, status,0
 44555 ;; Tracked objects:
 44556 ;;		On entry : 0/0
 44557 ;;		On exit  : 0/0
 44558 ;;		Unchanged: 0/0
 44559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44560 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44561 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44562 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44563 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44564 ;;Total ram usage:       25 bytes
 44565 ;; Hardware stack levels used:    1
 44566 ;; Hardware stack levels required when called:   10
 44567 ;; This function calls:
 44568 ;;		Nothing
 44569 ;; This function is called by:
 44570 ;;		_motor_steps_from_degrees
 44571 ;;		_motor_calculate_position_in_degrees
 44572 ;;		__motor_get_speed_in_degrees
 44573 ;;		__step_position_from_divide_position
 44574 ;;		_motor_divide_jump_to_nearest
 44575 ;;		_motor_arc_move
 44576 ;;		_motor_go_to_degrees_position
 44577 ;; This function uses a non-reentrant model
 44578 ;;
 44579                           
 44580                           	psect	text183
 44581  00DBAC                     __ptext183:
 44582                           	opt stack 0
 44583  00DBAC                     ___fldiv:
 44584                           	opt stack 18
 44585                           
 44586                           ; BSR set to: 0
 44587                           ;incstack = 0
 44588  00DBAC  0100               	movlb	0	; () banked
 44589  00DBAE  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44590  00DBB0  0B80               	andlw	128
 44591  00DBB2  6F7E               	movwf	___fldiv@sign& (0+255),b
 44592  00DBB4  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44593  00DBB6  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 44594  00DBB8  6F85               	movwf	___fldiv@bexp& (0+255),b
 44595                           
 44596                           ; BSR set to: 0
 44597  00DBBA  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 44598                           
 44599                           ; BSR set to: 0
 44600  00DBBC  8185               	bsf	___fldiv@bexp& (0+255),0,b
 44601                           
 44602                           ; BSR set to: 0
 44603                           
 44604                           ; BSR set to: 0
 44605  00DBBE  5185               	movf	___fldiv@bexp& (0+255),w,b
 44606  00DBC0  B4D8               	btfsc	status,2,c
 44607  00DBC2  D00D               	goto	l3534
 44608                           
 44609                           ; BSR set to: 0
 44610  00DBC4  2985               	incf	___fldiv@bexp& (0+255),w,b
 44611  00DBC6  A4D8               	btfss	status,2,c
 44612  00DBC8  D008               	goto	l3535
 44613                           
 44614                           ; BSR set to: 0
 44615  00DBCA  0E00               	movlw	0
 44616  00DBCC  6F6E               	movwf	___fldiv@b& (0+255),b
 44617  00DBCE  0E00               	movlw	0
 44618  00DBD0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44619  00DBD2  0E00               	movlw	0
 44620  00DBD4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44621  00DBD6  0E00               	movlw	0
 44622  00DBD8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44623  00DBDA                     l3535:
 44624                           
 44625                           ; BSR set to: 0
 44626                           
 44627                           ; BSR set to: 0
 44628  00DBDA  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44629  00DBDC  D006               	goto	L68
 44630  00DBDE                     l3534:
 44631                           
 44632                           ; BSR set to: 0
 44633                           
 44634                           ; BSR set to: 0
 44635  00DBDE  0E00               	movlw	0
 44636  00DBE0  6F6E               	movwf	___fldiv@b& (0+255),b
 44637  00DBE2  0E00               	movlw	0
 44638  00DBE4  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44639  00DBE6  0E00               	movlw	0
 44640  00DBE8  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44641  00DBEA                     L68:
 44642  00DBEA  0E00               	movlw	0
 44643  00DBEC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44644                           
 44645                           ; BSR set to: 0
 44646                           
 44647                           ; BSR set to: 0
 44648  00DBEE  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44649  00DBF0  0B80               	andlw	128
 44650  00DBF2  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 44651                           
 44652                           ; BSR set to: 0
 44653  00DBF4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44654  00DBF6  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 44655  00DBF8  6F86               	movwf	___fldiv@aexp& (0+255),b
 44656                           
 44657                           ; BSR set to: 0
 44658  00DBFA  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 44659                           
 44660                           ; BSR set to: 0
 44661  00DBFC  8186               	bsf	___fldiv@aexp& (0+255),0,b
 44662                           
 44663                           ; BSR set to: 0
 44664                           
 44665                           ; BSR set to: 0
 44666  00DBFE  5186               	movf	___fldiv@aexp& (0+255),w,b
 44667  00DC00  B4D8               	btfsc	status,2,c
 44668  00DC02  D00D               	goto	l3538
 44669                           
 44670                           ; BSR set to: 0
 44671  00DC04  2986               	incf	___fldiv@aexp& (0+255),w,b
 44672  00DC06  A4D8               	btfss	status,2,c
 44673  00DC08  D008               	goto	l3539
 44674                           
 44675                           ; BSR set to: 0
 44676  00DC0A  0E00               	movlw	0
 44677  00DC0C  6F72               	movwf	___fldiv@a& (0+255),b
 44678  00DC0E  0E00               	movlw	0
 44679  00DC10  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44680  00DC12  0E00               	movlw	0
 44681  00DC14  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44682  00DC16  0E00               	movlw	0
 44683  00DC18  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44684  00DC1A                     l3539:
 44685                           
 44686                           ; BSR set to: 0
 44687                           
 44688                           ; BSR set to: 0
 44689  00DC1A  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 44690  00DC1C  D006               	goto	L69
 44691  00DC1E                     l3538:
 44692                           
 44693                           ; BSR set to: 0
 44694                           
 44695                           ; BSR set to: 0
 44696  00DC1E  0E00               	movlw	0
 44697  00DC20  6F72               	movwf	___fldiv@a& (0+255),b
 44698  00DC22  0E00               	movlw	0
 44699  00DC24  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44700  00DC26  0E00               	movlw	0
 44701  00DC28  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44702  00DC2A                     L69:
 44703  00DC2A  0E00               	movlw	0
 44704  00DC2C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44705                           
 44706                           ; BSR set to: 0
 44707                           
 44708                           ; BSR set to: 0
 44709  00DC2E  5172               	movf	___fldiv@a& (0+255),w,b
 44710  00DC30  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 44711  00DC32  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 44712  00DC34  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 44713  00DC36  A4D8               	btfss	status,2,c
 44714  00DC38  D017               	goto	l3541
 44715                           
 44716                           ; BSR set to: 0
 44717  00DC3A  0E00               	movlw	0
 44718  00DC3C  6F6E               	movwf	___fldiv@b& (0+255),b
 44719  00DC3E  0E00               	movlw	0
 44720  00DC40  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44721  00DC42  0E00               	movlw	0
 44722  00DC44  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44723  00DC46  0E00               	movlw	0
 44724  00DC48  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44725                           
 44726                           ; BSR set to: 0
 44727  00DC4A  0E80               	movlw	128
 44728  00DC4C  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 44729  00DC4E  0E7F               	movlw	127
 44730  00DC50  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44731                           
 44732                           ; BSR set to: 0
 44733  00DC52  517E               	movf	___fldiv@sign& (0+255),w,b
 44734  00DC54  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44735                           
 44736                           ; BSR set to: 0
 44737  00DC56  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44738  00DC5A  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44739  00DC5E  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44740  00DC62  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44741                           
 44742                           ; BSR set to: 0
 44743  00DC66  0012               	return	
 44744  00DC68                     l3541:
 44745                           
 44746                           ; BSR set to: 0
 44747                           
 44748                           ; BSR set to: 0
 44749  00DC68  5185               	movf	___fldiv@bexp& (0+255),w,b
 44750  00DC6A  A4D8               	btfss	status,2,c
 44751  00DC6C  D011               	goto	l3543
 44752                           
 44753                           ; BSR set to: 0
 44754  00DC6E  0E00               	movlw	0
 44755  00DC70  6F6E               	movwf	___fldiv@b& (0+255),b
 44756  00DC72  0E00               	movlw	0
 44757  00DC74  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44758  00DC76  0E00               	movlw	0
 44759  00DC78  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44760  00DC7A  0E00               	movlw	0
 44761  00DC7C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44762                           
 44763                           ; BSR set to: 0
 44764  00DC7E  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44765  00DC82  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44766  00DC86  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44767  00DC8A  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44768                           
 44769                           ; BSR set to: 0
 44770  00DC8E  0012               	return	
 44771  00DC90                     l3543:
 44772                           
 44773                           ; BSR set to: 0
 44774                           
 44775                           ; BSR set to: 0
 44776  00DC90  5186               	movf	___fldiv@aexp& (0+255),w,b
 44777  00DC92  6F76               	movwf	??___fldiv& (0+255),b
 44778  00DC94  6B77               	clrf	(??___fldiv+1)& (0+255),b
 44779  00DC96  1F76               	comf	??___fldiv& (0+255),f,b
 44780  00DC98  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 44781  00DC9A  4B76               	infsnz	??___fldiv& (0+255),f,b
 44782  00DC9C  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 44783  00DC9E  5185               	movf	___fldiv@bexp& (0+255),w,b
 44784  00DCA0  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44785  00DCA2  6B79               	clrf	(??___fldiv+3)& (0+255),b
 44786  00DCA4  5176               	movf	??___fldiv& (0+255),w,b
 44787  00DCA6  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 44788  00DCA8  5177               	movf	(??___fldiv+1)& (0+255),w,b
 44789  00DCAA  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 44790  00DCAC  0E7F               	movlw	127
 44791  00DCAE  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 44792  00DCB0  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44793  00DCB2  0E00               	movlw	0
 44794  00DCB4  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 44795  00DCB6  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44796                           
 44797                           ; BSR set to: 0
 44798  00DCB8  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 44799  00DCBC  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 44800  00DCC0  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 44801  00DCC4  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 44802                           
 44803                           ; BSR set to: 0
 44804  00DCC8  0E00               	movlw	0
 44805  00DCCA  6F6E               	movwf	___fldiv@b& (0+255),b
 44806  00DCCC  0E00               	movlw	0
 44807  00DCCE  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44808  00DCD0  0E00               	movlw	0
 44809  00DCD2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44810  00DCD4  0E00               	movlw	0
 44811  00DCD6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44812                           
 44813                           ; BSR set to: 0
 44814  00DCD8  0E00               	movlw	0
 44815  00DCDA  6F81               	movwf	___fldiv@grs& (0+255),b
 44816  00DCDC  0E00               	movlw	0
 44817  00DCDE  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 44818  00DCE0  0E00               	movlw	0
 44819  00DCE2  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 44820  00DCE4  0E00               	movlw	0
 44821  00DCE6  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 44822                           
 44823                           ; BSR set to: 0
 44824  00DCE8  0E00               	movlw	0
 44825  00DCEA  6F86               	movwf	___fldiv@aexp& (0+255),b
 44826  00DCEC  D028               	goto	l3544
 44827  00DCEE                     
 44828                           ; BSR set to: 0
 44829                           
 44830                           ; BSR set to: 0
 44831  00DCEE  5186               	movf	___fldiv@aexp& (0+255),w,b
 44832  00DCF0  B4D8               	btfsc	status,2,c
 44833  00DCF2  D011               	goto	l3546
 44834                           
 44835                           ; BSR set to: 0
 44836  00DCF4  90D8               	bcf	status,0,c
 44837  00DCF6  377A               	rlcf	___fldiv@rem& (0+255),f,b
 44838  00DCF8  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 44839  00DCFA  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 44840  00DCFC  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 44841  00DCFE  90D8               	bcf	status,0,c
 44842  00DD00  376E               	rlcf	___fldiv@b& (0+255),f,b
 44843  00DD02  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44844  00DD04  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44845  00DD06  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44846                           
 44847                           ; BSR set to: 0
 44848  00DD08  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44849                           
 44850                           ; BSR set to: 0
 44851  00DD0A  816E               	bsf	___fldiv@b& (0+255),0,b
 44852                           
 44853                           ; BSR set to: 0
 44854  00DD0C  90D8               	bcf	status,0,c
 44855  00DD0E  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44856  00DD10  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44857  00DD12  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44858  00DD14  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44859  00DD16                     l3546:
 44860                           
 44861                           ; BSR set to: 0
 44862                           
 44863                           ; BSR set to: 0
 44864  00DD16  5172               	movf	___fldiv@a& (0+255),w,b
 44865  00DD18  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 44866  00DD1A  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44867  00DD1C  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 44868  00DD1E  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44869  00DD20  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 44870  00DD22  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44871  00DD24  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 44872  00DD26  A0D8               	btfss	status,0,c
 44873  00DD28  D009               	goto	l3548
 44874                           
 44875                           ; BSR set to: 0
 44876  00DD2A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 44877                           
 44878                           ; BSR set to: 0
 44879  00DD2C  5172               	movf	___fldiv@a& (0+255),w,b
 44880  00DD2E  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 44881  00DD30  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44882  00DD32  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 44883  00DD34  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44884  00DD36  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 44885  00DD38  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44886  00DD3A  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 44887  00DD3C                     l3548:
 44888                           
 44889                           ; BSR set to: 0
 44890                           
 44891                           ; BSR set to: 0
 44892  00DD3C  2B86               	incf	___fldiv@aexp& (0+255),f,b
 44893  00DD3E                     l3544:
 44894                           
 44895                           ; BSR set to: 0
 44896  00DD3E  0E19               	movlw	25
 44897  00DD40  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 44898  00DD42  D7D5               	goto	l3545
 44899                           
 44900                           ; BSR set to: 0
 44901                           
 44902                           ; BSR set to: 0
 44903  00DD44  517A               	movf	___fldiv@rem& (0+255),w,b
 44904  00DD46  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 44905  00DD48  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 44906  00DD4A  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 44907  00DD4C  B4D8               	btfsc	status,2,c
 44908  00DD4E  D011               	goto	l3551
 44909                           
 44910                           ; BSR set to: 0
 44911  00DD50  8181               	bsf	___fldiv@grs& (0+255),0,b
 44912                           
 44913                           ; BSR set to: 0
 44914  00DD52  D00F               	goto	l3551
 44915  00DD54                     
 44916                           ; BSR set to: 0
 44917                           
 44918                           ; BSR set to: 0
 44919  00DD54  90D8               	bcf	status,0,c
 44920  00DD56  376E               	rlcf	___fldiv@b& (0+255),f,b
 44921  00DD58  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44922  00DD5A  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44923  00DD5C  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44924                           
 44925                           ; BSR set to: 0
 44926  00DD5E  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44927                           
 44928                           ; BSR set to: 0
 44929  00DD60  816E               	bsf	___fldiv@b& (0+255),0,b
 44930                           
 44931                           ; BSR set to: 0
 44932  00DD62  90D8               	bcf	status,0,c
 44933  00DD64  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44934  00DD66  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44935  00DD68  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44936  00DD6A  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44937  00DD6C  077F               	decf	___fldiv@new_exp& (0+255),f,b
 44938  00DD6E  A0D8               	btfss	status,0,c
 44939  00DD70  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 44940  00DD72                     l3551:
 44941                           
 44942                           ; BSR set to: 0
 44943                           
 44944                           ; BSR set to: 0
 44945  00DD72  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 44946  00DD74  D7EF               	goto	l3552
 44947                           
 44948                           ; BSR set to: 0
 44949                           
 44950                           ; BSR set to: 0
 44951  00DD76  0E00               	movlw	0
 44952  00DD78  6F86               	movwf	___fldiv@aexp& (0+255),b
 44953                           
 44954                           ; BSR set to: 0
 44955  00DD7A  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 44956  00DD7C  D016               	goto	l3558
 44957                           
 44958                           ; BSR set to: 0
 44959  00DD7E  0EFF               	movlw	255
 44960  00DD80  1581               	andwf	___fldiv@grs& (0+255),w,b
 44961  00DD82  6F76               	movwf	??___fldiv& (0+255),b
 44962  00DD84  0EFF               	movlw	255
 44963  00DD86  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 44964  00DD88  6F77               	movwf	(??___fldiv+1)& (0+255),b
 44965  00DD8A  0EFF               	movlw	255
 44966  00DD8C  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 44967  00DD8E  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44968  00DD90  0E7F               	movlw	127
 44969  00DD92  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 44970  00DD94  6F79               	movwf	(??___fldiv+3)& (0+255),b
 44971  00DD96  5176               	movf	??___fldiv& (0+255),w,b
 44972  00DD98  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 44973  00DD9A  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 44974  00DD9C  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 44975  00DD9E  A4D8               	btfss	status,2,c
 44976  00DDA0  D002               	goto	u10140
 44977                           
 44978                           ; BSR set to: 0
 44979                           
 44980                           ; BSR set to: 0
 44981  00DDA2  A16E               	btfss	___fldiv@b& (0+255),0,b
 44982  00DDA4  D002               	goto	l3558
 44983  00DDA6                     u10140:
 44984                           
 44985                           ; BSR set to: 0
 44986  00DDA6  0E01               	movlw	1
 44987  00DDA8  6F86               	movwf	___fldiv@aexp& (0+255),b
 44988  00DDAA                     l3558:
 44989                           
 44990                           ; BSR set to: 0
 44991                           
 44992                           ; BSR set to: 0
 44993                           
 44994                           ; BSR set to: 0
 44995  00DDAA  5186               	movf	___fldiv@aexp& (0+255),w,b
 44996  00DDAC  B4D8               	btfsc	status,2,c
 44997  00DDAE  D01F               	goto	l3560
 44998                           
 44999                           ; BSR set to: 0
 45000  00DDB0  0E01               	movlw	1
 45001  00DDB2  276E               	addwf	___fldiv@b& (0+255),f,b
 45002  00DDB4  0E00               	movlw	0
 45003  00DDB6  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 45004  00DDB8  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 45005  00DDBA  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 45006                           
 45007                           ; BSR set to: 0
 45008  00DDBC  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 45009  00DDBE  D017               	goto	l3560
 45010                           
 45011                           ; BSR set to: 0
 45012  00DDC0  C06E  F076         	movff	___fldiv@b,??___fldiv
 45013  00DDC4  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 45014  00DDC8  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 45015  00DDCC  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 45016  00DDD0  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 45017  00DDD2  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 45018  00DDD4  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 45019  00DDD6  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 45020  00DDD8  3376               	rrcf	??___fldiv& (0+255),f,b
 45021  00DDDA  C076  F06E         	movff	??___fldiv,___fldiv@b
 45022  00DDDE  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 45023  00DDE2  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 45024  00DDE6  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 45025                           
 45026                           ; BSR set to: 0
 45027  00DDEA  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 45028  00DDEC  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 45029  00DDEE                     l3560:
 45030                           
 45031                           ; BSR set to: 0
 45032                           
 45033                           ; BSR set to: 0
 45034                           
 45035                           ; BSR set to: 0
 45036  00DDEE  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45037  00DDF0  D010               	goto	l3561
 45038  00DDF2  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45039  00DDF4  E103               	bnz	u10170
 45040  00DDF6  297F               	incf	___fldiv@new_exp& (0+255),w,b
 45041  00DDF8  A0D8               	btfss	status,0,c
 45042  00DDFA  D00B               	goto	l3561
 45043  00DDFC                     u10170:
 45044                           
 45045                           ; BSR set to: 0
 45046  00DDFC  0E00               	movlw	0
 45047  00DDFE  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45048  00DE00  697F               	setf	___fldiv@new_exp& (0+255),b
 45049  00DE02  0E00               	movlw	0
 45050  00DE04  6F6E               	movwf	___fldiv@b& (0+255),b
 45051  00DE06  0E00               	movlw	0
 45052  00DE08  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45053  00DE0A  0E00               	movlw	0
 45054  00DE0C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45055  00DE0E  0E00               	movlw	0
 45056  00DE10  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45057  00DE12                     l3561:
 45058                           
 45059                           ; BSR set to: 0
 45060                           
 45061                           ; BSR set to: 0
 45062  00DE12  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45063  00DE14  D005               	goto	u10180
 45064  00DE16  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45065  00DE18  E111               	bnz	l12120
 45066  00DE1A  057F               	decf	___fldiv@new_exp& (0+255),w,b
 45067  00DE1C  B0D8               	btfsc	status,0,c
 45068  00DE1E  D00E               	goto	l3562
 45069  00DE20                     u10180:
 45070                           
 45071                           ; BSR set to: 0
 45072  00DE20  0E00               	movlw	0
 45073  00DE22  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45074  00DE24  0E00               	movlw	0
 45075  00DE26  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 45076  00DE28  0E00               	movlw	0
 45077  00DE2A  6F6E               	movwf	___fldiv@b& (0+255),b
 45078  00DE2C  0E00               	movlw	0
 45079  00DE2E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45080  00DE30  0E00               	movlw	0
 45081  00DE32  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45082  00DE34  0E00               	movlw	0
 45083  00DE36  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45084  00DE38  0E00               	movlw	0
 45085  00DE3A  6F7E               	movwf	___fldiv@sign& (0+255),b
 45086  00DE3C                     l3562:
 45087  00DE3C                     l12120:
 45088                           
 45089                           ; BSR set to: 0
 45090  00DE3C  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 45091                           
 45092                           ; BSR set to: 0
 45093  00DE40  A185               	btfss	___fldiv@bexp& (0+255),0,b
 45094  00DE42  D002               	goto	l3563
 45095                           
 45096                           ; BSR set to: 0
 45097  00DE44  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 45098  00DE46  D001               	goto	l3564
 45099  00DE48                     l3563:
 45100                           
 45101                           ; BSR set to: 0
 45102                           
 45103                           ; BSR set to: 0
 45104  00DE48  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 45105  00DE4A                     l3564:
 45106                           
 45107                           ; BSR set to: 0
 45108                           
 45109                           ; BSR set to: 0
 45110  00DE4A  90D8               	bcf	status,0,c
 45111  00DE4C  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 45112  00DE4E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45113                           
 45114                           ; BSR set to: 0
 45115  00DE50  517E               	movf	___fldiv@sign& (0+255),w,b
 45116  00DE52  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 45117                           
 45118                           ; BSR set to: 0
 45119  00DE54  C06E  F06E         	movff	___fldiv@b,?___fldiv
 45120  00DE58  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 45121  00DE5C  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 45122  00DE60  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 45123  00DE64  0012               	return	
 45124  00DE66                     __end_of___fldiv:
 45125                           	opt stack 0
 45126                           tosu	equ	0xFFF
 45127                           tosh	equ	0xFFE
 45128                           tosl	equ	0xFFD
 45129                           pclath	equ	0xFFA
 45130                           tblptru	equ	0xFF8
 45131                           tblptrh	equ	0xFF7
 45132                           tblptrl	equ	0xFF6
 45133                           tablat	equ	0xFF5
 45134                           prodh	equ	0xFF4
 45135                           prodl	equ	0xFF3
 45136                           intcon	equ	0xFF2
 45137                           indf0	equ	0xFEF
 45138                           postinc0	equ	0xFEE
 45139                           fsr0h	equ	0xFEA
 45140                           fsr0l	equ	0xFE9
 45141                           wreg	equ	0xFE8
 45142                           indf1	equ	0xFE7
 45143                           postinc1	equ	0xFE6
 45144                           postdec1	equ	0xFE5
 45145                           plusw1	equ	0xFE3
 45146                           fsr1h	equ	0xFE2
 45147                           fsr1l	equ	0xFE1
 45148                           indf2	equ	0xFDF
 45149                           postinc2	equ	0xFDE
 45150                           postdec2	equ	0xFDD
 45151                           plusw2	equ	0xFDB
 45152                           fsr2h	equ	0xFDA
 45153                           fsr2l	equ	0xFD9
 45154                           status	equ	0xFD8
 45155                           
 45156 ;; *************** function _USBTransferOnePacket *****************
 45157 ;; Defined at:
 45158 ;;		line 995 in file "usb_device.c"
 45159 ;; Parameters:    Size  Location     Type
 45160 ;;  ep              1    wreg     unsigned char 
 45161 ;;  dir             1    0[BANK0 ] unsigned char 
 45162 ;;  data            2    1[BANK0 ] PTR unsigned char 
 45163 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 45164 ;;		 -> msd_cbw(31), NULL(0), 
 45165 ;;  len             1    3[BANK0 ] unsigned char 
 45166 ;; Auto vars:     Size  Location     Type
 45167 ;;  ep              1    8[BANK0 ] unsigned char 
 45168 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 45169 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 45170 ;; Return value:  Size  Location     Type
 45171 ;;                  2    0[BANK0 ] PTR void 
 45172 ;; Registers used:
 45173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45174 ;; Tracked objects:
 45175 ;;		On entry : 0/0
 45176 ;;		On exit  : 0/0
 45177 ;;		Unchanged: 0/0
 45178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45179 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45180 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45182 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45183 ;;Total ram usage:       11 bytes
 45184 ;; Hardware stack levels used:    1
 45185 ;; Hardware stack levels required when called:   10
 45186 ;; This function calls:
 45187 ;;		Nothing
 45188 ;; This function is called by:
 45189 ;;		_MSDTasks
 45190 ;;		_MSDProcessCommandMediaPresent
 45191 ;;		_MSDReadHandler
 45192 ;;		_MSDWriteHandler
 45193 ;;		_APP_DeviceCustomHIDTasks
 45194 ;; This function uses a non-reentrant model
 45195 ;;
 45196                           
 45197                           	psect	text184
 45198  010FD4                     __ptext184:
 45199                           	opt stack 0
 45200  010FD4                     _USBTransferOnePacket:
 45201                           	opt stack 18
 45202                           
 45203                           ; BSR set to: 0
 45204                           ;incstack = 0
 45205                           ;USBTransferOnePacket@ep stored from wreg
 45206  010FD4  0100               	movlb	0	; () banked
 45207  010FD6  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 45208                           
 45209                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 45210  010FD8  0100               	movlb	0	; () banked
 45211  010FDA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45212  010FDC  B4D8               	btfsc	status,2,c
 45213  010FDE  D007               	goto	l184
 45214                           
 45215                           ; BSR set to: 0
 45216                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 45217  010FE0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45218  010FE2  0D02               	mullw	2
 45219  010FE4  0E1B               	movlw	low _pBDTEntryIn
 45220  010FE6  24F3               	addwf	prodl,w,c
 45221  010FE8  6ED9               	movwf	fsr2l,c
 45222  010FEA  0E01               	movlw	high _pBDTEntryIn
 45223  010FEC  D006               	goto	L70
 45224  010FEE                     l184:
 45225                           
 45226                           ; BSR set to: 0
 45227                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 45228                           
 45229                           ; BSR set to: 0
 45230  010FEE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45231  010FF0  0D02               	mullw	2
 45232  010FF2  0E21               	movlw	low _pBDTEntryOut
 45233  010FF4  24F3               	addwf	prodl,w,c
 45234  010FF6  6ED9               	movwf	fsr2l,c
 45235  010FF8  0E01               	movlw	high _pBDTEntryOut
 45236  010FFA                     L70:
 45237  010FFA  20F4               	addwfc	prodh,w,c
 45238  010FFC  6EDA               	movwf	fsr2h,c
 45239  010FFE  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 45240  011002  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 45241                           
 45242                           ; BSR set to: 0
 45243                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 45244                           
 45245                           ; BSR set to: 0
 45246  011006  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45247  011008  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45248  01100A  A4D8               	btfss	status,2,c
 45249  01100C  D005               	goto	l186
 45250                           
 45251                           ; BSR set to: 0
 45252                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 45253  01100E  0E00               	movlw	0
 45254  011010  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 45255  011012  0E00               	movlw	0
 45256  011014  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 45257                           
 45258                           ; BSR set to: 0
 45259  011016  0012               	return	
 45260  011018                     l186:
 45261                           
 45262                           ; BSR set to: 0
 45263                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 45264                           
 45265                           ; BSR set to: 0
 45266  011018  EE20 F002          	lfsr	2,2
 45267  01101C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45268  01101E  26D9               	addwf	fsr2l,f,c
 45269  011020  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45270  011022  22DA               	addwfc	fsr2h,f,c
 45271  011024  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 45272  011028  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 45273                           
 45274                           ;usb_device.c: 1030: handle->CNT = len;
 45275  01102C  EE20 F001          	lfsr	2,1
 45276  011030  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45277  011032  26D9               	addwf	fsr2l,f,c
 45278  011034  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45279  011036  22DA               	addwfc	fsr2h,f,c
 45280  011038  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 45281                           
 45282                           ; BSR set to: 0
 45283                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 45284  01103C  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45285  011040  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45286  011044  0E40               	movlw	64
 45287  011046  16DF               	andwf	indf2,f,c
 45288                           
 45289                           ; BSR set to: 0
 45290                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 45291  011048  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45292  01104C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45293  011050  0E00               	movlw	0
 45294  011052  86DB               	bsf	plusw2,3,c
 45295                           
 45296                           ; BSR set to: 0
 45297                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 45298  011054  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45299  011058  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45300  01105C  0E00               	movlw	0
 45301  01105E  8EDB               	bsf	plusw2,7,c
 45302                           
 45303                           ; BSR set to: 0
 45304                           ;usb_device.c: 1036: if(dir != 0)
 45305  011060  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45306  011062  B4D8               	btfsc	status,2,c
 45307  011064  D018               	goto	l188
 45308                           
 45309                           ; BSR set to: 0
 45310                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 45311  011066  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45312  011068  0D02               	mullw	2
 45313  01106A  0E1B               	movlw	low _pBDTEntryIn
 45314  01106C  24F3               	addwf	prodl,w,c
 45315  01106E  6ED9               	movwf	fsr2l,c
 45316  011070  0E01               	movlw	high _pBDTEntryIn
 45317  011072  20F4               	addwfc	prodh,w,c
 45318  011074  6EDA               	movwf	fsr2h,c
 45319  011076  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45320  01107A  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45321  01107E  0E04               	movlw	4
 45322  011080  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45323  011082  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45324  011084  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45325  011086  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45326  011088  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45327  01108A  0D02               	mullw	2
 45328  01108C  0E1B               	movlw	low _pBDTEntryIn
 45329  01108E  24F3               	addwf	prodl,w,c
 45330  011090  6ED9               	movwf	fsr2l,c
 45331  011092  0E01               	movlw	high _pBDTEntryIn
 45332  011094  D017               	goto	L71
 45333  011096                     l188:
 45334                           
 45335                           ; BSR set to: 0
 45336                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 45337                           
 45338                           ; BSR set to: 0
 45339  011096  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45340  011098  0D02               	mullw	2
 45341  01109A  0E21               	movlw	low _pBDTEntryOut
 45342  01109C  24F3               	addwf	prodl,w,c
 45343  01109E  6ED9               	movwf	fsr2l,c
 45344  0110A0  0E01               	movlw	high _pBDTEntryOut
 45345  0110A2  20F4               	addwfc	prodh,w,c
 45346  0110A4  6EDA               	movwf	fsr2h,c
 45347  0110A6  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45348  0110AA  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45349  0110AE  0E04               	movlw	4
 45350  0110B0  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45351  0110B2  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45352  0110B4  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45353  0110B6  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45354  0110B8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45355  0110BA  0D02               	mullw	2
 45356  0110BC  0E21               	movlw	low _pBDTEntryOut
 45357  0110BE  24F3               	addwf	prodl,w,c
 45358  0110C0  6ED9               	movwf	fsr2l,c
 45359  0110C2  0E01               	movlw	high _pBDTEntryOut
 45360  0110C4                     L71:
 45361  0110C4  20F4               	addwfc	prodh,w,c
 45362  0110C6  6EDA               	movwf	fsr2h,c
 45363  0110C8  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 45364  0110CC  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 45365                           
 45366                           ; BSR set to: 0
 45367                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 45368                           
 45369                           ; BSR set to: 0
 45370  0110D0  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 45371  0110D4  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 45372  0110D8  0012               	return	
 45373  0110DA                     __end_of_USBTransferOnePacket:
 45374                           	opt stack 0
 45375                           tosu	equ	0xFFF
 45376                           tosh	equ	0xFFE
 45377                           tosl	equ	0xFFD
 45378                           pclath	equ	0xFFA
 45379                           tblptru	equ	0xFF8
 45380                           tblptrh	equ	0xFF7
 45381                           tblptrl	equ	0xFF6
 45382                           tablat	equ	0xFF5
 45383                           prodh	equ	0xFF4
 45384                           prodl	equ	0xFF3
 45385                           intcon	equ	0xFF2
 45386                           indf0	equ	0xFEF
 45387                           postinc0	equ	0xFEE
 45388                           fsr0h	equ	0xFEA
 45389                           fsr0l	equ	0xFE9
 45390                           wreg	equ	0xFE8
 45391                           indf1	equ	0xFE7
 45392                           postinc1	equ	0xFE6
 45393                           postdec1	equ	0xFE5
 45394                           plusw1	equ	0xFE3
 45395                           fsr1h	equ	0xFE2
 45396                           fsr1l	equ	0xFE1
 45397                           indf2	equ	0xFDF
 45398                           postinc2	equ	0xFDE
 45399                           postdec2	equ	0xFDD
 45400                           plusw2	equ	0xFDB
 45401                           fsr2h	equ	0xFDA
 45402                           fsr2l	equ	0xFD9
 45403                           status	equ	0xFD8
 45404                           
 45405 ;; *************** function _SYS_InterruptHigh *****************
 45406 ;; Defined at:
 45407 ;;		line 162 in file "system.c"
 45408 ;; Parameters:    Size  Location     Type
 45409 ;;		None
 45410 ;; Auto vars:     Size  Location     Type
 45411 ;;		None
 45412 ;; Return value:  Size  Location     Type
 45413 ;;                  1    wreg      void 
 45414 ;; Registers used:
 45415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45416 ;; Tracked objects:
 45417 ;;		On entry : 0/0
 45418 ;;		On exit  : 0/0
 45419 ;;		Unchanged: 0/0
 45420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45423 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45424 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45425 ;;Total ram usage:       14 bytes
 45426 ;; Hardware stack levels used:    1
 45427 ;; Hardware stack levels required when called:    9
 45428 ;; This function calls:
 45429 ;;		_USBDeviceTasks
 45430 ;;		_motor_isr
 45431 ;;		_tmr0_isr
 45432 ;; This function is called by:
 45433 ;;		Interrupt level 2
 45434 ;; This function uses a non-reentrant model
 45435 ;;
 45436                           
 45437                           	psect	intcode
 45438  009008                     __pintcode:
 45439                           	opt stack 0
 45440  009008                     _SYS_InterruptHigh:
 45441                           	opt stack 9
 45442                           
 45443                           ; BSR set to: 0
 45444                           ;incstack = 0
 45445  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45446  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 45447  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 45448  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 45449  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 45450  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 45451  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 45452  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 45453  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 45454  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 45455  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 45456  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 45457  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 45458  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 45459  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 45460                           
 45461                           ;system.c: 165: USBDeviceTasks();
 45462  009042  ECD1  F07F         	call	_USBDeviceTasks	;wreg free
 45463                           
 45464                           ;system.c: 169: if(PIR1bits.TMR2IF)
 45465  009046  B29E               	btfsc	3998,1,c	;volatile
 45466                           
 45467                           ;system.c: 170: {;system.c: 171: motor_isr();
 45468  009048  ECFE  F05B         	call	_motor_isr	;wreg free
 45469                           
 45470                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 45471  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 45472                           
 45473                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 45474  00904E  EC97  F0A8         	call	_tmr0_isr	;wreg free
 45475  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45476  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45477  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45478  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45479  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45480  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45481  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45482  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45483  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45484  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45485  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45486  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45487  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45488  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45489  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45490  00908C  0011               	retfie		f
 45491  00908E                     __end_of_SYS_InterruptHigh:
 45492                           	opt stack 0
 45493                           tosu	equ	0xFFF
 45494                           tosh	equ	0xFFE
 45495                           tosl	equ	0xFFD
 45496                           pclatu	equ	0xFFB
 45497                           pclath	equ	0xFFA
 45498                           tblptru	equ	0xFF8
 45499                           tblptrh	equ	0xFF7
 45500                           tblptrl	equ	0xFF6
 45501                           tablat	equ	0xFF5
 45502                           prodh	equ	0xFF4
 45503                           prodl	equ	0xFF3
 45504                           intcon	equ	0xFF2
 45505                           indf0	equ	0xFEF
 45506                           postinc0	equ	0xFEE
 45507                           fsr0h	equ	0xFEA
 45508                           fsr0l	equ	0xFE9
 45509                           wreg	equ	0xFE8
 45510                           indf1	equ	0xFE7
 45511                           postinc1	equ	0xFE6
 45512                           postdec1	equ	0xFE5
 45513                           plusw1	equ	0xFE3
 45514                           fsr1h	equ	0xFE2
 45515                           fsr1l	equ	0xFE1
 45516                           indf2	equ	0xFDF
 45517                           postinc2	equ	0xFDE
 45518                           postdec2	equ	0xFDD
 45519                           plusw2	equ	0xFDB
 45520                           fsr2h	equ	0xFDA
 45521                           fsr2l	equ	0xFD9
 45522                           status	equ	0xFD8
 45523                           
 45524 ;; *************** function _tmr0_isr *****************
 45525 ;; Defined at:
 45526 ;;		line 24 in file "os.c"
 45527 ;; Parameters:    Size  Location     Type
 45528 ;;		None
 45529 ;; Auto vars:     Size  Location     Type
 45530 ;;		None
 45531 ;; Return value:  Size  Location     Type
 45532 ;;                  1    wreg      void 
 45533 ;; Registers used:
 45534 ;;		wreg, status,2, status,0, cstack
 45535 ;; Tracked objects:
 45536 ;;		On entry : 0/0
 45537 ;;		On exit  : 0/0
 45538 ;;		Unchanged: 0/0
 45539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45544 ;;Total ram usage:        0 bytes
 45545 ;; Hardware stack levels used:    1
 45546 ;; Hardware stack levels required when called:    1
 45547 ;; This function calls:
 45548 ;;		_encoder_run
 45549 ;; This function is called by:
 45550 ;;		_SYS_InterruptHigh
 45551 ;; This function uses a non-reentrant model
 45552 ;;
 45553                           
 45554                           	psect	text186
 45555  01512E                     __ptext186:
 45556                           	opt stack 0
 45557  01512E                     _tmr0_isr:
 45558                           	opt stack 16
 45559                           
 45560                           ;os.c: 27: if(INTCONbits.T0IF)
 45561                           
 45562                           ;incstack = 0
 45563  01512E  A4F2               	btfss	intcon,2,c	;volatile
 45564  015130  0012               	return	
 45565                           
 45566                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 45567  015132  0EFA               	movlw	250
 45568  015134  6ED7               	movwf	4055,c	;volatile
 45569                           
 45570                           ;os.c: 31: TMR0L = 0x24;
 45571  015136  0E24               	movlw	36
 45572  015138  6ED6               	movwf	4054,c	;volatile
 45573                           
 45574                           ;os.c: 34: INTCONbits.T0IF = 0;
 45575  01513A  94F2               	bcf	intcon,2,c	;volatile
 45576                           
 45577                           ;os.c: 37: encoder_run();
 45578  01513C  EC6A  F08B         	call	_encoder_run	;wreg free
 45579                           
 45580                           ;os.c: 40: ++os.subTimeSlot;
 45581  015140  0101               	movlb	1	; () banked
 45582  015142  2B71               	incf	_os& (0+255),f,b	;volatile
 45583                           
 45584                           ; BSR set to: 1
 45585                           ;os.c: 41: if(os.subTimeSlot>=10)
 45586  015144  0E09               	movlw	9
 45587  015146  6571               	cpfsgt	_os& (0+255),b	;volatile
 45588  015148  0012               	return	
 45589                           
 45590                           ; BSR set to: 1
 45591                           ;os.c: 42: {;os.c: 43: if(os.done)
 45592  01514A  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 45593  01514C  B4D8               	btfsc	status,2,c
 45594  01514E  0012               	return	
 45595                           
 45596                           ; BSR set to: 1
 45597                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 45598  015150  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 45599                           
 45600                           ; BSR set to: 1
 45601                           ;os.c: 46: if(os.timeSlot==16)
 45602  015152  0E10               	movlw	16
 45603  015154  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 45604  015156  A4D8               	btfss	status,2,c
 45605  015158  D002               	goto	i2l1066
 45606                           
 45607                           ; BSR set to: 1
 45608                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 45609  01515A  0E00               	movlw	0
 45610  01515C  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 45611  01515E                     i2l1066:
 45612                           
 45613                           ; BSR set to: 1
 45614                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 45615  01515E  0E00               	movlw	0
 45616  015160  6F71               	movwf	_os& (0+255),b	;volatile
 45617                           
 45618                           ;os.c: 51: os.done = 0;
 45619  015162  0E00               	movlw	0
 45620  015164  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 45621                           
 45622                           ; BSR set to: 1
 45623                           
 45624                           ; BSR set to: 1
 45625  015166  0012               	return	
 45626  015168                     __end_of_tmr0_isr:
 45627                           	opt stack 0
 45628                           tosu	equ	0xFFF
 45629                           tosh	equ	0xFFE
 45630                           tosl	equ	0xFFD
 45631                           pclatu	equ	0xFFB
 45632                           pclath	equ	0xFFA
 45633                           tblptru	equ	0xFF8
 45634                           tblptrh	equ	0xFF7
 45635                           tblptrl	equ	0xFF6
 45636                           tablat	equ	0xFF5
 45637                           prodh	equ	0xFF4
 45638                           prodl	equ	0xFF3
 45639                           intcon	equ	0xFF2
 45640                           indf0	equ	0xFEF
 45641                           postinc0	equ	0xFEE
 45642                           fsr0h	equ	0xFEA
 45643                           fsr0l	equ	0xFE9
 45644                           wreg	equ	0xFE8
 45645                           indf1	equ	0xFE7
 45646                           postinc1	equ	0xFE6
 45647                           postdec1	equ	0xFE5
 45648                           plusw1	equ	0xFE3
 45649                           fsr1h	equ	0xFE2
 45650                           fsr1l	equ	0xFE1
 45651                           indf2	equ	0xFDF
 45652                           postinc2	equ	0xFDE
 45653                           postdec2	equ	0xFDD
 45654                           plusw2	equ	0xFDB
 45655                           fsr2h	equ	0xFDA
 45656                           fsr2l	equ	0xFD9
 45657                           status	equ	0xFD8
 45658                           
 45659 ;; *************** function _encoder_run *****************
 45660 ;; Defined at:
 45661 ;;		line 103 in file "encoder.c"
 45662 ;; Parameters:    Size  Location     Type
 45663 ;;		None
 45664 ;; Auto vars:     Size  Location     Type
 45665 ;;		None
 45666 ;; Return value:  Size  Location     Type
 45667 ;;                  1    wreg      void 
 45668 ;; Registers used:
 45669 ;;		wreg, status,2, status,0
 45670 ;; Tracked objects:
 45671 ;;		On entry : 0/0
 45672 ;;		On exit  : 0/0
 45673 ;;		Unchanged: 0/0
 45674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45679 ;;Total ram usage:        0 bytes
 45680 ;; Hardware stack levels used:    1
 45681 ;; This function calls:
 45682 ;;		Nothing
 45683 ;; This function is called by:
 45684 ;;		_tmr0_isr
 45685 ;; This function uses a non-reentrant model
 45686 ;;
 45687                           
 45688                           	psect	text187
 45689  0116D4                     __ptext187:
 45690                           	opt stack 0
 45691  0116D4                     _encoder_run:
 45692                           	opt stack 16
 45693                           
 45694                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 45695                           
 45696                           ;incstack = 0
 45697  0116D4  5084               	movf	3972,w,c	;volatile
 45698  0116D6  0B07               	andlw	7
 45699  0116D8  0101               	movlb	1	; () banked
 45700  0116DA  1954               	xorwf	_enc1& (0+255),w,b
 45701  0116DC  B4D8               	btfsc	status,2,c
 45702  0116DE  D033               	goto	i2l2644
 45703                           
 45704                           ; BSR set to: 1
 45705                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 45706  0116E0  B084               	btfsc	3972,0,c	;volatile
 45707                           
 45708                           ; BSR set to: 1
 45709  0116E2  A484               	btfss	3972,2,c	;volatile
 45710  0116E4  D00D               	goto	i2l2647
 45711                           
 45712                           ; BSR set to: 1
 45713  0116E6  B154               	btfsc	_enc1& (0+255),0,b
 45714  0116E8  D00B               	goto	i2l2647
 45715                           
 45716                           ; BSR set to: 1
 45717                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 45718  0116EA  0E7F               	movlw	127
 45719  0116EC  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 45720  0116EE  B4D8               	btfsc	status,2,c
 45721  0116F0  D007               	goto	i2l2647
 45722                           
 45723                           ; BSR set to: 1
 45724                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 45725  0116F2  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 45726                           
 45727                           ; BSR set to: 1
 45728                           ;encoder.c: 113: if(config.beep_duration)
 45729  0116F4  51B6               	movf	(_config+21)& (0+255),w,b
 45730  0116F6  B4D8               	btfsc	status,2,c
 45731  0116F8  D003               	goto	i2l2647
 45732                           
 45733                           ; BSR set to: 1
 45734                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 45735  0116FA  8E8B               	bsf	3979,7,c	;volatile
 45736                           
 45737                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 45738  0116FC  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45739  011700                     i2l2647:
 45740                           
 45741                           ; BSR set to: 1
 45742                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 45743                           
 45744                           ; BSR set to: 1
 45745                           
 45746                           ; BSR set to: 1
 45747  011700  B484               	btfsc	3972,2,c	;volatile
 45748                           
 45749                           ; BSR set to: 1
 45750  011702  A084               	btfss	3972,0,c	;volatile
 45751  011704  D00E               	goto	i2l2650
 45752                           
 45753                           ; BSR set to: 1
 45754  011706  B554               	btfsc	_enc1& (0+255),2,b
 45755  011708  D00C               	goto	i2l2650
 45756                           
 45757                           ; BSR set to: 1
 45758                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 45759  01170A  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 45760  01170C  0A80               	xorlw	128
 45761  01170E  0FFF               	addlw	255
 45762  011710  A0D8               	btfss	status,0,c
 45763  011712  D007               	goto	i2l2650
 45764                           
 45765                           ; BSR set to: 1
 45766                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 45767  011714  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 45768                           
 45769                           ; BSR set to: 1
 45770                           ;encoder.c: 126: if(config.beep_duration)
 45771  011716  51B6               	movf	(_config+21)& (0+255),w,b
 45772  011718  B4D8               	btfsc	status,2,c
 45773  01171A  D003               	goto	i2l2650
 45774                           
 45775                           ; BSR set to: 1
 45776                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 45777  01171C  8E8B               	bsf	3979,7,c	;volatile
 45778                           
 45779                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 45780  01171E  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45781  011722                     i2l2650:
 45782                           
 45783                           ; BSR set to: 1
 45784                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 45785                           
 45786                           ; BSR set to: 1
 45787                           
 45788                           ; BSR set to: 1
 45789  011722  B284               	btfsc	3972,1,c	;volatile
 45790                           
 45791                           ; BSR set to: 1
 45792  011724  B354               	btfsc	_enc1& (0+255),1,b
 45793  011726  D008               	goto	i2l2652
 45794                           
 45795                           ; BSR set to: 1
 45796                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 45797  011728  0E01               	movlw	1
 45798  01172A  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 45799                           
 45800                           ;encoder.c: 137: if(config.beep_duration)
 45801  01172C  51B6               	movf	(_config+21)& (0+255),w,b
 45802  01172E  B4D8               	btfsc	status,2,c
 45803  011730  D003               	goto	i2l2652
 45804                           
 45805                           ; BSR set to: 1
 45806                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 45807  011732  8E8B               	bsf	3979,7,c	;volatile
 45808                           
 45809                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 45810  011734  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45811  011738                     i2l2652:
 45812                           
 45813                           ; BSR set to: 1
 45814                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 45815                           
 45816                           ; BSR set to: 1
 45817  011738  A284               	btfss	3972,1,c	;volatile
 45818                           
 45819                           ; BSR set to: 1
 45820  01173A  A354               	btfss	_enc1& (0+255),1,b
 45821  01173C  D001               	goto	i2l2653
 45822                           
 45823                           ; BSR set to: 1
 45824                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 45825  01173E  6975               	setf	(_os+4)& (0+255),b	;volatile
 45826  011740                     i2l2653:
 45827                           
 45828                           ; BSR set to: 1
 45829                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 45830                           
 45831                           ; BSR set to: 1
 45832  011740  5084               	movf	3972,w,c	;volatile
 45833  011742  0B07               	andlw	7
 45834  011744  6F54               	movwf	_enc1& (0+255),b
 45835  011746                     i2l2644:
 45836                           
 45837                           ; BSR set to: 1
 45838                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 45839  011746  5080               	movf	3968,w,c	;volatile
 45840  011748  0B07               	andlw	7
 45841  01174A  1953               	xorwf	_enc2& (0+255),w,b
 45842  01174C  B4D8               	btfsc	status,2,c
 45843  01174E  D033               	goto	i2l2654
 45844                           
 45845                           ; BSR set to: 1
 45846                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 45847  011750  B480               	btfsc	3968,2,c	;volatile
 45848                           
 45849                           ; BSR set to: 1
 45850  011752  A080               	btfss	3968,0,c	;volatile
 45851  011754  D00D               	goto	i2l2657
 45852                           
 45853                           ; BSR set to: 1
 45854  011756  B553               	btfsc	_enc2& (0+255),2,b
 45855  011758  D00B               	goto	i2l2657
 45856                           
 45857                           ; BSR set to: 1
 45858                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 45859  01175A  0E7F               	movlw	127
 45860  01175C  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 45861  01175E  B4D8               	btfsc	status,2,c
 45862  011760  D007               	goto	i2l2657
 45863                           
 45864                           ; BSR set to: 1
 45865                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 45866  011762  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 45867                           
 45868                           ; BSR set to: 1
 45869                           ;encoder.c: 160: if(config.beep_duration)
 45870  011764  51B6               	movf	(_config+21)& (0+255),w,b
 45871  011766  B4D8               	btfsc	status,2,c
 45872  011768  D003               	goto	i2l2657
 45873                           
 45874                           ; BSR set to: 1
 45875                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 45876  01176A  8E8B               	bsf	3979,7,c	;volatile
 45877                           
 45878                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 45879  01176C  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45880  011770                     i2l2657:
 45881                           
 45882                           ; BSR set to: 1
 45883                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 45884                           
 45885                           ; BSR set to: 1
 45886                           
 45887                           ; BSR set to: 1
 45888  011770  B080               	btfsc	3968,0,c	;volatile
 45889                           
 45890                           ; BSR set to: 1
 45891  011772  A480               	btfss	3968,2,c	;volatile
 45892  011774  D00E               	goto	i2l2660
 45893                           
 45894                           ; BSR set to: 1
 45895  011776  B153               	btfsc	_enc2& (0+255),0,b
 45896  011778  D00C               	goto	i2l2660
 45897                           
 45898                           ; BSR set to: 1
 45899                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 45900  01177A  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 45901  01177C  0A80               	xorlw	128
 45902  01177E  0FFF               	addlw	255
 45903  011780  A0D8               	btfss	status,0,c
 45904  011782  D007               	goto	i2l2660
 45905                           
 45906                           ; BSR set to: 1
 45907                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 45908  011784  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 45909                           
 45910                           ; BSR set to: 1
 45911                           ;encoder.c: 173: if(config.beep_duration)
 45912  011786  51B6               	movf	(_config+21)& (0+255),w,b
 45913  011788  B4D8               	btfsc	status,2,c
 45914  01178A  D003               	goto	i2l2660
 45915                           
 45916                           ; BSR set to: 1
 45917                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 45918  01178C  8E8B               	bsf	3979,7,c	;volatile
 45919                           
 45920                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 45921  01178E  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45922  011792                     i2l2660:
 45923                           
 45924                           ; BSR set to: 1
 45925                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 45926                           
 45927                           ; BSR set to: 1
 45928                           
 45929                           ; BSR set to: 1
 45930  011792  B280               	btfsc	3968,1,c	;volatile
 45931                           
 45932                           ; BSR set to: 1
 45933  011794  B353               	btfsc	_enc2& (0+255),1,b
 45934  011796  D008               	goto	i2l2662
 45935                           
 45936                           ; BSR set to: 1
 45937                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 45938  011798  0E01               	movlw	1
 45939  01179A  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 45940                           
 45941                           ;encoder.c: 184: if(config.beep_duration)
 45942  01179C  51B6               	movf	(_config+21)& (0+255),w,b
 45943  01179E  B4D8               	btfsc	status,2,c
 45944  0117A0  D003               	goto	i2l2662
 45945                           
 45946                           ; BSR set to: 1
 45947                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 45948  0117A2  8E8B               	bsf	3979,7,c	;volatile
 45949                           
 45950                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 45951  0117A4  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45952  0117A8                     i2l2662:
 45953                           
 45954                           ; BSR set to: 1
 45955                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 45956                           
 45957                           ; BSR set to: 1
 45958  0117A8  A280               	btfss	3968,1,c	;volatile
 45959                           
 45960                           ; BSR set to: 1
 45961  0117AA  A353               	btfss	_enc2& (0+255),1,b
 45962  0117AC  D001               	goto	i2l2663
 45963                           
 45964                           ; BSR set to: 1
 45965                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 45966  0117AE  6977               	setf	(_os+6)& (0+255),b	;volatile
 45967  0117B0                     i2l2663:
 45968                           
 45969                           ; BSR set to: 1
 45970                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 45971                           
 45972                           ; BSR set to: 1
 45973  0117B0  5080               	movf	3968,w,c	;volatile
 45974  0117B2  0B07               	andlw	7
 45975  0117B4  6F53               	movwf	_enc2& (0+255),b
 45976  0117B6                     i2l2654:
 45977                           
 45978                           ; BSR set to: 1
 45979                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 45980                           
 45981                           ; BSR set to: 1
 45982  0117B6  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45983  0117B8  B4D8               	btfsc	status,2,c
 45984  0117BA  0012               	return	
 45985                           
 45986                           ; BSR set to: 1
 45987                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 45988  0117BC  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 45989                           
 45990                           ; BSR set to: 1
 45991                           ;encoder.c: 203: if(!os.beep_count)
 45992  0117BE  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45993  0117C0  A4D8               	btfss	status,2,c
 45994  0117C2  0012               	return	
 45995                           
 45996                           ; BSR set to: 1
 45997                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 45998  0117C4  9E8B               	bcf	3979,7,c	;volatile
 45999                           
 46000                           ; BSR set to: 1
 46001  0117C6  0012               	return	
 46002  0117C8                     __end_of_encoder_run:
 46003                           	opt stack 0
 46004                           tosu	equ	0xFFF
 46005                           tosh	equ	0xFFE
 46006                           tosl	equ	0xFFD
 46007                           pclatu	equ	0xFFB
 46008                           pclath	equ	0xFFA
 46009                           tblptru	equ	0xFF8
 46010                           tblptrh	equ	0xFF7
 46011                           tblptrl	equ	0xFF6
 46012                           tablat	equ	0xFF5
 46013                           prodh	equ	0xFF4
 46014                           prodl	equ	0xFF3
 46015                           intcon	equ	0xFF2
 46016                           indf0	equ	0xFEF
 46017                           postinc0	equ	0xFEE
 46018                           fsr0h	equ	0xFEA
 46019                           fsr0l	equ	0xFE9
 46020                           wreg	equ	0xFE8
 46021                           indf1	equ	0xFE7
 46022                           postinc1	equ	0xFE6
 46023                           postdec1	equ	0xFE5
 46024                           plusw1	equ	0xFE3
 46025                           fsr1h	equ	0xFE2
 46026                           fsr1l	equ	0xFE1
 46027                           indf2	equ	0xFDF
 46028                           postinc2	equ	0xFDE
 46029                           postdec2	equ	0xFDD
 46030                           plusw2	equ	0xFDB
 46031                           fsr2h	equ	0xFDA
 46032                           fsr2l	equ	0xFD9
 46033                           status	equ	0xFD8
 46034                           
 46035 ;; *************** function _motor_isr *****************
 46036 ;; Defined at:
 46037 ;;		line 365 in file "motor.c"
 46038 ;; Parameters:    Size  Location     Type
 46039 ;;		None
 46040 ;; Auto vars:     Size  Location     Type
 46041 ;;  steps_remain    4   63[COMRAM] unsigned long 
 46042 ;;  steps_until_    2   61[COMRAM] unsigned int 
 46043 ;;  steps_until_    2   59[COMRAM] unsigned int 
 46044 ;; Return value:  Size  Location     Type
 46045 ;;                  1    wreg      void 
 46046 ;; Registers used:
 46047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46048 ;; Tracked objects:
 46049 ;;		On entry : 0/0
 46050 ;;		On exit  : 0/0
 46051 ;;		Unchanged: 0/0
 46052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46054 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46055 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46056 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46057 ;;Total ram usage:       24 bytes
 46058 ;; Hardware stack levels used:    1
 46059 ;; Hardware stack levels required when called:    4
 46060 ;; This function calls:
 46061 ;;		_i2c_eeprom_writeUint32
 46062 ;; This function is called by:
 46063 ;;		_SYS_InterruptHigh
 46064 ;; This function uses a non-reentrant model
 46065 ;;
 46066                           
 46067                           	psect	text188
 46068  00B7FC                     __ptext188:
 46069                           	opt stack 0
 46070  00B7FC                     _motor_isr:
 46071                           	opt stack 13
 46072                           
 46073                           ;motor.c: 367: uint32_t steps_remaining;;motor.c: 368: uint16_t steps_until_standstill;;
      +                          motor.c: 369: uint16_t steps_until_standstill_if_accelerate;;motor.c: 372: PIR1bits.TMR2
      +                          IF = 0;
 46074                           
 46075                           ; BSR set to: 1
 46076                           ;incstack = 0
 46077  00B7FC  929E               	bcf	3998,1,c	;volatile
 46078                           
 46079                           ;motor.c: 374: if(motor_mode==MOTOR_MODE_MANUAL)
 46080  00B7FE  0101               	movlb	1	; () banked
 46081  00B800  5156               	movf	_motor_mode& (0+255),w,b
 46082  00B802  A4D8               	btfss	status,2,c
 46083  00B804  D026               	goto	i2l2480
 46084                           
 46085                           ; BSR set to: 1
 46086                           ;motor.c: 375: {;motor.c: 377: if(LATBbits.LB1)
 46087  00B806  A28A               	btfss	3978,1,c	;volatile
 46088  00B808  D023               	goto	i2l2477
 46089                           
 46090                           ; BSR set to: 1
 46091                           ;motor.c: 378: {;motor.c: 380: LATBbits.LB1 = 0;
 46092  00B80A  928A               	bcf	3978,1,c	;volatile
 46093                           
 46094                           ; BSR set to: 1
 46095                           ;motor.c: 383: if(motor_current_stepcount==motor_final_stepcount)
 46096  00B80C  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46097  00B80E  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46098  00B810  E109               	bnz	i2u1846_41
 46099  00B812  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46100  00B814  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46101  00B816  E106               	bnz	i2u1846_41
 46102  00B818  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46103  00B81A  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46104  00B81C  E103               	bnz	i2u1846_41
 46105  00B81E  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46106  00B820  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46107  00B822  A4D8               	btfss	status,2,c
 46108  00B824                     i2u1846_41:
 46109  00B824  0012               	return	
 46110                           
 46111                           ; BSR set to: 1
 46112                           ;motor.c: 384: {;motor.c: 387: T2CONbits.TMR2ON = 0;
 46113  00B826  94CA               	bcf	4042,2,c	;volatile
 46114                           
 46115                           ;motor.c: 389: PIR1bits.TMR2IF = 0;
 46116  00B828  929E               	bcf	3998,1,c	;volatile
 46117                           
 46118                           ;motor.c: 390: PIE1bits.TMR2IE = 0;
 46119  00B82A  929D               	bcf	3997,1,c	;volatile
 46120                           
 46121                           ; BSR set to: 1
 46122                           ;motor.c: 392: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 46123  00B82C  0E02               	movlw	2
 46124  00B82E  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 46125  00B830  0E00               	movlw	0
 46126  00B832  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 46127  00B834  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 46128  00B838  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 46129  00B83C  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 46130  00B840  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 46131  00B844  EC0C  F0AC         	call	_i2c_eeprom_writeUint32	;wreg free
 46132                           
 46133                           ;motor.c: 394: os.busy = 0;
 46134  00B848  0E00               	movlw	0
 46135  00B84A  0101               	movlb	1	; () banked
 46136  00B84C  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 46137                           
 46138                           ; BSR set to: 1
 46139                           ;motor.c: 395: };motor.c: 398: return;
 46140                           
 46141                           ; BSR set to: 1
 46142  00B84E  0012               	return	
 46143  00B850                     i2l2477:
 46144                           
 46145                           ; BSR set to: 1
 46146                           ;motor.c: 400: else;motor.c: 401: {;motor.c: 403: LATBbits.LB1 = 1;
 46147  00B850  828A               	bsf	3978,1,c	;volatile
 46148  00B852                     i2l2480:
 46149                           
 46150                           ; BSR set to: 1
 46151                           ;motor.c: 404: };motor.c: 405: };motor.c: 407: ++motor_current_stepcount;
 46152                           
 46153                           ; BSR set to: 1
 46154                           
 46155                           ; BSR set to: 1
 46156  00B852  0E01               	movlw	1
 46157  00B854  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46158  00B856  0E00               	movlw	0
 46159  00B858  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46160  00B85A  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46161  00B85C  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46162                           
 46163                           ;motor.c: 410: os.current_position_in_steps += motor_direction;
 46164  00B85E  5155               	movf	_motor_direction& (0+255),w,b
 46165  00B860  6E2C               	movwf	??_motor_isr& (0+255),c
 46166  00B862  0E00               	movlw	0
 46167  00B864  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46168  00B866  0EFF               	movlw	255
 46169  00B868  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46170  00B86A  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46171  00B86C  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46172  00B86E  502C               	movf	??_motor_isr,w,c
 46173  00B870  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46174  00B872  502D               	movf	??_motor_isr+1,w,c
 46175  00B874  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46176  00B876  502E               	movf	??_motor_isr+2,w,c
 46177  00B878  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46178  00B87A  502F               	movf	??_motor_isr+3,w,c
 46179  00B87C  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46180                           
 46181                           ;motor.c: 411: if(os.current_position_in_steps==config.full_circle_in_steps)
 46182  00B87E  51A1               	movf	_config& (0+255),w,b
 46183  00B880  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46184  00B882  E112               	bnz	i2l18528
 46185  00B884  51A2               	movf	(_config+1)& (0+255),w,b
 46186  00B886  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46187  00B888  E10F               	bnz	i2l18528
 46188  00B88A  51A3               	movf	(_config+2)& (0+255),w,b
 46189  00B88C  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46190  00B88E  E10C               	bnz	i2l18528
 46191  00B890  51A4               	movf	(_config+3)& (0+255),w,b
 46192  00B892  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46193  00B894  A4D8               	btfss	status,2,c
 46194  00B896  D008               	goto	i2l2481
 46195                           
 46196                           ; BSR set to: 1
 46197                           ;motor.c: 412: os.current_position_in_steps = 0;
 46198  00B898  0E00               	movlw	0
 46199  00B89A  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46200  00B89C  0E00               	movlw	0
 46201  00B89E  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46202  00B8A0  0E00               	movlw	0
 46203  00B8A2  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46204  00B8A4  0E00               	movlw	0
 46205  00B8A6  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46206  00B8A8                     i2l2481:
 46207  00B8A8                     i2l18528:
 46208                           
 46209                           ; BSR set to: 1
 46210                           ;motor.c: 413: if(os.current_position_in_steps==0xFFFFFFFF)
 46211  00B8A8  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46212  00B8AA  E113               	bnz	i2l2482
 46213  00B8AC  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46214  00B8AE  E111               	bnz	i2l2482
 46215  00B8B0  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46216  00B8B2  E10F               	bnz	i2l2482
 46217  00B8B4  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46218  00B8B6  A4D8               	btfss	status,2,c
 46219  00B8B8  D00C               	goto	i2l2482
 46220                           
 46221                           ; BSR set to: 1
 46222                           ;motor.c: 414: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46223  00B8BA  0EFF               	movlw	255
 46224  00B8BC  25A1               	addwf	_config& (0+255),w,b
 46225  00B8BE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46226  00B8C0  0EFF               	movlw	255
 46227  00B8C2  21A2               	addwfc	(_config+1)& (0+255),w,b
 46228  00B8C4  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46229  00B8C6  0EFF               	movlw	255
 46230  00B8C8  21A3               	addwfc	(_config+2)& (0+255),w,b
 46231  00B8CA  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46232  00B8CC  0EFF               	movlw	255
 46233  00B8CE  21A4               	addwfc	(_config+3)& (0+255),w,b
 46234  00B8D0  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46235  00B8D2                     i2l2482:
 46236                           
 46237                           ; BSR set to: 1
 46238                           ;motor.c: 417: if(motor_current_stepcount==motor_next_speed_check)
 46239  00B8D2  0102               	movlb	2	; () banked
 46240  00B8D4  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 46241  00B8D6  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46242  00B8D8  E109               	bnz	i2u1849_41
 46243  00B8DA  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 46244  00B8DC  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46245  00B8DE  E106               	bnz	i2u1849_41
 46246  00B8E0  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 46247  00B8E2  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46248  00B8E4  E103               	bnz	i2u1849_41
 46249  00B8E6  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 46250  00B8E8  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46251  00B8EA  A4D8               	btfss	status,2,c
 46252  00B8EC                     i2u1849_41:
 46253  00B8EC  D217               	goto	i2l2495
 46254                           
 46255                           ; BSR set to: 2
 46256                           ;motor.c: 418: {;motor.c: 420: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 46257  00B8EE  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 46258  00B8F2  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 46259  00B8F6  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 46260  00B8FA  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 46261  00B8FE  1E2C               	comf	??_motor_isr,f,c
 46262  00B900  1E2D               	comf	??_motor_isr+1,f,c
 46263  00B902  1E2E               	comf	??_motor_isr+2,f,c
 46264  00B904  1E2F               	comf	??_motor_isr+3,f,c
 46265  00B906  2A2C               	incf	??_motor_isr,f,c
 46266  00B908  0E00               	movlw	0
 46267  00B90A  222D               	addwfc	??_motor_isr+1,f,c
 46268  00B90C  222E               	addwfc	??_motor_isr+2,f,c
 46269  00B90E  222F               	addwfc	??_motor_isr+3,f,c
 46270  00B910  0101               	movlb	1	; () banked
 46271  00B912  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46272  00B914  242C               	addwf	??_motor_isr,w,c
 46273  00B916  6E40               	movwf	motor_isr@steps_remaining,c
 46274  00B918  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46275  00B91A  202D               	addwfc	??_motor_isr+1,w,c
 46276  00B91C  6E41               	movwf	motor_isr@steps_remaining+1,c
 46277  00B91E  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46278  00B920  202E               	addwfc	??_motor_isr+2,w,c
 46279  00B922  6E42               	movwf	motor_isr@steps_remaining+2,c
 46280  00B924  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46281  00B926  202F               	addwfc	??_motor_isr+3,w,c
 46282  00B928  6E43               	movwf	motor_isr@steps_remaining+3,c
 46283                           
 46284                           ; BSR set to: 1
 46285                           ;motor.c: 421: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 46286  00B92A  90D8               	bcf	status,0,c
 46287  00B92C  0100               	movlb	0	; () banked
 46288  00B92E  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46289  00B930  6EF6               	movwf	tblptrl,c
 46290  00B932  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46291  00B934  6EF7               	movwf	tblptrh,c
 46292  00B936  0E61               	movlw	low _motor_steps_lookup
 46293  00B938  26F6               	addwf	tblptrl,f,c
 46294  00B93A  0E94               	movlw	high _motor_steps_lookup
 46295  00B93C  22F7               	addwfc	tblptrh,f,c
 46296  00B93E                     	if	1	;There are 3 active tblptr bytes
 46297  00B93E  6AF8               	clrf	tblptru,c
 46298  00B940  0E00               	movlw	low (__mediumconst shr (0+16))
 46299  00B942  22F8               	addwfc	tblptru,f,c
 46300  00B944                     	endif
 46301  00B944  0009               	tblrd		*+
 46302  00B946  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 46303  00B94A  000A               	tblrd		*-
 46304  00B94C  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 46305                           
 46306                           ; BSR set to: 0
 46307                           ;motor.c: 422: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 46308  00B950  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 46309  00B954  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 46310  00B958  90D8               	bcf	status,0,c
 46311  00B95A  362C               	rlcf	??_motor_isr,f,c
 46312  00B95C  362D               	rlcf	??_motor_isr+1,f,c
 46313  00B95E  0E04               	movlw	4
 46314  00B960  262C               	addwf	??_motor_isr,f,c
 46315  00B962  0E00               	movlw	0
 46316  00B964  222D               	addwfc	??_motor_isr+1,f,c
 46317  00B966  0E61               	movlw	low _motor_steps_lookup
 46318  00B968  242C               	addwf	??_motor_isr,w,c
 46319  00B96A  6EF6               	movwf	tblptrl,c
 46320  00B96C  0E94               	movlw	high _motor_steps_lookup
 46321  00B96E  202D               	addwfc	??_motor_isr+1,w,c
 46322  00B970  6EF7               	movwf	tblptrh,c
 46323  00B972                     	if	1	;There are 3 active tblptr bytes
 46324  00B972  6AF8               	clrf	tblptru,c
 46325  00B974  0E00               	movlw	low (__mediumconst shr (0+16))
 46326  00B976  22F8               	addwfc	tblptru,f,c
 46327  00B978                     	endif
 46328  00B978  0009               	tblrd		*+
 46329  00B97A  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 46330  00B97E  000A               	tblrd		*-
 46331  00B980  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 46332                           
 46333                           ;motor.c: 424: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 46334  00B984  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46335  00B986  0101               	movlb	1	; () banked
 46336  00B988  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 46337  00B98A  0100               	movlb	0	; () banked
 46338  00B98C  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46339  00B98E  0101               	movlb	1	; () banked
 46340  00B990  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 46341  00B992  A0D8               	btfss	status,0,c
 46342  00B994  D010               	goto	i2u1851_40
 46343                           
 46344                           ; BSR set to: 1
 46345  00B996  503C               	movf	motor_isr@steps_until_standstill,w,c
 46346  00B998  6E2C               	movwf	??_motor_isr& (0+255),c
 46347  00B99A  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 46348  00B99C  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46349  00B99E  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46350  00B9A0  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46351  00B9A2  5040               	movf	motor_isr@steps_remaining,w,c
 46352  00B9A4  5C2C               	subwf	??_motor_isr,w,c
 46353  00B9A6  5041               	movf	motor_isr@steps_remaining+1,w,c
 46354  00B9A8  582D               	subwfb	??_motor_isr+1,w,c
 46355  00B9AA  5042               	movf	motor_isr@steps_remaining+2,w,c
 46356  00B9AC  582E               	subwfb	??_motor_isr+2,w,c
 46357  00B9AE  5043               	movf	motor_isr@steps_remaining+3,w,c
 46358  00B9B0  582F               	subwfb	??_motor_isr+3,w,c
 46359  00B9B2  A0D8               	btfss	status,0,c
 46360  00B9B4  D0E3               	goto	i2l2484
 46361  00B9B6                     i2u1851_40:
 46362                           
 46363                           ; BSR set to: 1
 46364                           ;motor.c: 425: {;motor.c: 427: if(motor_current_speed>0)
 46365                           
 46366                           ; BSR set to: 1
 46367  00B9B6  0100               	movlb	0	; () banked
 46368  00B9B8  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46369  00B9BA  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46370  00B9BC  B4D8               	btfsc	status,2,c
 46371  00B9BE  D003               	goto	i2l2487
 46372                           
 46373                           ; BSR set to: 0
 46374                           ;motor.c: 428: {;motor.c: 429: --motor_current_speed;
 46375  00B9C0  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 46376  00B9C2  A0D8               	btfss	status,0,c
 46377  00B9C4  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46378  00B9C6                     i2l2487:
 46379                           
 46380                           ; BSR set to: 0
 46381                           ;motor.c: 430: };motor.c: 433: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 46382                           
 46383                           ; BSR set to: 0
 46384  00B9C6  0101               	movlb	1	; () banked
 46385  00B9C8  0556               	decf	_motor_mode& (0+255),w,b
 46386  00B9CA  A4D8               	btfss	status,2,c
 46387  00B9CC  D026               	goto	i2l2488
 46388                           
 46389                           ; BSR set to: 1
 46390  00B9CE  0E2F               	movlw	low _motor_postscaler_lookup
 46391  00B9D0  0100               	movlb	0	; () banked
 46392  00B9D2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46393  00B9D4  6EF6               	movwf	tblptrl,c
 46394  00B9D6  0E98               	movlw	high _motor_postscaler_lookup
 46395  00B9D8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46396  00B9DA  6EF7               	movwf	tblptrh,c
 46397  00B9DC                     	if	1	;There are 3 active tblptr bytes
 46398  00B9DC  6AF8               	clrf	tblptru,c
 46399  00B9DE  0E00               	movlw	low (__mediumconst shr (0+16))
 46400  00B9E0  22F8               	addwfc	tblptru,f,c
 46401  00B9E2                     	endif
 46402  00B9E2  0008               	tblrd		*
 46403  00B9E4  50F5               	movf	tablat,w,c
 46404  00B9E6  0900               	iorlw	0
 46405  00B9E8  B4D8               	btfsc	status,2,c
 46406  00B9EA  D017               	goto	i2l2488
 46407                           
 46408                           ; BSR set to: 0
 46409                           ;motor.c: 434: {;motor.c: 436: motor_mode = MOTOR_MODE_MANUAL;
 46410  00B9EC  0E00               	movlw	0
 46411  00B9EE  0101               	movlb	1	; () banked
 46412  00B9F0  6F56               	movwf	_motor_mode& (0+255),b
 46413                           
 46414                           ; BSR set to: 1
 46415                           ;motor.c: 439: LATBbits.LB1 = 1;
 46416  00B9F2  828A               	bsf	3978,1,c	;volatile
 46417                           
 46418                           ;motor.c: 440: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46419  00B9F4  0E55               	movlw	85
 46420  00B9F6  6EA7               	movwf	4007,c	;volsfr
 46421  00B9F8  0EAA               	movlw	170
 46422  00B9FA  6EA7               	movwf	4007,c	;volsfr
 46423                           
 46424                           ; BSR set to: 1
 46425  00B9FC  010E               	movlb	14	; () banked
 46426  00B9FE  91BF               	bcf	191,0,b	;volatile
 46427                           
 46428                           ;motor.c: 441: RPOR4 = 0;
 46429  00BA00  0E00               	movlw	0
 46430  00BA02  6FC4               	movwf	196,b	;volatile
 46431                           
 46432                           ;motor.c: 442: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46433  00BA04  0E55               	movlw	85
 46434  00BA06  6EA7               	movwf	4007,c	;volsfr
 46435  00BA08  0EAA               	movlw	170
 46436  00BA0A  6EA7               	movwf	4007,c	;volsfr
 46437                           
 46438                           ; BSR set to: 14
 46439  00BA0C  81BF               	bsf	191,0,b	;volatile
 46440                           
 46441                           ;motor.c: 445: TMR2 = 0;
 46442  00BA0E  0E00               	movlw	0
 46443  00BA10  6ECC               	movwf	4044,c	;volatile
 46444                           
 46445                           ; BSR set to: 14
 46446                           ;motor.c: 448: CCP1CONbits.CCP1M = 0b0000;
 46447  00BA12  90BA               	bcf	4026,0,c	;volatile
 46448  00BA14  92BA               	bcf	4026,1,c	;volatile
 46449  00BA16  94BA               	bcf	4026,2,c	;volatile
 46450  00BA18  96BA               	bcf	4026,3,c	;volatile
 46451  00BA1A                     i2l2488:
 46452                           
 46453                           ;motor.c: 449: };motor.c: 453: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 46454                           
 46455                           ; BSR set to: 14
 46456  00BA1A  0EFD               	movlw	low _motor_prescaler_lookup
 46457  00BA1C  0100               	movlb	0	; () banked
 46458  00BA1E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46459  00BA20  6EF6               	movwf	tblptrl,c
 46460  00BA22  0E9B               	movlw	high _motor_prescaler_lookup
 46461  00BA24  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46462  00BA26  6EF7               	movwf	tblptrh,c
 46463  00BA28                     	if	1	;There are 3 active tblptr bytes
 46464  00BA28  6AF8               	clrf	tblptru,c
 46465  00BA2A  0E00               	movlw	low (__mediumconst shr (0+16))
 46466  00BA2C  22F8               	addwfc	tblptru,f,c
 46467  00BA2E                     	endif
 46468  00BA2E  0008               	tblrd		*
 46469  00BA30  CFF5 F02C          	movff	tablat,??_motor_isr
 46470  00BA34  50CA               	movf	4042,w,c	;volatile
 46471  00BA36  182C               	xorwf	??_motor_isr,w,c
 46472  00BA38  0BFC               	andlw	-4
 46473  00BA3A  182C               	xorwf	??_motor_isr,w,c
 46474  00BA3C  6ECA               	movwf	4042,c	;volatile
 46475                           
 46476                           ; BSR set to: 0
 46477                           ;motor.c: 455: PR2 = motor_period_lookup[motor_current_speed];
 46478  00BA3E  0E16               	movlw	low _motor_period_lookup
 46479  00BA40  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46480  00BA42  6EF6               	movwf	tblptrl,c
 46481  00BA44  0E9A               	movlw	high _motor_period_lookup
 46482  00BA46  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46483  00BA48  6EF7               	movwf	tblptrh,c
 46484  00BA4A                     	if	1	;There are 3 active tblptr bytes
 46485  00BA4A  6AF8               	clrf	tblptru,c
 46486  00BA4C  0E00               	movlw	low (__mediumconst shr (0+16))
 46487  00BA4E  22F8               	addwfc	tblptru,f,c
 46488  00BA50                     	endif
 46489  00BA50  0008               	tblrd		*
 46490  00BA52  CFF5 FFCB          	movff	tablat,4043	;volatile
 46491                           
 46492                           ; BSR set to: 0
 46493                           ;motor.c: 457: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46494  00BA56  0E2F               	movlw	low _motor_postscaler_lookup
 46495  00BA58  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46496  00BA5A  6EF6               	movwf	tblptrl,c
 46497  00BA5C  0E98               	movlw	high _motor_postscaler_lookup
 46498  00BA5E  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46499  00BA60  6EF7               	movwf	tblptrh,c
 46500  00BA62                     	if	1	;There are 3 active tblptr bytes
 46501  00BA62  6AF8               	clrf	tblptru,c
 46502  00BA64  0E00               	movlw	low (__mediumconst shr (0+16))
 46503  00BA66  22F8               	addwfc	tblptru,f,c
 46504  00BA68                     	endif
 46505  00BA68  0008               	tblrd		*
 46506  00BA6A  CFF5 F02C          	movff	tablat,??_motor_isr
 46507  00BA6E  462C               	rlncf	??_motor_isr,f,c
 46508  00BA70  462C               	rlncf	??_motor_isr,f,c
 46509  00BA72  462C               	rlncf	??_motor_isr,f,c
 46510  00BA74  50CA               	movf	4042,w,c	;volatile
 46511  00BA76  182C               	xorwf	??_motor_isr,w,c
 46512  00BA78  0B87               	andlw	-121
 46513  00BA7A  182C               	xorwf	??_motor_isr,w,c
 46514  00BA7C  6ECA               	movwf	4042,c	;volatile
 46515                           
 46516                           ; BSR set to: 0
 46517                           ;motor.c: 459: CCPR1L = PR2>>1;
 46518  00BA7E  90D8               	bcf	status,0,c
 46519  00BA80  30CB               	rrcf	4043,w,c	;volatile
 46520  00BA82  6EBB               	movwf	4027,c	;volatile
 46521                           
 46522                           ; BSR set to: 0
 46523                           ;motor.c: 462: if(motor_current_speed>0)
 46524  00BA84  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46525  00BA86  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46526  00BA88  B4D8               	btfsc	status,2,c
 46527  00BA8A  D058               	goto	i2l2489
 46528                           
 46529                           ; BSR set to: 0
 46530                           ;motor.c: 463: {;motor.c: 464: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 46531  00BA8C  0EFE               	movlw	254
 46532  00BA8E  6E2C               	movwf	??_motor_isr& (0+255),c
 46533  00BA90  0EFF               	movlw	255
 46534  00BA92  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46535  00BA94  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 46536  00BA98  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 46537  00BA9C  90D8               	bcf	status,0,c
 46538  00BA9E  362E               	rlcf	??_motor_isr+2,f,c
 46539  00BAA0  362F               	rlcf	??_motor_isr+3,f,c
 46540  00BAA2  502C               	movf	??_motor_isr,w,c
 46541  00BAA4  262E               	addwf	??_motor_isr+2,f,c
 46542  00BAA6  502D               	movf	??_motor_isr+1,w,c
 46543  00BAA8  222F               	addwfc	??_motor_isr+3,f,c
 46544  00BAAA  0E61               	movlw	low _motor_steps_lookup
 46545  00BAAC  242E               	addwf	??_motor_isr+2,w,c
 46546  00BAAE  6EF6               	movwf	tblptrl,c
 46547  00BAB0  0E94               	movlw	high _motor_steps_lookup
 46548  00BAB2  202F               	addwfc	??_motor_isr+3,w,c
 46549  00BAB4  6EF7               	movwf	tblptrh,c
 46550  00BAB6                     	if	1	;There are 3 active tblptr bytes
 46551  00BAB6  6AF8               	clrf	tblptru,c
 46552  00BAB8  0E00               	movlw	low (__mediumconst shr (0+16))
 46553  00BABA  22F8               	addwfc	tblptru,f,c
 46554  00BABC                     	endif
 46555  00BABC  0009               	tblrd		*+
 46556  00BABE  CFF5 F030          	movff	tablat,??_motor_isr+4
 46557  00BAC2  0009               	tblrd		*+
 46558  00BAC4  CFF5 F031          	movff	tablat,??_motor_isr+5
 46559  00BAC8  5030               	movf	??_motor_isr+4,w,c
 46560  00BACA  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 46561  00BACC  5031               	movf	??_motor_isr+5,w,c
 46562  00BACE  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 46563  00BAD0  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 46564  00BAD2  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 46565  00BAD4  1E32               	comf	??_motor_isr+6,f,c
 46566  00BAD6  1E33               	comf	??_motor_isr+7,f,c
 46567  00BAD8  1E34               	comf	??_motor_isr+8,f,c
 46568  00BADA  1E35               	comf	??_motor_isr+9,f,c
 46569  00BADC  2A32               	incf	??_motor_isr+6,f,c
 46570  00BADE  0E00               	movlw	0
 46571  00BAE0  2233               	addwfc	??_motor_isr+7,f,c
 46572  00BAE2  2234               	addwfc	??_motor_isr+8,f,c
 46573  00BAE4  2235               	addwfc	??_motor_isr+9,f,c
 46574  00BAE6  90D8               	bcf	status,0,c
 46575  00BAE8  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46576  00BAEA  6EF6               	movwf	tblptrl,c
 46577  00BAEC  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46578  00BAEE  6EF7               	movwf	tblptrh,c
 46579  00BAF0  0E61               	movlw	low _motor_steps_lookup
 46580  00BAF2  26F6               	addwf	tblptrl,f,c
 46581  00BAF4  0E94               	movlw	high _motor_steps_lookup
 46582  00BAF6  22F7               	addwfc	tblptrh,f,c
 46583  00BAF8                     	if	1	;There are 3 active tblptr bytes
 46584  00BAF8  6AF8               	clrf	tblptru,c
 46585  00BAFA  0E00               	movlw	low (__mediumconst shr (0+16))
 46586  00BAFC  22F8               	addwfc	tblptru,f,c
 46587  00BAFE                     	endif
 46588  00BAFE  0009               	tblrd		*+
 46589  00BB00  CFF5 F036          	movff	tablat,??_motor_isr+10
 46590  00BB04  0009               	tblrd		*+
 46591  00BB06  CFF5 F037          	movff	tablat,??_motor_isr+11
 46592  00BB0A  5036               	movf	??_motor_isr+10,w,c
 46593  00BB0C  2432               	addwf	??_motor_isr+6,w,c
 46594  00BB0E  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46595  00BB10  5037               	movf	??_motor_isr+11,w,c
 46596  00BB12  2033               	addwfc	??_motor_isr+7,w,c
 46597  00BB14  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46598  00BB16  0E00               	movlw	0
 46599  00BB18  2034               	addwfc	??_motor_isr+8,w,c
 46600  00BB1A  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 46601  00BB1C  0E00               	movlw	0
 46602  00BB1E  2035               	addwfc	??_motor_isr+9,w,c
 46603  00BB20  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 46604  00BB22  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46605  00BB24  2438               	addwf	??_motor_isr+12,w,c
 46606  00BB26  0102               	movlb	2	; () banked
 46607  00BB28  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46608  00BB2A  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46609  00BB2C  2039               	addwfc	??_motor_isr+13,w,c
 46610  00BB2E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46611  00BB30  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46612  00BB32  203A               	addwfc	??_motor_isr+14,w,c
 46613  00BB34  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46614  00BB36  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46615  00BB38  203B               	addwfc	??_motor_isr+15,w,c
 46616  00BB3A  D0EF               	goto	L75
 46617  00BB3C                     i2l2489:
 46618                           
 46619                           ;motor.c: 466: else;motor.c: 467: {;motor.c: 468: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 46620                           
 46621                           ; BSR set to: 2
 46622  00BB3C  90D8               	bcf	status,0,c
 46623  00BB3E  0100               	movlb	0	; () banked
 46624  00BB40  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46625  00BB42  6EF6               	movwf	tblptrl,c
 46626  00BB44  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46627  00BB46  6EF7               	movwf	tblptrh,c
 46628  00BB48  0E61               	movlw	low _motor_steps_lookup
 46629  00BB4A  26F6               	addwf	tblptrl,f,c
 46630  00BB4C  0E94               	movlw	high _motor_steps_lookup
 46631  00BB4E  22F7               	addwfc	tblptrh,f,c
 46632  00BB50                     	if	1	;There are 3 active tblptr bytes
 46633  00BB50  6AF8               	clrf	tblptru,c
 46634  00BB52  0E00               	movlw	low (__mediumconst shr (0+16))
 46635  00BB54  22F8               	addwfc	tblptru,f,c
 46636  00BB56                     	endif
 46637  00BB56  0009               	tblrd		*+
 46638  00BB58  CFF5 F02C          	movff	tablat,??_motor_isr
 46639  00BB5C  0009               	tblrd		*+
 46640  00BB5E  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46641  00BB62  502C               	movf	??_motor_isr,w,c
 46642  00BB64  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 46643  00BB66  0102               	movlb	2	; () banked
 46644  00BB68  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46645  00BB6A  502D               	movf	??_motor_isr+1,w,c
 46646  00BB6C  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 46647  00BB6E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46648  00BB70  0E00               	movlw	0
 46649  00BB72  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 46650  00BB74  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46651  00BB76  0E00               	movlw	0
 46652  00BB78  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 46653  00BB7A  D0CF               	goto	L75
 46654  00BB7C                     i2l2484:
 46655                           
 46656                           ;motor.c: 471: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 46657                           
 46658                           ; BSR set to: 2
 46659  00BB7C  0101               	movlb	1	; () banked
 46660  00BB7E  513F               	movf	_motor_maximum_speed& (0+255),w,b
 46661  00BB80  0100               	movlb	0	; () banked
 46662  00BB82  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 46663  00BB84  E106               	bnz	i2u1856_40
 46664  00BB86  0101               	movlb	1	; () banked
 46665  00BB88  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 46666  00BB8A  0100               	movlb	0	; () banked
 46667  00BB8C  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46668  00BB8E  B4D8               	btfsc	status,2,c
 46669  00BB90  D010               	goto	i2u1857_40
 46670  00BB92                     i2u1856_40:
 46671                           
 46672                           ; BSR set to: 0
 46673  00BB92  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 46674  00BB94  6E2C               	movwf	??_motor_isr& (0+255),c
 46675  00BB96  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 46676  00BB98  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46677  00BB9A  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46678  00BB9C  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46679  00BB9E  5040               	movf	motor_isr@steps_remaining,w,c
 46680  00BBA0  5C2C               	subwf	??_motor_isr,w,c
 46681  00BBA2  5041               	movf	motor_isr@steps_remaining+1,w,c
 46682  00BBA4  582D               	subwfb	??_motor_isr+1,w,c
 46683  00BBA6  5042               	movf	motor_isr@steps_remaining+2,w,c
 46684  00BBA8  582E               	subwfb	??_motor_isr+2,w,c
 46685  00BBAA  5043               	movf	motor_isr@steps_remaining+3,w,c
 46686  00BBAC  582F               	subwfb	??_motor_isr+3,w,c
 46687  00BBAE  A0D8               	btfss	status,0,c
 46688  00BBB0  D002               	goto	i2l2492
 46689  00BBB2                     i2u1857_40:
 46690                           
 46691                           ; BSR set to: 0
 46692                           ;motor.c: 472: {;motor.c: 475: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46693                           
 46694                           ; BSR set to: 0
 46695  00BBB2  90D8               	bcf	status,0,c
 46696  00BBB4  D060               	goto	L74
 46697  00BBB6                     i2l2492:
 46698                           
 46699                           ;motor.c: 477: else;motor.c: 478: {;motor.c: 480: ++motor_current_speed;
 46700                           
 46701                           ; BSR set to: 2
 46702  00BBB6  0100               	movlb	0	; () banked
 46703  00BBB8  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 46704  00BBBA  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46705                           
 46706                           ; BSR set to: 0
 46707                           ;motor.c: 484: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 46708  00BBBC  0EFD               	movlw	low _motor_prescaler_lookup
 46709  00BBBE  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46710  00BBC0  6EF6               	movwf	tblptrl,c
 46711  00BBC2  0E9B               	movlw	high _motor_prescaler_lookup
 46712  00BBC4  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46713  00BBC6  6EF7               	movwf	tblptrh,c
 46714  00BBC8                     	if	1	;There are 3 active tblptr bytes
 46715  00BBC8  6AF8               	clrf	tblptru,c
 46716  00BBCA  0E00               	movlw	low (__mediumconst shr (0+16))
 46717  00BBCC  22F8               	addwfc	tblptru,f,c
 46718  00BBCE                     	endif
 46719  00BBCE  0008               	tblrd		*
 46720  00BBD0  CFF5 F02C          	movff	tablat,??_motor_isr
 46721  00BBD4  50CA               	movf	4042,w,c	;volatile
 46722  00BBD6  182C               	xorwf	??_motor_isr,w,c
 46723  00BBD8  0BFC               	andlw	-4
 46724  00BBDA  182C               	xorwf	??_motor_isr,w,c
 46725  00BBDC  6ECA               	movwf	4042,c	;volatile
 46726                           
 46727                           ; BSR set to: 0
 46728                           ;motor.c: 486: PR2 = motor_period_lookup[motor_current_speed];
 46729  00BBDE  0E16               	movlw	low _motor_period_lookup
 46730  00BBE0  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46731  00BBE2  6EF6               	movwf	tblptrl,c
 46732  00BBE4  0E9A               	movlw	high _motor_period_lookup
 46733  00BBE6  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46734  00BBE8  6EF7               	movwf	tblptrh,c
 46735  00BBEA                     	if	1	;There are 3 active tblptr bytes
 46736  00BBEA  6AF8               	clrf	tblptru,c
 46737  00BBEC  0E00               	movlw	low (__mediumconst shr (0+16))
 46738  00BBEE  22F8               	addwfc	tblptru,f,c
 46739  00BBF0                     	endif
 46740  00BBF0  0008               	tblrd		*
 46741  00BBF2  CFF5 FFCB          	movff	tablat,4043	;volatile
 46742                           
 46743                           ; BSR set to: 0
 46744                           ;motor.c: 488: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46745  00BBF6  0E2F               	movlw	low _motor_postscaler_lookup
 46746  00BBF8  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46747  00BBFA  6EF6               	movwf	tblptrl,c
 46748  00BBFC  0E98               	movlw	high _motor_postscaler_lookup
 46749  00BBFE  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46750  00BC00  6EF7               	movwf	tblptrh,c
 46751  00BC02                     	if	1	;There are 3 active tblptr bytes
 46752  00BC02  6AF8               	clrf	tblptru,c
 46753  00BC04  0E00               	movlw	low (__mediumconst shr (0+16))
 46754  00BC06  22F8               	addwfc	tblptru,f,c
 46755  00BC08                     	endif
 46756  00BC08  0008               	tblrd		*
 46757  00BC0A  CFF5 F02C          	movff	tablat,??_motor_isr
 46758  00BC0E  462C               	rlncf	??_motor_isr,f,c
 46759  00BC10  462C               	rlncf	??_motor_isr,f,c
 46760  00BC12  462C               	rlncf	??_motor_isr,f,c
 46761  00BC14  50CA               	movf	4042,w,c	;volatile
 46762  00BC16  182C               	xorwf	??_motor_isr,w,c
 46763  00BC18  0B87               	andlw	-121
 46764  00BC1A  182C               	xorwf	??_motor_isr,w,c
 46765  00BC1C  6ECA               	movwf	4042,c	;volatile
 46766                           
 46767                           ; BSR set to: 0
 46768                           ;motor.c: 490: CCPR1L = PR2>>1;
 46769  00BC1E  90D8               	bcf	status,0,c
 46770  00BC20  30CB               	rrcf	4043,w,c	;volatile
 46771  00BC22  6EBB               	movwf	4027,c	;volatile
 46772                           
 46773                           ; BSR set to: 0
 46774                           ;motor.c: 492: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 46775  00BC24  0101               	movlb	1	; () banked
 46776  00BC26  5156               	movf	_motor_mode& (0+255),w,b
 46777  00BC28  A4D8               	btfss	status,2,c
 46778  00BC2A  D023               	goto	i2l2496
 46779                           
 46780                           ; BSR set to: 1
 46781  00BC2C  0E2F               	movlw	low _motor_postscaler_lookup
 46782  00BC2E  0100               	movlb	0	; () banked
 46783  00BC30  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46784  00BC32  6EF6               	movwf	tblptrl,c
 46785  00BC34  0E98               	movlw	high _motor_postscaler_lookup
 46786  00BC36  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46787  00BC38  6EF7               	movwf	tblptrh,c
 46788  00BC3A                     	if	1	;There are 3 active tblptr bytes
 46789  00BC3A  6AF8               	clrf	tblptru,c
 46790  00BC3C  0E00               	movlw	low (__mediumconst shr (0+16))
 46791  00BC3E  22F8               	addwfc	tblptru,f,c
 46792  00BC40                     	endif
 46793  00BC40  0008               	tblrd		*
 46794  00BC42  50F5               	movf	tablat,w,c
 46795  00BC44  0900               	iorlw	0
 46796  00BC46  A4D8               	btfss	status,2,c
 46797  00BC48  D014               	goto	i2l2496
 46798                           
 46799                           ; BSR set to: 0
 46800                           ;motor.c: 493: {;motor.c: 495: motor_mode = MOTOR_MODE_PWM;
 46801  00BC4A  0E01               	movlw	1
 46802  00BC4C  0101               	movlb	1	; () banked
 46803  00BC4E  6F56               	movwf	_motor_mode& (0+255),b
 46804                           
 46805                           ;motor.c: 498: CCP1CONbits.CCP1M = 0b1100;
 46806  00BC50  50BA               	movf	4026,w,c	;volatile
 46807  00BC52  0BF0               	andlw	-16
 46808  00BC54  090C               	iorlw	12
 46809  00BC56  6EBA               	movwf	4026,c	;volatile
 46810                           
 46811                           ;motor.c: 501: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46812  00BC58  0E55               	movlw	85
 46813  00BC5A  6EA7               	movwf	4007,c	;volsfr
 46814  00BC5C  0EAA               	movlw	170
 46815  00BC5E  6EA7               	movwf	4007,c	;volsfr
 46816                           
 46817                           ; BSR set to: 1
 46818  00BC60  010E               	movlb	14	; () banked
 46819  00BC62  91BF               	bcf	191,0,b	;volatile
 46820                           
 46821                           ;motor.c: 502: RPOR4 = 14;
 46822  00BC64  0E0E               	movlw	14
 46823  00BC66  6FC4               	movwf	196,b	;volatile
 46824                           
 46825                           ;motor.c: 503: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46826  00BC68  0E55               	movlw	85
 46827  00BC6A  6EA7               	movwf	4007,c	;volsfr
 46828  00BC6C  0EAA               	movlw	170
 46829  00BC6E  6EA7               	movwf	4007,c	;volsfr
 46830                           
 46831                           ; BSR set to: 14
 46832  00BC70  81BF               	bsf	191,0,b	;volatile
 46833  00BC72                     i2l2496:
 46834                           
 46835                           ;motor.c: 504: };motor.c: 507: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46836                           
 46837                           ; BSR set to: 14
 46838  00BC72  90D8               	bcf	status,0,c
 46839  00BC74  0100               	movlb	0	; () banked
 46840  00BC76                     L74:
 46841  00BC76  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46842  00BC78  6EF6               	movwf	tblptrl,c
 46843  00BC7A  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46844  00BC7C  6EF7               	movwf	tblptrh,c
 46845  00BC7E  0E61               	movlw	low _motor_steps_lookup
 46846  00BC80  26F6               	addwf	tblptrl,f,c
 46847  00BC82  0E94               	movlw	high _motor_steps_lookup
 46848  00BC84  22F7               	addwfc	tblptrh,f,c
 46849  00BC86                     	if	1	;There are 3 active tblptr bytes
 46850  00BC86  6AF8               	clrf	tblptru,c
 46851  00BC88  0E00               	movlw	low (__mediumconst shr (0+16))
 46852  00BC8A  22F8               	addwfc	tblptru,f,c
 46853  00BC8C                     	endif
 46854  00BC8C  0009               	tblrd		*+
 46855  00BC8E  CFF5 F02C          	movff	tablat,??_motor_isr
 46856  00BC92  0009               	tblrd		*+
 46857  00BC94  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46858  00BC98  502C               	movf	??_motor_isr,w,c
 46859  00BC9A  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46860  00BC9C  502D               	movf	??_motor_isr+1,w,c
 46861  00BC9E  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46862  00BCA0  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 46863  00BCA2  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 46864  00BCA4  1E2E               	comf	??_motor_isr+2,f,c
 46865  00BCA6  1E2F               	comf	??_motor_isr+3,f,c
 46866  00BCA8  1E30               	comf	??_motor_isr+4,f,c
 46867  00BCAA  1E31               	comf	??_motor_isr+5,f,c
 46868  00BCAC  2A2E               	incf	??_motor_isr+2,f,c
 46869  00BCAE  0E00               	movlw	0
 46870  00BCB0  222F               	addwfc	??_motor_isr+3,f,c
 46871  00BCB2  2230               	addwfc	??_motor_isr+4,f,c
 46872  00BCB4  2231               	addwfc	??_motor_isr+5,f,c
 46873  00BCB6  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 46874  00BCBA  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 46875  00BCBE  90D8               	bcf	status,0,c
 46876  00BCC0  3632               	rlcf	??_motor_isr+6,f,c
 46877  00BCC2  3633               	rlcf	??_motor_isr+7,f,c
 46878  00BCC4  0E02               	movlw	2
 46879  00BCC6  2632               	addwf	??_motor_isr+6,f,c
 46880  00BCC8  0E00               	movlw	0
 46881  00BCCA  2233               	addwfc	??_motor_isr+7,f,c
 46882  00BCCC  0E61               	movlw	low _motor_steps_lookup
 46883  00BCCE  2432               	addwf	??_motor_isr+6,w,c
 46884  00BCD0  6EF6               	movwf	tblptrl,c
 46885  00BCD2  0E94               	movlw	high _motor_steps_lookup
 46886  00BCD4  2033               	addwfc	??_motor_isr+7,w,c
 46887  00BCD6  6EF7               	movwf	tblptrh,c
 46888  00BCD8                     	if	1	;There are 3 active tblptr bytes
 46889  00BCD8  6AF8               	clrf	tblptru,c
 46890  00BCDA  0E00               	movlw	low (__mediumconst shr (0+16))
 46891  00BCDC  22F8               	addwfc	tblptru,f,c
 46892  00BCDE                     	endif
 46893  00BCDE  0009               	tblrd		*+
 46894  00BCE0  CFF5 F034          	movff	tablat,??_motor_isr+8
 46895  00BCE4  0009               	tblrd		*+
 46896  00BCE6  CFF5 F035          	movff	tablat,??_motor_isr+9
 46897  00BCEA  5034               	movf	??_motor_isr+8,w,c
 46898  00BCEC  242E               	addwf	??_motor_isr+2,w,c
 46899  00BCEE  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 46900  00BCF0  5035               	movf	??_motor_isr+9,w,c
 46901  00BCF2  202F               	addwfc	??_motor_isr+3,w,c
 46902  00BCF4  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 46903  00BCF6  0E00               	movlw	0
 46904  00BCF8  2030               	addwfc	??_motor_isr+4,w,c
 46905  00BCFA  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46906  00BCFC  0E00               	movlw	0
 46907  00BCFE  2031               	addwfc	??_motor_isr+5,w,c
 46908  00BD00  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46909  00BD02  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46910  00BD04  2436               	addwf	??_motor_isr+10,w,c
 46911  00BD06  0102               	movlb	2	; () banked
 46912  00BD08  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46913  00BD0A  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46914  00BD0C  2037               	addwfc	??_motor_isr+11,w,c
 46915  00BD0E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46916  00BD10  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46917  00BD12  2038               	addwfc	??_motor_isr+12,w,c
 46918  00BD14  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46919  00BD16  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46920  00BD18  2039               	addwfc	??_motor_isr+13,w,c
 46921  00BD1A                     L75:
 46922  00BD1A  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 46923  00BD1C                     i2l2495:
 46924                           
 46925                           ; BSR set to: 2
 46926                           ;motor.c: 508: };motor.c: 509: };motor.c: 512: if(PIR1bits.TMR2IF)
 46927                           
 46928                           ; BSR set to: 2
 46929                           
 46930                           ; BSR set to: 2
 46931                           
 46932                           ; BSR set to: 2
 46933  00BD1C  A29E               	btfss	3998,1,c	;volatile
 46934  00BD1E  0012               	return	
 46935                           
 46936                           ; BSR set to: 2
 46937                           ;motor.c: 513: {;motor.c: 515: PIR1bits.TMR2IF = 0;
 46938  00BD20  929E               	bcf	3998,1,c	;volatile
 46939                           
 46940                           ; BSR set to: 2
 46941                           ;motor.c: 517: ++motor_current_stepcount;
 46942  00BD22  0E01               	movlw	1
 46943  00BD24  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46944  00BD26  0E00               	movlw	0
 46945  00BD28  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46946  00BD2A  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46947  00BD2C  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46948                           
 46949                           ;motor.c: 520: os.current_position_in_steps += motor_direction;
 46950  00BD2E  0101               	movlb	1	; () banked
 46951  00BD30  5155               	movf	_motor_direction& (0+255),w,b
 46952  00BD32  6E2C               	movwf	??_motor_isr& (0+255),c
 46953  00BD34  0E00               	movlw	0
 46954  00BD36  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46955  00BD38  0EFF               	movlw	255
 46956  00BD3A  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46957  00BD3C  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46958  00BD3E  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46959  00BD40  502C               	movf	??_motor_isr,w,c
 46960  00BD42  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46961  00BD44  502D               	movf	??_motor_isr+1,w,c
 46962  00BD46  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46963  00BD48  502E               	movf	??_motor_isr+2,w,c
 46964  00BD4A  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46965  00BD4C  502F               	movf	??_motor_isr+3,w,c
 46966  00BD4E  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46967                           
 46968                           ;motor.c: 521: if(os.current_position_in_steps==config.full_circle_in_steps)
 46969  00BD50  51A1               	movf	_config& (0+255),w,b
 46970  00BD52  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46971  00BD54  E112               	bnz	i2l18608
 46972  00BD56  51A2               	movf	(_config+1)& (0+255),w,b
 46973  00BD58  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46974  00BD5A  E10F               	bnz	i2l18608
 46975  00BD5C  51A3               	movf	(_config+2)& (0+255),w,b
 46976  00BD5E  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46977  00BD60  E10C               	bnz	i2l18608
 46978  00BD62  51A4               	movf	(_config+3)& (0+255),w,b
 46979  00BD64  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46980  00BD66  A4D8               	btfss	status,2,c
 46981  00BD68  D008               	goto	i2l2498
 46982                           
 46983                           ; BSR set to: 1
 46984                           ;motor.c: 522: os.current_position_in_steps = 0;
 46985  00BD6A  0E00               	movlw	0
 46986  00BD6C  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46987  00BD6E  0E00               	movlw	0
 46988  00BD70  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46989  00BD72  0E00               	movlw	0
 46990  00BD74  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46991  00BD76  0E00               	movlw	0
 46992  00BD78  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46993  00BD7A                     i2l2498:
 46994  00BD7A                     i2l18608:
 46995                           
 46996                           ; BSR set to: 1
 46997                           ;motor.c: 523: if(os.current_position_in_steps==0xFFFFFFFF)
 46998  00BD7A  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46999  00BD7C  E114               	bnz	i2l2479
 47000  00BD7E  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 47001  00BD80  E112               	bnz	i2l2479
 47002  00BD82  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 47003  00BD84  E110               	bnz	i2l2479
 47004  00BD86  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 47005  00BD88  A4D8               	btfss	status,2,c
 47006  00BD8A  0012               	return	
 47007                           
 47008                           ; BSR set to: 1
 47009                           ;motor.c: 524: os.current_position_in_steps = (config.full_circle_in_steps-1);
 47010  00BD8C  0EFF               	movlw	255
 47011  00BD8E  25A1               	addwf	_config& (0+255),w,b
 47012  00BD90  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 47013  00BD92  0EFF               	movlw	255
 47014  00BD94  21A2               	addwfc	(_config+1)& (0+255),w,b
 47015  00BD96  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 47016  00BD98  0EFF               	movlw	255
 47017  00BD9A  21A3               	addwfc	(_config+2)& (0+255),w,b
 47018  00BD9C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 47019  00BD9E  0EFF               	movlw	255
 47020  00BDA0  21A4               	addwfc	(_config+3)& (0+255),w,b
 47021  00BDA2  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 47022                           
 47023                           ; BSR set to: 1
 47024  00BDA4  0012               	return	
 47025  00BDA6                     i2l2479:
 47026  00BDA6  0012               	return		;funcret
 47027  00BDA8                     __end_of_motor_isr:
 47028                           	opt stack 0
 47029                           tosu	equ	0xFFF
 47030                           tosh	equ	0xFFE
 47031                           tosl	equ	0xFFD
 47032                           pclatu	equ	0xFFB
 47033                           pclath	equ	0xFFA
 47034                           tblptru	equ	0xFF8
 47035                           tblptrh	equ	0xFF7
 47036                           tblptrl	equ	0xFF6
 47037                           tablat	equ	0xFF5
 47038                           prodh	equ	0xFF4
 47039                           prodl	equ	0xFF3
 47040                           intcon	equ	0xFF2
 47041                           indf0	equ	0xFEF
 47042                           postinc0	equ	0xFEE
 47043                           fsr0h	equ	0xFEA
 47044                           fsr0l	equ	0xFE9
 47045                           wreg	equ	0xFE8
 47046                           indf1	equ	0xFE7
 47047                           postinc1	equ	0xFE6
 47048                           postdec1	equ	0xFE5
 47049                           plusw1	equ	0xFE3
 47050                           fsr1h	equ	0xFE2
 47051                           fsr1l	equ	0xFE1
 47052                           indf2	equ	0xFDF
 47053                           postinc2	equ	0xFDE
 47054                           postdec2	equ	0xFDD
 47055                           plusw2	equ	0xFDB
 47056                           fsr2h	equ	0xFDA
 47057                           fsr2l	equ	0xFD9
 47058                           status	equ	0xFD8
 47059                           
 47060 ;; *************** function _i2c_eeprom_writeUint32 *****************
 47061 ;; Defined at:
 47062 ;;		line 230 in file "i2c.c"
 47063 ;; Parameters:    Size  Location     Type
 47064 ;;  address         2   37[COMRAM] unsigned int 
 47065 ;;  data            4   39[COMRAM] unsigned long 
 47066 ;; Auto vars:     Size  Location     Type
 47067 ;;		None
 47068 ;; Return value:  Size  Location     Type
 47069 ;;                  1    wreg      void 
 47070 ;; Registers used:
 47071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47072 ;; Tracked objects:
 47073 ;;		On entry : 0/0
 47074 ;;		On exit  : 0/0
 47075 ;;		Unchanged: 0/0
 47076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47077 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47080 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47081 ;;Total ram usage:        6 bytes
 47082 ;; Hardware stack levels used:    1
 47083 ;; Hardware stack levels required when called:    3
 47084 ;; This function calls:
 47085 ;;		_i2c_eeprom_write
 47086 ;; This function is called by:
 47087 ;;		_motor_isr
 47088 ;; This function uses a non-reentrant model
 47089 ;;
 47090                           
 47091                           	psect	text189
 47092  015818                     __ptext189:
 47093                           	opt stack 0
 47094  015818                     _i2c_eeprom_writeUint32:
 47095                           	opt stack 13
 47096                           
 47097                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 47098                           
 47099                           ;incstack = 0
 47100  015818  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 47101  01581C  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 47102  015820  0E28               	movlw	low i2c_eeprom_writeUint32@data
 47103  015822  6E0D               	movwf	i2c_eeprom_write@data,c
 47104  015824  0E00               	movlw	high i2c_eeprom_writeUint32@data
 47105  015826  6E0E               	movwf	i2c_eeprom_write@data+1,c
 47106  015828  0E04               	movlw	4
 47107  01582A  6E0F               	movwf	i2c_eeprom_write@length,c
 47108  01582C  EC13  F09D         	call	_i2c_eeprom_write	;wreg free
 47109  015830  0012               	return		;funcret
 47110  015832                     __end_of_i2c_eeprom_writeUint32:
 47111                           	opt stack 0
 47112                           tosu	equ	0xFFF
 47113                           tosh	equ	0xFFE
 47114                           tosl	equ	0xFFD
 47115                           pclatu	equ	0xFFB
 47116                           pclath	equ	0xFFA
 47117                           tblptru	equ	0xFF8
 47118                           tblptrh	equ	0xFF7
 47119                           tblptrl	equ	0xFF6
 47120                           tablat	equ	0xFF5
 47121                           prodh	equ	0xFF4
 47122                           prodl	equ	0xFF3
 47123                           intcon	equ	0xFF2
 47124                           indf0	equ	0xFEF
 47125                           postinc0	equ	0xFEE
 47126                           fsr0h	equ	0xFEA
 47127                           fsr0l	equ	0xFE9
 47128                           wreg	equ	0xFE8
 47129                           indf1	equ	0xFE7
 47130                           postinc1	equ	0xFE6
 47131                           postdec1	equ	0xFE5
 47132                           plusw1	equ	0xFE3
 47133                           fsr1h	equ	0xFE2
 47134                           fsr1l	equ	0xFE1
 47135                           indf2	equ	0xFDF
 47136                           postinc2	equ	0xFDE
 47137                           postdec2	equ	0xFDD
 47138                           plusw2	equ	0xFDB
 47139                           fsr2h	equ	0xFDA
 47140                           fsr2l	equ	0xFD9
 47141                           status	equ	0xFD8
 47142                           
 47143 ;; *************** function _i2c_eeprom_write *****************
 47144 ;; Defined at:
 47145 ;;		line 242 in file "i2c.c"
 47146 ;; Parameters:    Size  Location     Type
 47147 ;;  address         2   10[COMRAM] unsigned int 
 47148 ;;  data            2   12[COMRAM] PTR unsigned char 
 47149 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 47150 ;;  length          1   14[COMRAM] unsigned char 
 47151 ;; Auto vars:     Size  Location     Type
 47152 ;;  dat            17   18[COMRAM] unsigned char [17]
 47153 ;;  cntr            1   36[COMRAM] unsigned char 
 47154 ;;  slave_addres    1   35[COMRAM] unsigned char 
 47155 ;; Return value:  Size  Location     Type
 47156 ;;                  1    wreg      void 
 47157 ;; Registers used:
 47158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47159 ;; Tracked objects:
 47160 ;;		On entry : 0/0
 47161 ;;		On exit  : 0/0
 47162 ;;		Unchanged: 0/0
 47163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47164 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47165 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47167 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47168 ;;Total ram usage:       27 bytes
 47169 ;; Hardware stack levels used:    1
 47170 ;; Hardware stack levels required when called:    2
 47171 ;; This function calls:
 47172 ;;		i2__i2c_eeprom_busy
 47173 ;;		i2__i2c_write
 47174 ;; This function is called by:
 47175 ;;		_i2c_eeprom_writeUint32
 47176 ;;		_i2c_eeprom_writeUint16
 47177 ;; This function uses a non-reentrant model
 47178 ;;
 47179                           
 47180                           	psect	text190
 47181  013A26                     __ptext190:
 47182                           	opt stack 0
 47183  013A26                     _i2c_eeprom_write:
 47184                           	opt stack 13
 47185                           
 47186                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 47187                           
 47188                           ;incstack = 0
 47189  013A26  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 47190  013A2A  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 47191  013A2E  0E07               	movlw	7
 47192  013A30  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 47193  013A32                     i2u1408_45:
 47194  013A32  90D8               	bcf	status,0,c
 47195  013A34  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 47196  013A36  3210               	rrcf	??_i2c_eeprom_write,f,c
 47197  013A38  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 47198  013A3A  D7FB               	goto	i2u1408_45
 47199  013A3C  5010               	movf	??_i2c_eeprom_write,w,c
 47200  013A3E  0B0E               	andlw	14
 47201  013A40  09A0               	iorlw	160
 47202  013A42  6E24               	movwf	i2c_eeprom_write@slave_address,c
 47203                           
 47204                           ;i2c.c: 249: dat[0] = address & 0xFF;
 47205  013A44  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 47206                           
 47207                           ;i2c.c: 251: length &= 0b00001111;
 47208  013A48  0E0F               	movlw	15
 47209  013A4A  160F               	andwf	i2c_eeprom_write@length,f,c
 47210                           
 47211                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 47212  013A4C  0E00               	movlw	0
 47213  013A4E  6E25               	movwf	i2c_eeprom_write@cntr,c
 47214  013A50  D018               	goto	i2l1203
 47215  013A52                     
 47216                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 47217  013A52  5025               	movf	i2c_eeprom_write@cntr,w,c
 47218  013A54  0D01               	mullw	1
 47219  013A56  50F3               	movf	prodl,w,c
 47220  013A58  240D               	addwf	i2c_eeprom_write@data,w,c
 47221  013A5A  6ED9               	movwf	fsr2l,c
 47222  013A5C  50F4               	movf	prodh,w,c
 47223  013A5E  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 47224  013A60  6EDA               	movwf	fsr2h,c
 47225  013A62  5025               	movf	i2c_eeprom_write@cntr,w,c
 47226  013A64  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 47227  013A66  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 47228  013A68  0E01               	movlw	1
 47229  013A6A  2610               	addwf	??_i2c_eeprom_write,f,c
 47230  013A6C  0E00               	movlw	0
 47231  013A6E  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 47232  013A70  0E13               	movlw	low i2c_eeprom_write@dat
 47233  013A72  2410               	addwf	??_i2c_eeprom_write,w,c
 47234  013A74  6EE1               	movwf	fsr1l,c
 47235  013A76  0E00               	movlw	high i2c_eeprom_write@dat
 47236  013A78  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 47237  013A7A  6EE2               	movwf	fsr1h,c
 47238  013A7C  CFDF FFE7          	movff	indf2,indf1
 47239  013A80  2A25               	incf	i2c_eeprom_write@cntr,f,c
 47240  013A82                     i2l1203:
 47241  013A82  500F               	movf	i2c_eeprom_write@length,w,c
 47242  013A84  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 47243  013A86  A0D8               	btfss	status,0,c
 47244  013A88  D7E4               	goto	i2l1204
 47245  013A8A                     i2u1409_40:
 47246                           
 47247                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 47248  013A8A  EC2B  F0AB         	call	i2__i2c_eeprom_busy	;wreg free
 47249  013A8E  0900               	iorlw	0
 47250  013A90  A4D8               	btfss	status,2,c
 47251  013A92  D7FB               	goto	i2u1409_40
 47252                           
 47253                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 47254  013A94  0E13               	movlw	low i2c_eeprom_write@dat
 47255  013A96  6E06               	movwf	i2__i2c_write@data,c
 47256  013A98  0E00               	movlw	high i2c_eeprom_write@dat
 47257  013A9A  6E07               	movwf	i2__i2c_write@data+1,c
 47258  013A9C  280F               	incf	i2c_eeprom_write@length,w,c
 47259  013A9E  6E08               	movwf	i2__i2c_write@length,c
 47260  013AA0  5024               	movf	i2c_eeprom_write@slave_address,w,c
 47261  013AA2  EC2E  F0A7         	call	i2__i2c_write
 47262  013AA6  0012               	return		;funcret
 47263  013AA8                     __end_of_i2c_eeprom_write:
 47264                           	opt stack 0
 47265                           tosu	equ	0xFFF
 47266                           tosh	equ	0xFFE
 47267                           tosl	equ	0xFFD
 47268                           pclatu	equ	0xFFB
 47269                           pclath	equ	0xFFA
 47270                           tblptru	equ	0xFF8
 47271                           tblptrh	equ	0xFF7
 47272                           tblptrl	equ	0xFF6
 47273                           tablat	equ	0xFF5
 47274                           prodh	equ	0xFF4
 47275                           prodl	equ	0xFF3
 47276                           intcon	equ	0xFF2
 47277                           indf0	equ	0xFEF
 47278                           postinc0	equ	0xFEE
 47279                           fsr0h	equ	0xFEA
 47280                           fsr0l	equ	0xFE9
 47281                           wreg	equ	0xFE8
 47282                           indf1	equ	0xFE7
 47283                           postinc1	equ	0xFE6
 47284                           postdec1	equ	0xFE5
 47285                           plusw1	equ	0xFE3
 47286                           fsr1h	equ	0xFE2
 47287                           fsr1l	equ	0xFE1
 47288                           indf2	equ	0xFDF
 47289                           postinc2	equ	0xFDE
 47290                           postdec2	equ	0xFDD
 47291                           plusw2	equ	0xFDB
 47292                           fsr2h	equ	0xFDA
 47293                           fsr2l	equ	0xFD9
 47294                           status	equ	0xFD8
 47295                           
 47296 ;; *************** function i2__i2c_write *****************
 47297 ;; Defined at:
 47298 ;;		line 84 in file "i2c.c"
 47299 ;; Parameters:    Size  Location     Type
 47300 ;;  slave_addres    1    wreg     unsigned char 
 47301 ;;  data            2    5[COMRAM] PTR unsigned char 
 47302 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 47303 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 47304 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 47305 ;;  length          1    7[COMRAM] unsigned char 
 47306 ;; Auto vars:     Size  Location     Type
 47307 ;;  slave_addres    1    8[COMRAM] unsigned char 
 47308 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 47309 ;; Return value:  Size  Location     Type
 47310 ;;                  1    wreg      void 
 47311 ;; Registers used:
 47312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47313 ;; Tracked objects:
 47314 ;;		On entry : 0/0
 47315 ;;		On exit  : 0/0
 47316 ;;		Unchanged: 0/0
 47317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47318 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47319 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47321 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47322 ;;Total ram usage:        5 bytes
 47323 ;; Hardware stack levels used:    1
 47324 ;; Hardware stack levels required when called:    1
 47325 ;; This function calls:
 47326 ;;		i2__i2c_send
 47327 ;;		i2__i2c_start
 47328 ;;		i2__i2c_stop
 47329 ;;		i2__i2c_wait_idle
 47330 ;; This function is called by:
 47331 ;;		_i2c_eeprom_write
 47332 ;; This function uses a non-reentrant model
 47333 ;;
 47334                           
 47335                           	psect	text191
 47336  014E5C                     __ptext191:
 47337                           	opt stack 0
 47338  014E5C                     i2__i2c_write:
 47339                           	opt stack 13
 47340                           
 47341                           ;incstack = 0
 47342                           ;i2__i2c_write@slave_address stored from wreg
 47343  014E5C  6E09               	movwf	i2__i2c_write@slave_address,c
 47344                           
 47345                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 47346  014E5E  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47347                           
 47348                           ;i2c.c: 89: _i2c_start();
 47349  014E62  ECB1  F0AC         	call	i2__i2c_start	;wreg free
 47350                           
 47351                           ;i2c.c: 90: _i2c_wait_idle();
 47352  014E66  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47353                           
 47354                           ;i2c.c: 91: _i2c_send(slave_address);
 47355  014E6A  5009               	movf	i2__i2c_write@slave_address,w,c
 47356  014E6C  ECB5  F0AC         	call	i2__i2c_send
 47357                           
 47358                           ;i2c.c: 92: _i2c_wait_idle();
 47359  014E70  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47360                           
 47361                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 47362  014E74  0E00               	movlw	0
 47363  014E76  6E0A               	movwf	i2__i2c_write@cntr,c
 47364  014E78  D00E               	goto	i2l1158
 47365  014E7A                     
 47366                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 47367  014E7A  500A               	movf	i2__i2c_write@cntr,w,c
 47368  014E7C  0D01               	mullw	1
 47369  014E7E  50F3               	movf	prodl,w,c
 47370  014E80  2406               	addwf	i2__i2c_write@data,w,c
 47371  014E82  6ED9               	movwf	fsr2l,c
 47372  014E84  50F4               	movf	prodh,w,c
 47373  014E86  2007               	addwfc	i2__i2c_write@data+1,w,c
 47374  014E88  6EDA               	movwf	fsr2h,c
 47375  014E8A  50DF               	movf	indf2,w,c
 47376  014E8C  ECB5  F0AC         	call	i2__i2c_send
 47377                           
 47378                           ;i2c.c: 97: _i2c_wait_idle();
 47379  014E90  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47380  014E94  2A0A               	incf	i2__i2c_write@cntr,f,c
 47381  014E96                     i2l1158:
 47382  014E96  5008               	movf	i2__i2c_write@length,w,c
 47383  014E98  5C0A               	subwf	i2__i2c_write@cntr,w,c
 47384  014E9A  A0D8               	btfss	status,0,c
 47385  014E9C  D7EE               	goto	i2l1159
 47386                           
 47387                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 47388  014E9E  ECAD  F0AC         	call	i2__i2c_stop	;wreg free
 47389  014EA2  0012               	return		;funcret
 47390  014EA4                     __end_ofi2__i2c_write:
 47391                           	opt stack 0
 47392                           tosu	equ	0xFFF
 47393                           tosh	equ	0xFFE
 47394                           tosl	equ	0xFFD
 47395                           pclatu	equ	0xFFB
 47396                           pclath	equ	0xFFA
 47397                           tblptru	equ	0xFF8
 47398                           tblptrh	equ	0xFF7
 47399                           tblptrl	equ	0xFF6
 47400                           tablat	equ	0xFF5
 47401                           prodh	equ	0xFF4
 47402                           prodl	equ	0xFF3
 47403                           intcon	equ	0xFF2
 47404                           indf0	equ	0xFEF
 47405                           postinc0	equ	0xFEE
 47406                           fsr0h	equ	0xFEA
 47407                           fsr0l	equ	0xFE9
 47408                           wreg	equ	0xFE8
 47409                           indf1	equ	0xFE7
 47410                           postinc1	equ	0xFE6
 47411                           postdec1	equ	0xFE5
 47412                           plusw1	equ	0xFE3
 47413                           fsr1h	equ	0xFE2
 47414                           fsr1l	equ	0xFE1
 47415                           indf2	equ	0xFDF
 47416                           postinc2	equ	0xFDE
 47417                           postdec2	equ	0xFDD
 47418                           plusw2	equ	0xFDB
 47419                           fsr2h	equ	0xFDA
 47420                           fsr2l	equ	0xFD9
 47421                           status	equ	0xFD8
 47422                           
 47423 ;; *************** function i2__i2c_eeprom_busy *****************
 47424 ;; Defined at:
 47425 ;;		line 169 in file "i2c.c"
 47426 ;; Parameters:    Size  Location     Type
 47427 ;;		None
 47428 ;; Auto vars:     Size  Location     Type
 47429 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 47430 ;; Return value:  Size  Location     Type
 47431 ;;                  1    wreg      unsigned char 
 47432 ;; Registers used:
 47433 ;;		wreg, status,2, status,0, cstack
 47434 ;; Tracked objects:
 47435 ;;		On entry : 0/0
 47436 ;;		On exit  : 0/0
 47437 ;;		Unchanged: 0/0
 47438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47443 ;;Total ram usage:        1 bytes
 47444 ;; Hardware stack levels used:    1
 47445 ;; Hardware stack levels required when called:    1
 47446 ;; This function calls:
 47447 ;;		i2__i2c_send
 47448 ;;		i2__i2c_start
 47449 ;;		i2__i2c_stop
 47450 ;;		i2__i2c_wait_idle
 47451 ;; This function is called by:
 47452 ;;		_i2c_eeprom_write
 47453 ;; This function uses a non-reentrant model
 47454 ;;
 47455                           
 47456                           	psect	text192
 47457  015656                     __ptext192:
 47458                           	opt stack 0
 47459  015656                     i2__i2c_eeprom_busy:
 47460                           	opt stack 13
 47461                           
 47462                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 47463                           
 47464                           ;incstack = 0
 47465  015656  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47466                           
 47467                           ;i2c.c: 173: _i2c_start();
 47468  01565A  ECB1  F0AC         	call	i2__i2c_start	;wreg free
 47469                           
 47470                           ;i2c.c: 174: _i2c_wait_idle();
 47471  01565E  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47472                           
 47473                           ;i2c.c: 175: _i2c_send(0b10100000);
 47474  015662  0EA0               	movlw	160
 47475  015664  ECB5  F0AC         	call	i2__i2c_send
 47476                           
 47477                           ;i2c.c: 176: _i2c_wait_idle();
 47478  015668  EC57  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47479                           
 47480                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 47481  01566C  0E00               	movlw	0
 47482  01566E  BCC5               	btfsc	4037,6,c	;volatile
 47483  015670  0E01               	movlw	1
 47484  015672  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 47485                           
 47486                           ;i2c.c: 181: _i2c_stop();
 47487  015674  ECAD  F0AC         	call	i2__i2c_stop	;wreg free
 47488                           
 47489                           ;i2c.c: 183: return 0;
 47490  015678  0E00               	movlw	0
 47491  01567A  0012               	return	
 47492  01567C                     __end_ofi2__i2c_eeprom_busy:
 47493                           	opt stack 0
 47494                           tosu	equ	0xFFF
 47495                           tosh	equ	0xFFE
 47496                           tosl	equ	0xFFD
 47497                           pclatu	equ	0xFFB
 47498                           pclath	equ	0xFFA
 47499                           tblptru	equ	0xFF8
 47500                           tblptrh	equ	0xFF7
 47501                           tblptrl	equ	0xFF6
 47502                           tablat	equ	0xFF5
 47503                           prodh	equ	0xFF4
 47504                           prodl	equ	0xFF3
 47505                           intcon	equ	0xFF2
 47506                           indf0	equ	0xFEF
 47507                           postinc0	equ	0xFEE
 47508                           fsr0h	equ	0xFEA
 47509                           fsr0l	equ	0xFE9
 47510                           wreg	equ	0xFE8
 47511                           indf1	equ	0xFE7
 47512                           postinc1	equ	0xFE6
 47513                           postdec1	equ	0xFE5
 47514                           plusw1	equ	0xFE3
 47515                           fsr1h	equ	0xFE2
 47516                           fsr1l	equ	0xFE1
 47517                           indf2	equ	0xFDF
 47518                           postinc2	equ	0xFDE
 47519                           postdec2	equ	0xFDD
 47520                           plusw2	equ	0xFDB
 47521                           fsr2h	equ	0xFDA
 47522                           fsr2l	equ	0xFD9
 47523                           status	equ	0xFD8
 47524                           
 47525 ;; *************** function i2__i2c_wait_idle *****************
 47526 ;; Defined at:
 47527 ;;		line 40 in file "i2c.c"
 47528 ;; Parameters:    Size  Location     Type
 47529 ;;		None
 47530 ;; Auto vars:     Size  Location     Type
 47531 ;;		None
 47532 ;; Return value:  Size  Location     Type
 47533 ;;                  1    wreg      void 
 47534 ;; Registers used:
 47535 ;;		wreg, status,2, status,0
 47536 ;; Tracked objects:
 47537 ;;		On entry : 0/0
 47538 ;;		On exit  : 0/0
 47539 ;;		Unchanged: 0/0
 47540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47543 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47544 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47545 ;;Total ram usage:        5 bytes
 47546 ;; Hardware stack levels used:    1
 47547 ;; This function calls:
 47548 ;;		Nothing
 47549 ;; This function is called by:
 47550 ;;		i2__i2c_write
 47551 ;;		i2__i2c_eeprom_busy
 47552 ;; This function uses a non-reentrant model
 47553 ;;
 47554                           
 47555                           	psect	text193
 47556  0148AE                     __ptext193:
 47557                           	opt stack 0
 47558  0148AE                     i2__i2c_wait_idle:
 47559                           	opt stack 13
 47560                           
 47561                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 47562                           
 47563                           ;incstack = 0
 47564  0148AE  A4C7               	btfss	4039,2,c	;volatile
 47565  0148B0  D003               	goto	i2u1285_40
 47566  0148B2  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47567  0148B4  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 47568  0148B6  D001               	goto	i2u1285_48
 47569  0148B8                     i2u1285_40:
 47570  0148B8  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47571  0148BA                     i2u1285_48:
 47572  0148BA  A0C5               	btfss	4037,0,c	;volatile
 47573  0148BC  D003               	goto	i2u1286_40
 47574  0148BE  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47575  0148C0  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 47576  0148C2  D001               	goto	i2u1286_48
 47577  0148C4                     i2u1286_40:
 47578  0148C4  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47579  0148C6                     i2u1286_48:
 47580  0148C6  A2C5               	btfss	4037,1,c	;volatile
 47581  0148C8  D003               	goto	i2u1287_40
 47582  0148CA  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47583  0148CC  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 47584  0148CE  D001               	goto	i2u1287_48
 47585  0148D0                     i2u1287_40:
 47586  0148D0  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47587  0148D2                     i2u1287_48:
 47588  0148D2  A4C5               	btfss	4037,2,c	;volatile
 47589  0148D4  D003               	goto	i2u1288_40
 47590  0148D6  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47591  0148D8  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 47592  0148DA  D001               	goto	i2u1288_48
 47593  0148DC                     i2u1288_40:
 47594  0148DC  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47595  0148DE                     i2u1288_48:
 47596  0148DE  A6C5               	btfss	4037,3,c	;volatile
 47597  0148E0  D003               	goto	i2u1289_40
 47598  0148E2  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47599  0148E4  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 47600  0148E6  D001               	goto	i2u1289_48
 47601  0148E8                     i2u1289_40:
 47602  0148E8  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47603  0148EA                     i2u1289_48:
 47604  0148EA  A8C5               	btfss	4037,4,c	;volatile
 47605  0148EC  D002               	goto	i2u1290_40
 47606  0148EE  0E01               	movlw	1
 47607  0148F0  D001               	goto	i2u1290_46
 47608  0148F2                     i2u1290_40:
 47609  0148F2  0E00               	movlw	0
 47610  0148F4                     i2u1290_46:
 47611  0148F4  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 47612  0148F6  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 47613  0148F8  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 47614  0148FA  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 47615  0148FC  1001               	iorwf	??i2__i2c_wait_idle,w,c
 47616  0148FE  0900               	iorlw	0
 47617  014900  B4D8               	btfsc	status,2,c
 47618  014902  0012               	return	
 47619  014904  D7D4               	goto	i2__i2c_wait_idle
 47620  014906                     __end_ofi2__i2c_wait_idle:
 47621                           	opt stack 0
 47622                           tosu	equ	0xFFF
 47623                           tosh	equ	0xFFE
 47624                           tosl	equ	0xFFD
 47625                           pclatu	equ	0xFFB
 47626                           pclath	equ	0xFFA
 47627                           tblptru	equ	0xFF8
 47628                           tblptrh	equ	0xFF7
 47629                           tblptrl	equ	0xFF6
 47630                           tablat	equ	0xFF5
 47631                           prodh	equ	0xFF4
 47632                           prodl	equ	0xFF3
 47633                           intcon	equ	0xFF2
 47634                           indf0	equ	0xFEF
 47635                           postinc0	equ	0xFEE
 47636                           fsr0h	equ	0xFEA
 47637                           fsr0l	equ	0xFE9
 47638                           wreg	equ	0xFE8
 47639                           indf1	equ	0xFE7
 47640                           postinc1	equ	0xFE6
 47641                           postdec1	equ	0xFE5
 47642                           plusw1	equ	0xFE3
 47643                           fsr1h	equ	0xFE2
 47644                           fsr1l	equ	0xFE1
 47645                           indf2	equ	0xFDF
 47646                           postinc2	equ	0xFDE
 47647                           postdec2	equ	0xFDD
 47648                           plusw2	equ	0xFDB
 47649                           fsr2h	equ	0xFDA
 47650                           fsr2l	equ	0xFD9
 47651                           status	equ	0xFD8
 47652                           
 47653 ;; *************** function i2__i2c_stop *****************
 47654 ;; Defined at:
 47655 ;;		line 63 in file "i2c.c"
 47656 ;; Parameters:    Size  Location     Type
 47657 ;;		None
 47658 ;; Auto vars:     Size  Location     Type
 47659 ;;		None
 47660 ;; Return value:  Size  Location     Type
 47661 ;;                  1    wreg      void 
 47662 ;; Registers used:
 47663 ;;		None
 47664 ;; Tracked objects:
 47665 ;;		On entry : 0/0
 47666 ;;		On exit  : 0/0
 47667 ;;		Unchanged: 0/0
 47668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47673 ;;Total ram usage:        0 bytes
 47674 ;; Hardware stack levels used:    1
 47675 ;; This function calls:
 47676 ;;		Nothing
 47677 ;; This function is called by:
 47678 ;;		i2__i2c_write
 47679 ;;		i2__i2c_eeprom_busy
 47680 ;; This function uses a non-reentrant model
 47681 ;;
 47682                           
 47683                           	psect	text194
 47684  01595A                     __ptext194:
 47685                           	opt stack 0
 47686  01595A                     i2__i2c_stop:
 47687                           	opt stack 13
 47688                           
 47689                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 47690                           
 47691                           ;incstack = 0
 47692  01595A  84C5               	bsf	4037,2,c	;volatile
 47693  01595C  A4C5               	btfss	4037,2,c	;volatile
 47694  01595E  0012               	return	
 47695  015960  D7FD               	goto	i2l1141
 47696  015962                     __end_ofi2__i2c_stop:
 47697                           	opt stack 0
 47698                           tosu	equ	0xFFF
 47699                           tosh	equ	0xFFE
 47700                           tosl	equ	0xFFD
 47701                           pclatu	equ	0xFFB
 47702                           pclath	equ	0xFFA
 47703                           tblptru	equ	0xFF8
 47704                           tblptrh	equ	0xFF7
 47705                           tblptrl	equ	0xFF6
 47706                           tablat	equ	0xFF5
 47707                           prodh	equ	0xFF4
 47708                           prodl	equ	0xFF3
 47709                           intcon	equ	0xFF2
 47710                           indf0	equ	0xFEF
 47711                           postinc0	equ	0xFEE
 47712                           fsr0h	equ	0xFEA
 47713                           fsr0l	equ	0xFE9
 47714                           wreg	equ	0xFE8
 47715                           indf1	equ	0xFE7
 47716                           postinc1	equ	0xFE6
 47717                           postdec1	equ	0xFE5
 47718                           plusw1	equ	0xFE3
 47719                           fsr1h	equ	0xFE2
 47720                           fsr1l	equ	0xFE1
 47721                           indf2	equ	0xFDF
 47722                           postinc2	equ	0xFDE
 47723                           postdec2	equ	0xFDD
 47724                           plusw2	equ	0xFDB
 47725                           fsr2h	equ	0xFDA
 47726                           fsr2l	equ	0xFD9
 47727                           status	equ	0xFD8
 47728                           
 47729 ;; *************** function i2__i2c_start *****************
 47730 ;; Defined at:
 47731 ;;		line 45 in file "i2c.c"
 47732 ;; Parameters:    Size  Location     Type
 47733 ;;		None
 47734 ;; Auto vars:     Size  Location     Type
 47735 ;;		None
 47736 ;; Return value:  Size  Location     Type
 47737 ;;                  1    wreg      void 
 47738 ;; Registers used:
 47739 ;;		None
 47740 ;; Tracked objects:
 47741 ;;		On entry : 0/0
 47742 ;;		On exit  : 0/0
 47743 ;;		Unchanged: 0/0
 47744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47749 ;;Total ram usage:        0 bytes
 47750 ;; Hardware stack levels used:    1
 47751 ;; This function calls:
 47752 ;;		Nothing
 47753 ;; This function is called by:
 47754 ;;		i2__i2c_write
 47755 ;;		i2__i2c_eeprom_busy
 47756 ;; This function uses a non-reentrant model
 47757 ;;
 47758                           
 47759                           	psect	text195
 47760  015962                     __ptext195:
 47761                           	opt stack 0
 47762  015962                     i2__i2c_start:
 47763                           	opt stack 13
 47764                           
 47765                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 47766                           
 47767                           ;incstack = 0
 47768  015962  80C5               	bsf	4037,0,c	;volatile
 47769  015964  A0C5               	btfss	4037,0,c	;volatile
 47770  015966  0012               	return	
 47771  015968  D7FD               	goto	i2l1126
 47772  01596A                     __end_ofi2__i2c_start:
 47773                           	opt stack 0
 47774                           tosu	equ	0xFFF
 47775                           tosh	equ	0xFFE
 47776                           tosl	equ	0xFFD
 47777                           pclatu	equ	0xFFB
 47778                           pclath	equ	0xFFA
 47779                           tblptru	equ	0xFF8
 47780                           tblptrh	equ	0xFF7
 47781                           tblptrl	equ	0xFF6
 47782                           tablat	equ	0xFF5
 47783                           prodh	equ	0xFF4
 47784                           prodl	equ	0xFF3
 47785                           intcon	equ	0xFF2
 47786                           indf0	equ	0xFEF
 47787                           postinc0	equ	0xFEE
 47788                           fsr0h	equ	0xFEA
 47789                           fsr0l	equ	0xFE9
 47790                           wreg	equ	0xFE8
 47791                           indf1	equ	0xFE7
 47792                           postinc1	equ	0xFE6
 47793                           postdec1	equ	0xFE5
 47794                           plusw1	equ	0xFE3
 47795                           fsr1h	equ	0xFE2
 47796                           fsr1l	equ	0xFE1
 47797                           indf2	equ	0xFDF
 47798                           postinc2	equ	0xFDE
 47799                           postdec2	equ	0xFDD
 47800                           plusw2	equ	0xFDB
 47801                           fsr2h	equ	0xFDA
 47802                           fsr2l	equ	0xFD9
 47803                           status	equ	0xFD8
 47804                           
 47805 ;; *************** function i2__i2c_send *****************
 47806 ;; Defined at:
 47807 ;;		line 51 in file "i2c.c"
 47808 ;; Parameters:    Size  Location     Type
 47809 ;;  dat             1    wreg     unsigned char 
 47810 ;; Auto vars:     Size  Location     Type
 47811 ;;  dat             1    0[COMRAM] unsigned char 
 47812 ;; Return value:  Size  Location     Type
 47813 ;;                  1    wreg      void 
 47814 ;; Registers used:
 47815 ;;		wreg
 47816 ;; Tracked objects:
 47817 ;;		On entry : 0/0
 47818 ;;		On exit  : 0/0
 47819 ;;		Unchanged: 0/0
 47820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47825 ;;Total ram usage:        1 bytes
 47826 ;; Hardware stack levels used:    1
 47827 ;; This function calls:
 47828 ;;		Nothing
 47829 ;; This function is called by:
 47830 ;;		i2__i2c_write
 47831 ;;		i2__i2c_eeprom_busy
 47832 ;; This function uses a non-reentrant model
 47833 ;;
 47834                           
 47835                           	psect	text196
 47836  01596A                     __ptext196:
 47837                           	opt stack 0
 47838  01596A                     i2__i2c_send:
 47839                           	opt stack 13
 47840                           
 47841                           ;incstack = 0
 47842                           ;i2__i2c_send@dat stored from wreg
 47843  01596A  6E01               	movwf	i2__i2c_send@dat,c
 47844                           
 47845                           ;i2c.c: 53: SSP1BUF = dat;
 47846  01596C  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 47847  015970  0012               	return		;funcret
 47848  015972                     __end_ofi2__i2c_send:
 47849                           	opt stack 0
 47850                           tosu	equ	0xFFF
 47851                           tosh	equ	0xFFE
 47852                           tosl	equ	0xFFD
 47853                           pclatu	equ	0xFFB
 47854                           pclath	equ	0xFFA
 47855                           tblptru	equ	0xFF8
 47856                           tblptrh	equ	0xFF7
 47857                           tblptrl	equ	0xFF6
 47858                           tablat	equ	0xFF5
 47859                           prodh	equ	0xFF4
 47860                           prodl	equ	0xFF3
 47861                           intcon	equ	0xFF2
 47862                           indf0	equ	0xFEF
 47863                           postinc0	equ	0xFEE
 47864                           fsr0h	equ	0xFEA
 47865                           fsr0l	equ	0xFE9
 47866                           wreg	equ	0xFE8
 47867                           indf1	equ	0xFE7
 47868                           postinc1	equ	0xFE6
 47869                           postdec1	equ	0xFE5
 47870                           plusw1	equ	0xFE3
 47871                           fsr1h	equ	0xFE2
 47872                           fsr1l	equ	0xFE1
 47873                           indf2	equ	0xFDF
 47874                           postinc2	equ	0xFDE
 47875                           postdec2	equ	0xFDD
 47876                           plusw2	equ	0xFDB
 47877                           fsr2h	equ	0xFDA
 47878                           fsr2l	equ	0xFD9
 47879                           status	equ	0xFD8
 47880                           
 47881 ;; *************** function _USBDeviceTasks *****************
 47882 ;; Defined at:
 47883 ;;		line 477 in file "usb_device.c"
 47884 ;; Parameters:    Size  Location     Type
 47885 ;;		None
 47886 ;; Auto vars:     Size  Location     Type
 47887 ;;  i               1   30[COMRAM] unsigned char 
 47888 ;; Return value:  Size  Location     Type
 47889 ;;                  1    wreg      void 
 47890 ;; Registers used:
 47891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47892 ;; Tracked objects:
 47893 ;;		On entry : 0/0
 47894 ;;		On exit  : 0/0
 47895 ;;		Unchanged: 0/0
 47896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47901 ;;Total ram usage:        1 bytes
 47902 ;; Hardware stack levels used:    1
 47903 ;; Hardware stack levels required when called:    8
 47904 ;; This function calls:
 47905 ;;		_USBCtrlEPAllowStatusStage
 47906 ;;		_USBCtrlEPService
 47907 ;;		_USBIncrement1msInternalTimers
 47908 ;;		_USBStallHandler
 47909 ;;		_USBSuspend
 47910 ;;		_USBWakeFromSuspend
 47911 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47912 ;;		i2_USBDeviceInit
 47913 ;; This function is called by:
 47914 ;;		_SYS_InterruptHigh
 47915 ;; This function uses a non-reentrant model
 47916 ;;
 47917                           
 47918                           	psect	text197
 47919  00FFA2                     __ptext197:
 47920                           	opt stack 0
 47921  00FFA2                     _USBDeviceTasks:
 47922                           	opt stack 9
 47923                           
 47924                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 47925                           
 47926                           ;incstack = 0
 47927  00FFA2  045E               	decf	_USBDeviceState,w,c	;volatile
 47928  00FFA4  B4D8               	btfsc	status,2,c
 47929                           
 47930                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 47931  00FFA6  BA65               	btfsc	3941,5,c	;volatile
 47932  00FFA8  D007               	goto	i2l155
 47933                           
 47934                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 47935  00FFAA  0E00               	movlw	0
 47936  00FFAC  6E62               	movwf	3938,c	;volatile
 47937                           
 47938                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 47939  00FFAE  010F               	movlb	15	; () banked
 47940  00FFB0  8136               	bsf	54,0,b	;volatile
 47941                           
 47942                           ; BSR set to: 15
 47943                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 47944  00FFB2  8936               	bsf	54,4,b	;volatile
 47945                           
 47946                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 47947  00FFB4  0E02               	movlw	2
 47948  00FFB6  6E5E               	movwf	_USBDeviceState,c	;volatile
 47949  00FFB8                     i2l155:
 47950                           
 47951                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 47952                           
 47953                           ; BSR set to: 15
 47954                           
 47955                           ; BSR set to: 15
 47956  00FFB8  A462               	btfss	3938,2,c	;volatile
 47957  00FFBA  D006               	goto	i2l156
 47958  00FFBC  010F               	movlb	15	; () banked
 47959  00FFBE  A536               	btfss	54,2,b	;volatile
 47960  00FFC0  D003               	goto	i2l156
 47961                           
 47962                           ; BSR set to: 15
 47963                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 47964  00FFC2  9462               	bcf	3938,2,c	;volatile
 47965                           
 47966                           ; BSR set to: 15
 47967                           ;usb_device.c: 640: USBWakeFromSuspend();
 47968  00FFC4  ECEC  F0A8         	call	_USBWakeFromSuspend	;wreg free
 47969  00FFC8                     i2l156:
 47970                           
 47971                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 47972  00FFC8  A265               	btfss	3941,1,c	;volatile
 47973  00FFCA  D002               	goto	i2l157
 47974                           
 47975                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 47976  00FFCC  98A1               	bcf	4001,4,c	;volatile
 47977                           
 47978                           ;usb_device.c: 650: return;
 47979  00FFCE  0012               	return	
 47980  00FFD0                     i2l157:
 47981                           
 47982                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 47983  00FFD0  A062               	btfss	3938,0,c	;volatile
 47984  00FFD2  D009               	goto	i2l159
 47985  00FFD4  010F               	movlb	15	; () banked
 47986  00FFD6  A136               	btfss	54,0,b	;volatile
 47987  00FFD8  D006               	goto	i2l159
 47988                           
 47989                           ; BSR set to: 15
 47990                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 47991  00FFDA  EC74  F080         	call	i2_USBDeviceInit	;wreg free
 47992                           
 47993                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 47994  00FFDE  88A0               	bsf	4000,4,c	;volatile
 47995                           
 47996                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 47997  00FFE0  0E04               	movlw	4
 47998  00FFE2  6E5E               	movwf	_USBDeviceState,c	;volatile
 47999                           
 48000                           ;usb_device.c: 681: (UIR &= 0xFE);
 48001  00FFE4  9062               	bcf	3938,0,c	;volatile
 48002  00FFE6                     i2l159:
 48003                           
 48004                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 48005  00FFE6  A862               	btfss	3938,4,c	;volatile
 48006  00FFE8  D004               	goto	i2l160
 48007  00FFEA  010F               	movlb	15	; () banked
 48008  00FFEC  B936               	btfsc	54,4,b	;volatile
 48009                           
 48010                           ; BSR set to: 15
 48011                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 48012  00FFEE  ECEC  F0A9         	call	_USBSuspend	;wreg free
 48013  00FFF2                     i2l160:
 48014                           
 48015                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 48016  00FFF2  AC62               	btfss	3938,6,c	;volatile
 48017  00FFF4  D01C               	goto	i2l164
 48018                           
 48019                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 48020  00FFF6  010F               	movlb	15	; () banked
 48021  00FFF8  AD36               	btfss	54,6,b	;volatile
 48022  00FFFA  D00E               	goto	i2l162
 48023                           
 48024                           ; BSR set to: 15
 48025                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 48026  00FFFC  0E00               	movlw	0
 48027  00FFFE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48028  010000  0E73               	movlw	115
 48029  010002  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48030  010004  0E00               	movlw	0
 48031  010006  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48032  010008  0E00               	movlw	0
 48033  01000A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48034  01000C  0E00               	movlw	0
 48035  01000E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48036  010010  0E01               	movlw	1
 48037  010012  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48038  010014  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48039  010018                     i2l162:
 48040                           
 48041                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 48042  010018  9C62               	bcf	3938,6,c	;volatile
 48043                           
 48044                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 48045  01001A  ECB8  F0AB         	call	_USBIncrement1msInternalTimers	;wreg free
 48046                           
 48047                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 48048  01001E  0101               	movlb	1	; () banked
 48049  010020  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48050  010022  A4D8               	btfss	status,2,c
 48051                           
 48052                           ; BSR set to: 1
 48053                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 48054  010024  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 48055                           
 48056                           ; BSR set to: 1
 48057                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 48058                           
 48059                           ; BSR set to: 1
 48060  010026  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48061  010028  B4D8               	btfsc	status,2,c
 48062                           
 48063                           ; BSR set to: 1
 48064                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 48065  01002A  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 48066  01002E                     i2l164:
 48067                           
 48068                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 48069  01002E  AA62               	btfss	3938,5,c	;volatile
 48070  010030  D004               	goto	i2l165
 48071  010032  010F               	movlb	15	; () banked
 48072  010034  BB36               	btfsc	54,5,b	;volatile
 48073                           
 48074                           ; BSR set to: 15
 48075                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 48076  010036  ECDB  F0A7         	call	_USBStallHandler	;wreg free
 48077  01003A                     i2l165:
 48078                           
 48079                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 48080  01003A  A262               	btfss	3938,1,c	;volatile
 48081  01003C  D012               	goto	i2l166
 48082  01003E  010F               	movlb	15	; () banked
 48083  010040  A336               	btfss	54,1,b	;volatile
 48084  010042  D00F               	goto	i2l166
 48085                           
 48086                           ; BSR set to: 15
 48087                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 48088  010044  0E7F               	movlw	127
 48089  010046  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48090  010048  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48091  01004A  0E00               	movlw	0
 48092  01004C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48093  01004E  0E00               	movlw	0
 48094  010050  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48095  010052  0E00               	movlw	0
 48096  010054  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48097  010056  0E01               	movlw	1
 48098  010058  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48099  01005A  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48100                           
 48101                           ;usb_device.c: 759: {UEIR = 0;};
 48102  01005E  0E00               	movlw	0
 48103  010060  6E63               	movwf	3939,c	;volatile
 48104  010062                     i2l166:
 48105                           
 48106                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 48107  010062  0E04               	movlw	4
 48108  010064  605E               	cpfslt	_USBDeviceState,c	;volatile
 48109  010066  D002               	goto	i2l167
 48110                           
 48111                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 48112  010068  98A1               	bcf	4001,4,c	;volatile
 48113                           
 48114                           ;usb_device.c: 777: return;
 48115  01006A  0012               	return	
 48116  01006C                     i2l167:
 48117                           
 48118                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 48119  01006C  010F               	movlb	15	; () banked
 48120  01006E  A736               	btfss	54,3,b	;volatile
 48121  010070  D039               	goto	i2u1700_40
 48122                           
 48123                           ; BSR set to: 15
 48124                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 48125  010072  0E00               	movlw	0
 48126  010074  6E1F               	movwf	USBDeviceTasks@i,c
 48127  010076                     i2l17558:
 48128                           
 48129                           ; BSR set to: 15
 48130  010076  0E03               	movlw	3
 48131  010078  641F               	cpfsgt	USBDeviceTasks@i,c
 48132  01007A  D001               	goto	i2l169
 48133  01007C  D033               	goto	i2u1700_40
 48134  01007E                     i2l169:
 48135                           
 48136                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 48137  01007E  A662               	btfss	3938,3,c	;volatile
 48138  010080  D031               	goto	i2u1700_40
 48139                           
 48140                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 48141  010082  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 48142                           
 48143                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 48144  010086  0101               	movlb	1	; () banked
 48145  010088  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 48146  01008A  32E8               	rrcf	wreg,f,c
 48147  01008C  32E8               	rrcf	wreg,f,c
 48148  01008E  0B0F               	andlw	15
 48149  010090  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 48150                           
 48151                           ; BSR set to: 1
 48152                           ;usb_device.c: 793: (UIR &= 0xF7);
 48153  010092  9662               	bcf	3938,3,c	;volatile
 48154                           
 48155                           ; BSR set to: 1
 48156                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 48157  010094  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 48158  010096  D007               	goto	i2l172
 48159                           
 48160                           ; BSR set to: 1
 48161                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 48162  010098  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48163  01009A  0D01               	mullw	1
 48164  01009C  0E39               	movlw	low _ep_data_out
 48165  01009E  24F3               	addwf	prodl,w,c
 48166  0100A0  6ED9               	movwf	fsr2l,c
 48167  0100A2  0E01               	movlw	high _ep_data_out
 48168  0100A4  D006               	goto	L76
 48169  0100A6                     i2l172:
 48170                           
 48171                           ; BSR set to: 1
 48172                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 48173                           
 48174                           ; BSR set to: 1
 48175  0100A6  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48176  0100A8  0D01               	mullw	1
 48177  0100AA  0E3C               	movlw	low _ep_data_in
 48178  0100AC  24F3               	addwf	prodl,w,c
 48179  0100AE  6ED9               	movwf	fsr2l,c
 48180  0100B0  0E01               	movlw	high _ep_data_in
 48181  0100B2                     L76:
 48182  0100B2  20F4               	addwfc	prodh,w,c
 48183  0100B4  6EDA               	movwf	fsr2h,c
 48184  0100B6  70DF               	btg	indf2,0,c
 48185                           
 48186                           ; BSR set to: 1
 48187                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 48188                           
 48189                           ; BSR set to: 1
 48190  0100B8  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48191  0100BA  A4D8               	btfss	status,2,c
 48192  0100BC  D003               	goto	i2l174
 48193                           
 48194                           ; BSR set to: 1
 48195                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 48196  0100BE  ECAD  F099         	call	_USBCtrlEPService	;wreg free
 48197                           
 48198                           ;usb_device.c: 813: }
 48199  0100C2  D00E               	goto	i2l176
 48200  0100C4                     i2l174:
 48201                           
 48202                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 48203  0100C4  0E00               	movlw	0
 48204  0100C6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48205  0100C8  0E72               	movlw	114
 48206  0100CA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48207  0100CC  0EC1               	movlw	low _USTATcopy
 48208  0100CE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48209  0100D0  0E01               	movlw	high _USTATcopy
 48210  0100D2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48211  0100D4  0E00               	movlw	0
 48212  0100D6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48213  0100D8  0E00               	movlw	0
 48214  0100DA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48215  0100DC  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48216  0100E0                     i2l176:
 48217  0100E0  2A1F               	incf	USBDeviceTasks@i,f,c
 48218  0100E2  D7C9               	goto	i2l17558
 48219  0100E4                     i2u1700_40:
 48220                           
 48221                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 48222  0100E4  98A1               	bcf	4001,4,c	;volatile
 48223  0100E6  0012               	return		;funcret
 48224  0100E8                     __end_of_USBDeviceTasks:
 48225                           	opt stack 0
 48226                           tosu	equ	0xFFF
 48227                           tosh	equ	0xFFE
 48228                           tosl	equ	0xFFD
 48229                           pclatu	equ	0xFFB
 48230                           pclath	equ	0xFFA
 48231                           tblptru	equ	0xFF8
 48232                           tblptrh	equ	0xFF7
 48233                           tblptrl	equ	0xFF6
 48234                           tablat	equ	0xFF5
 48235                           prodh	equ	0xFF4
 48236                           prodl	equ	0xFF3
 48237                           intcon	equ	0xFF2
 48238                           indf0	equ	0xFEF
 48239                           postinc0	equ	0xFEE
 48240                           fsr0h	equ	0xFEA
 48241                           fsr0l	equ	0xFE9
 48242                           wreg	equ	0xFE8
 48243                           indf1	equ	0xFE7
 48244                           postinc1	equ	0xFE6
 48245                           postdec1	equ	0xFE5
 48246                           plusw1	equ	0xFE3
 48247                           fsr1h	equ	0xFE2
 48248                           fsr1l	equ	0xFE1
 48249                           indf2	equ	0xFDF
 48250                           postinc2	equ	0xFDE
 48251                           postdec2	equ	0xFDD
 48252                           plusw2	equ	0xFDB
 48253                           fsr2h	equ	0xFDA
 48254                           fsr2l	equ	0xFD9
 48255                           status	equ	0xFD8
 48256                           
 48257 ;; *************** function i2_USBDeviceInit *****************
 48258 ;; Defined at:
 48259 ;;		line 277 in file "usb_device.c"
 48260 ;; Parameters:    Size  Location     Type
 48261 ;;		None
 48262 ;; Auto vars:     Size  Location     Type
 48263 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 48264 ;; Return value:  Size  Location     Type
 48265 ;;                  1    wreg      void 
 48266 ;; Registers used:
 48267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48268 ;; Tracked objects:
 48269 ;;		On entry : 0/0
 48270 ;;		On exit  : 0/0
 48271 ;;		Unchanged: 0/0
 48272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48277 ;;Total ram usage:        1 bytes
 48278 ;; Hardware stack levels used:    1
 48279 ;; Hardware stack levels required when called:    1
 48280 ;; This function calls:
 48281 ;;		i2_memset
 48282 ;; This function is called by:
 48283 ;;		_USBDeviceTasks
 48284 ;; This function uses a non-reentrant model
 48285 ;;
 48286                           
 48287                           	psect	text198
 48288  0100E8                     __ptext198:
 48289                           	opt stack 0
 48290  0100E8                     i2_USBDeviceInit:
 48291                           	opt stack 15
 48292                           
 48293                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 48294                           
 48295                           ;incstack = 0
 48296  0100E8  98A0               	bcf	4000,4,c	;volatile
 48297                           
 48298                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 48299  0100EA  0E00               	movlw	0
 48300  0100EC  6E63               	movwf	3939,c	;volatile
 48301                           
 48302                           ;usb_device.c: 291: {UIR = 0;};
 48303  0100EE  0E00               	movlw	0
 48304  0100F0  6E62               	movwf	3938,c	;volatile
 48305                           
 48306                           ;usb_device.c: 294: UEP0 = 0;
 48307  0100F2  0E00               	movlw	0
 48308  0100F4  010F               	movlb	15	; () banked
 48309  0100F6  6F26               	movwf	38,b	;volatile
 48310                           
 48311                           ; BSR set to: 15
 48312                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 48313  0100F8  0E27               	movlw	39
 48314  0100FA  6E01               	movwf	i2memset@p1,c
 48315  0100FC  0E0F               	movlw	15
 48316  0100FE  6E02               	movwf	i2memset@p1+1,c
 48317  010100  0E00               	movlw	0
 48318  010102  6E04               	movwf	i2memset@c+1,c
 48319  010104  0E00               	movlw	0
 48320  010106  6E03               	movwf	i2memset@c,c
 48321  010108  0E00               	movlw	0
 48322  01010A  6E06               	movwf	i2memset@n+1,c
 48323  01010C  0E02               	movlw	2
 48324  01010E  6E05               	movwf	i2memset@n,c
 48325  010110  EC5E  F0AA         	call	i2_memset	;wreg free
 48326                           
 48327                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 48328  010114  0E16               	movlw	22
 48329  010116  010F               	movlb	15	; () banked
 48330  010118  6F39               	movwf	57,b	;volatile
 48331                           
 48332                           ; BSR set to: 15
 48333  01011A  0E9F               	movlw	159
 48334  01011C  6F37               	movwf	55,b	;volatile
 48335                           
 48336                           ; BSR set to: 15
 48337  01011E  0E7B               	movlw	123
 48338  010120  6F36               	movwf	54,b	;volatile
 48339                           
 48340                           ; BSR set to: 15
 48341                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 48342  010122  0E00               	movlw	0
 48343  010124  6E09               	movwf	i2USBDeviceInit@i,c
 48344  010126                     i2l17352:
 48345                           
 48346                           ; BSR set to: 15
 48347  010126  0E0B               	movlw	11
 48348  010128  6409               	cpfsgt	i2USBDeviceInit@i,c
 48349  01012A  D001               	goto	i2l145
 48350  01012C  D00E               	goto	i2u1668_40
 48351  01012E                     i2l145:
 48352                           
 48353                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 48354                           
 48355                           ; BSR set to: 15
 48356  01012E  5009               	movf	i2USBDeviceInit@i,w,c
 48357  010130  0D04               	mullw	4
 48358  010132  0E00               	movlw	0
 48359  010134  24F3               	addwf	prodl,w,c
 48360  010136  6ED9               	movwf	fsr2l,c
 48361  010138  0E0D               	movlw	13
 48362  01013A  20F4               	addwfc	prodh,w,c
 48363  01013C  6EDA               	movwf	fsr2h,c
 48364  01013E  6ADE               	clrf	postinc2,c
 48365  010140  6ADE               	clrf	postinc2,c
 48366  010142  6ADE               	clrf	postinc2,c
 48367  010144  6ADD               	clrf	postdec2,c
 48368  010146  2A09               	incf	i2USBDeviceInit@i,f,c
 48369  010148  D7EE               	goto	i2l17352
 48370  01014A                     i2u1668_40:
 48371                           
 48372                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 48373  01014A  8C65               	bsf	3941,6,c	;volatile
 48374                           
 48375                           ;usb_device.c: 316: UADDR = 0x00;
 48376  01014C  0E00               	movlw	0
 48377  01014E  010F               	movlb	15	; () banked
 48378  010150  6F38               	movwf	56,b	;volatile
 48379                           
 48380                           ; BSR set to: 15
 48381                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 48382  010152  9865               	bcf	3941,4,c	;volatile
 48383                           
 48384                           ; BSR set to: 15
 48385                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 48386  010154  9C65               	bcf	3941,6,c	;volatile
 48387  010156                     
 48388                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 48389                           
 48390                           ; BSR set to: 15
 48391  010156  9662               	bcf	3938,3,c	;volatile
 48392                           
 48393                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 48394  010158  0E00               	movlw	0
 48395  01015A  6E55               	movwf	_inPipes+3,c	;volatile
 48396                           
 48397                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 48398  01015C  0E00               	movlw	0
 48399  01015E  0101               	movlb	1	; () banked
 48400  010160  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 48401                           
 48402                           ; BSR set to: 1
 48403                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 48404  010162  0E00               	movlw	0
 48405  010164  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 48406  010166  0E00               	movlw	0
 48407  010168  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 48408                           
 48409                           ; BSR set to: 1
 48410                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 48411  01016A  B662               	btfsc	3938,3,c	;volatile
 48412  01016C  D7F4               	goto	i2l147
 48413                           
 48414                           ; BSR set to: 1
 48415                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 48416                           
 48417                           ; BSR set to: 1
 48418  01016E  0E01               	movlw	1
 48419  010170  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48420                           
 48421                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 48422  010172  0E01               	movlw	1
 48423  010174  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48424                           
 48425                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 48426  010176  0E00               	movlw	0
 48427  010178  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48428                           
 48429                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 48430  01017A  0E00               	movlw	0
 48431  01017C  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48432                           
 48433                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 48434  01017E  0E00               	movlw	0
 48435  010180  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48436                           
 48437                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 48438  010182  0E00               	movlw	0
 48439  010184  6E09               	movwf	i2USBDeviceInit@i,c
 48440  010186                     i2l17380:
 48441                           
 48442                           ; BSR set to: 1
 48443  010186  0E02               	movlw	2
 48444  010188  6409               	cpfsgt	i2USBDeviceInit@i,c
 48445  01018A  D001               	goto	i2l149
 48446  01018C  D02E               	goto	i2u1671_40
 48447  01018E                     i2l149:
 48448                           
 48449                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 48450                           
 48451                           ; BSR set to: 1
 48452  01018E  5009               	movf	i2USBDeviceInit@i,w,c
 48453  010190  0D02               	mullw	2
 48454  010192  0E1B               	movlw	low _pBDTEntryIn
 48455  010194  24F3               	addwf	prodl,w,c
 48456  010196  6ED9               	movwf	fsr2l,c
 48457  010198  0E01               	movlw	high _pBDTEntryIn
 48458  01019A  20F4               	addwfc	prodh,w,c
 48459  01019C  6EDA               	movwf	fsr2h,c
 48460  01019E  0E00               	movlw	0
 48461  0101A0  6EDE               	movwf	postinc2,c
 48462  0101A2  0E00               	movlw	0
 48463  0101A4  6EDD               	movwf	postdec2,c
 48464                           
 48465                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 48466  0101A6  5009               	movf	i2USBDeviceInit@i,w,c
 48467  0101A8  0D02               	mullw	2
 48468  0101AA  0E21               	movlw	low _pBDTEntryOut
 48469  0101AC  24F3               	addwf	prodl,w,c
 48470  0101AE  6ED9               	movwf	fsr2l,c
 48471  0101B0  0E01               	movlw	high _pBDTEntryOut
 48472  0101B2  20F4               	addwfc	prodh,w,c
 48473  0101B4  6EDA               	movwf	fsr2h,c
 48474  0101B6  0E00               	movlw	0
 48475  0101B8  6EDE               	movwf	postinc2,c
 48476  0101BA  0E00               	movlw	0
 48477  0101BC  6EDD               	movwf	postdec2,c
 48478                           
 48479                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 48480  0101BE  5009               	movf	i2USBDeviceInit@i,w,c
 48481  0101C0  0D01               	mullw	1
 48482  0101C2  0E3C               	movlw	low _ep_data_in
 48483  0101C4  24F3               	addwf	prodl,w,c
 48484  0101C6  6ED9               	movwf	fsr2l,c
 48485  0101C8  0E01               	movlw	high _ep_data_in
 48486  0101CA  20F4               	addwfc	prodh,w,c
 48487  0101CC  6EDA               	movwf	fsr2h,c
 48488  0101CE  0E00               	movlw	0
 48489  0101D0  6EDF               	movwf	indf2,c
 48490                           
 48491                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 48492  0101D2  5009               	movf	i2USBDeviceInit@i,w,c
 48493  0101D4  0D01               	mullw	1
 48494  0101D6  0E39               	movlw	low _ep_data_out
 48495  0101D8  24F3               	addwf	prodl,w,c
 48496  0101DA  6ED9               	movwf	fsr2l,c
 48497  0101DC  0E01               	movlw	high _ep_data_out
 48498  0101DE  20F4               	addwfc	prodh,w,c
 48499  0101E0  6EDA               	movwf	fsr2h,c
 48500  0101E2  0E00               	movlw	0
 48501  0101E4  6EDF               	movwf	indf2,c
 48502  0101E6  2A09               	incf	i2USBDeviceInit@i,f,c
 48503  0101E8  D7CE               	goto	i2l17380
 48504  0101EA                     i2u1671_40:
 48505                           
 48506                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 48507  0101EA  0E08               	movlw	8
 48508  0101EC  0101               	movlb	1	; () banked
 48509  0101EE  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48510  0101F0  0E0D               	movlw	13
 48511  0101F2  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48512                           
 48513                           ; BSR set to: 1
 48514                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 48515  0101F4  0E16               	movlw	22
 48516  0101F6  010F               	movlb	15	; () banked
 48517  0101F8  6F26               	movwf	38,b	;volatile
 48518                           
 48519                           ; BSR set to: 15
 48520                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 48521  0101FA  0E0D               	movlw	13
 48522  0101FC  010D               	movlb	13	; () banked
 48523  0101FE  6F03               	movwf	3,b	;volatile
 48524  010200  0E30               	movlw	48
 48525  010202  6F02               	movwf	2,b	;volatile
 48526                           
 48527                           ; BSR set to: 13
 48528                           ;usb_device.c: 359: BDT[0].CNT = 8;
 48529  010204  0E08               	movlw	8
 48530  010206  6F01               	movwf	1,b	;volatile
 48531                           
 48532                           ; BSR set to: 13
 48533                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 48534  010208  0E04               	movlw	4
 48535  01020A  6F00               	movwf	0,b	;volatile
 48536                           
 48537                           ; BSR set to: 13
 48538                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 48539  01020C  8F00               	bsf	0,7,b	;volatile
 48540                           
 48541                           ; BSR set to: 13
 48542                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 48543  01020E  0E00               	movlw	0
 48544  010210  0101               	movlb	1	; () banked
 48545  010212  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 48546                           
 48547                           ; BSR set to: 1
 48548                           ;usb_device.c: 366: USB1msTickCount = 0;
 48549  010214  0E00               	movlw	0
 48550  010216  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 48551  010218  0E00               	movlw	0
 48552  01021A  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 48553  01021C  0E00               	movlw	0
 48554  01021E  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 48555  010220  0E00               	movlw	0
 48556  010222  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 48557                           
 48558                           ; BSR set to: 1
 48559                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 48560  010224  0E00               	movlw	0
 48561  010226  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48562                           
 48563                           ; BSR set to: 1
 48564                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 48565  010228  0E00               	movlw	0
 48566  01022A  6E5E               	movwf	_USBDeviceState,c	;volatile
 48567                           
 48568                           ; BSR set to: 1
 48569  01022C  0012               	return		;funcret
 48570  01022E                     __end_ofi2_USBDeviceInit:
 48571                           	opt stack 0
 48572                           tosu	equ	0xFFF
 48573                           tosh	equ	0xFFE
 48574                           tosl	equ	0xFFD
 48575                           pclatu	equ	0xFFB
 48576                           pclath	equ	0xFFA
 48577                           tblptru	equ	0xFF8
 48578                           tblptrh	equ	0xFF7
 48579                           tblptrl	equ	0xFF6
 48580                           tablat	equ	0xFF5
 48581                           prodh	equ	0xFF4
 48582                           prodl	equ	0xFF3
 48583                           intcon	equ	0xFF2
 48584                           indf0	equ	0xFEF
 48585                           postinc0	equ	0xFEE
 48586                           fsr0h	equ	0xFEA
 48587                           fsr0l	equ	0xFE9
 48588                           wreg	equ	0xFE8
 48589                           indf1	equ	0xFE7
 48590                           postinc1	equ	0xFE6
 48591                           postdec1	equ	0xFE5
 48592                           plusw1	equ	0xFE3
 48593                           fsr1h	equ	0xFE2
 48594                           fsr1l	equ	0xFE1
 48595                           indf2	equ	0xFDF
 48596                           postinc2	equ	0xFDE
 48597                           postdec2	equ	0xFDD
 48598                           plusw2	equ	0xFDB
 48599                           fsr2h	equ	0xFDA
 48600                           fsr2l	equ	0xFD9
 48601                           status	equ	0xFD8
 48602                           
 48603 ;; *************** function _USBWakeFromSuspend *****************
 48604 ;; Defined at:
 48605 ;;		line 2305 in file "usb_device.c"
 48606 ;; Parameters:    Size  Location     Type
 48607 ;;		None
 48608 ;; Auto vars:     Size  Location     Type
 48609 ;;		None
 48610 ;; Return value:  Size  Location     Type
 48611 ;;                  1    wreg      void 
 48612 ;; Registers used:
 48613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48614 ;; Tracked objects:
 48615 ;;		On entry : 0/0
 48616 ;;		On exit  : 0/0
 48617 ;;		Unchanged: 0/0
 48618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48623 ;;Total ram usage:        0 bytes
 48624 ;; Hardware stack levels used:    1
 48625 ;; Hardware stack levels required when called:    4
 48626 ;; This function calls:
 48627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48628 ;; This function is called by:
 48629 ;;		_USBDeviceTasks
 48630 ;; This function uses a non-reentrant model
 48631 ;;
 48632                           
 48633                           	psect	text199
 48634  0151D8                     __ptext199:
 48635                           	opt stack 0
 48636  0151D8                     _USBWakeFromSuspend:
 48637                           	opt stack 12
 48638                           
 48639                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 48640                           
 48641                           ; BSR set to: 1
 48642                           ;incstack = 0
 48643  0151D8  0E00               	movlw	0
 48644  0151DA  0101               	movlb	1	; () banked
 48645  0151DC  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48646                           
 48647                           ; BSR set to: 1
 48648                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 48649  0151DE  0E00               	movlw	0
 48650  0151E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48651  0151E2  0E74               	movlw	116
 48652  0151E4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48653  0151E6  0E00               	movlw	0
 48654  0151E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48655  0151EA  0E00               	movlw	0
 48656  0151EC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48657  0151EE  0E00               	movlw	0
 48658  0151F0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48659  0151F2  0E00               	movlw	0
 48660  0151F4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48661  0151F6  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48662                           
 48663                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 48664  0151FA  9265               	bcf	3941,1,c	;volatile
 48665                           
 48666                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 48667  0151FC  010F               	movlb	15	; () banked
 48668  0151FE  9536               	bcf	54,2,b	;volatile
 48669                           
 48670                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 48671  015200  D001               	goto	i2l315
 48672  015202                     
 48673                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 48674                           
 48675                           ; BSR set to: 15
 48676  015202  9462               	bcf	3938,2,c	;volatile
 48677  015204                     i2l315:
 48678  015204  B462               	btfsc	3938,2,c	;volatile
 48679  015206  D7FD               	goto	i2l316
 48680                           
 48681                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 48682  015208  0E00               	movlw	0
 48683  01520A  0101               	movlb	1	; () banked
 48684  01520C  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48685                           
 48686                           ; BSR set to: 1
 48687  01520E  0012               	return		;funcret
 48688  015210                     __end_of_USBWakeFromSuspend:
 48689                           	opt stack 0
 48690                           tosu	equ	0xFFF
 48691                           tosh	equ	0xFFE
 48692                           tosl	equ	0xFFD
 48693                           pclatu	equ	0xFFB
 48694                           pclath	equ	0xFFA
 48695                           tblptru	equ	0xFF8
 48696                           tblptrh	equ	0xFF7
 48697                           tblptrl	equ	0xFF6
 48698                           tablat	equ	0xFF5
 48699                           prodh	equ	0xFF4
 48700                           prodl	equ	0xFF3
 48701                           intcon	equ	0xFF2
 48702                           indf0	equ	0xFEF
 48703                           postinc0	equ	0xFEE
 48704                           fsr0h	equ	0xFEA
 48705                           fsr0l	equ	0xFE9
 48706                           wreg	equ	0xFE8
 48707                           indf1	equ	0xFE7
 48708                           postinc1	equ	0xFE6
 48709                           postdec1	equ	0xFE5
 48710                           plusw1	equ	0xFE3
 48711                           fsr1h	equ	0xFE2
 48712                           fsr1l	equ	0xFE1
 48713                           indf2	equ	0xFDF
 48714                           postinc2	equ	0xFDE
 48715                           postdec2	equ	0xFDD
 48716                           plusw2	equ	0xFDB
 48717                           fsr2h	equ	0xFDA
 48718                           fsr2l	equ	0xFD9
 48719                           status	equ	0xFD8
 48720                           
 48721 ;; *************** function _USBSuspend *****************
 48722 ;; Defined at:
 48723 ;;		line 2247 in file "usb_device.c"
 48724 ;; Parameters:    Size  Location     Type
 48725 ;;		None
 48726 ;; Auto vars:     Size  Location     Type
 48727 ;;		None
 48728 ;; Return value:  Size  Location     Type
 48729 ;;                  1    wreg      void 
 48730 ;; Registers used:
 48731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48732 ;; Tracked objects:
 48733 ;;		On entry : 0/0
 48734 ;;		On exit  : 0/0
 48735 ;;		Unchanged: 0/0
 48736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48741 ;;Total ram usage:        0 bytes
 48742 ;; Hardware stack levels used:    1
 48743 ;; Hardware stack levels required when called:    4
 48744 ;; This function calls:
 48745 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48746 ;; This function is called by:
 48747 ;;		_USBDeviceTasks
 48748 ;; This function uses a non-reentrant model
 48749 ;;
 48750                           
 48751                           	psect	text200
 48752  0153D8                     __ptext200:
 48753                           	opt stack 0
 48754  0153D8                     _USBSuspend:
 48755                           	opt stack 12
 48756                           
 48757                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 48758                           
 48759                           ; BSR set to: 1
 48760                           ;incstack = 0
 48761  0153D8  010F               	movlb	15	; () banked
 48762  0153DA  8536               	bsf	54,2,b	;volatile
 48763                           
 48764                           ; BSR set to: 15
 48765                           ;usb_device.c: 2273: (UIR &= 0xEF);
 48766  0153DC  9862               	bcf	3938,4,c	;volatile
 48767                           
 48768                           ; BSR set to: 15
 48769                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 48770  0153DE  8265               	bsf	3941,1,c	;volatile
 48771                           
 48772                           ; BSR set to: 15
 48773                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 48774  0153E0  0E01               	movlw	1
 48775  0153E2  0101               	movlb	1	; () banked
 48776  0153E4  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48777                           
 48778                           ; BSR set to: 1
 48779                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 48780  0153E6  0E00               	movlw	0
 48781  0153E8  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48782                           
 48783                           ; BSR set to: 1
 48784                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 48785  0153EA  0E00               	movlw	0
 48786  0153EC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48787  0153EE  0E75               	movlw	117
 48788  0153F0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48789  0153F2  0E00               	movlw	0
 48790  0153F4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48791  0153F6  0E00               	movlw	0
 48792  0153F8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48793  0153FA  0E00               	movlw	0
 48794  0153FC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48795  0153FE  0E00               	movlw	0
 48796  015400  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48797  015402  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48798  015406  0012               	return		;funcret
 48799  015408                     __end_of_USBSuspend:
 48800                           	opt stack 0
 48801                           tosu	equ	0xFFF
 48802                           tosh	equ	0xFFE
 48803                           tosl	equ	0xFFD
 48804                           pclatu	equ	0xFFB
 48805                           pclath	equ	0xFFA
 48806                           tblptru	equ	0xFF8
 48807                           tblptrh	equ	0xFF7
 48808                           tblptrl	equ	0xFF6
 48809                           tablat	equ	0xFF5
 48810                           prodh	equ	0xFF4
 48811                           prodl	equ	0xFF3
 48812                           intcon	equ	0xFF2
 48813                           indf0	equ	0xFEF
 48814                           postinc0	equ	0xFEE
 48815                           fsr0h	equ	0xFEA
 48816                           fsr0l	equ	0xFE9
 48817                           wreg	equ	0xFE8
 48818                           indf1	equ	0xFE7
 48819                           postinc1	equ	0xFE6
 48820                           postdec1	equ	0xFE5
 48821                           plusw1	equ	0xFE3
 48822                           fsr1h	equ	0xFE2
 48823                           fsr1l	equ	0xFE1
 48824                           indf2	equ	0xFDF
 48825                           postinc2	equ	0xFDE
 48826                           postdec2	equ	0xFDD
 48827                           plusw2	equ	0xFDB
 48828                           fsr2h	equ	0xFDA
 48829                           fsr2l	equ	0xFD9
 48830                           status	equ	0xFD8
 48831                           
 48832 ;; *************** function _USBStallHandler *****************
 48833 ;; Defined at:
 48834 ;;		line 2204 in file "usb_device.c"
 48835 ;; Parameters:    Size  Location     Type
 48836 ;;		None
 48837 ;; Auto vars:     Size  Location     Type
 48838 ;;		None
 48839 ;; Return value:  Size  Location     Type
 48840 ;;                  1    wreg      void 
 48841 ;; Registers used:
 48842 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48843 ;; Tracked objects:
 48844 ;;		On entry : 0/0
 48845 ;;		On exit  : 0/0
 48846 ;;		Unchanged: 0/0
 48847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48852 ;;Total ram usage:        1 bytes
 48853 ;; Hardware stack levels used:    1
 48854 ;; This function calls:
 48855 ;;		Nothing
 48856 ;; This function is called by:
 48857 ;;		_USBDeviceTasks
 48858 ;; This function uses a non-reentrant model
 48859 ;;
 48860                           
 48861                           	psect	text201
 48862  014FB6                     __ptext201:
 48863                           	opt stack 0
 48864  014FB6                     _USBStallHandler:
 48865                           	opt stack 16
 48866                           
 48867                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 48868                           
 48869                           ;incstack = 0
 48870  014FB6  010F               	movlb	15	; () banked
 48871  014FB8  A126               	btfss	38,0,b	;volatile
 48872  014FBA  D01D               	goto	i2l307
 48873                           
 48874                           ; BSR set to: 15
 48875                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 48876  014FBC  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48877  014FC0  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48878  014FC4  0E80               	movlw	128
 48879  014FC6  18DE               	xorwf	postinc2,w,c
 48880  014FC8  A4D8               	btfss	status,2,c
 48881  014FCA  D014               	goto	i2l308
 48882                           
 48883                           ; BSR set to: 15
 48884  014FCC  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48885  014FD0  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48886  014FD4  0E84               	movlw	132
 48887  014FD6  18DE               	xorwf	postinc2,w,c
 48888  014FD8  A4D8               	btfss	status,2,c
 48889  014FDA  D00C               	goto	i2l308
 48890                           
 48891                           ; BSR set to: 15
 48892                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 48893  014FDC  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48894  014FE0  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48895  014FE4  0E0C               	movlw	12
 48896  014FE6  6EDF               	movwf	indf2,c
 48897                           
 48898                           ; BSR set to: 15
 48899                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 48900  014FE8  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48901  014FEC  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48902  014FF0  0E00               	movlw	0
 48903  014FF2  8EDB               	bsf	plusw2,7,c
 48904  014FF4                     i2l308:
 48905                           
 48906                           ; BSR set to: 15
 48907                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 48908                           
 48909                           ; BSR set to: 15
 48910  014FF4  9126               	bcf	38,0,b	;volatile
 48911  014FF6                     i2l307:
 48912                           
 48913                           ; BSR set to: 15
 48914                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 48915  014FF6  9A62               	bcf	3938,5,c	;volatile
 48916                           
 48917                           ; BSR set to: 15
 48918  014FF8  0012               	return		;funcret
 48919  014FFA                     __end_of_USBStallHandler:
 48920                           	opt stack 0
 48921                           tosu	equ	0xFFF
 48922                           tosh	equ	0xFFE
 48923                           tosl	equ	0xFFD
 48924                           pclatu	equ	0xFFB
 48925                           pclath	equ	0xFFA
 48926                           tblptru	equ	0xFF8
 48927                           tblptrh	equ	0xFF7
 48928                           tblptrl	equ	0xFF6
 48929                           tablat	equ	0xFF5
 48930                           prodh	equ	0xFF4
 48931                           prodl	equ	0xFF3
 48932                           intcon	equ	0xFF2
 48933                           indf0	equ	0xFEF
 48934                           postinc0	equ	0xFEE
 48935                           fsr0h	equ	0xFEA
 48936                           fsr0l	equ	0xFE9
 48937                           wreg	equ	0xFE8
 48938                           indf1	equ	0xFE7
 48939                           postinc1	equ	0xFE6
 48940                           postdec1	equ	0xFE5
 48941                           plusw1	equ	0xFE3
 48942                           fsr1h	equ	0xFE2
 48943                           fsr1l	equ	0xFE1
 48944                           indf2	equ	0xFDF
 48945                           postinc2	equ	0xFDE
 48946                           postdec2	equ	0xFDD
 48947                           plusw2	equ	0xFDB
 48948                           fsr2h	equ	0xFDA
 48949                           fsr2l	equ	0xFD9
 48950                           status	equ	0xFD8
 48951                           
 48952 ;; *************** function _USBIncrement1msInternalTimers *****************
 48953 ;; Defined at:
 48954 ;;		line 3027 in file "usb_device.c"
 48955 ;; Parameters:    Size  Location     Type
 48956 ;;		None
 48957 ;; Auto vars:     Size  Location     Type
 48958 ;;		None
 48959 ;; Return value:  Size  Location     Type
 48960 ;;                  1    wreg      void 
 48961 ;; Registers used:
 48962 ;;		wreg, status,2, status,0
 48963 ;; Tracked objects:
 48964 ;;		On entry : 0/0
 48965 ;;		On exit  : 0/0
 48966 ;;		Unchanged: 0/0
 48967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48972 ;;Total ram usage:        0 bytes
 48973 ;; Hardware stack levels used:    1
 48974 ;; This function calls:
 48975 ;;		Nothing
 48976 ;; This function is called by:
 48977 ;;		_USBDeviceTasks
 48978 ;; This function uses a non-reentrant model
 48979 ;;
 48980                           
 48981                           	psect	text202
 48982  015770                     __ptext202:
 48983                           	opt stack 0
 48984  015770                     _USBIncrement1msInternalTimers:
 48985                           	opt stack 16
 48986                           
 48987                           ;usb_device.c: 3035: USB1msTickCount++;
 48988                           
 48989                           ; BSR set to: 15
 48990                           ;incstack = 0
 48991  015770  0E01               	movlw	1
 48992  015772  0101               	movlb	1	; () banked
 48993  015774  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 48994  015776  0E00               	movlw	0
 48995  015778  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 48996  01577A  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 48997  01577C  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 48998                           
 48999                           ; BSR set to: 1
 49000                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 49001  01577E  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 49002  015780  A4D8               	btfss	status,2,c
 49003  015782  0012               	return	
 49004                           
 49005                           ; BSR set to: 1
 49006                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 49007  015784  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 49008                           
 49009                           ; BSR set to: 1
 49010                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 49011  015786  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 49012  015788  A4D8               	btfss	status,2,c
 49013  01578A  0012               	return	
 49014                           
 49015                           ; BSR set to: 1
 49016                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 49017  01578C  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49018                           
 49019                           ; BSR set to: 1
 49020  01578E  0012               	return	
 49021  015790                     __end_of_USBIncrement1msInternalTimers:
 49022                           	opt stack 0
 49023                           tosu	equ	0xFFF
 49024                           tosh	equ	0xFFE
 49025                           tosl	equ	0xFFD
 49026                           pclatu	equ	0xFFB
 49027                           pclath	equ	0xFFA
 49028                           tblptru	equ	0xFF8
 49029                           tblptrh	equ	0xFF7
 49030                           tblptrl	equ	0xFF6
 49031                           tablat	equ	0xFF5
 49032                           prodh	equ	0xFF4
 49033                           prodl	equ	0xFF3
 49034                           intcon	equ	0xFF2
 49035                           indf0	equ	0xFEF
 49036                           postinc0	equ	0xFEE
 49037                           fsr0h	equ	0xFEA
 49038                           fsr0l	equ	0xFE9
 49039                           wreg	equ	0xFE8
 49040                           indf1	equ	0xFE7
 49041                           postinc1	equ	0xFE6
 49042                           postdec1	equ	0xFE5
 49043                           plusw1	equ	0xFE3
 49044                           fsr1h	equ	0xFE2
 49045                           fsr1l	equ	0xFE1
 49046                           indf2	equ	0xFDF
 49047                           postinc2	equ	0xFDE
 49048                           postdec2	equ	0xFDD
 49049                           plusw2	equ	0xFDB
 49050                           fsr2h	equ	0xFDA
 49051                           fsr2l	equ	0xFD9
 49052                           status	equ	0xFD8
 49053                           
 49054 ;; *************** function _USBCtrlEPService *****************
 49055 ;; Defined at:
 49056 ;;		line 2374 in file "usb_device.c"
 49057 ;; Parameters:    Size  Location     Type
 49058 ;;		None
 49059 ;; Auto vars:     Size  Location     Type
 49060 ;;		None
 49061 ;; Return value:  Size  Location     Type
 49062 ;;                  1    wreg      void 
 49063 ;; Registers used:
 49064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49065 ;; Tracked objects:
 49066 ;;		On entry : 0/0
 49067 ;;		On exit  : 0/0
 49068 ;;		Unchanged: 0/0
 49069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49074 ;;Total ram usage:        1 bytes
 49075 ;; Hardware stack levels used:    1
 49076 ;; Hardware stack levels required when called:    7
 49077 ;; This function calls:
 49078 ;;		_USBCtrlTrfInHandler
 49079 ;;		_USBCtrlTrfOutHandler
 49080 ;;		_USBCtrlTrfSetupHandler
 49081 ;;		i2_memcpy
 49082 ;; This function is called by:
 49083 ;;		_USBDeviceTasks
 49084 ;; This function uses a non-reentrant model
 49085 ;;
 49086                           
 49087                           	psect	text203
 49088  01335A                     __ptext203:
 49089                           	opt stack 0
 49090  01335A                     _USBCtrlEPService:
 49091                           	opt stack 9
 49092                           
 49093                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 49094                           
 49095                           ; BSR set to: 1
 49096                           ;incstack = 0
 49097  01335A  0E2D               	movlw	45
 49098  01335C  0101               	movlb	1	; () banked
 49099  01335E  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 49100                           
 49101                           ; BSR set to: 1
 49102                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 49103  013360  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49104  013364  0EFD               	movlw	253
 49105  013366  161E               	andwf	??_USBCtrlEPService,f,c
 49106  013368  A4D8               	btfss	status,2,c
 49107  01336A  D03B               	goto	i2l321
 49108                           
 49109                           ; BSR set to: 1
 49110                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 49111  01336C  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49112  013370  90D8               	bcf	status,0,c
 49113  013372  321E               	rrcf	??_USBCtrlEPService,f,c
 49114  013374  0E3F               	movlw	63
 49115  013376  161E               	andwf	??_USBCtrlEPService,f,c
 49116  013378  501E               	movf	??_USBCtrlEPService,w,c
 49117  01337A  0D04               	mullw	4
 49118  01337C  0E00               	movlw	0
 49119  01337E  24F3               	addwf	prodl,w,c
 49120  013380  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49121  013382  0E0D               	movlw	13
 49122  013384  20F4               	addwfc	prodh,w,c
 49123  013386  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49124                           
 49125                           ; BSR set to: 1
 49126                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49127  013388  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49128  01338C  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49129                           
 49130                           ; BSR set to: 1
 49131                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 49132  013390  0E04               	movlw	4
 49133  013392  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 49134  013394  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 49135  013396  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49136  013398  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 49137                           
 49138                           ; BSR set to: 1
 49139                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 49140  01339A  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49141  01339E  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49142  0133A2  30DF               	rrcf	223,w,c
 49143  0133A4  32E8               	rrcf	wreg,f,c
 49144  0133A6  0B0F               	andlw	15
 49145  0133A8  0A0D               	xorlw	13
 49146  0133AA  A4D8               	btfss	status,2,c
 49147  0133AC  D017               	goto	i2l322
 49148                           
 49149                           ; BSR set to: 1
 49150                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 49151  0133AE  0E30               	movlw	48
 49152  0133B0  6E01               	movwf	i2memcpy@d1,c
 49153  0133B2  0E0D               	movlw	13
 49154  0133B4  6E02               	movwf	i2memcpy@d1+1,c
 49155  0133B6  EE20 F002          	lfsr	2,2
 49156  0133BA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 49157  0133BC  26D9               	addwf	fsr2l,f,c
 49158  0133BE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 49159  0133C0  22DA               	addwfc	fsr2h,f,c
 49160  0133C2  CFDE F003          	movff	postinc2,i2memcpy@s1
 49161  0133C6  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 49162  0133CA  0E00               	movlw	0
 49163  0133CC  6E06               	movwf	i2memcpy@n+1,c
 49164  0133CE  0E08               	movlw	8
 49165  0133D0  6E05               	movwf	i2memcpy@n,c
 49166  0133D2  EC6C  F0A2         	call	i2_memcpy	;wreg free
 49167                           
 49168                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 49169  0133D6  EC04  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 49170                           
 49171                           ;usb_device.c: 2411: }
 49172  0133DA  0012               	return	
 49173  0133DC                     i2l322:
 49174                           
 49175                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 49176  0133DC  EC0D  F0A2         	call	_USBCtrlTrfOutHandler	;wreg free
 49177                           
 49178                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 49179  0133E0  0012               	return	
 49180  0133E2                     i2l321:
 49181                           
 49182                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 49183  0133E2  0101               	movlb	1	; () banked
 49184  0133E4  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 49185  0133E6  0BFD               	andlw	253
 49186  0133E8  0A04               	xorlw	4
 49187  0133EA  A4D8               	btfss	status,2,c
 49188  0133EC  0012               	return	
 49189                           
 49190                           ; BSR set to: 1
 49191                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 49192  0133EE  EC84  F094         	call	_USBCtrlTrfInHandler	;wreg free
 49193  0133F2  0012               	return	
 49194  0133F4                     __end_of_USBCtrlEPService:
 49195                           	opt stack 0
 49196                           tosu	equ	0xFFF
 49197                           tosh	equ	0xFFE
 49198                           tosl	equ	0xFFD
 49199                           pclatu	equ	0xFFB
 49200                           pclath	equ	0xFFA
 49201                           tblptru	equ	0xFF8
 49202                           tblptrh	equ	0xFF7
 49203                           tblptrl	equ	0xFF6
 49204                           tablat	equ	0xFF5
 49205                           prodh	equ	0xFF4
 49206                           prodl	equ	0xFF3
 49207                           intcon	equ	0xFF2
 49208                           indf0	equ	0xFEF
 49209                           postinc0	equ	0xFEE
 49210                           fsr0h	equ	0xFEA
 49211                           fsr0l	equ	0xFE9
 49212                           wreg	equ	0xFE8
 49213                           indf1	equ	0xFE7
 49214                           postinc1	equ	0xFE6
 49215                           postdec1	equ	0xFE5
 49216                           plusw1	equ	0xFE3
 49217                           fsr1h	equ	0xFE2
 49218                           fsr1l	equ	0xFE1
 49219                           indf2	equ	0xFDF
 49220                           postinc2	equ	0xFDE
 49221                           postdec2	equ	0xFDD
 49222                           plusw2	equ	0xFDB
 49223                           fsr2h	equ	0xFDA
 49224                           fsr2l	equ	0xFD9
 49225                           status	equ	0xFD8
 49226                           
 49227 ;; *************** function i2_memcpy *****************
 49228 ;; Defined at:
 49229 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 49230 ;; Parameters:    Size  Location     Type
 49231 ;;  d1              2    0[COMRAM] PTR void 
 49232 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49233 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49234 ;;  s1              2    2[COMRAM] PTR const void 
 49235 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49236 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49237 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49238 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49239 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49240 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49241 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49242 ;;  n               2    4[COMRAM] unsigned int 
 49243 ;; Auto vars:     Size  Location     Type
 49244 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 49245 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49246 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49247 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49248 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49249 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49250 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49251 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49252 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 49253 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49254 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49255 ;;  memcpy          1   10[COMRAM] unsigned char 
 49256 ;; Return value:  Size  Location     Type
 49257 ;;                  2    0[COMRAM] PTR void 
 49258 ;; Registers used:
 49259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49260 ;; Tracked objects:
 49261 ;;		On entry : 0/0
 49262 ;;		On exit  : 0/0
 49263 ;;		Unchanged: 0/0
 49264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49265 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49266 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49268 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49269 ;;Total ram usage:       11 bytes
 49270 ;; Hardware stack levels used:    1
 49271 ;; This function calls:
 49272 ;;		Nothing
 49273 ;; This function is called by:
 49274 ;;		_USBCtrlEPService
 49275 ;; This function uses a non-reentrant model
 49276 ;;
 49277                           
 49278                           	psect	text204
 49279  0144D8                     __ptext204:
 49280                           	opt stack 0
 49281  0144D8                     i2_memcpy:
 49282                           	opt stack 15
 49283                           
 49284                           ;incstack = 0
 49285  0144D8  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 49286  0144DC  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 49287  0144E0  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 49288  0144E4  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 49289  0144E8  D01C               	goto	i2l3696
 49290  0144EA                     i2l16544:
 49291  0144EA  C009  FFF6         	movff	i2memcpy@s,tblptrl
 49292  0144EE  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 49293  0144F2  0E00               	movlw	low (__mediumconst shr (0+16))
 49294  0144F4  6EF8               	movwf	tblptru,c
 49295  0144F6  0E0E               	movlw	(high __ramtop+-1)
 49296  0144F8  64F7               	cpfsgt	tblptrh,c
 49297  0144FA  D003               	bra	i2u1566_47
 49298  0144FC  0008               	tblrd		*
 49299  0144FE  50F5               	movf	tablat,w,c
 49300  014500  D005               	bra	i2u1566_40
 49301  014502                     i2u1566_47:
 49302  014502  CFF6 FFE9          	movff	tblptrl,fsr0l
 49303  014506  CFF7 FFEA          	movff	tblptrh,fsr0h
 49304  01450A  50EF               	movf	indf0,w,c
 49305  01450C                     i2u1566_40:
 49306  01450C  6E0B               	movwf	i2memcpy@tmp,c
 49307  01450E  4A09               	infsnz	i2memcpy@s,f,c
 49308  014510  2A0A               	incf	i2memcpy@s+1,f,c
 49309  014512  C007  FFD9         	movff	i2memcpy@d,fsr2l
 49310  014516  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 49311  01451A  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 49312  01451E  4A07               	infsnz	i2memcpy@d,f,c
 49313  014520  2A08               	incf	i2memcpy@d+1,f,c
 49314  014522                     i2l3696:
 49315  014522  0605               	decf	i2memcpy@n,f,c
 49316  014524  A0D8               	btfss	status,0,c
 49317  014526  0606               	decf	i2memcpy@n+1,f,c
 49318  014528  2805               	incf	i2memcpy@n,w,c
 49319  01452A  E1DF               	bnz	i2l16544
 49320  01452C  2806               	incf	i2memcpy@n+1,w,c
 49321  01452E  B4D8               	btfsc	status,2,c
 49322  014530  0012               	return	
 49323  014532  D7DB               	goto	i2l3697
 49324  014534                     __end_ofi2_memcpy:
 49325                           	opt stack 0
 49326                           tosu	equ	0xFFF
 49327                           tosh	equ	0xFFE
 49328                           tosl	equ	0xFFD
 49329                           pclatu	equ	0xFFB
 49330                           pclath	equ	0xFFA
 49331                           tblptru	equ	0xFF8
 49332                           tblptrh	equ	0xFF7
 49333                           tblptrl	equ	0xFF6
 49334                           tablat	equ	0xFF5
 49335                           prodh	equ	0xFF4
 49336                           prodl	equ	0xFF3
 49337                           intcon	equ	0xFF2
 49338                           indf0	equ	0xFEF
 49339                           postinc0	equ	0xFEE
 49340                           fsr0h	equ	0xFEA
 49341                           fsr0l	equ	0xFE9
 49342                           wreg	equ	0xFE8
 49343                           indf1	equ	0xFE7
 49344                           postinc1	equ	0xFE6
 49345                           postdec1	equ	0xFE5
 49346                           plusw1	equ	0xFE3
 49347                           fsr1h	equ	0xFE2
 49348                           fsr1l	equ	0xFE1
 49349                           indf2	equ	0xFDF
 49350                           postinc2	equ	0xFDE
 49351                           postdec2	equ	0xFDD
 49352                           plusw2	equ	0xFDB
 49353                           fsr2h	equ	0xFDA
 49354                           fsr2l	equ	0xFD9
 49355                           status	equ	0xFD8
 49356                           
 49357 ;; *************** function _USBCtrlTrfSetupHandler *****************
 49358 ;; Defined at:
 49359 ;;		line 2467 in file "usb_device.c"
 49360 ;; Parameters:    Size  Location     Type
 49361 ;;		None
 49362 ;; Auto vars:     Size  Location     Type
 49363 ;;		None
 49364 ;; Return value:  Size  Location     Type
 49365 ;;                  1    wreg      void 
 49366 ;; Registers used:
 49367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49368 ;; Tracked objects:
 49369 ;;		On entry : 0/0
 49370 ;;		On exit  : 0/0
 49371 ;;		Unchanged: 0/0
 49372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49377 ;;Total ram usage:        0 bytes
 49378 ;; Hardware stack levels used:    1
 49379 ;; Hardware stack levels required when called:    6
 49380 ;; This function calls:
 49381 ;;		_USBCheckStdRequest
 49382 ;;		_USBCtrlEPServiceComplete
 49383 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49384 ;; This function is called by:
 49385 ;;		_USBCtrlEPService
 49386 ;; This function uses a non-reentrant model
 49387 ;;
 49388                           
 49389                           	psect	text205
 49390  013808                     __ptext205:
 49391                           	opt stack 0
 49392  013808                     _USBCtrlTrfSetupHandler:
 49393                           	opt stack 9
 49394                           
 49395                           ;usb_device.c: 2472: shortPacketStatus = 0;
 49396                           
 49397                           ;incstack = 0
 49398  013808  0E00               	movlw	0
 49399  01380A  0101               	movlb	1	; () banked
 49400  01380C  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 49401                           
 49402                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 49403  01380E  0E00               	movlw	0
 49404  013810  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 49405                           
 49406                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 49407  013812  0E00               	movlw	0
 49408  013814  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49409                           
 49410                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 49411  013816  0E00               	movlw	0
 49412  013818  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49413                           
 49414                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 49415  01381A  0E00               	movlw	0
 49416  01381C  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 49417                           
 49418                           ;usb_device.c: 2477: controlTransferState = 0;
 49419  01381E  0E00               	movlw	0
 49420  013820  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49421                           
 49422                           ; BSR set to: 1
 49423                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49424  013822  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49425  013826  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49426  01382A  0E7F               	movlw	127
 49427  01382C  16DF               	andwf	indf2,f,c
 49428                           
 49429                           ; BSR set to: 1
 49430                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49431  01382E  0E04               	movlw	4
 49432  013830  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49433  013832  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49434  013834  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49435  013836  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49436                           
 49437                           ; BSR set to: 1
 49438                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49439  013838  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49440  01383C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49441  013840  0E7F               	movlw	127
 49442  013842  16DF               	andwf	indf2,f,c
 49443                           
 49444                           ; BSR set to: 1
 49445                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49446  013844  0E04               	movlw	4
 49447  013846  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49448  013848  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49449  01384A  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49450  01384C  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49451                           
 49452                           ; BSR set to: 1
 49453                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 49454  01384E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49455  013852  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49456  013856  0E7F               	movlw	127
 49457  013858  16DF               	andwf	indf2,f,c
 49458                           
 49459                           ; BSR set to: 1
 49460                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 49461  01385A  0E00               	movlw	0
 49462  01385C  6E55               	movwf	_inPipes+3,c	;volatile
 49463                           
 49464                           ; BSR set to: 1
 49465                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 49466  01385E  0E00               	movlw	0
 49467  013860  6E57               	movwf	_inPipes+5,c	;volatile
 49468  013862  0E00               	movlw	0
 49469  013864  6E56               	movwf	_inPipes+4,c	;volatile
 49470                           
 49471                           ; BSR set to: 1
 49472                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 49473  013866  0E00               	movlw	0
 49474  013868  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49475                           
 49476                           ; BSR set to: 1
 49477                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 49478  01386A  0E00               	movlw	0
 49479  01386C  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49480  01386E  0E00               	movlw	0
 49481  013870  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49482                           
 49483                           ; BSR set to: 1
 49484                           ;usb_device.c: 2502: USBCheckStdRequest();
 49485  013872  ECAC  F091         	call	_USBCheckStdRequest	;wreg free
 49486                           
 49487                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 49488  013876  0E00               	movlw	0
 49489  013878  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49490  01387A  0E03               	movlw	3
 49491  01387C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49492  01387E  0E00               	movlw	0
 49493  013880  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49494  013882  0E00               	movlw	0
 49495  013884  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49496  013886  0E00               	movlw	0
 49497  013888  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49498  01388A  0E00               	movlw	0
 49499  01388C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49500  01388E  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49501                           
 49502                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 49503  013892  ECED  F08A         	call	_USBCtrlEPServiceComplete	;wreg free
 49504  013896  0012               	return		;funcret
 49505  013898                     __end_of_USBCtrlTrfSetupHandler:
 49506                           	opt stack 0
 49507                           tosu	equ	0xFFF
 49508                           tosh	equ	0xFFE
 49509                           tosl	equ	0xFFD
 49510                           pclatu	equ	0xFFB
 49511                           pclath	equ	0xFFA
 49512                           tblptru	equ	0xFF8
 49513                           tblptrh	equ	0xFF7
 49514                           tblptrl	equ	0xFF6
 49515                           tablat	equ	0xFF5
 49516                           prodh	equ	0xFF4
 49517                           prodl	equ	0xFF3
 49518                           intcon	equ	0xFF2
 49519                           indf0	equ	0xFEF
 49520                           postinc0	equ	0xFEE
 49521                           fsr0h	equ	0xFEA
 49522                           fsr0l	equ	0xFE9
 49523                           wreg	equ	0xFE8
 49524                           indf1	equ	0xFE7
 49525                           postinc1	equ	0xFE6
 49526                           postdec1	equ	0xFE5
 49527                           plusw1	equ	0xFE3
 49528                           fsr1h	equ	0xFE2
 49529                           fsr1l	equ	0xFE1
 49530                           indf2	equ	0xFDF
 49531                           postinc2	equ	0xFDE
 49532                           postdec2	equ	0xFDD
 49533                           plusw2	equ	0xFDB
 49534                           fsr2h	equ	0xFDA
 49535                           fsr2l	equ	0xFD9
 49536                           status	equ	0xFD8
 49537                           
 49538 ;; *************** function _USBCtrlEPServiceComplete *****************
 49539 ;; Defined at:
 49540 ;;		line 1618 in file "usb_device.c"
 49541 ;; Parameters:    Size  Location     Type
 49542 ;;		None
 49543 ;; Auto vars:     Size  Location     Type
 49544 ;;		None
 49545 ;; Return value:  Size  Location     Type
 49546 ;;                  1    wreg      void 
 49547 ;; Registers used:
 49548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49549 ;; Tracked objects:
 49550 ;;		On entry : 0/0
 49551 ;;		On exit  : 0/0
 49552 ;;		Unchanged: 0/0
 49553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49558 ;;Total ram usage:        0 bytes
 49559 ;; Hardware stack levels used:    1
 49560 ;; Hardware stack levels required when called:    2
 49561 ;; This function calls:
 49562 ;;		_USBCtrlEPAllowDataStage
 49563 ;;		_USBCtrlEPAllowStatusStage
 49564 ;; This function is called by:
 49565 ;;		_USBCtrlTrfSetupHandler
 49566 ;; This function uses a non-reentrant model
 49567 ;;
 49568                           
 49569                           	psect	text206
 49570  0115DA                     __ptext206:
 49571                           	opt stack 0
 49572  0115DA                     _USBCtrlEPServiceComplete:
 49573                           	opt stack 12
 49574                           
 49575                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 49576                           
 49577                           ;incstack = 0
 49578  0115DA  9865               	bcf	3941,4,c	;volatile
 49579                           
 49580                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 49581  0115DC  BE55               	btfsc	_inPipes+3,7,c	;volatile
 49582  0115DE  D03A               	goto	i2l231
 49583                           
 49584                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 49585  0115E0  0101               	movlb	1	; () banked
 49586  0115E2  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 49587  0115E4  D00C               	goto	i2l232
 49588                           
 49589                           ; BSR set to: 1
 49590                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 49591  0115E6  0E02               	movlw	2
 49592  0115E8  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49593                           
 49594                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 49595  0115EA  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 49596  0115EC  B4D8               	btfsc	status,2,c
 49597                           
 49598                           ; BSR set to: 1
 49599                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 49600  0115EE  ECFA  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 49601                           
 49602                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 49603  0115F2  0E00               	movlw	0
 49604  0115F4  0101               	movlb	1	; () banked
 49605  0115F6  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49606                           
 49607                           ; BSR set to: 1
 49608                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 49609  0115F8  0E00               	movlw	0
 49610  0115FA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49611                           
 49612                           ;usb_device.c: 1654: }
 49613  0115FC  0012               	return	
 49614  0115FE                     i2l232:
 49615                           
 49616                           ; BSR set to: 1
 49617                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49618                           
 49619                           ; BSR set to: 1
 49620  0115FE  EE20 F001          	lfsr	2,1
 49621  011602  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49622  011604  26D9               	addwf	fsr2l,f,c
 49623  011606  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49624  011608  22DA               	addwfc	fsr2h,f,c
 49625  01160A  0E08               	movlw	8
 49626  01160C  6EDF               	movwf	indf2,c
 49627                           
 49628                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49629  01160E  EE20 F002          	lfsr	2,2
 49630  011612  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49631  011614  26D9               	addwf	fsr2l,f,c
 49632  011616  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49633  011618  22DA               	addwfc	fsr2h,f,c
 49634  01161A  0E30               	movlw	48
 49635  01161C  6EDE               	movwf	postinc2,c
 49636  01161E  0E0D               	movlw	13
 49637  011620  6EDD               	movwf	postdec2,c
 49638                           
 49639                           ; BSR set to: 1
 49640                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49641  011622  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49642  011626  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49643  01162A  0E0C               	movlw	12
 49644  01162C  6EDF               	movwf	indf2,c
 49645                           
 49646                           ; BSR set to: 1
 49647                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49648  01162E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49649  011632  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49650  011636  0E00               	movlw	0
 49651  011638  8EDB               	bsf	plusw2,7,c
 49652                           
 49653                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 49654  01163A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49655  01163E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49656  011642  0E04               	movlw	4
 49657  011644  6EDF               	movwf	indf2,c
 49658                           
 49659                           ; BSR set to: 1
 49660                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49661  011646  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49662  01164A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49663  01164E  0E00               	movlw	0
 49664  011650  8EDB               	bsf	plusw2,7,c
 49665                           
 49666                           ; BSR set to: 1
 49667                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 49668  011652  0012               	return	
 49669  011654                     i2l231:
 49670                           
 49671                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 49672  011654  010D               	movlb	13	; () banked
 49673  011656  AF30               	btfss	48,7,b	;volatile
 49674  011658  D012               	goto	i2l236
 49675                           
 49676                           ; BSR set to: 13
 49677                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 49678  01165A  0E01               	movlw	1
 49679  01165C  0101               	movlb	1	; () banked
 49680  01165E  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49681                           
 49682                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 49683  011660  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 49684  011662  B4D8               	btfsc	status,2,c
 49685                           
 49686                           ; BSR set to: 1
 49687                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 49688  011664  ECFA  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 49689                           
 49690                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 49691  011668  0E00               	movlw	0
 49692  01166A  0101               	movlb	1	; () banked
 49693  01166C  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49694                           
 49695                           ; BSR set to: 1
 49696                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 49697  01166E  0E00               	movlw	0
 49698  011670  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49699                           
 49700                           ; BSR set to: 1
 49701                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 49702  011672  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49703  011674  A4D8               	btfss	status,2,c
 49704  011676  0012               	return	
 49705                           
 49706                           ; BSR set to: 1
 49707                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 49708  011678  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49709                           
 49710                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 49711  01167C  0012               	return	
 49712  01167E                     i2l236:
 49713                           
 49714                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 49715  01167E  0E02               	movlw	2
 49716  011680  0101               	movlb	1	; () banked
 49717  011682  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49718                           
 49719                           ; BSR set to: 1
 49720                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 49721  011684  EE20 F001          	lfsr	2,1
 49722  011688  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49723  01168A  26D9               	addwf	fsr2l,f,c
 49724  01168C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49725  01168E  22DA               	addwfc	fsr2h,f,c
 49726  011690  0E08               	movlw	8
 49727  011692  6EDF               	movwf	indf2,c
 49728                           
 49729                           ; BSR set to: 1
 49730                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49731  011694  EE20 F002          	lfsr	2,2
 49732  011698  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49733  01169A  26D9               	addwf	fsr2l,f,c
 49734  01169C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49735  01169E  22DA               	addwfc	fsr2h,f,c
 49736  0116A0  0E30               	movlw	48
 49737  0116A2  6EDE               	movwf	postinc2,c
 49738  0116A4  0E0D               	movlw	13
 49739  0116A6  6EDD               	movwf	postdec2,c
 49740                           
 49741                           ; BSR set to: 1
 49742                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49743  0116A8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49744  0116AC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49745  0116B0  0E04               	movlw	4
 49746  0116B2  6EDF               	movwf	indf2,c
 49747                           
 49748                           ; BSR set to: 1
 49749                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49750  0116B4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49751  0116B8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49752  0116BC  0E00               	movlw	0
 49753  0116BE  8EDB               	bsf	plusw2,7,c
 49754                           
 49755                           ; BSR set to: 1
 49756                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 49757  0116C0  0E00               	movlw	0
 49758  0116C2  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49759                           
 49760                           ; BSR set to: 1
 49761                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 49762  0116C4  0E00               	movlw	0
 49763  0116C6  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49764                           
 49765                           ; BSR set to: 1
 49766                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 49767  0116C8  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49768  0116CA  A4D8               	btfss	status,2,c
 49769  0116CC  0012               	return	
 49770                           
 49771                           ; BSR set to: 1
 49772                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 49773  0116CE  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49774  0116D2  0012               	return	
 49775  0116D4                     __end_of_USBCtrlEPServiceComplete:
 49776                           	opt stack 0
 49777                           tosu	equ	0xFFF
 49778                           tosh	equ	0xFFE
 49779                           tosl	equ	0xFFD
 49780                           pclatu	equ	0xFFB
 49781                           pclath	equ	0xFFA
 49782                           tblptru	equ	0xFF8
 49783                           tblptrh	equ	0xFF7
 49784                           tblptrl	equ	0xFF6
 49785                           tablat	equ	0xFF5
 49786                           prodh	equ	0xFF4
 49787                           prodl	equ	0xFF3
 49788                           intcon	equ	0xFF2
 49789                           indf0	equ	0xFEF
 49790                           postinc0	equ	0xFEE
 49791                           fsr0h	equ	0xFEA
 49792                           fsr0l	equ	0xFE9
 49793                           wreg	equ	0xFE8
 49794                           indf1	equ	0xFE7
 49795                           postinc1	equ	0xFE6
 49796                           postdec1	equ	0xFE5
 49797                           plusw1	equ	0xFE3
 49798                           fsr1h	equ	0xFE2
 49799                           fsr1l	equ	0xFE1
 49800                           indf2	equ	0xFDF
 49801                           postinc2	equ	0xFDE
 49802                           postdec2	equ	0xFDD
 49803                           plusw2	equ	0xFDB
 49804                           fsr2h	equ	0xFDA
 49805                           fsr2l	equ	0xFD9
 49806                           status	equ	0xFD8
 49807                           
 49808 ;; *************** function _USBCtrlEPAllowDataStage *****************
 49809 ;; Defined at:
 49810 ;;		line 1490 in file "usb_device.c"
 49811 ;; Parameters:    Size  Location     Type
 49812 ;;		None
 49813 ;; Auto vars:     Size  Location     Type
 49814 ;;		None
 49815 ;; Return value:  Size  Location     Type
 49816 ;;                  1    wreg      void 
 49817 ;; Registers used:
 49818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49819 ;; Tracked objects:
 49820 ;;		On entry : 0/0
 49821 ;;		On exit  : 0/0
 49822 ;;		Unchanged: 0/0
 49823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49828 ;;Total ram usage:        0 bytes
 49829 ;; Hardware stack levels used:    1
 49830 ;; Hardware stack levels required when called:    1
 49831 ;; This function calls:
 49832 ;;		_USBCtrlTrfTxService
 49833 ;; This function is called by:
 49834 ;;		_USBCtrlEPServiceComplete
 49835 ;; This function uses a non-reentrant model
 49836 ;;
 49837                           
 49838                           	psect	text207
 49839  0133F4                     __ptext207:
 49840                           	opt stack 0
 49841  0133F4                     _USBCtrlEPAllowDataStage:
 49842                           	opt stack 12
 49843                           
 49844                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 49845                           
 49846                           ;incstack = 0
 49847  0133F4  0E00               	movlw	0
 49848  0133F6  0101               	movlb	1	; () banked
 49849  0133F8  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49850                           
 49851                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 49852  0133FA  0E00               	movlw	0
 49853  0133FC  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49854                           
 49855                           ; BSR set to: 1
 49856                           ;usb_device.c: 1495: if(controlTransferState == 2)
 49857  0133FE  0E02               	movlw	2
 49858  013400  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 49859  013402  A4D8               	btfss	status,2,c
 49860  013404  D01F               	goto	i2l220
 49861                           
 49862                           ; BSR set to: 1
 49863                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 49864  013406  EE20 F001          	lfsr	2,1
 49865  01340A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49866  01340C  26D9               	addwf	fsr2l,f,c
 49867  01340E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49868  013410  22DA               	addwfc	fsr2h,f,c
 49869  013412  0E08               	movlw	8
 49870  013414  6EDF               	movwf	indf2,c
 49871                           
 49872                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49873  013416  EE20 F002          	lfsr	2,2
 49874  01341A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49875  01341C  26D9               	addwf	fsr2l,f,c
 49876  01341E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49877  013420  22DA               	addwfc	fsr2h,f,c
 49878  013422  0E38               	movlw	56
 49879  013424  6EDE               	movwf	postinc2,c
 49880  013426  0E0D               	movlw	13
 49881  013428  6EDD               	movwf	postdec2,c
 49882                           
 49883                           ; BSR set to: 1
 49884                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 49885  01342A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49886  01342E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49887  013432  0E48               	movlw	72
 49888  013434  6EDF               	movwf	indf2,c
 49889                           
 49890                           ; BSR set to: 1
 49891                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49892  013436  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49893  01343A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49894  01343E  0E00               	movlw	0
 49895  013440  8EDB               	bsf	plusw2,7,c
 49896                           
 49897                           ;usb_device.c: 1502: }
 49898  013442  0012               	return	
 49899  013444                     i2l220:
 49900                           
 49901                           ; BSR set to: 1
 49902                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 49903                           
 49904                           ; BSR set to: 1
 49905  013444  5056               	movf	_inPipes+4,w,c	;volatile
 49906  013446  010D               	movlb	13	; () banked
 49907  013448  5D36               	subwf	54,w,b	;volatile
 49908  01344A  5057               	movf	_inPipes+5,w,c	;volatile
 49909  01344C  5937               	subwfb	55,w,b	;volatile
 49910  01344E  B0D8               	btfsc	status,0,c
 49911  013450  D004               	goto	i2l222
 49912                           
 49913                           ; BSR set to: 13
 49914                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 49915  013452  CD36 F056          	movff	3382,_inPipes+4	;volatile
 49916  013456  CD37 F057          	movff	3383,_inPipes+5	;volatile
 49917  01345A                     i2l222:
 49918                           
 49919                           ; BSR set to: 13
 49920                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 49921                           
 49922                           ; BSR set to: 13
 49923  01345A  EC83  F092         	call	_USBCtrlTrfTxService	;wreg free
 49924                           
 49925                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 49926  01345E  0101               	movlb	1	; () banked
 49927  013460  EE20 F002          	lfsr	2,2
 49928  013464  511B               	movf	_pBDTEntryIn& (0+255),w,b
 49929  013466  26D9               	addwf	fsr2l,f,c
 49930  013468  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49931  01346A  22DA               	addwfc	fsr2h,f,c
 49932  01346C  0E38               	movlw	56
 49933  01346E  6EDE               	movwf	postinc2,c
 49934  013470  0E0D               	movlw	13
 49935  013472  6EDD               	movwf	postdec2,c
 49936                           
 49937                           ; BSR set to: 1
 49938                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49939  013474  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49940  013478  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49941  01347C  0E48               	movlw	72
 49942  01347E  6EDF               	movwf	indf2,c
 49943                           
 49944                           ; BSR set to: 1
 49945                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49946  013480  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49947  013484  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49948  013488  0E00               	movlw	0
 49949  01348A  8EDB               	bsf	plusw2,7,c
 49950  01348C  0012               	return	
 49951  01348E                     __end_of_USBCtrlEPAllowDataStage:
 49952                           	opt stack 0
 49953                           tosu	equ	0xFFF
 49954                           tosh	equ	0xFFE
 49955                           tosl	equ	0xFFD
 49956                           pclatu	equ	0xFFB
 49957                           pclath	equ	0xFFA
 49958                           tblptru	equ	0xFF8
 49959                           tblptrh	equ	0xFF7
 49960                           tblptrl	equ	0xFF6
 49961                           tablat	equ	0xFF5
 49962                           prodh	equ	0xFF4
 49963                           prodl	equ	0xFF3
 49964                           intcon	equ	0xFF2
 49965                           indf0	equ	0xFEF
 49966                           postinc0	equ	0xFEE
 49967                           fsr0h	equ	0xFEA
 49968                           fsr0l	equ	0xFE9
 49969                           wreg	equ	0xFE8
 49970                           indf1	equ	0xFE7
 49971                           postinc1	equ	0xFE6
 49972                           postdec1	equ	0xFE5
 49973                           plusw1	equ	0xFE3
 49974                           fsr1h	equ	0xFE2
 49975                           fsr1l	equ	0xFE1
 49976                           indf2	equ	0xFDF
 49977                           postinc2	equ	0xFDE
 49978                           postdec2	equ	0xFDD
 49979                           plusw2	equ	0xFDB
 49980                           fsr2h	equ	0xFDA
 49981                           fsr2l	equ	0xFD9
 49982                           status	equ	0xFD8
 49983                           
 49984 ;; *************** function _USBCheckStdRequest *****************
 49985 ;; Defined at:
 49986 ;;		line 2688 in file "usb_device.c"
 49987 ;; Parameters:    Size  Location     Type
 49988 ;;		None
 49989 ;; Auto vars:     Size  Location     Type
 49990 ;;		None
 49991 ;; Return value:  Size  Location     Type
 49992 ;;                  1    wreg      void 
 49993 ;; Registers used:
 49994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49995 ;; Tracked objects:
 49996 ;;		On entry : 0/0
 49997 ;;		On exit  : 0/0
 49998 ;;		Unchanged: 0/0
 49999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50004 ;;Total ram usage:        0 bytes
 50005 ;; Hardware stack levels used:    1
 50006 ;; Hardware stack levels required when called:    5
 50007 ;; This function calls:
 50008 ;;		_USBStdFeatureReqHandler
 50009 ;;		_USBStdGetDscHandler
 50010 ;;		_USBStdGetStatusHandler
 50011 ;;		_USBStdSetCfgHandler
 50012 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50013 ;; This function is called by:
 50014 ;;		_USBCtrlTrfSetupHandler
 50015 ;; This function uses a non-reentrant model
 50016 ;;
 50017                           
 50018                           	psect	text208
 50019  012358                     __ptext208:
 50020                           	opt stack 0
 50021  012358                     _USBCheckStdRequest:
 50022                           	opt stack 9
 50023                           
 50024                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 50025                           
 50026                           ; BSR set to: 1
 50027                           ;incstack = 0
 50028  012358  010D               	movlb	13	; () banked
 50029  01235A  3930               	swapf	48,w,b	;volatile
 50030  01235C  32E8               	rrcf	wreg,f,c
 50031  01235E  0B03               	andlw	3
 50032  012360  0900               	iorlw	0
 50033  012362  A4D8               	btfss	status,2,c
 50034  012364  0012               	return	
 50035  012366  D042               	goto	i2l355
 50036  012368                     i2l356:
 50037                           
 50038                           ; BSR set to: 13
 50039                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 50040  012368  8E55               	bsf	_inPipes+3,7,c	;volatile
 50041                           
 50042                           ; BSR set to: 13
 50043                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 50044  01236A  0E08               	movlw	8
 50045  01236C  6E5E               	movwf	_USBDeviceState,c	;volatile
 50046                           
 50047                           ;usb_device.c: 2698: break;
 50048  01236E  0012               	return	
 50049  012370                     
 50050                           ; BSR set to: 13
 50051                           ;usb_device.c: 2700: USBStdGetDscHandler();
 50052                           
 50053                           ; BSR set to: 13
 50054  012370  EC8D  F083         	call	_USBStdGetDscHandler	;wreg free
 50055                           
 50056                           ;usb_device.c: 2701: break;
 50057  012374  0012               	return	
 50058  012376                     
 50059                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 50060  012376  ECD1  F090         	call	_USBStdSetCfgHandler	;wreg free
 50061                           
 50062                           ;usb_device.c: 2704: break;
 50063  01237A  0012               	return	
 50064  01237C                     
 50065                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 50066  01237C  0EC2               	movlw	low _USBActiveConfiguration
 50067  01237E  6E52               	movwf	_inPipes,c	;volatile
 50068  012380  0E01               	movlw	high _USBActiveConfiguration
 50069  012382  6E53               	movwf	_inPipes+1,c	;volatile
 50070                           
 50071                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50072  012384  8055               	bsf	_inPipes+3,0,c	;volatile
 50073                           
 50074                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 50075  012386  0E01               	movlw	1
 50076  012388  6E56               	movwf	_inPipes+4,c	;volatile
 50077                           
 50078                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 50079  01238A  8E55               	bsf	_inPipes+3,7,c	;volatile
 50080                           
 50081                           ;usb_device.c: 2710: break;
 50082  01238C  0012               	return	
 50083  01238E                     
 50084                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 50085  01238E  EC5D  F099         	call	_USBStdGetStatusHandler	;wreg free
 50086                           
 50087                           ;usb_device.c: 2713: break;
 50088  012392  0012               	return	
 50089  012394                     
 50090                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 50091  012394  EC33  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 50092                           
 50093                           ;usb_device.c: 2717: break;
 50094  012398  0012               	return	
 50095  01239A                     
 50096                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 50097  01239A  010D               	movlb	13	; () banked
 50098  01239C  5134               	movf	52,w,b	;volatile
 50099  01239E  0D01               	mullw	1
 50100  0123A0  0EBD               	movlw	low _USBAlternateInterface
 50101  0123A2  24F3               	addwf	prodl,w,c
 50102  0123A4  6E52               	movwf	_inPipes,c	;volatile
 50103  0123A6  0E01               	movlw	high _USBAlternateInterface
 50104  0123A8  20F4               	addwfc	prodh,w,c
 50105  0123AA  6E53               	movwf	_inPipes+1,c	;volatile
 50106                           
 50107                           ; BSR set to: 13
 50108                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50109  0123AC  8055               	bsf	_inPipes+3,0,c	;volatile
 50110                           
 50111                           ; BSR set to: 13
 50112                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 50113  0123AE  0E01               	movlw	1
 50114  0123B0  6E56               	movwf	_inPipes+4,c	;volatile
 50115                           
 50116                           ; BSR set to: 13
 50117                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 50118  0123B2  8E55               	bsf	_inPipes+3,7,c	;volatile
 50119                           
 50120                           ;usb_device.c: 2723: break;
 50121  0123B4  0012               	return	
 50122  0123B6                     i2l365:
 50123                           
 50124                           ; BSR set to: 13
 50125                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 50126  0123B6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50127                           
 50128                           ; BSR set to: 13
 50129                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 50130  0123B8  5134               	movf	52,w,b	;volatile
 50131  0123BA  0D01               	mullw	1
 50132  0123BC  0EBD               	movlw	low _USBAlternateInterface
 50133  0123BE  24F3               	addwf	prodl,w,c
 50134  0123C0  6ED9               	movwf	fsr2l,c
 50135  0123C2  0E01               	movlw	high _USBAlternateInterface
 50136  0123C4  20F4               	addwfc	prodh,w,c
 50137  0123C6  6EDA               	movwf	fsr2h,c
 50138  0123C8  CD32 FFDF          	movff	3378,indf2	;volatile
 50139                           
 50140                           ;usb_device.c: 2727: break;
 50141  0123CC  0012               	return	
 50142  0123CE                     
 50143                           ; BSR set to: 13
 50144                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 50145                           
 50146                           ; BSR set to: 13
 50147  0123CE  0E00               	movlw	0
 50148  0123D0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50149  0123D2  0E02               	movlw	2
 50150  0123D4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50151  0123D6  0E00               	movlw	0
 50152  0123D8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50153  0123DA  0E00               	movlw	0
 50154  0123DC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50155  0123DE  0E00               	movlw	0
 50156  0123E0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50157  0123E2  0E00               	movlw	0
 50158  0123E4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50159  0123E6  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50160                           
 50161                           ;usb_device.c: 2734: }
 50162                           
 50163                           ;usb_device.c: 2733: break;
 50164                           
 50165                           ;usb_device.c: 2732: default:
 50166                           
 50167                           ;usb_device.c: 2731: case 12:
 50168                           
 50169                           ;usb_device.c: 2730: break;
 50170  0123EA  0012               	return	
 50171  0123EC                     i2l355:
 50172  0123EC  010D               	movlb	13	; () banked
 50173  0123EE  5131               	movf	49,w,b	;volatile
 50174                           
 50175                           ; Switch size 1, requested type "space"
 50176                           ; Number of cases is 11, Range of values is 0 to 12
 50177                           ; switch strategies available:
 50178                           ; Name         Instructions Cycles
 50179                           ; simple_byte           34    18 (average)
 50180                           ;	Chosen strategy is simple_byte
 50181  0123F0  0A00               	xorlw	0	; case 0
 50182  0123F2  B4D8               	btfsc	status,2,c
 50183  0123F4  D7CC               	goto	i2l361
 50184  0123F6  0A01               	xorlw	1	; case 1
 50185  0123F8  B4D8               	btfsc	status,2,c
 50186  0123FA  D7CC               	goto	i2l362
 50187  0123FC  0A02               	xorlw	2	; case 3
 50188  0123FE  B4D8               	btfsc	status,2,c
 50189  012400  D7C9               	goto	i2l362
 50190  012402  0A06               	xorlw	6	; case 5
 50191  012404  B4D8               	btfsc	status,2,c
 50192  012406  D7B0               	goto	i2l356
 50193  012408  0A03               	xorlw	3	; case 6
 50194  01240A  B4D8               	btfsc	status,2,c
 50195  01240C  D7B1               	goto	i2l358
 50196  01240E  0A01               	xorlw	1	; case 7
 50197  012410  B4D8               	btfsc	status,2,c
 50198  012412  D7DD               	goto	i2l366
 50199  012414  0A0F               	xorlw	15	; case 8
 50200  012416  B4D8               	btfsc	status,2,c
 50201  012418  D7B1               	goto	i2l360
 50202  01241A  0A01               	xorlw	1	; case 9
 50203  01241C  B4D8               	btfsc	status,2,c
 50204  01241E  D7AB               	goto	i2l359
 50205  012420  0A03               	xorlw	3	; case 10
 50206  012422  B4D8               	btfsc	status,2,c
 50207  012424  D7BA               	goto	i2l364
 50208  012426  0A01               	xorlw	1	; case 11
 50209  012428  B4D8               	btfsc	status,2,c
 50210  01242A  D7C5               	goto	i2l365
 50211  01242C  0A07               	xorlw	7	; case 12
 50212  01242E  0012               	return	
 50213  012430                     __end_of_USBCheckStdRequest:
 50214                           	opt stack 0
 50215                           tosu	equ	0xFFF
 50216                           tosh	equ	0xFFE
 50217                           tosl	equ	0xFFD
 50218                           pclatu	equ	0xFFB
 50219                           pclath	equ	0xFFA
 50220                           tblptru	equ	0xFF8
 50221                           tblptrh	equ	0xFF7
 50222                           tblptrl	equ	0xFF6
 50223                           tablat	equ	0xFF5
 50224                           prodh	equ	0xFF4
 50225                           prodl	equ	0xFF3
 50226                           intcon	equ	0xFF2
 50227                           indf0	equ	0xFEF
 50228                           postinc0	equ	0xFEE
 50229                           fsr0h	equ	0xFEA
 50230                           fsr0l	equ	0xFE9
 50231                           wreg	equ	0xFE8
 50232                           indf1	equ	0xFE7
 50233                           postinc1	equ	0xFE6
 50234                           postdec1	equ	0xFE5
 50235                           plusw1	equ	0xFE3
 50236                           fsr1h	equ	0xFE2
 50237                           fsr1l	equ	0xFE1
 50238                           indf2	equ	0xFDF
 50239                           postinc2	equ	0xFDE
 50240                           postdec2	equ	0xFDD
 50241                           plusw2	equ	0xFDB
 50242                           fsr2h	equ	0xFDA
 50243                           fsr2l	equ	0xFD9
 50244                           status	equ	0xFD8
 50245                           
 50246 ;; *************** function _USBStdSetCfgHandler *****************
 50247 ;; Defined at:
 50248 ;;		line 1970 in file "usb_device.c"
 50249 ;; Parameters:    Size  Location     Type
 50250 ;;		None
 50251 ;; Auto vars:     Size  Location     Type
 50252 ;;  i               1   23[COMRAM] unsigned char 
 50253 ;; Return value:  Size  Location     Type
 50254 ;;                  1    wreg      void 
 50255 ;; Registers used:
 50256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50257 ;; Tracked objects:
 50258 ;;		On entry : 0/0
 50259 ;;		On exit  : 0/0
 50260 ;;		Unchanged: 0/0
 50261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50266 ;;Total ram usage:        1 bytes
 50267 ;; Hardware stack levels used:    1
 50268 ;; Hardware stack levels required when called:    4
 50269 ;; This function calls:
 50270 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50271 ;;		i2_memset
 50272 ;; This function is called by:
 50273 ;;		_USBCheckStdRequest
 50274 ;; This function uses a non-reentrant model
 50275 ;;
 50276                           
 50277                           	psect	text209
 50278  0121A2                     __ptext209:
 50279                           	opt stack 0
 50280  0121A2                     _USBStdSetCfgHandler:
 50281                           	opt stack 9
 50282                           
 50283                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 50284                           
 50285                           ;incstack = 0
 50286  0121A2  8E55               	bsf	_inPipes+3,7,c	;volatile
 50287                           
 50288                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 50289  0121A4  0E27               	movlw	39
 50290  0121A6  6E01               	movwf	i2memset@p1,c
 50291  0121A8  0E0F               	movlw	15
 50292  0121AA  6E02               	movwf	i2memset@p1+1,c
 50293  0121AC  0E00               	movlw	0
 50294  0121AE  6E04               	movwf	i2memset@c+1,c
 50295  0121B0  0E00               	movlw	0
 50296  0121B2  6E03               	movwf	i2memset@c,c
 50297  0121B4  0E00               	movlw	0
 50298  0121B6  6E06               	movwf	i2memset@n+1,c
 50299  0121B8  0E02               	movlw	2
 50300  0121BA  6E05               	movwf	i2memset@n,c
 50301  0121BC  EC5E  F0AA         	call	i2_memset	;wreg free
 50302                           
 50303                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 50304  0121C0  0E00               	movlw	0
 50305  0121C2  6E01               	movwf	i2memset@p1,c
 50306  0121C4  0E0D               	movlw	13
 50307  0121C6  6E02               	movwf	i2memset@p1+1,c
 50308  0121C8  0E00               	movlw	0
 50309  0121CA  6E04               	movwf	i2memset@c+1,c
 50310  0121CC  0E00               	movlw	0
 50311  0121CE  6E03               	movwf	i2memset@c,c
 50312  0121D0  0E00               	movlw	0
 50313  0121D2  6E06               	movwf	i2memset@n+1,c
 50314  0121D4  0E30               	movlw	48
 50315  0121D6  6E05               	movwf	i2memset@n,c
 50316  0121D8  EC5E  F0AA         	call	i2_memset	;wreg free
 50317                           
 50318                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 50319  0121DC  8C65               	bsf	3941,6,c	;volatile
 50320                           
 50321                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 50322  0121DE  0E00               	movlw	0
 50323  0121E0  6E18               	movwf	USBStdSetCfgHandler@i,c
 50324  0121E2                     i2l13364:
 50325  0121E2  0E02               	movlw	2
 50326  0121E4  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 50327  0121E6  D001               	goto	i2l272
 50328  0121E8  D016               	goto	i2u1197_40
 50329  0121EA                     i2l272:
 50330                           
 50331                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 50332  0121EA  5018               	movf	USBStdSetCfgHandler@i,w,c
 50333  0121EC  0D01               	mullw	1
 50334  0121EE  0E3C               	movlw	low _ep_data_in
 50335  0121F0  24F3               	addwf	prodl,w,c
 50336  0121F2  6ED9               	movwf	fsr2l,c
 50337  0121F4  0E01               	movlw	high _ep_data_in
 50338  0121F6  20F4               	addwfc	prodh,w,c
 50339  0121F8  6EDA               	movwf	fsr2h,c
 50340  0121FA  0E00               	movlw	0
 50341  0121FC  6EDF               	movwf	indf2,c
 50342                           
 50343                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 50344  0121FE  5018               	movf	USBStdSetCfgHandler@i,w,c
 50345  012200  0D01               	mullw	1
 50346  012202  0E39               	movlw	low _ep_data_out
 50347  012204  24F3               	addwf	prodl,w,c
 50348  012206  6ED9               	movwf	fsr2l,c
 50349  012208  0E01               	movlw	high _ep_data_out
 50350  01220A  20F4               	addwfc	prodh,w,c
 50351  01220C  6EDA               	movwf	fsr2h,c
 50352  01220E  0E00               	movlw	0
 50353  012210  6EDF               	movwf	indf2,c
 50354  012212  2A18               	incf	USBStdSetCfgHandler@i,f,c
 50355  012214  D7E6               	goto	i2l13364
 50356  012216                     i2u1197_40:
 50357                           
 50358                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 50359  012216  0EBD               	movlw	low _USBAlternateInterface
 50360  012218  6E01               	movwf	i2memset@p1,c
 50361  01221A  0E01               	movlw	high _USBAlternateInterface
 50362  01221C  6E02               	movwf	i2memset@p1+1,c
 50363  01221E  0E00               	movlw	0
 50364  012220  6E04               	movwf	i2memset@c+1,c
 50365  012222  0E00               	movlw	0
 50366  012224  6E03               	movwf	i2memset@c,c
 50367  012226  0E00               	movlw	0
 50368  012228  6E06               	movwf	i2memset@n+1,c
 50369  01222A  0E02               	movlw	2
 50370  01222C  6E05               	movwf	i2memset@n,c
 50371  01222E  EC5E  F0AA         	call	i2_memset	;wreg free
 50372                           
 50373                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 50374  012232  9C65               	bcf	3941,6,c	;volatile
 50375                           
 50376                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 50377  012234  0E08               	movlw	8
 50378  012236  0101               	movlb	1	; () banked
 50379  012238  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 50380  01223A  0E0D               	movlw	13
 50381  01223C  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50382                           
 50383                           ; BSR set to: 1
 50384                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 50385  01223E  0E00               	movlw	0
 50386  012240  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 50387  012242  0E0D               	movlw	13
 50388  012244  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 50389                           
 50390                           ; BSR set to: 1
 50391                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50392  012246  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50393  01224A  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50394                           
 50395                           ; BSR set to: 1
 50396                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 50397  01224E  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 50398                           
 50399                           ; BSR set to: 1
 50400                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 50401  012252  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 50402  012254  A4D8               	btfss	status,2,c
 50403  012256  D003               	goto	i2l274
 50404                           
 50405                           ; BSR set to: 1
 50406                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 50407  012258  0E10               	movlw	16
 50408  01225A  6E5E               	movwf	_USBDeviceState,c	;volatile
 50409                           
 50410                           ;usb_device.c: 2015: }
 50411  01225C  0012               	return	
 50412  01225E                     i2l274:
 50413                           
 50414                           ; BSR set to: 1
 50415                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 50416                           
 50417                           ; BSR set to: 1
 50418  01225E  0E00               	movlw	0
 50419  012260  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50420  012262  0E01               	movlw	1
 50421  012264  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50422  012266  0EC2               	movlw	low _USBActiveConfiguration
 50423  012268  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50424  01226A  0E01               	movlw	high _USBActiveConfiguration
 50425  01226C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50426  01226E  0E00               	movlw	0
 50427  012270  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50428  012272  0E01               	movlw	1
 50429  012274  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50430  012276  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50431                           
 50432                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 50433  01227A  0E20               	movlw	32
 50434  01227C  6E5E               	movwf	_USBDeviceState,c	;volatile
 50435  01227E  0012               	return	
 50436  012280                     __end_of_USBStdSetCfgHandler:
 50437                           	opt stack 0
 50438                           tosu	equ	0xFFF
 50439                           tosh	equ	0xFFE
 50440                           tosl	equ	0xFFD
 50441                           pclatu	equ	0xFFB
 50442                           pclath	equ	0xFFA
 50443                           tblptru	equ	0xFF8
 50444                           tblptrh	equ	0xFF7
 50445                           tblptrl	equ	0xFF6
 50446                           tablat	equ	0xFF5
 50447                           prodh	equ	0xFF4
 50448                           prodl	equ	0xFF3
 50449                           intcon	equ	0xFF2
 50450                           indf0	equ	0xFEF
 50451                           postinc0	equ	0xFEE
 50452                           fsr0h	equ	0xFEA
 50453                           fsr0l	equ	0xFE9
 50454                           wreg	equ	0xFE8
 50455                           indf1	equ	0xFE7
 50456                           postinc1	equ	0xFE6
 50457                           postdec1	equ	0xFE5
 50458                           plusw1	equ	0xFE3
 50459                           fsr1h	equ	0xFE2
 50460                           fsr1l	equ	0xFE1
 50461                           indf2	equ	0xFDF
 50462                           postinc2	equ	0xFDE
 50463                           postdec2	equ	0xFDD
 50464                           plusw2	equ	0xFDB
 50465                           fsr2h	equ	0xFDA
 50466                           fsr2l	equ	0xFD9
 50467                           status	equ	0xFD8
 50468                           
 50469 ;; *************** function i2_memset *****************
 50470 ;; Defined at:
 50471 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 50472 ;; Parameters:    Size  Location     Type
 50473 ;;  p1              2    0[COMRAM] PTR void 
 50474 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50475 ;;  c               2    2[COMRAM] int 
 50476 ;;  n               2    4[COMRAM] unsigned int 
 50477 ;; Auto vars:     Size  Location     Type
 50478 ;;  memset          2    6[COMRAM] PTR unsigned char 
 50479 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50480 ;; Return value:  Size  Location     Type
 50481 ;;                  2    0[COMRAM] PTR void 
 50482 ;; Registers used:
 50483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50484 ;; Tracked objects:
 50485 ;;		On entry : 0/0
 50486 ;;		On exit  : 0/0
 50487 ;;		Unchanged: 0/0
 50488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50489 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50492 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50493 ;;Total ram usage:        8 bytes
 50494 ;; Hardware stack levels used:    1
 50495 ;; This function calls:
 50496 ;;		Nothing
 50497 ;; This function is called by:
 50498 ;;		_USBStdSetCfgHandler
 50499 ;;		i2_USBDeviceInit
 50500 ;; This function uses a non-reentrant model
 50501 ;;
 50502                           
 50503                           	psect	text210
 50504  0154BC                     __ptext210:
 50505                           	opt stack 0
 50506  0154BC                     i2_memset:
 50507                           	opt stack 15
 50508                           
 50509                           ;incstack = 0
 50510  0154BC  C001  F007         	movff	i2memset@p1,i2memset@p
 50511  0154C0  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 50512  0154C4  D008               	goto	i2l3702
 50513  0154C6                     i2l13294:
 50514  0154C6  C007  FFD9         	movff	i2memset@p,fsr2l
 50515  0154CA  C008  FFDA         	movff	i2memset@p+1,fsr2h
 50516  0154CE  C003  FFDF         	movff	i2memset@c,indf2
 50517  0154D2  4A07               	infsnz	i2memset@p,f,c
 50518  0154D4  2A08               	incf	i2memset@p+1,f,c
 50519  0154D6                     i2l3702:
 50520  0154D6  0605               	decf	i2memset@n,f,c
 50521  0154D8  A0D8               	btfss	status,0,c
 50522  0154DA  0606               	decf	i2memset@n+1,f,c
 50523  0154DC  2805               	incf	i2memset@n,w,c
 50524  0154DE  E1F3               	bnz	i2l13294
 50525  0154E0  2806               	incf	i2memset@n+1,w,c
 50526  0154E2  B4D8               	btfsc	status,2,c
 50527  0154E4  0012               	return	
 50528  0154E6  D7EF               	goto	i2l3703
 50529  0154E8                     __end_ofi2_memset:
 50530                           	opt stack 0
 50531                           tosu	equ	0xFFF
 50532                           tosh	equ	0xFFE
 50533                           tosl	equ	0xFFD
 50534                           pclatu	equ	0xFFB
 50535                           pclath	equ	0xFFA
 50536                           tblptru	equ	0xFF8
 50537                           tblptrh	equ	0xFF7
 50538                           tblptrl	equ	0xFF6
 50539                           tablat	equ	0xFF5
 50540                           prodh	equ	0xFF4
 50541                           prodl	equ	0xFF3
 50542                           intcon	equ	0xFF2
 50543                           indf0	equ	0xFEF
 50544                           postinc0	equ	0xFEE
 50545                           fsr0h	equ	0xFEA
 50546                           fsr0l	equ	0xFE9
 50547                           wreg	equ	0xFE8
 50548                           indf1	equ	0xFE7
 50549                           postinc1	equ	0xFE6
 50550                           postdec1	equ	0xFE5
 50551                           plusw1	equ	0xFE3
 50552                           fsr1h	equ	0xFE2
 50553                           fsr1l	equ	0xFE1
 50554                           indf2	equ	0xFDF
 50555                           postinc2	equ	0xFDE
 50556                           postdec2	equ	0xFDD
 50557                           plusw2	equ	0xFDB
 50558                           fsr2h	equ	0xFDA
 50559                           fsr2l	equ	0xFD9
 50560                           status	equ	0xFD8
 50561                           
 50562 ;; *************** function _USBStdGetStatusHandler *****************
 50563 ;; Defined at:
 50564 ;;		line 2131 in file "usb_device.c"
 50565 ;; Parameters:    Size  Location     Type
 50566 ;;		None
 50567 ;; Auto vars:     Size  Location     Type
 50568 ;;  p               2    1[COMRAM] PTR struct __BDT
 50569 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50570 ;; Return value:  Size  Location     Type
 50571 ;;                  1    wreg      void 
 50572 ;; Registers used:
 50573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50574 ;; Tracked objects:
 50575 ;;		On entry : 0/0
 50576 ;;		On exit  : 0/0
 50577 ;;		Unchanged: 0/0
 50578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50582 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50583 ;;Total ram usage:        3 bytes
 50584 ;; Hardware stack levels used:    1
 50585 ;; This function calls:
 50586 ;;		Nothing
 50587 ;; This function is called by:
 50588 ;;		_USBCheckStdRequest
 50589 ;; This function uses a non-reentrant model
 50590 ;;
 50591                           
 50592                           	psect	text211
 50593  0132BA                     __ptext211:
 50594                           	opt stack 0
 50595  0132BA                     _USBStdGetStatusHandler:
 50596                           	opt stack 13
 50597                           
 50598                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 50599                           
 50600                           ;incstack = 0
 50601  0132BA  0E00               	movlw	0
 50602  0132BC  010D               	movlb	13	; () banked
 50603  0132BE  6F38               	movwf	56,b	;volatile
 50604                           
 50605                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 50606  0132C0  0E00               	movlw	0
 50607  0132C2  6F39               	movwf	57,b	;volatile
 50608                           
 50609                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 50610  0132C4  D035               	goto	i2l293
 50611  0132C6                     i2l294:
 50612                           
 50613                           ; BSR set to: 13
 50614                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 50615  0132C6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50616                           
 50617                           ; BSR set to: 13
 50618                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 50619                           
 50620                           ; BSR set to: 13
 50621                           
 50622                           ; BSR set to: 13
 50623                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 50624                           
 50625                           ;usb_device.c: 2144: if(0 == 1)
 50626  0132C8  0101               	movlb	1	; () banked
 50627  0132CA  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 50628  0132CC  A4D8               	btfss	status,2,c
 50629  0132CE  D03B               	goto	i2l297
 50630                           
 50631                           ; BSR set to: 1
 50632                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 50633  0132D0  010D               	movlb	13	; () banked
 50634  0132D2  8338               	bsf	56,1,b	;volatile
 50635                           
 50636                           ; BSR set to: 13
 50637                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 50638  0132D4  D038               	goto	i2l297
 50639  0132D6                     i2l298:
 50640                           
 50641                           ; BSR set to: 13
 50642                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 50643  0132D6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50644                           
 50645                           ;usb_device.c: 2156: break;
 50646  0132D8  D036               	goto	i2l297
 50647  0132DA                     i2l299:
 50648                           
 50649                           ; BSR set to: 13
 50650                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 50651  0132DA  8E55               	bsf	_inPipes+3,7,c	;volatile
 50652                           
 50653                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 50654  0132DC  BF34               	btfsc	52,7,b	;volatile
 50655  0132DE  D00A               	goto	i2l300
 50656                           
 50657                           ; BSR set to: 13
 50658                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50659  0132E0  5134               	movf	52,w,b	;volatile
 50660  0132E2  0B0F               	andlw	15
 50661  0132E4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50662  0132E6  5001               	movf	??_USBStdGetStatusHandler,w,c
 50663  0132E8  0D02               	mullw	2
 50664  0132EA  0E21               	movlw	low _pBDTEntryOut
 50665  0132EC  24F3               	addwf	prodl,w,c
 50666  0132EE  6ED9               	movwf	fsr2l,c
 50667  0132F0  0E01               	movlw	high _pBDTEntryOut
 50668  0132F2  D009               	goto	L77
 50669  0132F4                     i2l300:
 50670                           
 50671                           ; BSR set to: 13
 50672                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50673                           
 50674                           ; BSR set to: 13
 50675  0132F4  5134               	movf	52,w,b	;volatile
 50676  0132F6  0B0F               	andlw	15
 50677  0132F8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50678  0132FA  5001               	movf	??_USBStdGetStatusHandler,w,c
 50679  0132FC  0D02               	mullw	2
 50680  0132FE  0E1B               	movlw	low _pBDTEntryIn
 50681  013300  24F3               	addwf	prodl,w,c
 50682  013302  6ED9               	movwf	fsr2l,c
 50683  013304  0E01               	movlw	high _pBDTEntryIn
 50684  013306                     L77:
 50685  013306  20F4               	addwfc	prodh,w,c
 50686  013308  6EDA               	movwf	fsr2h,c
 50687  01330A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 50688  01330E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 50689                           
 50690                           ; BSR set to: 13
 50691                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 50692                           
 50693                           ; BSR set to: 13
 50694  013312  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50695  013316  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50696  01331A  AEDF               	btfss	indf2,7,c
 50697  01331C  D014               	goto	i2l297
 50698                           
 50699                           ; BSR set to: 13
 50700  01331E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50701  013322  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50702  013326  A4DF               	btfss	indf2,2,c
 50703  013328  D00E               	goto	i2l297
 50704                           
 50705                           ; BSR set to: 13
 50706                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 50707  01332A  0E01               	movlw	1
 50708  01332C  6F38               	movwf	56,b	;volatile
 50709                           
 50710                           ; BSR set to: 13
 50711                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 50712                           
 50713                           ; BSR set to: 13
 50714                           ;usb_device.c: 2176: break;
 50715  01332E  D00B               	goto	i2l297
 50716  013330                     i2l293:
 50717                           
 50718                           ; BSR set to: 13
 50719                           
 50720                           ; BSR set to: 13
 50721  013330  5130               	movf	48,w,b	;volatile
 50722  013332  0B1F               	andlw	31
 50723                           
 50724                           ; Switch size 1, requested type "space"
 50725                           ; Number of cases is 3, Range of values is 0 to 2
 50726                           ; switch strategies available:
 50727                           ; Name         Instructions Cycles
 50728                           ; simple_byte           10     6 (average)
 50729                           ;	Chosen strategy is simple_byte
 50730  013334  0A00               	xorlw	0	; case 0
 50731  013336  B4D8               	btfsc	status,2,c
 50732  013338  D7C6               	goto	i2l294
 50733  01333A  0A01               	xorlw	1	; case 1
 50734  01333C  B4D8               	btfsc	status,2,c
 50735  01333E  D7CB               	goto	i2l298
 50736  013340  0A03               	xorlw	3	; case 2
 50737  013342  B4D8               	btfsc	status,2,c
 50738  013344  D7CA               	goto	i2l299
 50739  013346                     i2l297:
 50740                           
 50741                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 50742  013346  AE55               	btfss	_inPipes+3,7,c	;volatile
 50743  013348  0012               	return	
 50744                           
 50745                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 50746  01334A  0E38               	movlw	56
 50747  01334C  6E52               	movwf	_inPipes,c	;volatile
 50748  01334E  0E0D               	movlw	13
 50749  013350  6E53               	movwf	_inPipes+1,c	;volatile
 50750                           
 50751                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50752  013352  8055               	bsf	_inPipes+3,0,c	;volatile
 50753                           
 50754                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 50755  013354  0E02               	movlw	2
 50756  013356  6E56               	movwf	_inPipes+4,c	;volatile
 50757  013358  0012               	return	
 50758  01335A                     __end_of_USBStdGetStatusHandler:
 50759                           	opt stack 0
 50760                           tosu	equ	0xFFF
 50761                           tosh	equ	0xFFE
 50762                           tosl	equ	0xFFD
 50763                           pclatu	equ	0xFFB
 50764                           pclath	equ	0xFFA
 50765                           tblptru	equ	0xFF8
 50766                           tblptrh	equ	0xFF7
 50767                           tblptrl	equ	0xFF6
 50768                           tablat	equ	0xFF5
 50769                           prodh	equ	0xFF4
 50770                           prodl	equ	0xFF3
 50771                           intcon	equ	0xFF2
 50772                           indf0	equ	0xFEF
 50773                           postinc0	equ	0xFEE
 50774                           fsr0h	equ	0xFEA
 50775                           fsr0l	equ	0xFE9
 50776                           wreg	equ	0xFE8
 50777                           indf1	equ	0xFE7
 50778                           postinc1	equ	0xFE6
 50779                           postdec1	equ	0xFE5
 50780                           plusw1	equ	0xFE3
 50781                           fsr1h	equ	0xFE2
 50782                           fsr1l	equ	0xFE1
 50783                           indf2	equ	0xFDF
 50784                           postinc2	equ	0xFDE
 50785                           postdec2	equ	0xFDD
 50786                           plusw2	equ	0xFDB
 50787                           fsr2h	equ	0xFDA
 50788                           fsr2l	equ	0xFD9
 50789                           status	equ	0xFD8
 50790                           
 50791 ;; *************** function _USBStdGetDscHandler *****************
 50792 ;; Defined at:
 50793 ;;		line 2045 in file "usb_device.c"
 50794 ;; Parameters:    Size  Location     Type
 50795 ;;		None
 50796 ;; Auto vars:     Size  Location     Type
 50797 ;;		None
 50798 ;; Return value:  Size  Location     Type
 50799 ;;                  1    wreg      void 
 50800 ;; Registers used:
 50801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 50802 ;; Tracked objects:
 50803 ;;		On entry : 0/0
 50804 ;;		On exit  : 0/0
 50805 ;;		Unchanged: 0/0
 50806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50811 ;;Total ram usage:        2 bytes
 50812 ;; Hardware stack levels used:    1
 50813 ;; This function calls:
 50814 ;;		Nothing
 50815 ;; This function is called by:
 50816 ;;		_USBCheckStdRequest
 50817 ;; This function uses a non-reentrant model
 50818 ;;
 50819                           
 50820                           	psect	text212
 50821  01071A                     __ptext212:
 50822                           	opt stack 0
 50823  01071A                     _USBStdGetDscHandler:
 50824                           	opt stack 13
 50825                           
 50826                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 50827                           
 50828                           ;incstack = 0
 50829  01071A  0E80               	movlw	128
 50830  01071C  010D               	movlb	13	; () banked
 50831  01071E  1930               	xorwf	48,w,b	;volatile
 50832  010720  A4D8               	btfss	status,2,c
 50833  010722  0012               	return	
 50834                           
 50835                           ; BSR set to: 13
 50836                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 50837  010724  0EC0               	movlw	192
 50838  010726  6E55               	movwf	_inPipes+3,c	;volatile
 50839                           
 50840                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 50841  010728  D082               	goto	i2l280
 50842  01072A                     
 50843                           ; BSR set to: 13
 50844                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 50845                           
 50846                           ; BSR set to: 13
 50847  01072A  0E5B               	movlw	low _device_dsc
 50848  01072C  6E52               	movwf	_inPipes,c	;volatile
 50849  01072E  0EA2               	movlw	high _device_dsc
 50850  010730  6E53               	movwf	_inPipes+1,c	;volatile
 50851                           
 50852                           ; BSR set to: 13
 50853                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 50854  010732  0E00               	movlw	0
 50855  010734  6E57               	movwf	_inPipes+5,c	;volatile
 50856  010736  0E12               	movlw	18
 50857  010738  6E56               	movwf	_inPipes+4,c	;volatile
 50858                           
 50859                           ;usb_device.c: 2060: break;
 50860  01073A  0012               	return	
 50861  01073C                     
 50862                           ; BSR set to: 13
 50863                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 50864                           
 50865                           ; BSR set to: 13
 50866  01073C  5132               	movf	50,w,b	;volatile
 50867  01073E  A4D8               	btfss	status,2,c
 50868  010740  D042               	goto	i2l284
 50869                           
 50870                           ; BSR set to: 13
 50871                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 50872  010742  5132               	movf	50,w,b	;volatile
 50873  010744  0D02               	mullw	2
 50874  010746  0EEC               	movlw	low _USB_CD_Ptr
 50875  010748  24F3               	addwf	prodl,w,c
 50876  01074A  6EF6               	movwf	tblptrl,c
 50877  01074C  0E9D               	movlw	high _USB_CD_Ptr
 50878  01074E  20F4               	addwfc	prodh,w,c
 50879  010750  6EF7               	movwf	tblptrh,c
 50880  010752                     	if	1	;There are 3 active tblptr bytes
 50881  010752  6AF8               	clrf	tblptru,c
 50882  010754  0E00               	movlw	low (__mediumconst shr (0+16))
 50883  010756  22F8               	addwfc	tblptru,f,c
 50884  010758                     	endif
 50885  010758  0009               	tblrd		*+
 50886  01075A  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50887  01075E  000A               	tblrd		*-
 50888  010760  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50889                           
 50890                           ; BSR set to: 13
 50891                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 50892  010764  0E02               	movlw	2
 50893  010766  2452               	addwf	_inPipes,w,c	;volatile
 50894  010768  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50895  01076A  0E00               	movlw	0
 50896  01076C  2053               	addwfc	_inPipes+1,w,c	;volatile
 50897  01076E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50898  010770  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50899  010774  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50900  010778  0E00               	movlw	low (__mediumconst shr (0+16))
 50901  01077A  6EF8               	movwf	tblptru,c
 50902  01077C  0E0E               	movlw	(high __ramtop+-1)
 50903  01077E  64F7               	cpfsgt	tblptrh,c
 50904  010780  D003               	bra	i2u1201_47
 50905  010782  0008               	tblrd		*
 50906  010784  50F5               	movf	tablat,w,c
 50907  010786  D005               	bra	i2u1201_40
 50908  010788                     i2u1201_47:
 50909  010788  CFF6 FFE9          	movff	tblptrl,fsr0l
 50910  01078C  CFF7 FFEA          	movff	tblptrh,fsr0h
 50911  010790  50EF               	movf	indf0,w,c
 50912  010792                     i2u1201_40:
 50913  010792  6E56               	movwf	_inPipes+4,c	;volatile
 50914                           
 50915                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 50916  010794  0E03               	movlw	3
 50917  010796  2452               	addwf	_inPipes,w,c	;volatile
 50918  010798  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50919  01079A  0E00               	movlw	0
 50920  01079C  2053               	addwfc	_inPipes+1,w,c	;volatile
 50921  01079E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50922  0107A0  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50923  0107A4  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50924  0107A8  0E00               	movlw	low (__mediumconst shr (0+16))
 50925  0107AA  6EF8               	movwf	tblptru,c
 50926  0107AC  0E0E               	movlw	(high __ramtop+-1)
 50927  0107AE  64F7               	cpfsgt	tblptrh,c
 50928  0107B0  D003               	bra	i2u1202_47
 50929  0107B2  0008               	tblrd		*
 50930  0107B4  50F5               	movf	tablat,w,c
 50931  0107B6  D005               	bra	i2u1202_40
 50932  0107B8                     i2u1202_47:
 50933  0107B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 50934  0107BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 50935  0107C0  50EF               	movf	indf0,w,c
 50936  0107C2                     i2u1202_40:
 50937  0107C2  6E57               	movwf	_inPipes+5,c	;volatile
 50938                           
 50939                           ;usb_device.c: 2078: }
 50940  0107C4  0012               	return	
 50941  0107C6                     i2l284:
 50942                           
 50943                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 50944  0107C6  0E00               	movlw	0
 50945  0107C8  6E55               	movwf	_inPipes+3,c	;volatile
 50946                           
 50947                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 50948  0107CA  0012               	return	
 50949  0107CC                     
 50950                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 50951  0107CC  0E04               	movlw	4
 50952  0107CE  010D               	movlb	13	; () banked
 50953  0107D0  6132               	cpfslt	50,b	;volatile
 50954  0107D2  D027               	goto	i2l287
 50955                           
 50956                           ; BSR set to: 13
 50957                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 50958  0107D4  5132               	movf	50,w,b	;volatile
 50959  0107D6  0D02               	mullw	2
 50960  0107D8  0EE4               	movlw	low _USB_SD_Ptr
 50961  0107DA  24F3               	addwf	prodl,w,c
 50962  0107DC  6EF6               	movwf	tblptrl,c
 50963  0107DE  0E9D               	movlw	high _USB_SD_Ptr
 50964  0107E0  20F4               	addwfc	prodh,w,c
 50965  0107E2  6EF7               	movwf	tblptrh,c
 50966  0107E4                     	if	1	;There are 3 active tblptr bytes
 50967  0107E4  6AF8               	clrf	tblptru,c
 50968  0107E6  0E00               	movlw	low (__mediumconst shr (0+16))
 50969  0107E8  22F8               	addwfc	tblptru,f,c
 50970  0107EA                     	endif
 50971  0107EA  0009               	tblrd		*+
 50972  0107EC  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50973  0107F0  000A               	tblrd		*-
 50974  0107F2  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50975                           
 50976                           ; BSR set to: 13
 50977                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 50978  0107F6  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 50979  0107FA  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50980  0107FE  0E00               	movlw	low (__mediumconst shr (0+16))
 50981  010800  6EF8               	movwf	tblptru,c
 50982  010802  0E0E               	movlw	(high __ramtop+-1)
 50983  010804  64F7               	cpfsgt	tblptrh,c
 50984  010806  D003               	bra	i2u1204_47
 50985  010808  0008               	tblrd		*
 50986  01080A  50F5               	movf	tablat,w,c
 50987  01080C  D005               	bra	i2u1204_40
 50988  01080E                     i2u1204_47:
 50989  01080E  CFF6 FFE9          	movff	tblptrl,fsr0l
 50990  010812  CFF7 FFEA          	movff	tblptrh,fsr0h
 50991  010816  50EF               	movf	indf0,w,c
 50992  010818                     i2u1204_40:
 50993  010818  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50994  01081A  5001               	movf	??_USBStdGetDscHandler,w,c
 50995  01081C  6E56               	movwf	_inPipes+4,c	;volatile
 50996  01081E  6A57               	clrf	_inPipes+5,c	;volatile
 50997                           
 50998                           ;usb_device.c: 2094: }
 50999  010820  0012               	return	
 51000  010822                     i2l287:
 51001                           
 51002                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 51003  010822  0E00               	movlw	0
 51004  010824  6E55               	movwf	_inPipes+3,c	;volatile
 51005                           
 51006                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 51007  010826  0012               	return	
 51008  010828                     
 51009                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 51010  010828  0E00               	movlw	0
 51011  01082A  6E55               	movwf	_inPipes+3,c	;volatile
 51012                           
 51013                           ;usb_device.c: 2112: }
 51014                           
 51015                           ;usb_device.c: 2111: break;
 51016  01082C  0012               	return	
 51017  01082E                     i2l280:
 51018  01082E  010D               	movlb	13	; () banked
 51019  010830  5133               	movf	51,w,b	;volatile
 51020                           
 51021                           ; Switch size 1, requested type "space"
 51022                           ; Number of cases is 3, Range of values is 1 to 3
 51023                           ; switch strategies available:
 51024                           ; Name         Instructions Cycles
 51025                           ; simple_byte           10     6 (average)
 51026                           ;	Chosen strategy is simple_byte
 51027  010832  0A01               	xorlw	1	; case 1
 51028  010834  B4D8               	btfsc	status,2,c
 51029  010836  D779               	goto	i2l281
 51030  010838  0A03               	xorlw	3	; case 2
 51031  01083A  B4D8               	btfsc	status,2,c
 51032  01083C  D77F               	goto	i2l283
 51033  01083E  0A01               	xorlw	1	; case 3
 51034  010840  B4D8               	btfsc	status,2,c
 51035  010842  D7C4               	goto	i2l286
 51036  010844  D7F1               	goto	i2l289
 51037  010846                     __end_of_USBStdGetDscHandler:
 51038                           	opt stack 0
 51039                           tosu	equ	0xFFF
 51040                           tosh	equ	0xFFE
 51041                           tosl	equ	0xFFD
 51042                           pclatu	equ	0xFFB
 51043                           pclath	equ	0xFFA
 51044                           tblptru	equ	0xFF8
 51045                           tblptrh	equ	0xFF7
 51046                           tblptrl	equ	0xFF6
 51047                           tablat	equ	0xFF5
 51048                           prodh	equ	0xFF4
 51049                           prodl	equ	0xFF3
 51050                           intcon	equ	0xFF2
 51051                           indf0	equ	0xFEF
 51052                           postinc0	equ	0xFEE
 51053                           fsr0h	equ	0xFEA
 51054                           fsr0l	equ	0xFE9
 51055                           wreg	equ	0xFE8
 51056                           indf1	equ	0xFE7
 51057                           postinc1	equ	0xFE6
 51058                           postdec1	equ	0xFE5
 51059                           plusw1	equ	0xFE3
 51060                           fsr1h	equ	0xFE2
 51061                           fsr1l	equ	0xFE1
 51062                           indf2	equ	0xFDF
 51063                           postinc2	equ	0xFDE
 51064                           postdec2	equ	0xFDD
 51065                           plusw2	equ	0xFDB
 51066                           fsr2h	equ	0xFDA
 51067                           fsr2l	equ	0xFD9
 51068                           status	equ	0xFD8
 51069                           
 51070 ;; *************** function _USBStdFeatureReqHandler *****************
 51071 ;; Defined at:
 51072 ;;		line 2756 in file "usb_device.c"
 51073 ;; Parameters:    Size  Location     Type
 51074 ;;		None
 51075 ;; Auto vars:     Size  Location     Type
 51076 ;;  p               2   27[COMRAM] PTR struct __BDT
 51077 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51078 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 51079 ;;		 -> UEP0(1), 
 51080 ;;  current_ep_d    1   26[COMRAM] struct .
 51081 ;; Return value:  Size  Location     Type
 51082 ;;                  1    wreg      void 
 51083 ;; Registers used:
 51084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51085 ;; Tracked objects:
 51086 ;;		On entry : 0/0
 51087 ;;		On exit  : 0/0
 51088 ;;		Unchanged: 0/0
 51089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51091 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51094 ;;Total ram usage:        6 bytes
 51095 ;; Hardware stack levels used:    1
 51096 ;; Hardware stack levels required when called:    4
 51097 ;; This function calls:
 51098 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51099 ;; This function is called by:
 51100 ;;		_USBCheckStdRequest
 51101 ;; This function uses a non-reentrant model
 51102 ;;
 51103                           
 51104                           	psect	text213
 51105  00DE66                     __ptext213:
 51106                           	opt stack 0
 51107  00DE66                     _USBStdFeatureReqHandler:
 51108                           	opt stack 9
 51109                           
 51110                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 51111                           
 51112                           ;incstack = 0
 51113  00DE66  010D               	movlb	13	; () banked
 51114  00DE68  0532               	decf	50,w,b	;volatile
 51115  00DE6A  A4D8               	btfss	status,2,c
 51116  00DE6C  D00F               	goto	i2l373
 51117                           
 51118                           ; BSR set to: 13
 51119  00DE6E  5130               	movf	48,w,b	;volatile
 51120  00DE70  0B1F               	andlw	31
 51121  00DE72  0900               	iorlw	0
 51122  00DE74  A4D8               	btfss	status,2,c
 51123  00DE76  D00A               	goto	i2l373
 51124                           
 51125                           ; BSR set to: 13
 51126                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 51127  00DE78  8E55               	bsf	_inPipes+3,7,c	;volatile
 51128                           
 51129                           ; BSR set to: 13
 51130                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 51131  00DE7A  0E03               	movlw	3
 51132  00DE7C  1931               	xorwf	49,w,b	;volatile
 51133  00DE7E  A4D8               	btfss	status,2,c
 51134  00DE80  D002               	goto	i2l372
 51135                           
 51136                           ; BSR set to: 13
 51137                           ;usb_device.c: 2806: RemoteWakeup = 1;
 51138  00DE82  0E01               	movlw	1
 51139  00DE84  D001               	goto	L78
 51140  00DE86                     i2l372:
 51141                           
 51142                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 51143                           
 51144                           ; BSR set to: 1
 51145  00DE86  0E00               	movlw	0
 51146  00DE88                     L78:
 51147  00DE88  0101               	movlb	1	; () banked
 51148  00DE8A  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 51149  00DE8C                     i2l373:
 51150                           
 51151                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 51152                           
 51153                           ; BSR set to: 1
 51154  00DE8C  010D               	movlb	13	; () banked
 51155  00DE8E  5132               	movf	50,w,b	;volatile
 51156  00DE90  A4D8               	btfss	status,2,c
 51157  00DE92  0012               	return	
 51158                           
 51159                           ; BSR set to: 13
 51160  00DE94  5130               	movf	48,w,b	;volatile
 51161  00DE96  0B1F               	andlw	31
 51162  00DE98  0A02               	xorlw	2
 51163  00DE9A  A4D8               	btfss	status,2,c
 51164  00DE9C  0012               	return	
 51165                           
 51166                           ; BSR set to: 13
 51167  00DE9E  5134               	movf	52,w,b	;volatile
 51168  00DEA0  0B0F               	andlw	15
 51169  00DEA2  0900               	iorlw	0
 51170  00DEA4  B4D8               	btfsc	status,2,c
 51171  00DEA6  0012               	return	
 51172                           
 51173                           ; BSR set to: 13
 51174  00DEA8  5134               	movf	52,w,b	;volatile
 51175  00DEAA  0B0F               	andlw	15
 51176  00DEAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51177  00DEAE  0E03               	movlw	3
 51178  00DEB0  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 51179  00DEB2  0012               	return	
 51180                           
 51181                           ; BSR set to: 13
 51182  00DEB4  0E20               	movlw	32
 51183  00DEB6  185E               	xorwf	_USBDeviceState,w,c	;volatile
 51184  00DEB8  A4D8               	btfss	status,2,c
 51185  00DEBA  0012               	return	
 51186                           
 51187                           ; BSR set to: 13
 51188                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 51189  00DEBC  8E55               	bsf	_inPipes+3,7,c	;volatile
 51190                           
 51191                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 51192  00DEBE  BF34               	btfsc	52,7,b	;volatile
 51193  00DEC0  D019               	goto	i2l375
 51194                           
 51195                           ; BSR set to: 13
 51196                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51197  00DEC2  5134               	movf	52,w,b	;volatile
 51198  00DEC4  0B0F               	andlw	15
 51199  00DEC6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51200  00DEC8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51201  00DECA  0D02               	mullw	2
 51202  00DECC  0E21               	movlw	low _pBDTEntryOut
 51203  00DECE  24F3               	addwf	prodl,w,c
 51204  00DED0  6ED9               	movwf	fsr2l,c
 51205  00DED2  0E01               	movlw	high _pBDTEntryOut
 51206  00DED4  20F4               	addwfc	prodh,w,c
 51207  00DED6  6EDA               	movwf	fsr2h,c
 51208  00DED8  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51209  00DEDC  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51210                           
 51211                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 51212  00DEE0  5134               	movf	52,w,b	;volatile
 51213  00DEE2  0B0F               	andlw	15
 51214  00DEE4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51215  00DEE6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51216  00DEE8  0D01               	mullw	1
 51217  00DEEA  0E39               	movlw	low _ep_data_out
 51218  00DEEC  24F3               	addwf	prodl,w,c
 51219  00DEEE  6ED9               	movwf	fsr2l,c
 51220  00DEF0  0E01               	movlw	high _ep_data_out
 51221  00DEF2  D018               	goto	L79
 51222  00DEF4                     i2l375:
 51223                           
 51224                           ; BSR set to: 13
 51225                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51226                           
 51227                           ; BSR set to: 13
 51228  00DEF4  5134               	movf	52,w,b	;volatile
 51229  00DEF6  0B0F               	andlw	15
 51230  00DEF8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51231  00DEFA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51232  00DEFC  0D02               	mullw	2
 51233  00DEFE  0E1B               	movlw	low _pBDTEntryIn
 51234  00DF00  24F3               	addwf	prodl,w,c
 51235  00DF02  6ED9               	movwf	fsr2l,c
 51236  00DF04  0E01               	movlw	high _pBDTEntryIn
 51237  00DF06  20F4               	addwfc	prodh,w,c
 51238  00DF08  6EDA               	movwf	fsr2h,c
 51239  00DF0A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51240  00DF0E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51241                           
 51242                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 51243  00DF12  5134               	movf	52,w,b	;volatile
 51244  00DF14  0B0F               	andlw	15
 51245  00DF16  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51246  00DF18  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51247  00DF1A  0D01               	mullw	1
 51248  00DF1C  0E3C               	movlw	low _ep_data_in
 51249  00DF1E  24F3               	addwf	prodl,w,c
 51250  00DF20  6ED9               	movwf	fsr2l,c
 51251  00DF22  0E01               	movlw	high _ep_data_in
 51252  00DF24                     L79:
 51253  00DF24  20F4               	addwfc	prodh,w,c
 51254  00DF26  6EDA               	movwf	fsr2h,c
 51255  00DF28  50DF               	movf	indf2,w,c
 51256  00DF2A  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 51257                           
 51258                           ; BSR set to: 13
 51259                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 51260                           
 51261                           ; BSR set to: 13
 51262  00DF2C  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 51263  00DF2E  D006               	goto	i2l377
 51264                           
 51265                           ; BSR set to: 13
 51266                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 51267  00DF30  0EFB               	movlw	251
 51268  00DF32  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 51269  00DF34  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51270  00DF36  0EFF               	movlw	255
 51271  00DF38  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 51272  00DF3A  D004               	goto	L80
 51273  00DF3C                     i2l377:
 51274                           
 51275                           ; BSR set to: 13
 51276                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 51277                           
 51278                           ; BSR set to: 13
 51279  00DF3C  0E04               	movlw	4
 51280  00DF3E  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 51281  00DF40  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51282  00DF42  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51283  00DF44                     L80:
 51284  00DF44  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51285                           
 51286                           ; BSR set to: 13
 51287                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 51288                           
 51289                           ; BSR set to: 13
 51290  00DF46  BF34               	btfsc	52,7,b	;volatile
 51291  00DF48  D00A               	goto	i2l379
 51292                           
 51293                           ; BSR set to: 13
 51294                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 51295  00DF4A  5134               	movf	52,w,b	;volatile
 51296  00DF4C  0B0F               	andlw	15
 51297  00DF4E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51298  00DF50  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51299  00DF52  0D02               	mullw	2
 51300  00DF54  0E21               	movlw	low _pBDTEntryOut
 51301  00DF56  24F3               	addwf	prodl,w,c
 51302  00DF58  6ED9               	movwf	fsr2l,c
 51303  00DF5A  0E01               	movlw	high _pBDTEntryOut
 51304  00DF5C  D009               	goto	L81
 51305  00DF5E                     i2l379:
 51306                           
 51307                           ; BSR set to: 13
 51308                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 51309                           
 51310                           ; BSR set to: 13
 51311  00DF5E  5134               	movf	52,w,b	;volatile
 51312  00DF60  0B0F               	andlw	15
 51313  00DF62  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51314  00DF64  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51315  00DF66  0D02               	mullw	2
 51316  00DF68  0E1B               	movlw	low _pBDTEntryIn
 51317  00DF6A  24F3               	addwf	prodl,w,c
 51318  00DF6C  6ED9               	movwf	fsr2l,c
 51319  00DF6E  0E01               	movlw	high _pBDTEntryIn
 51320  00DF70                     L81:
 51321  00DF70  20F4               	addwfc	prodh,w,c
 51322  00DF72  6EDA               	movwf	fsr2h,c
 51323  00DF74  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 51324  00DF78  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 51325                           
 51326                           ; BSR set to: 13
 51327                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 51328                           
 51329                           ; BSR set to: 13
 51330  00DF7C  0E03               	movlw	3
 51331  00DF7E  1931               	xorwf	49,w,b	;volatile
 51332  00DF80  A4D8               	btfss	status,2,c
 51333  00DF82  D02D               	goto	i2l381
 51334                           
 51335                           ; BSR set to: 13
 51336                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 51337  00DF84  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51338  00DF88  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51339  00DF8C  AEDF               	btfss	indf2,7,c
 51340  00DF8E  D01A               	goto	i2l384
 51341                           
 51342                           ; BSR set to: 13
 51343                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 51344  00DF90  BF34               	btfsc	52,7,b	;volatile
 51345  00DF92  D00A               	goto	i2l383
 51346                           
 51347                           ; BSR set to: 13
 51348                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 51349  00DF94  5134               	movf	52,w,b	;volatile
 51350  00DF96  0B0F               	andlw	15
 51351  00DF98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51352  00DF9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51353  00DF9C  0D01               	mullw	1
 51354  00DF9E  0E39               	movlw	low _ep_data_out
 51355  00DFA0  24F3               	addwf	prodl,w,c
 51356  00DFA2  6ED9               	movwf	fsr2l,c
 51357  00DFA4  0E01               	movlw	high _ep_data_out
 51358  00DFA6  D00A               	goto	L82
 51359  00DFA8                     i2l383:
 51360                           
 51361                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 51362                           
 51363                           ; BSR set to: 1
 51364  00DFA8  010D               	movlb	13	; () banked
 51365  00DFAA  5134               	movf	52,w,b	;volatile
 51366  00DFAC  0B0F               	andlw	15
 51367  00DFAE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51368  00DFB0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51369  00DFB2  0D01               	mullw	1
 51370  00DFB4  0E3C               	movlw	low _ep_data_in
 51371  00DFB6  24F3               	addwf	prodl,w,c
 51372  00DFB8  6ED9               	movwf	fsr2l,c
 51373  00DFBA  0E01               	movlw	high _ep_data_in
 51374  00DFBC                     L82:
 51375  00DFBC  20F4               	addwfc	prodh,w,c
 51376  00DFBE  6EDA               	movwf	fsr2h,c
 51377  00DFC0  0101               	movlb	1	; () banked
 51378  00DFC2  82DF               	bsf	indf2,1,c
 51379  00DFC4                     i2l384:
 51380                           
 51381                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 51382                           
 51383                           ; BSR set to: 1
 51384                           
 51385                           ; BSR set to: 1
 51386  00DFC4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51387  00DFC8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51388  00DFCC  0E00               	movlw	0
 51389  00DFCE  84DB               	bsf	plusw2,2,c
 51390                           
 51391                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 51392  00DFD0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51393  00DFD4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51394  00DFD8  0E00               	movlw	0
 51395  00DFDA  8EDB               	bsf	plusw2,7,c
 51396                           
 51397                           ;usb_device.c: 2878: }
 51398  00DFDC  0012               	return	
 51399  00DFDE                     i2l381:
 51400                           
 51401                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 51402  00DFDE  0E04               	movlw	4
 51403  00DFE0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51404  00DFE2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51405  00DFE4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51406  00DFE6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51407                           
 51408                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 51409  00DFE8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51410  00DFEC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51411  00DFF0  AEDF               	btfss	indf2,7,c
 51412  00DFF2  D01B               	goto	i2l386
 51413                           
 51414                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 51415  00DFF4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51416  00DFF8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51417  00DFFC  0E7F               	movlw	127
 51418  00DFFE  16DF               	andwf	indf2,f,c
 51419                           
 51420                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 51421  00E000  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51422  00E004  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51423  00E008  0E00               	movlw	0
 51424  00E00A  8CDB               	bsf	plusw2,6,c
 51425                           
 51426                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51427  00E00C  0E00               	movlw	0
 51428  00E00E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51429  00E010  0E05               	movlw	5
 51430  00E012  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51431  00E014  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51432  00E018  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51433  00E01C  0E00               	movlw	0
 51434  00E01E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51435  00E020  0E02               	movlw	2
 51436  00E022  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51437  00E024  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51438                           
 51439                           ;usb_device.c: 2893: }
 51440  00E028  D006               	goto	i2l387
 51441  00E02A                     i2l386:
 51442                           
 51443                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 51444  00E02A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51445  00E02E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51446  00E032  0E00               	movlw	0
 51447  00E034  8CDB               	bsf	plusw2,6,c
 51448  00E036                     i2l387:
 51449                           
 51450                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 51451  00E036  0E04               	movlw	4
 51452  00E038  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51453  00E03A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51454  00E03C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51455  00E03E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51456                           
 51457                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 51458  00E040  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 51459  00E042  D006               	goto	i2u1226_40
 51460  00E044  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51461  00E048  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51462  00E04C  AEDF               	btfss	indf2,7,c
 51463  00E04E  D030               	goto	i2l388
 51464  00E050                     i2u1226_40:
 51465                           
 51466                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 51467  00E050  010D               	movlb	13	; () banked
 51468  00E052  BF34               	btfsc	52,7,b	;volatile
 51469  00E054  D00A               	goto	i2l391
 51470                           
 51471                           ; BSR set to: 13
 51472                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 51473  00E056  5134               	movf	52,w,b	;volatile
 51474  00E058  0B0F               	andlw	15
 51475  00E05A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51476  00E05C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51477  00E05E  0D01               	mullw	1
 51478  00E060  0E39               	movlw	low _ep_data_out
 51479  00E062  24F3               	addwf	prodl,w,c
 51480  00E064  6ED9               	movwf	fsr2l,c
 51481  00E066  0E01               	movlw	high _ep_data_out
 51482  00E068  D00A               	goto	L83
 51483  00E06A                     i2l391:
 51484                           
 51485                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 51486                           
 51487                           ; BSR set to: 1
 51488  00E06A  010D               	movlb	13	; () banked
 51489  00E06C  5134               	movf	52,w,b	;volatile
 51490  00E06E  0B0F               	andlw	15
 51491  00E070  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51492  00E072  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51493  00E074  0D01               	mullw	1
 51494  00E076  0E3C               	movlw	low _ep_data_in
 51495  00E078  24F3               	addwf	prodl,w,c
 51496  00E07A  6ED9               	movwf	fsr2l,c
 51497  00E07C  0E01               	movlw	high _ep_data_in
 51498  00E07E                     L83:
 51499  00E07E  20F4               	addwfc	prodh,w,c
 51500  00E080  6EDA               	movwf	fsr2h,c
 51501  00E082  0101               	movlb	1	; () banked
 51502  00E084  92DF               	bcf	indf2,1,c
 51503                           
 51504                           ; BSR set to: 1
 51505                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 51506                           
 51507                           ; BSR set to: 1
 51508  00E086  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51509  00E08A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51510  00E08E  0E3B               	movlw	59
 51511  00E090  16DF               	andwf	indf2,f,c
 51512                           
 51513                           ; BSR set to: 1
 51514                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51515  00E092  0E00               	movlw	0
 51516  00E094  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51517  00E096  0E05               	movlw	5
 51518  00E098  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51519  00E09A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51520  00E09E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51521  00E0A2  0E00               	movlw	0
 51522  00E0A4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51523  00E0A6  0E02               	movlw	2
 51524  00E0A8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51525  00E0AA  EC4C  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51526                           
 51527                           ;usb_device.c: 2923: }
 51528  00E0AE  D006               	goto	i2l393
 51529  00E0B0                     i2l388:
 51530                           
 51531                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 51532  00E0B0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51533  00E0B4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51534  00E0B8  0E3B               	movlw	59
 51535  00E0BA  16DF               	andwf	indf2,f,c
 51536  00E0BC                     i2l393:
 51537                           
 51538                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 51539  00E0BC  010D               	movlb	13	; () banked
 51540  00E0BE  5134               	movf	52,w,b	;volatile
 51541  00E0C0  0B0F               	andlw	15
 51542  00E0C2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51543  00E0C4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51544  00E0C6  0D01               	mullw	1
 51545  00E0C8  0E26               	movlw	38
 51546  00E0CA  24F3               	addwf	prodl,w,c
 51547  00E0CC  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 51548  00E0CE  0E0F               	movlw	15
 51549  00E0D0  20F4               	addwfc	prodh,w,c
 51550  00E0D2  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 51551                           
 51552                           ; BSR set to: 13
 51553                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 51554  00E0D4  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 51555  00E0D8  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 51556  00E0DC  0EFE               	movlw	254
 51557  00E0DE  16DF               	andwf	indf2,f,c
 51558                           
 51559                           ; BSR set to: 13
 51560  00E0E0  0012               	return	
 51561  00E0E2                     __end_of_USBStdFeatureReqHandler:
 51562                           	opt stack 0
 51563                           tosu	equ	0xFFF
 51564                           tosh	equ	0xFFE
 51565                           tosl	equ	0xFFD
 51566                           pclatu	equ	0xFFB
 51567                           pclath	equ	0xFFA
 51568                           tblptru	equ	0xFF8
 51569                           tblptrh	equ	0xFF7
 51570                           tblptrl	equ	0xFF6
 51571                           tablat	equ	0xFF5
 51572                           prodh	equ	0xFF4
 51573                           prodl	equ	0xFF3
 51574                           intcon	equ	0xFF2
 51575                           indf0	equ	0xFEF
 51576                           postinc0	equ	0xFEE
 51577                           fsr0h	equ	0xFEA
 51578                           fsr0l	equ	0xFE9
 51579                           wreg	equ	0xFE8
 51580                           indf1	equ	0xFE7
 51581                           postinc1	equ	0xFE6
 51582                           postdec1	equ	0xFE5
 51583                           plusw1	equ	0xFE3
 51584                           fsr1h	equ	0xFE2
 51585                           fsr1l	equ	0xFE1
 51586                           indf2	equ	0xFDF
 51587                           postinc2	equ	0xFDE
 51588                           postdec2	equ	0xFDD
 51589                           plusw2	equ	0xFDB
 51590                           fsr2h	equ	0xFDA
 51591                           fsr2l	equ	0xFD9
 51592                           status	equ	0xFD8
 51593                           
 51594 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 51595 ;; Defined at:
 51596 ;;		line 54 in file "usb_events.c"
 51597 ;; Parameters:    Size  Location     Type
 51598 ;;  event           2   15[COMRAM] enum E6832
 51599 ;;  pdata           2   17[COMRAM] PTR void 
 51600 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51601 ;;		 -> BDT(48), 
 51602 ;;  size            2   19[COMRAM] unsigned int 
 51603 ;; Auto vars:     Size  Location     Type
 51604 ;;		None
 51605 ;; Return value:  Size  Location     Type
 51606 ;;                  1    wreg      unsigned char 
 51607 ;; Registers used:
 51608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51609 ;; Tracked objects:
 51610 ;;		On entry : 0/0
 51611 ;;		On exit  : 0/0
 51612 ;;		Unchanged: 0/0
 51613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51617 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51618 ;;Total ram usage:        8 bytes
 51619 ;; Hardware stack levels used:    1
 51620 ;; Hardware stack levels required when called:    3
 51621 ;; This function calls:
 51622 ;;		_APP_DeviceCustomHIDInitialize
 51623 ;;		_APP_DeviceMSDInitialize
 51624 ;;		_MSDTransferTerminated
 51625 ;;		_USBCheckHIDRequest
 51626 ;;		_USBCheckMSDRequest
 51627 ;;		i2_SYSTEM_Initialize
 51628 ;; This function is called by:
 51629 ;;		_USBDeviceTasks
 51630 ;;		_USBStdSetCfgHandler
 51631 ;;		_USBSuspend
 51632 ;;		_USBWakeFromSuspend
 51633 ;;		_USBCtrlTrfSetupHandler
 51634 ;;		_USBCheckStdRequest
 51635 ;;		_USBStdFeatureReqHandler
 51636 ;; This function uses a non-reentrant model
 51637 ;;
 51638                           
 51639                           	psect	text214
 51640  013898                     __ptext214:
 51641                           	opt stack 0
 51642  013898                     _USER_USB_CALLBACK_EVENT_HANDLER:
 51643                           	opt stack 13
 51644                           
 51645                           ;usb_events.c: 56: switch((int)event)
 51646                           
 51647                           ;incstack = 0
 51648  013898  D019               	goto	i2l816
 51649  01389A                     
 51650                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 51651  01389A  0E01               	movlw	1
 51652  01389C  EC57  F0A5         	call	i2_SYSTEM_Initialize
 51653                           
 51654                           ;usb_events.c: 79: break;
 51655  0138A0  0012               	return	
 51656  0138A2                     
 51657                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 51658  0138A2  0E02               	movlw	2
 51659  0138A4  EC57  F0A5         	call	i2_SYSTEM_Initialize
 51660                           
 51661                           ;usb_events.c: 90: break;
 51662  0138A8  0012               	return	
 51663  0138AA                     
 51664                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 51665  0138AA  EC71  F0A9         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 51666                           
 51667                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 51668  0138AE  EC60  F0AC         	call	_APP_DeviceMSDInitialize	;wreg free
 51669                           
 51670                           ;usb_events.c: 100: break;
 51671                           
 51672                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 51673                           
 51674                           ;usb_events.c: 97: break;
 51675  0138B2  0012               	return	
 51676  0138B4                     
 51677                           ;usb_events.c: 105: USBCheckHIDRequest();
 51678  0138B4  EC18  F092         	call	_USBCheckHIDRequest	;wreg free
 51679                           
 51680                           ;usb_events.c: 108: USBCheckMSDRequest();
 51681  0138B8  EC46  F095         	call	_USBCheckMSDRequest	;wreg free
 51682                           
 51683                           ;usb_events.c: 112: break;
 51684                           
 51685                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 51686                           
 51687                           ;usb_events.c: 109: break;
 51688  0138BC  0012               	return	
 51689  0138BE                     
 51690                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 51691  0138BE  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 51692  0138C2  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 51693  0138C6  ECAE  F0A4         	call	_MSDTransferTerminated	;wreg free
 51694                           
 51695                           ;usb_events.c: 129: }
 51696                           
 51697                           ;usb_events.c: 128: break;
 51698                           
 51699                           ;usb_events.c: 127: default:
 51700                           
 51701                           ;usb_events.c: 125: break;
 51702  0138CA  0012               	return	
 51703  0138CC                     i2l816:
 51704  0138CC  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 51705  0138D0  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 51706                           
 51707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 51708                           ; Switch size 1, requested type "space"
 51709                           ; Number of cases is 2, Range of values is 0 to 127
 51710                           ; switch strategies available:
 51711                           ; Name         Instructions Cycles
 51712                           ; simple_byte            7     4 (average)
 51713                           ;	Chosen strategy is simple_byte
 51714  0138D4  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 51715  0138D6  0A00               	xorlw	0	; case 0
 51716  0138D8  B4D8               	btfsc	status,2,c
 51717  0138DA  D004               	goto	i2l19374
 51718  0138DC  0A7F               	xorlw	127	; case 127
 51719  0138DE  A4D8               	btfss	status,2,c
 51720  0138E0  0012               	return	
 51721  0138E2  D01A               	goto	i2l19376
 51722  0138E4                     i2l19374:
 51723                           
 51724                           ; Switch size 1, requested type "space"
 51725                           ; Number of cases is 8, Range of values is 1 to 117
 51726                           ; switch strategies available:
 51727                           ; Name         Instructions Cycles
 51728                           ; simple_byte           25    13 (average)
 51729                           ;	Chosen strategy is simple_byte
 51730  0138E4  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51731  0138E6  0A01               	xorlw	1	; case 1
 51732  0138E8  B4D8               	btfsc	status,2,c
 51733  0138EA  D7DF               	goto	i2l822
 51734  0138EC  0A03               	xorlw	3	; case 2
 51735  0138EE  B4D8               	btfsc	status,2,c
 51736  0138F0  0012               	return	
 51737  0138F2  0A01               	xorlw	1	; case 3
 51738  0138F4  B4D8               	btfsc	status,2,c
 51739  0138F6  D7DE               	goto	i2l824
 51740  0138F8  0A06               	xorlw	6	; case 5
 51741  0138FA  B4D8               	btfsc	status,2,c
 51742  0138FC  D7E0               	goto	i2l826
 51743  0138FE  0A77               	xorlw	119	; case 114
 51744  013900  B4D8               	btfsc	status,2,c
 51745  013902  0012               	return	
 51746  013904  0A01               	xorlw	1	; case 115
 51747  013906  B4D8               	btfsc	status,2,c
 51748  013908  0012               	return	
 51749  01390A  0A07               	xorlw	7	; case 116
 51750  01390C  B4D8               	btfsc	status,2,c
 51751  01390E  D7C9               	goto	i2l821
 51752  013910  0A01               	xorlw	1	; case 117
 51753  013912  A4D8               	btfss	status,2,c
 51754  013914  0012               	return	
 51755  013916  D7C1               	goto	i2l820
 51756  013918                     i2l19376:
 51757                           
 51758                           ; Switch size 1, requested type "space"
 51759                           ; Number of cases is 1, Range of values is 255 to 255
 51760                           ; switch strategies available:
 51761                           ; Name         Instructions Cycles
 51762                           ; simple_byte            4     3 (average)
 51763                           ;	Chosen strategy is simple_byte
 51764  013918  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51765  01391A  0AFF               	xorlw	255	; case 255
 51766  01391C  0012               	return	
 51767  01391E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 51768                           	opt stack 0
 51769                           tosu	equ	0xFFF
 51770                           tosh	equ	0xFFE
 51771                           tosl	equ	0xFFD
 51772                           pclatu	equ	0xFFB
 51773                           pclath	equ	0xFFA
 51774                           tblptru	equ	0xFF8
 51775                           tblptrh	equ	0xFF7
 51776                           tblptrl	equ	0xFF6
 51777                           tablat	equ	0xFF5
 51778                           prodh	equ	0xFF4
 51779                           prodl	equ	0xFF3
 51780                           intcon	equ	0xFF2
 51781                           indf0	equ	0xFEF
 51782                           postinc0	equ	0xFEE
 51783                           fsr0h	equ	0xFEA
 51784                           fsr0l	equ	0xFE9
 51785                           wreg	equ	0xFE8
 51786                           indf1	equ	0xFE7
 51787                           postinc1	equ	0xFE6
 51788                           postdec1	equ	0xFE5
 51789                           plusw1	equ	0xFE3
 51790                           fsr1h	equ	0xFE2
 51791                           fsr1l	equ	0xFE1
 51792                           indf2	equ	0xFDF
 51793                           postinc2	equ	0xFDE
 51794                           postdec2	equ	0xFDD
 51795                           plusw2	equ	0xFDB
 51796                           fsr2h	equ	0xFDA
 51797                           fsr2l	equ	0xFD9
 51798                           status	equ	0xFD8
 51799                           
 51800 ;; *************** function i2_SYSTEM_Initialize *****************
 51801 ;; Defined at:
 51802 ;;		line 39 in file "system.c"
 51803 ;; Parameters:    Size  Location     Type
 51804 ;;  state           1    wreg     enum E6623
 51805 ;; Auto vars:     Size  Location     Type
 51806 ;;  state           1    4[COMRAM] enum E6623
 51807 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 51808 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 51809 ;; Return value:  Size  Location     Type
 51810 ;;                  1    wreg      void 
 51811 ;; Registers used:
 51812 ;;		wreg, status,2, status,0
 51813 ;; Tracked objects:
 51814 ;;		On entry : 0/0
 51815 ;;		On exit  : 0/0
 51816 ;;		Unchanged: 0/0
 51817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51819 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51821 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51822 ;;Total ram usage:        5 bytes
 51823 ;; Hardware stack levels used:    1
 51824 ;; This function calls:
 51825 ;;		Nothing
 51826 ;; This function is called by:
 51827 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51828 ;; This function uses a non-reentrant model
 51829 ;;
 51830                           
 51831                           	psect	text215
 51832  014AAE                     __ptext215:
 51833                           	opt stack 0
 51834  014AAE                     i2_SYSTEM_Initialize:
 51835                           	opt stack 15
 51836                           
 51837                           ;incstack = 0
 51838                           ;i2SYSTEM_Initialize@state stored from wreg
 51839  014AAE  6E05               	movwf	i2SYSTEM_Initialize@state,c
 51840                           
 51841                           ;system.c: 41: switch(state)
 51842  014AB0  D01D               	goto	i2l897
 51843  014AB2                     
 51844                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 51845  014AB2  0E02               	movlw	2
 51846  014AB4  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 51847  014AB6  0E58               	movlw	88
 51848  014AB8  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 51849                           
 51850                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 51851  014ABA  8C9B               	bsf	3995,6,c	;volatile
 51852  014ABC                     i2l12738:
 51853  014ABC  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 51854  014ABE  A0D8               	btfss	status,0,c
 51855  014AC0  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 51856  014AC2  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 51857  014AC4  E1FB               	bnz	i2l12738
 51858  014AC6  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 51859  014AC8  B4D8               	btfsc	status,2,c
 51860  014ACA  0012               	return	
 51861  014ACC  D7F7               	goto	i2l900
 51862  014ACE                     
 51863                           ;system.c: 78: OSCCON = 0x70;
 51864  014ACE  0E70               	movlw	112
 51865  014AD0  6ED3               	movwf	4051,c	;volatile
 51866                           
 51867                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 51868  014AD2  0E03               	movlw	3
 51869  014AD4  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 51870  014AD6  0E20               	movlw	32
 51871  014AD8  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 51872  014ADA                     i2l12742:
 51873  014ADA  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 51874  014ADC  A0D8               	btfss	status,0,c
 51875  014ADE  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 51876  014AE0  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 51877  014AE2  E1FB               	bnz	i2l12742
 51878  014AE4  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 51879  014AE6  B4D8               	btfsc	status,2,c
 51880  014AE8  0012               	return	
 51881  014AEA  D7F7               	goto	i2l906
 51882  014AEC                     i2l897:
 51883  014AEC  5005               	movf	i2SYSTEM_Initialize@state,w,c
 51884                           
 51885                           ; Switch size 1, requested type "space"
 51886                           ; Number of cases is 3, Range of values is 0 to 2
 51887                           ; switch strategies available:
 51888                           ; Name         Instructions Cycles
 51889                           ; simple_byte           10     6 (average)
 51890                           ;	Chosen strategy is simple_byte
 51891  014AEE  0A00               	xorlw	0	; case 0
 51892  014AF0  B4D8               	btfsc	status,2,c
 51893  014AF2  D7DF               	goto	i2l898
 51894  014AF4  0A01               	xorlw	1	; case 1
 51895  014AF6  B4D8               	btfsc	status,2,c
 51896  014AF8  0012               	return	
 51897  014AFA  0A03               	xorlw	3	; case 2
 51898  014AFC  A4D8               	btfss	status,2,c
 51899  014AFE  0012               	return	
 51900  014B00  D7E6               	goto	i2l904
 51901  014B02                     __end_ofi2_SYSTEM_Initialize:
 51902                           	opt stack 0
 51903                           tosu	equ	0xFFF
 51904                           tosh	equ	0xFFE
 51905                           tosl	equ	0xFFD
 51906                           pclatu	equ	0xFFB
 51907                           pclath	equ	0xFFA
 51908                           tblptru	equ	0xFF8
 51909                           tblptrh	equ	0xFF7
 51910                           tblptrl	equ	0xFF6
 51911                           tablat	equ	0xFF5
 51912                           prodh	equ	0xFF4
 51913                           prodl	equ	0xFF3
 51914                           intcon	equ	0xFF2
 51915                           indf0	equ	0xFEF
 51916                           postinc0	equ	0xFEE
 51917                           fsr0h	equ	0xFEA
 51918                           fsr0l	equ	0xFE9
 51919                           wreg	equ	0xFE8
 51920                           indf1	equ	0xFE7
 51921                           postinc1	equ	0xFE6
 51922                           postdec1	equ	0xFE5
 51923                           plusw1	equ	0xFE3
 51924                           fsr1h	equ	0xFE2
 51925                           fsr1l	equ	0xFE1
 51926                           indf2	equ	0xFDF
 51927                           postinc2	equ	0xFDE
 51928                           postdec2	equ	0xFDD
 51929                           plusw2	equ	0xFDB
 51930                           fsr2h	equ	0xFDA
 51931                           fsr2l	equ	0xFD9
 51932                           status	equ	0xFD8
 51933                           
 51934 ;; *************** function _USBCheckMSDRequest *****************
 51935 ;; Defined at:
 51936 ;;		line 218 in file "usb_device_msd.c"
 51937 ;; Parameters:    Size  Location     Type
 51938 ;;		None
 51939 ;; Auto vars:     Size  Location     Type
 51940 ;;		None
 51941 ;; Return value:  Size  Location     Type
 51942 ;;                  1    wreg      void 
 51943 ;; Registers used:
 51944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51945 ;; Tracked objects:
 51946 ;;		On entry : 0/0
 51947 ;;		On exit  : 0/0
 51948 ;;		Unchanged: 0/0
 51949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51951 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51953 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51954 ;;Total ram usage:        4 bytes
 51955 ;; Hardware stack levels used:    1
 51956 ;; Hardware stack levels required when called:    1
 51957 ;; This function calls:
 51958 ;;		i2_USBTransferOnePacket
 51959 ;; This function is called by:
 51960 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51961 ;; This function uses a non-reentrant model
 51962 ;;
 51963                           
 51964                           	psect	text216
 51965  012A8C                     __ptext216:
 51966                           	opt stack 0
 51967  012A8C                     _USBCheckMSDRequest:
 51968                           	opt stack 14
 51969                           
 51970                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 51971                           
 51972                           ;incstack = 0
 51973  012A8C  010D               	movlb	13	; () banked
 51974  012A8E  5130               	movf	48,w,b	;volatile
 51975  012A90  0B1F               	andlw	31
 51976  012A92  06E8               	decf	wreg,f,c
 51977  012A94  A4D8               	btfss	status,2,c
 51978  012A96  0012               	return	
 51979                           
 51980                           ; BSR set to: 13
 51981                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 51982                           
 51983                           ; BSR set to: 13
 51984                           
 51985                           ; BSR set to: 13
 51986                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 51987  012A98  5134               	movf	52,w,b	;volatile
 51988  012A9A  A4D8               	btfss	status,2,c
 51989  012A9C  0012               	return	
 51990  012A9E  D04C               	goto	i2l545
 51991  012AA0                     
 51992                           ; BSR set to: 13
 51993                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 51994                           
 51995                           ; BSR set to: 13
 51996  012AA0  5132               	movf	50,w,b	;volatile
 51997  012AA2  1133               	iorwf	51,w,b	;volatile
 51998  012AA4  A4D8               	btfss	status,2,c
 51999  012AA6  0012               	return	
 52000                           
 52001                           ; BSR set to: 13
 52002  012AA8  5136               	movf	54,w,b	;volatile
 52003  012AAA  1137               	iorwf	55,w,b	;volatile
 52004  012AAC  A4D8               	btfss	status,2,c
 52005  012AAE  0012               	return	
 52006                           
 52007                           ; BSR set to: 13
 52008                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 52009                           
 52010                           ; BSR set to: 13
 52011                           
 52012                           ; BSR set to: 13
 52013                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 52014  012AB0  0E00               	movlw	0
 52015  012AB2  0101               	movlb	1	; () banked
 52016  012AB4  6F63               	movwf	_MSD_State& (0+255),b
 52017                           
 52018                           ; BSR set to: 1
 52019                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 52020  012AB6  6962               	setf	_MSDCommandState& (0+255),b
 52021                           
 52022                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 52023  012AB8  0E00               	movlw	0
 52024  012ABA  6F61               	movwf	_MSDReadState& (0+255),b
 52025                           
 52026                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 52027  012ABC  0E00               	movlw	0
 52028  012ABE  6F60               	movwf	_MSDWriteState& (0+255),b
 52029                           
 52030                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 52031  012AC0  0E01               	movlw	1
 52032  012AC2  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52033                           
 52034                           ; BSR set to: 1
 52035                           
 52036                           ; BSR set to: 1
 52037                           
 52038                           ; BSR set to: 1
 52039                           
 52040                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 52041  012AC4  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 52042  012AC8  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 52043                           
 52044                           ; BSR set to: 1
 52045  012ACC  500C               	movf	_USBCheckMSDRequest$2534,w,c
 52046  012ACE  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 52047  012AD0  B4D8               	btfsc	status,2,c
 52048  012AD2  D00A               	goto	i2u1070_40
 52049                           
 52050                           ; BSR set to: 1
 52051                           
 52052                           ; BSR set to: 1
 52053                           
 52054                           ; BSR set to: 1
 52055                           
 52056                           ; BSR set to: 1
 52057  012AD4  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 52058  012AD8  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 52059                           
 52060                           ; BSR set to: 1
 52061                           
 52062                           ; BSR set to: 1
 52063  012ADC  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 52064  012AE0  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 52065  012AE4  BEDF               	btfsc	indf2,7,c
 52066  012AE6  D00F               	goto	i2l550
 52067  012AE8                     i2u1070_40:
 52068                           
 52069                           ; BSR set to: 1
 52070                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 52071                           
 52072                           ; BSR set to: 1
 52073  012AE8  0E00               	movlw	0
 52074  012AEA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52075  012AEC  0E40               	movlw	64
 52076  012AEE  6E02               	movwf	i2USBTransferOnePacket@data,c
 52077  012AF0  0E0D               	movlw	13
 52078  012AF2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52079  012AF4  0E40               	movlw	64
 52080  012AF6  6E04               	movwf	i2USBTransferOnePacket@len,c
 52081  012AF8  0E02               	movlw	2
 52082  012AFA  ECF0  F088         	call	i2_USBTransferOnePacket
 52083  012AFE  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52084  012B02  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52085  012B06                     i2l550:
 52086                           
 52087                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 52088  012B06  0E80               	movlw	128
 52089  012B08  6E55               	movwf	_inPipes+3,c	;volatile
 52090                           
 52091                           ;usb_device_msd.c: 263: break;
 52092  012B0A  0012               	return	
 52093  012B0C                     
 52094                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 52095  012B0C  010D               	movlb	13	; () banked
 52096  012B0E  5132               	movf	50,w,b	;volatile
 52097  012B10  1133               	iorwf	51,w,b	;volatile
 52098  012B12  A4D8               	btfss	status,2,c
 52099  012B14  0012               	return	
 52100                           
 52101                           ; BSR set to: 13
 52102  012B16  0536               	decf	54,w,b	;volatile
 52103  012B18  1137               	iorwf	55,w,b	;volatile
 52104  012B1A  A4D8               	btfss	status,2,c
 52105  012B1C  0012               	return	
 52106                           
 52107                           ; BSR set to: 13
 52108                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 52109                           
 52110                           ; BSR set to: 13
 52111                           
 52112                           ; BSR set to: 13
 52113                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 52114  012B1E  0E00               	movlw	0
 52115  012B20  6F38               	movwf	56,b	;volatile
 52116                           
 52117                           ; BSR set to: 13
 52118                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52119  012B22  0E38               	movlw	56
 52120  012B24  6E52               	movwf	_inPipes,c	;volatile
 52121  012B26  0E0D               	movlw	13
 52122  012B28  6E53               	movwf	_inPipes+1,c	;volatile
 52123                           
 52124                           ; BSR set to: 13
 52125  012B2A  0E00               	movlw	0
 52126  012B2C  6E57               	movwf	_inPipes+5,c	;volatile
 52127  012B2E  0E01               	movlw	1
 52128  012B30  6E56               	movwf	_inPipes+4,c	;volatile
 52129                           
 52130                           ; BSR set to: 13
 52131  012B32  0EC1               	movlw	193
 52132  012B34  6E55               	movwf	_inPipes+3,c	;volatile
 52133                           
 52134                           ; BSR set to: 13
 52135                           ;usb_device_msd.c: 278: }
 52136                           
 52137                           ;usb_device_msd.c: 277: break;
 52138  012B36  0012               	return	
 52139  012B38                     i2l545:
 52140                           
 52141                           ; BSR set to: 13
 52142                           
 52143                           ; BSR set to: 13
 52144  012B38  5131               	movf	49,w,b	;volatile
 52145                           
 52146                           ; Switch size 1, requested type "space"
 52147                           ; Number of cases is 2, Range of values is 254 to 255
 52148                           ; switch strategies available:
 52149                           ; Name         Instructions Cycles
 52150                           ; simple_byte            7     4 (average)
 52151                           ;	Chosen strategy is simple_byte
 52152  012B3A  0AFE               	xorlw	254	; case 254
 52153  012B3C  B4D8               	btfsc	status,2,c
 52154  012B3E  D7E6               	goto	i2l562
 52155  012B40  0A01               	xorlw	1	; case 255
 52156  012B42  A4D8               	btfss	status,2,c
 52157  012B44  0012               	return	
 52158  012B46  D7AC               	goto	i2l546
 52159  012B48                     __end_of_USBCheckMSDRequest:
 52160                           	opt stack 0
 52161                           tosu	equ	0xFFF
 52162                           tosh	equ	0xFFE
 52163                           tosl	equ	0xFFD
 52164                           pclatu	equ	0xFFB
 52165                           pclath	equ	0xFFA
 52166                           tblptru	equ	0xFF8
 52167                           tblptrh	equ	0xFF7
 52168                           tblptrl	equ	0xFF6
 52169                           tablat	equ	0xFF5
 52170                           prodh	equ	0xFF4
 52171                           prodl	equ	0xFF3
 52172                           intcon	equ	0xFF2
 52173                           indf0	equ	0xFEF
 52174                           postinc0	equ	0xFEE
 52175                           fsr0h	equ	0xFEA
 52176                           fsr0l	equ	0xFE9
 52177                           wreg	equ	0xFE8
 52178                           indf1	equ	0xFE7
 52179                           postinc1	equ	0xFE6
 52180                           postdec1	equ	0xFE5
 52181                           plusw1	equ	0xFE3
 52182                           fsr1h	equ	0xFE2
 52183                           fsr1l	equ	0xFE1
 52184                           indf2	equ	0xFDF
 52185                           postinc2	equ	0xFDE
 52186                           postdec2	equ	0xFDD
 52187                           plusw2	equ	0xFDB
 52188                           fsr2h	equ	0xFDA
 52189                           fsr2l	equ	0xFD9
 52190                           status	equ	0xFD8
 52191                           
 52192 ;; *************** function _USBCheckHIDRequest *****************
 52193 ;; Defined at:
 52194 ;;		line 153 in file "usb_device_hid.c"
 52195 ;; Parameters:    Size  Location     Type
 52196 ;;		None
 52197 ;; Auto vars:     Size  Location     Type
 52198 ;;		None
 52199 ;; Return value:  Size  Location     Type
 52200 ;;                  1    wreg      void 
 52201 ;; Registers used:
 52202 ;;		wreg, status,2, status,0
 52203 ;; Tracked objects:
 52204 ;;		On entry : 0/0
 52205 ;;		On exit  : 0/0
 52206 ;;		Unchanged: 0/0
 52207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52212 ;;Total ram usage:        0 bytes
 52213 ;; Hardware stack levels used:    1
 52214 ;; This function calls:
 52215 ;;		Nothing
 52216 ;; This function is called by:
 52217 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52218 ;; This function uses a non-reentrant model
 52219 ;;
 52220                           
 52221                           	psect	text217
 52222  012430                     __ptext217:
 52223                           	opt stack 0
 52224  012430                     _USBCheckHIDRequest:
 52225                           	opt stack 15
 52226                           
 52227                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 52228                           
 52229                           ;incstack = 0
 52230  012430  010D               	movlb	13	; () banked
 52231  012432  5130               	movf	48,w,b	;volatile
 52232  012434  0B1F               	andlw	31
 52233  012436  06E8               	decf	wreg,f,c
 52234  012438  A4D8               	btfss	status,2,c
 52235  01243A  0012               	return	
 52236                           
 52237                           ; BSR set to: 13
 52238                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 52239                           
 52240                           ; BSR set to: 13
 52241                           
 52242                           ; BSR set to: 13
 52243  01243C  5134               	movf	52,w,b	;volatile
 52244  01243E  A4D8               	btfss	status,2,c
 52245  012440  0012               	return	
 52246                           
 52247                           ; BSR set to: 13
 52248                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 52249                           
 52250                           ; BSR set to: 13
 52251                           
 52252                           ; BSR set to: 13
 52253  012442  0E06               	movlw	6
 52254  012444  1931               	xorwf	49,w,b	;volatile
 52255  012446  B4D8               	btfsc	status,2,c
 52256  012448  D019               	goto	i2l425
 52257  01244A  D021               	goto	i2l428
 52258  01244C                     
 52259                           ; BSR set to: 13
 52260                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 52261                           
 52262                           ; BSR set to: 13
 52263  01244C  0101               	movlb	1	; () banked
 52264  01244E  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 52265  012450  A4D8               	btfss	status,2,c
 52266  012452  D01D               	goto	i2l428
 52267                           
 52268                           ; BSR set to: 1
 52269                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 52270  012454  0ED0               	movlw	low (_configDescriptor1+18)
 52271  012456  6E52               	movwf	_inPipes,c	;volatile
 52272  012458  0EA0               	movlw	high (_configDescriptor1+18)
 52273  01245A  6E53               	movwf	_inPipes+1,c	;volatile
 52274                           
 52275                           ; BSR set to: 1
 52276  01245C  0E00               	movlw	0
 52277  01245E  6E57               	movwf	_inPipes+5,c	;volatile
 52278  012460  0E09               	movlw	9
 52279  012462  D00A               	goto	L84
 52280  012464                     i2l12426:
 52281                           
 52282                           ; BSR set to: 1
 52283  012464  0EC0               	movlw	192
 52284  012466  6E55               	movwf	_inPipes+3,c	;volatile
 52285                           
 52286                           ; BSR set to: 1
 52287                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 52288  012468  D012               	goto	i2l428
 52289  01246A                     
 52290                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 52291                           
 52292                           ; BSR set to: 1
 52293  01246A  0E84               	movlw	low _hid_rpt01
 52294  01246C  6E52               	movwf	_inPipes,c	;volatile
 52295  01246E  0EA1               	movlw	high _hid_rpt01
 52296  012470  6E53               	movwf	_inPipes+1,c	;volatile
 52297  012472  0E00               	movlw	0
 52298  012474  6E57               	movwf	_inPipes+5,c	;volatile
 52299  012476  0E1D               	movlw	29
 52300  012478                     L84:
 52301  012478  6E56               	movwf	_inPipes+4,c	;volatile
 52302  01247A  D7F4               	goto	i2l12426
 52303  01247C                     i2l425:
 52304  01247C  010D               	movlb	13	; () banked
 52305  01247E  5133               	movf	51,w,b	;volatile
 52306                           
 52307                           ; Switch size 1, requested type "space"
 52308                           ; Number of cases is 3, Range of values is 33 to 35
 52309                           ; switch strategies available:
 52310                           ; Name         Instructions Cycles
 52311                           ; simple_byte           10     6 (average)
 52312                           ;	Chosen strategy is simple_byte
 52313  012480  0A21               	xorlw	33	; case 33
 52314  012482  B4D8               	btfsc	status,2,c
 52315  012484  D7E3               	goto	i2l426
 52316  012486  0A03               	xorlw	3	; case 34
 52317  012488  B4D8               	btfsc	status,2,c
 52318  01248A  D7EF               	goto	i2l429
 52319  01248C  0A01               	xorlw	1	; case 35
 52320  01248E                     i2l428:
 52321                           
 52322                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 52323                           
 52324                           ; BSR set to: 13
 52325                           
 52326                           ; BSR set to: 13
 52327  01248E  010D               	movlb	13	; () banked
 52328  012490  3930               	swapf	48,w,b	;volatile
 52329  012492  32E8               	rrcf	wreg,f,c
 52330  012494  0B03               	andlw	3
 52331  012496  06E8               	decf	wreg,f,c
 52332  012498  A4D8               	btfss	status,2,c
 52333  01249A  0012               	return	
 52334  01249C  D020               	goto	i2l432
 52335  01249E                     
 52336                           ; BSR set to: 13
 52337                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52338                           
 52339                           ; BSR set to: 13
 52340  01249E  0EC0               	movlw	low _idle_rate
 52341  0124A0  6E52               	movwf	_inPipes,c	;volatile
 52342  0124A2  0E01               	movlw	high _idle_rate
 52343  0124A4  6E53               	movwf	_inPipes+1,c	;volatile
 52344                           
 52345                           ; BSR set to: 13
 52346  0124A6  0E00               	movlw	0
 52347  0124A8  6E57               	movwf	_inPipes+5,c	;volatile
 52348  0124AA  0E01               	movlw	1
 52349  0124AC  6E56               	movwf	_inPipes+4,c	;volatile
 52350                           
 52351                           ; BSR set to: 13
 52352  0124AE  0EC1               	movlw	193
 52353  0124B0  6E55               	movwf	_inPipes+3,c	;volatile
 52354                           
 52355                           ;usb_device_hid.c: 223: break;
 52356  0124B2  0012               	return	
 52357  0124B4                     
 52358                           ; BSR set to: 13
 52359                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 52360                           
 52361                           ; BSR set to: 13
 52362  0124B4  0E80               	movlw	128
 52363  0124B6  6E55               	movwf	_inPipes+3,c	;volatile
 52364                           
 52365                           ; BSR set to: 13
 52366                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 52367  0124B8  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 52368                           
 52369                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 52370  0124BC  0012               	return	
 52371  0124BE                     
 52372                           ; BSR set to: 13
 52373                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 52374                           
 52375                           ; BSR set to: 13
 52376  0124BE  0EBF               	movlw	low _active_protocol
 52377  0124C0  6E52               	movwf	_inPipes,c	;volatile
 52378  0124C2  0E01               	movlw	high _active_protocol
 52379  0124C4  6E53               	movwf	_inPipes+1,c	;volatile
 52380                           
 52381                           ; BSR set to: 13
 52382  0124C6  0E00               	movlw	0
 52383  0124C8  6E57               	movwf	_inPipes+5,c	;volatile
 52384  0124CA  0E01               	movlw	1
 52385  0124CC  6E56               	movwf	_inPipes+4,c	;volatile
 52386                           
 52387                           ; BSR set to: 13
 52388  0124CE  0E81               	movlw	129
 52389  0124D0  6E55               	movwf	_inPipes+3,c	;volatile
 52390                           
 52391                           ;usb_device_hid.c: 234: break;
 52392  0124D2  0012               	return	
 52393  0124D4                     
 52394                           ; BSR set to: 13
 52395                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 52396                           
 52397                           ; BSR set to: 13
 52398  0124D4  0E80               	movlw	128
 52399  0124D6  6E55               	movwf	_inPipes+3,c	;volatile
 52400                           
 52401                           ; BSR set to: 13
 52402                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 52403  0124D8  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 52404                           
 52405                           ; BSR set to: 13
 52406                           ;usb_device_hid.c: 239: }
 52407                           
 52408                           ;usb_device_hid.c: 238: break;
 52409  0124DC  0012               	return	
 52410  0124DE                     i2l432:
 52411                           
 52412                           ; BSR set to: 13
 52413                           
 52414                           ; BSR set to: 13
 52415  0124DE  5131               	movf	49,w,b	;volatile
 52416                           
 52417                           ; Switch size 1, requested type "space"
 52418                           ; Number of cases is 6, Range of values is 1 to 11
 52419                           ; switch strategies available:
 52420                           ; Name         Instructions Cycles
 52421                           ; simple_byte           19    10 (average)
 52422                           ;	Chosen strategy is simple_byte
 52423  0124E0  0A01               	xorlw	1	; case 1
 52424  0124E2  B4D8               	btfsc	status,2,c
 52425  0124E4  0012               	return	
 52426  0124E6  0A03               	xorlw	3	; case 2
 52427  0124E8  B4D8               	btfsc	status,2,c
 52428  0124EA  D7D9               	goto	i2l436
 52429  0124EC  0A01               	xorlw	1	; case 3
 52430  0124EE  B4D8               	btfsc	status,2,c
 52431  0124F0  D7E6               	goto	i2l438
 52432  0124F2  0A0A               	xorlw	10	; case 9
 52433  0124F4  B4D8               	btfsc	status,2,c
 52434  0124F6  0012               	return	
 52435  0124F8  0A03               	xorlw	3	; case 10
 52436  0124FA  B4D8               	btfsc	status,2,c
 52437  0124FC  D7DB               	goto	i2l437
 52438  0124FE  0A01               	xorlw	1	; case 11
 52439  012500  A4D8               	btfss	status,2,c
 52440  012502  0012               	return	
 52441  012504  D7E7               	goto	i2l439
 52442  012506                     __end_of_USBCheckHIDRequest:
 52443                           	opt stack 0
 52444                           tosu	equ	0xFFF
 52445                           tosh	equ	0xFFE
 52446                           tosl	equ	0xFFD
 52447                           pclatu	equ	0xFFB
 52448                           pclath	equ	0xFFA
 52449                           tblptru	equ	0xFF8
 52450                           tblptrh	equ	0xFF7
 52451                           tblptrl	equ	0xFF6
 52452                           tablat	equ	0xFF5
 52453                           prodh	equ	0xFF4
 52454                           prodl	equ	0xFF3
 52455                           intcon	equ	0xFF2
 52456                           indf0	equ	0xFEF
 52457                           postinc0	equ	0xFEE
 52458                           fsr0h	equ	0xFEA
 52459                           fsr0l	equ	0xFE9
 52460                           wreg	equ	0xFE8
 52461                           indf1	equ	0xFE7
 52462                           postinc1	equ	0xFE6
 52463                           postdec1	equ	0xFE5
 52464                           plusw1	equ	0xFE3
 52465                           fsr1h	equ	0xFE2
 52466                           fsr1l	equ	0xFE1
 52467                           indf2	equ	0xFDF
 52468                           postinc2	equ	0xFDE
 52469                           postdec2	equ	0xFDD
 52470                           plusw2	equ	0xFDB
 52471                           fsr2h	equ	0xFDA
 52472                           fsr2l	equ	0xFD9
 52473                           status	equ	0xFD8
 52474                           
 52475 ;; *************** function _MSDTransferTerminated *****************
 52476 ;; Defined at:
 52477 ;;		line 1674 in file "usb_device_msd.c"
 52478 ;; Parameters:    Size  Location     Type
 52479 ;;  handle          2   11[COMRAM] PTR void 
 52480 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52481 ;;		 -> BDT(48), 
 52482 ;; Auto vars:     Size  Location     Type
 52483 ;;		None
 52484 ;; Return value:  Size  Location     Type
 52485 ;;                  1    wreg      void 
 52486 ;; Registers used:
 52487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52488 ;; Tracked objects:
 52489 ;;		On entry : 0/0
 52490 ;;		On exit  : 0/0
 52491 ;;		Unchanged: 0/0
 52492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52497 ;;Total ram usage:        4 bytes
 52498 ;; Hardware stack levels used:    1
 52499 ;; Hardware stack levels required when called:    1
 52500 ;; This function calls:
 52501 ;;		i2_USBStallEndpoint
 52502 ;;		i2_USBTransferOnePacket
 52503 ;; This function is called by:
 52504 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52505 ;; This function uses a non-reentrant model
 52506 ;;
 52507                           
 52508                           	psect	text218
 52509  01495C                     __ptext218:
 52510                           	opt stack 0
 52511  01495C                     _MSDTransferTerminated:
 52512                           	opt stack 14
 52513                           
 52514                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 52515                           
 52516                           ; BSR set to: 13
 52517                           ;incstack = 0
 52518  01495C  0101               	movlb	1	; () banked
 52519  01495E  515B               	movf	_MSDCBWValid& (0+255),w,b
 52520  014960  A4D8               	btfss	status,2,c
 52521  014962  D00B               	goto	i2l780
 52522                           
 52523                           ; BSR set to: 1
 52524                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 52525  014964  0E01               	movlw	1
 52526  014966  6E01               	movwf	i2USBStallEndpoint@dir,c
 52527  014968  0E02               	movlw	2
 52528  01496A  EC6D  F088         	call	i2_USBStallEndpoint
 52529                           
 52530                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 52531  01496E  0E00               	movlw	0
 52532  014970  6E01               	movwf	i2USBStallEndpoint@dir,c
 52533  014972  0E02               	movlw	2
 52534  014974  EC6D  F088         	call	i2_USBStallEndpoint
 52535                           
 52536                           ;usb_device_msd.c: 1681: }
 52537  014978  0012               	return	
 52538  01497A                     i2l780:
 52539  01497A  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 52540  01497E  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 52541  014982  500E               	movf	_MSDTransferTerminated$2623,w,c
 52542  014984  180C               	xorwf	MSDTransferTerminated@handle,w,c
 52543  014986  E114               	bnz	i2l783
 52544  014988  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 52545  01498A  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 52546  01498C  A4D8               	btfss	status,2,c
 52547  01498E  0012               	return	
 52548                           
 52549                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 52550  014990  0E00               	movlw	0
 52551  014992  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52552  014994  0E40               	movlw	64
 52553  014996  6E02               	movwf	i2USBTransferOnePacket@data,c
 52554  014998  0E0D               	movlw	13
 52555  01499A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52556  01499C  0E40               	movlw	64
 52557  01499E  6E04               	movwf	i2USBTransferOnePacket@len,c
 52558  0149A0  0E02               	movlw	2
 52559  0149A2  ECF0  F088         	call	i2_USBTransferOnePacket
 52560  0149A6  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52561  0149AA  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52562  0149AE  0012               	return	
 52563  0149B0                     i2l783:
 52564  0149B0  0012               	return		;funcret
 52565  0149B2                     __end_of_MSDTransferTerminated:
 52566                           	opt stack 0
 52567                           tosu	equ	0xFFF
 52568                           tosh	equ	0xFFE
 52569                           tosl	equ	0xFFD
 52570                           pclatu	equ	0xFFB
 52571                           pclath	equ	0xFFA
 52572                           tblptru	equ	0xFF8
 52573                           tblptrh	equ	0xFF7
 52574                           tblptrl	equ	0xFF6
 52575                           tablat	equ	0xFF5
 52576                           prodh	equ	0xFF4
 52577                           prodl	equ	0xFF3
 52578                           intcon	equ	0xFF2
 52579                           indf0	equ	0xFEF
 52580                           postinc0	equ	0xFEE
 52581                           fsr0h	equ	0xFEA
 52582                           fsr0l	equ	0xFE9
 52583                           wreg	equ	0xFE8
 52584                           indf1	equ	0xFE7
 52585                           postinc1	equ	0xFE6
 52586                           postdec1	equ	0xFE5
 52587                           plusw1	equ	0xFE3
 52588                           fsr1h	equ	0xFE2
 52589                           fsr1l	equ	0xFE1
 52590                           indf2	equ	0xFDF
 52591                           postinc2	equ	0xFDE
 52592                           postdec2	equ	0xFDD
 52593                           plusw2	equ	0xFDB
 52594                           fsr2h	equ	0xFDA
 52595                           fsr2l	equ	0xFD9
 52596                           status	equ	0xFD8
 52597                           
 52598 ;; *************** function i2_USBStallEndpoint *****************
 52599 ;; Defined at:
 52600 ;;		line 1073 in file "usb_device.c"
 52601 ;; Parameters:    Size  Location     Type
 52602 ;;  ep              1    wreg     unsigned char 
 52603 ;;  dir             1    0[COMRAM] unsigned char 
 52604 ;; Auto vars:     Size  Location     Type
 52605 ;;  ep              1    5[COMRAM] unsigned char 
 52606 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 52607 ;;		 -> BDT(48), 
 52608 ;; Return value:  Size  Location     Type
 52609 ;;                  1    wreg      void 
 52610 ;; Registers used:
 52611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52612 ;; Tracked objects:
 52613 ;;		On entry : 0/0
 52614 ;;		On exit  : 0/0
 52615 ;;		Unchanged: 0/0
 52616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52618 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52620 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52621 ;;Total ram usage:        8 bytes
 52622 ;; Hardware stack levels used:    1
 52623 ;; This function calls:
 52624 ;;		Nothing
 52625 ;; This function is called by:
 52626 ;;		_MSDTransferTerminated
 52627 ;; This function uses a non-reentrant model
 52628 ;;
 52629                           
 52630                           	psect	text219
 52631  0110DA                     __ptext219:
 52632                           	opt stack 0
 52633  0110DA                     i2_USBStallEndpoint:
 52634                           	opt stack 14
 52635                           
 52636                           ;incstack = 0
 52637                           ;i2USBStallEndpoint@ep stored from wreg
 52638  0110DA  6E06               	movwf	i2USBStallEndpoint@ep,c
 52639                           
 52640                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 52641  0110DC  5006               	movf	i2USBStallEndpoint@ep,w,c
 52642  0110DE  A4D8               	btfss	status,2,c
 52643  0110E0  D02B               	goto	i2l192
 52644                           
 52645                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 52646  0110E2  EE20 F001          	lfsr	2,1
 52647  0110E6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52648  0110E8  26D9               	addwf	fsr2l,f,c
 52649  0110EA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52650  0110EC  22DA               	addwfc	fsr2h,f,c
 52651  0110EE  0E08               	movlw	8
 52652  0110F0  6EDF               	movwf	indf2,c
 52653                           
 52654                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52655  0110F2  EE20 F002          	lfsr	2,2
 52656  0110F6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52657  0110F8  26D9               	addwf	fsr2l,f,c
 52658  0110FA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52659  0110FC  22DA               	addwfc	fsr2h,f,c
 52660  0110FE  0E30               	movlw	48
 52661  011100  6EDE               	movwf	postinc2,c
 52662  011102  0E0D               	movlw	13
 52663  011104  6EDD               	movwf	postdec2,c
 52664                           
 52665                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52666  011106  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52667  01110A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52668  01110E  0E0C               	movlw	12
 52669  011110  6EDF               	movwf	indf2,c
 52670                           
 52671                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52672  011112  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52673  011116  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52674  01111A  0E00               	movlw	0
 52675  01111C  8EDB               	bsf	plusw2,7,c
 52676                           
 52677                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 52678  01111E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52679  011122  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52680  011126  0E04               	movlw	4
 52681  011128  6EDF               	movwf	indf2,c
 52682                           
 52683                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52684  01112A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52685  01112E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52686  011132  0E00               	movlw	0
 52687  011134  8EDB               	bsf	plusw2,7,c
 52688                           
 52689                           ;usb_device.c: 1089: }
 52690  011136  0012               	return	
 52691  011138                     i2l192:
 52692                           
 52693                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 52694  011138  5001               	movf	i2USBStallEndpoint@dir,w,c
 52695  01113A  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 52696  01113C  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 52697  01113E  90D8               	bcf	status,0,c
 52698  011140  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52699  011142  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52700  011144  5006               	movf	i2USBStallEndpoint@ep,w,c
 52701  011146  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 52702  011148  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 52703  01114A  90D8               	bcf	status,0,c
 52704  01114C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52705  01114E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52706  011150  90D8               	bcf	status,0,c
 52707  011152  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52708  011154  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52709  011156  5002               	movf	??i2_USBStallEndpoint,w,c
 52710  011158  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 52711  01115A  5003               	movf	??i2_USBStallEndpoint+1,w,c
 52712  01115C  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 52713  01115E  90D8               	bcf	status,0,c
 52714  011160  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52715  011162  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52716  011164  90D8               	bcf	status,0,c
 52717  011166  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52718  011168  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52719  01116A  0E00               	movlw	0
 52720  01116C  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 52721  01116E  6E07               	movwf	i2USBStallEndpoint@p,c
 52722  011170  0E0D               	movlw	13
 52723  011172  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 52724  011174  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52725                           
 52726                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 52727  011176  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52728  01117A  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52729  01117E  0E00               	movlw	0
 52730  011180  84DB               	bsf	plusw2,2,c
 52731                           
 52732                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 52733  011182  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52734  011186  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52735  01118A  0E00               	movlw	0
 52736  01118C  8EDB               	bsf	plusw2,7,c
 52737                           
 52738                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 52739  01118E  5006               	movf	i2USBStallEndpoint@ep,w,c
 52740  011190  0D04               	mullw	4
 52741  011192  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 52742  011196  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 52743  01119A  5001               	movf	i2USBStallEndpoint@dir,w,c
 52744  01119C  0D02               	mullw	2
 52745  01119E  50F3               	movf	prodl,w,c
 52746  0111A0  2602               	addwf	??i2_USBStallEndpoint,f,c
 52747  0111A2  50F4               	movf	prodh,w,c
 52748  0111A4  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52749  0111A6  90D8               	bcf	status,0,c
 52750  0111A8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52751  0111AA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52752  0111AC  90D8               	bcf	status,0,c
 52753  0111AE  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52754  0111B0  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52755  0111B2  0E04               	movlw	4
 52756  0111B4  2602               	addwf	??i2_USBStallEndpoint,f,c
 52757  0111B6  0E00               	movlw	0
 52758  0111B8  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52759  0111BA  0E00               	movlw	0
 52760  0111BC  2402               	addwf	??i2_USBStallEndpoint,w,c
 52761  0111BE  6E07               	movwf	i2USBStallEndpoint@p,c
 52762  0111C0  0E0D               	movlw	13
 52763  0111C2  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 52764  0111C4  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52765                           
 52766                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 52767  0111C6  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52768  0111CA  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52769  0111CE  0E00               	movlw	0
 52770  0111D0  84DB               	bsf	plusw2,2,c
 52771                           
 52772                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 52773  0111D2  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52774  0111D6  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52775  0111DA  0E00               	movlw	0
 52776  0111DC  8EDB               	bsf	plusw2,7,c
 52777  0111DE  0012               	return	
 52778  0111E0                     __end_ofi2_USBStallEndpoint:
 52779                           	opt stack 0
 52780                           tosu	equ	0xFFF
 52781                           tosh	equ	0xFFE
 52782                           tosl	equ	0xFFD
 52783                           pclatu	equ	0xFFB
 52784                           pclath	equ	0xFFA
 52785                           tblptru	equ	0xFF8
 52786                           tblptrh	equ	0xFF7
 52787                           tblptrl	equ	0xFF6
 52788                           tablat	equ	0xFF5
 52789                           prodh	equ	0xFF4
 52790                           prodl	equ	0xFF3
 52791                           intcon	equ	0xFF2
 52792                           indf0	equ	0xFEF
 52793                           postinc0	equ	0xFEE
 52794                           fsr0h	equ	0xFEA
 52795                           fsr0l	equ	0xFE9
 52796                           wreg	equ	0xFE8
 52797                           indf1	equ	0xFE7
 52798                           postinc1	equ	0xFE6
 52799                           postdec1	equ	0xFE5
 52800                           plusw1	equ	0xFE3
 52801                           fsr1h	equ	0xFE2
 52802                           fsr1l	equ	0xFE1
 52803                           indf2	equ	0xFDF
 52804                           postinc2	equ	0xFDE
 52805                           postdec2	equ	0xFDD
 52806                           plusw2	equ	0xFDB
 52807                           fsr2h	equ	0xFDA
 52808                           fsr2l	equ	0xFD9
 52809                           status	equ	0xFD8
 52810                           
 52811 ;; *************** function _APP_DeviceMSDInitialize *****************
 52812 ;; Defined at:
 52813 ;;		line 84 in file "app_device_msd.c"
 52814 ;; Parameters:    Size  Location     Type
 52815 ;;		None
 52816 ;; Auto vars:     Size  Location     Type
 52817 ;;		None
 52818 ;; Return value:  Size  Location     Type
 52819 ;;                  1    wreg      void 
 52820 ;; Registers used:
 52821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52822 ;; Tracked objects:
 52823 ;;		On entry : 0/0
 52824 ;;		On exit  : 0/0
 52825 ;;		Unchanged: 0/0
 52826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52831 ;;Total ram usage:        0 bytes
 52832 ;; Hardware stack levels used:    1
 52833 ;; Hardware stack levels required when called:    2
 52834 ;; This function calls:
 52835 ;;		_USBEnableEndpoint
 52836 ;;		_USBMSDInit
 52837 ;; This function is called by:
 52838 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52839 ;; This function uses a non-reentrant model
 52840 ;;
 52841                           
 52842                           	psect	text220
 52843  0158C0                     __ptext220:
 52844                           	opt stack 0
 52845  0158C0                     _APP_DeviceMSDInitialize:
 52846                           	opt stack 13
 52847                           
 52848                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 52849                           
 52850                           ;incstack = 0
 52851  0158C0  0E1E               	movlw	30
 52852  0158C2  6E09               	movwf	USBEnableEndpoint@options,c
 52853  0158C4  0E02               	movlw	2
 52854  0158C6  EC5C  F0A8         	call	_USBEnableEndpoint
 52855                           
 52856                           ;app_device_msd.c: 93: USBMSDInit();
 52857  0158CA  EC57  F086         	call	_USBMSDInit	;wreg free
 52858  0158CE  0012               	return		;funcret
 52859  0158D0                     __end_of_APP_DeviceMSDInitialize:
 52860                           	opt stack 0
 52861                           tosu	equ	0xFFF
 52862                           tosh	equ	0xFFE
 52863                           tosl	equ	0xFFD
 52864                           pclatu	equ	0xFFB
 52865                           pclath	equ	0xFFA
 52866                           tblptru	equ	0xFF8
 52867                           tblptrh	equ	0xFF7
 52868                           tblptrl	equ	0xFF6
 52869                           tablat	equ	0xFF5
 52870                           prodh	equ	0xFF4
 52871                           prodl	equ	0xFF3
 52872                           intcon	equ	0xFF2
 52873                           indf0	equ	0xFEF
 52874                           postinc0	equ	0xFEE
 52875                           fsr0h	equ	0xFEA
 52876                           fsr0l	equ	0xFE9
 52877                           wreg	equ	0xFE8
 52878                           indf1	equ	0xFE7
 52879                           postinc1	equ	0xFE6
 52880                           postdec1	equ	0xFE5
 52881                           plusw1	equ	0xFE3
 52882                           fsr1h	equ	0xFE2
 52883                           fsr1l	equ	0xFE1
 52884                           indf2	equ	0xFDF
 52885                           postinc2	equ	0xFDE
 52886                           postdec2	equ	0xFDD
 52887                           plusw2	equ	0xFDB
 52888                           fsr2h	equ	0xFDA
 52889                           fsr2l	equ	0xFD9
 52890                           status	equ	0xFD8
 52891                           
 52892 ;; *************** function _USBMSDInit *****************
 52893 ;; Defined at:
 52894 ;;		line 142 in file "usb_device_msd.c"
 52895 ;; Parameters:    Size  Location     Type
 52896 ;;		None
 52897 ;; Auto vars:     Size  Location     Type
 52898 ;;		None
 52899 ;; Return value:  Size  Location     Type
 52900 ;;                  1    wreg      void 
 52901 ;; Registers used:
 52902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52903 ;; Tracked objects:
 52904 ;;		On entry : 0/0
 52905 ;;		On exit  : 0/0
 52906 ;;		Unchanged: 0/0
 52907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52912 ;;Total ram usage:        3 bytes
 52913 ;; Hardware stack levels used:    1
 52914 ;; Hardware stack levels required when called:    1
 52915 ;; This function calls:
 52916 ;;		i2_ExternalFlash_MediaDetect
 52917 ;;		i2_ExternalFlash_MediaInitialize
 52918 ;;		i2_ResetSenseData
 52919 ;;		i2_USBTransferOnePacket
 52920 ;; This function is called by:
 52921 ;;		_APP_DeviceMSDInitialize
 52922 ;; This function uses a non-reentrant model
 52923 ;;
 52924                           
 52925                           	psect	text221
 52926  010CAE                     __ptext221:
 52927                           	opt stack 0
 52928  010CAE                     _USBMSDInit:
 52929                           	opt stack 13
 52930                           
 52931                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 52932                           
 52933                           ;incstack = 0
 52934  010CAE  0E00               	movlw	0
 52935  010CB0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52936  010CB2  0E40               	movlw	64
 52937  010CB4  6E02               	movwf	i2USBTransferOnePacket@data,c
 52938  010CB6  0E0D               	movlw	13
 52939  010CB8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52940  010CBA  0E40               	movlw	64
 52941  010CBC  6E04               	movwf	i2USBTransferOnePacket@len,c
 52942  010CBE  0E02               	movlw	2
 52943  010CC0  ECF0  F088         	call	i2_USBTransferOnePacket
 52944  010CC4  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52945  010CC8  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52946  010CCC  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 52947  010CD0  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 52948                           
 52949                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 52950  010CD4  0E00               	movlw	0
 52951  010CD6  0101               	movlb	1	; () banked
 52952  010CD8  6F63               	movwf	_MSD_State& (0+255),b
 52953                           
 52954                           ; BSR set to: 1
 52955                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 52956  010CDA  6962               	setf	_MSDCommandState& (0+255),b
 52957                           
 52958                           ; BSR set to: 1
 52959                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 52960  010CDC  0E00               	movlw	0
 52961  010CDE  6F61               	movwf	_MSDReadState& (0+255),b
 52962                           
 52963                           ; BSR set to: 1
 52964                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 52965  010CE0  0E00               	movlw	0
 52966  010CE2  6F60               	movwf	_MSDWriteState& (0+255),b
 52967                           
 52968                           ; BSR set to: 1
 52969                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 52970  010CE4  0E00               	movlw	0
 52971  010CE6  6F5C               	movwf	_MSDHostNoData& (0+255),b
 52972                           
 52973                           ; BSR set to: 1
 52974                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 52975  010CE8  0E00               	movlw	0
 52976  010CEA  0102               	movlb	2	; () banked
 52977  010CEC  6F2E               	movwf	_gblNumBLKS& (0+255),b
 52978  010CEE  0E00               	movlw	0
 52979  010CF0  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 52980  010CF2  0E00               	movlw	0
 52981  010CF4  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 52982  010CF6  0E00               	movlw	0
 52983  010CF8  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 52984                           
 52985                           ; BSR set to: 2
 52986                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 52987  010CFA  0E00               	movlw	0
 52988  010CFC  6F2A               	movwf	_gblBLKLen& (0+255),b
 52989  010CFE  0E00               	movlw	0
 52990  010D00  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 52991  010D02  0E00               	movlw	0
 52992  010D04  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 52993  010D06  0E00               	movlw	0
 52994  010D08  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 52995                           
 52996                           ; BSR set to: 2
 52997                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 52998  010D0A  0E01               	movlw	1
 52999  010D0C  0101               	movlb	1	; () banked
 53000  010D0E  6F5B               	movwf	_MSDCBWValid& (0+255),b
 53001                           
 53002                           ; BSR set to: 1
 53003                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 53004  010D10  0E00               	movlw	0
 53005  010D12  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 53006  010D14  0E00               	movlw	0
 53007  010D16  6F47               	movwf	_gblMediaPresent& (0+255),b
 53008                           
 53009                           ; BSR set to: 1
 53010                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 53011  010D18  0E00               	movlw	0
 53012  010D1A  0102               	movlb	2	; () banked
 53013  010D1C  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 53014  010D1E  D04A               	goto	i2l534
 53015  010D20                     
 53016                           ; BSR set to: 2
 53017                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 53018                           
 53019                           ; BSR set to: 2
 53020  010D20  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53021  010D22  0D01               	mullw	1
 53022  010D24  0E5D               	movlw	low _SoftDetach
 53023  010D26  24F3               	addwf	prodl,w,c
 53024  010D28  6ED9               	movwf	fsr2l,c
 53025  010D2A  0E01               	movlw	high _SoftDetach
 53026  010D2C  20F4               	addwfc	prodh,w,c
 53027  010D2E  6EDA               	movwf	fsr2h,c
 53028  010D30  0E00               	movlw	0
 53029  010D32  6EDF               	movwf	indf2,c
 53030                           
 53031                           ; BSR set to: 2
 53032                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 53033  010D34  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 53034  010D38  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 53035  010D3C  EE22  F092         	lfsr	2,_LUN+9
 53036  010D40  D801               	call	i2u984_48
 53037  010D42  D00A               	goto	i2u984_49
 53038  010D44                     i2u984_48:
 53039  010D44  0005               	push	
 53040  010D46  6EFA               	movwf	pclath,c
 53041  010D48  50DE               	movf	postinc2,w,c
 53042  010D4A  6EFD               	movwf	tosl,c
 53043  010D4C  50DE               	movf	postinc2,w,c
 53044  010D4E  6EFE               	movwf	tosh,c
 53045  010D50  50DE               	movf	postinc2,w,c
 53046  010D52  6EFF               	movwf	tosu,c
 53047  010D54  50FA               	movf	pclath,w,c
 53048  010D56  0012               	return		;indir
 53049  010D58                     i2u984_49:
 53050  010D58  0900               	iorlw	0
 53051  010D5A  B4D8               	btfsc	status,2,c
 53052  010D5C  D027               	goto	i2l537
 53053                           
 53054                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 53055  010D5E  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 53056  010D62  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 53057  010D66  D801               	call	i2u986_48
 53058  010D68  D00B               	goto	i2u986_49
 53059  010D6A                     i2u986_48:
 53060  010D6A  0005               	push	
 53061  010D6C  6EFA               	movwf	pclath,c
 53062  010D6E  0102               	movlb	2	; () banked
 53063  010D70  5189               	movf	_LUN& (0+255),w,b
 53064  010D72  6EFD               	movwf	tosl,c
 53065  010D74  518A               	movf	(_LUN+1)& (0+255),w,b
 53066  010D76  6EFE               	movwf	tosh,c
 53067  010D78  518B               	movf	(_LUN+2)& (0+255),w,b
 53068  010D7A  6EFF               	movwf	tosu,c
 53069  010D7C  50FA               	movf	pclath,w,c
 53070  010D7E  0012               	return		;indir
 53071  010D80                     i2u986_49:
 53072  010D80  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 53073  010D82  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 53074  010D84  B4D8               	btfsc	status,2,c
 53075  010D86  D012               	goto	i2l537
 53076                           
 53077                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 53078  010D88  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 53079  010D8C  0E01               	movlw	1
 53080  010D8E  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 53081  010D90  0E00               	movlw	0
 53082  010D92  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 53083  010D94  2A0C               	incf	??_USBMSDInit,f,c
 53084  010D96  D003               	goto	i2u988_44
 53085  010D98                     i2u988_45:
 53086  010D98  90D8               	bcf	status,0,c
 53087  010D9A  360D               	rlcf	??_USBMSDInit+1,f,c
 53088  010D9C  360E               	rlcf	??_USBMSDInit+2,f,c
 53089  010D9E                     i2u988_44:
 53090  010D9E  2E0C               	decfsz	??_USBMSDInit,f,c
 53091  010DA0  D7FB               	goto	i2u988_45
 53092  010DA2  500D               	movf	??_USBMSDInit+1,w,c
 53093  010DA4  0101               	movlb	1	; () banked
 53094  010DA6  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 53095  010DA8  500E               	movf	??_USBMSDInit+2,w,c
 53096  010DAA  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 53097  010DAC                     i2l537:
 53098                           
 53099                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 53100                           
 53101                           ; BSR set to: 1
 53102                           
 53103                           ; BSR set to: 1
 53104  010DAC  ECAC  F0A1         	call	i2_ResetSenseData	;wreg free
 53105  010DB0  0102               	movlb	2	; () banked
 53106  010DB2  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 53107  010DB4                     i2l534:
 53108                           
 53109                           ; BSR set to: 2
 53110                           
 53111                           ; BSR set to: 2
 53112  010DB4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53113  010DB6  A4D8               	btfss	status,2,c
 53114  010DB8  0012               	return	
 53115  010DBA  D7B2               	goto	i2l535
 53116  010DBC                     __end_of_USBMSDInit:
 53117                           	opt stack 0
 53118                           tosu	equ	0xFFF
 53119                           tosh	equ	0xFFE
 53120                           tosl	equ	0xFFD
 53121                           pclatu	equ	0xFFB
 53122                           pclath	equ	0xFFA
 53123                           tblptru	equ	0xFF8
 53124                           tblptrh	equ	0xFF7
 53125                           tblptrl	equ	0xFF6
 53126                           tablat	equ	0xFF5
 53127                           prodh	equ	0xFF4
 53128                           prodl	equ	0xFF3
 53129                           intcon	equ	0xFF2
 53130                           indf0	equ	0xFEF
 53131                           postinc0	equ	0xFEE
 53132                           fsr0h	equ	0xFEA
 53133                           fsr0l	equ	0xFE9
 53134                           wreg	equ	0xFE8
 53135                           indf1	equ	0xFE7
 53136                           postinc1	equ	0xFE6
 53137                           postdec1	equ	0xFE5
 53138                           plusw1	equ	0xFE3
 53139                           fsr1h	equ	0xFE2
 53140                           fsr1l	equ	0xFE1
 53141                           indf2	equ	0xFDF
 53142                           postinc2	equ	0xFDE
 53143                           postdec2	equ	0xFDD
 53144                           plusw2	equ	0xFDB
 53145                           fsr2h	equ	0xFDA
 53146                           fsr2l	equ	0xFD9
 53147                           status	equ	0xFD8
 53148                           
 53149 ;; *************** function i2_ResetSenseData *****************
 53150 ;; Defined at:
 53151 ;;		line 1373 in file "usb_device_msd.c"
 53152 ;; Parameters:    Size  Location     Type
 53153 ;;		None
 53154 ;; Auto vars:     Size  Location     Type
 53155 ;;		None
 53156 ;; Return value:  Size  Location     Type
 53157 ;;                  1    wreg      void 
 53158 ;; Registers used:
 53159 ;;		wreg, status,2
 53160 ;; Tracked objects:
 53161 ;;		On entry : 0/0
 53162 ;;		On exit  : 0/0
 53163 ;;		Unchanged: 0/0
 53164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53169 ;;Total ram usage:        0 bytes
 53170 ;; Hardware stack levels used:    1
 53171 ;; This function calls:
 53172 ;;		Nothing
 53173 ;; This function is called by:
 53174 ;;		_USBMSDInit
 53175 ;; This function uses a non-reentrant model
 53176 ;;
 53177                           
 53178                           	psect	text222
 53179  014358                     __ptext222:
 53180                           	opt stack 0
 53181  014358                     i2_ResetSenseData:
 53182                           	opt stack 13
 53183                           
 53184                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 53185                           
 53186                           ; BSR set to: 2
 53187                           ;incstack = 0
 53188  014358  0101               	movlb	1	; () banked
 53189  01435A  9100               	bcf	_gblSenseData& (0+255),0,b
 53190  01435C  9300               	bcf	_gblSenseData& (0+255),1,b
 53191  01435E  9500               	bcf	_gblSenseData& (0+255),2,b
 53192  014360  9700               	bcf	_gblSenseData& (0+255),3,b
 53193  014362  8900               	bsf	_gblSenseData& (0+255),4,b
 53194  014364  8B00               	bsf	_gblSenseData& (0+255),5,b
 53195  014366  8D00               	bsf	_gblSenseData& (0+255),6,b
 53196                           
 53197                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 53198  014368  9F00               	bcf	_gblSenseData& (0+255),7,b
 53199                           
 53200                           ; BSR set to: 1
 53201                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 53202  01436A  0E00               	movlw	0
 53203  01436C  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 53204                           
 53205                           ; BSR set to: 1
 53206                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 53207  01436E  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 53208  014370  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 53209  014372  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 53210  014374  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 53211                           
 53212                           ; BSR set to: 1
 53213                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 53214  014376  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 53215                           
 53216                           ; BSR set to: 1
 53217                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 53218  014378  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 53219                           
 53220                           ; BSR set to: 1
 53221                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 53222  01437A  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 53223                           
 53224                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 53225  01437C  0E00               	movlw	0
 53226  01437E  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 53227                           
 53228                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 53229  014380  0E00               	movlw	0
 53230  014382  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 53231                           
 53232                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 53233  014384  0E00               	movlw	0
 53234  014386  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 53235                           
 53236                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 53237  014388  0E00               	movlw	0
 53238  01438A  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 53239                           
 53240                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 53241  01438C  0E0A               	movlw	10
 53242  01438E  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 53243                           
 53244                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 53245  014390  0E00               	movlw	0
 53246  014392  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 53247  014394  0E00               	movlw	0
 53248  014396  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 53249  014398  0E00               	movlw	0
 53250  01439A  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 53251  01439C  0E00               	movlw	0
 53252  01439E  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 53253                           
 53254                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 53255  0143A0  0E00               	movlw	0
 53256  0143A2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 53257                           
 53258                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 53259  0143A4  0E00               	movlw	0
 53260  0143A6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 53261                           
 53262                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 53263  0143A8  0E00               	movlw	0
 53264  0143AA  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 53265                           
 53266                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 53267  0143AC  0E00               	movlw	0
 53268  0143AE  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 53269                           
 53270                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 53271  0143B0  0E00               	movlw	0
 53272  0143B2  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 53273                           
 53274                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 53275  0143B4  0E00               	movlw	0
 53276  0143B6  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 53277                           
 53278                           ; BSR set to: 1
 53279  0143B8  0012               	return		;funcret
 53280  0143BA                     __end_ofi2_ResetSenseData:
 53281                           	opt stack 0
 53282                           tosu	equ	0xFFF
 53283                           tosh	equ	0xFFE
 53284                           tosl	equ	0xFFD
 53285                           pclatu	equ	0xFFB
 53286                           pclath	equ	0xFFA
 53287                           tblptru	equ	0xFF8
 53288                           tblptrh	equ	0xFF7
 53289                           tblptrl	equ	0xFF6
 53290                           tablat	equ	0xFF5
 53291                           prodh	equ	0xFF4
 53292                           prodl	equ	0xFF3
 53293                           intcon	equ	0xFF2
 53294                           indf0	equ	0xFEF
 53295                           postinc0	equ	0xFEE
 53296                           fsr0h	equ	0xFEA
 53297                           fsr0l	equ	0xFE9
 53298                           wreg	equ	0xFE8
 53299                           indf1	equ	0xFE7
 53300                           postinc1	equ	0xFE6
 53301                           postdec1	equ	0xFE5
 53302                           plusw1	equ	0xFE3
 53303                           fsr1h	equ	0xFE2
 53304                           fsr1l	equ	0xFE1
 53305                           indf2	equ	0xFDF
 53306                           postinc2	equ	0xFDE
 53307                           postdec2	equ	0xFDD
 53308                           plusw2	equ	0xFDB
 53309                           fsr2h	equ	0xFDA
 53310                           fsr2l	equ	0xFD9
 53311                           status	equ	0xFD8
 53312                           
 53313 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 53314 ;; Defined at:
 53315 ;;		line 10 in file "external_flash.c"
 53316 ;; Parameters:    Size  Location     Type
 53317 ;;  config          2    0[COMRAM] PTR void 
 53318 ;;		 -> NULL(0), 
 53319 ;; Auto vars:     Size  Location     Type
 53320 ;;		None
 53321 ;; Return value:  Size  Location     Type
 53322 ;;                  2    0[COMRAM] PTR struct .
 53323 ;; Registers used:
 53324 ;;		wreg, status,2, status,0
 53325 ;; Tracked objects:
 53326 ;;		On entry : 0/0
 53327 ;;		On exit  : 0/0
 53328 ;;		Unchanged: 0/0
 53329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53334 ;;Total ram usage:        2 bytes
 53335 ;; Hardware stack levels used:    1
 53336 ;; This function calls:
 53337 ;;		Nothing
 53338 ;; This function is called by:
 53339 ;;		_USBMSDInit
 53340 ;;		_MSDProcessCommand
 53341 ;; This function uses a non-reentrant model
 53342 ;;
 53343                           
 53344                           	psect	text223
 53345  015832                     __ptext223:
 53346                           	opt stack 0
 53347  015832                     i2_ExternalFlash_MediaInitialize:
 53348                           	opt stack 13
 53349                           
 53350                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 53351                           
 53352                           ; BSR set to: 1
 53353                           ;incstack = 0
 53354  015832  0102               	movlb	2	; () banked
 53355  015834  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 53356                           
 53357                           ; BSR set to: 2
 53358                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 53359  015836  0E02               	movlw	2
 53360  015838  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 53361  01583A  0E00               	movlw	0
 53362  01583C  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 53363                           
 53364                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 53365  01583E  0E00               	movlw	0
 53366  015840  6F84               	movwf	_mediaInformation& (0+255),b
 53367                           
 53368                           ; BSR set to: 2
 53369                           ;external_flash.c: 15: return &mediaInformation;
 53370  015842  0E84               	movlw	low _mediaInformation
 53371  015844  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 53372  015846  0E02               	movlw	high _mediaInformation
 53373  015848  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 53374  01584A  0012               	return	
 53375  01584C                     __end_ofi2_ExternalFlash_MediaInitialize:
 53376                           	opt stack 0
 53377                           tosu	equ	0xFFF
 53378                           tosh	equ	0xFFE
 53379                           tosl	equ	0xFFD
 53380                           pclatu	equ	0xFFB
 53381                           pclath	equ	0xFFA
 53382                           tblptru	equ	0xFF8
 53383                           tblptrh	equ	0xFF7
 53384                           tblptrl	equ	0xFF6
 53385                           tablat	equ	0xFF5
 53386                           prodh	equ	0xFF4
 53387                           prodl	equ	0xFF3
 53388                           intcon	equ	0xFF2
 53389                           indf0	equ	0xFEF
 53390                           postinc0	equ	0xFEE
 53391                           fsr0h	equ	0xFEA
 53392                           fsr0l	equ	0xFE9
 53393                           wreg	equ	0xFE8
 53394                           indf1	equ	0xFE7
 53395                           postinc1	equ	0xFE6
 53396                           postdec1	equ	0xFE5
 53397                           plusw1	equ	0xFE3
 53398                           fsr1h	equ	0xFE2
 53399                           fsr1l	equ	0xFE1
 53400                           indf2	equ	0xFDF
 53401                           postinc2	equ	0xFDE
 53402                           postdec2	equ	0xFDD
 53403                           plusw2	equ	0xFDB
 53404                           fsr2h	equ	0xFDA
 53405                           fsr2l	equ	0xFD9
 53406                           status	equ	0xFD8
 53407                           
 53408 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 53409 ;; Defined at:
 53410 ;;		line 29 in file "external_flash.c"
 53411 ;; Parameters:    Size  Location     Type
 53412 ;;  config          2    0[COMRAM] PTR void 
 53413 ;;		 -> NULL(0), 
 53414 ;; Auto vars:     Size  Location     Type
 53415 ;;		None
 53416 ;; Return value:  Size  Location     Type
 53417 ;;                  1    wreg      unsigned char 
 53418 ;; Registers used:
 53419 ;;		wreg
 53420 ;; Tracked objects:
 53421 ;;		On entry : 0/0
 53422 ;;		On exit  : 0/0
 53423 ;;		Unchanged: 0/0
 53424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53429 ;;Total ram usage:        2 bytes
 53430 ;; Hardware stack levels used:    1
 53431 ;; This function calls:
 53432 ;;		Nothing
 53433 ;; This function is called by:
 53434 ;;		_USBMSDInit
 53435 ;;		_MSDProcessCommand
 53436 ;; This function uses a non-reentrant model
 53437 ;;
 53438                           
 53439                           	psect	text224
 53440  015980                     __ptext224:
 53441                           	opt stack 0
 53442  015980                     i2_ExternalFlash_MediaDetect:
 53443                           	opt stack 13
 53444                           
 53445                           ;external_flash.c: 31: return 1;
 53446                           
 53447                           ; BSR set to: 2
 53448                           ;incstack = 0
 53449  015980  0E01               	movlw	1
 53450  015982  0012               	return	
 53451  015984                     __end_ofi2_ExternalFlash_MediaDetect:
 53452                           	opt stack 0
 53453                           tosu	equ	0xFFF
 53454                           tosh	equ	0xFFE
 53455                           tosl	equ	0xFFD
 53456                           pclatu	equ	0xFFB
 53457                           pclath	equ	0xFFA
 53458                           tblptru	equ	0xFF8
 53459                           tblptrh	equ	0xFF7
 53460                           tblptrl	equ	0xFF6
 53461                           tablat	equ	0xFF5
 53462                           prodh	equ	0xFF4
 53463                           prodl	equ	0xFF3
 53464                           intcon	equ	0xFF2
 53465                           indf0	equ	0xFEF
 53466                           postinc0	equ	0xFEE
 53467                           fsr0h	equ	0xFEA
 53468                           fsr0l	equ	0xFE9
 53469                           wreg	equ	0xFE8
 53470                           indf1	equ	0xFE7
 53471                           postinc1	equ	0xFE6
 53472                           postdec1	equ	0xFE5
 53473                           plusw1	equ	0xFE3
 53474                           fsr1h	equ	0xFE2
 53475                           fsr1l	equ	0xFE1
 53476                           indf2	equ	0xFDF
 53477                           postinc2	equ	0xFDE
 53478                           postdec2	equ	0xFDD
 53479                           plusw2	equ	0xFDB
 53480                           fsr2h	equ	0xFDA
 53481                           fsr2l	equ	0xFD9
 53482                           status	equ	0xFD8
 53483                           
 53484 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 53485 ;; Defined at:
 53486 ;;		line 46 in file "app_device_custom_hid.c"
 53487 ;; Parameters:    Size  Location     Type
 53488 ;;		None
 53489 ;; Auto vars:     Size  Location     Type
 53490 ;;		None
 53491 ;; Return value:  Size  Location     Type
 53492 ;;                  1    wreg      void 
 53493 ;; Registers used:
 53494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53495 ;; Tracked objects:
 53496 ;;		On entry : 0/0
 53497 ;;		On exit  : 0/0
 53498 ;;		Unchanged: 0/0
 53499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53504 ;;Total ram usage:        0 bytes
 53505 ;; Hardware stack levels used:    1
 53506 ;; Hardware stack levels required when called:    2
 53507 ;; This function calls:
 53508 ;;		_USBEnableEndpoint
 53509 ;;		i2_USBTransferOnePacket
 53510 ;; This function is called by:
 53511 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53512 ;; This function uses a non-reentrant model
 53513 ;;
 53514                           
 53515                           	psect	text225
 53516  0152E2                     __ptext225:
 53517                           	opt stack 0
 53518  0152E2                     _APP_DeviceCustomHIDInitialize:
 53519                           	opt stack 13
 53520                           
 53521                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 53522                           
 53523                           ;incstack = 0
 53524  0152E2  0E00               	movlw	0
 53525  0152E4  0101               	movlb	1	; () banked
 53526  0152E6  6F41               	movwf	_USBInHandle& (0+255),b
 53527  0152E8  0E00               	movlw	0
 53528  0152EA  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 53529                           
 53530                           ; BSR set to: 1
 53531                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 53532  0152EC  0E1E               	movlw	30
 53533  0152EE  6E09               	movwf	USBEnableEndpoint@options,c
 53534  0152F0  0E01               	movlw	1
 53535  0152F2  EC5C  F0A8         	call	_USBEnableEndpoint
 53536                           
 53537                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 53538  0152F6  0E00               	movlw	0
 53539  0152F8  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53540  0152FA  0E78               	movlw	low _ReceivedDataBuffer
 53541  0152FC  6E02               	movwf	i2USBTransferOnePacket@data,c
 53542  0152FE  0E03               	movlw	high _ReceivedDataBuffer
 53543  015300  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53544  015302  0E40               	movlw	64
 53545  015304  6E04               	movwf	i2USBTransferOnePacket@len,c
 53546  015306  0E01               	movlw	1
 53547  015308  ECF0  F088         	call	i2_USBTransferOnePacket
 53548  01530C  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 53549  015310  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 53550  015314  0012               	return		;funcret
 53551  015316                     __end_of_APP_DeviceCustomHIDInitialize:
 53552                           	opt stack 0
 53553                           tosu	equ	0xFFF
 53554                           tosh	equ	0xFFE
 53555                           tosl	equ	0xFFD
 53556                           pclatu	equ	0xFFB
 53557                           pclath	equ	0xFFA
 53558                           tblptru	equ	0xFF8
 53559                           tblptrh	equ	0xFF7
 53560                           tblptrl	equ	0xFF6
 53561                           tablat	equ	0xFF5
 53562                           prodh	equ	0xFF4
 53563                           prodl	equ	0xFF3
 53564                           intcon	equ	0xFF2
 53565                           indf0	equ	0xFEF
 53566                           postinc0	equ	0xFEE
 53567                           fsr0h	equ	0xFEA
 53568                           fsr0l	equ	0xFE9
 53569                           wreg	equ	0xFE8
 53570                           indf1	equ	0xFE7
 53571                           postinc1	equ	0xFE6
 53572                           postdec1	equ	0xFE5
 53573                           plusw1	equ	0xFE3
 53574                           fsr1h	equ	0xFE2
 53575                           fsr1l	equ	0xFE1
 53576                           indf2	equ	0xFDF
 53577                           postinc2	equ	0xFDE
 53578                           postdec2	equ	0xFDD
 53579                           plusw2	equ	0xFDB
 53580                           fsr2h	equ	0xFDA
 53581                           fsr2l	equ	0xFD9
 53582                           status	equ	0xFD8
 53583                           
 53584 ;; *************** function i2_USBTransferOnePacket *****************
 53585 ;; Defined at:
 53586 ;;		line 995 in file "usb_device.c"
 53587 ;; Parameters:    Size  Location     Type
 53588 ;;  ep              1    wreg     unsigned char 
 53589 ;;  dir             1    0[COMRAM] unsigned char 
 53590 ;;  data            2    1[COMRAM] PTR unsigned char 
 53591 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 53592 ;;		 -> msd_cbw(31), NULL(0), 
 53593 ;;  len             1    3[COMRAM] unsigned char 
 53594 ;; Auto vars:     Size  Location     Type
 53595 ;;  ep              1    8[COMRAM] unsigned char 
 53596 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 53597 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53598 ;; Return value:  Size  Location     Type
 53599 ;;                  2    0[COMRAM] PTR void 
 53600 ;; Registers used:
 53601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53602 ;; Tracked objects:
 53603 ;;		On entry : 0/0
 53604 ;;		On exit  : 0/0
 53605 ;;		Unchanged: 0/0
 53606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53610 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53611 ;;Total ram usage:       11 bytes
 53612 ;; Hardware stack levels used:    1
 53613 ;; This function calls:
 53614 ;;		Nothing
 53615 ;; This function is called by:
 53616 ;;		_USBMSDInit
 53617 ;;		_USBCheckMSDRequest
 53618 ;;		_MSDTransferTerminated
 53619 ;;		_APP_DeviceCustomHIDInitialize
 53620 ;; This function uses a non-reentrant model
 53621 ;;
 53622                           
 53623                           	psect	text226
 53624  0111E0                     __ptext226:
 53625                           	opt stack 0
 53626  0111E0                     i2_USBTransferOnePacket:
 53627                           	opt stack 14
 53628                           
 53629                           ;incstack = 0
 53630                           ;i2USBTransferOnePacket@ep stored from wreg
 53631  0111E0  6E09               	movwf	i2USBTransferOnePacket@ep,c
 53632                           
 53633                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 53634  0111E2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53635  0111E4  B4D8               	btfsc	status,2,c
 53636  0111E6  D007               	goto	i2l184
 53637                           
 53638                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 53639  0111E8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53640  0111EA  0D02               	mullw	2
 53641  0111EC  0E1B               	movlw	low _pBDTEntryIn
 53642  0111EE  24F3               	addwf	prodl,w,c
 53643  0111F0  6ED9               	movwf	fsr2l,c
 53644  0111F2  0E01               	movlw	high _pBDTEntryIn
 53645  0111F4  D006               	goto	L85
 53646  0111F6                     i2l184:
 53647                           
 53648                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 53649  0111F6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53650  0111F8  0D02               	mullw	2
 53651  0111FA  0E21               	movlw	low _pBDTEntryOut
 53652  0111FC  24F3               	addwf	prodl,w,c
 53653  0111FE  6ED9               	movwf	fsr2l,c
 53654  011200  0E01               	movlw	high _pBDTEntryOut
 53655  011202                     L85:
 53656  011202  20F4               	addwfc	prodh,w,c
 53657  011204  6EDA               	movwf	fsr2h,c
 53658  011206  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 53659  01120A  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 53660                           
 53661                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 53662  01120E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53663  011210  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 53664  011212  A4D8               	btfss	status,2,c
 53665  011214  D005               	goto	i2l186
 53666                           
 53667                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 53668  011216  0E00               	movlw	0
 53669  011218  6E01               	movwf	?i2_USBTransferOnePacket,c
 53670  01121A  0E00               	movlw	0
 53671  01121C  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 53672  01121E  0012               	return	
 53673  011220                     i2l186:
 53674                           
 53675                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 53676  011220  EE20 F002          	lfsr	2,2
 53677  011224  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53678  011226  26D9               	addwf	fsr2l,f,c
 53679  011228  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53680  01122A  22DA               	addwfc	fsr2h,f,c
 53681  01122C  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 53682  011230  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 53683                           
 53684                           ;usb_device.c: 1030: handle->CNT = len;
 53685  011234  EE20 F001          	lfsr	2,1
 53686  011238  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53687  01123A  26D9               	addwf	fsr2l,f,c
 53688  01123C  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53689  01123E  22DA               	addwfc	fsr2h,f,c
 53690  011240  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 53691                           
 53692                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 53693  011244  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53694  011248  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53695  01124C  0E40               	movlw	64
 53696  01124E  16DF               	andwf	indf2,f,c
 53697                           
 53698                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 53699  011250  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53700  011254  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53701  011258  0E00               	movlw	0
 53702  01125A  86DB               	bsf	plusw2,3,c
 53703                           
 53704                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 53705  01125C  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53706  011260  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53707  011264  0E00               	movlw	0
 53708  011266  8EDB               	bsf	plusw2,7,c
 53709                           
 53710                           ;usb_device.c: 1036: if(dir != 0)
 53711  011268  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53712  01126A  B4D8               	btfsc	status,2,c
 53713  01126C  D018               	goto	i2l188
 53714                           
 53715                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 53716  01126E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53717  011270  0D02               	mullw	2
 53718  011272  0E1B               	movlw	low _pBDTEntryIn
 53719  011274  24F3               	addwf	prodl,w,c
 53720  011276  6ED9               	movwf	fsr2l,c
 53721  011278  0E01               	movlw	high _pBDTEntryIn
 53722  01127A  20F4               	addwfc	prodh,w,c
 53723  01127C  6EDA               	movwf	fsr2h,c
 53724  01127E  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53725  011282  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53726  011286  0E04               	movlw	4
 53727  011288  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53728  01128A  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53729  01128C  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53730  01128E  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53731  011290  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53732  011292  0D02               	mullw	2
 53733  011294  0E1B               	movlw	low _pBDTEntryIn
 53734  011296  24F3               	addwf	prodl,w,c
 53735  011298  6ED9               	movwf	fsr2l,c
 53736  01129A  0E01               	movlw	high _pBDTEntryIn
 53737  01129C  D017               	goto	L86
 53738  01129E                     i2l188:
 53739                           
 53740                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 53741  01129E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53742  0112A0  0D02               	mullw	2
 53743  0112A2  0E21               	movlw	low _pBDTEntryOut
 53744  0112A4  24F3               	addwf	prodl,w,c
 53745  0112A6  6ED9               	movwf	fsr2l,c
 53746  0112A8  0E01               	movlw	high _pBDTEntryOut
 53747  0112AA  20F4               	addwfc	prodh,w,c
 53748  0112AC  6EDA               	movwf	fsr2h,c
 53749  0112AE  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53750  0112B2  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53751  0112B6  0E04               	movlw	4
 53752  0112B8  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53753  0112BA  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53754  0112BC  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53755  0112BE  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53756  0112C0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53757  0112C2  0D02               	mullw	2
 53758  0112C4  0E21               	movlw	low _pBDTEntryOut
 53759  0112C6  24F3               	addwf	prodl,w,c
 53760  0112C8  6ED9               	movwf	fsr2l,c
 53761  0112CA  0E01               	movlw	high _pBDTEntryOut
 53762  0112CC                     L86:
 53763  0112CC  20F4               	addwfc	prodh,w,c
 53764  0112CE  6EDA               	movwf	fsr2h,c
 53765  0112D0  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 53766  0112D4  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 53767                           
 53768                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 53769  0112D8  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 53770  0112DC  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 53771  0112E0  0012               	return	
 53772  0112E2                     __end_ofi2_USBTransferOnePacket:
 53773                           	opt stack 0
 53774                           tosu	equ	0xFFF
 53775                           tosh	equ	0xFFE
 53776                           tosl	equ	0xFFD
 53777                           pclatu	equ	0xFFB
 53778                           pclath	equ	0xFFA
 53779                           tblptru	equ	0xFF8
 53780                           tblptrh	equ	0xFF7
 53781                           tblptrl	equ	0xFF6
 53782                           tablat	equ	0xFF5
 53783                           prodh	equ	0xFF4
 53784                           prodl	equ	0xFF3
 53785                           intcon	equ	0xFF2
 53786                           indf0	equ	0xFEF
 53787                           postinc0	equ	0xFEE
 53788                           fsr0h	equ	0xFEA
 53789                           fsr0l	equ	0xFE9
 53790                           wreg	equ	0xFE8
 53791                           indf1	equ	0xFE7
 53792                           postinc1	equ	0xFE6
 53793                           postdec1	equ	0xFE5
 53794                           plusw1	equ	0xFE3
 53795                           fsr1h	equ	0xFE2
 53796                           fsr1l	equ	0xFE1
 53797                           indf2	equ	0xFDF
 53798                           postinc2	equ	0xFDE
 53799                           postdec2	equ	0xFDD
 53800                           plusw2	equ	0xFDB
 53801                           fsr2h	equ	0xFDA
 53802                           fsr2l	equ	0xFD9
 53803                           status	equ	0xFD8
 53804                           
 53805 ;; *************** function _USBEnableEndpoint *****************
 53806 ;; Defined at:
 53807 ;;		line 878 in file "usb_device.c"
 53808 ;; Parameters:    Size  Location     Type
 53809 ;;  ep              1    wreg     unsigned char 
 53810 ;;  options         1    8[COMRAM] unsigned char 
 53811 ;; Auto vars:     Size  Location     Type
 53812 ;;  ep              1   11[COMRAM] unsigned char 
 53813 ;;  p               2    9[COMRAM] PTR unsigned char 
 53814 ;;		 -> UEP0(1), 
 53815 ;; Return value:  Size  Location     Type
 53816 ;;                  1    wreg      void 
 53817 ;; Registers used:
 53818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53819 ;; Tracked objects:
 53820 ;;		On entry : 0/0
 53821 ;;		On exit  : 0/0
 53822 ;;		Unchanged: 0/0
 53823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53824 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53825 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53828 ;;Total ram usage:        4 bytes
 53829 ;; Hardware stack levels used:    1
 53830 ;; Hardware stack levels required when called:    1
 53831 ;; This function calls:
 53832 ;;		_USBConfigureEndpoint
 53833 ;; This function is called by:
 53834 ;;		_APP_DeviceCustomHIDInitialize
 53835 ;;		_APP_DeviceMSDInitialize
 53836 ;; This function uses a non-reentrant model
 53837 ;;
 53838                           
 53839                           	psect	text227
 53840  0150B8                     __ptext227:
 53841                           	opt stack 0
 53842  0150B8                     _USBEnableEndpoint:
 53843                           	opt stack 13
 53844                           
 53845                           ;incstack = 0
 53846                           ;USBEnableEndpoint@ep stored from wreg
 53847  0150B8  6E0C               	movwf	USBEnableEndpoint@ep,c
 53848                           
 53849                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 53850  0150BA  A409               	btfss	USBEnableEndpoint@options,2,c
 53851  0150BC  D005               	goto	i2l179
 53852                           
 53853                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 53854  0150BE  0E00               	movlw	0
 53855  0150C0  6E01               	movwf	USBConfigureEndpoint@direction,c
 53856  0150C2  500C               	movf	USBEnableEndpoint@ep,w,c
 53857  0150C4  EC72  F09B         	call	_USBConfigureEndpoint
 53858  0150C8                     i2l179:
 53859                           
 53860                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 53861  0150C8  A209               	btfss	USBEnableEndpoint@options,1,c
 53862  0150CA  D005               	goto	i2l180
 53863                           
 53864                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 53865  0150CC  0E01               	movlw	1
 53866  0150CE  6E01               	movwf	USBConfigureEndpoint@direction,c
 53867  0150D0  500C               	movf	USBEnableEndpoint@ep,w,c
 53868  0150D2  EC72  F09B         	call	_USBConfigureEndpoint
 53869  0150D6                     i2l180:
 53870                           
 53871                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 53872  0150D6  500C               	movf	USBEnableEndpoint@ep,w,c
 53873  0150D8  0D01               	mullw	1
 53874  0150DA  0E26               	movlw	38
 53875  0150DC  24F3               	addwf	prodl,w,c
 53876  0150DE  6E0A               	movwf	USBEnableEndpoint@p,c
 53877  0150E0  0E0F               	movlw	15
 53878  0150E2  20F4               	addwfc	prodh,w,c
 53879  0150E4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 53880                           
 53881                           ;usb_device.c: 901: *p = options;
 53882  0150E6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 53883  0150EA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 53884  0150EE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 53885  0150F2  0012               	return		;funcret
 53886  0150F4                     __end_of_USBEnableEndpoint:
 53887                           	opt stack 0
 53888                           tosu	equ	0xFFF
 53889                           tosh	equ	0xFFE
 53890                           tosl	equ	0xFFD
 53891                           pclatu	equ	0xFFB
 53892                           pclath	equ	0xFFA
 53893                           tblptru	equ	0xFF8
 53894                           tblptrh	equ	0xFF7
 53895                           tblptrl	equ	0xFF6
 53896                           tablat	equ	0xFF5
 53897                           prodh	equ	0xFF4
 53898                           prodl	equ	0xFF3
 53899                           intcon	equ	0xFF2
 53900                           indf0	equ	0xFEF
 53901                           postinc0	equ	0xFEE
 53902                           fsr0h	equ	0xFEA
 53903                           fsr0l	equ	0xFE9
 53904                           wreg	equ	0xFE8
 53905                           indf1	equ	0xFE7
 53906                           postinc1	equ	0xFE6
 53907                           postdec1	equ	0xFE5
 53908                           plusw1	equ	0xFE3
 53909                           fsr1h	equ	0xFE2
 53910                           fsr1l	equ	0xFE1
 53911                           indf2	equ	0xFDF
 53912                           postinc2	equ	0xFDE
 53913                           postdec2	equ	0xFDD
 53914                           plusw2	equ	0xFDB
 53915                           fsr2h	equ	0xFDA
 53916                           fsr2l	equ	0xFD9
 53917                           status	equ	0xFD8
 53918                           
 53919 ;; *************** function _USBConfigureEndpoint *****************
 53920 ;; Defined at:
 53921 ;;		line 1545 in file "usb_device.c"
 53922 ;; Parameters:    Size  Location     Type
 53923 ;;  EPNum           1    wreg     unsigned char 
 53924 ;;  direction       1    0[COMRAM] unsigned char 
 53925 ;; Auto vars:     Size  Location     Type
 53926 ;;  EPNum           1    5[COMRAM] unsigned char 
 53927 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 53928 ;;		 -> BDT(48), 
 53929 ;; Return value:  Size  Location     Type
 53930 ;;                  1    wreg      void 
 53931 ;; Registers used:
 53932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53933 ;; Tracked objects:
 53934 ;;		On entry : 0/0
 53935 ;;		On exit  : 0/0
 53936 ;;		Unchanged: 0/0
 53937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53938 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53939 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53940 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53942 ;;Total ram usage:        8 bytes
 53943 ;; Hardware stack levels used:    1
 53944 ;; This function calls:
 53945 ;;		Nothing
 53946 ;; This function is called by:
 53947 ;;		_USBEnableEndpoint
 53948 ;; This function uses a non-reentrant model
 53949 ;;
 53950                           
 53951                           	psect	text228
 53952  0136E4                     __ptext228:
 53953                           	opt stack 0
 53954  0136E4                     _USBConfigureEndpoint:
 53955                           	opt stack 13
 53956                           
 53957                           ;incstack = 0
 53958                           ;USBConfigureEndpoint@EPNum stored from wreg
 53959  0136E4  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 53960                           
 53961                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 53962  0136E6  0E00               	movlw	0
 53963  0136E8  6E07               	movwf	USBConfigureEndpoint@handle,c
 53964  0136EA  0E0D               	movlw	13
 53965  0136EC  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 53966                           
 53967                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 53968  0136EE  5001               	movf	USBConfigureEndpoint@direction,w,c
 53969  0136F0  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 53970  0136F2  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 53971  0136F4  90D8               	bcf	status,0,c
 53972  0136F6  3602               	rlcf	??_USBConfigureEndpoint,f,c
 53973  0136F8  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 53974  0136FA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53975  0136FC  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 53976  0136FE  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 53977  013700  90D8               	bcf	status,0,c
 53978  013702  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53979  013704  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53980  013706  90D8               	bcf	status,0,c
 53981  013708  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53982  01370A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53983  01370C  5002               	movf	??_USBConfigureEndpoint,w,c
 53984  01370E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 53985  013710  5003               	movf	??_USBConfigureEndpoint+1,w,c
 53986  013712  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 53987  013714  90D8               	bcf	status,0,c
 53988  013716  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53989  013718  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53990  01371A  90D8               	bcf	status,0,c
 53991  01371C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53992  01371E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53993  013720  5004               	movf	??_USBConfigureEndpoint+2,w,c
 53994  013722  2607               	addwf	USBConfigureEndpoint@handle,f,c
 53995  013724  5005               	movf	??_USBConfigureEndpoint+3,w,c
 53996  013726  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 53997                           
 53998                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 53999  013728  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54000  01372C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54001  013730  9EDF               	bcf	indf2,7,c
 54002                           
 54003                           ;usb_device.c: 1559: if(direction == 0)
 54004  013732  5001               	movf	USBConfigureEndpoint@direction,w,c
 54005  013734  A4D8               	btfss	status,2,c
 54006  013736  D007               	goto	i2l226
 54007                           
 54008                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 54009  013738  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54010  01373A  0D02               	mullw	2
 54011  01373C  0E21               	movlw	low _pBDTEntryOut
 54012  01373E  24F3               	addwf	prodl,w,c
 54013  013740  6ED9               	movwf	fsr2l,c
 54014  013742  0E01               	movlw	high _pBDTEntryOut
 54015  013744  D006               	goto	L87
 54016  013746                     i2l226:
 54017                           
 54018                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 54019  013746  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54020  013748  0D02               	mullw	2
 54021  01374A  0E1B               	movlw	low _pBDTEntryIn
 54022  01374C  24F3               	addwf	prodl,w,c
 54023  01374E  6ED9               	movwf	fsr2l,c
 54024  013750  0E01               	movlw	high _pBDTEntryIn
 54025  013752                     L87:
 54026  013752  20F4               	addwfc	prodh,w,c
 54027  013754  6EDA               	movwf	fsr2h,c
 54028  013756  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 54029  01375A  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 54030                           
 54031                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 54032  01375E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54033  013762  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54034  013766  9CDF               	bcf	indf2,6,c
 54035                           
 54036                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 54037  013768  EE20 F004          	lfsr	2,4
 54038  01376C  5007               	movf	USBConfigureEndpoint@handle,w,c
 54039  01376E  26D9               	addwf	fsr2l,f,c
 54040  013770  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 54041  013772  22DA               	addwfc	fsr2h,f,c
 54042  013774  8CDF               	bsf	indf2,6,c
 54043  013776  0012               	return		;funcret
 54044  013778                     __end_of_USBConfigureEndpoint:
 54045                           	opt stack 0
 54046                           tosu	equ	0xFFF
 54047                           tosh	equ	0xFFE
 54048                           tosl	equ	0xFFD
 54049                           pclatu	equ	0xFFB
 54050                           pclath	equ	0xFFA
 54051                           tblptru	equ	0xFF8
 54052                           tblptrh	equ	0xFF7
 54053                           tblptrl	equ	0xFF6
 54054                           tablat	equ	0xFF5
 54055                           prodh	equ	0xFF4
 54056                           prodl	equ	0xFF3
 54057                           intcon	equ	0xFF2
 54058                           indf0	equ	0xFEF
 54059                           postinc0	equ	0xFEE
 54060                           fsr0h	equ	0xFEA
 54061                           fsr0l	equ	0xFE9
 54062                           wreg	equ	0xFE8
 54063                           indf1	equ	0xFE7
 54064                           postinc1	equ	0xFE6
 54065                           postdec1	equ	0xFE5
 54066                           plusw1	equ	0xFE3
 54067                           fsr1h	equ	0xFE2
 54068                           fsr1l	equ	0xFE1
 54069                           indf2	equ	0xFDF
 54070                           postinc2	equ	0xFDE
 54071                           postdec2	equ	0xFDD
 54072                           plusw2	equ	0xFDB
 54073                           fsr2h	equ	0xFDA
 54074                           fsr2l	equ	0xFD9
 54075                           status	equ	0xFD8
 54076                           
 54077 ;; *************** function _USBCtrlTrfOutHandler *****************
 54078 ;; Defined at:
 54079 ;;		line 2540 in file "usb_device.c"
 54080 ;; Parameters:    Size  Location     Type
 54081 ;;		None
 54082 ;; Auto vars:     Size  Location     Type
 54083 ;;		None
 54084 ;; Return value:  Size  Location     Type
 54085 ;;                  1    wreg      void 
 54086 ;; Registers used:
 54087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54088 ;; Tracked objects:
 54089 ;;		On entry : 0/0
 54090 ;;		On exit  : 0/0
 54091 ;;		Unchanged: 0/0
 54092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54097 ;;Total ram usage:        0 bytes
 54098 ;; Hardware stack levels used:    1
 54099 ;; Hardware stack levels required when called:    2
 54100 ;; This function calls:
 54101 ;;		_USBCtrlTrfRxService
 54102 ;; This function is called by:
 54103 ;;		_USBCtrlEPService
 54104 ;; This function uses a non-reentrant model
 54105 ;;
 54106                           
 54107                           	psect	text229
 54108  01441A                     __ptext229:
 54109                           	opt stack 0
 54110  01441A                     _USBCtrlTrfOutHandler:
 54111                           	opt stack 13
 54112                           
 54113                           ;usb_device.c: 2542: if(controlTransferState == 2)
 54114                           
 54115                           ;incstack = 0
 54116  01441A  0E02               	movlw	2
 54117  01441C  0101               	movlb	1	; () banked
 54118  01441E  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54119  014420  A4D8               	btfss	status,2,c
 54120  014422  D003               	goto	i2l332
 54121                           
 54122                           ; BSR set to: 1
 54123                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 54124  014424  ECDE  F086         	call	_USBCtrlTrfRxService	;wreg free
 54125                           
 54126                           ;usb_device.c: 2545: }
 54127  014428  0012               	return	
 54128  01442A                     i2l332:
 54129                           
 54130                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 54131  01442A  0E00               	movlw	0
 54132  01442C  0101               	movlb	1	; () banked
 54133  01442E  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54134                           
 54135                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 54136  014430  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 54137  014432  A4D8               	btfss	status,2,c
 54138  014434  D01F               	goto	i2l334
 54139                           
 54140                           ; BSR set to: 1
 54141                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 54142  014436  EE20 F001          	lfsr	2,1
 54143  01443A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54144  01443C  26D9               	addwf	fsr2l,f,c
 54145  01443E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54146  014440  22DA               	addwfc	fsr2h,f,c
 54147  014442  0E08               	movlw	8
 54148  014444  6EDF               	movwf	indf2,c
 54149                           
 54150                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54151  014446  EE20 F002          	lfsr	2,2
 54152  01444A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54153  01444C  26D9               	addwf	fsr2l,f,c
 54154  01444E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54155  014450  22DA               	addwfc	fsr2h,f,c
 54156  014452  0E30               	movlw	48
 54157  014454  6EDE               	movwf	postinc2,c
 54158  014456  0E0D               	movlw	13
 54159  014458  6EDD               	movwf	postdec2,c
 54160                           
 54161                           ; BSR set to: 1
 54162                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 54163  01445A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54164  01445E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54165  014462  0E0C               	movlw	12
 54166  014464  6EDF               	movwf	indf2,c
 54167                           
 54168                           ; BSR set to: 1
 54169                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54170  014466  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54171  01446A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54172  01446E  0E00               	movlw	0
 54173  014470  8EDB               	bsf	plusw2,7,c
 54174                           
 54175                           ;usb_device.c: 2563: }
 54176  014472  0012               	return	
 54177  014474                     i2l334:
 54178                           
 54179                           ; BSR set to: 1
 54180                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 54181                           
 54182                           ; BSR set to: 1
 54183  014474  0E00               	movlw	0
 54184  014476  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54185                           
 54186                           ; BSR set to: 1
 54187  014478  0012               	return	
 54188  01447A                     __end_of_USBCtrlTrfOutHandler:
 54189                           	opt stack 0
 54190                           tosu	equ	0xFFF
 54191                           tosh	equ	0xFFE
 54192                           tosl	equ	0xFFD
 54193                           pclatu	equ	0xFFB
 54194                           pclath	equ	0xFFA
 54195                           tblptru	equ	0xFF8
 54196                           tblptrh	equ	0xFF7
 54197                           tblptrl	equ	0xFF6
 54198                           tablat	equ	0xFF5
 54199                           prodh	equ	0xFF4
 54200                           prodl	equ	0xFF3
 54201                           intcon	equ	0xFF2
 54202                           indf0	equ	0xFEF
 54203                           postinc0	equ	0xFEE
 54204                           fsr0h	equ	0xFEA
 54205                           fsr0l	equ	0xFE9
 54206                           wreg	equ	0xFE8
 54207                           indf1	equ	0xFE7
 54208                           postinc1	equ	0xFE6
 54209                           postdec1	equ	0xFE5
 54210                           plusw1	equ	0xFE3
 54211                           fsr1h	equ	0xFE2
 54212                           fsr1l	equ	0xFE1
 54213                           indf2	equ	0xFDF
 54214                           postinc2	equ	0xFDE
 54215                           postdec2	equ	0xFDD
 54216                           plusw2	equ	0xFDB
 54217                           fsr2h	equ	0xFDA
 54218                           fsr2l	equ	0xFD9
 54219                           status	equ	0xFD8
 54220                           
 54221 ;; *************** function _USBCtrlTrfRxService *****************
 54222 ;; Defined at:
 54223 ;;		line 1854 in file "usb_device.c"
 54224 ;; Parameters:    Size  Location     Type
 54225 ;;		None
 54226 ;; Auto vars:     Size  Location     Type
 54227 ;;  byteToRead      1    1[COMRAM] unsigned char 
 54228 ;;  i               1    0[COMRAM] unsigned char 
 54229 ;; Return value:  Size  Location     Type
 54230 ;;                  1    wreg      void 
 54231 ;; Registers used:
 54232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54233 ;; Tracked objects:
 54234 ;;		On entry : 0/0
 54235 ;;		On exit  : 0/0
 54236 ;;		Unchanged: 0/0
 54237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54242 ;;Total ram usage:        2 bytes
 54243 ;; Hardware stack levels used:    1
 54244 ;; Hardware stack levels required when called:    1
 54245 ;; This function calls:
 54246 ;;		_USBCtrlEPAllowStatusStage
 54247 ;; This function is called by:
 54248 ;;		_USBCtrlTrfOutHandler
 54249 ;; This function uses a non-reentrant model
 54250 ;;
 54251                           
 54252                           	psect	text230
 54253  010DBC                     __ptext230:
 54254                           	opt stack 0
 54255  010DBC                     _USBCtrlTrfRxService:
 54256                           	opt stack 13
 54257                           
 54258                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 54259                           
 54260                           ;incstack = 0
 54261  010DBC  0101               	movlb	1	; () banked
 54262  010DBE  EE20 F001          	lfsr	2,1
 54263  010DC2  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54264  010DC4  26D9               	addwf	fsr2l,f,c
 54265  010DC6  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54266  010DC8  22DA               	addwfc	fsr2h,f,c
 54267  010DCA  50DF               	movf	indf2,w,c
 54268  010DCC  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 54269                           
 54270                           ; BSR set to: 1
 54271                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 54272  010DCE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54273  010DD0  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 54274  010DD2  0E00               	movlw	0
 54275  010DD4  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 54276  010DD6  A0D8               	btfss	status,0,c
 54277                           
 54278                           ; BSR set to: 1
 54279                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 54280  010DD8  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 54281                           
 54282                           ; BSR set to: 1
 54283                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 54284                           
 54285                           ; BSR set to: 1
 54286  010DDC  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54287  010DDE  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 54288  010DE0  0E00               	movlw	0
 54289  010DE2  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 54290                           
 54291                           ; BSR set to: 1
 54292                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 54293  010DE4  0E00               	movlw	0
 54294  010DE6  6E01               	movwf	USBCtrlTrfRxService@i,c
 54295  010DE8  D011               	goto	i2l260
 54296  010DEA                     
 54297                           ; BSR set to: 1
 54298                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 54299                           
 54300                           ; BSR set to: 1
 54301  010DEA  5001               	movf	USBCtrlTrfRxService@i,w,c
 54302  010DEC  0D01               	mullw	1
 54303  010DEE  0E38               	movlw	56
 54304  010DF0  24F3               	addwf	prodl,w,c
 54305  010DF2  6ED9               	movwf	fsr2l,c
 54306  010DF4  0E0D               	movlw	13
 54307  010DF6  20F4               	addwfc	prodh,w,c
 54308  010DF8  6EDA               	movwf	fsr2h,c
 54309  010DFA  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 54310  010DFE  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 54311  010E02  CFDF FFE7          	movff	indf2,indf1
 54312                           
 54313                           ; BSR set to: 1
 54314  010E06  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 54315  010E08  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 54316                           
 54317                           ; BSR set to: 1
 54318  010E0A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 54319  010E0C                     i2l260:
 54320                           
 54321                           ; BSR set to: 1
 54322                           
 54323                           ; BSR set to: 1
 54324  010E0C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54325  010E0E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 54326  010E10  A0D8               	btfss	status,0,c
 54327  010E12  D7EB               	goto	i2l261
 54328                           
 54329                           ; BSR set to: 1
 54330                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 54331                           
 54332                           ; BSR set to: 1
 54333  010E14  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 54334  010E16  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 54335  010E18  B4D8               	btfsc	status,2,c
 54336  010E1A  D032               	goto	i2l263
 54337                           
 54338                           ; BSR set to: 1
 54339                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 54340  010E1C  EE20 F001          	lfsr	2,1
 54341  010E20  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54342  010E22  26D9               	addwf	fsr2l,f,c
 54343  010E24  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54344  010E26  22DA               	addwfc	fsr2h,f,c
 54345  010E28  0E08               	movlw	8
 54346  010E2A  6EDF               	movwf	indf2,c
 54347                           
 54348                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 54349  010E2C  EE20 F002          	lfsr	2,2
 54350  010E30  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54351  010E32  26D9               	addwf	fsr2l,f,c
 54352  010E34  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54353  010E36  22DA               	addwfc	fsr2h,f,c
 54354  010E38  0E38               	movlw	56
 54355  010E3A  6EDE               	movwf	postinc2,c
 54356  010E3C  0E0D               	movlw	13
 54357  010E3E  6EDD               	movwf	postdec2,c
 54358                           
 54359                           ; BSR set to: 1
 54360                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 54361  010E40  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54362  010E44  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54363  010E48  BCDF               	btfsc	indf2,6,c
 54364  010E4A  D00D               	goto	i2l264
 54365                           
 54366                           ; BSR set to: 1
 54367                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 54368  010E4C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54369  010E50  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54370  010E54  0E48               	movlw	72
 54371  010E56  6EDF               	movwf	indf2,c
 54372                           
 54373                           ; BSR set to: 1
 54374                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54375  010E58  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54376  010E5C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54377  010E60  0E00               	movlw	0
 54378  010E62  8EDB               	bsf	plusw2,7,c
 54379                           
 54380                           ;usb_device.c: 1891: }
 54381  010E64  0012               	return	
 54382  010E66                     i2l264:
 54383                           
 54384                           ; BSR set to: 1
 54385                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 54386                           
 54387                           ; BSR set to: 1
 54388  010E66  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54389  010E6A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54390  010E6E  0E08               	movlw	8
 54391  010E70  6EDF               	movwf	indf2,c
 54392                           
 54393                           ; BSR set to: 1
 54394                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54395  010E72  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54396  010E76  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54397  010E7A  0E00               	movlw	0
 54398  010E7C  8EDB               	bsf	plusw2,7,c
 54399                           
 54400                           ; BSR set to: 1
 54401                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 54402  010E7E  0012               	return	
 54403  010E80                     i2l263:
 54404                           
 54405                           ; BSR set to: 1
 54406                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 54407                           
 54408                           ; BSR set to: 1
 54409  010E80  EE20 F001          	lfsr	2,1
 54410  010E84  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54411  010E86  26D9               	addwf	fsr2l,f,c
 54412  010E88  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54413  010E8A  22DA               	addwfc	fsr2h,f,c
 54414  010E8C  0E08               	movlw	8
 54415  010E8E  6EDF               	movwf	indf2,c
 54416                           
 54417                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54418  010E90  EE20 F002          	lfsr	2,2
 54419  010E94  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54420  010E96  26D9               	addwf	fsr2l,f,c
 54421  010E98  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54422  010E9A  22DA               	addwfc	fsr2h,f,c
 54423  010E9C  0E30               	movlw	48
 54424  010E9E  6EDE               	movwf	postinc2,c
 54425  010EA0  0E0D               	movlw	13
 54426  010EA2  6EDD               	movwf	postdec2,c
 54427                           
 54428                           ; BSR set to: 1
 54429                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 54430  010EA4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54431  010EA8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54432  010EAC  0E04               	movlw	4
 54433  010EAE  6EDF               	movwf	indf2,c
 54434                           
 54435                           ; BSR set to: 1
 54436                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54437  010EB0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54438  010EB4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54439  010EB8  0E00               	movlw	0
 54440  010EBA  8EDB               	bsf	plusw2,7,c
 54441                           
 54442                           ; BSR set to: 1
 54443                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 54444                           
 54445                           ; BSR set to: 1
 54446                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 54447  010EBC  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54448                           
 54449                           ; BSR set to: 1
 54450                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 54451  010EBE  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 54452  010EC0  A4D8               	btfss	status,2,c
 54453  010EC2  0012               	return	
 54454                           
 54455                           ; BSR set to: 1
 54456                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 54457  010EC4  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 54458  010EC8  0012               	return	
 54459  010ECA                     __end_of_USBCtrlTrfRxService:
 54460                           	opt stack 0
 54461                           tosu	equ	0xFFF
 54462                           tosh	equ	0xFFE
 54463                           tosl	equ	0xFFD
 54464                           pclatu	equ	0xFFB
 54465                           pclath	equ	0xFFA
 54466                           tblptru	equ	0xFF8
 54467                           tblptrh	equ	0xFF7
 54468                           tblptrl	equ	0xFF6
 54469                           tablat	equ	0xFF5
 54470                           prodh	equ	0xFF4
 54471                           prodl	equ	0xFF3
 54472                           intcon	equ	0xFF2
 54473                           indf0	equ	0xFEF
 54474                           postinc0	equ	0xFEE
 54475                           fsr0h	equ	0xFEA
 54476                           fsr0l	equ	0xFE9
 54477                           wreg	equ	0xFE8
 54478                           indf1	equ	0xFE7
 54479                           postinc1	equ	0xFE6
 54480                           postdec1	equ	0xFE5
 54481                           plusw1	equ	0xFE3
 54482                           fsr1h	equ	0xFE2
 54483                           fsr1l	equ	0xFE1
 54484                           indf2	equ	0xFDF
 54485                           postinc2	equ	0xFDE
 54486                           postdec2	equ	0xFDD
 54487                           plusw2	equ	0xFDB
 54488                           fsr2h	equ	0xFDA
 54489                           fsr2l	equ	0xFD9
 54490                           status	equ	0xFD8
 54491                           
 54492 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 54493 ;; Defined at:
 54494 ;;		line 1418 in file "usb_device.c"
 54495 ;; Parameters:    Size  Location     Type
 54496 ;;		None
 54497 ;; Auto vars:     Size  Location     Type
 54498 ;;		None
 54499 ;; Return value:  Size  Location     Type
 54500 ;;                  1    wreg      void 
 54501 ;; Registers used:
 54502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54503 ;; Tracked objects:
 54504 ;;		On entry : 0/0
 54505 ;;		On exit  : 0/0
 54506 ;;		Unchanged: 0/0
 54507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54512 ;;Total ram usage:        0 bytes
 54513 ;; Hardware stack levels used:    1
 54514 ;; This function calls:
 54515 ;;		Nothing
 54516 ;; This function is called by:
 54517 ;;		_USBDeviceTasks
 54518 ;;		_USBCtrlEPServiceComplete
 54519 ;;		_USBCtrlTrfRxService
 54520 ;; This function uses a non-reentrant model
 54521 ;;
 54522                           
 54523                           	psect	text231
 54524  012844                     __ptext231:
 54525                           	opt stack 0
 54526  012844                     _USBCtrlEPAllowStatusStage:
 54527                           	opt stack 13
 54528                           
 54529                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 54530                           
 54531                           ;incstack = 0
 54532  012844  0101               	movlb	1	; () banked
 54533  012846  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 54534  012848  A4D8               	btfss	status,2,c
 54535  01284A  0012               	return	
 54536                           
 54537                           ; BSR set to: 1
 54538                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 54539  01284C  0E01               	movlw	1
 54540  01284E  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 54541                           
 54542                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 54543  012850  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 54544  012852  A4D8               	btfss	status,2,c
 54545  012854  0012               	return	
 54546                           
 54547                           ; BSR set to: 1
 54548                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 54549  012856  0E01               	movlw	1
 54550  012858  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 54551                           
 54552                           ; BSR set to: 1
 54553                           ;usb_device.c: 1434: if(controlTransferState == 2)
 54554  01285A  0E02               	movlw	2
 54555  01285C  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54556  01285E  A4D8               	btfss	status,2,c
 54557  012860  D015               	goto	i2l214
 54558                           
 54559                           ; BSR set to: 1
 54560                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 54561  012862  EE20 F001          	lfsr	2,1
 54562  012866  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54563  012868  26D9               	addwf	fsr2l,f,c
 54564  01286A  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54565  01286C  22DA               	addwfc	fsr2h,f,c
 54566  01286E  0E00               	movlw	0
 54567  012870  6EDF               	movwf	indf2,c
 54568                           
 54569                           ; BSR set to: 1
 54570                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 54571  012872  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54572  012876  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54573  01287A  0E48               	movlw	72
 54574  01287C  6EDF               	movwf	indf2,c
 54575                           
 54576                           ; BSR set to: 1
 54577                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54578  01287E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54579  012882  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54580  012886  0E00               	movlw	0
 54581  012888  8EDB               	bsf	plusw2,7,c
 54582                           
 54583                           ;usb_device.c: 1439: }
 54584  01288A  0012               	return	
 54585  01288C                     i2l214:
 54586                           
 54587                           ; BSR set to: 1
 54588                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 54589                           
 54590                           ; BSR set to: 1
 54591  01288C  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54592  01288E  A4D8               	btfss	status,2,c
 54593  012890  0012               	return	
 54594                           
 54595                           ; BSR set to: 1
 54596                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 54597  012892  0E00               	movlw	0
 54598  012894  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54599                           
 54600                           ; BSR set to: 1
 54601                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 54602  012896  EE20 F001          	lfsr	2,1
 54603  01289A  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54604  01289C  26D9               	addwf	fsr2l,f,c
 54605  01289E  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54606  0128A0  22DA               	addwfc	fsr2h,f,c
 54607  0128A2  0E08               	movlw	8
 54608  0128A4  6EDF               	movwf	indf2,c
 54609                           
 54610                           ; BSR set to: 1
 54611                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 54612  0128A6  EE20 F002          	lfsr	2,2
 54613  0128AA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54614  0128AC  26D9               	addwf	fsr2l,f,c
 54615  0128AE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54616  0128B0  22DA               	addwfc	fsr2h,f,c
 54617  0128B2  0E30               	movlw	48
 54618  0128B4  6EDE               	movwf	postinc2,c
 54619  0128B6  0E0D               	movlw	13
 54620  0128B8  6EDD               	movwf	postdec2,c
 54621                           
 54622                           ; BSR set to: 1
 54623                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 54624  0128BA  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54625  0128BE  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54626  0128C2  0E04               	movlw	4
 54627  0128C4  6EDF               	movwf	indf2,c
 54628                           
 54629                           ; BSR set to: 1
 54630                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 54631  0128C6  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54632  0128CA  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54633  0128CE  0E00               	movlw	0
 54634  0128D0  8EDB               	bsf	plusw2,7,c
 54635                           
 54636                           ; BSR set to: 1
 54637                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 54638  0128D2  0E01               	movlw	1
 54639  0128D4  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54640                           
 54641                           ; BSR set to: 1
 54642                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 54643  0128D6  EE20 F001          	lfsr	2,1
 54644  0128DA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54645  0128DC  26D9               	addwf	fsr2l,f,c
 54646  0128DE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54647  0128E0  22DA               	addwfc	fsr2h,f,c
 54648  0128E2  0E08               	movlw	8
 54649  0128E4  6EDF               	movwf	indf2,c
 54650                           
 54651                           ; BSR set to: 1
 54652                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54653  0128E6  EE20 F002          	lfsr	2,2
 54654  0128EA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54655  0128EC  26D9               	addwf	fsr2l,f,c
 54656  0128EE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54657  0128F0  22DA               	addwfc	fsr2h,f,c
 54658  0128F2  0E30               	movlw	48
 54659  0128F4  6EDE               	movwf	postinc2,c
 54660  0128F6  0E0D               	movlw	13
 54661  0128F8  6EDD               	movwf	postdec2,c
 54662                           
 54663                           ; BSR set to: 1
 54664                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 54665  0128FA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54666  0128FE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54667  012902  0E80               	movlw	128
 54668  012904  6EDF               	movwf	indf2,c
 54669                           
 54670                           ; BSR set to: 1
 54671                           
 54672                           ; BSR set to: 1
 54673                           
 54674                           ; BSR set to: 1
 54675  012906  0012               	return	
 54676  012908                     __end_of_USBCtrlEPAllowStatusStage:
 54677                           	opt stack 0
 54678                           tosu	equ	0xFFF
 54679                           tosh	equ	0xFFE
 54680                           tosl	equ	0xFFD
 54681                           pclatu	equ	0xFFB
 54682                           pclath	equ	0xFFA
 54683                           tblptru	equ	0xFF8
 54684                           tblptrh	equ	0xFF7
 54685                           tblptrl	equ	0xFF6
 54686                           tablat	equ	0xFF5
 54687                           prodh	equ	0xFF4
 54688                           prodl	equ	0xFF3
 54689                           intcon	equ	0xFF2
 54690                           indf0	equ	0xFEF
 54691                           postinc0	equ	0xFEE
 54692                           fsr0h	equ	0xFEA
 54693                           fsr0l	equ	0xFE9
 54694                           wreg	equ	0xFE8
 54695                           indf1	equ	0xFE7
 54696                           postinc1	equ	0xFE6
 54697                           postdec1	equ	0xFE5
 54698                           plusw1	equ	0xFE3
 54699                           fsr1h	equ	0xFE2
 54700                           fsr1l	equ	0xFE1
 54701                           indf2	equ	0xFDF
 54702                           postinc2	equ	0xFDE
 54703                           postdec2	equ	0xFDD
 54704                           plusw2	equ	0xFDB
 54705                           fsr2h	equ	0xFDA
 54706                           fsr2l	equ	0xFD9
 54707                           status	equ	0xFD8
 54708                           
 54709 ;; *************** function _USBCtrlTrfInHandler *****************
 54710 ;; Defined at:
 54711 ;;		line 2594 in file "usb_device.c"
 54712 ;; Parameters:    Size  Location     Type
 54713 ;;		None
 54714 ;; Auto vars:     Size  Location     Type
 54715 ;;  lastDTS         1    1[COMRAM] unsigned char 
 54716 ;; Return value:  Size  Location     Type
 54717 ;;                  1    wreg      void 
 54718 ;; Registers used:
 54719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54720 ;; Tracked objects:
 54721 ;;		On entry : 0/0
 54722 ;;		On exit  : 0/0
 54723 ;;		Unchanged: 0/0
 54724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54729 ;;Total ram usage:        1 bytes
 54730 ;; Hardware stack levels used:    1
 54731 ;; Hardware stack levels required when called:    1
 54732 ;; This function calls:
 54733 ;;		_USBCtrlTrfTxService
 54734 ;; This function is called by:
 54735 ;;		_USBCtrlEPService
 54736 ;; This function uses a non-reentrant model
 54737 ;;
 54738                           
 54739                           	psect	text232
 54740  012908                     __ptext232:
 54741                           	opt stack 0
 54742  012908                     _USBCtrlTrfInHandler:
 54743                           	opt stack 14
 54744                           
 54745                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 54746                           
 54747                           ; BSR set to: 1
 54748                           ;incstack = 0
 54749  012908  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54750  01290C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54751  012910  0101               	movlb	1	; () banked
 54752  012912  0E00               	movlw	0
 54753  012914  BCDF               	btfsc	indf2,6,c
 54754  012916  0E01               	movlw	1
 54755  012918  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 54756                           
 54757                           ; BSR set to: 1
 54758                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 54759  01291A  0E04               	movlw	4
 54760  01291C  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 54761  01291E  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 54762  012920  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54763  012922  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 54764                           
 54765                           ; BSR set to: 1
 54766                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 54767  012924  0E08               	movlw	8
 54768  012926  185E               	xorwf	_USBDeviceState,w,c	;volatile
 54769  012928  A4D8               	btfss	status,2,c
 54770  01292A  D00C               	goto	i2l341
 54771                           
 54772                           ; BSR set to: 1
 54773                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 54774  01292C  010D               	movlb	13	; () banked
 54775  01292E  5132               	movf	50,w,b	;volatile
 54776  012930  0B7F               	andlw	127
 54777  012932  010F               	movlb	15	; () banked
 54778  012934  6F38               	movwf	56,b	;volatile
 54779                           
 54780                           ; BSR set to: 15
 54781                           ;usb_device.c: 2609: if(UADDR != 0u)
 54782  012936  5138               	movf	56,w,b	;volatile
 54783  012938  B4D8               	btfsc	status,2,c
 54784  01293A  D002               	goto	i2l340
 54785                           
 54786                           ; BSR set to: 15
 54787                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 54788  01293C  0E10               	movlw	16
 54789  01293E  D001               	goto	L88
 54790  012940                     i2l340:
 54791                           
 54792                           ; BSR set to: 15
 54793                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 54794                           
 54795                           ; BSR set to: 15
 54796  012940  0E04               	movlw	4
 54797  012942                     L88:
 54798  012942  6E5E               	movwf	_USBDeviceState,c	;volatile
 54799  012944                     i2l341:
 54800                           
 54801                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 54802                           
 54803                           ; BSR set to: 15
 54804                           
 54805                           ; BSR set to: 15
 54806  012944  0101               	movlb	1	; () banked
 54807  012946  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54808  012948  A4D8               	btfss	status,2,c
 54809  01294A  D03B               	goto	i2l342
 54810                           
 54811                           ; BSR set to: 1
 54812                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 54813  01294C  EE20 F002          	lfsr	2,2
 54814  012950  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54815  012952  26D9               	addwf	fsr2l,f,c
 54816  012954  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54817  012956  22DA               	addwfc	fsr2h,f,c
 54818  012958  0E38               	movlw	56
 54819  01295A  6EDE               	movwf	postinc2,c
 54820  01295C  0E0D               	movlw	13
 54821  01295E  6EDD               	movwf	postdec2,c
 54822                           
 54823                           ; BSR set to: 1
 54824                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 54825  012960  EC83  F092         	call	_USBCtrlTrfTxService	;wreg free
 54826                           
 54827                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 54828  012964  0E02               	movlw	2
 54829  012966  0101               	movlb	1	; () banked
 54830  012968  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 54831  01296A  A4D8               	btfss	status,2,c
 54832  01296C  D00D               	goto	i2l343
 54833                           
 54834                           ; BSR set to: 1
 54835                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 54836  01296E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54837  012972  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54838  012976  0E04               	movlw	4
 54839  012978  6EDF               	movwf	indf2,c
 54840                           
 54841                           ; BSR set to: 1
 54842                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54843  01297A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54844  01297E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54845  012982  0E00               	movlw	0
 54846  012984  8EDB               	bsf	plusw2,7,c
 54847                           
 54848                           ;usb_device.c: 2635: }
 54849  012986  0012               	return	
 54850  012988                     i2l343:
 54851                           
 54852                           ; BSR set to: 1
 54853                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 54854                           
 54855                           ; BSR set to: 1
 54856  012988  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 54857  01298A  A4D8               	btfss	status,2,c
 54858  01298C  D00D               	goto	i2l345
 54859                           
 54860                           ; BSR set to: 1
 54861                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 54862  01298E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54863  012992  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54864  012996  0E48               	movlw	72
 54865  012998  6EDF               	movwf	indf2,c
 54866                           
 54867                           ; BSR set to: 1
 54868                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54869  01299A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54870  01299E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54871  0129A2  0E00               	movlw	0
 54872  0129A4  8EDB               	bsf	plusw2,7,c
 54873                           
 54874                           ;usb_device.c: 2642: }
 54875  0129A6  0012               	return	
 54876  0129A8                     i2l345:
 54877                           
 54878                           ; BSR set to: 1
 54879                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 54880                           
 54881                           ; BSR set to: 1
 54882  0129A8  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54883  0129AC  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54884  0129B0  0E08               	movlw	8
 54885  0129B2  6EDF               	movwf	indf2,c
 54886                           
 54887                           ; BSR set to: 1
 54888                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54889  0129B4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54890  0129B8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54891  0129BC  0E00               	movlw	0
 54892  0129BE  8EDB               	bsf	plusw2,7,c
 54893                           
 54894                           ; BSR set to: 1
 54895                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 54896                           
 54897                           ; BSR set to: 1
 54898  0129C0  0012               	return	
 54899  0129C2                     i2l342:
 54900                           
 54901                           ; BSR set to: 1
 54902                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 54903  0129C2  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 54904                           
 54905                           ; BSR set to: 1
 54906                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 54907                           
 54908                           ; BSR set to: 1
 54909                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 54910  0129C4  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54911                           
 54912                           ; BSR set to: 1
 54913                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 54914                           
 54915                           ; BSR set to: 1
 54916  0129C6  0E00               	movlw	0
 54917  0129C8  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54918  0129CA  0012               	return	
 54919  0129CC                     __end_of_USBCtrlTrfInHandler:
 54920                           	opt stack 0
 54921                           tosu	equ	0xFFF
 54922                           tosh	equ	0xFFE
 54923                           tosl	equ	0xFFD
 54924                           pclatu	equ	0xFFB
 54925                           pclath	equ	0xFFA
 54926                           tblptru	equ	0xFF8
 54927                           tblptrh	equ	0xFF7
 54928                           tblptrl	equ	0xFF6
 54929                           tablat	equ	0xFF5
 54930                           prodh	equ	0xFF4
 54931                           prodl	equ	0xFF3
 54932                           intcon	equ	0xFF2
 54933                           indf0	equ	0xFEF
 54934                           postinc0	equ	0xFEE
 54935                           fsr0h	equ	0xFEA
 54936                           fsr0l	equ	0xFE9
 54937                           wreg	equ	0xFE8
 54938                           indf1	equ	0xFE7
 54939                           postinc1	equ	0xFE6
 54940                           postdec1	equ	0xFE5
 54941                           plusw1	equ	0xFE3
 54942                           fsr1h	equ	0xFE2
 54943                           fsr1l	equ	0xFE1
 54944                           indf2	equ	0xFDF
 54945                           postinc2	equ	0xFDE
 54946                           postdec2	equ	0xFDD
 54947                           plusw2	equ	0xFDB
 54948                           fsr2h	equ	0xFDA
 54949                           fsr2l	equ	0xFD9
 54950                           status	equ	0xFD8
 54951                           
 54952 ;; *************** function _USBCtrlTrfTxService *****************
 54953 ;; Defined at:
 54954 ;;		line 1773 in file "usb_device.c"
 54955 ;; Parameters:    Size  Location     Type
 54956 ;;		None
 54957 ;; Auto vars:     Size  Location     Type
 54958 ;;  byteToSend      1    0[COMRAM] unsigned char 
 54959 ;; Return value:  Size  Location     Type
 54960 ;;                  1    wreg      void 
 54961 ;; Registers used:
 54962 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 54963 ;; Tracked objects:
 54964 ;;		On entry : 0/0
 54965 ;;		On exit  : 0/0
 54966 ;;		Unchanged: 0/0
 54967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54972 ;;Total ram usage:        1 bytes
 54973 ;; Hardware stack levels used:    1
 54974 ;; This function calls:
 54975 ;;		Nothing
 54976 ;; This function is called by:
 54977 ;;		_USBCtrlEPAllowDataStage
 54978 ;;		_USBCtrlTrfInHandler
 54979 ;; This function uses a non-reentrant model
 54980 ;;
 54981                           
 54982                           	psect	text233
 54983  012506                     __ptext233:
 54984                           	opt stack 0
 54985  012506                     _USBCtrlTrfTxService:
 54986                           	opt stack 12
 54987                           
 54988                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 54989                           
 54990                           ; BSR set to: 1
 54991                           ;incstack = 0
 54992  012506  0E08               	movlw	8
 54993  012508  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 54994                           
 54995                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 54996  01250A  5057               	movf	_inPipes+5,w,c	;volatile
 54997  01250C  E111               	bnz	i2l12790
 54998  01250E  0E08               	movlw	8
 54999  012510  5C56               	subwf	_inPipes+4,w,c	;volatile
 55000  012512  B0D8               	btfsc	status,0,c
 55001  012514  D00D               	goto	i2l247
 55002                           
 55003                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 55004  012516  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 55005                           
 55006                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 55007  01251A  0101               	movlb	1	; () banked
 55008  01251C  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 55009  01251E  A4D8               	btfss	status,2,c
 55010  012520  D002               	goto	i2l245
 55011                           
 55012                           ; BSR set to: 1
 55013                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 55014  012522  0E01               	movlw	1
 55015  012524  D004               	goto	L89
 55016  012526                     i2l245:
 55017                           
 55018                           ; BSR set to: 1
 55019                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 55020                           
 55021                           ; BSR set to: 1
 55022  012526  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 55023  012528  A4D8               	btfss	status,2,c
 55024  01252A  D002               	goto	i2l247
 55025                           
 55026                           ; BSR set to: 1
 55027                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 55028  01252C  0E02               	movlw	2
 55029  01252E                     L89:
 55030  01252E  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 55031  012530                     i2l247:
 55032  012530                     i2l12790:
 55033                           
 55034                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 55035  012530  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55036  012532  5E56               	subwf	_inPipes+4,f,c	;volatile
 55037  012534  0E00               	movlw	0
 55038  012536  5A57               	subwfb	_inPipes+5,f,c	;volatile
 55039                           
 55040                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 55041  012538  0101               	movlb	1	; () banked
 55042  01253A  EE20 F001          	lfsr	2,1
 55043  01253E  511B               	movf	_pBDTEntryIn& (0+255),w,b
 55044  012540  26D9               	addwf	fsr2l,f,c
 55045  012542  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55046  012544  22DA               	addwfc	fsr2h,f,c
 55047  012546  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 55048                           
 55049                           ; BSR set to: 1
 55050                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 55051  01254A  0E38               	movlw	56
 55052  01254C  6F4F               	movwf	_pDst& (0+255),b
 55053  01254E  0E0D               	movlw	13
 55054  012550  6F50               	movwf	(_pDst+1)& (0+255),b
 55055                           
 55056                           ; BSR set to: 1
 55057                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 55058  012552  A055               	btfss	_inPipes+3,0,c	;volatile
 55059  012554  D01D               	goto	i2l249
 55060  012556  D03C               	goto	i2l253
 55061  012558                     
 55062                           ; BSR set to: 1
 55063                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 55064                           
 55065                           ; BSR set to: 1
 55066  012558  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55067  01255C  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55068  012560  0E00               	movlw	low (__mediumconst shr (0+16))
 55069  012562  6EF8               	movwf	tblptru,c
 55070  012564  C14F  FFD9         	movff	_pDst,fsr2l
 55071  012568  C150  FFDA         	movff	_pDst+1,fsr2h
 55072  01256C  0E0E               	movlw	(high __ramtop+-1)
 55073  01256E  64F7               	cpfsgt	tblptrh,c
 55074  012570  D003               	bra	i2u1109_47
 55075  012572  0008               	tblrd		*
 55076  012574  50F5               	movf	tablat,w,c
 55077  012576  D005               	bra	i2u1109_40
 55078  012578                     i2u1109_47:
 55079  012578  CFF6 FFE9          	movff	tblptrl,fsr0l
 55080  01257C  CFF7 FFEA          	movff	tblptrh,fsr0h
 55081  012580  50EF               	movf	indf0,w,c
 55082  012582                     i2u1109_40:
 55083  012582  6EDF               	movwf	indf2,c
 55084  012584  4A52               	infsnz	_inPipes,f,c	;volatile
 55085  012586  2A53               	incf	_inPipes+1,f,c	;volatile
 55086  012588  0101               	movlb	1	; () banked
 55087  01258A  4B4F               	infsnz	_pDst& (0+255),f,b
 55088  01258C  2B50               	incf	(_pDst+1)& (0+255),f,b
 55089                           
 55090                           ; BSR set to: 1
 55091                           ;usb_device.c: 1816: byteToSend--;
 55092  01258E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55093  012590                     i2l249:
 55094                           
 55095                           ; BSR set to: 1
 55096                           
 55097                           ; BSR set to: 1
 55098  012590  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55099  012592  B4D8               	btfsc	status,2,c
 55100  012594  0012               	return	
 55101  012596  D7E0               	goto	i2l250
 55102  012598                     
 55103                           ; BSR set to: 1
 55104                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 55105                           
 55106                           ; BSR set to: 1
 55107  012598  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55108  01259C  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55109  0125A0  0E00               	movlw	low (__mediumconst shr (0+16))
 55110  0125A2  6EF8               	movwf	tblptru,c
 55111  0125A4  C14F  FFD9         	movff	_pDst,fsr2l
 55112  0125A8  C150  FFDA         	movff	_pDst+1,fsr2h
 55113  0125AC  0E0E               	movlw	(high __ramtop+-1)
 55114  0125AE  64F7               	cpfsgt	tblptrh,c
 55115  0125B0  D003               	bra	i2u1111_47
 55116  0125B2  0008               	tblrd		*
 55117  0125B4  50F5               	movf	tablat,w,c
 55118  0125B6  D005               	bra	i2u1111_40
 55119  0125B8                     i2u1111_47:
 55120  0125B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 55121  0125BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 55122  0125C0  50EF               	movf	indf0,w,c
 55123  0125C2                     i2u1111_40:
 55124  0125C2  6EDF               	movwf	indf2,c
 55125  0125C4  4A52               	infsnz	_inPipes,f,c	;volatile
 55126  0125C6  2A53               	incf	_inPipes+1,f,c	;volatile
 55127  0125C8  0101               	movlb	1	; () banked
 55128  0125CA  4B4F               	infsnz	_pDst& (0+255),f,b
 55129  0125CC  2B50               	incf	(_pDst+1)& (0+255),f,b
 55130                           
 55131                           ; BSR set to: 1
 55132                           ;usb_device.c: 1824: byteToSend--;
 55133  0125CE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55134  0125D0                     i2l253:
 55135                           
 55136                           ; BSR set to: 1
 55137                           
 55138                           ; BSR set to: 1
 55139  0125D0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55140  0125D2  B4D8               	btfsc	status,2,c
 55141  0125D4  0012               	return	
 55142  0125D6  D7E0               	goto	i2l254
 55143  0125D8                     __end_of_USBCtrlTrfTxService:
 55144                           	opt stack 0
 55145                           tosu	equ	0xFFF
 55146                           tosh	equ	0xFFE
 55147                           tosl	equ	0xFFD
 55148                           pclatu	equ	0xFFB
 55149                           pclath	equ	0xFFA
 55150                           tblptru	equ	0xFF8
 55151                           tblptrh	equ	0xFF7
 55152                           tblptrl	equ	0xFF6
 55153                           tablat	equ	0xFF5
 55154                           prodh	equ	0xFF4
 55155                           prodl	equ	0xFF3
 55156                           intcon	equ	0xFF2
 55157                           indf0	equ	0xFEF
 55158                           postinc0	equ	0xFEE
 55159                           fsr0h	equ	0xFEA
 55160                           fsr0l	equ	0xFE9
 55161                           wreg	equ	0xFE8
 55162                           indf1	equ	0xFE7
 55163                           postinc1	equ	0xFE6
 55164                           postdec1	equ	0xFE5
 55165                           plusw1	equ	0xFE3
 55166                           fsr1h	equ	0xFE2
 55167                           fsr1l	equ	0xFE1
 55168                           indf2	equ	0xFDF
 55169                           postinc2	equ	0xFDE
 55170                           postdec2	equ	0xFDD
 55171                           plusw2	equ	0xFDB
 55172                           fsr2h	equ	0xFDA
 55173                           fsr2l	equ	0xFD9
 55174                           status	equ	0xFD8
 55175                           tosu	equ	0xFFF
 55176                           tosh	equ	0xFFE
 55177                           tosl	equ	0xFFD
 55178                           pclatu	equ	0xFFB
 55179                           pclath	equ	0xFFA
 55180                           tblptru	equ	0xFF8
 55181                           tblptrh	equ	0xFF7
 55182                           tblptrl	equ	0xFF6
 55183                           tablat	equ	0xFF5
 55184                           prodh	equ	0xFF4
 55185                           prodl	equ	0xFF3
 55186                           intcon	equ	0xFF2
 55187                           indf0	equ	0xFEF
 55188                           postinc0	equ	0xFEE
 55189                           fsr0h	equ	0xFEA
 55190                           fsr0l	equ	0xFE9
 55191                           wreg	equ	0xFE8
 55192                           indf1	equ	0xFE7
 55193                           postinc1	equ	0xFE6
 55194                           postdec1	equ	0xFE5
 55195                           plusw1	equ	0xFE3
 55196                           fsr1h	equ	0xFE2
 55197                           fsr1l	equ	0xFE1
 55198                           indf2	equ	0xFDF
 55199                           postinc2	equ	0xFDE
 55200                           postdec2	equ	0xFDD
 55201                           plusw2	equ	0xFDB
 55202                           fsr2h	equ	0xFDA
 55203                           fsr2l	equ	0xFD9
 55204                           status	equ	0xFD8
 55205                           
 55206                           	psect	text234
 55207  000000                     __ptext234:
 55208                           	opt stack 0
 55209                           tosu	equ	0xFFF
 55210                           tosh	equ	0xFFE
 55211                           tosl	equ	0xFFD
 55212                           pclatu	equ	0xFFB
 55213                           pclath	equ	0xFFA
 55214                           tblptru	equ	0xFF8
 55215                           tblptrh	equ	0xFF7
 55216                           tblptrl	equ	0xFF6
 55217                           tablat	equ	0xFF5
 55218                           prodh	equ	0xFF4
 55219                           prodl	equ	0xFF3
 55220                           intcon	equ	0xFF2
 55221                           indf0	equ	0xFEF
 55222                           postinc0	equ	0xFEE
 55223                           fsr0h	equ	0xFEA
 55224                           fsr0l	equ	0xFE9
 55225                           wreg	equ	0xFE8
 55226                           indf1	equ	0xFE7
 55227                           postinc1	equ	0xFE6
 55228                           postdec1	equ	0xFE5
 55229                           plusw1	equ	0xFE3
 55230                           fsr1h	equ	0xFE2
 55231                           fsr1l	equ	0xFE1
 55232                           indf2	equ	0xFDF
 55233                           postinc2	equ	0xFDE
 55234                           postdec2	equ	0xFDD
 55235                           plusw2	equ	0xFDB
 55236                           fsr2h	equ	0xFDA
 55237                           fsr2l	equ	0xFD9
 55238                           status	equ	0xFD8
 55239                           
 55240                           	psect	rparam
 55241  0000                     tosu	equ	0xFFF
 55242                           tosh	equ	0xFFE
 55243                           tosl	equ	0xFFD
 55244                           pclatu	equ	0xFFB
 55245                           pclath	equ	0xFFA
 55246                           tblptru	equ	0xFF8
 55247                           tblptrh	equ	0xFF7
 55248                           tblptrl	equ	0xFF6
 55249                           tablat	equ	0xFF5
 55250                           prodh	equ	0xFF4
 55251                           prodl	equ	0xFF3
 55252                           intcon	equ	0xFF2
 55253                           indf0	equ	0xFEF
 55254                           postinc0	equ	0xFEE
 55255                           fsr0h	equ	0xFEA
 55256                           fsr0l	equ	0xFE9
 55257                           wreg	equ	0xFE8
 55258                           indf1	equ	0xFE7
 55259                           postinc1	equ	0xFE6
 55260                           postdec1	equ	0xFE5
 55261                           plusw1	equ	0xFE3
 55262                           fsr1h	equ	0xFE2
 55263                           fsr1l	equ	0xFE1
 55264                           indf2	equ	0xFDF
 55265                           postinc2	equ	0xFDE
 55266                           postdec2	equ	0xFDD
 55267                           plusw2	equ	0xFDB
 55268                           fsr2h	equ	0xFDA
 55269                           fsr2l	equ	0xFD9
 55270                           status	equ	0xFD8
 55271                           
 55272                           	psect	temp
 55273  00005F                     btemp:
 55274                           	opt stack 0
 55275  00005F                     	ds	1
 55276  0000                     int$flags	set	btemp
 55277  0000                     wtemp8	set	btemp+1
 55278  0000                     ttemp5	set	btemp+1
 55279  0000                     ttemp6	set	btemp+4
 55280  0000                     ttemp7	set	btemp+8
 55281                           tosu	equ	0xFFF
 55282                           tosh	equ	0xFFE
 55283                           tosl	equ	0xFFD
 55284                           pclatu	equ	0xFFB
 55285                           pclath	equ	0xFFA
 55286                           tblptru	equ	0xFF8
 55287                           tblptrh	equ	0xFF7
 55288                           tblptrl	equ	0xFF6
 55289                           tablat	equ	0xFF5
 55290                           prodh	equ	0xFF4
 55291                           prodl	equ	0xFF3
 55292                           intcon	equ	0xFF2
 55293                           indf0	equ	0xFEF
 55294                           postinc0	equ	0xFEE
 55295                           fsr0h	equ	0xFEA
 55296                           fsr0l	equ	0xFE9
 55297                           wreg	equ	0xFE8
 55298                           indf1	equ	0xFE7
 55299                           postinc1	equ	0xFE6
 55300                           postdec1	equ	0xFE5
 55301                           plusw1	equ	0xFE3
 55302                           fsr1h	equ	0xFE2
 55303                           fsr1l	equ	0xFE1
 55304                           indf2	equ	0xFDF
 55305                           postinc2	equ	0xFDE
 55306                           postdec2	equ	0xFDD
 55307                           plusw2	equ	0xFDB
 55308                           fsr2h	equ	0xFDA
 55309                           fsr2l	equ	0xFD9
 55310                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1555
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     184
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_set_zero->_motor_schedule_command
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  851940
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378374
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231129
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75530
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83178
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35708
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6215
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80075
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1043
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17215
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  173015
                                            109 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
        _motor_increase_manual_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   40685
                                             99 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   29926
                                             99 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   28913
                                             71 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113120
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113120
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108320
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   54911
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53205
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24547
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  106111
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16518
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7690
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   86592
                                            100 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   62996
                                             99 BANK0      1     1      0
            _motor_clear_command_cue
         _motor_go_to_steps_position
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0   20773
                                             71 BANK0      1     1      0
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   21472
                                             71 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   22850
                                             83 BANK0      7     1      6
                  __parse_jump_steps
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   21336
                                             71 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_schedule_command                               7     1      6   20729
                                             64 BANK0      7     1      6
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          17    11      6   17215
                                             47 BANK0     17    11      6
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
         _motor_set_zero
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_set_zero
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B8      11       71.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DB      31        0.0%
DATA                 0      0     7DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Dec 25 22:50:51 2019

                           __end_of_fat_read_from_file 1C5E  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 5490  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 3018  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FE56  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2430  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5436  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5408  
                                     __i2c_eeprom_busy 5590  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 19A4  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 12E2  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 533E  
                                                  l207 533C  
                                                  l145 FEA0  
                                                  l147 FEC8  
                                                  l149 FF02  
                          __end_of_USBStdGetDscHandler 0846  
                                                  l184 0FEE  
                                                  l192 0F2C  
                                                  l186 1018  
                                                  l602 E57E  
                                                  l188 1096  
                                                  l700 D8AC  
                                                  l620 4234  
                                                  l612 0710  
                                                  l701 D5EC  
                                                  l613 070A  
                                                  l605 E586  
                                                  l710 D6EC  
                                                  l630 C14A  
                                                  l622 4250  
                                                  l703 D8D0  
                                                  l711 D75A  
                                                  l631 BDAA  
                                                  l615 0714  
                                                  l720 D892  
                                                  l712 D756  
                                                  l704 D698  
                                                  l640 BEEE  
                                                  l624 425C  
                                                  l608 0664  
                                                  l641 BEF8  
                                                  l625 4262  
                                                  l714 D76E  
                                                  l706 D69E  
                                                  l650 BFF0  
                                                  l642 BF1C  
                                                  l634 BDBA  
                                                  l626 4268  
                                                  l570 E59E  
                                                  l731 0AF2  
                                                  l715 D7F2  
                                                  l707 D6AA  
                                                  l619 4270  
                                                  l571 E362  
                                                  l708 D6C8  
                                                  l660 C096  
                                                  l652 C026  
                                                  l644 BF4C  
                                                  l636 BDCA  
                                                  l580 E474  
                                                  l900 45FA  
                                                  l709 D714  
                                                  l661 C0AA  
                                                  l637 BDD4  
                                                  l734 0AFE  
                                                  l726 0A9C  
                                                  l718 D862  
                                                  l670 C142  
                                                  l662 C0D2  
                                                  l654 C042  
                                                  l646 BF8C  
                                                  l582 E48C  
                                                  l735 0B26  
                                                  l719 D87A  
                                                  l639 BE28  
                                                  l591 E500  
                                                  l575 E386  
                                                  l728 0AB4  
                                                  l664 C106  
                                                  l656 C05A  
                                                  l592 E504  
                                                  l904 460C  
                                                  l753 0B90  
                                                  l737 0B62  
                                                  l681 F204  
                                                  l665 C0DA  
                                                  l649 BFC4  
                                                  l593 E52A  
                                                  l577 E4B2  
                                                  l770 0A16  
                                                  l738 0B48  
                                                  l690 F11A  
                                                  l682 F046  
                                                  l666 C0EC  
                                                  l578 E498  
                                                  l586 E5BC  
                                                  l906 4618  
                                                  l675 2A18  
                                                  l763 0A60  
                                                  l771 0A52  
                                                  l747 0B70  
                                                  l691 F144  
                                                  l667 C102  
                                                  l587 E4D2  
                                                  l579 E46A  
                                                  l764 09CA  
                                                  l684 F228  
                                                  l692 F172  
                                                  _BDT 000D00  
                                                  l677 2A34  
                                                  l757 099E  
                                                  l749 0B7E  
                                                  l693 F184  
                                                  l685 F0A0  
                                                  l589 E4DE  
                                                  l950 31D8  
                                                  l766 09D2  
                                                  l694 F18A  
                                                  l686 F0AC  
                                                  l862 3540  
                                                  l767 09E0  
                                                  l695 F19E  
                                                  l687 F0B6  
                                                  l871 3582  
                                                  l863 355A  
                                                  l944 3174  
                                                  l768 09F4  
                                                  l696 F1EC  
                                                  l688 F0CA  
                                                  l872 3586  
                                                  l769 0A02  
                                                  l873 358C  
                                                  l867 3592  
                                                  l869 35B4  
                                                  l897 462A  
                                                  l986 5896  
                                                  l898 45EE  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 00A7  
                                   api_prepare@command 0074  
                                           _USBSuspend 53D8  
                               __end_of_display_update 51D8  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FFA2  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 3214  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 4700  
                                                 l2001 4704  
                                                 l2002 4708  
                                                 l2003 470C  
                                                 l2011 F79E  
                                                 l2004 4710  
                                                 l2020 F822  
                                                 l1141 594C  
                                                 l2021 F826  
                                                 l2013 F7D6  
                                                 l1213 4928  
                                                 l1310 4DD8  
                                                 l1126 5954  
                                                 l2030 F84A  
                                                 l2022 F82A  
                                                 l2015 F866  
                                                 l2031 F84E  
                                                 l2023 F82E  
                                                 l1135 591A  
                                                 l1312 4DE4  
                                                 l1320 1ED2  
                                                 l1400 A460  
                                                 l3000 394E  
                                                 l2040 550E  
                                                 l2032 F852  
                                                 l2024 F832  
                                                 l2016 F812  
                                                 l1321 1EA2  
                                                 l1401 A47E  
                                                 l3001 3942  
                                                 l2033 F856  
                                                 l2025 F836  
                                                 l2017 F816  
                                                 l2009 F790  
                                                 l1153 5912  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2034 F85A  
                                                 l2026 F83A  
                                                 l2018 F81A  
                                                 l2050 2E0A  
                                                 l1082 199A  
                                                 l1331 EAF8  
                                                 l1411 A5D0  
                                                 l1243 49F8  
                                                 l2035 F85E  
                                                 l2027 F83E  
                                                 l2019 F81E  
                                                 l1147 5926  
                                                 l2300 F934  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l3004 3982  
                                                 l1244 49DA  
                                                 l2036 F862  
                                                 l2028 F842  
                                                 l1164 3694  
                                                 l2301 F93C  
                                                 l1341 EB68  
                                                 l1317 1E74  
                                                 l3005 3990  
                                                 l2037 F8F2  
                                                 l2029 F846  
                                                 l1165 3676  
                                                 l2310 F9B2  
                                                 l2302 F960  
                                                 l1342 EB7C  
                                                 l1318 1E5E  
                                                 l1326 4F04  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l1158 4C36  
                                                 l2046 2DB6  
                                                 l2303 F966  
                                                 l1343 EBDC  
                                                 l1335 EAD0  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l1159 4C18  
                                                 l2320 431C  
                                                 l2312 F9E0  
                                                 l2304 F96C  
                                                 l2240 1F70  
                                                 l1344 EB96  
                                                 l1336 EAEE  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l2080 3C96  
                                                 l2305 F972  
                                                 l2241 1F7E  
                                                 l3041 2794  
                                                 l1345 EBDA  
                                                 l1353 0BF0  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l1249 3B4A  
                                                 l2330 3A22  
                                                 l2306 F978  
                                                 l2234 1FBE  
                                                 l2242 1F9E  
                                                 l1530 489C  
                                                 l3050 2832  
                                                 l3042 27AC  
                                                 l1338 EB84  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l1362 2C60  
                                                 l1522 3F16  
                                                 l2403 1D5E  
                                                 l2307 F97E  
                                                 l2251 08B8  
                                                 l1531 4858  
                                                 l1347 EC16  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l1523 3F3A  
                                                 l2412 20C2  
                                                 l2324 FDBC  
                                                 l2308 F984  
                                                 l2172 46EE  
                                                 l3044 27DA  
                                                 l1348 EBE6  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l1540 454A  
                                                 l1364 2C80  
                                                 l2164 5024  
                                                 l2317 433E  
                                                 l2253 0930  
                                                 l2237 1F3A  
                                                 l1533 4882  
                                                 l2181 3800  
                                                 l3045 27CE  
                                                 l3061 2E8C  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l1541 4554  
                                                 l2165 5000  
                                                 l2326 FE52  
                                                 l2318 42FE  
                                                 l2254 08D2  
                                                 l2246 0864  
                                                 l2270 2BA0  
                                                 l2238 1F48  
                                                 l2190 351E  
                                                 l3062 2E9A  
                                                 l3054 2E32  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l2078 3C30  
                                                 l1366 2CA0  
                                                 l2166 5034  
                                                 l2319 4354  
                                                 l2255 0966  
                                                 l2271 2BAC  
                                                 l2239 1F5C  
                                                 l1551 3BFC  
                                                 l3063 2EB0  
                                                 l3055 2E46  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l2407 4DB8  
                                                 l1359 2C40  
                                                 l2167 5012  
                                                 l2256 08EA  
                                                 l2280 F44C  
                                                 l3048 280E  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l2433 2EFC  
                                                 l2513 4CB2  
                                                 l2257 0906  
                                                 l2249 08B2  
                                                 l2265 2B5C  
                                                 l1553 3C1C  
                                                 l3049 281C  
                                                 l3057 2E64  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2530 D578  
                                                 l2282 F45E  
                                                 l2178 37CA  
                                                 l3058 2E58  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l2602 3E3A  
                                                 l2435 2F0A  
                                                 l2515 4CCE  
                                                 l2531 D530  
                                                 l2291 F9F8  
                                                 l2267 2B96  
                                                 l2187 34E0  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l2603 3E06  
                                                 l3260 20E4  
                                                 l2452 C570  
                                                 l2516 4CD6  
                                                 l2292 F8FC  
                                                 l2284 F4DC  
                                                 l1548 3BBA  
                                                 l3500 D12A  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l2612 541E  
                                                 l2700 B162  
                                                 l1900 12F2  
                           USBConfigureEndpoint@handle 0007  
                                                 l2461 C714  
                                                 l2453 C580  
                                                 l2269 2BD6  
                                                 l2277 F56C  
                                                 l1581 56E4  
                                                 l1549 3BC4  
                                                 l3237 5396  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2621 3EAA  
                                                 l2613 540E  
                                                 l2605 3E12  
                                                 l1741 4488  
                                                 l1485 51AE  
                                                 l3262 2150  
                                                 l2470 C7A4  
                                                 l2526 D388  
                                                 l2294 F904  
                                                 l3510 D20E  
                                                 l1398 A456  
                                                 l2622 3E76  
                                                 l2606 3E1C  
                                                 l2710 B202  
                                                 l1806 403C  
                                                 l1814 554A  
                                                 l1910 E63A  
                                                 l1902 1302  
                                                 l3271 2190  
                                                 l3263 2140  
                                                 l2471 C7A6  
                                                 l2455 C5C8  
                                                 l2535 D5A2  
                                                 l2527 D3D6  
                                                 l2295 F90C  
                                                 l2287 F536  
                                                 l1575 4658  
                                                 l1567 4B18  
                                                 l3503 D1C4  
                                                 l1479 AF14  
                                                 l2631 5050  
                                                 l2615 5412  
                                                 l2607 3E26  
                                                 l2543 2FBA  
                                                 l2711 B210  
                                                 l2703 B194  
                                                 l1743 44C2  
                                                 l1911 E7D2  
                                                 l1903 13BE  
                                                 l2472 C80E  
                                                 l2464 C736  
                                                 l2528 D472  
                                                 l2296 F914  
                                                 l1576 4662  
                                                 l1568 4B22  
                                                 l3520 D27E  
                                                 l3512 D218  
                                                 l2624 3E82  
                                                 l2616 5416  
                                                 l2608 3E30  
                                                 l2720 B2A2  
                                                 l1808 4094  
                                                 l1816 555C  
                                                 l1760 275C  
                                                 l1912 E6C0  
                                                 l1904 13B6  
                                                 l2473 C838  
                                                 l2465 C73E  
                                                 l2457 C64A  
                                                 l2529 D4C0  
                                                 l2297 F91C  
                                                 l1681 5262  
                                                 l3505 D1D4  
                                                 l2625 3E8C  
                                                 l2617 541A  
                                                 l2801 B780  
                                                 l2713 B24A  
                                                 l1833 1B74  
                                                 l1913 E6E8  
                                                 l1921 25DE  
                                                 l2466 C798  
                                                 l2298 F924  
                                                 l2626 3E96  
                                                 l2546 2FDE  
                                                 l2706 B7E8  
                                                 l2810 B73A  
                                                 l2802 B6DE  
                                                 l2714 B218  
                                                 l1842 1B5E  
                                                 l1762 2766  
                                                 l1914 E790  
                                                 l1930 2602  
                                                 l1922 25E2  
                                                 l2459 C692  
                                                 l2299 F92C  
                                                 l2627 3EA0  
                                                 l2811 B764  
                                                 l2803 B70C  
                                                 l2715 B222  
                                                 l1851 03A2  
                                                 l1931 2606  
                                                 l1923 25E6  
                                                 l3268 2174  
                                                 l3620 02A4  
                                                 l3524 D2A4  
                                                 l3508 D1F8  
                                                 l3452 4A7A  
                                                 l2636 3F66  
                                                 l2740 B3C4  
                                                 l2724 B3B2  
                                                 l2732 B348  
                                                 l2708 B23A  
                                                 l2716 B230  
                                                 l1836 1AE6  
                                                 l1780 DABC  
                                                 l1852 0400  
                                                 l1932 260A  
                                                 l1924 25EA  
                                                 l3541 DC68  
                                                 l3269 2168  
                                                 l2557 3110  
                                                 l1677 5296  
                                                 l3525 D2AC  
                                                 l3517 D238  
                                                 l3453 4A72  
                                                 l2813 B76E  
                                                 l2741 B3D4  
                                                 l2733 B35A  
                                                 l2725 B2DC  
                                                 l2709 B1E0  
                                                 l1845 3CB8  
                                                 l3381 4122  
                                                 l1757 2702  
                                                 l1933 260E  
                                                 l1925 25EE  
                                                 l3534 DBDE  
                                                 l3622 02EE  
                                                 l2558 3148  
                                                 l3702 53C4  
                                                 l3526 D2AE  
                                                 l3462 4F8A  
                                                 l2806 B71A  
                                                 l2750 B43E  
                                                 l2742 B3E2  
                                                 l2726 B2F0  
                                                 l2718 B264  
                                                 l3710 459A  
                                                 l3382 4116  
                                                 l1790 DB0C  
                                                 l1774 D944  
                                                 l1942 E214  
                                                 l1950 E126  
                                                 l1918 2626  
                                                 l1934 2612  
                                                 l1926 25F2  
                                                 l3551 DD72  
                                                 l3543 DC90  
                                                 l3535 DBDA  
                                                 l3631 0360  
                                                 l3623 02D6  
                                                 l3615 0270  
                                                 l3703 53B2  
                                                 l3463 4F82  
                                                 l2671 B79E  
                                                 l2807 B724  
                                                 l3711 4590  
                                                 l1767 32A6  
                                                 l1791 DB54  
                                                 l1951 E138  
                                                 l1943 E0E4  
                                                 l1935 2616  
                                                 l1927 25F6  
                                                 l1919 25DA  
                                                 l3560 DDEE  
                                                 l3552 DD54  
                                                 l3544 DD3E  
                                                 l3616 0280  
                                                 l2840 F3E8  
                                                 l3456 4A9A  
                                                 l2808 B732  
                                                 l2760 B4F0  
                                                 l2752 B472  
                                                 l2744 B41C  
                                                 l2736 B38C  
                                                 l1768 323C  
                                                 l1880 E838  
                                                 l2912 1C9E  
                                                 l1784 DA88  
                                                 l1960 E194  
                                                 l1952 E14A  
                                                 l1936 261A  
                                                 l1928 25FA  
                                                 l3561 DE12  
                                                 l3545 DCEE  
                                                 l3625 0320  
                                                 l3617 029E  
                                                 l3457 4AA4  
                                                 l2761 B4AC  
                                                 l2745 B3EA  
                                                 l2729 B322  
                                                 l2673 B1BA  
                                                 l2681 B01A  
                                                 l2921 FA78  
                                                 l1769 3288  
                                                 l3385 414A  
                                                 l2913 1C66  
                                                 l1777 D94E  
                                                 l1849 0390  
                                                 l1961 E198  
                                                 l1953 E15C  
                                                 l1945 E0E8  
                                                 l1937 261E  
                                                 l1929 25FE  
                                                 l3562 DE3C  
                                                 l3546 DD16  
                                                 l3538 DC1E  
                                                 l3570 CC7E  
                                                 l3626 0314  
                                                 l3490 D0BE  
                                                 l3482 D008  
                                                 l3466 4FA2  
                                                 l2770 B51A  
                                                 l2762 B4B8  
                                                 l2754 B47E  
                                                 l2746 B3F4  
                                                 l2682 B02A  
                                                 l2674 AFB2  
                                                 l3642 231A  
                                                 l1882 EA02  
                                                 l3386 4158  
                                                 l1786 DA96  
                                                 l1778 D9F4  
                                                 l1970 E1BC  
                                                 l1962 E19C  
                                                 l1954 E16E  
                                                 l1946 E0EC  
                                                 l1938 2622  
                                                 l3563 DE48  
                                                 l3539 DC1A  
                                                 l3619 02B0  
                                                 l3491 D0CC  
                                                 l3483 D004  
                                                 l2843 F3FE  
                                                 l3467 4FAC  
                                                 l2763 B4C6  
                                                 l2755 B48A  
                                                 l2739 B40C  
                                                 l2747 B402  
                                                 l2691 B0C4  
                                                 l2675 AFC2  
                                                 l3643 22DC  
                                                 l1883 E8F0  
                                                 l2915 1D10  
                                                 l1795 DB8E  
                                                 l1787 DA9E  
                                                 l1779 D9A0  
                                                 l1971 E1C0  
                                                 l1963 E1A0  
                                                 l1955 E180  
                                                 l1947 E0F0  
                                                 l3564 DE4A  
                                                 l3548 DD3C  
                                                 l3580 CE7E  
                                                 l3572 CCAE  
                                                 l3492 D0D0  
                                                 l2780 B5FC  
                                                 l2772 B55E  
                                                 l2924 FADA  
                                                 l3636 2288  
                                                 l2940 C9B4  
                                                 l3724 3B0C  
                                                 l1884 E918  
                                                 l2916 1D0C  
                                                 l1796 DBA2  
                                                 l1980 E1E4  
                                                 l1972 E1C4  
                                                 l1964 E1A4  
                                                 l1956 E184  
                                                 l1948 E102  
                                                 l3573 CCAA  
                                                 l3485 D064  
                                                 l3477 CFC0  
                                                 l2837 F3C2  
                                                 l2765 B500  
                                                 l2749 B42C  
                                                 l2693 B0EA  
                                                 l2685 B05C  
                                                 l3645 234E  
                                                 l3637 2282  
                                                 l3653 1520  
                                                 l3733 5860  
                                                 l2941 C9EA  
                                                 l3725 3AAA  
                                                 l1885 E9C0  
                                                 l1877 1C10  
                                                 l1789 DB14  
                                                 l1973 E1C8  
                                                 l1965 E1A8  
                                                 l1957 E188  
                                                 l1949 E114  
                                                 l3558 DDAA  
                                                 l3574 CCBE  
                                                 l3486 D028  
                                                 l3478 CFBC  
                                                 l3670 4F54  
                                                 l3718 508A  
                                                 l2782 B676  
                                                 l2790 B654  
                                                 l2766 B4CE  
                                                 l2694 B0FA  
                                                 l2678 AFF4  
                                                 l2950 CBD0  
                                                 l2942 CA20  
                                                 l3726 3B02  
                                                 l1990 E208  
                                                 l1982 E1E8  
                                                 l1974 E1CC  
                                                 l1966 E1AC  
                                                 l1958 E18C  
                                                 l3591 CF5A  
                                                 l3575 CCDC  
                                                 l3495 D13C  
                                                 l3719 5084  
                                                 l2783 B610  
                                                 l2775 B5B6  
                                                 l2767 B4D8  
                                                 l2687 B082  
                                                 l3639 22CA  
                                                 l2951 CC06  
                                                 l2943 CA56  
                                                 l1991 E20C  
                                                 l1983 E1EC  
                                                 l1975 E1D0  
                                                 l1967 E1B0  
                                                 l1959 E190  
                                                 l3592 CF78  
                                                 l3568 CC6E  
                                                 l3496 D104  
                                                 l2792 B65C  
                                                 l2784 B624  
                                                 l2768 B4E6  
                                                 l2688 B092  
                                                 l3664 5724  
                                                 l3656 1582  
                                                 l2944 CA8C  
                                                 l2936 C912  
                                                 l2960 F710  
                                                 l1992 E210  
                                                 l1984 E1F0  
                                                 l1976 E1D4  
                                                 l1968 E1B4  
                                                 l3569 CC6A  
                                                 l3489 D0E0  
                                                 l2793 B66E  
                                                 l2777 B5D2  
                                                 l2697 B12C  
                                                 l2929 FBB4  
                                                 l3657 152A  
                                                 l2945 CAC2  
                                                 l2961 F604  
                                                 l1985 E1F4  
                                                 l1977 E1D8  
                                                 l1969 E1B8  
                                                 l3586 CED4  
                                                 l3674 3020  
                                                 l2778 B5E4  
                                                 l2946 CAF8  
                                                 l2938 C948  
                                                 l2962 F69A  
                                                 l3690 144C  
                                                 l1986 E1F8  
                                                 l1978 E1DC  
                                                 l3579 CE9C  
                                                 l3499 D126  
                                                 l2795 B68E  
                                                 l2787 B632  
                                                 l2699 B152  
                                                 l3659 15C8  
                                                 l2947 CB2E  
                                                 l2939 C97E  
                                                 l2963 F6CC  
                                                 l3691 14BA  
                                                 l1987 E1FC  
                                                 l1979 E1E0  
                                                 l3588 CF18  
                                                 l3676 305C  
                                                 l2796 B6BA  
                                                 l2788 B646  
                                                 l2948 CB64  
                                                 l3684 4A34  
                                                 l1996 4714  
                                                 l1988 E200  
                                                 l3589 CF36  
                                                 l3677 309E  
                                                 l2981 4810  
                                                 l2949 CB9A  
                                                 l1997 46F8  
                                                 l1989 E204  
                            ?__offset_from_file_number 0060  
                                                 l2982 4824  
                                                 l2798 B6C4  
                                                 l2967 C506  
                                                 l1999 46FC  
                                                 l3696 4406  
                                                 l3688 13F0  
                                                 l2968 C51C  
                                                 l3697 43CC  
                  __end_of__encoder_next_arc_step_size 3EE4  
                          __encoder_next_arc_step_size 3E74  
                        __size_of_encoder_statemachine 0868  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9910 098A  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9675 3BD0  
                                                 u9765 466E  
                                                 u9785 3D2E  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009C  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CB  
                                       _ResetSenseData 4294  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 2280  
                                                 _atol 14DE  
                                                 _main 3526  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 4F2E  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 4A06  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5316  
                                                 btemp 005F  
                                                 _utoa 3018  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00AC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5936  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 58D0  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 5436  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E7F4  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2430  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 57E4  
                               __get_available_cluster 26A8  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 567C  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3A26  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 52AE  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1D42  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l12120 DE3C  
                                                l13184 C80E  
                                                l12544 0AFE  
                                                l13188 C838  
                                                l12900 F1FE  
                                                l12822 43CC  
                                                l14422 1B74  
                                                l16112 FA70  
                                                l16132 FAD2  
                                                l15172 2316  
                                                l15404 3B42  
                                                l14358 5542  
                                                l13832 3AAA  
                                                l15520 3EE8  
                                                l13762 26CC  
                                                l13596 BF14  
                                                l15444 EA68  
                                                l14388 1AC8  
                                                l14830 F790  
                                                l15464 EB12  
                                                l17128 0BF0  
                                                l15712 2D86  
                                         spi_tx@length 0062  
                                                l13786 276C  
                                                l15730 2DDA  
                                                l17092 4DD0  
                                                l14844 F7D6  
                                                l14836 F79E  
                                                l15804 ED46  
                                                l15830 EDBE  
                                                l15814 ED6E  
                                                l15750 EC48  
                                                l17424 FE98  
                                                l18240 A508  
                                                l14936 F866  
                                                l15816 ED76  
                                                l16642 E37E  
                                                l17098 4DDC  
                                                l18226 A4BA  
                                                l15578 0400  
                                                l14954 550E  
                                                l15842 EDE4  
                                                l17604 45FA  
                                                l16556 53B2  
                                                l17452 FEFA  
                                                l15852 EE0C  
                                                l15764 EC90  
                                                l15854 EE14  
                                                l16808 0900  
                                                l15944 2BA4  
                                                l17608 4618  
                                                l15792 ED20  
                                                l16738 51A6  
                                                l15778 ECD8  
                                                l14998 D2FC  
                                                l19360 3E54  
                                                l19352 E22E  
                                                l19362 3E6A  
                                                l19354 E346  
                                                l19364 3EC4  
                                                l19366 3EDA  
                                        ___fltol@sign1 0068  
                                      __end_of___aldiv 2844  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 2EC2  
                                                ?_atol 006C  
                                      __end_of___fladd D2CA  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DE66  
                                                ?_itoa 0070  
                                      __end_of___flneg 53A8  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CF8E  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 21A2  
                                      __end_of___lldiv 39A2  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11010 4F8E  
                                                u10140 DDA6  
                                                u10400 2102  
                                                u10170 DDFC  
                                                u10330 CED0  
                                                u11130 43EE  
                                                u10180 DE20  
                                                u10405 20F8  
                                                u10270 CCCA  
                                                u10360 CF26  
                                                u10280 CE40  
                                                u10440 217A  
                                                u10520 032A  
                                                u11208 F0F4  
                                                u11400 D830  
                                                u11137 43E4  
                                                u11209 F108  
                                                u10370 CF44  
                                                u11155 F072  
                                                u11500 41AE  
                                                u10285 CE36  
                                                u13110 2C6C  
                                                u11510 41BA  
                                                u13200 DA36  
                                                u13120 2C8C  
                                                u11265 D618  
                                      __end_of___llmod 416A  
                               __end_of_USBDeviceTasks 00E8  
                                                u11418 D83C  
                                                u14010 062A  
                                                u13210 DA62  
                                                u11419 D850  
                                                u10900 0B8C  
                                                u11348 D724  
                                                u11516 41BC  
                                                u11508 41B2  
                                                u11460 4176  
                                                u11349 D738  
                                                u10830 0B44  
                                                u11390 D82E  
                                                u12430 C06E  
                                                u11470 4184  
                                                u11288 D650  
                                                u12440 C080  
                                                u12360 BF44  
                                                u12328 BE38  
                                                u14024 0642  
                                                u13400 1B74  
                                                u13320 5562  
                                                u13240 DAEC  
                                                u13160 D986  
                                                u11480 4192  
                                                u11289 D664  
                                                u12329 BE4C  
                                                u14025 063C  
                                                u12338 BE6C  
                                                u14034 067C  
                                                u11810 3952  
                                                u12610 276C  
                                                u11490 41A0  
                                                u12339 BE80  
                                                u14035 0676  
                                                u14131 4BAE  
                                                u14115 4918  
                                                u10940 5292  
                                                u10860 0B5E  
                                                u14220 EA7C  
                                                u13260 DB68  
                                                u13180 DA00  
                                                u11468 417A  
                                                u10950 525E  
                                                u12470 C10E  
                                                u14230 EAF2  
                                                u13430 3C92  
                                                u12630 3274  
                                                u13270 DB74  
                                                u13190 DA2A  
                                                u11478 4188  
                                                u10880 0B78  
                                                u13440 E814  
                                                u11840 4126  
                                                u11488 4196  
                                                u14160 3B90  
                                                u11585 4560  
                                                u11770 C7A0  
                                                u12378 BF68  
                                                u14074 06DA  
                                                u14058 06A4  
                                                u14410 133E  
                                                u11498 41A4  
                                                u12379 BF7C  
                                                u14075 06D4  
                                                u14059 06BA  
                                                u11595 557C  
                                                u13531 F7A8  
                                                u13700 FD9C  
                                                u10980 4A7E  
                                                u14260 EB26  
                                                u14420 1370  
                                                u13445 E808  
                                                u14270 EB80  
                                                u13390 1B6A  
                                                u12670 4090  
                                                u12590 272C  
                                                u14430 138A  
                                                u14415 1334  
                                                u15240 2E68  
                                                u14600 2E10  
                                                u13465 E8AC  
                                                u14425 1366  
                                                u15410 D0E8  
                                                u12690 3AD0  
                                                u14370 03C8  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15180 27DE  
                                                u14700 ED6E  
                                                u14620 EC72  
                                                u17110 318E  
                                                u14375 03BE  
                                                u15360 D094  
                                                u17200 AFEE  
                                                u14480 E660  
                                                u14720 EDA0  
                                                u14640 ECBA  
                                                u17130 31A2  
                                                u15370 D0A4  
                                                u13770 45DC  
                                                u14570 2DBC  
                                                u14820 2BD4  
                                                u15620 D28A  
                                                u15540 D21C  
                                                u15380 D0A6  
                                                u14740 EDDC  
                                                u14660 ED02  
                                                u14485 E656  
                                                u17310 B0F6  
                                                u17230 B026  
                                                u15800 E378  
                                                u18120 F3AC  
                                                u18200 A4EA  
                                                u17320 B126  
                                                u17240 B056  
                                                u14920 FAB8  
                                                u14760 EE0C  
                                                u14680 ED3E  
                                                u15570 D234  
                                                u18130 F3BC  
                                                u16451 F75C  
                                                u15820 E3AE  
                                                u18140 F3D2  
                                                u17500 B2EA  
                                                u14780 EE3E  
                                                u18150 F3E2  
                                                u17510 B31C  
                                                u17350 B15E  
                                                u17270 B08E  
                                                u17190 AFBE  
                                                u17360 B18E  
                                                u17280 B0BE  
                                                u14960 FB50  
                                                u16730 FEBC  
                                                u16490 4E10  
                                                u14875 04E2  
                                                u19107 4BD4  
                                                u17540 B354  
                                                u14980 FBAA  
                                                u19117 4874  
                                                u13998 05F8  
                                                u16590 2F7E  
                                                u17550 B386  
                                                u19127 4886  
                                                u13999 060C  
                                                u16760 FF5E  
                                                u19137 4890  
                                                u17810 B5A4  
                                      __end_of___lwdiv 4AAE  
                                                u17811 B5A2  
                                                u18700 3562  
                                                u15990 E55E  
                                                u19097 4BC0  
                         __flash_write_to_buffer@start 0073  
                                                u17790 B54E  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 4FB6  
                                                i2l300 32F4  
                                                i2l220 3444  
                                                i2l214 288C  
                                                i2l222 345A  
                                                i2l231 1654  
                                                i2l232 15FE  
                                                i2l160 FFF2  
                                                i2l321 33E2  
                                                i2l145 012E  
                                                i2l250 2558  
                                                i2l226 3746  
                                                i2l322 33DC  
                                                i2l162 0018  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 4FF6  
                                                i2l315 5204  
                                                i2l147 0156  
                                                i2l155 FFB8  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2940  
                                                i2l260 0E0C  
                                                i2l332 442A  
                                                i2l180 50D6  
                                                i2l236 167E  
                                                i2l308 4FF4  
                                                i2l316 5202  
                                                i2l172 00A6  
                                                i2l164 002E  
                                                i2l156 FFC8  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 25D0  
                                                i2l245 2526  
                                                i2l341 2944  
                                                i2l261 0DEA  
                                                i2l149 018E  
                                                i2l165 003A  
                                                i2l157 FFD0  
                                                i2l254 2598  
                                                i2l342 29C2  
                                                i2l334 4474  
                                                i2l174 00C4  
                                                i2l166 0062  
                                                i2l247 2530  
                                                i2l343 2988  
                                                i2l263 0E80  
                                                i2l167 006C  
                                                i2l159 FFE6  
                                                i2l264 0E66  
                                                i2l184 11F6  
                                                i2l192 1138  
                                                i2l432 24DE  
                                                i2l280 082E  
                                                i2l272 21EA  
                                                i2l360 237C  
                                                i2l176 00E0  
                                                i2l249 2590  
                                                i2l345 29A8  
                                                i2l425 247C  
                                                i2l281 072A  
                                                i2l361 238E  
                                                i2l169 007E  
                                                i2l186 1220  
                                                i2l426 244C  
                                                i2l274 225E  
                                                i2l362 2394  
                                                i2l179 50C8  
                                                i2l283 073C  
                                                i2l355 23EC  
                                                i2l188 129E  
                                                i2l436 249E  
                                                i2l428 248E  
                                                i2l372 DE86  
                                                i2l284 07C6  
                                                i2l364 239A  
                                                i2l356 2368  
                                                i2l437 24B4  
                                                i2l429 246A  
                                                i2l381 DFDE  
                                                i2l373 DE8C  
                                                i2l293 3330  
                                                i2l365 23B6  
                                                i2l534 0DB4  
                                                i2l438 24BE  
                                                i2l550 2B06  
                                                i2l286 07CC  
                                                i2l294 32C6  
                                                i2l366 23CE  
                                                i2l358 2370  
                                                i2l535 0D20  
                                                i2l439 24D4  
                                                i2l391 E06A  
                                                i2l383 DFA8  
                                                i2l375 DEF4  
                                                i2l287 0822  
                                                i2l359 2376  
                                                i2l384 DFC4  
                                                i2l537 0DAC  
                                                i2l545 2B38  
                                                i2l393 E0BC  
                                                i2l377 DF3C  
                                                i2l289 0828  
                                                i2l297 3346  
                                                i2l562 2B0C  
                                                i2l546 2AA0  
                                                i2l386 E02A  
                                                i2l298 32D6  
                                                i2l387 E036  
                                                i2l379 DF5E  
                                                i2l299 32DA  
                                                i2l900 4ABC  
                                                i2l820 389A  
                                                i2l388 E0B0  
                                                i2l821 38A2  
                                                i2l822 38AA  
                                                i2l904 4ACE  
                                                i2l816 38CC  
                                                i2l824 38B4  
                                                i2l906 4ADA  
                                                i2l826 38BE  
                                                i2l780 497A  
                                                i2l783 49B0  
                                                _UADDR 000F38  
                                                i2l897 4AEC  
                                                i2l898 4AB2  
          __end_of_motor_calculate_position_in_degrees 20C4  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 1FE6  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4906  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 32BA  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E5C0  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2A8C  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 348E  
            motor_divide_jump@target_position_in_steps 00C4  
                                                _sd000 A2E5  
                               __write_value_to_offset 5210  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 49B2  
                                         _gblCBWLength 015E  
                __i2c_display_send_init_sequence@F6939 02AF  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 41CE  
                                      __end_of_isdigit 572C  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 42F6  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 597C  
                                                _ultoa 13E0  
                             __parse_command_long@data 00B3  
                            __data_sector_from_cluster 58B0  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0CAE  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 43BA  
                motor_go_to_steps_position@overhead_cw 00B3  
                                      __end_of_stricmp 45E8  
                                      __end_of_strncmp 3B28  
                                      __end_of_toupper 5864  
                                     __end_ofi2_memcpy 4534  
                                     __end_ofi2_memset 54E8  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler F044  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DBAC  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 35BC  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 52E2  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 584C  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5770  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5832  
                        _ExternalFlash_MediaInitialize 574E  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 18B8  
                              __end_of_fat_resize_file 13E0  
                                         __end_of_atoi 2358  
                                         __end_of_atol 15DA  
                                         __end_of_main 35BC  
                                         __end_of_itoa 4F72  
               __end_of__ic2_display_set_ddram_address 56C4  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 56A0  
                                         __end_of_ltoa 4A5A  
                      __end_of_i2c_display_write_fixed 4A06  
                                         __end_of_utoa 30C2  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C3  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 57CA  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 592C  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F22E  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FD08  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest FBBA  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5922  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 2EC2  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3C20  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5980  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 597C  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5902  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5348  
                               __flash_write_to_buffer 4B02  
               __end_of__ic2_display_set_cgram_address 553C  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5512  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 57FE  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 5952  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4BF4  
                                     __end_of_adc_init 47FE  
                                               i2l1203 3A82  
                                               i2l1204 3A52  
                                               i2l1141 595C  
                                               i2l1126 5964  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 515E  
                                               i2l1158 4E96  
                                               i2l1159 4E7A  
                                               i2l2480 B852  
                                               i2l2481 B8A8  
                                               i2l2482 B8D2  
                                               i2l2650 1722  
                                               i2l2492 BBB6  
                                               i2l2484 BB7C  
                                               i2l2660 1792  
                                               i2l2652 1738  
                                               i2l2644 1746  
                                               i2l2477 B850  
                                               i2l2653 1740  
                                               i2l3702 54D6  
                                               i2l2654 17B6  
                                               i2l2662 17A8  
                                               i2l3703 54C6  
                                               i2l2495 BD1C  
                                               i2l2487 B9C6  
                                               i2l2479 BDA6  
                                               i2l2663 17B0  
                                               i2l2647 1700  
                                               i2l2496 BC72  
                                               i2l2488 BA1A  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2489 BB3C  
                                               i2l2657 1770  
                                               i2l2498 BD7A  
                                               i2l3696 4522  
                                               i2l3697 44EA  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 474E  
                                     __end_of__get_fbr E356  
                                     __end_of__get_mbr 26A8  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AB  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F22E  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0372  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C194  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 58B0  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3A26  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 5464  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 3D8E  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 3F52  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 47FE  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 3C9A  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 55E0  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 50B8  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 43BA  
                                   ?_fat_get_file_size 0095  
                                               _memset 53A8  
                     __end_of__sector_from_file_number 5378  
                              __end_of_i2c_eeprom_read 495C  
                                               _params 021F  
                                               clear_0 3604  
                                               clear_1 3616  
                                               clear_2 3622  
                                               clear_3 362E  
                                               clear_4 3640  
                            _ExternalFlash_SectorWrite 5246  
                                    api_parse@inBuffer 00C4  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 56A0  
                                               _spi_tx 469C  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 5630  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6942 02A6  
                                               _strlen 507A  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00B9  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 00A7  
                                     __end_of_tmr0_isr 5168  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A0  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1B78  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00B5  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0174  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 0320  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 503A  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4BA4  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4098  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4098  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B7  
                                            ??_toupper 0060  
                                   __size_of__add_item 00E4  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00CF  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 45E8  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 55B8  
                                           __accesstop 0060  
                              __end_of__initialization 3646  
                       __end_of_motor_speed_from_index 587A  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 512E  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5918  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3E04  
                          __end_of__parse_command_long 4358  
                                   __size_of__get_data 002A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3D14  
                                   __size_of__get_item 0150  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5818  
                          _motor_increase_manual_speed 57FE  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 50F4  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4CE4  
                                         __pidataBANK4 4B54  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 553C  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 29CC  
                                        __end_of_ultoa 14DE  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0970  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 11E0  
                       __end_of_motor_set_manual_speed 4CE4  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 4C44  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1B78  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C194  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BDA8  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4102  
                               flash_partial_read@page 0087  
                                        __get_data@idx 0060  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 4642  
                                    __end_of__i2c_read 36E4  
                                    __end_of__i2c_send 5936  
                               _USBStdGetStatusHandler 32BA  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 5952  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0ECA  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 2E14  
                                        __flash_wakeup 4856  
                             __fill_buffer_get_display 2B48  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 16D4  
                __end_of_APP_DeviceCustomHIDInitialize 5316  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 52E2  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00A9  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7FC  
                                           _fat_format EC3E  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1D42  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C546  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009A  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 335A  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0ECA  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EA1A  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2358  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l12426 2464  
                                              i2l13364 21E2  
                                              i2l12742 4ADA  
                                              i2l13294 54C6  
                                              i2l12738 4ABC  
                                              i2l12790 2530  
                                              i2l16544 44EA  
                                              i2l17352 0126  
                                              i2l17380 0186  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l17558 0076  
                                              i2l18608 BD7A  
                                              i2l18528 B8A8  
                                              i2l19374 38E4  
                                              i2l19376 3918  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4B02  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 58D0  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 25D8  
                                    __end_of__get_data 5512  
                                    __end_of__get_date 58F6  
                                  _USBStdSetCfgHandler 21A2  
                                    __end_of__get_item FBBA  
                                   i2__i2c_eeprom_busy 5656  
                                    __end_of__get_time 58EA  
                     __end_of_maximum_speed_arc_string A237  
                                    __end_of__get_root F8F6  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1F08  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 11E0  
                       ??_motor_divide_jump_to_nearest 00C3  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3EE4  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position D5EA  
                           _motor_go_to_steps_position D2CA  
             __end_of_motor_nonzero_steps_from_degrees 4DCA  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4D7E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 58A0  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 47A6  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3C20  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 3BA4  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2776  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0970  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 05E8  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0076  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 44D8  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 447A  
                                    __end_of__spi_init 51A0  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0A8A  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2776  
                                              ___almod 2E14  
                                            ?_spi_init 0001  
                                              ___fladd CF8E  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0BA0  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DBAC  
                                     _ToSendDataBuffer 0338  
                                              ___flneg 5378  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 58C0  
                                              ___flmul CC3C  
                                              ___fltol 20C4  
                                              ___lldiv 391E  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4102  
                                              ___lwdiv 4A5A  
                              ?_motor_schedule_command 00A0  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 4F72  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A4  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 594A  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F0  
                                              __pcinit 35BC  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5246  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3526  
                                              __ptext1 18B8  
                                              __ptext2 5790  
                                              __ptext3 57AE  
                                              __ptext4 5464  
                                              __ptext5 4906  
                                              __ptext6 3650  
                                              __ptext7 590E  
                                              __ptext8 5918  
                                              __ptext9 5922  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 4232  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00C8  
                                 __motor_run@direction 0099  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 54BC  
                              __read_value_from_offset 4E14  
                              _fat_read_from_file_fast E7F4  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0DBC  
                                              _isdigit 570A  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C546  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 58C0  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 590E  
                             __offset_from_file_number 5566  
                             __end_of_i2c_eeprom_write 3AA8  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit 00E8  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 458E  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3AA8  
                                              _toupper 584C  
                                  _flash_partial_write 3FC0  
                                 end_of_initialization 3646  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 495C  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 00AA  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 071A  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 567C  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                                            i2u1111_40 25C2  
                             __flash_partial_read@data 0079  
                                            i2u1111_47 25B8  
                                            i2u1201_40 0792  
                                            i2u1201_47 0788  
                                            i2u1202_40 07C2  
                                            i2u1202_47 07B8  
                                            i2u1204_40 0818  
                                            i2u1204_47 080E  
                                            i2u1109_40 2582  
                                            i2u1109_47 2578  
                                            i2u1070_40 2AE8  
                             ?_USBStdFeatureReqHandler 0001  
                             __flash_partial_read@page 0073  
                                            i2u1226_40 E050  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1408_45 3A32  
                                            i2u1409_40 3A8A  
                                            i2u1290_40 48F2  
                                            i2u1290_46 48F4  
                                            i2u1700_40 00E4  
                                            i2u1197_40 2216  
                                            i2u1285_40 48B8  
                                              ltoa@val 007C  
                                            i2u1286_40 48C4  
                                            i2u1285_48 48BA  
                                            i2u1287_40 48D0  
                                            i2u1286_48 48C6  
                                            i2u1288_40 48DC  
                                            i2u1287_48 48D2  
                                            i2u1289_40 48E8  
                                            i2u1288_48 48DE  
                                            i2u1289_48 48EA  
                                    __end_of_motor_isr BDA8  
                                            i2u1566_40 450C  
                                            i2u1566_47 4502  
                                            i2u1671_40 01EA  
                                            i2u1851_40 B9B6  
                                            i2u1668_40 014A  
                                            i2u1846_41 B824  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1856_40 BB92  
                                            i2u1857_40 BBB2  
                                            i2u1849_41 B8EC  
                      __parse_command_long@out_idx_ptr 00B7  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5408  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 33F4  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 3526  
                       __end_of_motor_schedule_command 2F6E  
                                    __end_of_spi_tx_tx 3808  
                             __end_of_i2c_display_init 4BF4  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5902  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 58F6  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                          ?_fat_format 0001  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01F0  
                                              utoa@buf 0067  
                                           _motor_init 5790  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 15DA  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4EA4  
              __end_of__cluster_from_sector_and_offset 55E0  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 55B8  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4B54  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 50F4  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C3  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C7  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 0006  
                                   _ReceivedDataBuffer 0378  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 49B2  
                           motor_arc_move@arc_in_steps 00AC  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3E74  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3E04  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 10DA  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5984  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5980  
                    __parse_jump_steps@number_of_steps 00AF  
                         __end_of__display_signed_itoa 4F2E  
                     __end_of_motor_steps_from_degrees 1E26  
                  __end_of__motor_get_speed_in_degrees 05E8  
                          __motor_get_speed_in_degrees 04AE  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FA6A  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 402C  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CC3C  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3808  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1E26  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit FFA2  
                __end_of_USBIncrement1msInternalTimers 5790  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5770  
                                       __end_of___lmul 4856  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5608  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 0FD4  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit 022E  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 441A  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 53D8  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8784 00A7  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 46F6  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 50B8  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 35BC  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 1FE6  
                    __end_of__get_available_root_entry 5566  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 3778  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E0E2  
                                  __flash_partial_read 3D14  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 2908  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 33F4  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 038E  
                                            __i2c_read 3650  
                                            __i2c_send 592C  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 594A  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5754  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F5BA  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 574E  
                          _motor_decrease_manual_speed 572C  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3C9A  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 12E2  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 071A  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 17C8  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 17C8  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 0062  
                                   __end_of__i2c_start 595A  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 4C44  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C7  
                                            __add_item 1C5E  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 335A  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 57CA  
                          api_parse@receivedDataLength 00C6  
                                     api_parse@out_idx 00CD  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0BA0  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 56C4  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8180 0061  
         __end_of_i2c_display_program_custom_character 3BA4  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3B28  
                                            __get_data 54E8  
                                            __get_date 58EA  
                                    _flash_sector_read 5608  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4E5C  
                                            __get_item FA6A  
                      __end_of_fat_read_from_file_fast EA1A  
                                       _motor_set_zero 30C2  
                          ?_motor_go_to_steps_position 00A7  
                                            __get_time 58DE  
                                            __get_root F75E  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 48AE  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4D7E  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 5210  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 570A  
                                          __parse_item C8D4  
                  __end_of__divide_jump_size_decrement 3FC0  
                          __divide_jump_size_decrement 3F52  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 4FB6  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 474E  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 52AE  
          __end_of__step_position_from_divide_position 1A90  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 19A4  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 10DA  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2D66  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A7  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 5818  
                                            _api_parse 0846  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 18B8  
                              __fill_buffer_get_status EE54  
                                   _APP_DeviceMSDTasks 588E  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A7  
                                             ?___fldiv 006E  
                                            __ptext100 3E74  
                                            __ptext101 503A  
                                            __ptext110 EA1A  
                                            __ptext102 3F52  
                                             ?___flneg 006E  
                                            __ptext111 507A  
                                            __ptext103 A330  
                                            __ptext200 53D8  
                                            __ptext120 5378  
                                            __ptext112 4F2E  
                                            __ptext104 5864  
                                            __ptext201 4FB6  
                                            __ptext121 CF8E  
                                            __ptext113 3018  
                                            __ptext105 04AE  
                                            __ptext210 54BC  
                                            __ptext202 5770  
                                            __ptext130 BDA8  
                                            __ptext122 FE56  
                                            __ptext114 4F72  
                                            __ptext106 47FE  
                                            __ptext211 32BA  
                                            __ptext203 335A  
                                            __ptext131 D5EA  
                                            __ptext123 53A8  
                                            __ptext115 4A5A  
                                            __ptext107 4EEA  
                                            __ptext220 58C0  
                                            __ptext212 071A  
                                            __ptext204 44D8  
                                            __ptext140 0A8A  
                                            __ptext132 597C  
                                            __ptext124 5316  
                                            __ptext116 2E14  
                                            __ptext108 1E26  
                                            __ptext221 0CAE  
                                            __ptext213 DE66  
                                            __ptext205 3808  
                                            __ptext141 0970  
                                            __ptext133 5246  
                                            __ptext125 45E8  
                                            __ptext117 2776  
                                            __ptext109 0BA0  
                                            __ptext230 0DBC  
                                            __ptext222 4358  
                                            __ptext214 3898  
                                            __ptext206 15DA  
                                            __ptext150 52AE  
                                            __ptext142 0ECA  
                                            __ptext134 4C44  
                                            __ptext126 588E  
                                            __ptext118 4DCA  
                                            __ptext231 2844  
                                            __ptext223 5832  
                                            __ptext215 4AAE  
                                            __ptext207 33F4  
                                            __ptext151 348E  
                                            __ptext143 4294  
                                            __ptext135 4B02  
                                            __ptext127 E356  
                                            __ptext119 F22E  
                                            __ptext232 2908  
                                            __ptext224 5980  
                                            __ptext216 2A8C  
                                            __ptext208 2358  
                                            __ptext160 43BA  
                                            __ptext152 29CC  
                                            __ptext144 527A  
                                            __ptext136 3778  
                                            __ptext128 05E8  
                                            __ptext233 2506  
                                            __ptext225 52E2  
                                            __ptext217 2430  
                                            __ptext209 21A2  
                                            __ptext161 F40C  
                                            __ptext153 58F6  
                                            __ptext145 5608  
                                            __ptext137 4642  
                                            __ptext129 4232  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext234 0000  
                                            __ptext226 11E0  
                                            __ptext218 495C  
                                            __ptext170 42F6  
                                            __ptext162 2B48  
                                            __ptext154 587A  
                                            __ptext146 3D14  
                                            __ptext138 3BA4  
                                            __ptext227 50B8  
                                            __ptext219 10DA  
                                            __ptext171 39A2  
                                            __ptext163 5436  
                                            __ptext155 574E  
                                            __ptext147 56C4  
                                            __ptext139 F044  
                                            __ptext228 36E4  
                                            __ptext180 022E  
                                            __ptext172 4C94  
                                            __ptext164 0846  
                                            __ptext156 5936  
                                            __ptext148 4856  
                                            __ptext229 441A  
                                            __ptext181 20C4  
                                            __ptext173 5940  
                                            __ptext165 F8F6  
                                            __ptext157 316C  
                                            __ptext149 469C  
                                            __ptext190 3A26  
                                            __ptext182 CC3C  
                                            __ptext174 FD08  
                                            __ptext166 4EA4  
                                            __ptext158 1F08  
                                            __ptext191 4E5C  
                                            __ptext183 DBAC  
                                            __ptext175 2EC2  
                                            __ptext167 30C2  
                                            __ptext159 EE54  
                                            __ptext192 5656  
                                            __ptext184 0FD4  
                                            __ptext176 5902  
                                            __ptext168 D2CA  
                                            __ptext193 48AE  
                                            __ptext177 C546  
                                            __ptext169 5972  
                                            __ptext194 595A  
                                            __ptext186 512E  
                                            __ptext178 1D42  
                                            __ptext195 5962  
                                            __ptext187 16D4  
                                            __ptext179 1FE6  
                                            __ptext196 596A  
                                            __ptext188 B7FC  
                                            __ptext197 FFA2  
                                            __ptext189 5818  
                                            __ptext198 00E8  
                                            __ptext199 51D8  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5168  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AB  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1F08  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 0FD4  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4EEA  
                  __end_of__divide_jump_size_increment 507A  
                          __divide_jump_size_increment 503A  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 5972  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F8F6  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 56E8  
                                        _fat_find_file 1A90  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2C00  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 447A  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CD  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 5630  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 316C  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5940  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4DCA  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_data 0060  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F75E  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2CB4  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D8D6  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5464  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2506  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 16D4  
                             __fat_offset_from_cluster 57E4  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                             i2u984_48 0D44  
                                             i2u984_49 0D58  
                                           ?_api_parse 00C4  
                                             i2u986_48 0D6A  
                                             i2u986_49 0D80  
                                             i2u988_44 0D9E  
                                             i2u988_45 0D98  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E356  
                                            _motor_isr B7FC  
                           _USBDeferINDataStagePackets 0166  
                                         ??_fat_format 0084  
                                 _active_configuration 0159  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F5BA  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F40C  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 596A  
                                 __end_ofi2__i2c_write 4EA4  
                                 _USBConfigureEndpoint 36E4  
                                         ??__motor_run 0095  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 348E  
                                            _spi_tx_tx 3778  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 593C  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2CB4  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 5940  
                                             i2_memcpy 44D8  
                                             i2_memset 54BC  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2C00  
                                          __write_root 4D32  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4E14  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 4FFA  
                      motor_schedule_command@direction 00A6  
                             __sector_from_file_number 5348  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00BF  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2D66  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 35D0  
                                            copy_data1 35F0  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 2280  
                                   __end_of_fat_format EE54  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 57AE  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C8D4  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5918  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0372  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FD08  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 58DE  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2B48  
                                      api_parse@in_idx 00CE  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 527A  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A7  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 416A  
                                      _MSDWriteHandler D5EA  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 47A6  
                                             __get_fat 46F6  
                                             __get_fbr E0E2  
                                             __get_mbr 25D8  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AD  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 588E  
                           _ExternalFlash_CapacityRead 587A  
                                             ___xxtofl 022E  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 58A0  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5590  
                                             __ptext11 58D0  
                                             __ptext20 E0E2  
                                             __ptext12 4FFA  
                                             __ptext21 46F6  
                                             __ptext13 5168  
                                             __ptext30 5512  
                                             __ptext22 54E8  
                                             __ptext14 3EE4  
                                             __ptext31 4BA4  
                                             __ptext23 567C  
                                             __ptext15 58A0  
                                             __ptext40 12E2  
                                             __ptext32 4BF4  
                                             __ptext24 51A0  
                                             __ptext16 2D66  
                                             __ptext41 E5C0  
                                             __ptext33 416A  
                                             __ptext25 49B2  
                                             __ptext17 EC3E  
                                             __ptext50 55B8  
                                             __ptext42 0372  
                                             __ptext34 594A  
                                             __ptext26 56E8  
                                             __ptext18 F75E  
                                             __ptext51 58DE  
                                             __ptext43 4D32  
                                             __ptext35 5952  
                                             __ptext27 56A0  
                                             __ptext19 25D8  
                                             __ptext60 F5BA  
                                             __ptext52 58EA  
                                             __ptext44 3FC0  
                                             __ptext36 592C  
                                             __ptext28 50F4  
                                             __ptext61 1B78  
                                             __ptext53 553C  
                                             __ptext45 4534  
                                             __ptext37 2CB4  
                                             __ptext29 3B28  
                                             __ptext70 3C9A  
                                             __ptext62 E7F4  
                                             __ptext54 1C5E  
                                             __ptext46 D8D6  
                                             __ptext38 2C00  
                                             __ptext71 402C  
                                             __ptext63 3214  
                                             __ptext55 4A06  
                                             __ptext47 5210  
                                             __ptext39 C194  
                                             __ptext80 14DE  
                                             __ptext72 5630  
                                             __ptext64 4E14  
                                             __ptext56 13E0  
                                             __ptext48 26A8  
                                             __ptext81 2280  
                                             __ptext73 5348  
                                             __ptext65 474E  
                                             __ptext57 4102  
                                             __ptext49 447A  
                                             __ptext90 AF94  
                                             __ptext82 570A  
                                             __ptext74 5566  
                                             __ptext66 57CA  
                                             __ptext58 391E  
                                             __ptext91 4D7E  
                                             __ptext83 55E0  
                                             __ptext75 1A90  
                                             __ptext67 57E4  
                                             __ptext59 41CE  
                                             __ptext92 57FE  
                                             __ptext84 FA6A  
                                             __ptext76 3AA8  
                                             __ptext68 58B0  
                                             __ptext93 FBBA  
                                             __ptext85 47A6  
                                             __ptext77 C8D4  
                                             __ptext69 3C20  
                                             __ptext94 2F6E  
                                             __ptext86 5490  
                                             __ptext78 458E  
                                             __ptext95 19A4  
                                             __ptext87 4098  
                                             __ptext79 584C  
                                             __ptext96 572C  
                                             __ptext88 5978  
                                             __ptext97 17C8  
                                             __ptext89 3D8E  
                                             __ptext98 3E04  
                                             __ptext99 5408  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4294  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4232  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                          ??__get_root 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 42F6  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 458E  
                           __flash_copy_page_to_buffer 4534  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 3214  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 48AE  
                              __parse_set_manual_speed 39A2  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3898  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 5490  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 402C  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FE56  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 512E  
                                  _USBCtrlTrfInHandler 2908  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00C9  
                               __end_of__i2c_wait_idle 41CE  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5972  
                           __end_of_motor_items_in_cue 590E  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5962  
                                             _spi_init 4FFA  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 441A  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5590  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2844  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00B3  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4906  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa EC3E  
                motor_go_to_steps_position@distance_cw 00BB  
                                     i2_ResetSenseData 4358  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C3  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status F044  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00AE  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2A8C  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 29CC  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5922  
                              __end_of_fat_create_file 04AE  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 5978  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 391E  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3898  
              motor_schedule_command@distance_in_steps 00A0  
                                   __end_of_motor_init 57AE  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 527A  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4EEA  
                __end_of__flash_write_page_from_buffer 469C  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4642  
                             ??_motor_schedule_command 00A6  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 5656  
                              __end_of_MSDWriteHandler D8D6  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5864  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0DBC  
                                   _USBWakeFromSuspend 51D8  
                                ??__parse_command_long 00B9  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 56E8  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DE66  
                                      _fat_modify_file E5C0  
                                  i2_SYSTEM_Initialize 4AAE  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2506  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2F6E  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 51A0  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4C94  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F40C  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0A8A  
                                  ??_motor_divide_jump 00C3  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5962  
                              motor_arc_move@direction 00AB  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4E5C  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 5832  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0CAE  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 596A  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 595A  
                                     ??_motor_arc_move 00A7  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3D8E  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5978  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00C9  
                           __size_of__parse_jump_steps 014E  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 316C  
                           __end_of_flash_sector_write 4C94  
